var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
(function() {
  const e = document.createElement("link").relList;
  if (e && e.supports && e.supports("modulepreload")) return;
  for (const u of document.querySelectorAll('link[rel="modulepreload"]')) i(u);
  new MutationObserver((u) => {
    for (const y of u) if (y.type === "childList") for (const t of y.addedNodes) t.tagName === "LINK" && t.rel === "modulepreload" && i(t);
  }).observe(document, { childList: true, subtree: true });
  function n(u) {
    const y = {};
    return u.integrity && (y.integrity = u.integrity), u.referrerPolicy && (y.referrerPolicy = u.referrerPolicy), u.crossOrigin === "use-credentials" ? y.credentials = "include" : u.crossOrigin === "anonymous" ? y.credentials = "omit" : y.credentials = "same-origin", y;
  }
  function i(u) {
    if (u.ep) return;
    u.ep = true;
    const y = n(u);
    fetch(u.href, y);
  }
})();
var vc = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function Kd(v) {
  return v && v.__esModule && Object.prototype.hasOwnProperty.call(v, "default") ? v.default : v;
}
function sy(v) {
  if (Object.prototype.hasOwnProperty.call(v, "__esModule")) return v;
  var e = v.default;
  if (typeof e == "function") {
    var n = function i() {
      return this instanceof i ? Reflect.construct(e, arguments, this.constructor) : e.apply(this, arguments);
    };
    n.prototype = e.prototype;
  } else n = {};
  return Object.defineProperty(n, "__esModule", { value: true }), Object.keys(v).forEach(function(i) {
    var u = Object.getOwnPropertyDescriptor(v, i);
    Object.defineProperty(n, i, u.get ? u : { enumerable: true, get: function() {
      return v[i];
    } });
  }), n;
}
var Mc = { exports: {} }, Ef;
function uy() {
  return Ef || (Ef = 1, function(v, e) {
    var n = {};
    /*! For license information please see stellar-sdk.min.js.LICENSE.txt */
    (function(i, u) {
      v.exports = u();
    })(self, () => (() => {
      var i = { 15: (t, o, s) => {
        var c = s(8287).Buffer;
        Object.defineProperty(o, "__esModule", { value: true }), o.FastSigning = void 0, o.generate = function(r) {
          return h.generate(r);
        }, o.sign = function(r, m) {
          return h.sign(r, m);
        }, o.verify = function(r, m, g) {
          return h.verify(r, m, g);
        };
        var h = {};
        o.FastSigning = typeof window > "u" ? function() {
          var r;
          try {
            r = s(Object(function() {
              var m = new Error("Cannot find module 'sodium-native'");
              throw m.code = "MODULE_NOT_FOUND", m;
            }()));
          } catch {
            return f();
          }
          return Object.keys(r).length ? (h.generate = function(m) {
            var g = c.alloc(r.crypto_sign_PUBLICKEYBYTES), a = c.alloc(r.crypto_sign_SECRETKEYBYTES);
            return r.crypto_sign_seed_keypair(g, a, m), g;
          }, h.sign = function(m, g) {
            m = c.from(m);
            var a = c.alloc(r.crypto_sign_BYTES);
            return r.crypto_sign_detached(a, m, g), a;
          }, h.verify = function(m, g, a) {
            m = c.from(m);
            try {
              return r.crypto_sign_verify_detached(g, m, a);
            } catch {
              return false;
            }
          }, true) : f();
        }() : f();
        function f() {
          var r = s(4940);
          return h.generate = function(m) {
            var g = new Uint8Array(m), a = r.sign.keyPair.fromSeed(g);
            return c.from(a.publicKey);
          }, h.sign = function(m, g) {
            m = c.from(m), m = new Uint8Array(m.toJSON().data), g = new Uint8Array(g.toJSON().data);
            var a = r.sign.detached(m, g);
            return c.from(a);
          }, h.verify = function(m, g, a) {
            return m = c.from(m), m = new Uint8Array(m.toJSON().data), g = new Uint8Array(g.toJSON().data), a = new Uint8Array(a.toJSON().data), r.sign.detached.verify(m, g, a);
          }, false;
        }
      }, 41: (t, o, s) => {
        var c = s(655), h = s(8068), f = s(9675), r = s(5795);
        t.exports = function(m, g, a) {
          if (!m || typeof m != "object" && typeof m != "function") throw new f("`obj` must be an object or a function`");
          if (typeof g != "string" && typeof g != "symbol") throw new f("`property` must be a string or a symbol`");
          if (arguments.length > 3 && typeof arguments[3] != "boolean" && arguments[3] !== null) throw new f("`nonEnumerable`, if provided, must be a boolean or null");
          if (arguments.length > 4 && typeof arguments[4] != "boolean" && arguments[4] !== null) throw new f("`nonWritable`, if provided, must be a boolean or null");
          if (arguments.length > 5 && typeof arguments[5] != "boolean" && arguments[5] !== null) throw new f("`nonConfigurable`, if provided, must be a boolean or null");
          if (arguments.length > 6 && typeof arguments[6] != "boolean") throw new f("`loose`, if provided, must be a boolean");
          var l = arguments.length > 3 ? arguments[3] : null, d = arguments.length > 4 ? arguments[4] : null, b = arguments.length > 5 ? arguments[5] : null, S = arguments.length > 6 && arguments[6], E = !!r && r(m, g);
          if (c) c(m, g, { configurable: b === null && E ? E.configurable : !b, enumerable: l === null && E ? E.enumerable : !l, value: a, writable: d === null && E ? E.writable : !d });
          else {
            if (!S && (l || d || b)) throw new h("This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.");
            m[g] = a;
          }
        };
      }, 76: (t) => {
        t.exports = Function.prototype.call;
      }, 149: (t, o, s) => {
        Object.defineProperty(o, "__esModule", { value: true }), o.restoreFootprint = function() {
          var f = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, r = new h.default.RestoreFootprintOp({ ext: new h.default.ExtensionPoint(0) }), m = { body: h.default.OperationBody.restoreFootprint(r) };
          return this.setSourceAccount(m, f ?? {}), new h.default.Operation(m);
        };
        var c, h = (c = s(1918)) && c.__esModule ? c : { default: c };
      }, 225: (t, o, s) => {
        Object.defineProperty(o, "__esModule", { value: true }), o.SignerKey = void 0;
        var c, h = (c = s(1918)) && c.__esModule ? c : { default: c }, f = s(7120);
        function r(a) {
          return r = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(l) {
            return typeof l;
          } : function(l) {
            return l && typeof Symbol == "function" && l.constructor === Symbol && l !== Symbol.prototype ? "symbol" : typeof l;
          }, r(a);
        }
        function m(a, l) {
          for (var d = 0; d < l.length; d++) {
            var b = l[d];
            b.enumerable = b.enumerable || false, b.configurable = true, "value" in b && (b.writable = true), Object.defineProperty(a, g(b.key), b);
          }
        }
        function g(a) {
          var l = function(d, b) {
            if (r(d) != "object" || !d) return d;
            var S = d[Symbol.toPrimitive];
            if (S !== void 0) {
              var E = S.call(d, b);
              if (r(E) != "object") return E;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(d);
          }(a, "string");
          return r(l) == "symbol" ? l : l + "";
        }
        o.SignerKey = function() {
          return function(a, l, d) {
            return d && m(a, d), Object.defineProperty(a, "prototype", { writable: false }), a;
          }(function a() {
            (function(l, d) {
              if (!(l instanceof d)) throw new TypeError("Cannot call a class as a function");
            })(this, a);
          }, null, [{ key: "decodeAddress", value: function(a) {
            var l = { ed25519PublicKey: h.default.SignerKey.signerKeyTypeEd25519, preAuthTx: h.default.SignerKey.signerKeyTypePreAuthTx, sha256Hash: h.default.SignerKey.signerKeyTypeHashX, signedPayload: h.default.SignerKey.signerKeyTypeEd25519SignedPayload }, d = f.StrKey.getVersionByteForPrefix(a), b = l[d];
            if (!b) throw new Error("invalid signer key type (".concat(d, ")"));
            var S = (0, f.decodeCheck)(d, a);
            return b(d === "signedPayload" ? new h.default.SignerKeyEd25519SignedPayload({ ed25519: S.slice(0, 32), payload: S.slice(36) }) : S);
          } }, { key: "encodeSignerKey", value: function(a) {
            var l, d;
            switch (a.switch()) {
              case h.default.SignerKeyType.signerKeyTypeEd25519():
                l = "ed25519PublicKey", d = a.value();
                break;
              case h.default.SignerKeyType.signerKeyTypePreAuthTx():
                l = "preAuthTx", d = a.value();
                break;
              case h.default.SignerKeyType.signerKeyTypeHashX():
                l = "sha256Hash", d = a.value();
                break;
              case h.default.SignerKeyType.signerKeyTypeEd25519SignedPayload():
                l = "signedPayload", d = a.ed25519SignedPayload().toXDR("raw");
                break;
              default:
                throw new Error("invalid SignerKey (type: ".concat(a.switch(), ")"));
            }
            return (0, f.encodeCheck)(l, d);
          } }]);
        }();
      }, 251: (t, o) => {
        o.read = function(s, c, h, f, r) {
          var m, g, a = 8 * r - f - 1, l = (1 << a) - 1, d = l >> 1, b = -7, S = h ? r - 1 : 0, E = h ? -1 : 1, R = s[c + S];
          for (S += E, m = R & (1 << -b) - 1, R >>= -b, b += a; b > 0; m = 256 * m + s[c + S], S += E, b -= 8) ;
          for (g = m & (1 << -b) - 1, m >>= -b, b += f; b > 0; g = 256 * g + s[c + S], S += E, b -= 8) ;
          if (m === 0) m = 1 - d;
          else {
            if (m === l) return g ? NaN : 1 / 0 * (R ? -1 : 1);
            g += Math.pow(2, f), m -= d;
          }
          return (R ? -1 : 1) * g * Math.pow(2, m - f);
        }, o.write = function(s, c, h, f, r, m) {
          var g, a, l, d = 8 * m - r - 1, b = (1 << d) - 1, S = b >> 1, E = r === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, R = f ? 0 : m - 1, k = f ? 1 : -1, w = c < 0 || c === 0 && 1 / c < 0 ? 1 : 0;
          for (c = Math.abs(c), isNaN(c) || c === 1 / 0 ? (a = isNaN(c) ? 1 : 0, g = b) : (g = Math.floor(Math.log(c) / Math.LN2), c * (l = Math.pow(2, -g)) < 1 && (g--, l *= 2), (c += g + S >= 1 ? E / l : E * Math.pow(2, 1 - S)) * l >= 2 && (g++, l /= 2), g + S >= b ? (a = 0, g = b) : g + S >= 1 ? (a = (c * l - 1) * Math.pow(2, r), g += S) : (a = c * Math.pow(2, S - 1) * Math.pow(2, r), g = 0)); r >= 8; s[h + R] = 255 & a, R += k, a /= 256, r -= 8) ;
          for (g = g << r | a, d += r; d > 0; s[h + R] = 255 & g, R += k, g /= 256, d -= 8) ;
          s[h + R - k] |= 128 * w;
        };
      }, 345: (t, o, s) => {
        t.exports = s(7007).EventEmitter;
      }, 356: (t, o, s) => {
        Object.defineProperty(o, "__esModule", { value: true });
        var c = { xdr: true, cereal: true, hash: true, sign: true, verify: true, FastSigning: true, getLiquidityPoolId: true, LiquidityPoolFeeV18: true, Keypair: true, UnsignedHyper: true, Hyper: true, TransactionBase: true, Transaction: true, FeeBumpTransaction: true, TransactionBuilder: true, TimeoutInfinite: true, BASE_FEE: true, Asset: true, LiquidityPoolAsset: true, LiquidityPoolId: true, Operation: true, AuthRequiredFlag: true, AuthRevocableFlag: true, AuthImmutableFlag: true, AuthClawbackEnabledFlag: true, Account: true, MuxedAccount: true, Claimant: true, Networks: true, StrKey: true, SignerKey: true, Soroban: true, decodeAddressToMuxedAccount: true, encodeMuxedAccountToAddress: true, extractBaseAddress: true, encodeMuxedAccount: true, Contract: true, Address: true };
        Object.defineProperty(o, "Account", { enumerable: true, get: function() {
          return q.Account;
        } }), Object.defineProperty(o, "Address", { enumerable: true, get: function() {
          return ue.Address;
        } }), Object.defineProperty(o, "Asset", { enumerable: true, get: function() {
          return R.Asset;
        } }), Object.defineProperty(o, "AuthClawbackEnabledFlag", { enumerable: true, get: function() {
          return F.AuthClawbackEnabledFlag;
        } }), Object.defineProperty(o, "AuthImmutableFlag", { enumerable: true, get: function() {
          return F.AuthImmutableFlag;
        } }), Object.defineProperty(o, "AuthRequiredFlag", { enumerable: true, get: function() {
          return F.AuthRequiredFlag;
        } }), Object.defineProperty(o, "AuthRevocableFlag", { enumerable: true, get: function() {
          return F.AuthRevocableFlag;
        } }), Object.defineProperty(o, "BASE_FEE", { enumerable: true, get: function() {
          return E.BASE_FEE;
        } }), Object.defineProperty(o, "Claimant", { enumerable: true, get: function() {
          return H.Claimant;
        } }), Object.defineProperty(o, "Contract", { enumerable: true, get: function() {
          return Z.Contract;
        } }), Object.defineProperty(o, "FastSigning", { enumerable: true, get: function() {
          return m.FastSigning;
        } }), Object.defineProperty(o, "FeeBumpTransaction", { enumerable: true, get: function() {
          return S.FeeBumpTransaction;
        } }), Object.defineProperty(o, "Hyper", { enumerable: true, get: function() {
          return l.Hyper;
        } }), Object.defineProperty(o, "Keypair", { enumerable: true, get: function() {
          return a.Keypair;
        } }), Object.defineProperty(o, "LiquidityPoolAsset", { enumerable: true, get: function() {
          return k.LiquidityPoolAsset;
        } }), Object.defineProperty(o, "LiquidityPoolFeeV18", { enumerable: true, get: function() {
          return g.LiquidityPoolFeeV18;
        } }), Object.defineProperty(o, "LiquidityPoolId", { enumerable: true, get: function() {
          return w.LiquidityPoolId;
        } }), Object.defineProperty(o, "MuxedAccount", { enumerable: true, get: function() {
          return N.MuxedAccount;
        } }), Object.defineProperty(o, "Networks", { enumerable: true, get: function() {
          return _.Networks;
        } }), Object.defineProperty(o, "Operation", { enumerable: true, get: function() {
          return F.Operation;
        } }), Object.defineProperty(o, "SignerKey", { enumerable: true, get: function() {
          return L.SignerKey;
        } }), Object.defineProperty(o, "Soroban", { enumerable: true, get: function() {
          return j.Soroban;
        } }), Object.defineProperty(o, "StrKey", { enumerable: true, get: function() {
          return x.StrKey;
        } }), Object.defineProperty(o, "TimeoutInfinite", { enumerable: true, get: function() {
          return E.TimeoutInfinite;
        } }), Object.defineProperty(o, "Transaction", { enumerable: true, get: function() {
          return b.Transaction;
        } }), Object.defineProperty(o, "TransactionBase", { enumerable: true, get: function() {
          return d.TransactionBase;
        } }), Object.defineProperty(o, "TransactionBuilder", { enumerable: true, get: function() {
          return E.TransactionBuilder;
        } }), Object.defineProperty(o, "UnsignedHyper", { enumerable: true, get: function() {
          return l.UnsignedHyper;
        } }), Object.defineProperty(o, "cereal", { enumerable: true, get: function() {
          return f.default;
        } }), Object.defineProperty(o, "decodeAddressToMuxedAccount", { enumerable: true, get: function() {
          return z.decodeAddressToMuxedAccount;
        } }), o.default = void 0, Object.defineProperty(o, "encodeMuxedAccount", { enumerable: true, get: function() {
          return z.encodeMuxedAccount;
        } }), Object.defineProperty(o, "encodeMuxedAccountToAddress", { enumerable: true, get: function() {
          return z.encodeMuxedAccountToAddress;
        } }), Object.defineProperty(o, "extractBaseAddress", { enumerable: true, get: function() {
          return z.extractBaseAddress;
        } }), Object.defineProperty(o, "getLiquidityPoolId", { enumerable: true, get: function() {
          return g.getLiquidityPoolId;
        } }), Object.defineProperty(o, "hash", { enumerable: true, get: function() {
          return r.hash;
        } }), Object.defineProperty(o, "sign", { enumerable: true, get: function() {
          return m.sign;
        } }), Object.defineProperty(o, "verify", { enumerable: true, get: function() {
          return m.verify;
        } }), Object.defineProperty(o, "xdr", { enumerable: true, get: function() {
          return h.default;
        } });
        var h = K(s(1918)), f = K(s(3335)), r = s(9152), m = s(15), g = s(5578), a = s(6691), l = s(3740), d = s(3758), b = s(380), S = s(9260), E = s(6396), R = s(1764), k = s(2262), w = s(9353), F = s(7237), I = s(4172);
        Object.keys(I).forEach(function(ie) {
          ie !== "default" && ie !== "__esModule" && (Object.prototype.hasOwnProperty.call(c, ie) || ie in o && o[ie] === I[ie] || Object.defineProperty(o, ie, { enumerable: true, get: function() {
            return I[ie];
          } }));
        });
        var q = s(2135), N = s(2243), H = s(1387), _ = s(6202), x = s(7120), L = s(225), j = s(4062), z = s(6160), Z = s(7452), ue = s(1180), $ = s(8549);
        Object.keys($).forEach(function(ie) {
          ie !== "default" && ie !== "__esModule" && (Object.prototype.hasOwnProperty.call(c, ie) || ie in o && o[ie] === $[ie] || Object.defineProperty(o, ie, { enumerable: true, get: function() {
            return $[ie];
          } }));
        });
        var X = s(7177);
        Object.keys(X).forEach(function(ie) {
          ie !== "default" && ie !== "__esModule" && (Object.prototype.hasOwnProperty.call(c, ie) || ie in o && o[ie] === X[ie] || Object.defineProperty(o, ie, { enumerable: true, get: function() {
            return X[ie];
          } }));
        });
        var J = s(3919);
        Object.keys(J).forEach(function(ie) {
          ie !== "default" && ie !== "__esModule" && (Object.prototype.hasOwnProperty.call(c, ie) || ie in o && o[ie] === J[ie] || Object.defineProperty(o, ie, { enumerable: true, get: function() {
            return J[ie];
          } }));
        });
        var B = s(4842);
        Object.keys(B).forEach(function(ie) {
          ie !== "default" && ie !== "__esModule" && (Object.prototype.hasOwnProperty.call(c, ie) || ie in o && o[ie] === B[ie] || Object.defineProperty(o, ie, { enumerable: true, get: function() {
            return B[ie];
          } }));
        });
        var Q = s(5328);
        Object.keys(Q).forEach(function(ie) {
          ie !== "default" && ie !== "__esModule" && (Object.prototype.hasOwnProperty.call(c, ie) || ie in o && o[ie] === Q[ie] || Object.defineProperty(o, ie, { enumerable: true, get: function() {
            return Q[ie];
          } }));
        });
        var ne = s(3564);
        function K(ie) {
          return ie && ie.__esModule ? ie : { default: ie };
        }
        Object.keys(ne).forEach(function(ie) {
          ie !== "default" && ie !== "__esModule" && (Object.prototype.hasOwnProperty.call(c, ie) || ie in o && o[ie] === ne[ie] || Object.defineProperty(o, ie, { enumerable: true, get: function() {
            return ne[ie];
          } }));
        }), o.default = t.exports;
      }, 380: (t, o, s) => {
        var c = s(8287).Buffer;
        function h(I) {
          return h = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(q) {
            return typeof q;
          } : function(q) {
            return q && typeof Symbol == "function" && q.constructor === Symbol && q !== Symbol.prototype ? "symbol" : typeof q;
          }, h(I);
        }
        Object.defineProperty(o, "__esModule", { value: true }), o.Transaction = void 0;
        var f, r = (f = s(1918)) && f.__esModule ? f : { default: f }, m = s(9152), g = s(7120), a = s(7237), l = s(4172), d = s(3758), b = s(6160);
        function S(I, q) {
          for (var N = 0; N < q.length; N++) {
            var H = q[N];
            H.enumerable = H.enumerable || false, H.configurable = true, "value" in H && (H.writable = true), Object.defineProperty(I, E(H.key), H);
          }
        }
        function E(I) {
          var q = function(N, H) {
            if (h(N) != "object" || !N) return N;
            var _ = N[Symbol.toPrimitive];
            if (_ !== void 0) {
              var x = _.call(N, H);
              if (h(x) != "object") return x;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(N);
          }(I, "string");
          return h(q) == "symbol" ? q : q + "";
        }
        function R(I, q, N) {
          return q = w(q), function(H, _) {
            if (_ && (h(_) == "object" || typeof _ == "function")) return _;
            if (_ !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(x) {
              if (x === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return x;
            }(H);
          }(I, k() ? Reflect.construct(q, N || [], w(I).constructor) : q.apply(I, N));
        }
        function k() {
          try {
            var I = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (k = function() {
            return !!I;
          })();
        }
        function w(I) {
          return w = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(q) {
            return q.__proto__ || Object.getPrototypeOf(q);
          }, w(I);
        }
        function F(I, q) {
          return F = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(N, H) {
            return N.__proto__ = H, N;
          }, F(I, q);
        }
        o.Transaction = function(I) {
          function q(N, H) {
            var _;
            if (function(Q, ne) {
              if (!(Q instanceof ne)) throw new TypeError("Cannot call a class as a function");
            }(this, q), typeof N == "string") {
              var x = c.from(N, "base64");
              N = r.default.TransactionEnvelope.fromXDR(x);
            }
            var L = N.switch();
            if (L !== r.default.EnvelopeType.envelopeTypeTxV0() && L !== r.default.EnvelopeType.envelopeTypeTx()) throw new Error("Invalid TransactionEnvelope: expected an envelopeTypeTxV0 or envelopeTypeTx but received an ".concat(L.name, "."));
            var j = N.value(), z = j.tx(), Z = z.fee().toString();
            (_ = R(this, q, [z, (j.signatures() || []).slice(), Z, H]))._envelopeType = L, _._memo = z.memo(), _._sequence = z.seqNum().toString(), _._envelopeType === r.default.EnvelopeType.envelopeTypeTxV0() ? _._source = g.StrKey.encodeEd25519PublicKey(_.tx.sourceAccountEd25519()) : _._source = (0, b.encodeMuxedAccountToAddress)(_.tx.sourceAccount());
            var ue = null, $ = null;
            switch (_._envelopeType) {
              case r.default.EnvelopeType.envelopeTypeTxV0():
                $ = z.timeBounds();
                break;
              case r.default.EnvelopeType.envelopeTypeTx():
                switch (z.cond().switch()) {
                  case r.default.PreconditionType.precondTime():
                    $ = z.cond().timeBounds();
                    break;
                  case r.default.PreconditionType.precondV2():
                    $ = (ue = z.cond().v2()).timeBounds();
                }
            }
            if ($ && (_._timeBounds = { minTime: $.minTime().toString(), maxTime: $.maxTime().toString() }), ue) {
              var X = ue.ledgerBounds();
              X && (_._ledgerBounds = { minLedger: X.minLedger(), maxLedger: X.maxLedger() });
              var J = ue.minSeqNum();
              J && (_._minAccountSequence = J.toString()), _._minAccountSequenceAge = ue.minSeqAge(), _._minAccountSequenceLedgerGap = ue.minSeqLedgerGap(), _._extraSigners = ue.extraSigners();
            }
            var B = z.operations() || [];
            return _._operations = B.map(function(Q) {
              return a.Operation.fromXDRObject(Q);
            }), _;
          }
          return function(N, H) {
            if (typeof H != "function" && H !== null) throw new TypeError("Super expression must either be null or a function");
            N.prototype = Object.create(H && H.prototype, { constructor: { value: N, writable: true, configurable: true } }), Object.defineProperty(N, "prototype", { writable: false }), H && F(N, H);
          }(q, I), function(N, H, _) {
            return H && S(N.prototype, H), Object.defineProperty(N, "prototype", { writable: false }), N;
          }(q, [{ key: "timeBounds", get: function() {
            return this._timeBounds;
          }, set: function(N) {
            throw new Error("Transaction is immutable");
          } }, { key: "ledgerBounds", get: function() {
            return this._ledgerBounds;
          }, set: function(N) {
            throw new Error("Transaction is immutable");
          } }, { key: "minAccountSequence", get: function() {
            return this._minAccountSequence;
          }, set: function(N) {
            throw new Error("Transaction is immutable");
          } }, { key: "minAccountSequenceAge", get: function() {
            return this._minAccountSequenceAge;
          }, set: function(N) {
            throw new Error("Transaction is immutable");
          } }, { key: "minAccountSequenceLedgerGap", get: function() {
            return this._minAccountSequenceLedgerGap;
          }, set: function(N) {
            throw new Error("Transaction is immutable");
          } }, { key: "extraSigners", get: function() {
            return this._extraSigners;
          }, set: function(N) {
            throw new Error("Transaction is immutable");
          } }, { key: "sequence", get: function() {
            return this._sequence;
          }, set: function(N) {
            throw new Error("Transaction is immutable");
          } }, { key: "source", get: function() {
            return this._source;
          }, set: function(N) {
            throw new Error("Transaction is immutable");
          } }, { key: "operations", get: function() {
            return this._operations;
          }, set: function(N) {
            throw new Error("Transaction is immutable");
          } }, { key: "memo", get: function() {
            return l.Memo.fromXDRObject(this._memo);
          }, set: function(N) {
            throw new Error("Transaction is immutable");
          } }, { key: "signatureBase", value: function() {
            var N = this.tx;
            this._envelopeType === r.default.EnvelopeType.envelopeTypeTxV0() && (N = r.default.Transaction.fromXDR(c.concat([r.default.PublicKeyType.publicKeyTypeEd25519().toXDR(), N.toXDR()])));
            var H = new r.default.TransactionSignaturePayloadTaggedTransaction.envelopeTypeTx(N);
            return new r.default.TransactionSignaturePayload({ networkId: r.default.Hash.fromXDR((0, m.hash)(this.networkPassphrase)), taggedTransaction: H }).toXDR();
          } }, { key: "toEnvelope", value: function() {
            var N, H = this.tx.toXDR(), _ = this.signatures.slice();
            switch (this._envelopeType) {
              case r.default.EnvelopeType.envelopeTypeTxV0():
                N = new r.default.TransactionEnvelope.envelopeTypeTxV0(new r.default.TransactionV0Envelope({ tx: r.default.TransactionV0.fromXDR(H), signatures: _ }));
                break;
              case r.default.EnvelopeType.envelopeTypeTx():
                N = new r.default.TransactionEnvelope.envelopeTypeTx(new r.default.TransactionV1Envelope({ tx: r.default.Transaction.fromXDR(H), signatures: _ }));
                break;
              default:
                throw new Error("Invalid TransactionEnvelope: expected an envelopeTypeTxV0 or envelopeTypeTx but received an ".concat(this._envelopeType.name, "."));
            }
            return N;
          } }, { key: "getClaimableBalanceId", value: function(N) {
            if (!Number.isInteger(N) || N < 0 || N >= this.operations.length) throw new RangeError("invalid operation index");
            var H = this.operations[N];
            try {
              H = a.Operation.createClaimableBalance(H);
            } catch (j) {
              throw new TypeError("expected createClaimableBalance, got ".concat(H.type, ": ").concat(j));
            }
            var _ = g.StrKey.decodeEd25519PublicKey((0, b.extractBaseAddress)(this.source)), x = r.default.HashIdPreimage.envelopeTypeOpId(new r.default.HashIdPreimageOperationId({ sourceAccount: r.default.AccountId.publicKeyTypeEd25519(_), seqNum: r.default.SequenceNumber.fromString(this.sequence), opNum: N })), L = (0, m.hash)(x.toXDR("raw"));
            return r.default.ClaimableBalanceId.claimableBalanceIdTypeV0(L).toXDR("hex");
          } }]);
        }(d.TransactionBase);
      }, 392: (t, o, s) => {
        var c = s(2861).Buffer;
        function h(f, r) {
          this._block = c.alloc(f), this._finalSize = r, this._blockSize = f, this._len = 0;
        }
        h.prototype.update = function(f, r) {
          typeof f == "string" && (r = r || "utf8", f = c.from(f, r));
          for (var m = this._block, g = this._blockSize, a = f.length, l = this._len, d = 0; d < a; ) {
            for (var b = l % g, S = Math.min(a - d, g - b), E = 0; E < S; E++) m[b + E] = f[d + E];
            d += S, (l += S) % g == 0 && this._update(m);
          }
          return this._len += a, this;
        }, h.prototype.digest = function(f) {
          var r = this._len % this._blockSize;
          this._block[r] = 128, this._block.fill(0, r + 1), r >= this._finalSize && (this._update(this._block), this._block.fill(0));
          var m = 8 * this._len;
          if (m <= 4294967295) this._block.writeUInt32BE(m, this._blockSize - 4);
          else {
            var g = (4294967295 & m) >>> 0, a = (m - g) / 4294967296;
            this._block.writeUInt32BE(a, this._blockSize - 8), this._block.writeUInt32BE(g, this._blockSize - 4);
          }
          this._update(this._block);
          var l = this._hash();
          return f ? l.toString(f) : l;
        }, h.prototype._update = function() {
          throw new Error("_update must be implemented by subclass");
        }, t.exports = h;
      }, 414: (t) => {
        t.exports = Math.round;
      }, 453: (t, o, s) => {
        var c, h = s(9612), f = s(9383), r = s(1237), m = s(9290), g = s(9538), a = s(8068), l = s(9675), d = s(5345), b = s(1514), S = s(8968), E = s(6188), R = s(8002), k = s(5880), w = s(414), F = s(3093), I = Function, q = function(xe) {
          try {
            return I('"use strict"; return (' + xe + ").constructor;")();
          } catch {
          }
        }, N = s(5795), H = s(655), _ = function() {
          throw new l();
        }, x = N ? function() {
          try {
            return _;
          } catch {
            try {
              return N(arguments, "callee").get;
            } catch {
              return _;
            }
          }
        }() : _, L = s(4039)(), j = s(3628), z = s(1064), Z = s(8648), ue = s(1002), $ = s(76), X = {}, J = typeof Uint8Array < "u" && j ? j(Uint8Array) : c, B = { __proto__: null, "%AggregateError%": typeof AggregateError > "u" ? c : AggregateError, "%Array%": Array, "%ArrayBuffer%": typeof ArrayBuffer > "u" ? c : ArrayBuffer, "%ArrayIteratorPrototype%": L && j ? j([][Symbol.iterator]()) : c, "%AsyncFromSyncIteratorPrototype%": c, "%AsyncFunction%": X, "%AsyncGenerator%": X, "%AsyncGeneratorFunction%": X, "%AsyncIteratorPrototype%": X, "%Atomics%": typeof Atomics > "u" ? c : Atomics, "%BigInt%": typeof BigInt > "u" ? c : BigInt, "%BigInt64Array%": typeof BigInt64Array > "u" ? c : BigInt64Array, "%BigUint64Array%": typeof BigUint64Array > "u" ? c : BigUint64Array, "%Boolean%": Boolean, "%DataView%": typeof DataView > "u" ? c : DataView, "%Date%": Date, "%decodeURI%": decodeURI, "%decodeURIComponent%": decodeURIComponent, "%encodeURI%": encodeURI, "%encodeURIComponent%": encodeURIComponent, "%Error%": f, "%eval%": eval, "%EvalError%": r, "%Float16Array%": typeof Float16Array > "u" ? c : Float16Array, "%Float32Array%": typeof Float32Array > "u" ? c : Float32Array, "%Float64Array%": typeof Float64Array > "u" ? c : Float64Array, "%FinalizationRegistry%": typeof FinalizationRegistry > "u" ? c : FinalizationRegistry, "%Function%": I, "%GeneratorFunction%": X, "%Int8Array%": typeof Int8Array > "u" ? c : Int8Array, "%Int16Array%": typeof Int16Array > "u" ? c : Int16Array, "%Int32Array%": typeof Int32Array > "u" ? c : Int32Array, "%isFinite%": isFinite, "%isNaN%": isNaN, "%IteratorPrototype%": L && j ? j(j([][Symbol.iterator]())) : c, "%JSON%": typeof JSON == "object" ? JSON : c, "%Map%": typeof Map > "u" ? c : Map, "%MapIteratorPrototype%": typeof Map < "u" && L && j ? j((/* @__PURE__ */ new Map())[Symbol.iterator]()) : c, "%Math%": Math, "%Number%": Number, "%Object%": h, "%Object.getOwnPropertyDescriptor%": N, "%parseFloat%": parseFloat, "%parseInt%": parseInt, "%Promise%": typeof Promise > "u" ? c : Promise, "%Proxy%": typeof Proxy > "u" ? c : Proxy, "%RangeError%": m, "%ReferenceError%": g, "%Reflect%": typeof Reflect > "u" ? c : Reflect, "%RegExp%": RegExp, "%Set%": typeof Set > "u" ? c : Set, "%SetIteratorPrototype%": typeof Set < "u" && L && j ? j((/* @__PURE__ */ new Set())[Symbol.iterator]()) : c, "%SharedArrayBuffer%": typeof SharedArrayBuffer > "u" ? c : SharedArrayBuffer, "%String%": String, "%StringIteratorPrototype%": L && j ? j(""[Symbol.iterator]()) : c, "%Symbol%": L ? Symbol : c, "%SyntaxError%": a, "%ThrowTypeError%": x, "%TypedArray%": J, "%TypeError%": l, "%Uint8Array%": typeof Uint8Array > "u" ? c : Uint8Array, "%Uint8ClampedArray%": typeof Uint8ClampedArray > "u" ? c : Uint8ClampedArray, "%Uint16Array%": typeof Uint16Array > "u" ? c : Uint16Array, "%Uint32Array%": typeof Uint32Array > "u" ? c : Uint32Array, "%URIError%": d, "%WeakMap%": typeof WeakMap > "u" ? c : WeakMap, "%WeakRef%": typeof WeakRef > "u" ? c : WeakRef, "%WeakSet%": typeof WeakSet > "u" ? c : WeakSet, "%Function.prototype.call%": $, "%Function.prototype.apply%": ue, "%Object.defineProperty%": H, "%Object.getPrototypeOf%": z, "%Math.abs%": b, "%Math.floor%": S, "%Math.max%": E, "%Math.min%": R, "%Math.pow%": k, "%Math.round%": w, "%Math.sign%": F, "%Reflect.getPrototypeOf%": Z };
        if (j) try {
          null.error;
        } catch (xe) {
          var Q = j(j(xe));
          B["%Error.prototype%"] = Q;
        }
        var ne = function xe(Ve) {
          var _e;
          if (Ve === "%AsyncFunction%") _e = q("async function () {}");
          else if (Ve === "%GeneratorFunction%") _e = q("function* () {}");
          else if (Ve === "%AsyncGeneratorFunction%") _e = q("async function* () {}");
          else if (Ve === "%AsyncGenerator%") {
            var Be = xe("%AsyncGeneratorFunction%");
            Be && (_e = Be.prototype);
          } else if (Ve === "%AsyncIteratorPrototype%") {
            var Qe = xe("%AsyncGenerator%");
            Qe && j && (_e = j(Qe.prototype));
          }
          return B[Ve] = _e, _e;
        }, K = { __proto__: null, "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"], "%ArrayPrototype%": ["Array", "prototype"], "%ArrayProto_entries%": ["Array", "prototype", "entries"], "%ArrayProto_forEach%": ["Array", "prototype", "forEach"], "%ArrayProto_keys%": ["Array", "prototype", "keys"], "%ArrayProto_values%": ["Array", "prototype", "values"], "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"], "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"], "%AsyncGeneratorPrototype%": ["AsyncGeneratorFunction", "prototype", "prototype"], "%BooleanPrototype%": ["Boolean", "prototype"], "%DataViewPrototype%": ["DataView", "prototype"], "%DatePrototype%": ["Date", "prototype"], "%ErrorPrototype%": ["Error", "prototype"], "%EvalErrorPrototype%": ["EvalError", "prototype"], "%Float32ArrayPrototype%": ["Float32Array", "prototype"], "%Float64ArrayPrototype%": ["Float64Array", "prototype"], "%FunctionPrototype%": ["Function", "prototype"], "%Generator%": ["GeneratorFunction", "prototype"], "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"], "%Int8ArrayPrototype%": ["Int8Array", "prototype"], "%Int16ArrayPrototype%": ["Int16Array", "prototype"], "%Int32ArrayPrototype%": ["Int32Array", "prototype"], "%JSONParse%": ["JSON", "parse"], "%JSONStringify%": ["JSON", "stringify"], "%MapPrototype%": ["Map", "prototype"], "%NumberPrototype%": ["Number", "prototype"], "%ObjectPrototype%": ["Object", "prototype"], "%ObjProto_toString%": ["Object", "prototype", "toString"], "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"], "%PromisePrototype%": ["Promise", "prototype"], "%PromiseProto_then%": ["Promise", "prototype", "then"], "%Promise_all%": ["Promise", "all"], "%Promise_reject%": ["Promise", "reject"], "%Promise_resolve%": ["Promise", "resolve"], "%RangeErrorPrototype%": ["RangeError", "prototype"], "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"], "%RegExpPrototype%": ["RegExp", "prototype"], "%SetPrototype%": ["Set", "prototype"], "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"], "%StringPrototype%": ["String", "prototype"], "%SymbolPrototype%": ["Symbol", "prototype"], "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"], "%TypedArrayPrototype%": ["TypedArray", "prototype"], "%TypeErrorPrototype%": ["TypeError", "prototype"], "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"], "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"], "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"], "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"], "%URIErrorPrototype%": ["URIError", "prototype"], "%WeakMapPrototype%": ["WeakMap", "prototype"], "%WeakSetPrototype%": ["WeakSet", "prototype"] }, ie = s(6743), ce = s(9957), ye = ie.call($, Array.prototype.concat), oe = ie.call(ue, Array.prototype.splice), se = ie.call($, String.prototype.replace), re = ie.call($, String.prototype.slice), ge = ie.call($, RegExp.prototype.exec), Te = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g, pe = /\\(\\)?/g, Oe = function(xe, Ve) {
          var _e, Be = xe;
          if (ce(K, Be) && (Be = "%" + (_e = K[Be])[0] + "%"), ce(B, Be)) {
            var Qe = B[Be];
            if (Qe === X && (Qe = ne(Be)), Qe === void 0 && !Ve) throw new l("intrinsic " + xe + " exists, but is not available. Please file an issue!");
            return { alias: _e, name: Be, value: Qe };
          }
          throw new a("intrinsic " + xe + " does not exist!");
        };
        t.exports = function(xe, Ve) {
          if (typeof xe != "string" || xe.length === 0) throw new l("intrinsic name must be a non-empty string");
          if (arguments.length > 1 && typeof Ve != "boolean") throw new l('"allowMissing" argument must be a boolean');
          if (ge(/^%?[^%]*%?$/, xe) === null) throw new a("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
          var _e = function(Y) {
            var ae = re(Y, 0, 1), W = re(Y, -1);
            if (ae === "%" && W !== "%") throw new a("invalid intrinsic syntax, expected closing `%`");
            if (W === "%" && ae !== "%") throw new a("invalid intrinsic syntax, expected opening `%`");
            var de = [];
            return se(Y, Te, function(tt, Ne, ut, Ze) {
              de[de.length] = ut ? se(Ze, pe, "$1") : Ne || tt;
            }), de;
          }(xe), Be = _e.length > 0 ? _e[0] : "", Qe = Oe("%" + Be + "%", Ve), ee = Qe.name, P = Qe.value, T = false, O = Qe.alias;
          O && (Be = O[0], oe(_e, ye([0, 1], O)));
          for (var V = 1, D = true; V < _e.length; V += 1) {
            var C = _e[V], p = re(C, 0, 1), A = re(C, -1);
            if ((p === '"' || p === "'" || p === "`" || A === '"' || A === "'" || A === "`") && p !== A) throw new a("property names with quotes must have matching quotes");
            if (C !== "constructor" && D || (T = true), ce(B, ee = "%" + (Be += "." + C) + "%")) P = B[ee];
            else if (P != null) {
              if (!(C in P)) {
                if (!Ve) throw new l("base intrinsic for " + xe + " exists, but the property is not available.");
                return;
              }
              if (N && V + 1 >= _e.length) {
                var U = N(P, C);
                P = (D = !!U) && "get" in U && !("originalValue" in U.get) ? U.get : P[C];
              } else D = ce(P, C), P = P[C];
              D && !T && (B[ee] = P);
            }
          }
          return P;
        };
      }, 487: (t, o, s) => {
        var c = s(6897), h = s(655), f = s(3126), r = s(2205);
        t.exports = function(m) {
          var g = f(arguments), a = m.length - (arguments.length - 1);
          return c(g, 1 + (a > 0 ? a : 0), true);
        }, h ? h(t.exports, "apply", { value: r }) : t.exports.apply = r;
      }, 507: (t, o, s) => {
        var c = s(453), h = s(6556), f = s(8859), r = s(9675), m = c("%Map%", true), g = h("Map.prototype.get", true), a = h("Map.prototype.set", true), l = h("Map.prototype.has", true), d = h("Map.prototype.delete", true), b = h("Map.prototype.size", true);
        t.exports = !!m && function() {
          var S, E = { assert: function(R) {
            if (!E.has(R)) throw new r("Side channel does not contain " + f(R));
          }, delete: function(R) {
            if (S) {
              var k = d(S, R);
              return b(S) === 0 && (S = void 0), k;
            }
            return false;
          }, get: function(R) {
            if (S) return g(S, R);
          }, has: function(R) {
            return !!S && l(S, R);
          }, set: function(R, k) {
            S || (S = new m()), a(S, R, k);
          } };
          return E;
        };
      }, 537: (t, o, s) => {
        var c = Object.getOwnPropertyDescriptors || function(X) {
          for (var J = Object.keys(X), B = {}, Q = 0; Q < J.length; Q++) B[J[Q]] = Object.getOwnPropertyDescriptor(X, J[Q]);
          return B;
        }, h = /%[sdj%]/g;
        o.format = function(X) {
          if (!F(X)) {
            for (var J = [], B = 0; B < arguments.length; B++) J.push(g(arguments[B]));
            return J.join(" ");
          }
          B = 1;
          for (var Q = arguments, ne = Q.length, K = String(X).replace(h, function(ce) {
            if (ce === "%%") return "%";
            if (B >= ne) return ce;
            switch (ce) {
              case "%s":
                return String(Q[B++]);
              case "%d":
                return Number(Q[B++]);
              case "%j":
                try {
                  return JSON.stringify(Q[B++]);
                } catch {
                  return "[Circular]";
                }
              default:
                return ce;
            }
          }), ie = Q[B]; B < ne; ie = Q[++B]) k(ie) || !N(ie) ? K += " " + ie : K += " " + g(ie);
          return K;
        }, o.deprecate = function(X, J) {
          if (typeof process < "u" && process.noDeprecation === true) return X;
          if (typeof process > "u") return function() {
            return o.deprecate(X, J).apply(this, arguments);
          };
          var B = false;
          return function() {
            if (!B) {
              if (process.throwDeprecation) throw new Error(J);
              process.traceDeprecation ? console.trace(J) : console.error(J), B = true;
            }
            return X.apply(this, arguments);
          };
        };
        var f = {}, r = /^$/;
        if (n.NODE_DEBUG) {
          var m = n.NODE_DEBUG;
          m = m.replace(/[|\\{}()[\]^$+?.]/g, "\\$&").replace(/\*/g, ".*").replace(/,/g, "$|^").toUpperCase(), r = new RegExp("^" + m + "$", "i");
        }
        function g(X, J) {
          var B = { seen: [], stylize: l };
          return arguments.length >= 3 && (B.depth = arguments[2]), arguments.length >= 4 && (B.colors = arguments[3]), R(J) ? B.showHidden = J : J && o._extend(B, J), I(B.showHidden) && (B.showHidden = false), I(B.depth) && (B.depth = 2), I(B.colors) && (B.colors = false), I(B.customInspect) && (B.customInspect = true), B.colors && (B.stylize = a), d(B, X, B.depth);
        }
        function a(X, J) {
          var B = g.styles[J];
          return B ? "\x1B[" + g.colors[B][0] + "m" + X + "\x1B[" + g.colors[B][1] + "m" : X;
        }
        function l(X, J) {
          return X;
        }
        function d(X, J, B) {
          if (X.customInspect && J && x(J.inspect) && J.inspect !== o.inspect && (!J.constructor || J.constructor.prototype !== J)) {
            var Q = J.inspect(B, X);
            return F(Q) || (Q = d(X, Q, B)), Q;
          }
          var ne = function(ge, Te) {
            if (I(Te)) return ge.stylize("undefined", "undefined");
            if (F(Te)) {
              var pe = "'" + JSON.stringify(Te).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
              return ge.stylize(pe, "string");
            }
            if (w(Te)) return ge.stylize("" + Te, "number");
            if (R(Te)) return ge.stylize("" + Te, "boolean");
            if (k(Te)) return ge.stylize("null", "null");
          }(X, J);
          if (ne) return ne;
          var K = Object.keys(J), ie = function(ge) {
            var Te = {};
            return ge.forEach(function(pe, Oe) {
              Te[pe] = true;
            }), Te;
          }(K);
          if (X.showHidden && (K = Object.getOwnPropertyNames(J)), _(J) && (K.indexOf("message") >= 0 || K.indexOf("description") >= 0)) return b(J);
          if (K.length === 0) {
            if (x(J)) {
              var ce = J.name ? ": " + J.name : "";
              return X.stylize("[Function" + ce + "]", "special");
            }
            if (q(J)) return X.stylize(RegExp.prototype.toString.call(J), "regexp");
            if (H(J)) return X.stylize(Date.prototype.toString.call(J), "date");
            if (_(J)) return b(J);
          }
          var ye, oe = "", se = false, re = ["{", "}"];
          return E(J) && (se = true, re = ["[", "]"]), x(J) && (oe = " [Function" + (J.name ? ": " + J.name : "") + "]"), q(J) && (oe = " " + RegExp.prototype.toString.call(J)), H(J) && (oe = " " + Date.prototype.toUTCString.call(J)), _(J) && (oe = " " + b(J)), K.length !== 0 || se && J.length != 0 ? B < 0 ? q(J) ? X.stylize(RegExp.prototype.toString.call(J), "regexp") : X.stylize("[Object]", "special") : (X.seen.push(J), ye = se ? function(ge, Te, pe, Oe, xe) {
            for (var Ve = [], _e = 0, Be = Te.length; _e < Be; ++_e) Z(Te, String(_e)) ? Ve.push(S(ge, Te, pe, Oe, String(_e), true)) : Ve.push("");
            return xe.forEach(function(Qe) {
              Qe.match(/^\d+$/) || Ve.push(S(ge, Te, pe, Oe, Qe, true));
            }), Ve;
          }(X, J, B, ie, K) : K.map(function(ge) {
            return S(X, J, B, ie, ge, se);
          }), X.seen.pop(), function(ge, Te, pe) {
            var Oe = ge.reduce(function(xe, Ve) {
              return Ve.indexOf(`
`) >= 0, xe + Ve.replace(/\u001b\[\d\d?m/g, "").length + 1;
            }, 0);
            return Oe > 60 ? pe[0] + (Te === "" ? "" : Te + `
 `) + " " + ge.join(`,
  `) + " " + pe[1] : pe[0] + Te + " " + ge.join(", ") + " " + pe[1];
          }(ye, oe, re)) : re[0] + oe + re[1];
        }
        function b(X) {
          return "[" + Error.prototype.toString.call(X) + "]";
        }
        function S(X, J, B, Q, ne, K) {
          var ie, ce, ye;
          if ((ye = Object.getOwnPropertyDescriptor(J, ne) || { value: J[ne] }).get ? ce = ye.set ? X.stylize("[Getter/Setter]", "special") : X.stylize("[Getter]", "special") : ye.set && (ce = X.stylize("[Setter]", "special")), Z(Q, ne) || (ie = "[" + ne + "]"), ce || (X.seen.indexOf(ye.value) < 0 ? (ce = k(B) ? d(X, ye.value, null) : d(X, ye.value, B - 1)).indexOf(`
`) > -1 && (ce = K ? ce.split(`
`).map(function(oe) {
            return "  " + oe;
          }).join(`
`).slice(2) : `
` + ce.split(`
`).map(function(oe) {
            return "   " + oe;
          }).join(`
`)) : ce = X.stylize("[Circular]", "special")), I(ie)) {
            if (K && ne.match(/^\d+$/)) return ce;
            (ie = JSON.stringify("" + ne)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/) ? (ie = ie.slice(1, -1), ie = X.stylize(ie, "name")) : (ie = ie.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'"), ie = X.stylize(ie, "string"));
          }
          return ie + ": " + ce;
        }
        function E(X) {
          return Array.isArray(X);
        }
        function R(X) {
          return typeof X == "boolean";
        }
        function k(X) {
          return X === null;
        }
        function w(X) {
          return typeof X == "number";
        }
        function F(X) {
          return typeof X == "string";
        }
        function I(X) {
          return X === void 0;
        }
        function q(X) {
          return N(X) && L(X) === "[object RegExp]";
        }
        function N(X) {
          return typeof X == "object" && X !== null;
        }
        function H(X) {
          return N(X) && L(X) === "[object Date]";
        }
        function _(X) {
          return N(X) && (L(X) === "[object Error]" || X instanceof Error);
        }
        function x(X) {
          return typeof X == "function";
        }
        function L(X) {
          return Object.prototype.toString.call(X);
        }
        function j(X) {
          return X < 10 ? "0" + X.toString(10) : X.toString(10);
        }
        o.debuglog = function(X) {
          if (X = X.toUpperCase(), !f[X]) if (r.test(X)) {
            var J = process.pid;
            f[X] = function() {
              var B = o.format.apply(o, arguments);
              console.error("%s %d: %s", X, J, B);
            };
          } else f[X] = function() {
          };
          return f[X];
        }, o.inspect = g, g.colors = { bold: [1, 22], italic: [3, 23], underline: [4, 24], inverse: [7, 27], white: [37, 39], grey: [90, 39], black: [30, 39], blue: [34, 39], cyan: [36, 39], green: [32, 39], magenta: [35, 39], red: [31, 39], yellow: [33, 39] }, g.styles = { special: "cyan", number: "yellow", boolean: "yellow", undefined: "grey", null: "bold", string: "green", date: "magenta", regexp: "red" }, o.types = s(9032), o.isArray = E, o.isBoolean = R, o.isNull = k, o.isNullOrUndefined = function(X) {
          return X == null;
        }, o.isNumber = w, o.isString = F, o.isSymbol = function(X) {
          return typeof X == "symbol";
        }, o.isUndefined = I, o.isRegExp = q, o.types.isRegExp = q, o.isObject = N, o.isDate = H, o.types.isDate = H, o.isError = _, o.types.isNativeError = _, o.isFunction = x, o.isPrimitive = function(X) {
          return X === null || typeof X == "boolean" || typeof X == "number" || typeof X == "string" || typeof X == "symbol" || X === void 0;
        }, o.isBuffer = s(1135);
        var z = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
        function Z(X, J) {
          return Object.prototype.hasOwnProperty.call(X, J);
        }
        o.log = function() {
          var X, J;
          console.log("%s - %s", (X = /* @__PURE__ */ new Date(), J = [j(X.getHours()), j(X.getMinutes()), j(X.getSeconds())].join(":"), [X.getDate(), z[X.getMonth()], J].join(" ")), o.format.apply(o, arguments));
        }, o.inherits = s(6698), o._extend = function(X, J) {
          if (!J || !N(J)) return X;
          for (var B = Object.keys(J), Q = B.length; Q--; ) X[B[Q]] = J[B[Q]];
          return X;
        };
        var ue = typeof Symbol < "u" ? Symbol("util.promisify.custom") : void 0;
        function $(X, J) {
          if (!X) {
            var B = new Error("Promise was rejected with a falsy value");
            B.reason = X, X = B;
          }
          return J(X);
        }
        o.promisify = function(X) {
          if (typeof X != "function") throw new TypeError('The "original" argument must be of type Function');
          if (ue && X[ue]) {
            var J;
            if (typeof (J = X[ue]) != "function") throw new TypeError('The "util.promisify.custom" argument must be of type Function');
            return Object.defineProperty(J, ue, { value: J, enumerable: false, writable: false, configurable: true }), J;
          }
          function J() {
            for (var B, Q, ne = new Promise(function(ce, ye) {
              B = ce, Q = ye;
            }), K = [], ie = 0; ie < arguments.length; ie++) K.push(arguments[ie]);
            K.push(function(ce, ye) {
              ce ? Q(ce) : B(ye);
            });
            try {
              X.apply(this, K);
            } catch (ce) {
              Q(ce);
            }
            return ne;
          }
          return Object.setPrototypeOf(J, Object.getPrototypeOf(X)), ue && Object.defineProperty(J, ue, { value: J, enumerable: false, writable: false, configurable: true }), Object.defineProperties(J, c(X));
        }, o.promisify.custom = ue, o.callbackify = function(X) {
          if (typeof X != "function") throw new TypeError('The "original" argument must be of type Function');
          function J() {
            for (var B = [], Q = 0; Q < arguments.length; Q++) B.push(arguments[Q]);
            var ne = B.pop();
            if (typeof ne != "function") throw new TypeError("The last argument must be of type Function");
            var K = this, ie = function() {
              return ne.apply(K, arguments);
            };
            X.apply(this, B).then(function(ce) {
              process.nextTick(ie.bind(null, null, ce));
            }, function(ce) {
              process.nextTick($.bind(null, ce, ie));
            });
          }
          return Object.setPrototypeOf(J, Object.getPrototypeOf(X)), Object.defineProperties(J, c(X)), J;
        };
      }, 592: (t, o, s) => {
        var c = s(655), h = function() {
          return !!c;
        };
        h.hasArrayLengthDefineBug = function() {
          if (!c) return null;
          try {
            return c([], "length", { value: 1 }).length !== 1;
          } catch {
            return true;
          }
        }, t.exports = h;
      }, 645: (t, o) => {
        Object.defineProperty(o, "__esModule", { value: true }), o.trimEnd = void 0, o.trimEnd = function(s, c) {
          for (var h = typeof s == "number", f = String(s); f.endsWith(c); ) f = f.slice(0, -1);
          return h ? Number(f) : f;
        };
      }, 655: (t) => {
        var o = Object.defineProperty || false;
        if (o) try {
          o({}, "a", { value: 1 });
        } catch {
          o = false;
        }
        t.exports = o;
      }, 721: (t, o, s) => {
        Object.defineProperty(o, "__esModule", { value: true }), o.endSponsoringFutureReserves = function() {
          var f = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, r = {};
          return r.body = h.default.OperationBody.endSponsoringFutureReserves(), this.setSourceAccount(r, f), new h.default.Operation(r);
        };
        var c, h = (c = s(1918)) && c.__esModule ? c : { default: c };
      }, 784: (t, o, s) => {
        s.d(o, { $D: () => S, Af: () => a, WC: () => l, fG: () => b, jr: () => E, tR: () => d });
        var c = s(356), h = s(4076);
        function f(R) {
          return f = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(k) {
            return typeof k;
          } : function(k) {
            return k && typeof Symbol == "function" && k.constructor === Symbol && k !== Symbol.prototype ? "symbol" : typeof k;
          }, f(R);
        }
        function r(R, k) {
          var w = Object.keys(R);
          if (Object.getOwnPropertySymbols) {
            var F = Object.getOwnPropertySymbols(R);
            k && (F = F.filter(function(I) {
              return Object.getOwnPropertyDescriptor(R, I).enumerable;
            })), w.push.apply(w, F);
          }
          return w;
        }
        function m(R) {
          for (var k = 1; k < arguments.length; k++) {
            var w = arguments[k] != null ? arguments[k] : {};
            k % 2 ? r(Object(w), true).forEach(function(F) {
              g(R, F, w[F]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(R, Object.getOwnPropertyDescriptors(w)) : r(Object(w)).forEach(function(F) {
              Object.defineProperty(R, F, Object.getOwnPropertyDescriptor(w, F));
            });
          }
          return R;
        }
        function g(R, k, w) {
          return (k = function(F) {
            var I = function(q, N) {
              if (f(q) != "object" || !q) return q;
              var H = q[Symbol.toPrimitive];
              if (H !== void 0) {
                var _ = H.call(q, N);
                if (f(_) != "object") return _;
                throw new TypeError("@@toPrimitive must return a primitive value.");
              }
              return (N === "string" ? String : Number)(q);
            }(F, "string");
            return f(I) == "symbol" ? I : I + "";
          }(k)) in R ? Object.defineProperty(R, k, { value: w, enumerable: true, configurable: true, writable: true }) : R[k] = w, R;
        }
        function a(R) {
          var k = R.errorResultXdr, w = R.diagnosticEventsXdr;
          return delete R.errorResultXdr, delete R.diagnosticEventsXdr, k ? m(m(m({}, R), w !== void 0 && w.length > 0 && { diagnosticEvents: w.map(function(F) {
            return c.xdr.DiagnosticEvent.fromXDR(F, "base64");
          }) }), {}, { errorResult: c.xdr.TransactionResult.fromXDR(k, "base64") }) : m({}, R);
        }
        function l(R) {
          var k, w = c.xdr.TransactionMeta.fromXDR(R.resultMetaXdr, "base64"), F = { ledger: R.ledger, createdAt: R.createdAt, applicationOrder: R.applicationOrder, feeBump: R.feeBump, envelopeXdr: c.xdr.TransactionEnvelope.fromXDR(R.envelopeXdr, "base64"), resultXdr: c.xdr.TransactionResult.fromXDR(R.resultXdr, "base64"), resultMetaXdr: w };
          return w.switch() === 3 && w.v3().sorobanMeta() !== null && (F.returnValue = (k = w.v3().sorobanMeta()) === null || k === void 0 ? void 0 : k.returnValue()), "diagnosticEventsXdr" in R && R.diagnosticEventsXdr && (F.diagnosticEventsXdr = R.diagnosticEventsXdr.map(function(I) {
            return c.xdr.DiagnosticEvent.fromXDR(I, "base64");
          })), F;
        }
        function d(R) {
          return m({ status: R.status, txHash: R.txHash }, l(R));
        }
        function b(R) {
          var k;
          return { latestLedger: R.latestLedger, cursor: R.cursor, events: ((k = R.events) !== null && k !== void 0 ? k : []).map(function(w) {
            var F = m({}, w);
            return delete F.contractId, m(m(m({}, F), w.contractId !== "" && { contractId: new c.Contract(w.contractId) }), {}, { topic: w.topic.map(function(I) {
              return c.xdr.ScVal.fromXDR(I, "base64");
            }), value: c.xdr.ScVal.fromXDR(w.value, "base64") });
          }) };
        }
        function S(R) {
          var k;
          return { latestLedger: R.latestLedger, entries: ((k = R.entries) !== null && k !== void 0 ? k : []).map(function(w) {
            if (!w.key || !w.xdr) throw new TypeError("invalid ledger entry: ".concat(JSON.stringify(w)));
            return m({ lastModifiedLedgerSeq: w.lastModifiedLedgerSeq, key: c.xdr.LedgerKey.fromXDR(w.key, "base64"), val: c.xdr.LedgerEntryData.fromXDR(w.xdr, "base64") }, w.liveUntilLedgerSeq !== void 0 && { liveUntilLedgerSeq: w.liveUntilLedgerSeq });
          }) };
        }
        function E(R) {
          var k, w;
          if (!h.j.isSimulationRaw(R)) return R;
          var F = { _parsed: true, id: R.id, latestLedger: R.latestLedger, events: (k = (w = R.events) === null || w === void 0 ? void 0 : w.map(function(I) {
            return c.xdr.DiagnosticEvent.fromXDR(I, "base64");
          })) !== null && k !== void 0 ? k : [] };
          return typeof R.error == "string" ? m(m({}, F), {}, { error: R.error }) : function(I, q) {
            var N, H, _, x, L, j = m(m(m({}, q), {}, { transactionData: new c.SorobanDataBuilder(I.transactionData), minResourceFee: I.minResourceFee }, (N = (H = I.results) === null || H === void 0 ? void 0 : H.length) !== null && N !== void 0 && N && { result: I.results.map(function(z) {
              var Z;
              return { auth: ((Z = z.auth) !== null && Z !== void 0 ? Z : []).map(function(ue) {
                return c.xdr.SorobanAuthorizationEntry.fromXDR(ue, "base64");
              }), retval: z.xdr ? c.xdr.ScVal.fromXDR(z.xdr, "base64") : c.xdr.ScVal.scvVoid() };
            })[0] }), (_ = (x = I.stateChanges) === null || x === void 0 ? void 0 : x.length) !== null && _ !== void 0 && _ && { stateChanges: (L = I.stateChanges) === null || L === void 0 ? void 0 : L.map(function(z) {
              return { type: z.type, key: c.xdr.LedgerKey.fromXDR(z.key, "base64"), before: z.before ? c.xdr.LedgerEntry.fromXDR(z.before, "base64") : null, after: z.after ? c.xdr.LedgerEntry.fromXDR(z.after, "base64") : null };
            }) });
            return I.restorePreamble && I.restorePreamble.transactionData !== "" ? m(m({}, j), {}, { restorePreamble: { minResourceFee: I.restorePreamble.minResourceFee, transactionData: new c.SorobanDataBuilder(I.restorePreamble.transactionData) } }) : j;
          }(R, F);
        }
      }, 862: (t, o, s) => {
        Object.defineProperty(o, "__esModule", { value: true }), o.manageSellOffer = function(r) {
          var m = {};
          if (m.selling = r.selling.toXDRObject(), m.buying = r.buying.toXDRObject(), !this.isValidAmount(r.amount, true)) throw new TypeError(this.constructAmountRequirementsError("amount"));
          if (m.amount = this._toXDRAmount(r.amount), r.price === void 0) throw new TypeError("price argument is required");
          m.price = this._toXDRPrice(r.price), r.offerId !== void 0 ? r.offerId = r.offerId.toString() : r.offerId = "0", m.offerId = h.Hyper.fromString(r.offerId);
          var g = new f.default.ManageSellOfferOp(m), a = {};
          return a.body = f.default.OperationBody.manageSellOffer(g), this.setSourceAccount(a, r), new f.default.Operation(a);
        };
        var c, h = s(3740), f = (c = s(1918)) && c.__esModule ? c : { default: c };
      }, 920: (t, o, s) => {
        var c = s(9675), h = s(8859), f = s(4803), r = s(507), m = s(2271) || r || f;
        t.exports = function() {
          var g, a = { assert: function(l) {
            if (!a.has(l)) throw new c("Side channel does not contain " + h(l));
          }, delete: function(l) {
            return !!g && g.delete(l);
          }, get: function(l) {
            return g && g.get(l);
          }, has: function(l) {
            return !!g && g.has(l);
          }, set: function(l, d) {
            g || (g = m()), g.set(l, d);
          } };
          return a;
        };
      }, 1002: (t) => {
        t.exports = Function.prototype.apply;
      }, 1064: (t, o, s) => {
        var c = s(9612);
        t.exports = c.getPrototypeOf || null;
      }, 1083: (t, o, s) => {
        var c = s(1568), h = s(8835), f = t.exports;
        for (var r in c) c.hasOwnProperty(r) && (f[r] = c[r]);
        function m(g) {
          if (typeof g == "string" && (g = h.parse(g)), g.protocol || (g.protocol = "https:"), g.protocol !== "https:") throw new Error('Protocol "' + g.protocol + '" not supported. Expected "https:"');
          return g;
        }
        f.request = function(g, a) {
          return g = m(g), c.request.call(this, g, a);
        }, f.get = function(g, a) {
          return g = m(g), c.get.call(this, g, a);
        };
      }, 1135: (t) => {
        t.exports = function(o) {
          return o && typeof o == "object" && typeof o.copy == "function" && typeof o.fill == "function" && typeof o.readUInt8 == "function";
        };
      }, 1180: (t, o, s) => {
        Object.defineProperty(o, "__esModule", { value: true }), o.Address = void 0;
        var c, h = s(7120), f = (c = s(1918)) && c.__esModule ? c : { default: c };
        function r(a) {
          return r = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(l) {
            return typeof l;
          } : function(l) {
            return l && typeof Symbol == "function" && l.constructor === Symbol && l !== Symbol.prototype ? "symbol" : typeof l;
          }, r(a);
        }
        function m(a, l) {
          for (var d = 0; d < l.length; d++) {
            var b = l[d];
            b.enumerable = b.enumerable || false, b.configurable = true, "value" in b && (b.writable = true), Object.defineProperty(a, g(b.key), b);
          }
        }
        function g(a) {
          var l = function(d, b) {
            if (r(d) != "object" || !d) return d;
            var S = d[Symbol.toPrimitive];
            if (S !== void 0) {
              var E = S.call(d, b);
              if (r(E) != "object") return E;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(d);
          }(a, "string");
          return r(l) == "symbol" ? l : l + "";
        }
        o.Address = function() {
          function a(l) {
            if (function(d, b) {
              if (!(d instanceof b)) throw new TypeError("Cannot call a class as a function");
            }(this, a), h.StrKey.isValidEd25519PublicKey(l)) this._type = "account", this._key = h.StrKey.decodeEd25519PublicKey(l);
            else {
              if (!h.StrKey.isValidContract(l)) throw new Error("Unsupported address type: ".concat(l));
              this._type = "contract", this._key = h.StrKey.decodeContract(l);
            }
          }
          return function(l, d, b) {
            return d && m(l.prototype, d), b && m(l, b), Object.defineProperty(l, "prototype", { writable: false }), l;
          }(a, [{ key: "toString", value: function() {
            switch (this._type) {
              case "account":
                return h.StrKey.encodeEd25519PublicKey(this._key);
              case "contract":
                return h.StrKey.encodeContract(this._key);
              default:
                throw new Error("Unsupported address type");
            }
          } }, { key: "toScVal", value: function() {
            return f.default.ScVal.scvAddress(this.toScAddress());
          } }, { key: "toScAddress", value: function() {
            switch (this._type) {
              case "account":
                return f.default.ScAddress.scAddressTypeAccount(f.default.PublicKey.publicKeyTypeEd25519(this._key));
              case "contract":
                return f.default.ScAddress.scAddressTypeContract(this._key);
              default:
                throw new Error("Unsupported address type");
            }
          } }, { key: "toBuffer", value: function() {
            return this._key;
          } }], [{ key: "fromString", value: function(l) {
            return new a(l);
          } }, { key: "account", value: function(l) {
            return new a(h.StrKey.encodeEd25519PublicKey(l));
          } }, { key: "contract", value: function(l) {
            return new a(h.StrKey.encodeContract(l));
          } }, { key: "fromScVal", value: function(l) {
            return a.fromScAddress(l.address());
          } }, { key: "fromScAddress", value: function(l) {
            switch (l.switch().value) {
              case f.default.ScAddressType.scAddressTypeAccount().value:
                return a.account(l.accountId().ed25519());
              case f.default.ScAddressType.scAddressTypeContract().value:
                return a.contract(l.contractId());
              default:
                throw new Error("Unsupported address type");
            }
          } }]);
        }();
      }, 1237: (t) => {
        t.exports = EvalError;
      }, 1242: (t, o, s) => {
        var c;
        Object.defineProperty(o, "__esModule", { value: true }), o.default = void 0;
        var h = ((c = s(1594)) && c.__esModule ? c : { default: c }).default.clone();
        h.DEBUG = true, o.default = h;
      }, 1270: function(t, o, s) {
        var c;
        t = s.nmd(t), function() {
          o && o.nodeType, t && t.nodeType;
          var h = typeof s.g == "object" && s.g;
          h.global !== h && h.window !== h && h.self;
          var f, r = 2147483647, m = 36, g = /^xn--/, a = /[^\x20-\x7E]/, l = /[\x2E\u3002\uFF0E\uFF61]/g, d = { overflow: "Overflow: input needs wider integers to process", "not-basic": "Illegal input >= 0x80 (not a basic code point)", "invalid-input": "Invalid input" }, b = Math.floor, S = String.fromCharCode;
          function E(_) {
            throw new RangeError(d[_]);
          }
          function R(_, x) {
            for (var L = _.length, j = []; L--; ) j[L] = x(_[L]);
            return j;
          }
          function k(_, x) {
            var L = _.split("@"), j = "";
            return L.length > 1 && (j = L[0] + "@", _ = L[1]), j + R((_ = _.replace(l, ".")).split("."), x).join(".");
          }
          function w(_) {
            for (var x, L, j = [], z = 0, Z = _.length; z < Z; ) (x = _.charCodeAt(z++)) >= 55296 && x <= 56319 && z < Z ? (64512 & (L = _.charCodeAt(z++))) == 56320 ? j.push(((1023 & x) << 10) + (1023 & L) + 65536) : (j.push(x), z--) : j.push(x);
            return j;
          }
          function F(_) {
            return R(_, function(x) {
              var L = "";
              return x > 65535 && (L += S((x -= 65536) >>> 10 & 1023 | 55296), x = 56320 | 1023 & x), L += S(x);
            }).join("");
          }
          function I(_, x) {
            return _ + 22 + 75 * (_ < 26) - ((x != 0) << 5);
          }
          function q(_, x, L) {
            var j = 0;
            for (_ = L ? b(_ / 700) : _ >> 1, _ += b(_ / x); _ > 455; j += m) _ = b(_ / 35);
            return b(j + 36 * _ / (_ + 38));
          }
          function N(_) {
            var x, L, j, z, Z, ue, $, X, J, B, Q, ne = [], K = _.length, ie = 0, ce = 128, ye = 72;
            for ((L = _.lastIndexOf("-")) < 0 && (L = 0), j = 0; j < L; ++j) _.charCodeAt(j) >= 128 && E("not-basic"), ne.push(_.charCodeAt(j));
            for (z = L > 0 ? L + 1 : 0; z < K; ) {
              for (Z = ie, ue = 1, $ = m; z >= K && E("invalid-input"), ((X = (Q = _.charCodeAt(z++)) - 48 < 10 ? Q - 22 : Q - 65 < 26 ? Q - 65 : Q - 97 < 26 ? Q - 97 : m) >= m || X > b((r - ie) / ue)) && E("overflow"), ie += X * ue, !(X < (J = $ <= ye ? 1 : $ >= ye + 26 ? 26 : $ - ye)); $ += m) ue > b(r / (B = m - J)) && E("overflow"), ue *= B;
              ye = q(ie - Z, x = ne.length + 1, Z == 0), b(ie / x) > r - ce && E("overflow"), ce += b(ie / x), ie %= x, ne.splice(ie++, 0, ce);
            }
            return F(ne);
          }
          function H(_) {
            var x, L, j, z, Z, ue, $, X, J, B, Q, ne, K, ie, ce, ye = [];
            for (ne = (_ = w(_)).length, x = 128, L = 0, Z = 72, ue = 0; ue < ne; ++ue) (Q = _[ue]) < 128 && ye.push(S(Q));
            for (j = z = ye.length, z && ye.push("-"); j < ne; ) {
              for ($ = r, ue = 0; ue < ne; ++ue) (Q = _[ue]) >= x && Q < $ && ($ = Q);
              for ($ - x > b((r - L) / (K = j + 1)) && E("overflow"), L += ($ - x) * K, x = $, ue = 0; ue < ne; ++ue) if ((Q = _[ue]) < x && ++L > r && E("overflow"), Q == x) {
                for (X = L, J = m; !(X < (B = J <= Z ? 1 : J >= Z + 26 ? 26 : J - Z)); J += m) ce = X - B, ie = m - B, ye.push(S(I(B + ce % ie, 0))), X = b(ce / ie);
                ye.push(S(I(X, 0))), Z = q(L, K, j == z), L = 0, ++j;
              }
              ++L, ++x;
            }
            return ye.join("");
          }
          f = { version: "1.4.1", ucs2: { decode: w, encode: F }, decode: N, encode: H, toASCII: function(_) {
            return k(_, function(x) {
              return a.test(x) ? "xn--" + H(x) : x;
            });
          }, toUnicode: function(_) {
            return k(_, function(x) {
              return g.test(x) ? N(x.slice(4).toLowerCase()) : x;
            });
          } }, (c = (function() {
            return f;
          }).call(o, s, o, t)) === void 0 || (t.exports = c);
        }();
      }, 1293: (t, o, s) => {
        var c = s(5546), h = s(2708);
        t.exports = { parse: function(f) {
          var r = c.parse(f.toString());
          return h.compile(r);
        } };
      }, 1333: (t) => {
        t.exports = function() {
          if (typeof Symbol != "function" || typeof Object.getOwnPropertySymbols != "function") return false;
          if (typeof Symbol.iterator == "symbol") return true;
          var o = {}, s = Symbol("test"), c = Object(s);
          if (typeof s == "string" || Object.prototype.toString.call(s) !== "[object Symbol]" || Object.prototype.toString.call(c) !== "[object Symbol]") return false;
          for (var h in o[s] = 42, o) return false;
          if (typeof Object.keys == "function" && Object.keys(o).length !== 0 || typeof Object.getOwnPropertyNames == "function" && Object.getOwnPropertyNames(o).length !== 0) return false;
          var f = Object.getOwnPropertySymbols(o);
          if (f.length !== 1 || f[0] !== s || !Object.prototype.propertyIsEnumerable.call(o, s)) return false;
          if (typeof Object.getOwnPropertyDescriptor == "function") {
            var r = Object.getOwnPropertyDescriptor(o, s);
            if (r.value !== 42 || r.enumerable !== true) return false;
          }
          return true;
        };
      }, 1346: (t, o) => {
        Object.defineProperty(o, "__esModule", { value: true }), o.verifyChecksum = function(s, c) {
          if (s.length !== c.length) return false;
          if (s.length === 0) return true;
          for (var h = 0; h < s.length; h += 1) if (s[h] !== c[h]) return false;
          return true;
        };
      }, 1387: (t, o, s) => {
        Object.defineProperty(o, "__esModule", { value: true }), o.Claimant = void 0;
        var c, h = (c = s(1918)) && c.__esModule ? c : { default: c }, f = s(6691), r = s(7120);
        function m(l) {
          return m = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(d) {
            return typeof d;
          } : function(d) {
            return d && typeof Symbol == "function" && d.constructor === Symbol && d !== Symbol.prototype ? "symbol" : typeof d;
          }, m(l);
        }
        function g(l, d) {
          for (var b = 0; b < d.length; b++) {
            var S = d[b];
            S.enumerable = S.enumerable || false, S.configurable = true, "value" in S && (S.writable = true), Object.defineProperty(l, a(S.key), S);
          }
        }
        function a(l) {
          var d = function(b, S) {
            if (m(b) != "object" || !b) return b;
            var E = b[Symbol.toPrimitive];
            if (E !== void 0) {
              var R = E.call(b, S);
              if (m(R) != "object") return R;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(b);
          }(l, "string");
          return m(d) == "symbol" ? d : d + "";
        }
        o.Claimant = function() {
          return function(l, d, b) {
            return d && g(l.prototype, d), b && g(l, b), Object.defineProperty(l, "prototype", { writable: false }), l;
          }(function l(d, b) {
            if (function(S, E) {
              if (!(S instanceof E)) throw new TypeError("Cannot call a class as a function");
            }(this, l), d && !r.StrKey.isValidEd25519PublicKey(d)) throw new Error("Destination is invalid");
            if (this._destination = d, b) {
              if (!(b instanceof h.default.ClaimPredicate)) throw new Error("Predicate should be an xdr.ClaimPredicate");
              this._predicate = b;
            } else this._predicate = h.default.ClaimPredicate.claimPredicateUnconditional();
          }, [{ key: "toXDRObject", value: function() {
            var l = new h.default.ClaimantV0({ destination: f.Keypair.fromPublicKey(this._destination).xdrAccountId(), predicate: this._predicate });
            return h.default.Claimant.claimantTypeV0(l);
          } }, { key: "destination", get: function() {
            return this._destination;
          }, set: function(l) {
            throw new Error("Claimant is immutable");
          } }, { key: "predicate", get: function() {
            return this._predicate;
          }, set: function(l) {
            throw new Error("Claimant is immutable");
          } }], [{ key: "predicateUnconditional", value: function() {
            return h.default.ClaimPredicate.claimPredicateUnconditional();
          } }, { key: "predicateAnd", value: function(l, d) {
            if (!(l instanceof h.default.ClaimPredicate)) throw new Error("left Predicate should be an xdr.ClaimPredicate");
            if (!(d instanceof h.default.ClaimPredicate)) throw new Error("right Predicate should be an xdr.ClaimPredicate");
            return h.default.ClaimPredicate.claimPredicateAnd([l, d]);
          } }, { key: "predicateOr", value: function(l, d) {
            if (!(l instanceof h.default.ClaimPredicate)) throw new Error("left Predicate should be an xdr.ClaimPredicate");
            if (!(d instanceof h.default.ClaimPredicate)) throw new Error("right Predicate should be an xdr.ClaimPredicate");
            return h.default.ClaimPredicate.claimPredicateOr([l, d]);
          } }, { key: "predicateNot", value: function(l) {
            if (!(l instanceof h.default.ClaimPredicate)) throw new Error("right Predicate should be an xdr.ClaimPredicate");
            return h.default.ClaimPredicate.claimPredicateNot(l);
          } }, { key: "predicateBeforeAbsoluteTime", value: function(l) {
            return h.default.ClaimPredicate.claimPredicateBeforeAbsoluteTime(h.default.Int64.fromString(l));
          } }, { key: "predicateBeforeRelativeTime", value: function(l) {
            return h.default.ClaimPredicate.claimPredicateBeforeRelativeTime(h.default.Int64.fromString(l));
          } }, { key: "fromXDR", value: function(l) {
            var d;
            if (l.switch() === h.default.ClaimantType.claimantTypeV0()) return d = l.v0(), new this(r.StrKey.encodeEd25519PublicKey(d.destination().ed25519()), d.predicate());
            throw new Error("Invalid claimant type: ".concat(l.switch().name));
          } }]);
        }();
      }, 1411: (t, o, s) => {
        var c = s(8287).Buffer;
        Object.defineProperty(o, "__esModule", { value: true }), o.manageData = function(r) {
          var m = {};
          if (!(typeof r.name == "string" && r.name.length <= 64)) throw new Error("name must be a string, up to 64 characters");
          if (m.dataName = r.name, typeof r.value != "string" && !c.isBuffer(r.value) && r.value !== null) throw new Error("value must be a string, Buffer or null");
          if (typeof r.value == "string" ? m.dataValue = c.from(r.value) : m.dataValue = r.value, m.dataValue !== null && m.dataValue.length > 64) throw new Error("value cannot be longer that 64 bytes");
          var g = new f.default.ManageDataOp(m), a = {};
          return a.body = f.default.OperationBody.manageData(g), this.setSourceAccount(a, r), new f.default.Operation(a);
        };
        var h, f = (h = s(1918)) && h.__esModule ? h : { default: h };
      }, 1430: function(t, o, s) {
        var c, h;
        (function(f, r) {
          t.exports ? t.exports = r() : (h = typeof (c = r) == "function" ? c.call(o, s, o, t) : c) === void 0 || (t.exports = h);
        })(0, function(f) {
          var r = f && f.IPv6;
          return { best: function(m) {
            var g, a, l = m.toLowerCase().split(":"), d = l.length, b = 8;
            for (l[0] === "" && l[1] === "" && l[2] === "" ? (l.shift(), l.shift()) : l[0] === "" && l[1] === "" ? l.shift() : l[d - 1] === "" && l[d - 2] === "" && l.pop(), l[(d = l.length) - 1].indexOf(".") !== -1 && (b = 7), g = 0; g < d && l[g] !== ""; g++) ;
            if (g < b) for (l.splice(g, 1, "0000"); l.length < b; ) l.splice(g, 0, "0000");
            for (var S = 0; S < b; S++) {
              a = l[S].split("");
              for (var E = 0; E < 3 && a[0] === "0" && a.length > 1; E++) a.splice(0, 1);
              l[S] = a.join("");
            }
            var R = -1, k = 0, w = 0, F = -1, I = false;
            for (S = 0; S < b; S++) I ? l[S] === "0" ? w += 1 : (I = false, w > k && (R = F, k = w)) : l[S] === "0" && (I = true, F = S, w = 1);
            w > k && (R = F, k = w), k > 1 && l.splice(R, k, ""), d = l.length;
            var q = "";
            for (l[0] === "" && (q = ":"), S = 0; S < d && (q += l[S], S !== d - 1); S++) q += ":";
            return l[d - 1] === "" && (q += ":"), q;
          }, noConflict: function() {
            return f.IPv6 === this && (f.IPv6 = r), this;
          } };
        });
      }, 1514: (t) => {
        t.exports = Math.abs;
      }, 1568: (t, o, s) => {
        var c = s(5537), h = s(6917), f = s(7510), r = s(6866), m = s(8835), g = o;
        g.request = function(a, l) {
          a = typeof a == "string" ? m.parse(a) : f(a);
          var d = s.g.location.protocol.search(/^https?:$/) === -1 ? "http:" : "", b = a.protocol || d, S = a.hostname || a.host, E = a.port, R = a.path || "/";
          S && S.indexOf(":") !== -1 && (S = "[" + S + "]"), a.url = (S ? b + "//" + S : "") + (E ? ":" + E : "") + R, a.method = (a.method || "GET").toUpperCase(), a.headers = a.headers || {};
          var k = new c(a);
          return l && k.on("response", l), k;
        }, g.get = function(a, l) {
          var d = g.request(a, l);
          return d.end(), d;
        }, g.ClientRequest = c, g.IncomingMessage = h.IncomingMessage, g.Agent = function() {
        }, g.Agent.defaultMaxSockets = 4, g.globalAgent = new g.Agent(), g.STATUS_CODES = r, g.METHODS = ["CHECKOUT", "CONNECT", "COPY", "DELETE", "GET", "HEAD", "LOCK", "M-SEARCH", "MERGE", "MKACTIVITY", "MKCOL", "MOVE", "NOTIFY", "OPTIONS", "PATCH", "POST", "PROPFIND", "PROPPATCH", "PURGE", "PUT", "REPORT", "SEARCH", "SUBSCRIBE", "TRACE", "UNLOCK", "UNSUBSCRIBE"];
      }, 1594: function(t, o, s) {
        var c;
        (function() {
          var h, f = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i, r = Math.ceil, m = Math.floor, g = "[BigNumber Error] ", a = g + "Number primitive has more than 15 significant digits: ", l = 1e14, d = 14, b = 9007199254740991, S = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13], E = 1e7, R = 1e9;
          function k(_) {
            var x = 0 | _;
            return _ > 0 || _ === x ? x : x - 1;
          }
          function w(_) {
            for (var x, L, j = 1, z = _.length, Z = _[0] + ""; j < z; ) {
              for (x = _[j++] + "", L = d - x.length; L--; x = "0" + x) ;
              Z += x;
            }
            for (z = Z.length; Z.charCodeAt(--z) === 48; ) ;
            return Z.slice(0, z + 1 || 1);
          }
          function F(_, x) {
            var L, j, z = _.c, Z = x.c, ue = _.s, $ = x.s, X = _.e, J = x.e;
            if (!ue || !$) return null;
            if (L = z && !z[0], j = Z && !Z[0], L || j) return L ? j ? 0 : -$ : ue;
            if (ue != $) return ue;
            if (L = ue < 0, j = X == J, !z || !Z) return j ? 0 : !z ^ L ? 1 : -1;
            if (!j) return X > J ^ L ? 1 : -1;
            for ($ = (X = z.length) < (J = Z.length) ? X : J, ue = 0; ue < $; ue++) if (z[ue] != Z[ue]) return z[ue] > Z[ue] ^ L ? 1 : -1;
            return X == J ? 0 : X > J ^ L ? 1 : -1;
          }
          function I(_, x, L, j) {
            if (_ < x || _ > L || _ !== m(_)) throw Error(g + (j || "Argument") + (typeof _ == "number" ? _ < x || _ > L ? " out of range: " : " not an integer: " : " not a primitive number: ") + String(_));
          }
          function q(_) {
            var x = _.c.length - 1;
            return k(_.e / d) == x && _.c[x] % 2 != 0;
          }
          function N(_, x) {
            return (_.length > 1 ? _.charAt(0) + "." + _.slice(1) : _) + (x < 0 ? "e" : "e+") + x;
          }
          function H(_, x, L) {
            var j, z;
            if (x < 0) {
              for (z = L + "."; ++x; z += L) ;
              _ = z + _;
            } else if (++x > (j = _.length)) {
              for (z = L, x -= j; --x; z += L) ;
              _ += z;
            } else x < j && (_ = _.slice(0, x) + "." + _.slice(x));
            return _;
          }
          h = function _(x) {
            var L, j, z, Z, ue, $, X, J, B, Q, ne = _e.prototype = { constructor: _e, toString: null, valueOf: null }, K = new _e(1), ie = 20, ce = 4, ye = -7, oe = 21, se = -1e7, re = 1e7, ge = false, Te = 1, pe = 0, Oe = { prefix: "", groupSize: 3, secondaryGroupSize: 0, groupSeparator: ",", decimalSeparator: ".", fractionGroupSize: 0, fractionGroupSeparator: "\xA0", suffix: "" }, xe = "0123456789abcdefghijklmnopqrstuvwxyz", Ve = true;
            function _e(O, V) {
              var D, C, p, A, U, Y, ae, W, de = this;
              if (!(de instanceof _e)) return new _e(O, V);
              if (V == null) {
                if (O && O._isBigNumber === true) return de.s = O.s, void (!O.c || O.e > re ? de.c = de.e = null : O.e < se ? de.c = [de.e = 0] : (de.e = O.e, de.c = O.c.slice()));
                if ((Y = typeof O == "number") && 0 * O == 0) {
                  if (de.s = 1 / O < 0 ? (O = -O, -1) : 1, O === ~~O) {
                    for (A = 0, U = O; U >= 10; U /= 10, A++) ;
                    return void (A > re ? de.c = de.e = null : (de.e = A, de.c = [O]));
                  }
                  W = String(O);
                } else {
                  if (!f.test(W = String(O))) return z(de, W, Y);
                  de.s = W.charCodeAt(0) == 45 ? (W = W.slice(1), -1) : 1;
                }
                (A = W.indexOf(".")) > -1 && (W = W.replace(".", "")), (U = W.search(/e/i)) > 0 ? (A < 0 && (A = U), A += +W.slice(U + 1), W = W.substring(0, U)) : A < 0 && (A = W.length);
              } else {
                if (I(V, 2, xe.length, "Base"), V == 10 && Ve) return P(de = new _e(O), ie + de.e + 1, ce);
                if (W = String(O), Y = typeof O == "number") {
                  if (0 * O != 0) return z(de, W, Y, V);
                  if (de.s = 1 / O < 0 ? (W = W.slice(1), -1) : 1, _e.DEBUG && W.replace(/^0\.0*|\./, "").length > 15) throw Error(a + O);
                } else de.s = W.charCodeAt(0) === 45 ? (W = W.slice(1), -1) : 1;
                for (D = xe.slice(0, V), A = U = 0, ae = W.length; U < ae; U++) if (D.indexOf(C = W.charAt(U)) < 0) {
                  if (C == ".") {
                    if (U > A) {
                      A = ae;
                      continue;
                    }
                  } else if (!p && (W == W.toUpperCase() && (W = W.toLowerCase()) || W == W.toLowerCase() && (W = W.toUpperCase()))) {
                    p = true, U = -1, A = 0;
                    continue;
                  }
                  return z(de, String(O), Y, V);
                }
                Y = false, (A = (W = j(W, V, 10, de.s)).indexOf(".")) > -1 ? W = W.replace(".", "") : A = W.length;
              }
              for (U = 0; W.charCodeAt(U) === 48; U++) ;
              for (ae = W.length; W.charCodeAt(--ae) === 48; ) ;
              if (W = W.slice(U, ++ae)) {
                if (ae -= U, Y && _e.DEBUG && ae > 15 && (O > b || O !== m(O))) throw Error(a + de.s * O);
                if ((A = A - U - 1) > re) de.c = de.e = null;
                else if (A < se) de.c = [de.e = 0];
                else {
                  if (de.e = A, de.c = [], U = (A + 1) % d, A < 0 && (U += d), U < ae) {
                    for (U && de.c.push(+W.slice(0, U)), ae -= d; U < ae; ) de.c.push(+W.slice(U, U += d));
                    U = d - (W = W.slice(U)).length;
                  } else U -= ae;
                  for (; U--; W += "0") ;
                  de.c.push(+W);
                }
              } else de.c = [de.e = 0];
            }
            function Be(O, V, D, C) {
              var p, A, U, Y, ae;
              if (D == null ? D = ce : I(D, 0, 8), !O.c) return O.toString();
              if (p = O.c[0], U = O.e, V == null) ae = w(O.c), ae = C == 1 || C == 2 && (U <= ye || U >= oe) ? N(ae, U) : H(ae, U, "0");
              else if (A = (O = P(new _e(O), V, D)).e, Y = (ae = w(O.c)).length, C == 1 || C == 2 && (V <= A || A <= ye)) {
                for (; Y < V; ae += "0", Y++) ;
                ae = N(ae, A);
              } else if (V -= U, ae = H(ae, A, "0"), A + 1 > Y) {
                if (--V > 0) for (ae += "."; V--; ae += "0") ;
              } else if ((V += A - Y) > 0) for (A + 1 == Y && (ae += "."); V--; ae += "0") ;
              return O.s < 0 && p ? "-" + ae : ae;
            }
            function Qe(O, V) {
              for (var D, C, p = 1, A = new _e(O[0]); p < O.length; p++) (!(C = new _e(O[p])).s || (D = F(A, C)) === V || D === 0 && A.s === V) && (A = C);
              return A;
            }
            function ee(O, V, D) {
              for (var C = 1, p = V.length; !V[--p]; V.pop()) ;
              for (p = V[0]; p >= 10; p /= 10, C++) ;
              return (D = C + D * d - 1) > re ? O.c = O.e = null : D < se ? O.c = [O.e = 0] : (O.e = D, O.c = V), O;
            }
            function P(O, V, D, C) {
              var p, A, U, Y, ae, W, de, tt = O.c, Ne = S;
              if (tt) {
                e: {
                  for (p = 1, Y = tt[0]; Y >= 10; Y /= 10, p++) ;
                  if ((A = V - p) < 0) A += d, U = V, ae = tt[W = 0], de = m(ae / Ne[p - U - 1] % 10);
                  else if ((W = r((A + 1) / d)) >= tt.length) {
                    if (!C) break e;
                    for (; tt.length <= W; tt.push(0)) ;
                    ae = de = 0, p = 1, U = (A %= d) - d + 1;
                  } else {
                    for (ae = Y = tt[W], p = 1; Y >= 10; Y /= 10, p++) ;
                    de = (U = (A %= d) - d + p) < 0 ? 0 : m(ae / Ne[p - U - 1] % 10);
                  }
                  if (C = C || V < 0 || tt[W + 1] != null || (U < 0 ? ae : ae % Ne[p - U - 1]), C = D < 4 ? (de || C) && (D == 0 || D == (O.s < 0 ? 3 : 2)) : de > 5 || de == 5 && (D == 4 || C || D == 6 && (A > 0 ? U > 0 ? ae / Ne[p - U] : 0 : tt[W - 1]) % 10 & 1 || D == (O.s < 0 ? 8 : 7)), V < 1 || !tt[0]) return tt.length = 0, C ? (V -= O.e + 1, tt[0] = Ne[(d - V % d) % d], O.e = -V || 0) : tt[0] = O.e = 0, O;
                  if (A == 0 ? (tt.length = W, Y = 1, W--) : (tt.length = W + 1, Y = Ne[d - A], tt[W] = U > 0 ? m(ae / Ne[p - U] % Ne[U]) * Y : 0), C) for (; ; ) {
                    if (W == 0) {
                      for (A = 1, U = tt[0]; U >= 10; U /= 10, A++) ;
                      for (U = tt[0] += Y, Y = 1; U >= 10; U /= 10, Y++) ;
                      A != Y && (O.e++, tt[0] == l && (tt[0] = 1));
                      break;
                    }
                    if (tt[W] += Y, tt[W] != l) break;
                    tt[W--] = 0, Y = 1;
                  }
                  for (A = tt.length; tt[--A] === 0; tt.pop()) ;
                }
                O.e > re ? O.c = O.e = null : O.e < se && (O.c = [O.e = 0]);
              }
              return O;
            }
            function T(O) {
              var V, D = O.e;
              return D === null ? O.toString() : (V = w(O.c), V = D <= ye || D >= oe ? N(V, D) : H(V, D, "0"), O.s < 0 ? "-" + V : V);
            }
            return _e.clone = _, _e.ROUND_UP = 0, _e.ROUND_DOWN = 1, _e.ROUND_CEIL = 2, _e.ROUND_FLOOR = 3, _e.ROUND_HALF_UP = 4, _e.ROUND_HALF_DOWN = 5, _e.ROUND_HALF_EVEN = 6, _e.ROUND_HALF_CEIL = 7, _e.ROUND_HALF_FLOOR = 8, _e.EUCLID = 9, _e.config = _e.set = function(O) {
              var V, D;
              if (O != null) {
                if (typeof O != "object") throw Error(g + "Object expected: " + O);
                if (O.hasOwnProperty(V = "DECIMAL_PLACES") && (I(D = O[V], 0, R, V), ie = D), O.hasOwnProperty(V = "ROUNDING_MODE") && (I(D = O[V], 0, 8, V), ce = D), O.hasOwnProperty(V = "EXPONENTIAL_AT") && ((D = O[V]) && D.pop ? (I(D[0], -1e9, 0, V), I(D[1], 0, R, V), ye = D[0], oe = D[1]) : (I(D, -1e9, R, V), ye = -(oe = D < 0 ? -D : D))), O.hasOwnProperty(V = "RANGE")) if ((D = O[V]) && D.pop) I(D[0], -1e9, -1, V), I(D[1], 1, R, V), se = D[0], re = D[1];
                else {
                  if (I(D, -1e9, R, V), !D) throw Error(g + V + " cannot be zero: " + D);
                  se = -(re = D < 0 ? -D : D);
                }
                if (O.hasOwnProperty(V = "CRYPTO")) {
                  if ((D = O[V]) !== !!D) throw Error(g + V + " not true or false: " + D);
                  if (D) {
                    if (typeof crypto > "u" || !crypto || !crypto.getRandomValues && !crypto.randomBytes) throw ge = !D, Error(g + "crypto unavailable");
                    ge = D;
                  } else ge = D;
                }
                if (O.hasOwnProperty(V = "MODULO_MODE") && (I(D = O[V], 0, 9, V), Te = D), O.hasOwnProperty(V = "POW_PRECISION") && (I(D = O[V], 0, R, V), pe = D), O.hasOwnProperty(V = "FORMAT")) {
                  if (typeof (D = O[V]) != "object") throw Error(g + V + " not an object: " + D);
                  Oe = D;
                }
                if (O.hasOwnProperty(V = "ALPHABET")) {
                  if (typeof (D = O[V]) != "string" || /^.?$|[+\-.\s]|(.).*\1/.test(D)) throw Error(g + V + " invalid: " + D);
                  Ve = D.slice(0, 10) == "0123456789", xe = D;
                }
              }
              return { DECIMAL_PLACES: ie, ROUNDING_MODE: ce, EXPONENTIAL_AT: [ye, oe], RANGE: [se, re], CRYPTO: ge, MODULO_MODE: Te, POW_PRECISION: pe, FORMAT: Oe, ALPHABET: xe };
            }, _e.isBigNumber = function(O) {
              if (!O || O._isBigNumber !== true) return false;
              if (!_e.DEBUG) return true;
              var V, D, C = O.c, p = O.e, A = O.s;
              e: if ({}.toString.call(C) == "[object Array]") {
                if ((A === 1 || A === -1) && p >= -1e9 && p <= R && p === m(p)) {
                  if (C[0] === 0) {
                    if (p === 0 && C.length === 1) return true;
                    break e;
                  }
                  if ((V = (p + 1) % d) < 1 && (V += d), String(C[0]).length == V) {
                    for (V = 0; V < C.length; V++) if ((D = C[V]) < 0 || D >= l || D !== m(D)) break e;
                    if (D !== 0) return true;
                  }
                }
              } else if (C === null && p === null && (A === null || A === 1 || A === -1)) return true;
              throw Error(g + "Invalid BigNumber: " + O);
            }, _e.maximum = _e.max = function() {
              return Qe(arguments, -1);
            }, _e.minimum = _e.min = function() {
              return Qe(arguments, 1);
            }, _e.random = (Z = 9007199254740992, ue = Math.random() * Z & 2097151 ? function() {
              return m(Math.random() * Z);
            } : function() {
              return 8388608 * (1073741824 * Math.random() | 0) + (8388608 * Math.random() | 0);
            }, function(O) {
              var V, D, C, p, A, U = 0, Y = [], ae = new _e(K);
              if (O == null ? O = ie : I(O, 0, R), p = r(O / d), ge) if (crypto.getRandomValues) {
                for (V = crypto.getRandomValues(new Uint32Array(p *= 2)); U < p; ) (A = 131072 * V[U] + (V[U + 1] >>> 11)) >= 9e15 ? (D = crypto.getRandomValues(new Uint32Array(2)), V[U] = D[0], V[U + 1] = D[1]) : (Y.push(A % 1e14), U += 2);
                U = p / 2;
              } else {
                if (!crypto.randomBytes) throw ge = false, Error(g + "crypto unavailable");
                for (V = crypto.randomBytes(p *= 7); U < p; ) (A = 281474976710656 * (31 & V[U]) + 1099511627776 * V[U + 1] + 4294967296 * V[U + 2] + 16777216 * V[U + 3] + (V[U + 4] << 16) + (V[U + 5] << 8) + V[U + 6]) >= 9e15 ? crypto.randomBytes(7).copy(V, U) : (Y.push(A % 1e14), U += 7);
                U = p / 7;
              }
              if (!ge) for (; U < p; ) (A = ue()) < 9e15 && (Y[U++] = A % 1e14);
              for (p = Y[--U], O %= d, p && O && (A = S[d - O], Y[U] = m(p / A) * A); Y[U] === 0; Y.pop(), U--) ;
              if (U < 0) Y = [C = 0];
              else {
                for (C = -1; Y[0] === 0; Y.splice(0, 1), C -= d) ;
                for (U = 1, A = Y[0]; A >= 10; A /= 10, U++) ;
                U < d && (C -= d - U);
              }
              return ae.e = C, ae.c = Y, ae;
            }), _e.sum = function() {
              for (var O = 1, V = arguments, D = new _e(V[0]); O < V.length; ) D = D.plus(V[O++]);
              return D;
            }, j = /* @__PURE__ */ function() {
              var O = "0123456789";
              function V(D, C, p, A) {
                for (var U, Y, ae = [0], W = 0, de = D.length; W < de; ) {
                  for (Y = ae.length; Y--; ae[Y] *= C) ;
                  for (ae[0] += A.indexOf(D.charAt(W++)), U = 0; U < ae.length; U++) ae[U] > p - 1 && (ae[U + 1] == null && (ae[U + 1] = 0), ae[U + 1] += ae[U] / p | 0, ae[U] %= p);
                }
                return ae.reverse();
              }
              return function(D, C, p, A, U) {
                var Y, ae, W, de, tt, Ne, ut, Ze, Et = D.indexOf("."), rr = ie, je = ce;
                for (Et >= 0 && (de = pe, pe = 0, D = D.replace(".", ""), Ne = (Ze = new _e(C)).pow(D.length - Et), pe = de, Ze.c = V(H(w(Ne.c), Ne.e, "0"), 10, p, O), Ze.e = Ze.c.length), W = de = (ut = V(D, C, p, U ? (Y = xe, O) : (Y = O, xe))).length; ut[--de] == 0; ut.pop()) ;
                if (!ut[0]) return Y.charAt(0);
                if (Et < 0 ? --W : (Ne.c = ut, Ne.e = W, Ne.s = A, ut = (Ne = L(Ne, Ze, rr, je, p)).c, tt = Ne.r, W = Ne.e), Et = ut[ae = W + rr + 1], de = p / 2, tt = tt || ae < 0 || ut[ae + 1] != null, tt = je < 4 ? (Et != null || tt) && (je == 0 || je == (Ne.s < 0 ? 3 : 2)) : Et > de || Et == de && (je == 4 || tt || je == 6 && 1 & ut[ae - 1] || je == (Ne.s < 0 ? 8 : 7)), ae < 1 || !ut[0]) D = tt ? H(Y.charAt(1), -rr, Y.charAt(0)) : Y.charAt(0);
                else {
                  if (ut.length = ae, tt) for (--p; ++ut[--ae] > p; ) ut[ae] = 0, ae || (++W, ut = [1].concat(ut));
                  for (de = ut.length; !ut[--de]; ) ;
                  for (Et = 0, D = ""; Et <= de; D += Y.charAt(ut[Et++])) ;
                  D = H(D, W, Y.charAt(0));
                }
                return D;
              };
            }(), L = /* @__PURE__ */ function() {
              function O(C, p, A) {
                var U, Y, ae, W, de = 0, tt = C.length, Ne = p % E, ut = p / E | 0;
                for (C = C.slice(); tt--; ) de = ((Y = Ne * (ae = C[tt] % E) + (U = ut * ae + (W = C[tt] / E | 0) * Ne) % E * E + de) / A | 0) + (U / E | 0) + ut * W, C[tt] = Y % A;
                return de && (C = [de].concat(C)), C;
              }
              function V(C, p, A, U) {
                var Y, ae;
                if (A != U) ae = A > U ? 1 : -1;
                else for (Y = ae = 0; Y < A; Y++) if (C[Y] != p[Y]) {
                  ae = C[Y] > p[Y] ? 1 : -1;
                  break;
                }
                return ae;
              }
              function D(C, p, A, U) {
                for (var Y = 0; A--; ) C[A] -= Y, Y = C[A] < p[A] ? 1 : 0, C[A] = Y * U + C[A] - p[A];
                for (; !C[0] && C.length > 1; C.splice(0, 1)) ;
              }
              return function(C, p, A, U, Y) {
                var ae, W, de, tt, Ne, ut, Ze, Et, rr, je, Ge, at, Ae, qe, Ft, Dt, wr, Nt = C.s == p.s ? 1 : -1, yr = C.c, Ur = p.c;
                if (!(yr && yr[0] && Ur && Ur[0])) return new _e(C.s && p.s && (yr ? !Ur || yr[0] != Ur[0] : Ur) ? yr && yr[0] == 0 || !Ur ? 0 * Nt : Nt / 0 : NaN);
                for (rr = (Et = new _e(Nt)).c = [], Nt = A + (W = C.e - p.e) + 1, Y || (Y = l, W = k(C.e / d) - k(p.e / d), Nt = Nt / d | 0), de = 0; Ur[de] == (yr[de] || 0); de++) ;
                if (Ur[de] > (yr[de] || 0) && W--, Nt < 0) rr.push(1), tt = true;
                else {
                  for (qe = yr.length, Dt = Ur.length, de = 0, Nt += 2, (Ne = m(Y / (Ur[0] + 1))) > 1 && (Ur = O(Ur, Ne, Y), yr = O(yr, Ne, Y), Dt = Ur.length, qe = yr.length), Ae = Dt, Ge = (je = yr.slice(0, Dt)).length; Ge < Dt; je[Ge++] = 0) ;
                  wr = Ur.slice(), wr = [0].concat(wr), Ft = Ur[0], Ur[1] >= Y / 2 && Ft++;
                  do {
                    if (Ne = 0, (ae = V(Ur, je, Dt, Ge)) < 0) {
                      if (at = je[0], Dt != Ge && (at = at * Y + (je[1] || 0)), (Ne = m(at / Ft)) > 1) for (Ne >= Y && (Ne = Y - 1), Ze = (ut = O(Ur, Ne, Y)).length, Ge = je.length; V(ut, je, Ze, Ge) == 1; ) Ne--, D(ut, Dt < Ze ? wr : Ur, Ze, Y), Ze = ut.length, ae = 1;
                      else Ne == 0 && (ae = Ne = 1), Ze = (ut = Ur.slice()).length;
                      if (Ze < Ge && (ut = [0].concat(ut)), D(je, ut, Ge, Y), Ge = je.length, ae == -1) for (; V(Ur, je, Dt, Ge) < 1; ) Ne++, D(je, Dt < Ge ? wr : Ur, Ge, Y), Ge = je.length;
                    } else ae === 0 && (Ne++, je = [0]);
                    rr[de++] = Ne, je[0] ? je[Ge++] = yr[Ae] || 0 : (je = [yr[Ae]], Ge = 1);
                  } while ((Ae++ < qe || je[0] != null) && Nt--);
                  tt = je[0] != null, rr[0] || rr.splice(0, 1);
                }
                if (Y == l) {
                  for (de = 1, Nt = rr[0]; Nt >= 10; Nt /= 10, de++) ;
                  P(Et, A + (Et.e = de + W * d - 1) + 1, U, tt);
                } else Et.e = W, Et.r = +tt;
                return Et;
              };
            }(), $ = /^(-?)0([xbo])(?=\w[\w.]*$)/i, X = /^([^.]+)\.$/, J = /^\.([^.]+)$/, B = /^-?(Infinity|NaN)$/, Q = /^\s*\+(?=[\w.])|^\s+|\s+$/g, z = function(O, V, D, C) {
              var p, A = D ? V : V.replace(Q, "");
              if (B.test(A)) O.s = isNaN(A) ? null : A < 0 ? -1 : 1;
              else {
                if (!D && (A = A.replace($, function(U, Y, ae) {
                  return p = (ae = ae.toLowerCase()) == "x" ? 16 : ae == "b" ? 2 : 8, C && C != p ? U : Y;
                }), C && (p = C, A = A.replace(X, "$1").replace(J, "0.$1")), V != A)) return new _e(A, p);
                if (_e.DEBUG) throw Error(g + "Not a" + (C ? " base " + C : "") + " number: " + V);
                O.s = null;
              }
              O.c = O.e = null;
            }, ne.absoluteValue = ne.abs = function() {
              var O = new _e(this);
              return O.s < 0 && (O.s = 1), O;
            }, ne.comparedTo = function(O, V) {
              return F(this, new _e(O, V));
            }, ne.decimalPlaces = ne.dp = function(O, V) {
              var D, C, p, A = this;
              if (O != null) return I(O, 0, R), V == null ? V = ce : I(V, 0, 8), P(new _e(A), O + A.e + 1, V);
              if (!(D = A.c)) return null;
              if (C = ((p = D.length - 1) - k(this.e / d)) * d, p = D[p]) for (; p % 10 == 0; p /= 10, C--) ;
              return C < 0 && (C = 0), C;
            }, ne.dividedBy = ne.div = function(O, V) {
              return L(this, new _e(O, V), ie, ce);
            }, ne.dividedToIntegerBy = ne.idiv = function(O, V) {
              return L(this, new _e(O, V), 0, 1);
            }, ne.exponentiatedBy = ne.pow = function(O, V) {
              var D, C, p, A, U, Y, ae, W, de = this;
              if ((O = new _e(O)).c && !O.isInteger()) throw Error(g + "Exponent not an integer: " + T(O));
              if (V != null && (V = new _e(V)), U = O.e > 14, !de.c || !de.c[0] || de.c[0] == 1 && !de.e && de.c.length == 1 || !O.c || !O.c[0]) return W = new _e(Math.pow(+T(de), U ? O.s * (2 - q(O)) : +T(O))), V ? W.mod(V) : W;
              if (Y = O.s < 0, V) {
                if (V.c ? !V.c[0] : !V.s) return new _e(NaN);
                (C = !Y && de.isInteger() && V.isInteger()) && (de = de.mod(V));
              } else {
                if (O.e > 9 && (de.e > 0 || de.e < -1 || (de.e == 0 ? de.c[0] > 1 || U && de.c[1] >= 24e7 : de.c[0] < 8e13 || U && de.c[0] <= 9999975e7))) return A = de.s < 0 && q(O) ? -0 : 0, de.e > -1 && (A = 1 / A), new _e(Y ? 1 / A : A);
                pe && (A = r(pe / d + 2));
              }
              for (U ? (D = new _e(0.5), Y && (O.s = 1), ae = q(O)) : ae = (p = Math.abs(+T(O))) % 2, W = new _e(K); ; ) {
                if (ae) {
                  if (!(W = W.times(de)).c) break;
                  A ? W.c.length > A && (W.c.length = A) : C && (W = W.mod(V));
                }
                if (p) {
                  if ((p = m(p / 2)) === 0) break;
                  ae = p % 2;
                } else if (P(O = O.times(D), O.e + 1, 1), O.e > 14) ae = q(O);
                else {
                  if ((p = +T(O)) == 0) break;
                  ae = p % 2;
                }
                de = de.times(de), A ? de.c && de.c.length > A && (de.c.length = A) : C && (de = de.mod(V));
              }
              return C ? W : (Y && (W = K.div(W)), V ? W.mod(V) : A ? P(W, pe, ce, void 0) : W);
            }, ne.integerValue = function(O) {
              var V = new _e(this);
              return O == null ? O = ce : I(O, 0, 8), P(V, V.e + 1, O);
            }, ne.isEqualTo = ne.eq = function(O, V) {
              return F(this, new _e(O, V)) === 0;
            }, ne.isFinite = function() {
              return !!this.c;
            }, ne.isGreaterThan = ne.gt = function(O, V) {
              return F(this, new _e(O, V)) > 0;
            }, ne.isGreaterThanOrEqualTo = ne.gte = function(O, V) {
              return (V = F(this, new _e(O, V))) === 1 || V === 0;
            }, ne.isInteger = function() {
              return !!this.c && k(this.e / d) > this.c.length - 2;
            }, ne.isLessThan = ne.lt = function(O, V) {
              return F(this, new _e(O, V)) < 0;
            }, ne.isLessThanOrEqualTo = ne.lte = function(O, V) {
              return (V = F(this, new _e(O, V))) === -1 || V === 0;
            }, ne.isNaN = function() {
              return !this.s;
            }, ne.isNegative = function() {
              return this.s < 0;
            }, ne.isPositive = function() {
              return this.s > 0;
            }, ne.isZero = function() {
              return !!this.c && this.c[0] == 0;
            }, ne.minus = function(O, V) {
              var D, C, p, A, U = this, Y = U.s;
              if (V = (O = new _e(O, V)).s, !Y || !V) return new _e(NaN);
              if (Y != V) return O.s = -V, U.plus(O);
              var ae = U.e / d, W = O.e / d, de = U.c, tt = O.c;
              if (!ae || !W) {
                if (!de || !tt) return de ? (O.s = -V, O) : new _e(tt ? U : NaN);
                if (!de[0] || !tt[0]) return tt[0] ? (O.s = -V, O) : new _e(de[0] ? U : ce == 3 ? -0 : 0);
              }
              if (ae = k(ae), W = k(W), de = de.slice(), Y = ae - W) {
                for ((A = Y < 0) ? (Y = -Y, p = de) : (W = ae, p = tt), p.reverse(), V = Y; V--; p.push(0)) ;
                p.reverse();
              } else for (C = (A = (Y = de.length) < (V = tt.length)) ? Y : V, Y = V = 0; V < C; V++) if (de[V] != tt[V]) {
                A = de[V] < tt[V];
                break;
              }
              if (A && (p = de, de = tt, tt = p, O.s = -O.s), (V = (C = tt.length) - (D = de.length)) > 0) for (; V--; de[D++] = 0) ;
              for (V = l - 1; C > Y; ) {
                if (de[--C] < tt[C]) {
                  for (D = C; D && !de[--D]; de[D] = V) ;
                  --de[D], de[C] += l;
                }
                de[C] -= tt[C];
              }
              for (; de[0] == 0; de.splice(0, 1), --W) ;
              return de[0] ? ee(O, de, W) : (O.s = ce == 3 ? -1 : 1, O.c = [O.e = 0], O);
            }, ne.modulo = ne.mod = function(O, V) {
              var D, C, p = this;
              return O = new _e(O, V), !p.c || !O.s || O.c && !O.c[0] ? new _e(NaN) : !O.c || p.c && !p.c[0] ? new _e(p) : (Te == 9 ? (C = O.s, O.s = 1, D = L(p, O, 0, 3), O.s = C, D.s *= C) : D = L(p, O, 0, Te), (O = p.minus(D.times(O))).c[0] || Te != 1 || (O.s = p.s), O);
            }, ne.multipliedBy = ne.times = function(O, V) {
              var D, C, p, A, U, Y, ae, W, de, tt, Ne, ut, Ze, Et, rr, je = this, Ge = je.c, at = (O = new _e(O, V)).c;
              if (!(Ge && at && Ge[0] && at[0])) return !je.s || !O.s || Ge && !Ge[0] && !at || at && !at[0] && !Ge ? O.c = O.e = O.s = null : (O.s *= je.s, Ge && at ? (O.c = [0], O.e = 0) : O.c = O.e = null), O;
              for (C = k(je.e / d) + k(O.e / d), O.s *= je.s, (ae = Ge.length) < (tt = at.length) && (Ze = Ge, Ge = at, at = Ze, p = ae, ae = tt, tt = p), p = ae + tt, Ze = []; p--; Ze.push(0)) ;
              for (Et = l, rr = E, p = tt; --p >= 0; ) {
                for (D = 0, Ne = at[p] % rr, ut = at[p] / rr | 0, A = p + (U = ae); A > p; ) D = ((W = Ne * (W = Ge[--U] % rr) + (Y = ut * W + (de = Ge[U] / rr | 0) * Ne) % rr * rr + Ze[A] + D) / Et | 0) + (Y / rr | 0) + ut * de, Ze[A--] = W % Et;
                Ze[A] = D;
              }
              return D ? ++C : Ze.splice(0, 1), ee(O, Ze, C);
            }, ne.negated = function() {
              var O = new _e(this);
              return O.s = -O.s || null, O;
            }, ne.plus = function(O, V) {
              var D, C = this, p = C.s;
              if (V = (O = new _e(O, V)).s, !p || !V) return new _e(NaN);
              if (p != V) return O.s = -V, C.minus(O);
              var A = C.e / d, U = O.e / d, Y = C.c, ae = O.c;
              if (!A || !U) {
                if (!Y || !ae) return new _e(p / 0);
                if (!Y[0] || !ae[0]) return ae[0] ? O : new _e(Y[0] ? C : 0 * p);
              }
              if (A = k(A), U = k(U), Y = Y.slice(), p = A - U) {
                for (p > 0 ? (U = A, D = ae) : (p = -p, D = Y), D.reverse(); p--; D.push(0)) ;
                D.reverse();
              }
              for ((p = Y.length) - (V = ae.length) < 0 && (D = ae, ae = Y, Y = D, V = p), p = 0; V; ) p = (Y[--V] = Y[V] + ae[V] + p) / l | 0, Y[V] = l === Y[V] ? 0 : Y[V] % l;
              return p && (Y = [p].concat(Y), ++U), ee(O, Y, U);
            }, ne.precision = ne.sd = function(O, V) {
              var D, C, p, A = this;
              if (O != null && O !== !!O) return I(O, 1, R), V == null ? V = ce : I(V, 0, 8), P(new _e(A), O, V);
              if (!(D = A.c)) return null;
              if (C = (p = D.length - 1) * d + 1, p = D[p]) {
                for (; p % 10 == 0; p /= 10, C--) ;
                for (p = D[0]; p >= 10; p /= 10, C++) ;
              }
              return O && A.e + 1 > C && (C = A.e + 1), C;
            }, ne.shiftedBy = function(O) {
              return I(O, -9007199254740991, b), this.times("1e" + O);
            }, ne.squareRoot = ne.sqrt = function() {
              var O, V, D, C, p, A = this, U = A.c, Y = A.s, ae = A.e, W = ie + 4, de = new _e("0.5");
              if (Y !== 1 || !U || !U[0]) return new _e(!Y || Y < 0 && (!U || U[0]) ? NaN : U ? A : 1 / 0);
              if ((Y = Math.sqrt(+T(A))) == 0 || Y == 1 / 0 ? (((V = w(U)).length + ae) % 2 == 0 && (V += "0"), Y = Math.sqrt(+V), ae = k((ae + 1) / 2) - (ae < 0 || ae % 2), D = new _e(V = Y == 1 / 0 ? "5e" + ae : (V = Y.toExponential()).slice(0, V.indexOf("e") + 1) + ae)) : D = new _e(Y + ""), D.c[0]) {
                for ((Y = (ae = D.e) + W) < 3 && (Y = 0); ; ) if (p = D, D = de.times(p.plus(L(A, p, W, 1))), w(p.c).slice(0, Y) === (V = w(D.c)).slice(0, Y)) {
                  if (D.e < ae && --Y, (V = V.slice(Y - 3, Y + 1)) != "9999" && (C || V != "4999")) {
                    +V && (+V.slice(1) || V.charAt(0) != "5") || (P(D, D.e + ie + 2, 1), O = !D.times(D).eq(A));
                    break;
                  }
                  if (!C && (P(p, p.e + ie + 2, 0), p.times(p).eq(A))) {
                    D = p;
                    break;
                  }
                  W += 4, Y += 4, C = 1;
                }
              }
              return P(D, D.e + ie + 1, ce, O);
            }, ne.toExponential = function(O, V) {
              return O != null && (I(O, 0, R), O++), Be(this, O, V, 1);
            }, ne.toFixed = function(O, V) {
              return O != null && (I(O, 0, R), O = O + this.e + 1), Be(this, O, V);
            }, ne.toFormat = function(O, V, D) {
              var C, p = this;
              if (D == null) O != null && V && typeof V == "object" ? (D = V, V = null) : O && typeof O == "object" ? (D = O, O = V = null) : D = Oe;
              else if (typeof D != "object") throw Error(g + "Argument not an object: " + D);
              if (C = p.toFixed(O, V), p.c) {
                var A, U = C.split("."), Y = +D.groupSize, ae = +D.secondaryGroupSize, W = D.groupSeparator || "", de = U[0], tt = U[1], Ne = p.s < 0, ut = Ne ? de.slice(1) : de, Ze = ut.length;
                if (ae && (A = Y, Y = ae, ae = A, Ze -= A), Y > 0 && Ze > 0) {
                  for (A = Ze % Y || Y, de = ut.substr(0, A); A < Ze; A += Y) de += W + ut.substr(A, Y);
                  ae > 0 && (de += W + ut.slice(A)), Ne && (de = "-" + de);
                }
                C = tt ? de + (D.decimalSeparator || "") + ((ae = +D.fractionGroupSize) ? tt.replace(new RegExp("\\d{" + ae + "}\\B", "g"), "$&" + (D.fractionGroupSeparator || "")) : tt) : de;
              }
              return (D.prefix || "") + C + (D.suffix || "");
            }, ne.toFraction = function(O) {
              var V, D, C, p, A, U, Y, ae, W, de, tt, Ne, ut = this, Ze = ut.c;
              if (O != null && (!(Y = new _e(O)).isInteger() && (Y.c || Y.s !== 1) || Y.lt(K))) throw Error(g + "Argument " + (Y.isInteger() ? "out of range: " : "not an integer: ") + T(Y));
              if (!Ze) return new _e(ut);
              for (V = new _e(K), W = D = new _e(K), C = ae = new _e(K), Ne = w(Ze), A = V.e = Ne.length - ut.e - 1, V.c[0] = S[(U = A % d) < 0 ? d + U : U], O = !O || Y.comparedTo(V) > 0 ? A > 0 ? V : W : Y, U = re, re = 1 / 0, Y = new _e(Ne), ae.c[0] = 0; de = L(Y, V, 0, 1), (p = D.plus(de.times(C))).comparedTo(O) != 1; ) D = C, C = p, W = ae.plus(de.times(p = W)), ae = p, V = Y.minus(de.times(p = V)), Y = p;
              return p = L(O.minus(D), C, 0, 1), ae = ae.plus(p.times(W)), D = D.plus(p.times(C)), ae.s = W.s = ut.s, tt = L(W, C, A *= 2, ce).minus(ut).abs().comparedTo(L(ae, D, A, ce).minus(ut).abs()) < 1 ? [W, C] : [ae, D], re = U, tt;
            }, ne.toNumber = function() {
              return +T(this);
            }, ne.toPrecision = function(O, V) {
              return O != null && I(O, 1, R), Be(this, O, V, 2);
            }, ne.toString = function(O) {
              var V, D = this, C = D.s, p = D.e;
              return p === null ? C ? (V = "Infinity", C < 0 && (V = "-" + V)) : V = "NaN" : (O == null ? V = p <= ye || p >= oe ? N(w(D.c), p) : H(w(D.c), p, "0") : O === 10 && Ve ? V = H(w((D = P(new _e(D), ie + p + 1, ce)).c), D.e, "0") : (I(O, 2, xe.length, "Base"), V = j(H(w(D.c), p, "0"), 10, O, C, true)), C < 0 && D.c[0] && (V = "-" + V)), V;
            }, ne.valueOf = ne.toJSON = function() {
              return T(this);
            }, ne._isBigNumber = true, x != null && _e.set(x), _e;
          }(), h.default = h.BigNumber = h, (c = (function() {
            return h;
          }).call(o, s, o, t)) === void 0 || (t.exports = c);
        })();
      }, 1731: (t, o, s) => {
        var c = s(8287).Buffer, h = s(8835).parse, f = s(7007), r = s(1083), m = s(1568), g = s(537), a = ["pfx", "key", "passphrase", "cert", "ca", "ciphers", "rejectUnauthorized", "secureProtocol", "servername", "checkServerIdentity"], l = [239, 187, 191], d = 262144, b = /^(cookie|authorization)$/i;
        function S(k, w) {
          var F = S.CONNECTING, I = w && w.headers, q = false;
          Object.defineProperty(this, "readyState", { get: function() {
            return F;
          } }), Object.defineProperty(this, "url", { get: function() {
            return k;
          } });
          var N, H = this;
          function _(J) {
            F !== S.CLOSED && (F = S.CONNECTING, $("error", new E("error", { message: J })), Z && (k = Z, Z = null, q = false), setTimeout(function() {
              F !== S.CONNECTING || H.connectionInProgress || (H.connectionInProgress = true, ue());
            }, H.reconnectInterval));
          }
          H.reconnectInterval = 1e3, H.connectionInProgress = false;
          var x = "";
          I && I["Last-Event-ID"] && (x = I["Last-Event-ID"], delete I["Last-Event-ID"]);
          var L = false, j = "", z = "", Z = null;
          function ue() {
            var J = h(k), B = J.protocol === "https:";
            if (J.headers = { "Cache-Control": "no-cache", Accept: "text/event-stream" }, x && (J.headers["Last-Event-ID"] = x), I) {
              var Q = q ? function(oe) {
                var se = {};
                for (var re in oe) b.test(re) || (se[re] = oe[re]);
                return se;
              }(I) : I;
              for (var ne in Q) {
                var K = Q[ne];
                K && (J.headers[ne] = K);
              }
            }
            if (J.rejectUnauthorized = !(w && !w.rejectUnauthorized), w && w.createConnection !== void 0 && (J.createConnection = w.createConnection), w && w.proxy) {
              var ie = h(w.proxy);
              B = ie.protocol === "https:", J.protocol = B ? "https:" : "http:", J.path = k, J.headers.Host = J.host, J.hostname = ie.hostname, J.host = ie.host, J.port = ie.port;
            }
            if (w && w.https) {
              for (var ce in w.https) if (a.indexOf(ce) !== -1) {
                var ye = w.https[ce];
                ye !== void 0 && (J[ce] = ye);
              }
            }
            w && w.withCredentials !== void 0 && (J.withCredentials = w.withCredentials), N = (B ? r : m).request(J, function(oe) {
              if (H.connectionInProgress = false, oe.statusCode === 500 || oe.statusCode === 502 || oe.statusCode === 503 || oe.statusCode === 504) return $("error", new E("error", { status: oe.statusCode, message: oe.statusMessage })), void _();
              if (oe.statusCode === 301 || oe.statusCode === 302 || oe.statusCode === 307) {
                var se = oe.headers.location;
                if (!se) return void $("error", new E("error", { status: oe.statusCode, message: oe.statusMessage }));
                var re = new URL(k).origin, ge = new URL(se).origin;
                return q = re !== ge, oe.statusCode === 307 && (Z = k), k = se, void process.nextTick(ue);
              }
              if (oe.statusCode !== 200) return $("error", new E("error", { status: oe.statusCode, message: oe.statusMessage })), H.close();
              var Te, pe;
              F = S.OPEN, oe.on("close", function() {
                oe.removeAllListeners("close"), oe.removeAllListeners("end"), _();
              }), oe.on("end", function() {
                oe.removeAllListeners("close"), oe.removeAllListeners("end"), _();
              }), $("open", new E("open"));
              var Oe = 0, xe = -1, Ve = 0, _e = 0;
              oe.on("data", function(Be) {
                Te ? (Be.length > Te.length - _e && ((Ve = 2 * Te.length + Be.length) > d && (Ve = Te.length + Be.length + d), pe = c.alloc(Ve), Te.copy(pe, 0, 0, _e), Te = pe), Be.copy(Te, _e), _e += Be.length) : (function(D) {
                  return l.every(function(C, p) {
                    return D[p] === C;
                  });
                }(Te = Be) && (Te = Te.slice(l.length)), _e = Te.length);
                for (var Qe = 0, ee = _e; Qe < ee; ) {
                  L && (Te[Qe] === 10 && ++Qe, L = false);
                  for (var P, T = -1, O = xe, V = Oe; T < 0 && V < ee; ++V) (P = Te[V]) === 58 ? O < 0 && (O = V - Qe) : P === 13 ? (L = true, T = V - Qe) : P === 10 && (T = V - Qe);
                  if (T < 0) {
                    Oe = ee - Qe, xe = O;
                    break;
                  }
                  Oe = 0, xe = -1, X(Te, Qe, O, T), Qe += T + 1;
                }
                Qe === ee ? (Te = void 0, _e = 0) : Qe > 0 && (Te = Te.slice(Qe, _e), _e = Te.length);
              });
            }), N.on("error", function(oe) {
              H.connectionInProgress = false, _(oe.message);
            }), N.setNoDelay && N.setNoDelay(true), N.end();
          }
          function $() {
            H.listeners(arguments[0]).length > 0 && H.emit.apply(H, arguments);
          }
          function X(J, B, Q, ne) {
            if (ne === 0) {
              if (j.length > 0) {
                var K = z || "message";
                $(K, new R(K, { data: j.slice(0, -1), lastEventId: x, origin: new URL(k).origin })), j = "";
              }
              z = void 0;
            } else if (Q > 0) {
              var ie = Q < 0, ce = 0, ye = J.slice(B, B + (ie ? ne : Q)).toString();
              B += ce = ie ? ne : J[B + Q + 1] !== 32 ? Q + 1 : Q + 2;
              var oe = ne - ce, se = J.slice(B, B + oe).toString();
              if (ye === "data") j += se + `
`;
              else if (ye === "event") z = se;
              else if (ye === "id") x = se;
              else if (ye === "retry") {
                var re = parseInt(se, 10);
                Number.isNaN(re) || (H.reconnectInterval = re);
              }
            }
          }
          ue(), this._close = function() {
            F !== S.CLOSED && (F = S.CLOSED, N.abort && N.abort(), N.xhr && N.xhr.abort && N.xhr.abort());
          };
        }
        function E(k, w) {
          if (Object.defineProperty(this, "type", { writable: false, value: k, enumerable: true }), w) for (var F in w) w.hasOwnProperty(F) && Object.defineProperty(this, F, { writable: false, value: w[F], enumerable: true });
        }
        function R(k, w) {
          for (var F in Object.defineProperty(this, "type", { writable: false, value: k, enumerable: true }), w) w.hasOwnProperty(F) && Object.defineProperty(this, F, { writable: false, value: w[F], enumerable: true });
        }
        t.exports = S, g.inherits(S, f.EventEmitter), S.prototype.constructor = S, ["open", "error", "message"].forEach(function(k) {
          Object.defineProperty(S.prototype, "on" + k, { get: function() {
            var w = this.listeners(k)[0];
            return w ? w._listener ? w._listener : w : void 0;
          }, set: function(w) {
            this.removeAllListeners(k), this.addEventListener(k, w);
          } });
        }), Object.defineProperty(S, "CONNECTING", { enumerable: true, value: 0 }), Object.defineProperty(S, "OPEN", { enumerable: true, value: 1 }), Object.defineProperty(S, "CLOSED", { enumerable: true, value: 2 }), S.prototype.CONNECTING = 0, S.prototype.OPEN = 1, S.prototype.CLOSED = 2, S.prototype.close = function() {
          this._close();
        }, S.prototype.addEventListener = function(k, w) {
          typeof w == "function" && (w._listener = w, this.on(k, w));
        }, S.prototype.dispatchEvent = function(k) {
          if (!k.type) throw new Error("UNSPECIFIED_EVENT_TYPE_ERR");
          this.emit(k.type, k.detail);
        }, S.prototype.removeEventListener = function(k, w) {
          typeof w == "function" && (w._listener = void 0, this.removeListener(k, w));
        };
      }, 1734: (t) => {
        var o = Object.prototype.toString, s = Math.max, c = function(h, f) {
          for (var r = [], m = 0; m < h.length; m += 1) r[m] = h[m];
          for (var g = 0; g < f.length; g += 1) r[g + h.length] = f[g];
          return r;
        };
        t.exports = function(h) {
          var f = this;
          if (typeof f != "function" || o.apply(f) !== "[object Function]") throw new TypeError("Function.prototype.bind called on incompatible " + f);
          for (var r, m = function(b, S) {
            for (var E = [], R = S, k = 0; R < b.length; R += 1, k += 1) E[k] = b[R];
            return E;
          }(arguments, 1), g = s(0, f.length - m.length), a = [], l = 0; l < g; l++) a[l] = "$" + l;
          if (r = Function("binder", "return function (" + function(b, S) {
            for (var E = "", R = 0; R < b.length; R += 1) E += b[R], R + 1 < b.length && (E += S);
            return E;
          }(a, ",") + "){ return binder.apply(this,arguments); }")(function() {
            if (this instanceof r) {
              var b = f.apply(this, c(m, arguments));
              return Object(b) === b ? b : this;
            }
            return f.apply(h, c(m, arguments));
          }), f.prototype) {
            var d = function() {
            };
            d.prototype = f.prototype, r.prototype = new d(), d.prototype = null;
          }
          return r;
        };
      }, 1764: (t, o, s) => {
        var c = s(8287).Buffer;
        Object.defineProperty(o, "__esModule", { value: true }), o.Asset = void 0;
        var h, f = s(645), r = (h = s(1918)) && h.__esModule ? h : { default: h }, m = s(6691), g = s(7120), a = s(9152);
        function l(E) {
          return l = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(R) {
            return typeof R;
          } : function(R) {
            return R && typeof Symbol == "function" && R.constructor === Symbol && R !== Symbol.prototype ? "symbol" : typeof R;
          }, l(E);
        }
        function d(E, R) {
          for (var k = 0; k < R.length; k++) {
            var w = R[k];
            w.enumerable = w.enumerable || false, w.configurable = true, "value" in w && (w.writable = true), Object.defineProperty(E, b(w.key), w);
          }
        }
        function b(E) {
          var R = function(k, w) {
            if (l(k) != "object" || !k) return k;
            var F = k[Symbol.toPrimitive];
            if (F !== void 0) {
              var I = F.call(k, w);
              if (l(I) != "object") return I;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(k);
          }(E, "string");
          return l(R) == "symbol" ? R : R + "";
        }
        o.Asset = function() {
          function E(R, k) {
            if (function(w, F) {
              if (!(w instanceof F)) throw new TypeError("Cannot call a class as a function");
            }(this, E), !/^[a-zA-Z0-9]{1,12}$/.test(R)) throw new Error("Asset code is invalid (maximum alphanumeric, 12 characters at max)");
            if (String(R).toLowerCase() !== "xlm" && !k) throw new Error("Issuer cannot be null");
            if (k && !g.StrKey.isValidEd25519PublicKey(k)) throw new Error("Issuer is invalid");
            String(R).toLowerCase() === "xlm" ? this.code = "XLM" : this.code = R, this.issuer = k;
          }
          return function(R, k, w) {
            return k && d(R.prototype, k), w && d(R, w), Object.defineProperty(R, "prototype", { writable: false }), R;
          }(E, [{ key: "toXDRObject", value: function() {
            return this._toXDRObject(r.default.Asset);
          } }, { key: "toChangeTrustXDRObject", value: function() {
            return this._toXDRObject(r.default.ChangeTrustAsset);
          } }, { key: "toTrustLineXDRObject", value: function() {
            return this._toXDRObject(r.default.TrustLineAsset);
          } }, { key: "contractId", value: function(R) {
            var k = (0, a.hash)(c.from(R)), w = r.default.HashIdPreimage.envelopeTypeContractId(new r.default.HashIdPreimageContractId({ networkId: k, contractIdPreimage: r.default.ContractIdPreimage.contractIdPreimageFromAsset(this.toXDRObject()) }));
            return g.StrKey.encodeContract((0, a.hash)(w.toXDR()));
          } }, { key: "_toXDRObject", value: function() {
            var R, k, w = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : r.default.Asset;
            if (this.isNative()) return w.assetTypeNative();
            this.code.length <= 4 ? (R = r.default.AlphaNum4, k = "assetTypeCreditAlphanum4") : (R = r.default.AlphaNum12, k = "assetTypeCreditAlphanum12");
            var F = this.code.length <= 4 ? 4 : 12;
            return new w(k, new R({ assetCode: this.code.padEnd(F, "\0"), issuer: m.Keypair.fromPublicKey(this.issuer).xdrAccountId() }));
          } }, { key: "getCode", value: function() {
            if (this.code !== void 0) return String(this.code);
          } }, { key: "getIssuer", value: function() {
            if (this.issuer !== void 0) return String(this.issuer);
          } }, { key: "getAssetType", value: function() {
            switch (this.getRawAssetType().value) {
              case r.default.AssetType.assetTypeNative().value:
                return "native";
              case r.default.AssetType.assetTypeCreditAlphanum4().value:
                return "credit_alphanum4";
              case r.default.AssetType.assetTypeCreditAlphanum12().value:
                return "credit_alphanum12";
              default:
                return "unknown";
            }
          } }, { key: "getRawAssetType", value: function() {
            return this.isNative() ? r.default.AssetType.assetTypeNative() : this.code.length <= 4 ? r.default.AssetType.assetTypeCreditAlphanum4() : r.default.AssetType.assetTypeCreditAlphanum12();
          } }, { key: "isNative", value: function() {
            return !this.issuer;
          } }, { key: "equals", value: function(R) {
            return this.code === R.getCode() && this.issuer === R.getIssuer();
          } }, { key: "toString", value: function() {
            return this.isNative() ? "native" : "".concat(this.getCode(), ":").concat(this.getIssuer());
          } }], [{ key: "native", value: function() {
            return new E("XLM");
          } }, { key: "fromOperation", value: function(R) {
            var k, w;
            switch (R.switch()) {
              case r.default.AssetType.assetTypeNative():
                return this.native();
              case r.default.AssetType.assetTypeCreditAlphanum4():
                k = R.alphaNum4();
              case r.default.AssetType.assetTypeCreditAlphanum12():
                return k = k || R.alphaNum12(), w = g.StrKey.encodeEd25519PublicKey(k.issuer().ed25519()), new this((0, f.trimEnd)(k.assetCode(), "\0"), w);
              default:
                throw new Error("Invalid asset type: ".concat(R.switch().name));
            }
          } }, { key: "compare", value: function(R, k) {
            if (!(R && R instanceof E)) throw new Error("assetA is invalid");
            if (!(k && k instanceof E)) throw new Error("assetB is invalid");
            if (R.equals(k)) return 0;
            var w = R.getRawAssetType().value, F = k.getRawAssetType().value;
            if (w !== F) return w < F ? -1 : 1;
            var I = S(R.getCode(), k.getCode());
            return I !== 0 ? I : S(R.getIssuer(), k.getIssuer());
          } }]);
        }();
        function S(E, R) {
          return c.compare(c.from(E, "ascii"), c.from(R, "ascii"));
        }
      }, 1804: (t, o, s) => {
        Object.defineProperty(o, "__esModule", { value: true }), o.setTrustLineFlags = function() {
          var m = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, g = {};
          if (r(m.flags) !== "object" || Object.keys(m.flags).length === 0) throw new Error("opts.flags must be a map of boolean flags to modify");
          var a = { authorized: h.default.TrustLineFlags.authorizedFlag(), authorizedToMaintainLiabilities: h.default.TrustLineFlags.authorizedToMaintainLiabilitiesFlag(), clawbackEnabled: h.default.TrustLineFlags.trustlineClawbackEnabledFlag() }, l = 0, d = 0;
          Object.keys(m.flags).forEach(function(S) {
            if (!Object.prototype.hasOwnProperty.call(a, S)) throw new Error("unsupported flag name specified: ".concat(S));
            var E = m.flags[S], R = a[S].value;
            E === true ? d |= R : E === false && (l |= R);
          }), g.trustor = f.Keypair.fromPublicKey(m.trustor).xdrAccountId(), g.asset = m.asset.toXDRObject(), g.clearFlags = l, g.setFlags = d;
          var b = { body: h.default.OperationBody.setTrustLineFlags(new h.default.SetTrustLineFlagsOp(g)) };
          return this.setSourceAccount(b, m), new h.default.Operation(b);
        };
        var c, h = (c = s(1918)) && c.__esModule ? c : { default: c }, f = s(6691);
        function r(m) {
          return r = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(g) {
            return typeof g;
          } : function(g) {
            return g && typeof Symbol == "function" && g.constructor === Symbol && g !== Symbol.prototype ? "symbol" : typeof g;
          }, r(m);
        }
      }, 1918: (t, o, s) => {
        Object.defineProperty(o, "__esModule", { value: true }), o.default = void 0;
        var c, h = (c = s(7938)) && c.__esModule ? c : { default: c };
        o.default = h.default;
      }, 1922: (t, o, s) => {
        Object.defineProperty(o, "__esModule", { value: true }), o.manageBuyOffer = function(r) {
          var m = {};
          if (m.selling = r.selling.toXDRObject(), m.buying = r.buying.toXDRObject(), !this.isValidAmount(r.buyAmount, true)) throw new TypeError(this.constructAmountRequirementsError("buyAmount"));
          if (m.buyAmount = this._toXDRAmount(r.buyAmount), r.price === void 0) throw new TypeError("price argument is required");
          m.price = this._toXDRPrice(r.price), r.offerId !== void 0 ? r.offerId = r.offerId.toString() : r.offerId = "0", m.offerId = h.Hyper.fromString(r.offerId);
          var g = new f.default.ManageBuyOfferOp(m), a = {};
          return a.body = f.default.OperationBody.manageBuyOffer(g), this.setSourceAccount(a, r), new f.default.Operation(a);
        };
        var c, h = s(3740), f = (c = s(1918)) && c.__esModule ? c : { default: c };
      }, 1924: (t, o, s) => {
        s.r(o), s.d(o, { StellarBase: () => r, default: () => m, httpClient: () => c.ok });
        var c = s(9983), h = s(4356), f = {};
        for (const g in h) ["default", "StellarBase", "httpClient"].indexOf(g) < 0 && (f[g] = () => h[g]);
        s.d(o, f);
        var r = s(356);
        const m = (t = s.hmd(t)).exports;
      }, 2018: (t, o, s) => {
        var c = s(8287).Buffer;
        Object.defineProperty(o, "__esModule", { value: true }), o.setOptions = function(a) {
          var l = {};
          if (a.inflationDest) {
            if (!m.StrKey.isValidEd25519PublicKey(a.inflationDest)) throw new Error("inflationDest is invalid");
            l.inflationDest = r.Keypair.fromPublicKey(a.inflationDest).xdrAccountId();
          }
          if (l.clearFlags = this._checkUnsignedIntValue("clearFlags", a.clearFlags), l.setFlags = this._checkUnsignedIntValue("setFlags", a.setFlags), l.masterWeight = this._checkUnsignedIntValue("masterWeight", a.masterWeight, g), l.lowThreshold = this._checkUnsignedIntValue("lowThreshold", a.lowThreshold, g), l.medThreshold = this._checkUnsignedIntValue("medThreshold", a.medThreshold, g), l.highThreshold = this._checkUnsignedIntValue("highThreshold", a.highThreshold, g), a.homeDomain !== void 0 && typeof a.homeDomain != "string") throw new TypeError("homeDomain argument must be of type String");
          if (l.homeDomain = a.homeDomain, a.signer) {
            var d, b = this._checkUnsignedIntValue("signer.weight", a.signer.weight, g), S = 0;
            if (a.signer.ed25519PublicKey) {
              if (!m.StrKey.isValidEd25519PublicKey(a.signer.ed25519PublicKey)) throw new Error("signer.ed25519PublicKey is invalid.");
              var E = m.StrKey.decodeEd25519PublicKey(a.signer.ed25519PublicKey);
              d = new f.default.SignerKey.signerKeyTypeEd25519(E), S += 1;
            }
            if (a.signer.preAuthTx) {
              if (typeof a.signer.preAuthTx == "string" && (a.signer.preAuthTx = c.from(a.signer.preAuthTx, "hex")), !c.isBuffer(a.signer.preAuthTx) || a.signer.preAuthTx.length !== 32) throw new Error("signer.preAuthTx must be 32 bytes Buffer.");
              d = new f.default.SignerKey.signerKeyTypePreAuthTx(a.signer.preAuthTx), S += 1;
            }
            if (a.signer.sha256Hash) {
              if (typeof a.signer.sha256Hash == "string" && (a.signer.sha256Hash = c.from(a.signer.sha256Hash, "hex")), !c.isBuffer(a.signer.sha256Hash) || a.signer.sha256Hash.length !== 32) throw new Error("signer.sha256Hash must be 32 bytes Buffer.");
              d = new f.default.SignerKey.signerKeyTypeHashX(a.signer.sha256Hash), S += 1;
            }
            if (a.signer.ed25519SignedPayload) {
              if (!m.StrKey.isValidSignedPayload(a.signer.ed25519SignedPayload)) throw new Error("signer.ed25519SignedPayload is invalid.");
              var R = m.StrKey.decodeSignedPayload(a.signer.ed25519SignedPayload), k = f.default.SignerKeyEd25519SignedPayload.fromXDR(R);
              d = f.default.SignerKey.signerKeyTypeEd25519SignedPayload(k), S += 1;
            }
            if (S !== 1) throw new Error("Signer object must contain exactly one of signer.ed25519PublicKey, signer.sha256Hash, signer.preAuthTx.");
            l.signer = new f.default.Signer({ key: d, weight: b });
          }
          var w = new f.default.SetOptionsOp(l), F = {};
          return F.body = f.default.OperationBody.setOptions(w), this.setSourceAccount(F, a), new f.default.Operation(F);
        };
        var h, f = (h = s(1918)) && h.__esModule ? h : { default: h }, r = s(6691), m = s(7120);
        function g(a, l) {
          if (a >= 0 && a <= 255) return true;
          throw new Error("".concat(l, " value must be between 0 and 255"));
        }
      }, 2075: (t, o, s) => {
        Object.defineProperty(o, "__esModule", { value: true }), o.pathPaymentStrictReceive = function(r) {
          switch (true) {
            case !r.sendAsset:
              throw new Error("Must specify a send asset");
            case !this.isValidAmount(r.sendMax):
              throw new TypeError(this.constructAmountRequirementsError("sendMax"));
            case !r.destAsset:
              throw new Error("Must provide a destAsset for a payment operation");
            case !this.isValidAmount(r.destAmount):
              throw new TypeError(this.constructAmountRequirementsError("destAmount"));
          }
          var m = {};
          m.sendAsset = r.sendAsset.toXDRObject(), m.sendMax = this._toXDRAmount(r.sendMax);
          try {
            m.destination = (0, f.decodeAddressToMuxedAccount)(r.destination);
          } catch {
            throw new Error("destination is invalid");
          }
          m.destAsset = r.destAsset.toXDRObject(), m.destAmount = this._toXDRAmount(r.destAmount);
          var g = r.path ? r.path : [];
          m.path = g.map(function(d) {
            return d.toXDRObject();
          });
          var a = new h.default.PathPaymentStrictReceiveOp(m), l = {};
          return l.body = h.default.OperationBody.pathPaymentStrictReceive(a), this.setSourceAccount(l, r), new h.default.Operation(l);
        };
        var c, h = (c = s(1918)) && c.__esModule ? c : { default: c }, f = s(6160);
      }, 2115: (t, o, s) => {
        Object.defineProperty(o, "__esModule", { value: true }), o.createAccount = function(m) {
          if (!r.StrKey.isValidEd25519PublicKey(m.destination)) throw new Error("destination is invalid");
          if (!this.isValidAmount(m.startingBalance, true)) throw new TypeError(this.constructAmountRequirementsError("startingBalance"));
          var g = {};
          g.destination = f.Keypair.fromPublicKey(m.destination).xdrAccountId(), g.startingBalance = this._toXDRAmount(m.startingBalance);
          var a = new h.default.CreateAccountOp(g), l = {};
          return l.body = h.default.OperationBody.createAccount(a), this.setSourceAccount(l, m), new h.default.Operation(l);
        };
        var c, h = (c = s(1918)) && c.__esModule ? c : { default: c }, f = s(6691), r = s(7120);
      }, 2135: (t, o, s) => {
        Object.defineProperty(o, "__esModule", { value: true }), o.Account = void 0;
        var c, h = (c = s(1242)) && c.__esModule ? c : { default: c }, f = s(7120);
        function r(a) {
          return r = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(l) {
            return typeof l;
          } : function(l) {
            return l && typeof Symbol == "function" && l.constructor === Symbol && l !== Symbol.prototype ? "symbol" : typeof l;
          }, r(a);
        }
        function m(a, l) {
          for (var d = 0; d < l.length; d++) {
            var b = l[d];
            b.enumerable = b.enumerable || false, b.configurable = true, "value" in b && (b.writable = true), Object.defineProperty(a, g(b.key), b);
          }
        }
        function g(a) {
          var l = function(d, b) {
            if (r(d) != "object" || !d) return d;
            var S = d[Symbol.toPrimitive];
            if (S !== void 0) {
              var E = S.call(d, b);
              if (r(E) != "object") return E;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(d);
          }(a, "string");
          return r(l) == "symbol" ? l : l + "";
        }
        o.Account = function() {
          return function(a, l, d) {
            return l && m(a.prototype, l), Object.defineProperty(a, "prototype", { writable: false }), a;
          }(function a(l, d) {
            if (function(b, S) {
              if (!(b instanceof S)) throw new TypeError("Cannot call a class as a function");
            }(this, a), f.StrKey.isValidMed25519PublicKey(l)) throw new Error("accountId is an M-address; use MuxedAccount instead");
            if (!f.StrKey.isValidEd25519PublicKey(l)) throw new Error("accountId is invalid");
            if (typeof d != "string") throw new Error("sequence must be of type string");
            this._accountId = l, this.sequence = new h.default(d);
          }, [{ key: "accountId", value: function() {
            return this._accountId;
          } }, { key: "sequenceNumber", value: function() {
            return this.sequence.toString();
          } }, { key: "incrementSequenceNumber", value: function() {
            this.sequence = this.sequence.plus(1);
          } }]);
        }();
      }, 2203: (t, o, s) => {
        Object.defineProperty(o, "__esModule", { value: true }), o.clawbackClaimableBalance = function() {
          var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          (0, f.validateClaimableBalanceId)(r.balanceId);
          var m = { balanceId: h.default.ClaimableBalanceId.fromXDR(r.balanceId, "hex") }, g = { body: h.default.OperationBody.clawbackClaimableBalance(new h.default.ClawbackClaimableBalanceOp(m)) };
          return this.setSourceAccount(g, r), new h.default.Operation(g);
        };
        var c, h = (c = s(1918)) && c.__esModule ? c : { default: c }, f = s(7239);
      }, 2205: (t, o, s) => {
        var c = s(6743), h = s(1002), f = s(3144);
        t.exports = function() {
          return f(c, h, arguments);
        };
      }, 2243: (t, o, s) => {
        Object.defineProperty(o, "__esModule", { value: true }), o.MuxedAccount = void 0;
        var c, h = (c = s(1918)) && c.__esModule ? c : { default: c }, f = s(2135), r = s(7120), m = s(6160);
        function g(d) {
          return g = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(b) {
            return typeof b;
          } : function(b) {
            return b && typeof Symbol == "function" && b.constructor === Symbol && b !== Symbol.prototype ? "symbol" : typeof b;
          }, g(d);
        }
        function a(d, b) {
          for (var S = 0; S < b.length; S++) {
            var E = b[S];
            E.enumerable = E.enumerable || false, E.configurable = true, "value" in E && (E.writable = true), Object.defineProperty(d, l(E.key), E);
          }
        }
        function l(d) {
          var b = function(S, E) {
            if (g(S) != "object" || !S) return S;
            var R = S[Symbol.toPrimitive];
            if (R !== void 0) {
              var k = R.call(S, E);
              if (g(k) != "object") return k;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(S);
          }(d, "string");
          return g(b) == "symbol" ? b : b + "";
        }
        o.MuxedAccount = function() {
          function d(b, S) {
            (function(R, k) {
              if (!(R instanceof k)) throw new TypeError("Cannot call a class as a function");
            })(this, d);
            var E = b.accountId();
            if (!r.StrKey.isValidEd25519PublicKey(E)) throw new Error("accountId is invalid");
            this.account = b, this._muxedXdr = (0, m.encodeMuxedAccount)(E, S), this._mAddress = (0, m.encodeMuxedAccountToAddress)(this._muxedXdr), this._id = S;
          }
          return function(b, S, E) {
            return S && a(b.prototype, S), E && a(b, E), Object.defineProperty(b, "prototype", { writable: false }), b;
          }(d, [{ key: "baseAccount", value: function() {
            return this.account;
          } }, { key: "accountId", value: function() {
            return this._mAddress;
          } }, { key: "id", value: function() {
            return this._id;
          } }, { key: "setId", value: function(b) {
            if (typeof b != "string") throw new Error("id should be a string representing a number (uint64)");
            return this._muxedXdr.med25519().id(h.default.Uint64.fromString(b)), this._mAddress = (0, m.encodeMuxedAccountToAddress)(this._muxedXdr), this._id = b, this;
          } }, { key: "sequenceNumber", value: function() {
            return this.account.sequenceNumber();
          } }, { key: "incrementSequenceNumber", value: function() {
            return this.account.incrementSequenceNumber();
          } }, { key: "toXDRObject", value: function() {
            return this._muxedXdr;
          } }, { key: "equals", value: function(b) {
            return this.accountId() === b.accountId();
          } }], [{ key: "fromAddress", value: function(b, S) {
            var E = (0, m.decodeAddressToMuxedAccount)(b), R = (0, m.extractBaseAddress)(b), k = E.med25519().id().toString();
            return new d(new f.Account(R, S), k);
          } }]);
        }();
      }, 2262: (t, o, s) => {
        Object.defineProperty(o, "__esModule", { value: true }), o.LiquidityPoolAsset = void 0;
        var c, h = (c = s(1918)) && c.__esModule ? c : { default: c }, f = s(1764), r = s(5578);
        function m(S) {
          return m = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(E) {
            return typeof E;
          } : function(E) {
            return E && typeof Symbol == "function" && E.constructor === Symbol && E !== Symbol.prototype ? "symbol" : typeof E;
          }, m(S);
        }
        function g(S, E) {
          var R = Object.keys(S);
          if (Object.getOwnPropertySymbols) {
            var k = Object.getOwnPropertySymbols(S);
            E && (k = k.filter(function(w) {
              return Object.getOwnPropertyDescriptor(S, w).enumerable;
            })), R.push.apply(R, k);
          }
          return R;
        }
        function a(S) {
          for (var E = 1; E < arguments.length; E++) {
            var R = arguments[E] != null ? arguments[E] : {};
            E % 2 ? g(Object(R), true).forEach(function(k) {
              l(S, k, R[k]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(S, Object.getOwnPropertyDescriptors(R)) : g(Object(R)).forEach(function(k) {
              Object.defineProperty(S, k, Object.getOwnPropertyDescriptor(R, k));
            });
          }
          return S;
        }
        function l(S, E, R) {
          return (E = b(E)) in S ? Object.defineProperty(S, E, { value: R, enumerable: true, configurable: true, writable: true }) : S[E] = R, S;
        }
        function d(S, E) {
          for (var R = 0; R < E.length; R++) {
            var k = E[R];
            k.enumerable = k.enumerable || false, k.configurable = true, "value" in k && (k.writable = true), Object.defineProperty(S, b(k.key), k);
          }
        }
        function b(S) {
          var E = function(R, k) {
            if (m(R) != "object" || !R) return R;
            var w = R[Symbol.toPrimitive];
            if (w !== void 0) {
              var F = w.call(R, k);
              if (m(F) != "object") return F;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(R);
          }(S, "string");
          return m(E) == "symbol" ? E : E + "";
        }
        o.LiquidityPoolAsset = function() {
          return function(S, E, R) {
            return E && d(S.prototype, E), R && d(S, R), Object.defineProperty(S, "prototype", { writable: false }), S;
          }(function S(E, R, k) {
            if (function(w, F) {
              if (!(w instanceof F)) throw new TypeError("Cannot call a class as a function");
            }(this, S), !(E && E instanceof f.Asset)) throw new Error("assetA is invalid");
            if (!(R && R instanceof f.Asset)) throw new Error("assetB is invalid");
            if (f.Asset.compare(E, R) !== -1) throw new Error("Assets are not in lexicographic order");
            if (!k || k !== r.LiquidityPoolFeeV18) throw new Error("fee is invalid");
            this.assetA = E, this.assetB = R, this.fee = k;
          }, [{ key: "toXDRObject", value: function() {
            var S = new h.default.LiquidityPoolConstantProductParameters({ assetA: this.assetA.toXDRObject(), assetB: this.assetB.toXDRObject(), fee: this.fee }), E = new h.default.LiquidityPoolParameters("liquidityPoolConstantProduct", S);
            return new h.default.ChangeTrustAsset("assetTypePoolShare", E);
          } }, { key: "getLiquidityPoolParameters", value: function() {
            return a(a({}, this), {}, { assetA: this.assetA, assetB: this.assetB, fee: this.fee });
          } }, { key: "getAssetType", value: function() {
            return "liquidity_pool_shares";
          } }, { key: "equals", value: function(S) {
            return this.assetA.equals(S.assetA) && this.assetB.equals(S.assetB) && this.fee === S.fee;
          } }, { key: "toString", value: function() {
            var S = (0, r.getLiquidityPoolId)("constant_product", this.getLiquidityPoolParameters()).toString("hex");
            return "liquidity_pool:".concat(S);
          } }], [{ key: "fromOperation", value: function(S) {
            var E = S.switch();
            if (E === h.default.AssetType.assetTypePoolShare()) {
              var R = S.liquidityPool().constantProduct();
              return new this(f.Asset.fromOperation(R.assetA()), f.Asset.fromOperation(R.assetB()), R.fee());
            }
            throw new Error("Invalid asset type: ".concat(E.name));
          } }]);
        }();
      }, 2271: (t, o, s) => {
        var c = s(453), h = s(6556), f = s(8859), r = s(507), m = s(9675), g = c("%WeakMap%", true), a = h("WeakMap.prototype.get", true), l = h("WeakMap.prototype.set", true), d = h("WeakMap.prototype.has", true), b = h("WeakMap.prototype.delete", true);
        t.exports = g ? function() {
          var S, E, R = { assert: function(k) {
            if (!R.has(k)) throw new m("Side channel does not contain " + f(k));
          }, delete: function(k) {
            if (g && k && (typeof k == "object" || typeof k == "function")) {
              if (S) return b(S, k);
            } else if (r && E) return E.delete(k);
            return false;
          }, get: function(k) {
            return g && k && (typeof k == "object" || typeof k == "function") && S ? a(S, k) : E && E.get(k);
          }, has: function(k) {
            return g && k && (typeof k == "object" || typeof k == "function") && S ? d(S, k) : !!E && E.has(k);
          }, set: function(k, w) {
            g && k && (typeof k == "object" || typeof k == "function") ? (S || (S = new g()), l(S, k, w)) : r && (E || (E = r()), E.set(k, w));
          } };
          return R;
        } : r;
      }, 2634: () => {
      }, 2642: (t, o, s) => {
        var c = s(7720), h = Object.prototype.hasOwnProperty, f = Array.isArray, r = { allowDots: false, allowEmptyArrays: false, allowPrototypes: false, allowSparse: false, arrayLimit: 20, charset: "utf-8", charsetSentinel: false, comma: false, decodeDotInKeys: false, decoder: c.decode, delimiter: "&", depth: 5, duplicates: "combine", ignoreQueryPrefix: false, interpretNumericEntities: false, parameterLimit: 1e3, parseArrays: true, plainObjects: false, strictDepth: false, strictNullHandling: false, throwOnLimitExceeded: false }, m = function(l) {
          return l.replace(/&#(\d+);/g, function(d, b) {
            return String.fromCharCode(parseInt(b, 10));
          });
        }, g = function(l, d, b) {
          if (l && typeof l == "string" && d.comma && l.indexOf(",") > -1) return l.split(",");
          if (d.throwOnLimitExceeded && b >= d.arrayLimit) throw new RangeError("Array limit exceeded. Only " + d.arrayLimit + " element" + (d.arrayLimit === 1 ? "" : "s") + " allowed in an array.");
          return l;
        }, a = function(l, d, b, S) {
          if (l) {
            var E = b.allowDots ? l.replace(/\.([^.[]+)/g, "[$1]") : l, R = /(\[[^[\]]*])/g, k = b.depth > 0 && /(\[[^[\]]*])/.exec(E), w = k ? E.slice(0, k.index) : E, F = [];
            if (w) {
              if (!b.plainObjects && h.call(Object.prototype, w) && !b.allowPrototypes) return;
              F.push(w);
            }
            for (var I = 0; b.depth > 0 && (k = R.exec(E)) !== null && I < b.depth; ) {
              if (I += 1, !b.plainObjects && h.call(Object.prototype, k[1].slice(1, -1)) && !b.allowPrototypes) return;
              F.push(k[1]);
            }
            if (k) {
              if (b.strictDepth === true) throw new RangeError("Input depth exceeded depth option of " + b.depth + " and strictDepth is true");
              F.push("[" + E.slice(k.index) + "]");
            }
            return function(q, N, H, _) {
              var x = 0;
              if (q.length > 0 && q[q.length - 1] === "[]") {
                var L = q.slice(0, -1).join("");
                x = Array.isArray(N) && N[L] ? N[L].length : 0;
              }
              for (var j = _ ? N : g(N, H, x), z = q.length - 1; z >= 0; --z) {
                var Z, ue = q[z];
                if (ue === "[]" && H.parseArrays) Z = H.allowEmptyArrays && (j === "" || H.strictNullHandling && j === null) ? [] : c.combine([], j);
                else {
                  Z = H.plainObjects ? { __proto__: null } : {};
                  var $ = ue.charAt(0) === "[" && ue.charAt(ue.length - 1) === "]" ? ue.slice(1, -1) : ue, X = H.decodeDotInKeys ? $.replace(/%2E/g, ".") : $, J = parseInt(X, 10);
                  H.parseArrays || X !== "" ? !isNaN(J) && ue !== X && String(J) === X && J >= 0 && H.parseArrays && J <= H.arrayLimit ? (Z = [])[J] = j : X !== "__proto__" && (Z[X] = j) : Z = { 0: j };
                }
                j = Z;
              }
              return j;
            }(F, d, b, S);
          }
        };
        t.exports = function(l, d) {
          var b = function(I) {
            if (!I) return r;
            if (I.allowEmptyArrays !== void 0 && typeof I.allowEmptyArrays != "boolean") throw new TypeError("`allowEmptyArrays` option can only be `true` or `false`, when provided");
            if (I.decodeDotInKeys !== void 0 && typeof I.decodeDotInKeys != "boolean") throw new TypeError("`decodeDotInKeys` option can only be `true` or `false`, when provided");
            if (I.decoder !== null && I.decoder !== void 0 && typeof I.decoder != "function") throw new TypeError("Decoder has to be a function.");
            if (I.charset !== void 0 && I.charset !== "utf-8" && I.charset !== "iso-8859-1") throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
            if (I.throwOnLimitExceeded !== void 0 && typeof I.throwOnLimitExceeded != "boolean") throw new TypeError("`throwOnLimitExceeded` option must be a boolean");
            var q = I.charset === void 0 ? r.charset : I.charset, N = I.duplicates === void 0 ? r.duplicates : I.duplicates;
            if (N !== "combine" && N !== "first" && N !== "last") throw new TypeError("The duplicates option must be either combine, first, or last");
            return { allowDots: I.allowDots === void 0 ? I.decodeDotInKeys === true || r.allowDots : !!I.allowDots, allowEmptyArrays: typeof I.allowEmptyArrays == "boolean" ? !!I.allowEmptyArrays : r.allowEmptyArrays, allowPrototypes: typeof I.allowPrototypes == "boolean" ? I.allowPrototypes : r.allowPrototypes, allowSparse: typeof I.allowSparse == "boolean" ? I.allowSparse : r.allowSparse, arrayLimit: typeof I.arrayLimit == "number" ? I.arrayLimit : r.arrayLimit, charset: q, charsetSentinel: typeof I.charsetSentinel == "boolean" ? I.charsetSentinel : r.charsetSentinel, comma: typeof I.comma == "boolean" ? I.comma : r.comma, decodeDotInKeys: typeof I.decodeDotInKeys == "boolean" ? I.decodeDotInKeys : r.decodeDotInKeys, decoder: typeof I.decoder == "function" ? I.decoder : r.decoder, delimiter: typeof I.delimiter == "string" || c.isRegExp(I.delimiter) ? I.delimiter : r.delimiter, depth: typeof I.depth == "number" || I.depth === false ? +I.depth : r.depth, duplicates: N, ignoreQueryPrefix: I.ignoreQueryPrefix === true, interpretNumericEntities: typeof I.interpretNumericEntities == "boolean" ? I.interpretNumericEntities : r.interpretNumericEntities, parameterLimit: typeof I.parameterLimit == "number" ? I.parameterLimit : r.parameterLimit, parseArrays: I.parseArrays !== false, plainObjects: typeof I.plainObjects == "boolean" ? I.plainObjects : r.plainObjects, strictDepth: typeof I.strictDepth == "boolean" ? !!I.strictDepth : r.strictDepth, strictNullHandling: typeof I.strictNullHandling == "boolean" ? I.strictNullHandling : r.strictNullHandling, throwOnLimitExceeded: typeof I.throwOnLimitExceeded == "boolean" && I.throwOnLimitExceeded };
          }(d);
          if (l === "" || l == null) return b.plainObjects ? { __proto__: null } : {};
          for (var S = typeof l == "string" ? function(I, q) {
            var N = { __proto__: null }, H = q.ignoreQueryPrefix ? I.replace(/^\?/, "") : I;
            H = H.replace(/%5B/gi, "[").replace(/%5D/gi, "]");
            var _ = q.parameterLimit === 1 / 0 ? void 0 : q.parameterLimit, x = H.split(q.delimiter, q.throwOnLimitExceeded ? _ + 1 : _);
            if (q.throwOnLimitExceeded && x.length > _) throw new RangeError("Parameter limit exceeded. Only " + _ + " parameter" + (_ === 1 ? "" : "s") + " allowed.");
            var L, j = -1, z = q.charset;
            if (q.charsetSentinel) for (L = 0; L < x.length; ++L) x[L].indexOf("utf8=") === 0 && (x[L] === "utf8=%E2%9C%93" ? z = "utf-8" : x[L] === "utf8=%26%2310003%3B" && (z = "iso-8859-1"), j = L, L = x.length);
            for (L = 0; L < x.length; ++L) if (L !== j) {
              var Z, ue, $ = x[L], X = $.indexOf("]="), J = X === -1 ? $.indexOf("=") : X + 1;
              J === -1 ? (Z = q.decoder($, r.decoder, z, "key"), ue = q.strictNullHandling ? null : "") : (Z = q.decoder($.slice(0, J), r.decoder, z, "key"), ue = c.maybeMap(g($.slice(J + 1), q, f(N[Z]) ? N[Z].length : 0), function(Q) {
                return q.decoder(Q, r.decoder, z, "value");
              })), ue && q.interpretNumericEntities && z === "iso-8859-1" && (ue = m(String(ue))), $.indexOf("[]=") > -1 && (ue = f(ue) ? [ue] : ue);
              var B = h.call(N, Z);
              B && q.duplicates === "combine" ? N[Z] = c.combine(N[Z], ue) : B && q.duplicates !== "last" || (N[Z] = ue);
            }
            return N;
          }(l, b) : l, E = b.plainObjects ? { __proto__: null } : {}, R = Object.keys(S), k = 0; k < R.length; ++k) {
            var w = R[k], F = a(w, S[w], b, typeof l == "string");
            E = c.merge(E, F, b);
          }
          return b.allowSparse === true ? E : c.compact(E);
        };
      }, 2682: (t, o, s) => {
        var c = s(9600), h = Object.prototype.toString, f = Object.prototype.hasOwnProperty;
        t.exports = function(r, m, g) {
          if (!c(m)) throw new TypeError("iterator must be a function");
          var a, l;
          arguments.length >= 3 && (a = g), l = r, h.call(l) === "[object Array]" ? function(d, b, S) {
            for (var E = 0, R = d.length; E < R; E++) f.call(d, E) && (S == null ? b(d[E], E, d) : b.call(S, d[E], E, d));
          }(r, m, a) : typeof r == "string" ? function(d, b, S) {
            for (var E = 0, R = d.length; E < R; E++) S == null ? b(d.charAt(E), E, d) : b.call(S, d.charAt(E), E, d);
          }(r, m, a) : function(d, b, S) {
            for (var E in d) f.call(d, E) && (S == null ? b(d[E], E, d) : b.call(S, d[E], E, d));
          }(r, m, a);
        };
      }, 2708: (t) => {
        t.exports = { compile: function(o) {
          var s = [], c = [], h = "", f = /* @__PURE__ */ Object.create(null), r = f;
          return function(k) {
            for (var w, F = 0; F < k.length; F++) switch ((w = k[F]).type) {
              case "Assign":
                g(w);
                break;
              case "ObjectPath":
                b(w);
                break;
              case "ArrayPath":
                S(w);
            }
            return f;
          }(o);
          function m(k, w, F) {
            var I = new Error(k);
            throw I.line = w, I.column = F, I;
          }
          function g(k) {
            var w, F = k.key, I = k.value, q = k.line, N = k.column;
            w = h ? h + "." + F : F, r[F] !== void 0 && m("Cannot redefine existing key '" + w + "'.", q, N), r[F] = l(I), a(w) || (s.push(w), c.push(w));
          }
          function a(k) {
            return s.indexOf(k) !== -1;
          }
          function l(k) {
            return k.type === "Array" ? function(w) {
              for (var F = null, I = 0; I < w.length; I++) {
                var q = w[I];
                F === null ? F = q.type : q.type !== F && m("Cannot add value of type " + q.type + " to array of type " + F + ".", q.line, q.column);
              }
              return w.map(l);
            }(k.value) : k.type === "InlineTable" ? d(k.value) : k.value;
          }
          function d(k) {
            for (var w = /* @__PURE__ */ Object.create(null), F = 0; F < k.length; F++) {
              var I = k[F];
              I.value.type === "InlineTable" ? w[I.key] = d(I.value.value) : I.type === "InlineTableValue" && (w[I.key] = l(I.value));
            }
            return w;
          }
          function b(k) {
            var w = k.value, F = w.map(R).join("."), I = k.line, q = k.column;
            a(F) && m("Cannot redefine existing key '" + w + "'.", I, q), s.push(F), r = E(f, w, /* @__PURE__ */ Object.create(null), I, q), h = w;
          }
          function S(k) {
            var w = k.value, F = w.map(R).join("."), I = k.line, q = k.column;
            if (a(F) || s.push(F), (s = s.filter(function(H) {
              return H.indexOf(F) !== 0;
            })).push(F), r = E(f, w, [], I, q), h = F, r instanceof Array) {
              var N = /* @__PURE__ */ Object.create(null);
              r.push(N), r = N;
            } else m("Cannot redefine existing key '" + w + "'.", I, q);
          }
          function E(k, w, F, I, q) {
            for (var N = [], H = "", _ = (w.join("."), k), x = 0; x < w.length; x++) {
              var L = w[x];
              N.push(L), H = N.join("."), _[L] === void 0 ? x === w.length - 1 ? _[L] = F : _[L] = /* @__PURE__ */ Object.create(null) : x !== w.length - 1 && c.indexOf(H) > -1 && m("Cannot redefine existing key '" + H + "'.", I, q), (_ = _[L]) instanceof Array && _.length && x < w.length - 1 && (_ = _[_.length - 1]);
            }
            return _;
          }
          function R(k) {
            return k.indexOf(".") > -1 ? '"' + k + '"' : k;
          }
        } };
      }, 2726: (t, o, s) => {
        function c(d, b) {
          var S = Object.keys(d);
          if (Object.getOwnPropertySymbols) {
            var E = Object.getOwnPropertySymbols(d);
            b && (E = E.filter(function(R) {
              return Object.getOwnPropertyDescriptor(d, R).enumerable;
            })), S.push.apply(S, E);
          }
          return S;
        }
        function h(d) {
          for (var b = 1; b < arguments.length; b++) {
            var S = arguments[b] != null ? arguments[b] : {};
            b % 2 ? c(Object(S), true).forEach(function(E) {
              f(d, E, S[E]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(d, Object.getOwnPropertyDescriptors(S)) : c(Object(S)).forEach(function(E) {
              Object.defineProperty(d, E, Object.getOwnPropertyDescriptor(S, E));
            });
          }
          return d;
        }
        function f(d, b, S) {
          return (b = m(b)) in d ? Object.defineProperty(d, b, { value: S, enumerable: true, configurable: true, writable: true }) : d[b] = S, d;
        }
        function r(d, b) {
          for (var S = 0; S < b.length; S++) {
            var E = b[S];
            E.enumerable = E.enumerable || false, E.configurable = true, "value" in E && (E.writable = true), Object.defineProperty(d, m(E.key), E);
          }
        }
        function m(d) {
          var b = function(S, E) {
            if (typeof S != "object" || S === null) return S;
            var R = S[Symbol.toPrimitive];
            if (R !== void 0) {
              var k = R.call(S, E);
              if (typeof k != "object") return k;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return (E === "string" ? String : Number)(S);
          }(d, "string");
          return typeof b == "symbol" ? b : String(b);
        }
        var g = s(8287).Buffer, a = s(5340).inspect, l = a && a.custom || "inspect";
        t.exports = function() {
          function d() {
            (function(E, R) {
              if (!(E instanceof R)) throw new TypeError("Cannot call a class as a function");
            })(this, d), this.head = null, this.tail = null, this.length = 0;
          }
          var b, S;
          return b = d, (S = [{ key: "push", value: function(E) {
            var R = { data: E, next: null };
            this.length > 0 ? this.tail.next = R : this.head = R, this.tail = R, ++this.length;
          } }, { key: "unshift", value: function(E) {
            var R = { data: E, next: this.head };
            this.length === 0 && (this.tail = R), this.head = R, ++this.length;
          } }, { key: "shift", value: function() {
            if (this.length !== 0) {
              var E = this.head.data;
              return this.length === 1 ? this.head = this.tail = null : this.head = this.head.next, --this.length, E;
            }
          } }, { key: "clear", value: function() {
            this.head = this.tail = null, this.length = 0;
          } }, { key: "join", value: function(E) {
            if (this.length === 0) return "";
            for (var R = this.head, k = "" + R.data; R = R.next; ) k += E + R.data;
            return k;
          } }, { key: "concat", value: function(E) {
            if (this.length === 0) return g.alloc(0);
            for (var R, k, w, F = g.allocUnsafe(E >>> 0), I = this.head, q = 0; I; ) R = I.data, k = F, w = q, g.prototype.copy.call(R, k, w), q += I.data.length, I = I.next;
            return F;
          } }, { key: "consume", value: function(E, R) {
            var k;
            return E < this.head.data.length ? (k = this.head.data.slice(0, E), this.head.data = this.head.data.slice(E)) : k = E === this.head.data.length ? this.shift() : R ? this._getString(E) : this._getBuffer(E), k;
          } }, { key: "first", value: function() {
            return this.head.data;
          } }, { key: "_getString", value: function(E) {
            var R = this.head, k = 1, w = R.data;
            for (E -= w.length; R = R.next; ) {
              var F = R.data, I = E > F.length ? F.length : E;
              if (I === F.length ? w += F : w += F.slice(0, E), (E -= I) == 0) {
                I === F.length ? (++k, R.next ? this.head = R.next : this.head = this.tail = null) : (this.head = R, R.data = F.slice(I));
                break;
              }
              ++k;
            }
            return this.length -= k, w;
          } }, { key: "_getBuffer", value: function(E) {
            var R = g.allocUnsafe(E), k = this.head, w = 1;
            for (k.data.copy(R), E -= k.data.length; k = k.next; ) {
              var F = k.data, I = E > F.length ? F.length : E;
              if (F.copy(R, R.length - E, 0, I), (E -= I) == 0) {
                I === F.length ? (++w, k.next ? this.head = k.next : this.head = this.tail = null) : (this.head = k, k.data = F.slice(I));
                break;
              }
              ++w;
            }
            return this.length -= w, R;
          } }, { key: l, value: function(E, R) {
            return a(this, h(h({}, R), {}, { depth: 0, customInspect: false }));
          } }]) && r(b.prototype, S), Object.defineProperty(b, "prototype", { writable: false }), d;
        }();
      }, 2802: (t, o, s) => {
        var c = t.exports = function(h) {
          h = h.toLowerCase();
          var f = c[h];
          if (!f) throw new Error(h + " is not supported (we accept pull requests)");
          return new f();
        };
        c.sha = s(7816), c.sha1 = s(3737), c.sha224 = s(6710), c.sha256 = s(4107), c.sha384 = s(2827), c.sha512 = s(2890);
      }, 2810: (t, o, s) => {
        Object.defineProperty(o, "__esModule", { value: true }), o.changeTrust = function(l) {
          var d = {};
          if (l.asset instanceof r.Asset) d.line = l.asset.toChangeTrustXDRObject();
          else {
            if (!(l.asset instanceof m.LiquidityPoolAsset)) throw new TypeError("asset must be Asset or LiquidityPoolAsset");
            d.line = l.asset.toXDRObject();
          }
          if (l.limit !== void 0 && !this.isValidAmount(l.limit, true)) throw new TypeError(this.constructAmountRequirementsError("limit"));
          l.limit ? d.limit = this._toXDRAmount(l.limit) : d.limit = c.Hyper.fromString(new h.default(a).toString()), l.source && (d.source = l.source.masterKeypair);
          var b = new f.default.ChangeTrustOp(d), S = {};
          return S.body = f.default.OperationBody.changeTrust(b), this.setSourceAccount(S, l), new f.default.Operation(S);
        };
        var c = s(3740), h = g(s(1242)), f = g(s(1918)), r = s(1764), m = s(2262);
        function g(l) {
          return l && l.__esModule ? l : { default: l };
        }
        var a = "9223372036854775807";
      }, 2827: (t, o, s) => {
        var c = s(6698), h = s(2890), f = s(392), r = s(2861).Buffer, m = new Array(160);
        function g() {
          this.init(), this._w = m, f.call(this, 128, 112);
        }
        c(g, h), g.prototype.init = function() {
          return this._ah = 3418070365, this._bh = 1654270250, this._ch = 2438529370, this._dh = 355462360, this._eh = 1731405415, this._fh = 2394180231, this._gh = 3675008525, this._hh = 1203062813, this._al = 3238371032, this._bl = 914150663, this._cl = 812702999, this._dl = 4144912697, this._el = 4290775857, this._fl = 1750603025, this._gl = 1694076839, this._hl = 3204075428, this;
        }, g.prototype._hash = function() {
          var a = r.allocUnsafe(48);
          function l(d, b, S) {
            a.writeInt32BE(d, S), a.writeInt32BE(b, S + 4);
          }
          return l(this._ah, this._al, 0), l(this._bh, this._bl, 8), l(this._ch, this._cl, 16), l(this._dh, this._dl, 24), l(this._eh, this._el, 32), l(this._fh, this._fl, 40), a;
        }, t.exports = g;
      }, 2861: (t, o, s) => {
        var c = s(8287), h = c.Buffer;
        function f(m, g) {
          for (var a in m) g[a] = m[a];
        }
        function r(m, g, a) {
          return h(m, g, a);
        }
        h.from && h.alloc && h.allocUnsafe && h.allocUnsafeSlow ? t.exports = c : (f(c, o), o.Buffer = r), r.prototype = Object.create(h.prototype), f(h, r), r.from = function(m, g, a) {
          if (typeof m == "number") throw new TypeError("Argument must not be a number");
          return h(m, g, a);
        }, r.alloc = function(m, g, a) {
          if (typeof m != "number") throw new TypeError("Argument must be a number");
          var l = h(m);
          return g !== void 0 ? typeof a == "string" ? l.fill(g, a) : l.fill(g) : l.fill(0), l;
        }, r.allocUnsafe = function(m) {
          if (typeof m != "number") throw new TypeError("Argument must be a number");
          return h(m);
        }, r.allocUnsafeSlow = function(m) {
          if (typeof m != "number") throw new TypeError("Argument must be a number");
          return c.SlowBuffer(m);
        };
      }, 2890: (t, o, s) => {
        var c = s(6698), h = s(392), f = s(2861).Buffer, r = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591], m = new Array(160);
        function g() {
          this.init(), this._w = m, h.call(this, 128, 112);
        }
        function a(F, I, q) {
          return q ^ F & (I ^ q);
        }
        function l(F, I, q) {
          return F & I | q & (F | I);
        }
        function d(F, I) {
          return (F >>> 28 | I << 4) ^ (I >>> 2 | F << 30) ^ (I >>> 7 | F << 25);
        }
        function b(F, I) {
          return (F >>> 14 | I << 18) ^ (F >>> 18 | I << 14) ^ (I >>> 9 | F << 23);
        }
        function S(F, I) {
          return (F >>> 1 | I << 31) ^ (F >>> 8 | I << 24) ^ F >>> 7;
        }
        function E(F, I) {
          return (F >>> 1 | I << 31) ^ (F >>> 8 | I << 24) ^ (F >>> 7 | I << 25);
        }
        function R(F, I) {
          return (F >>> 19 | I << 13) ^ (I >>> 29 | F << 3) ^ F >>> 6;
        }
        function k(F, I) {
          return (F >>> 19 | I << 13) ^ (I >>> 29 | F << 3) ^ (F >>> 6 | I << 26);
        }
        function w(F, I) {
          return F >>> 0 < I >>> 0 ? 1 : 0;
        }
        c(g, h), g.prototype.init = function() {
          return this._ah = 1779033703, this._bh = 3144134277, this._ch = 1013904242, this._dh = 2773480762, this._eh = 1359893119, this._fh = 2600822924, this._gh = 528734635, this._hh = 1541459225, this._al = 4089235720, this._bl = 2227873595, this._cl = 4271175723, this._dl = 1595750129, this._el = 2917565137, this._fl = 725511199, this._gl = 4215389547, this._hl = 327033209, this;
        }, g.prototype._update = function(F) {
          for (var I = this._w, q = 0 | this._ah, N = 0 | this._bh, H = 0 | this._ch, _ = 0 | this._dh, x = 0 | this._eh, L = 0 | this._fh, j = 0 | this._gh, z = 0 | this._hh, Z = 0 | this._al, ue = 0 | this._bl, $ = 0 | this._cl, X = 0 | this._dl, J = 0 | this._el, B = 0 | this._fl, Q = 0 | this._gl, ne = 0 | this._hl, K = 0; K < 32; K += 2) I[K] = F.readInt32BE(4 * K), I[K + 1] = F.readInt32BE(4 * K + 4);
          for (; K < 160; K += 2) {
            var ie = I[K - 30], ce = I[K - 30 + 1], ye = S(ie, ce), oe = E(ce, ie), se = R(ie = I[K - 4], ce = I[K - 4 + 1]), re = k(ce, ie), ge = I[K - 14], Te = I[K - 14 + 1], pe = I[K - 32], Oe = I[K - 32 + 1], xe = oe + Te | 0, Ve = ye + ge + w(xe, oe) | 0;
            Ve = (Ve = Ve + se + w(xe = xe + re | 0, re) | 0) + pe + w(xe = xe + Oe | 0, Oe) | 0, I[K] = Ve, I[K + 1] = xe;
          }
          for (var _e = 0; _e < 160; _e += 2) {
            Ve = I[_e], xe = I[_e + 1];
            var Be = l(q, N, H), Qe = l(Z, ue, $), ee = d(q, Z), P = d(Z, q), T = b(x, J), O = b(J, x), V = r[_e], D = r[_e + 1], C = a(x, L, j), p = a(J, B, Q), A = ne + O | 0, U = z + T + w(A, ne) | 0;
            U = (U = (U = U + C + w(A = A + p | 0, p) | 0) + V + w(A = A + D | 0, D) | 0) + Ve + w(A = A + xe | 0, xe) | 0;
            var Y = P + Qe | 0, ae = ee + Be + w(Y, P) | 0;
            z = j, ne = Q, j = L, Q = B, L = x, B = J, x = _ + U + w(J = X + A | 0, X) | 0, _ = H, X = $, H = N, $ = ue, N = q, ue = Z, q = U + ae + w(Z = A + Y | 0, A) | 0;
          }
          this._al = this._al + Z | 0, this._bl = this._bl + ue | 0, this._cl = this._cl + $ | 0, this._dl = this._dl + X | 0, this._el = this._el + J | 0, this._fl = this._fl + B | 0, this._gl = this._gl + Q | 0, this._hl = this._hl + ne | 0, this._ah = this._ah + q + w(this._al, Z) | 0, this._bh = this._bh + N + w(this._bl, ue) | 0, this._ch = this._ch + H + w(this._cl, $) | 0, this._dh = this._dh + _ + w(this._dl, X) | 0, this._eh = this._eh + x + w(this._el, J) | 0, this._fh = this._fh + L + w(this._fl, B) | 0, this._gh = this._gh + j + w(this._gl, Q) | 0, this._hh = this._hh + z + w(this._hl, ne) | 0;
        }, g.prototype._hash = function() {
          var F = f.allocUnsafe(64);
          function I(q, N, H) {
            F.writeInt32BE(q, H), F.writeInt32BE(N, H + 4);
          }
          return I(this._ah, this._al, 0), I(this._bh, this._bl, 8), I(this._ch, this._cl, 16), I(this._dh, this._dl, 24), I(this._eh, this._el, 32), I(this._fh, this._fl, 40), I(this._gh, this._gl, 48), I(this._hh, this._hl, 56), F;
        }, t.exports = g;
      }, 2894: () => {
      }, 2955: (t, o, s) => {
        var c;
        function h(F, I, q) {
          return (I = function(N) {
            var H = function(_, x) {
              if (typeof _ != "object" || _ === null) return _;
              var L = _[Symbol.toPrimitive];
              if (L !== void 0) {
                var j = L.call(_, x);
                if (typeof j != "object") return j;
                throw new TypeError("@@toPrimitive must return a primitive value.");
              }
              return (x === "string" ? String : Number)(_);
            }(N, "string");
            return typeof H == "symbol" ? H : String(H);
          }(I)) in F ? Object.defineProperty(F, I, { value: q, enumerable: true, configurable: true, writable: true }) : F[I] = q, F;
        }
        var f = s(6238), r = Symbol("lastResolve"), m = Symbol("lastReject"), g = Symbol("error"), a = Symbol("ended"), l = Symbol("lastPromise"), d = Symbol("handlePromise"), b = Symbol("stream");
        function S(F, I) {
          return { value: F, done: I };
        }
        function E(F) {
          var I = F[r];
          if (I !== null) {
            var q = F[b].read();
            q !== null && (F[l] = null, F[r] = null, F[m] = null, I(S(q, false)));
          }
        }
        function R(F) {
          process.nextTick(E, F);
        }
        var k = Object.getPrototypeOf(function() {
        }), w = Object.setPrototypeOf((h(c = { get stream() {
          return this[b];
        }, next: function() {
          var F = this, I = this[g];
          if (I !== null) return Promise.reject(I);
          if (this[a]) return Promise.resolve(S(void 0, true));
          if (this[b].destroyed) return new Promise(function(_, x) {
            process.nextTick(function() {
              F[g] ? x(F[g]) : _(S(void 0, true));
            });
          });
          var q, N = this[l];
          if (N) q = new Promise(/* @__PURE__ */ function(_, x) {
            return function(L, j) {
              _.then(function() {
                x[a] ? L(S(void 0, true)) : x[d](L, j);
              }, j);
            };
          }(N, this));
          else {
            var H = this[b].read();
            if (H !== null) return Promise.resolve(S(H, false));
            q = new Promise(this[d]);
          }
          return this[l] = q, q;
        } }, Symbol.asyncIterator, function() {
          return this;
        }), h(c, "return", function() {
          var F = this;
          return new Promise(function(I, q) {
            F[b].destroy(null, function(N) {
              N ? q(N) : I(S(void 0, true));
            });
          });
        }), c), k);
        t.exports = function(F) {
          var I, q = Object.create(w, (h(I = {}, b, { value: F, writable: true }), h(I, r, { value: null, writable: true }), h(I, m, { value: null, writable: true }), h(I, g, { value: null, writable: true }), h(I, a, { value: F._readableState.endEmitted, writable: true }), h(I, d, { value: function(N, H) {
            var _ = q[b].read();
            _ ? (q[l] = null, q[r] = null, q[m] = null, N(S(_, false))) : (q[r] = N, q[m] = H);
          }, writable: true }), I));
          return q[l] = null, f(F, function(N) {
            if (N && N.code !== "ERR_STREAM_PREMATURE_CLOSE") {
              var H = q[m];
              return H !== null && (q[l] = null, q[r] = null, q[m] = null, H(N)), void (q[g] = N);
            }
            var _ = q[r];
            _ !== null && (q[l] = null, q[r] = null, q[m] = null, _(S(void 0, true))), q[a] = true;
          }), F.on("readable", R.bind(null, q)), q;
        };
      }, 3093: (t, o, s) => {
        var c = s(4459);
        t.exports = function(h) {
          return c(h) || h === 0 ? h : h < 0 ? -1 : 1;
        };
      }, 3121: (t, o, s) => {
        function c(l) {
          return c = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(d) {
            return typeof d;
          } : function(d) {
            return d && typeof Symbol == "function" && d.constructor === Symbol && d !== Symbol.prototype ? "symbol" : typeof d;
          }, c(l);
        }
        function h(l, d) {
          for (var b = 0; b < d.length; b++) {
            var S = d[b];
            S.enumerable = S.enumerable || false, S.configurable = true, "value" in S && (S.writable = true), Object.defineProperty(l, f(S.key), S);
          }
        }
        function f(l) {
          var d = function(b, S) {
            if (c(b) != "object" || !b) return b;
            var E = b[Symbol.toPrimitive];
            if (E !== void 0) {
              var R = E.call(b, S);
              if (c(R) != "object") return R;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(b);
          }(l, "string");
          return c(d) == "symbol" ? d : d + "";
        }
        s.d(o, { A: () => a });
        var r, m, g, a = (r = function l() {
          (function(d, b) {
            if (!(d instanceof b)) throw new TypeError("Cannot call a class as a function");
          })(this, l);
        }, g = [{ key: "validateTimebounds", value: function(l) {
          var d = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
          if (!l.timeBounds) return false;
          var b = Math.floor(Date.now() / 1e3), S = l.timeBounds, E = S.minTime, R = S.maxTime;
          return b >= Number.parseInt(E, 10) - d && b <= Number.parseInt(R, 10) + d;
        } }, { key: "sleep", value: function(l) {
          return new Promise(function(d) {
            return setTimeout(d, l);
          });
        } }], (m = null) && h(r.prototype, m), g && h(r, g), Object.defineProperty(r, "prototype", { writable: false }), r);
      }, 3126: (t, o, s) => {
        var c = s(6743), h = s(9675), f = s(76), r = s(3144);
        t.exports = function(m) {
          if (m.length < 1 || typeof m[0] != "function") throw new h("a function is required");
          return r(c, f, m);
        };
      }, 3141: (t, o, s) => {
        var c = s(2861).Buffer, h = c.isEncoding || function(E) {
          switch ((E = "" + E) && E.toLowerCase()) {
            case "hex":
            case "utf8":
            case "utf-8":
            case "ascii":
            case "binary":
            case "base64":
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
            case "raw":
              return true;
            default:
              return false;
          }
        };
        function f(E) {
          var R;
          switch (this.encoding = function(k) {
            var w = function(F) {
              if (!F) return "utf8";
              for (var I; ; ) switch (F) {
                case "utf8":
                case "utf-8":
                  return "utf8";
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return "utf16le";
                case "latin1":
                case "binary":
                  return "latin1";
                case "base64":
                case "ascii":
                case "hex":
                  return F;
                default:
                  if (I) return;
                  F = ("" + F).toLowerCase(), I = true;
              }
            }(k);
            if (typeof w != "string" && (c.isEncoding === h || !h(k))) throw new Error("Unknown encoding: " + k);
            return w || k;
          }(E), this.encoding) {
            case "utf16le":
              this.text = g, this.end = a, R = 4;
              break;
            case "utf8":
              this.fillLast = m, R = 4;
              break;
            case "base64":
              this.text = l, this.end = d, R = 3;
              break;
            default:
              return this.write = b, void (this.end = S);
          }
          this.lastNeed = 0, this.lastTotal = 0, this.lastChar = c.allocUnsafe(R);
        }
        function r(E) {
          return E <= 127 ? 0 : E >> 5 == 6 ? 2 : E >> 4 == 14 ? 3 : E >> 3 == 30 ? 4 : E >> 6 == 2 ? -1 : -2;
        }
        function m(E) {
          var R = this.lastTotal - this.lastNeed, k = function(w, F) {
            if ((192 & F[0]) != 128) return w.lastNeed = 0, "\uFFFD";
            if (w.lastNeed > 1 && F.length > 1) {
              if ((192 & F[1]) != 128) return w.lastNeed = 1, "\uFFFD";
              if (w.lastNeed > 2 && F.length > 2 && (192 & F[2]) != 128) return w.lastNeed = 2, "\uFFFD";
            }
          }(this, E);
          return k !== void 0 ? k : this.lastNeed <= E.length ? (E.copy(this.lastChar, R, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal)) : (E.copy(this.lastChar, R, 0, E.length), void (this.lastNeed -= E.length));
        }
        function g(E, R) {
          if ((E.length - R) % 2 == 0) {
            var k = E.toString("utf16le", R);
            if (k) {
              var w = k.charCodeAt(k.length - 1);
              if (w >= 55296 && w <= 56319) return this.lastNeed = 2, this.lastTotal = 4, this.lastChar[0] = E[E.length - 2], this.lastChar[1] = E[E.length - 1], k.slice(0, -1);
            }
            return k;
          }
          return this.lastNeed = 1, this.lastTotal = 2, this.lastChar[0] = E[E.length - 1], E.toString("utf16le", R, E.length - 1);
        }
        function a(E) {
          var R = E && E.length ? this.write(E) : "";
          if (this.lastNeed) {
            var k = this.lastTotal - this.lastNeed;
            return R + this.lastChar.toString("utf16le", 0, k);
          }
          return R;
        }
        function l(E, R) {
          var k = (E.length - R) % 3;
          return k === 0 ? E.toString("base64", R) : (this.lastNeed = 3 - k, this.lastTotal = 3, k === 1 ? this.lastChar[0] = E[E.length - 1] : (this.lastChar[0] = E[E.length - 2], this.lastChar[1] = E[E.length - 1]), E.toString("base64", R, E.length - k));
        }
        function d(E) {
          var R = E && E.length ? this.write(E) : "";
          return this.lastNeed ? R + this.lastChar.toString("base64", 0, 3 - this.lastNeed) : R;
        }
        function b(E) {
          return E.toString(this.encoding);
        }
        function S(E) {
          return E && E.length ? this.write(E) : "";
        }
        o.I = f, f.prototype.write = function(E) {
          if (E.length === 0) return "";
          var R, k;
          if (this.lastNeed) {
            if ((R = this.fillLast(E)) === void 0) return "";
            k = this.lastNeed, this.lastNeed = 0;
          } else k = 0;
          return k < E.length ? R ? R + this.text(E, k) : this.text(E, k) : R || "";
        }, f.prototype.end = function(E) {
          var R = E && E.length ? this.write(E) : "";
          return this.lastNeed ? R + "\uFFFD" : R;
        }, f.prototype.text = function(E, R) {
          var k = function(F, I, q) {
            var N = I.length - 1;
            if (N < q) return 0;
            var H = r(I[N]);
            return H >= 0 ? (H > 0 && (F.lastNeed = H - 1), H) : --N < q || H === -2 ? 0 : (H = r(I[N]), H >= 0 ? (H > 0 && (F.lastNeed = H - 2), H) : --N < q || H === -2 ? 0 : (H = r(I[N]), H >= 0 ? (H > 0 && (H === 2 ? H = 0 : F.lastNeed = H - 3), H) : 0));
          }(this, E, R);
          if (!this.lastNeed) return E.toString("utf8", R);
          this.lastTotal = k;
          var w = E.length - (k - this.lastNeed);
          return E.copy(this.lastChar, 0, w), E.toString("utf8", R, w);
        }, f.prototype.fillLast = function(E) {
          if (this.lastNeed <= E.length) return E.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
          E.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, E.length), this.lastNeed -= E.length;
        };
      }, 3144: (t, o, s) => {
        var c = s(6743), h = s(1002), f = s(76), r = s(7119);
        t.exports = r || c.call(f, h);
      }, 3209: (t, o, s) => {
        var c = 65536, h = 4294967295, f = s(2861).Buffer, r = s.g.crypto || s.g.msCrypto;
        r && r.getRandomValues ? t.exports = function(m, g) {
          if (m > h) throw new RangeError("requested too many random bytes");
          var a = f.allocUnsafe(m);
          if (m > 0) if (m > c) for (var l = 0; l < m; l += c) r.getRandomValues(a.slice(l, l + c));
          else r.getRandomValues(a);
          return typeof g == "function" ? process.nextTick(function() {
            g(null, a);
          }) : a;
        } : t.exports = function() {
          throw new Error(`Secure random number generation is not supported by this browser.
Use Chrome, Firefox or Internet Explorer 11`);
        };
      }, 3317: (t, o, s) => {
        function c(d) {
          return c = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(b) {
            return typeof b;
          } : function(b) {
            return b && typeof Symbol == "function" && b.constructor === Symbol && b !== Symbol.prototype ? "symbol" : typeof b;
          }, c(d);
        }
        Object.defineProperty(o, "__esModule", { value: true }), o.ScInt = void 0;
        var h = s(7429);
        function f(d, b) {
          for (var S = 0; S < b.length; S++) {
            var E = b[S];
            E.enumerable = E.enumerable || false, E.configurable = true, "value" in E && (E.writable = true), Object.defineProperty(d, r(E.key), E);
          }
        }
        function r(d) {
          var b = function(S, E) {
            if (c(S) != "object" || !S) return S;
            var R = S[Symbol.toPrimitive];
            if (R !== void 0) {
              var k = R.call(S, E);
              if (c(k) != "object") return k;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(S);
          }(d, "string");
          return c(b) == "symbol" ? b : b + "";
        }
        function m(d, b, S) {
          return b = a(b), function(E, R) {
            if (R && (c(R) == "object" || typeof R == "function")) return R;
            if (R !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(k) {
              if (k === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return k;
            }(E);
          }(d, g() ? Reflect.construct(b, S || [], a(d).constructor) : b.apply(d, S));
        }
        function g() {
          try {
            var d = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (g = function() {
            return !!d;
          })();
        }
        function a(d) {
          return a = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(b) {
            return b.__proto__ || Object.getPrototypeOf(b);
          }, a(d);
        }
        function l(d, b) {
          return l = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(S, E) {
            return S.__proto__ = E, S;
          }, l(d, b);
        }
        o.ScInt = function(d) {
          function b(k, w) {
            var F;
            (function(H, _) {
              if (!(H instanceof _)) throw new TypeError("Cannot call a class as a function");
            })(this, b);
            var I = k < 0, q = (F = w == null ? void 0 : w.type) !== null && F !== void 0 ? F : "";
            if (q.startsWith("u") && I) throw TypeError("specified type ".concat(w.type, " yet negative (").concat(k, ")"));
            if (q === "") {
              q = I ? "i" : "u";
              var N = function(H) {
                var _, x = H.toString(2).length;
                return (_ = [64, 128, 256].find(function(L) {
                  return x <= L;
                })) !== null && _ !== void 0 ? _ : x;
              }(k);
              switch (N) {
                case 64:
                case 128:
                case 256:
                  q += N.toString();
                  break;
                default:
                  throw RangeError("expected 64/128/256 bits for input (".concat(k, "), got ").concat(N));
              }
            }
            return m(this, b, [q, k]);
          }
          return function(k, w) {
            if (typeof w != "function" && w !== null) throw new TypeError("Super expression must either be null or a function");
            k.prototype = Object.create(w && w.prototype, { constructor: { value: k, writable: true, configurable: true } }), Object.defineProperty(k, "prototype", { writable: false }), w && l(k, w);
          }(b, d), S = b, E && f(S.prototype, E), R && f(S, R), Object.defineProperty(S, "prototype", { writable: false }), S;
          var S, E, R;
        }(h.XdrLargeInt);
      }, 3335: (t, o, s) => {
        Object.defineProperty(o, "__esModule", { value: true }), o.default = void 0;
        var c = s(3740), h = { XdrWriter: c.XdrWriter, XdrReader: c.XdrReader };
        o.default = h;
      }, 3496: (t, o, s) => {
        s.r(o), s.d(o, { Api: () => c.j, AxiosClient: () => m, BasicSleepStrategy: () => z, Durability: () => j, LinearSleepStrategy: () => Z, Server: () => D, assembleTransaction: () => S.X, default: () => C, parseRawEvents: () => E.fG, parseRawSimulation: () => E.jr });
        var c = s(4076), h = s(4193), f = s.n(h), r = s(356);
        const m = (0, s(9983).vt)({ headers: { "X-Client-Name": "js-soroban-client", "X-Client-Version": "13.2.0" } });
        function g(p) {
          return g = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(A) {
            return typeof A;
          } : function(A) {
            return A && typeof Symbol == "function" && A.constructor === Symbol && A !== Symbol.prototype ? "symbol" : typeof A;
          }, g(p);
        }
        function a() {
          a = function() {
            return A;
          };
          var p, A = {}, U = Object.prototype, Y = U.hasOwnProperty, ae = Object.defineProperty || function(st, ct, yt) {
            st[ct] = yt.value;
          }, W = typeof Symbol == "function" ? Symbol : {}, de = W.iterator || "@@iterator", tt = W.asyncIterator || "@@asyncIterator", Ne = W.toStringTag || "@@toStringTag";
          function ut(st, ct, yt) {
            return Object.defineProperty(st, ct, { value: yt, enumerable: true, configurable: true, writable: true }), st[ct];
          }
          try {
            ut({}, "");
          } catch {
            ut = function(ct, yt, Zt) {
              return ct[yt] = Zt;
            };
          }
          function Ze(st, ct, yt, Zt) {
            var Ct = ct && ct.prototype instanceof qe ? ct : qe, Lt = Object.create(Ct.prototype), Wt = new ft(Zt || []);
            return ae(Lt, "_invoke", { value: le(st, yt, Wt) }), Lt;
          }
          function Et(st, ct, yt) {
            try {
              return { type: "normal", arg: st.call(ct, yt) };
            } catch (Zt) {
              return { type: "throw", arg: Zt };
            }
          }
          A.wrap = Ze;
          var rr = "suspendedStart", je = "suspendedYield", Ge = "executing", at = "completed", Ae = {};
          function qe() {
          }
          function Ft() {
          }
          function Dt() {
          }
          var wr = {};
          ut(wr, de, function() {
            return this;
          });
          var Nt = Object.getPrototypeOf, yr = Nt && Nt(Nt(zt([])));
          yr && yr !== U && Y.call(yr, de) && (wr = yr);
          var Ur = Dt.prototype = qe.prototype = Object.create(wr);
          function Pe(st) {
            ["next", "throw", "return"].forEach(function(ct) {
              ut(st, ct, function(yt) {
                return this._invoke(ct, yt);
              });
            });
          }
          function $e(st, ct) {
            function yt(Ct, Lt, Wt, vr) {
              var ar = Et(st[Ct], st, Lt);
              if (ar.type !== "throw") {
                var sr = ar.arg, gr = sr.value;
                return gr && g(gr) == "object" && Y.call(gr, "__await") ? ct.resolve(gr.__await).then(function(Tr) {
                  yt("next", Tr, Wt, vr);
                }, function(Tr) {
                  yt("throw", Tr, Wt, vr);
                }) : ct.resolve(gr).then(function(Tr) {
                  sr.value = Tr, Wt(sr);
                }, function(Tr) {
                  return yt("throw", Tr, Wt, vr);
                });
              }
              vr(ar.arg);
            }
            var Zt;
            ae(this, "_invoke", { value: function(Ct, Lt) {
              function Wt() {
                return new ct(function(vr, ar) {
                  yt(Ct, Lt, vr, ar);
                });
              }
              return Zt = Zt ? Zt.then(Wt, Wt) : Wt();
            } });
          }
          function le(st, ct, yt) {
            var Zt = rr;
            return function(Ct, Lt) {
              if (Zt === Ge) throw Error("Generator is already running");
              if (Zt === at) {
                if (Ct === "throw") throw Lt;
                return { value: p, done: true };
              }
              for (yt.method = Ct, yt.arg = Lt; ; ) {
                var Wt = yt.delegate;
                if (Wt) {
                  var vr = te(Wt, yt);
                  if (vr) {
                    if (vr === Ae) continue;
                    return vr;
                  }
                }
                if (yt.method === "next") yt.sent = yt._sent = yt.arg;
                else if (yt.method === "throw") {
                  if (Zt === rr) throw Zt = at, yt.arg;
                  yt.dispatchException(yt.arg);
                } else yt.method === "return" && yt.abrupt("return", yt.arg);
                Zt = Ge;
                var ar = Et(st, ct, yt);
                if (ar.type === "normal") {
                  if (Zt = yt.done ? at : je, ar.arg === Ae) continue;
                  return { value: ar.arg, done: yt.done };
                }
                ar.type === "throw" && (Zt = at, yt.method = "throw", yt.arg = ar.arg);
              }
            };
          }
          function te(st, ct) {
            var yt = ct.method, Zt = st.iterator[yt];
            if (Zt === p) return ct.delegate = null, yt === "throw" && st.iterator.return && (ct.method = "return", ct.arg = p, te(st, ct), ct.method === "throw") || yt !== "return" && (ct.method = "throw", ct.arg = new TypeError("The iterator does not provide a '" + yt + "' method")), Ae;
            var Ct = Et(Zt, st.iterator, ct.arg);
            if (Ct.type === "throw") return ct.method = "throw", ct.arg = Ct.arg, ct.delegate = null, Ae;
            var Lt = Ct.arg;
            return Lt ? Lt.done ? (ct[st.resultName] = Lt.value, ct.next = st.nextLoc, ct.method !== "return" && (ct.method = "next", ct.arg = p), ct.delegate = null, Ae) : Lt : (ct.method = "throw", ct.arg = new TypeError("iterator result is not an object"), ct.delegate = null, Ae);
          }
          function Le(st) {
            var ct = { tryLoc: st[0] };
            1 in st && (ct.catchLoc = st[1]), 2 in st && (ct.finallyLoc = st[2], ct.afterLoc = st[3]), this.tryEntries.push(ct);
          }
          function nt(st) {
            var ct = st.completion || {};
            ct.type = "normal", delete ct.arg, st.completion = ct;
          }
          function ft(st) {
            this.tryEntries = [{ tryLoc: "root" }], st.forEach(Le, this), this.reset(true);
          }
          function zt(st) {
            if (st || st === "") {
              var ct = st[de];
              if (ct) return ct.call(st);
              if (typeof st.next == "function") return st;
              if (!isNaN(st.length)) {
                var yt = -1, Zt = function Ct() {
                  for (; ++yt < st.length; ) if (Y.call(st, yt)) return Ct.value = st[yt], Ct.done = false, Ct;
                  return Ct.value = p, Ct.done = true, Ct;
                };
                return Zt.next = Zt;
              }
            }
            throw new TypeError(g(st) + " is not iterable");
          }
          return Ft.prototype = Dt, ae(Ur, "constructor", { value: Dt, configurable: true }), ae(Dt, "constructor", { value: Ft, configurable: true }), Ft.displayName = ut(Dt, Ne, "GeneratorFunction"), A.isGeneratorFunction = function(st) {
            var ct = typeof st == "function" && st.constructor;
            return !!ct && (ct === Ft || (ct.displayName || ct.name) === "GeneratorFunction");
          }, A.mark = function(st) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(st, Dt) : (st.__proto__ = Dt, ut(st, Ne, "GeneratorFunction")), st.prototype = Object.create(Ur), st;
          }, A.awrap = function(st) {
            return { __await: st };
          }, Pe($e.prototype), ut($e.prototype, tt, function() {
            return this;
          }), A.AsyncIterator = $e, A.async = function(st, ct, yt, Zt, Ct) {
            Ct === void 0 && (Ct = Promise);
            var Lt = new $e(Ze(st, ct, yt, Zt), Ct);
            return A.isGeneratorFunction(ct) ? Lt : Lt.next().then(function(Wt) {
              return Wt.done ? Wt.value : Lt.next();
            });
          }, Pe(Ur), ut(Ur, Ne, "Generator"), ut(Ur, de, function() {
            return this;
          }), ut(Ur, "toString", function() {
            return "[object Generator]";
          }), A.keys = function(st) {
            var ct = Object(st), yt = [];
            for (var Zt in ct) yt.push(Zt);
            return yt.reverse(), function Ct() {
              for (; yt.length; ) {
                var Lt = yt.pop();
                if (Lt in ct) return Ct.value = Lt, Ct.done = false, Ct;
              }
              return Ct.done = true, Ct;
            };
          }, A.values = zt, ft.prototype = { constructor: ft, reset: function(st) {
            if (this.prev = 0, this.next = 0, this.sent = this._sent = p, this.done = false, this.delegate = null, this.method = "next", this.arg = p, this.tryEntries.forEach(nt), !st) for (var ct in this) ct.charAt(0) === "t" && Y.call(this, ct) && !isNaN(+ct.slice(1)) && (this[ct] = p);
          }, stop: function() {
            this.done = true;
            var st = this.tryEntries[0].completion;
            if (st.type === "throw") throw st.arg;
            return this.rval;
          }, dispatchException: function(st) {
            if (this.done) throw st;
            var ct = this;
            function yt(ar, sr) {
              return Lt.type = "throw", Lt.arg = st, ct.next = ar, sr && (ct.method = "next", ct.arg = p), !!sr;
            }
            for (var Zt = this.tryEntries.length - 1; Zt >= 0; --Zt) {
              var Ct = this.tryEntries[Zt], Lt = Ct.completion;
              if (Ct.tryLoc === "root") return yt("end");
              if (Ct.tryLoc <= this.prev) {
                var Wt = Y.call(Ct, "catchLoc"), vr = Y.call(Ct, "finallyLoc");
                if (Wt && vr) {
                  if (this.prev < Ct.catchLoc) return yt(Ct.catchLoc, true);
                  if (this.prev < Ct.finallyLoc) return yt(Ct.finallyLoc);
                } else if (Wt) {
                  if (this.prev < Ct.catchLoc) return yt(Ct.catchLoc, true);
                } else {
                  if (!vr) throw Error("try statement without catch or finally");
                  if (this.prev < Ct.finallyLoc) return yt(Ct.finallyLoc);
                }
              }
            }
          }, abrupt: function(st, ct) {
            for (var yt = this.tryEntries.length - 1; yt >= 0; --yt) {
              var Zt = this.tryEntries[yt];
              if (Zt.tryLoc <= this.prev && Y.call(Zt, "finallyLoc") && this.prev < Zt.finallyLoc) {
                var Ct = Zt;
                break;
              }
            }
            Ct && (st === "break" || st === "continue") && Ct.tryLoc <= ct && ct <= Ct.finallyLoc && (Ct = null);
            var Lt = Ct ? Ct.completion : {};
            return Lt.type = st, Lt.arg = ct, Ct ? (this.method = "next", this.next = Ct.finallyLoc, Ae) : this.complete(Lt);
          }, complete: function(st, ct) {
            if (st.type === "throw") throw st.arg;
            return st.type === "break" || st.type === "continue" ? this.next = st.arg : st.type === "return" ? (this.rval = this.arg = st.arg, this.method = "return", this.next = "end") : st.type === "normal" && ct && (this.next = ct), Ae;
          }, finish: function(st) {
            for (var ct = this.tryEntries.length - 1; ct >= 0; --ct) {
              var yt = this.tryEntries[ct];
              if (yt.finallyLoc === st) return this.complete(yt.completion, yt.afterLoc), nt(yt), Ae;
            }
          }, catch: function(st) {
            for (var ct = this.tryEntries.length - 1; ct >= 0; --ct) {
              var yt = this.tryEntries[ct];
              if (yt.tryLoc === st) {
                var Zt = yt.completion;
                if (Zt.type === "throw") {
                  var Ct = Zt.arg;
                  nt(yt);
                }
                return Ct;
              }
            }
            throw Error("illegal catch attempt");
          }, delegateYield: function(st, ct, yt) {
            return this.delegate = { iterator: zt(st), resultName: ct, nextLoc: yt }, this.method === "next" && (this.arg = p), Ae;
          } }, A;
        }
        function l(p, A, U, Y, ae, W, de) {
          try {
            var tt = p[W](de), Ne = tt.value;
          } catch (ut) {
            return void U(ut);
          }
          tt.done ? A(Ne) : Promise.resolve(Ne).then(Y, ae);
        }
        function d(p, A) {
          return b.apply(this, arguments);
        }
        function b() {
          var p;
          return p = a().mark(function A(U, Y) {
            var ae, W, de, tt = arguments;
            return a().wrap(function(Ne) {
              for (; ; ) switch (Ne.prev = Ne.next) {
                case 0:
                  return ae = tt.length > 2 && tt[2] !== void 0 ? tt[2] : null, Ne.next = 3, m.post(U, { jsonrpc: "2.0", id: 1, method: Y, params: ae });
                case 3:
                  if (W = Ne.sent, ut = W.data, Ze = "error", !ut.hasOwnProperty(Ze)) {
                    Ne.next = 8;
                    break;
                  }
                  throw W.data.error;
                case 8:
                  return Ne.abrupt("return", (de = W.data) === null || de === void 0 ? void 0 : de.result);
                case 9:
                case "end":
                  return Ne.stop();
              }
              var ut, Ze;
            }, A);
          }), b = function() {
            var A = this, U = arguments;
            return new Promise(function(Y, ae) {
              var W = p.apply(A, U);
              function de(Ne) {
                l(W, Y, ae, de, tt, "next", Ne);
              }
              function tt(Ne) {
                l(W, Y, ae, de, tt, "throw", Ne);
              }
              de(void 0);
            });
          }, b.apply(this, arguments);
        }
        var S = s(8680), E = s(784), R = s(3121), k = s(8287).Buffer;
        function w(p) {
          return w = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(A) {
            return typeof A;
          } : function(A) {
            return A && typeof Symbol == "function" && A.constructor === Symbol && A !== Symbol.prototype ? "symbol" : typeof A;
          }, w(p);
        }
        function F(p, A) {
          var U = Object.keys(p);
          if (Object.getOwnPropertySymbols) {
            var Y = Object.getOwnPropertySymbols(p);
            A && (Y = Y.filter(function(ae) {
              return Object.getOwnPropertyDescriptor(p, ae).enumerable;
            })), U.push.apply(U, Y);
          }
          return U;
        }
        function I(p) {
          for (var A = 1; A < arguments.length; A++) {
            var U = arguments[A] != null ? arguments[A] : {};
            A % 2 ? F(Object(U), true).forEach(function(Y) {
              q(p, Y, U[Y]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(p, Object.getOwnPropertyDescriptors(U)) : F(Object(U)).forEach(function(Y) {
              Object.defineProperty(p, Y, Object.getOwnPropertyDescriptor(U, Y));
            });
          }
          return p;
        }
        function q(p, A, U) {
          return (A = L(A)) in p ? Object.defineProperty(p, A, { value: U, enumerable: true, configurable: true, writable: true }) : p[A] = U, p;
        }
        function N() {
          N = function() {
            return A;
          };
          var p, A = {}, U = Object.prototype, Y = U.hasOwnProperty, ae = Object.defineProperty || function(st, ct, yt) {
            st[ct] = yt.value;
          }, W = typeof Symbol == "function" ? Symbol : {}, de = W.iterator || "@@iterator", tt = W.asyncIterator || "@@asyncIterator", Ne = W.toStringTag || "@@toStringTag";
          function ut(st, ct, yt) {
            return Object.defineProperty(st, ct, { value: yt, enumerable: true, configurable: true, writable: true }), st[ct];
          }
          try {
            ut({}, "");
          } catch {
            ut = function(ct, yt, Zt) {
              return ct[yt] = Zt;
            };
          }
          function Ze(st, ct, yt, Zt) {
            var Ct = ct && ct.prototype instanceof qe ? ct : qe, Lt = Object.create(Ct.prototype), Wt = new ft(Zt || []);
            return ae(Lt, "_invoke", { value: le(st, yt, Wt) }), Lt;
          }
          function Et(st, ct, yt) {
            try {
              return { type: "normal", arg: st.call(ct, yt) };
            } catch (Zt) {
              return { type: "throw", arg: Zt };
            }
          }
          A.wrap = Ze;
          var rr = "suspendedStart", je = "suspendedYield", Ge = "executing", at = "completed", Ae = {};
          function qe() {
          }
          function Ft() {
          }
          function Dt() {
          }
          var wr = {};
          ut(wr, de, function() {
            return this;
          });
          var Nt = Object.getPrototypeOf, yr = Nt && Nt(Nt(zt([])));
          yr && yr !== U && Y.call(yr, de) && (wr = yr);
          var Ur = Dt.prototype = qe.prototype = Object.create(wr);
          function Pe(st) {
            ["next", "throw", "return"].forEach(function(ct) {
              ut(st, ct, function(yt) {
                return this._invoke(ct, yt);
              });
            });
          }
          function $e(st, ct) {
            function yt(Ct, Lt, Wt, vr) {
              var ar = Et(st[Ct], st, Lt);
              if (ar.type !== "throw") {
                var sr = ar.arg, gr = sr.value;
                return gr && w(gr) == "object" && Y.call(gr, "__await") ? ct.resolve(gr.__await).then(function(Tr) {
                  yt("next", Tr, Wt, vr);
                }, function(Tr) {
                  yt("throw", Tr, Wt, vr);
                }) : ct.resolve(gr).then(function(Tr) {
                  sr.value = Tr, Wt(sr);
                }, function(Tr) {
                  return yt("throw", Tr, Wt, vr);
                });
              }
              vr(ar.arg);
            }
            var Zt;
            ae(this, "_invoke", { value: function(Ct, Lt) {
              function Wt() {
                return new ct(function(vr, ar) {
                  yt(Ct, Lt, vr, ar);
                });
              }
              return Zt = Zt ? Zt.then(Wt, Wt) : Wt();
            } });
          }
          function le(st, ct, yt) {
            var Zt = rr;
            return function(Ct, Lt) {
              if (Zt === Ge) throw Error("Generator is already running");
              if (Zt === at) {
                if (Ct === "throw") throw Lt;
                return { value: p, done: true };
              }
              for (yt.method = Ct, yt.arg = Lt; ; ) {
                var Wt = yt.delegate;
                if (Wt) {
                  var vr = te(Wt, yt);
                  if (vr) {
                    if (vr === Ae) continue;
                    return vr;
                  }
                }
                if (yt.method === "next") yt.sent = yt._sent = yt.arg;
                else if (yt.method === "throw") {
                  if (Zt === rr) throw Zt = at, yt.arg;
                  yt.dispatchException(yt.arg);
                } else yt.method === "return" && yt.abrupt("return", yt.arg);
                Zt = Ge;
                var ar = Et(st, ct, yt);
                if (ar.type === "normal") {
                  if (Zt = yt.done ? at : je, ar.arg === Ae) continue;
                  return { value: ar.arg, done: yt.done };
                }
                ar.type === "throw" && (Zt = at, yt.method = "throw", yt.arg = ar.arg);
              }
            };
          }
          function te(st, ct) {
            var yt = ct.method, Zt = st.iterator[yt];
            if (Zt === p) return ct.delegate = null, yt === "throw" && st.iterator.return && (ct.method = "return", ct.arg = p, te(st, ct), ct.method === "throw") || yt !== "return" && (ct.method = "throw", ct.arg = new TypeError("The iterator does not provide a '" + yt + "' method")), Ae;
            var Ct = Et(Zt, st.iterator, ct.arg);
            if (Ct.type === "throw") return ct.method = "throw", ct.arg = Ct.arg, ct.delegate = null, Ae;
            var Lt = Ct.arg;
            return Lt ? Lt.done ? (ct[st.resultName] = Lt.value, ct.next = st.nextLoc, ct.method !== "return" && (ct.method = "next", ct.arg = p), ct.delegate = null, Ae) : Lt : (ct.method = "throw", ct.arg = new TypeError("iterator result is not an object"), ct.delegate = null, Ae);
          }
          function Le(st) {
            var ct = { tryLoc: st[0] };
            1 in st && (ct.catchLoc = st[1]), 2 in st && (ct.finallyLoc = st[2], ct.afterLoc = st[3]), this.tryEntries.push(ct);
          }
          function nt(st) {
            var ct = st.completion || {};
            ct.type = "normal", delete ct.arg, st.completion = ct;
          }
          function ft(st) {
            this.tryEntries = [{ tryLoc: "root" }], st.forEach(Le, this), this.reset(true);
          }
          function zt(st) {
            if (st || st === "") {
              var ct = st[de];
              if (ct) return ct.call(st);
              if (typeof st.next == "function") return st;
              if (!isNaN(st.length)) {
                var yt = -1, Zt = function Ct() {
                  for (; ++yt < st.length; ) if (Y.call(st, yt)) return Ct.value = st[yt], Ct.done = false, Ct;
                  return Ct.value = p, Ct.done = true, Ct;
                };
                return Zt.next = Zt;
              }
            }
            throw new TypeError(w(st) + " is not iterable");
          }
          return Ft.prototype = Dt, ae(Ur, "constructor", { value: Dt, configurable: true }), ae(Dt, "constructor", { value: Ft, configurable: true }), Ft.displayName = ut(Dt, Ne, "GeneratorFunction"), A.isGeneratorFunction = function(st) {
            var ct = typeof st == "function" && st.constructor;
            return !!ct && (ct === Ft || (ct.displayName || ct.name) === "GeneratorFunction");
          }, A.mark = function(st) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(st, Dt) : (st.__proto__ = Dt, ut(st, Ne, "GeneratorFunction")), st.prototype = Object.create(Ur), st;
          }, A.awrap = function(st) {
            return { __await: st };
          }, Pe($e.prototype), ut($e.prototype, tt, function() {
            return this;
          }), A.AsyncIterator = $e, A.async = function(st, ct, yt, Zt, Ct) {
            Ct === void 0 && (Ct = Promise);
            var Lt = new $e(Ze(st, ct, yt, Zt), Ct);
            return A.isGeneratorFunction(ct) ? Lt : Lt.next().then(function(Wt) {
              return Wt.done ? Wt.value : Lt.next();
            });
          }, Pe(Ur), ut(Ur, Ne, "Generator"), ut(Ur, de, function() {
            return this;
          }), ut(Ur, "toString", function() {
            return "[object Generator]";
          }), A.keys = function(st) {
            var ct = Object(st), yt = [];
            for (var Zt in ct) yt.push(Zt);
            return yt.reverse(), function Ct() {
              for (; yt.length; ) {
                var Lt = yt.pop();
                if (Lt in ct) return Ct.value = Lt, Ct.done = false, Ct;
              }
              return Ct.done = true, Ct;
            };
          }, A.values = zt, ft.prototype = { constructor: ft, reset: function(st) {
            if (this.prev = 0, this.next = 0, this.sent = this._sent = p, this.done = false, this.delegate = null, this.method = "next", this.arg = p, this.tryEntries.forEach(nt), !st) for (var ct in this) ct.charAt(0) === "t" && Y.call(this, ct) && !isNaN(+ct.slice(1)) && (this[ct] = p);
          }, stop: function() {
            this.done = true;
            var st = this.tryEntries[0].completion;
            if (st.type === "throw") throw st.arg;
            return this.rval;
          }, dispatchException: function(st) {
            if (this.done) throw st;
            var ct = this;
            function yt(ar, sr) {
              return Lt.type = "throw", Lt.arg = st, ct.next = ar, sr && (ct.method = "next", ct.arg = p), !!sr;
            }
            for (var Zt = this.tryEntries.length - 1; Zt >= 0; --Zt) {
              var Ct = this.tryEntries[Zt], Lt = Ct.completion;
              if (Ct.tryLoc === "root") return yt("end");
              if (Ct.tryLoc <= this.prev) {
                var Wt = Y.call(Ct, "catchLoc"), vr = Y.call(Ct, "finallyLoc");
                if (Wt && vr) {
                  if (this.prev < Ct.catchLoc) return yt(Ct.catchLoc, true);
                  if (this.prev < Ct.finallyLoc) return yt(Ct.finallyLoc);
                } else if (Wt) {
                  if (this.prev < Ct.catchLoc) return yt(Ct.catchLoc, true);
                } else {
                  if (!vr) throw Error("try statement without catch or finally");
                  if (this.prev < Ct.finallyLoc) return yt(Ct.finallyLoc);
                }
              }
            }
          }, abrupt: function(st, ct) {
            for (var yt = this.tryEntries.length - 1; yt >= 0; --yt) {
              var Zt = this.tryEntries[yt];
              if (Zt.tryLoc <= this.prev && Y.call(Zt, "finallyLoc") && this.prev < Zt.finallyLoc) {
                var Ct = Zt;
                break;
              }
            }
            Ct && (st === "break" || st === "continue") && Ct.tryLoc <= ct && ct <= Ct.finallyLoc && (Ct = null);
            var Lt = Ct ? Ct.completion : {};
            return Lt.type = st, Lt.arg = ct, Ct ? (this.method = "next", this.next = Ct.finallyLoc, Ae) : this.complete(Lt);
          }, complete: function(st, ct) {
            if (st.type === "throw") throw st.arg;
            return st.type === "break" || st.type === "continue" ? this.next = st.arg : st.type === "return" ? (this.rval = this.arg = st.arg, this.method = "return", this.next = "end") : st.type === "normal" && ct && (this.next = ct), Ae;
          }, finish: function(st) {
            for (var ct = this.tryEntries.length - 1; ct >= 0; --ct) {
              var yt = this.tryEntries[ct];
              if (yt.finallyLoc === st) return this.complete(yt.completion, yt.afterLoc), nt(yt), Ae;
            }
          }, catch: function(st) {
            for (var ct = this.tryEntries.length - 1; ct >= 0; --ct) {
              var yt = this.tryEntries[ct];
              if (yt.tryLoc === st) {
                var Zt = yt.completion;
                if (Zt.type === "throw") {
                  var Ct = Zt.arg;
                  nt(yt);
                }
                return Ct;
              }
            }
            throw Error("illegal catch attempt");
          }, delegateYield: function(st, ct, yt) {
            return this.delegate = { iterator: zt(st), resultName: ct, nextLoc: yt }, this.method === "next" && (this.arg = p), Ae;
          } }, A;
        }
        function H(p, A, U, Y, ae, W, de) {
          try {
            var tt = p[W](de), Ne = tt.value;
          } catch (ut) {
            return void U(ut);
          }
          tt.done ? A(Ne) : Promise.resolve(Ne).then(Y, ae);
        }
        function _(p) {
          return function() {
            var A = this, U = arguments;
            return new Promise(function(Y, ae) {
              var W = p.apply(A, U);
              function de(Ne) {
                H(W, Y, ae, de, tt, "next", Ne);
              }
              function tt(Ne) {
                H(W, Y, ae, de, tt, "throw", Ne);
              }
              de(void 0);
            });
          };
        }
        function x(p, A) {
          for (var U = 0; U < A.length; U++) {
            var Y = A[U];
            Y.enumerable = Y.enumerable || false, Y.configurable = true, "value" in Y && (Y.writable = true), Object.defineProperty(p, L(Y.key), Y);
          }
        }
        function L(p) {
          var A = function(U, Y) {
            if (w(U) != "object" || !U) return U;
            var ae = U[Symbol.toPrimitive];
            if (ae !== void 0) {
              var W = ae.call(U, Y);
              if (w(W) != "object") return W;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return (Y === "string" ? String : Number)(U);
          }(p, "string");
          return w(A) == "symbol" ? A : A + "";
        }
        var j = function(p) {
          return p.Temporary = "temporary", p.Persistent = "persistent", p;
        }({}), z = function(p) {
          return 1e3;
        }, Z = function(p) {
          return 1e3 * p;
        };
        function ue(p) {
          var A, U = [];
          switch (p.switch()) {
            case 0:
              U = p.operations();
              break;
            case 1:
            case 2:
            case 3:
              U = p.value().operations();
              break;
            default:
              throw new Error("Unexpected transaction meta switch value");
          }
          var Y = (A = U.flatMap(function(ae) {
            return ae.changes();
          }).find(function(ae) {
            return ae.switch() === r.xdr.LedgerEntryChangeType.ledgerEntryCreated() && ae.created().data().switch() === r.xdr.LedgerEntryType.account();
          })) === null || A === void 0 || (A = A.created()) === null || A === void 0 || (A = A.data()) === null || A === void 0 || (A = A.account()) === null || A === void 0 || (A = A.seqNum()) === null || A === void 0 ? void 0 : A.toString();
          if (Y) return Y;
          throw new Error("No account created in transaction");
        }
        var $, X, J, B, Q, ne, K, ie, ce, ye, oe, se, re, ge, Te, pe, Oe, xe, Ve, _e, Be, Qe, ee, P, T, O, V, D = ($ = function p(A) {
          var U = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          if (function(Y, ae) {
            if (!(Y instanceof ae)) throw new TypeError("Cannot call a class as a function");
          }(this, p), this.serverURL = f()(A), U.headers && Object.keys(U.headers).length !== 0 && m.interceptors.request.use(function(Y) {
            return Y.headers = Object.assign(Y.headers, U.headers), Y;
          }), this.serverURL.protocol() !== "https" && !U.allowHttp) throw new Error("Cannot connect to insecure Soroban RPC server if `allowHttp` isn't set");
        }, X = [{ key: "getAccount", value: (V = _(N().mark(function p(A) {
          var U, Y, ae;
          return N().wrap(function(W) {
            for (; ; ) switch (W.prev = W.next) {
              case 0:
                return U = r.xdr.LedgerKey.account(new r.xdr.LedgerKeyAccount({ accountId: r.Keypair.fromPublicKey(A).xdrPublicKey() })), W.next = 3, this.getLedgerEntries(U);
              case 3:
                if ((Y = W.sent).entries.length !== 0) {
                  W.next = 6;
                  break;
                }
                return W.abrupt("return", Promise.reject({ code: 404, message: "Account not found: ".concat(A) }));
              case 6:
                return ae = Y.entries[0].val.account(), W.abrupt("return", new r.Account(A, ae.seqNum().toString()));
              case 8:
              case "end":
                return W.stop();
            }
          }, p, this);
        })), function(p) {
          return V.apply(this, arguments);
        }) }, { key: "getHealth", value: (O = _(N().mark(function p() {
          return N().wrap(function(A) {
            for (; ; ) switch (A.prev = A.next) {
              case 0:
                return A.abrupt("return", d(this.serverURL.toString(), "getHealth"));
              case 1:
              case "end":
                return A.stop();
            }
          }, p, this);
        })), function() {
          return O.apply(this, arguments);
        }) }, { key: "getContractData", value: (T = _(N().mark(function p(A, U) {
          var Y, ae, W, de, tt = arguments;
          return N().wrap(function(Ne) {
            for (; ; ) switch (Ne.prev = Ne.next) {
              case 0:
                if (Y = tt.length > 2 && tt[2] !== void 0 ? tt[2] : j.Persistent, typeof A != "string") {
                  Ne.next = 5;
                  break;
                }
                ae = new r.Contract(A).address().toScAddress(), Ne.next = 14;
                break;
              case 5:
                if (!(A instanceof r.Address)) {
                  Ne.next = 9;
                  break;
                }
                ae = A.toScAddress(), Ne.next = 14;
                break;
              case 9:
                if (!(A instanceof r.Contract)) {
                  Ne.next = 13;
                  break;
                }
                ae = A.address().toScAddress(), Ne.next = 14;
                break;
              case 13:
                throw new TypeError("unknown contract type: ".concat(A));
              case 14:
                Ne.t0 = Y, Ne.next = Ne.t0 === j.Temporary ? 17 : Ne.t0 === j.Persistent ? 19 : 21;
                break;
              case 17:
                return W = r.xdr.ContractDataDurability.temporary(), Ne.abrupt("break", 22);
              case 19:
                return W = r.xdr.ContractDataDurability.persistent(), Ne.abrupt("break", 22);
              case 21:
                throw new TypeError("invalid durability: ".concat(Y));
              case 22:
                return de = r.xdr.LedgerKey.contractData(new r.xdr.LedgerKeyContractData({ key: U, contract: ae, durability: W })), Ne.abrupt("return", this.getLedgerEntries(de).then(function(ut) {
                  return ut.entries.length === 0 ? Promise.reject({ code: 404, message: "Contract data not found. Contract: ".concat(r.Address.fromScAddress(ae).toString(), ", Key: ").concat(U.toXDR("base64"), ", Durability: ").concat(Y) }) : ut.entries[0];
                }));
              case 24:
              case "end":
                return Ne.stop();
            }
          }, p, this);
        })), function(p, A) {
          return T.apply(this, arguments);
        }) }, { key: "getContractWasmByContractId", value: (P = _(N().mark(function p(A) {
          var U, Y, ae, W;
          return N().wrap(function(de) {
            for (; ; ) switch (de.prev = de.next) {
              case 0:
                return Y = new r.Contract(A).getFootprint(), de.next = 3, this.getLedgerEntries(Y);
              case 3:
                if ((ae = de.sent).entries.length && (U = ae.entries[0]) !== null && U !== void 0 && U.val) {
                  de.next = 6;
                  break;
                }
                return de.abrupt("return", Promise.reject({ code: 404, message: "Could not obtain contract hash from server" }));
              case 6:
                return W = ae.entries[0].val.contractData().val().instance().executable().wasmHash(), de.abrupt("return", this.getContractWasmByHash(W));
              case 8:
              case "end":
                return de.stop();
            }
          }, p, this);
        })), function(p) {
          return P.apply(this, arguments);
        }) }, { key: "getContractWasmByHash", value: (ee = _(N().mark(function p(A) {
          var U, Y, ae, W, de, tt, Ne = arguments;
          return N().wrap(function(ut) {
            for (; ; ) switch (ut.prev = ut.next) {
              case 0:
                return Y = Ne.length > 1 && Ne[1] !== void 0 ? Ne[1] : void 0, ae = typeof A == "string" ? k.from(A, Y) : A, W = r.xdr.LedgerKey.contractCode(new r.xdr.LedgerKeyContractCode({ hash: ae })), ut.next = 5, this.getLedgerEntries(W);
              case 5:
                if ((de = ut.sent).entries.length && (U = de.entries[0]) !== null && U !== void 0 && U.val) {
                  ut.next = 8;
                  break;
                }
                return ut.abrupt("return", Promise.reject({ code: 404, message: "Could not obtain contract wasm from server" }));
              case 8:
                return tt = de.entries[0].val.contractCode().code(), ut.abrupt("return", tt);
              case 10:
              case "end":
                return ut.stop();
            }
          }, p, this);
        })), function(p) {
          return ee.apply(this, arguments);
        }) }, { key: "getLedgerEntries", value: (Qe = _(N().mark(function p() {
          var A = arguments;
          return N().wrap(function(U) {
            for (; ; ) switch (U.prev = U.next) {
              case 0:
                return U.abrupt("return", this._getLedgerEntries.apply(this, A).then(E.$D));
              case 1:
              case "end":
                return U.stop();
            }
          }, p, this);
        })), function() {
          return Qe.apply(this, arguments);
        }) }, { key: "_getLedgerEntries", value: (Be = _(N().mark(function p() {
          var A, U, Y, ae = arguments;
          return N().wrap(function(W) {
            for (; ; ) switch (W.prev = W.next) {
              case 0:
                for (A = ae.length, U = new Array(A), Y = 0; Y < A; Y++) U[Y] = ae[Y];
                return W.abrupt("return", d(this.serverURL.toString(), "getLedgerEntries", { keys: U.map(function(de) {
                  return de.toXDR("base64");
                }) }));
              case 2:
              case "end":
                return W.stop();
            }
          }, p, this);
        })), function() {
          return Be.apply(this, arguments);
        }) }, { key: "pollTransaction", value: (_e = _(N().mark(function p(A, U) {
          var Y, ae, W, de, tt, Ne;
          return N().wrap(function(ut) {
            for (; ; ) switch (ut.prev = ut.next) {
              case 0:
                W = ((Y = U == null ? void 0 : U.attempts) !== null && Y !== void 0 ? Y : 0) < 1 ? 30 : (ae = U == null ? void 0 : U.attempts) !== null && ae !== void 0 ? ae : 30, tt = 1;
              case 2:
                if (!(tt < W)) {
                  ut.next = 13;
                  break;
                }
                return ut.next = 5, this.getTransaction(A);
              case 5:
                if ((de = ut.sent).status === c.j.GetTransactionStatus.NOT_FOUND) {
                  ut.next = 8;
                  break;
                }
                return ut.abrupt("return", de);
              case 8:
                return ut.next = 10, R.A.sleep(((Ne = U == null ? void 0 : U.sleepStrategy) !== null && Ne !== void 0 ? Ne : z)(tt));
              case 10:
                tt++, ut.next = 2;
                break;
              case 13:
                return ut.abrupt("return", de);
              case 14:
              case "end":
                return ut.stop();
            }
          }, p, this);
        })), function(p, A) {
          return _e.apply(this, arguments);
        }) }, { key: "getTransaction", value: (Ve = _(N().mark(function p(A) {
          return N().wrap(function(U) {
            for (; ; ) switch (U.prev = U.next) {
              case 0:
                return U.abrupt("return", this._getTransaction(A).then(function(Y) {
                  var ae = {};
                  return Y.status !== c.j.GetTransactionStatus.NOT_FOUND && Object.assign(ae, (0, E.WC)(Y)), I({ status: Y.status, txHash: A, latestLedger: Y.latestLedger, latestLedgerCloseTime: Y.latestLedgerCloseTime, oldestLedger: Y.oldestLedger, oldestLedgerCloseTime: Y.oldestLedgerCloseTime }, ae);
                }));
              case 1:
              case "end":
                return U.stop();
            }
          }, p, this);
        })), function(p) {
          return Ve.apply(this, arguments);
        }) }, { key: "_getTransaction", value: (xe = _(N().mark(function p(A) {
          return N().wrap(function(U) {
            for (; ; ) switch (U.prev = U.next) {
              case 0:
                return U.abrupt("return", d(this.serverURL.toString(), "getTransaction", { hash: A }));
              case 1:
              case "end":
                return U.stop();
            }
          }, p, this);
        })), function(p) {
          return xe.apply(this, arguments);
        }) }, { key: "getTransactions", value: (Oe = _(N().mark(function p(A) {
          return N().wrap(function(U) {
            for (; ; ) switch (U.prev = U.next) {
              case 0:
                return U.abrupt("return", this._getTransactions(A).then(function(Y) {
                  return { transactions: Y.transactions.map(E.tR), latestLedger: Y.latestLedger, latestLedgerCloseTimestamp: Y.latestLedgerCloseTimestamp, oldestLedger: Y.oldestLedger, oldestLedgerCloseTimestamp: Y.oldestLedgerCloseTimestamp, cursor: Y.cursor };
                }));
              case 1:
              case "end":
                return U.stop();
            }
          }, p, this);
        })), function(p) {
          return Oe.apply(this, arguments);
        }) }, { key: "_getTransactions", value: (pe = _(N().mark(function p(A) {
          return N().wrap(function(U) {
            for (; ; ) switch (U.prev = U.next) {
              case 0:
                return U.abrupt("return", d(this.serverURL.toString(), "getTransactions", A));
              case 1:
              case "end":
                return U.stop();
            }
          }, p, this);
        })), function(p) {
          return pe.apply(this, arguments);
        }) }, { key: "getEvents", value: (Te = _(N().mark(function p(A) {
          return N().wrap(function(U) {
            for (; ; ) switch (U.prev = U.next) {
              case 0:
                return U.abrupt("return", this._getEvents(A).then(E.fG));
              case 1:
              case "end":
                return U.stop();
            }
          }, p, this);
        })), function(p) {
          return Te.apply(this, arguments);
        }) }, { key: "_getEvents", value: (ge = _(N().mark(function p(A) {
          var U;
          return N().wrap(function(Y) {
            for (; ; ) switch (Y.prev = Y.next) {
              case 0:
                return Y.abrupt("return", d(this.serverURL.toString(), "getEvents", I(I({ filters: (U = A.filters) !== null && U !== void 0 ? U : [], pagination: I(I({}, A.cursor && { cursor: A.cursor }), A.limit && { limit: A.limit }) }, A.startLedger && { startLedger: A.startLedger }), A.endLedger && { endLedger: A.endLedger })));
              case 1:
              case "end":
                return Y.stop();
            }
          }, p, this);
        })), function(p) {
          return ge.apply(this, arguments);
        }) }, { key: "getNetwork", value: (re = _(N().mark(function p() {
          return N().wrap(function(A) {
            for (; ; ) switch (A.prev = A.next) {
              case 0:
                return A.abrupt("return", d(this.serverURL.toString(), "getNetwork"));
              case 1:
              case "end":
                return A.stop();
            }
          }, p, this);
        })), function() {
          return re.apply(this, arguments);
        }) }, { key: "getLatestLedger", value: (se = _(N().mark(function p() {
          return N().wrap(function(A) {
            for (; ; ) switch (A.prev = A.next) {
              case 0:
                return A.abrupt("return", d(this.serverURL.toString(), "getLatestLedger"));
              case 1:
              case "end":
                return A.stop();
            }
          }, p, this);
        })), function() {
          return se.apply(this, arguments);
        }) }, { key: "simulateTransaction", value: (oe = _(N().mark(function p(A, U) {
          return N().wrap(function(Y) {
            for (; ; ) switch (Y.prev = Y.next) {
              case 0:
                return Y.abrupt("return", this._simulateTransaction(A, U).then(E.jr));
              case 1:
              case "end":
                return Y.stop();
            }
          }, p, this);
        })), function(p, A) {
          return oe.apply(this, arguments);
        }) }, { key: "_simulateTransaction", value: (ye = _(N().mark(function p(A, U) {
          return N().wrap(function(Y) {
            for (; ; ) switch (Y.prev = Y.next) {
              case 0:
                return Y.abrupt("return", d(this.serverURL.toString(), "simulateTransaction", I({ transaction: A.toXDR() }, U !== void 0 && { resourceConfig: { instructionLeeway: U.cpuInstructions } })));
              case 1:
              case "end":
                return Y.stop();
            }
          }, p, this);
        })), function(p, A) {
          return ye.apply(this, arguments);
        }) }, { key: "prepareTransaction", value: (ce = _(N().mark(function p(A) {
          var U;
          return N().wrap(function(Y) {
            for (; ; ) switch (Y.prev = Y.next) {
              case 0:
                return Y.next = 2, this.simulateTransaction(A);
              case 2:
                if (U = Y.sent, !c.j.isSimulationError(U)) {
                  Y.next = 5;
                  break;
                }
                throw new Error(U.error);
              case 5:
                return Y.abrupt("return", (0, S.X)(A, U).build());
              case 6:
              case "end":
                return Y.stop();
            }
          }, p, this);
        })), function(p) {
          return ce.apply(this, arguments);
        }) }, { key: "sendTransaction", value: (ie = _(N().mark(function p(A) {
          return N().wrap(function(U) {
            for (; ; ) switch (U.prev = U.next) {
              case 0:
                return U.abrupt("return", this._sendTransaction(A).then(E.Af));
              case 1:
              case "end":
                return U.stop();
            }
          }, p, this);
        })), function(p) {
          return ie.apply(this, arguments);
        }) }, { key: "_sendTransaction", value: (K = _(N().mark(function p(A) {
          return N().wrap(function(U) {
            for (; ; ) switch (U.prev = U.next) {
              case 0:
                return U.abrupt("return", d(this.serverURL.toString(), "sendTransaction", { transaction: A.toXDR() }));
              case 1:
              case "end":
                return U.stop();
            }
          }, p, this);
        })), function(p) {
          return K.apply(this, arguments);
        }) }, { key: "requestAirdrop", value: (ne = _(N().mark(function p(A, U) {
          var Y, ae, W, de, tt, Ne, ut;
          return N().wrap(function(Ze) {
            for (; ; ) switch (Ze.prev = Ze.next) {
              case 0:
                if (Y = typeof A == "string" ? A : A.accountId(), Ze.t0 = U, Ze.t0) {
                  Ze.next = 6;
                  break;
                }
                return Ze.next = 5, this.getNetwork();
              case 5:
                Ze.t0 = Ze.sent.friendbotUrl;
              case 6:
                if (U = Ze.t0) {
                  Ze.next = 9;
                  break;
                }
                throw new Error("No friendbot URL configured for current network");
              case 9:
                return Ze.prev = 9, Ze.next = 12, m.post("".concat(U, "?addr=").concat(encodeURIComponent(Y)));
              case 12:
                if ((ae = Ze.sent).data.result_meta_xdr) {
                  Ze.next = 22;
                  break;
                }
                return Ze.next = 16, this.getTransaction(ae.data.hash);
              case 16:
                if ((de = Ze.sent).status === c.j.GetTransactionStatus.SUCCESS) {
                  Ze.next = 19;
                  break;
                }
                throw new Error("Funding account ".concat(A, " failed"));
              case 19:
                W = de.resultMetaXdr, Ze.next = 23;
                break;
              case 22:
                W = r.xdr.TransactionMeta.fromXDR(ae.data.result_meta_xdr, "base64");
              case 23:
                return tt = ue(W), Ze.abrupt("return", new r.Account(Y, tt));
              case 27:
                if (Ze.prev = 27, Ze.t1 = Ze.catch(9), ((Ne = Ze.t1.response) === null || Ne === void 0 ? void 0 : Ne.status) !== 400) {
                  Ze.next = 32;
                  break;
                }
                if ((ut = Ze.t1.response.detail) === null || ut === void 0 || !ut.includes("createAccountAlreadyExist")) {
                  Ze.next = 32;
                  break;
                }
                return Ze.abrupt("return", this.getAccount(Y));
              case 32:
                throw Ze.t1;
              case 33:
              case "end":
                return Ze.stop();
            }
          }, p, this, [[9, 27]]);
        })), function(p, A) {
          return ne.apply(this, arguments);
        }) }, { key: "getFeeStats", value: (Q = _(N().mark(function p() {
          return N().wrap(function(A) {
            for (; ; ) switch (A.prev = A.next) {
              case 0:
                return A.abrupt("return", d(this.serverURL.toString(), "getFeeStats"));
              case 1:
              case "end":
                return A.stop();
            }
          }, p, this);
        })), function() {
          return Q.apply(this, arguments);
        }) }, { key: "getVersionInfo", value: (B = _(N().mark(function p() {
          return N().wrap(function(A) {
            for (; ; ) switch (A.prev = A.next) {
              case 0:
                return A.abrupt("return", d(this.serverURL.toString(), "getVersionInfo"));
              case 1:
              case "end":
                return A.stop();
            }
          }, p, this);
        })), function() {
          return B.apply(this, arguments);
        }) }, { key: "getSACBalance", value: (J = _(N().mark(function p(A, U, Y) {
          var ae, W, de, tt, Ne, ut, Ze, Et, rr, je;
          return N().wrap(function(Ge) {
            for (; ; ) switch (Ge.prev = Ge.next) {
              case 0:
                if (r.StrKey.isValidContract(A)) {
                  Ge.next = 2;
                  break;
                }
                throw new TypeError("expected contract ID, got ".concat(A));
              case 2:
                if (Y == null) {
                  Ge.next = 6;
                  break;
                }
                Ge.t0 = Y, Ge.next = 9;
                break;
              case 6:
                return Ge.next = 8, this.getNetwork().then(function(at) {
                  return at.passphrase;
                });
              case 8:
                Ge.t0 = Ge.sent;
              case 9:
                return ae = Ge.t0, W = U.contractId(ae), de = r.xdr.ScVal.scvVec([(0, r.nativeToScVal)("Balance", { type: "symbol" }), (0, r.nativeToScVal)(A, { type: "address" })]), tt = r.xdr.LedgerKey.contractData(new r.xdr.LedgerKeyContractData({ contract: new r.Address(W).toScAddress(), durability: r.xdr.ContractDataDurability.persistent(), key: de })), Ge.next = 15, this.getLedgerEntries(tt);
              case 15:
                if ((Ne = Ge.sent).entries.length !== 0) {
                  Ge.next = 18;
                  break;
                }
                return Ge.abrupt("return", { latestLedger: Ne.latestLedger });
              case 18:
                if (ut = Ne.entries[0], Ze = ut.lastModifiedLedgerSeq, Et = ut.liveUntilLedgerSeq, (rr = ut.val).switch().value === r.xdr.LedgerEntryType.contractData().value) {
                  Ge.next = 21;
                  break;
                }
                return Ge.abrupt("return", { latestLedger: Ne.latestLedger });
              case 21:
                return je = (0, r.scValToNative)(rr.contractData().val()), Ge.abrupt("return", { latestLedger: Ne.latestLedger, balanceEntry: { liveUntilLedgerSeq: Et, lastModifiedLedgerSeq: Ze, amount: je.amount.toString(), authorized: je.authorized, clawback: je.clawback } });
              case 23:
              case "end":
                return Ge.stop();
            }
          }, p, this);
        })), function(p, A, U) {
          return J.apply(this, arguments);
        }) }], X && x($.prototype, X), Object.defineProperty($, "prototype", { writable: false }), $);
        const C = (t = s.hmd(t)).exports;
      }, 3533: (t, o, s) => {
        Object.defineProperty(o, "__esModule", { value: true }), o.payment = function(r) {
          if (!r.asset) throw new Error("Must provide an asset for a payment operation");
          if (!this.isValidAmount(r.amount)) throw new TypeError(this.constructAmountRequirementsError("amount"));
          var m = {};
          try {
            m.destination = (0, f.decodeAddressToMuxedAccount)(r.destination);
          } catch {
            throw new Error("destination is invalid");
          }
          m.asset = r.asset.toXDRObject(), m.amount = this._toXDRAmount(r.amount);
          var g = new h.default.PaymentOp(m), a = {};
          return a.body = h.default.OperationBody.payment(g), this.setSourceAccount(a, r), new h.default.Operation(a);
        };
        var c, h = (c = s(1918)) && c.__esModule ? c : { default: c }, f = s(6160);
      }, 3564: (t, o, s) => {
        Object.defineProperty(o, "__esModule", { value: true }), o.buildInvocationTree = function l(d) {
          var b = d.function(), S = {}, E = b.value();
          switch (b.switch().value) {
            case 0:
              S.type = "execute", S.args = { source: h.Address.fromScAddress(E.contractAddress()).toString(), function: E.functionName(), args: E.args().map(function(q) {
                return (0, f.scValToNative)(q);
              }) };
              break;
            case 1:
            case 2:
              var R = b.switch().value === 2;
              S.type = "create", S.args = {};
              var k = [E.executable(), E.contractIdPreimage()], w = k[0], F = k[1];
              if (!!w.switch().value != !!F.switch().value) throw new Error("creation function appears invalid: ".concat(JSON.stringify(E), " (should be wasm+address or token+asset)"));
              switch (w.switch().value) {
                case 0:
                  var I = F.fromAddress();
                  S.args.type = "wasm", S.args.wasm = function(q) {
                    for (var N = 1; N < arguments.length; N++) {
                      var H = arguments[N] != null ? arguments[N] : {};
                      N % 2 ? m(Object(H), true).forEach(function(_) {
                        g(q, _, H[_]);
                      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(q, Object.getOwnPropertyDescriptors(H)) : m(Object(H)).forEach(function(_) {
                        Object.defineProperty(q, _, Object.getOwnPropertyDescriptor(H, _));
                      });
                    }
                    return q;
                  }({ salt: I.salt().toString("hex"), hash: w.wasmHash().toString("hex"), address: h.Address.fromScAddress(I.address()).toString() }, R && { constructorArgs: E.constructorArgs().map(function(q) {
                    return (0, f.scValToNative)(q);
                  }) });
                  break;
                case 1:
                  S.args.type = "sac", S.args.asset = c.Asset.fromOperation(F.fromAsset()).toString();
                  break;
                default:
                  throw new Error("unknown creation type: ".concat(JSON.stringify(w)));
              }
              break;
            default:
              throw new Error("unknown invocation type (".concat(b.switch(), "): ").concat(JSON.stringify(b)));
          }
          return S.invocations = d.subInvocations().map(function(q) {
            return l(q);
          }), S;
        }, o.walkInvocationTree = function(l, d) {
          a(l, 1, d);
        };
        var c = s(1764), h = s(1180), f = s(7177);
        function r(l) {
          return r = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(d) {
            return typeof d;
          } : function(d) {
            return d && typeof Symbol == "function" && d.constructor === Symbol && d !== Symbol.prototype ? "symbol" : typeof d;
          }, r(l);
        }
        function m(l, d) {
          var b = Object.keys(l);
          if (Object.getOwnPropertySymbols) {
            var S = Object.getOwnPropertySymbols(l);
            d && (S = S.filter(function(E) {
              return Object.getOwnPropertyDescriptor(l, E).enumerable;
            })), b.push.apply(b, S);
          }
          return b;
        }
        function g(l, d, b) {
          return (d = function(S) {
            var E = function(R, k) {
              if (r(R) != "object" || !R) return R;
              var w = R[Symbol.toPrimitive];
              if (w !== void 0) {
                var F = w.call(R, k);
                if (r(F) != "object") return F;
                throw new TypeError("@@toPrimitive must return a primitive value.");
              }
              return (k === "string" ? String : Number)(R);
            }(S, "string");
            return r(E) == "symbol" ? E : E + "";
          }(d)) in l ? Object.defineProperty(l, d, { value: b, enumerable: true, configurable: true, writable: true }) : l[d] = b, l;
        }
        function a(l, d, b, S) {
          b(l, d, S) !== false && l.subInvocations().forEach(function(E) {
            return a(E, d + 1, b, l);
          });
        }
      }, 3600: (t, o, s) => {
        t.exports = h;
        var c = s(4610);
        function h(f) {
          if (!(this instanceof h)) return new h(f);
          c.call(this, f);
        }
        s(6698)(h, c), h.prototype._transform = function(f, r, m) {
          m(null, f);
        };
      }, 3628: (t, o, s) => {
        var c = s(8648), h = s(1064), f = s(7176);
        t.exports = c ? function(r) {
          return c(r);
        } : h ? function(r) {
          if (!r || typeof r != "object" && typeof r != "function") throw new TypeError("getProto: not an object");
          return h(r);
        } : f ? function(r) {
          return f(r);
        } : null;
      }, 3683: (t, o, s) => {
        Object.defineProperty(o, "__esModule", { value: true }), o.allowTrust = function(m) {
          if (!r.StrKey.isValidEd25519PublicKey(m.trustor)) throw new Error("trustor is invalid");
          var g = {};
          if (g.trustor = f.Keypair.fromPublicKey(m.trustor).xdrAccountId(), m.assetCode.length <= 4) {
            var a = m.assetCode.padEnd(4, "\0");
            g.asset = h.default.AssetCode.assetTypeCreditAlphanum4(a);
          } else {
            if (!(m.assetCode.length <= 12)) throw new Error("Asset code must be 12 characters at max.");
            var l = m.assetCode.padEnd(12, "\0");
            g.asset = h.default.AssetCode.assetTypeCreditAlphanum12(l);
          }
          typeof m.authorize == "boolean" ? m.authorize ? g.authorize = h.default.TrustLineFlags.authorizedFlag().value : g.authorize = 0 : g.authorize = m.authorize;
          var d = new h.default.AllowTrustOp(g), b = {};
          return b.body = h.default.OperationBody.allowTrust(d), this.setSourceAccount(b, m), new h.default.Operation(b);
        };
        var c, h = (c = s(1918)) && c.__esModule ? c : { default: c }, f = s(6691), r = s(7120);
      }, 3737: (t, o, s) => {
        var c = s(6698), h = s(392), f = s(2861).Buffer, r = [1518500249, 1859775393, -1894007588, -899497514], m = new Array(80);
        function g() {
          this.init(), this._w = m, h.call(this, 64, 56);
        }
        function a(b) {
          return b << 5 | b >>> 27;
        }
        function l(b) {
          return b << 30 | b >>> 2;
        }
        function d(b, S, E, R) {
          return b === 0 ? S & E | ~S & R : b === 2 ? S & E | S & R | E & R : S ^ E ^ R;
        }
        c(g, h), g.prototype.init = function() {
          return this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520, this;
        }, g.prototype._update = function(b) {
          for (var S, E = this._w, R = 0 | this._a, k = 0 | this._b, w = 0 | this._c, F = 0 | this._d, I = 0 | this._e, q = 0; q < 16; ++q) E[q] = b.readInt32BE(4 * q);
          for (; q < 80; ++q) E[q] = (S = E[q - 3] ^ E[q - 8] ^ E[q - 14] ^ E[q - 16]) << 1 | S >>> 31;
          for (var N = 0; N < 80; ++N) {
            var H = ~~(N / 20), _ = a(R) + d(H, k, w, F) + I + E[N] + r[H] | 0;
            I = F, F = w, w = l(k), k = R, R = _;
          }
          this._a = R + this._a | 0, this._b = k + this._b | 0, this._c = w + this._c | 0, this._d = F + this._d | 0, this._e = I + this._e | 0;
        }, g.prototype._hash = function() {
          var b = f.allocUnsafe(20);
          return b.writeInt32BE(0 | this._a, 0), b.writeInt32BE(0 | this._b, 4), b.writeInt32BE(0 | this._c, 8), b.writeInt32BE(0 | this._d, 12), b.writeInt32BE(0 | this._e, 16), b;
        }, t.exports = g;
      }, 3740: function(t) {
        var o;
        o = () => (() => {
          var s = { 616: (f, r, m) => {
            m.d(r, { A: () => a });
            var g = m(287);
            g.hp.alloc(1).subarray(0, 1) instanceof g.hp || (g.hp.prototype.subarray = function(l, d) {
              const b = Uint8Array.prototype.subarray.call(this, l, d);
              return Object.setPrototypeOf(b, g.hp.prototype), b;
            });
            const a = g.hp;
          }, 281: (f, r, m) => {
            const g = m(164);
            f.exports = g;
          }, 164: (f, r, m) => {
            m.r(r), m.d(r, { Array: () => pe, Bool: () => ce, Double: () => K, Enum: () => _e, Float: () => ne, Hyper: () => X, Int: () => z, LargeInt: () => $, Opaque: () => re, Option: () => xe, Quadruple: () => ie, Reference: () => Be, String: () => oe, Struct: () => Qe, Union: () => P, UnsignedHyper: () => Q, UnsignedInt: () => B, VarArray: () => Oe, VarOpaque: () => Te, Void: () => Ve, XdrReader: () => S, XdrWriter: () => k, config: () => Y });
            class g extends TypeError {
              constructor(W) {
                super(`XDR Write Error: ${W}`);
              }
            }
            class a extends TypeError {
              constructor(W) {
                super(`XDR Read Error: ${W}`);
              }
            }
            class l extends TypeError {
              constructor(W) {
                super(`XDR Type Definition Error: ${W}`);
              }
            }
            class d extends l {
              constructor() {
                super("method not implemented, it should be overloaded in the descendant class.");
              }
            }
            var b = m(616).A;
            class S {
              constructor(W) {
                __publicField(this, "_buffer");
                __publicField(this, "_length");
                __publicField(this, "_index");
                if (!b.isBuffer(W)) {
                  if (!(W instanceof Array || Array.isArray(W) || ArrayBuffer.isView(W))) throw new a(`source invalid: ${W}`);
                  W = b.from(W);
                }
                this._buffer = W, this._length = W.length, this._index = 0;
              }
              get eof() {
                return this._index === this._length;
              }
              advance(W) {
                const de = this._index;
                if (this._index += W, this._length < this._index) throw new a("attempt to read outside the boundary of the buffer");
                const tt = 4 - (W % 4 || 4);
                if (tt > 0) {
                  for (let Ne = 0; Ne < tt; Ne++) if (this._buffer[this._index + Ne] !== 0) throw new a("invalid padding");
                  this._index += tt;
                }
                return de;
              }
              rewind() {
                this._index = 0;
              }
              read(W) {
                const de = this.advance(W);
                return this._buffer.subarray(de, de + W);
              }
              readInt32BE() {
                return this._buffer.readInt32BE(this.advance(4));
              }
              readUInt32BE() {
                return this._buffer.readUInt32BE(this.advance(4));
              }
              readBigInt64BE() {
                return this._buffer.readBigInt64BE(this.advance(8));
              }
              readBigUInt64BE() {
                return this._buffer.readBigUInt64BE(this.advance(8));
              }
              readFloatBE() {
                return this._buffer.readFloatBE(this.advance(4));
              }
              readDoubleBE() {
                return this._buffer.readDoubleBE(this.advance(8));
              }
              ensureInputConsumed() {
                if (this._index !== this._length) throw new a("invalid XDR contract typecast - source buffer not entirely consumed");
              }
            }
            var E = m(616).A;
            const R = 8192;
            class k {
              constructor(W) {
                __publicField(this, "_buffer");
                __publicField(this, "_length");
                __publicField(this, "_index", 0);
                typeof W == "number" ? W = E.allocUnsafe(W) : W instanceof E || (W = E.allocUnsafe(R)), this._buffer = W, this._length = W.length;
              }
              alloc(W) {
                const de = this._index;
                return this._index += W, this._length < this._index && this.resize(this._index), de;
              }
              resize(W) {
                const de = Math.ceil(W / R) * R, tt = E.allocUnsafe(de);
                this._buffer.copy(tt, 0, 0, this._length), this._buffer = tt, this._length = de;
              }
              finalize() {
                return this._buffer.subarray(0, this._index);
              }
              toArray() {
                return [...this.finalize()];
              }
              write(W, de) {
                if (typeof W == "string") {
                  const Ne = this.alloc(de);
                  this._buffer.write(W, Ne, "utf8");
                } else {
                  W instanceof E || (W = E.from(W));
                  const Ne = this.alloc(de);
                  W.copy(this._buffer, Ne, 0, de);
                }
                const tt = 4 - (de % 4 || 4);
                if (tt > 0) {
                  const Ne = this.alloc(tt);
                  this._buffer.fill(0, Ne, this._index);
                }
              }
              writeInt32BE(W) {
                const de = this.alloc(4);
                this._buffer.writeInt32BE(W, de);
              }
              writeUInt32BE(W) {
                const de = this.alloc(4);
                this._buffer.writeUInt32BE(W, de);
              }
              writeBigInt64BE(W) {
                const de = this.alloc(8);
                this._buffer.writeBigInt64BE(W, de);
              }
              writeBigUInt64BE(W) {
                const de = this.alloc(8);
                this._buffer.writeBigUInt64BE(W, de);
              }
              writeFloatBE(W) {
                const de = this.alloc(4);
                this._buffer.writeFloatBE(W, de);
              }
              writeDoubleBE(W) {
                const de = this.alloc(8);
                this._buffer.writeDoubleBE(W, de);
              }
            }
            __publicField(k, "bufferChunkSize", R);
            var w = m(616).A;
            class F {
              toXDR(W = "raw") {
                if (!this.write) return this.constructor.toXDR(this, W);
                const de = new k();
                return this.write(this, de), H(de.finalize(), W);
              }
              fromXDR(W, de = "raw") {
                if (!this.read) return this.constructor.fromXDR(W, de);
                const tt = new S(_(W, de)), Ne = this.read(tt);
                return tt.ensureInputConsumed(), Ne;
              }
              validateXDR(W, de = "raw") {
                try {
                  return this.fromXDR(W, de), true;
                } catch {
                  return false;
                }
              }
              static toXDR(W, de = "raw") {
                const tt = new k();
                return this.write(W, tt), H(tt.finalize(), de);
              }
              static fromXDR(W, de = "raw") {
                const tt = new S(_(W, de)), Ne = this.read(tt);
                return tt.ensureInputConsumed(), Ne;
              }
              static validateXDR(W, de = "raw") {
                try {
                  return this.fromXDR(W, de), true;
                } catch {
                  return false;
                }
              }
            }
            class I extends F {
              static read(W) {
                throw new d();
              }
              static write(W, de) {
                throw new d();
              }
              static isValid(W) {
                return false;
              }
            }
            class q extends F {
              isValid(W) {
                return false;
              }
            }
            class N extends TypeError {
              constructor(W) {
                super(`Invalid format ${W}, must be one of "raw", "hex", "base64"`);
              }
            }
            function H(ae, W) {
              switch (W) {
                case "raw":
                  return ae;
                case "hex":
                  return ae.toString("hex");
                case "base64":
                  return ae.toString("base64");
                default:
                  throw new N(W);
              }
            }
            function _(ae, W) {
              switch (W) {
                case "raw":
                  return ae;
                case "hex":
                  return w.from(ae, "hex");
                case "base64":
                  return w.from(ae, "base64");
                default:
                  throw new N(W);
              }
            }
            function x(ae, W) {
              return ae != null && (ae instanceof W || L(ae, W) && typeof ae.constructor.read == "function" && typeof ae.constructor.write == "function" && L(ae, "XdrType"));
            }
            function L(ae, W) {
              do
                if (ae.constructor.name === W) return true;
              while (ae = Object.getPrototypeOf(ae));
              return false;
            }
            const j = 2147483647;
            class z extends I {
              static read(W) {
                return W.readInt32BE();
              }
              static write(W, de) {
                if (typeof W != "number") throw new g("not a number");
                if ((0 | W) !== W) throw new g("invalid i32 value");
                de.writeInt32BE(W);
              }
              static isValid(W) {
                return typeof W == "number" && (0 | W) === W && W >= -2147483648 && W <= j;
              }
            }
            function Z(ae, W, de) {
              if (typeof ae != "bigint") throw new TypeError("Expected bigint 'value', got " + typeof ae);
              const tt = W / de;
              if (tt === 1) return [ae];
              if (de < 32 || de > 128 || tt !== 2 && tt !== 4 && tt !== 8) throw new TypeError(`invalid bigint (${ae}) and slice size (${W} -> ${de}) combination`);
              const Ne = BigInt(de), ut = new Array(tt);
              for (let Ze = 0; Ze < tt; Ze++) ut[Ze] = BigInt.asIntN(de, ae), ae >>= Ne;
              return ut;
            }
            function ue(ae, W) {
              if (W) return [0n, (1n << BigInt(ae)) - 1n];
              const de = 1n << BigInt(ae - 1);
              return [0n - de, de - 1n];
            }
            z.MAX_VALUE = j, z.MIN_VALUE = 2147483648;
            class $ extends I {
              constructor(W) {
                super(), this._value = function(de, tt, Ne) {
                  de instanceof Array ? de.length && de[0] instanceof Array && (de = de[0]) : de = [de];
                  const ut = tt / de.length;
                  switch (ut) {
                    case 32:
                    case 64:
                    case 128:
                    case 256:
                      break;
                    default:
                      throw new RangeError(`expected slices to fit in 32/64/128/256 bits, got ${de}`);
                  }
                  try {
                    for (let je = 0; je < de.length; je++) typeof de[je] != "bigint" && (de[je] = BigInt(de[je].valueOf()));
                  } catch (je) {
                    throw new TypeError(`expected bigint-like values, got: ${de} (${je})`);
                  }
                  if (Ne && de.length === 1 && de[0] < 0n) throw new RangeError(`expected a positive value, got: ${de}`);
                  let Ze = BigInt.asUintN(ut, de[0]);
                  for (let je = 1; je < de.length; je++) Ze |= BigInt.asUintN(ut, de[je]) << BigInt(je * ut);
                  Ne || (Ze = BigInt.asIntN(tt, Ze));
                  const [Et, rr] = ue(tt, Ne);
                  if (Ze >= Et && Ze <= rr) return Ze;
                  throw new TypeError(`bigint values [${de}] for ${function(je, Ge) {
                    return `${Ge ? "u" : "i"}${je}`;
                  }(tt, Ne)} out of range [${Et}, ${rr}]: ${Ze}`);
                }(W, this.size, this.unsigned);
              }
              get unsigned() {
                throw new d();
              }
              get size() {
                throw new d();
              }
              slice(W) {
                return Z(this._value, this.size, W);
              }
              toString() {
                return this._value.toString();
              }
              toJSON() {
                return { _value: this._value.toString() };
              }
              toBigInt() {
                return BigInt(this._value);
              }
              static read(W) {
                const { size: de } = this.prototype;
                return de === 64 ? new this(W.readBigUInt64BE()) : new this(...Array.from({ length: de / 64 }, () => W.readBigUInt64BE()).reverse());
              }
              static write(W, de) {
                if (W instanceof this) W = W._value;
                else if (typeof W != "bigint" || W > this.MAX_VALUE || W < this.MIN_VALUE) throw new g(`${W} is not a ${this.name}`);
                const { unsigned: tt, size: Ne } = this.prototype;
                if (Ne === 64) tt ? de.writeBigUInt64BE(W) : de.writeBigInt64BE(W);
                else for (const ut of Z(W, Ne, 64).reverse()) tt ? de.writeBigUInt64BE(ut) : de.writeBigInt64BE(ut);
              }
              static isValid(W) {
                return typeof W == "bigint" || W instanceof this;
              }
              static fromString(W) {
                return new this(W);
              }
              static defineIntBoundaries() {
                const [W, de] = ue(this.prototype.size, this.prototype.unsigned);
                this.MIN_VALUE = W, this.MAX_VALUE = de;
              }
            }
            __publicField($, "MAX_VALUE", 0n);
            __publicField($, "MIN_VALUE", 0n);
            class X extends $ {
              constructor(...W) {
                super(W);
              }
              get low() {
                return 0 | Number(0xffffffffn & this._value);
              }
              get high() {
                return 0 | Number(this._value >> 32n);
              }
              get size() {
                return 64;
              }
              get unsigned() {
                return false;
              }
              static fromBits(W, de) {
                return new this(W, de);
              }
            }
            X.defineIntBoundaries();
            const J = 4294967295;
            class B extends I {
              static read(W) {
                return W.readUInt32BE();
              }
              static write(W, de) {
                if (typeof W != "number" || !(W >= 0 && W <= J) || W % 1 != 0) throw new g("invalid u32 value");
                de.writeUInt32BE(W);
              }
              static isValid(W) {
                return typeof W == "number" && W % 1 == 0 && W >= 0 && W <= J;
              }
            }
            B.MAX_VALUE = J, B.MIN_VALUE = 0;
            class Q extends $ {
              constructor(...W) {
                super(W);
              }
              get low() {
                return 0 | Number(0xffffffffn & this._value);
              }
              get high() {
                return 0 | Number(this._value >> 32n);
              }
              get size() {
                return 64;
              }
              get unsigned() {
                return true;
              }
              static fromBits(W, de) {
                return new this(W, de);
              }
            }
            Q.defineIntBoundaries();
            class ne extends I {
              static read(W) {
                return W.readFloatBE();
              }
              static write(W, de) {
                if (typeof W != "number") throw new g("not a number");
                de.writeFloatBE(W);
              }
              static isValid(W) {
                return typeof W == "number";
              }
            }
            class K extends I {
              static read(W) {
                return W.readDoubleBE();
              }
              static write(W, de) {
                if (typeof W != "number") throw new g("not a number");
                de.writeDoubleBE(W);
              }
              static isValid(W) {
                return typeof W == "number";
              }
            }
            class ie extends I {
              static read() {
                throw new l("quadruple not supported");
              }
              static write() {
                throw new l("quadruple not supported");
              }
              static isValid() {
                return false;
              }
            }
            class ce extends I {
              static read(W) {
                const de = z.read(W);
                switch (de) {
                  case 0:
                    return false;
                  case 1:
                    return true;
                  default:
                    throw new a(`got ${de} when trying to read a bool`);
                }
              }
              static write(W, de) {
                const tt = W ? 1 : 0;
                z.write(tt, de);
              }
              static isValid(W) {
                return typeof W == "boolean";
              }
            }
            var ye = m(616).A;
            class oe extends q {
              constructor(W = B.MAX_VALUE) {
                super(), this._maxLength = W;
              }
              read(W) {
                const de = B.read(W);
                if (de > this._maxLength) throw new a(`saw ${de} length String, max allowed is ${this._maxLength}`);
                return W.read(de);
              }
              readString(W) {
                return this.read(W).toString("utf8");
              }
              write(W, de) {
                const tt = typeof W == "string" ? ye.byteLength(W, "utf8") : W.length;
                if (tt > this._maxLength) throw new g(`got ${W.length} bytes, max allowed is ${this._maxLength}`);
                B.write(tt, de), de.write(W, tt);
              }
              isValid(W) {
                return typeof W == "string" ? ye.byteLength(W, "utf8") <= this._maxLength : !!(W instanceof Array || ye.isBuffer(W)) && W.length <= this._maxLength;
              }
            }
            var se = m(616).A;
            class re extends q {
              constructor(W) {
                super(), this._length = W;
              }
              read(W) {
                return W.read(this._length);
              }
              write(W, de) {
                const { length: tt } = W;
                if (tt !== this._length) throw new g(`got ${W.length} bytes, expected ${this._length}`);
                de.write(W, tt);
              }
              isValid(W) {
                return se.isBuffer(W) && W.length === this._length;
              }
            }
            var ge = m(616).A;
            class Te extends q {
              constructor(W = B.MAX_VALUE) {
                super(), this._maxLength = W;
              }
              read(W) {
                const de = B.read(W);
                if (de > this._maxLength) throw new a(`saw ${de} length VarOpaque, max allowed is ${this._maxLength}`);
                return W.read(de);
              }
              write(W, de) {
                const { length: tt } = W;
                if (W.length > this._maxLength) throw new g(`got ${W.length} bytes, max allowed is ${this._maxLength}`);
                B.write(tt, de), de.write(W, tt);
              }
              isValid(W) {
                return ge.isBuffer(W) && W.length <= this._maxLength;
              }
            }
            class pe extends q {
              constructor(W, de) {
                super(), this._childType = W, this._length = de;
              }
              read(W) {
                const de = new m.g.Array(this._length);
                for (let tt = 0; tt < this._length; tt++) de[tt] = this._childType.read(W);
                return de;
              }
              write(W, de) {
                if (!m.g.Array.isArray(W)) throw new g("value is not array");
                if (W.length !== this._length) throw new g(`got array of size ${W.length}, expected ${this._length}`);
                for (const tt of W) this._childType.write(tt, de);
              }
              isValid(W) {
                if (!(W instanceof m.g.Array) || W.length !== this._length) return false;
                for (const de of W) if (!this._childType.isValid(de)) return false;
                return true;
              }
            }
            class Oe extends q {
              constructor(W, de = B.MAX_VALUE) {
                super(), this._childType = W, this._maxLength = de;
              }
              read(W) {
                const de = B.read(W);
                if (de > this._maxLength) throw new a(`saw ${de} length VarArray, max allowed is ${this._maxLength}`);
                const tt = new Array(de);
                for (let Ne = 0; Ne < de; Ne++) tt[Ne] = this._childType.read(W);
                return tt;
              }
              write(W, de) {
                if (!(W instanceof Array)) throw new g("value is not array");
                if (W.length > this._maxLength) throw new g(`got array of size ${W.length}, max allowed is ${this._maxLength}`);
                B.write(W.length, de);
                for (const tt of W) this._childType.write(tt, de);
              }
              isValid(W) {
                if (!(W instanceof Array) || W.length > this._maxLength) return false;
                for (const de of W) if (!this._childType.isValid(de)) return false;
                return true;
              }
            }
            class xe extends I {
              constructor(W) {
                super(), this._childType = W;
              }
              read(W) {
                if (ce.read(W)) return this._childType.read(W);
              }
              write(W, de) {
                const tt = W != null;
                ce.write(tt, de), tt && this._childType.write(W, de);
              }
              isValid(W) {
                return W == null || this._childType.isValid(W);
              }
            }
            class Ve extends I {
              static read() {
              }
              static write(W) {
                if (W !== void 0) throw new g("trying to write value to a void slot");
              }
              static isValid(W) {
                return W === void 0;
              }
            }
            class _e extends I {
              constructor(W, de) {
                super(), this.name = W, this.value = de;
              }
              static read(W) {
                const de = z.read(W), tt = this._byValue[de];
                if (tt === void 0) throw new a(`unknown ${this.enumName} member for value ${de}`);
                return tt;
              }
              static write(W, de) {
                if (!this.isValid(W)) throw new g(`${W} has enum name ${W == null ? void 0 : W.enumName}, not ${this.enumName}: ${JSON.stringify(W)}`);
                z.write(W.value, de);
              }
              static isValid(W) {
                var _a2;
                return ((_a2 = W == null ? void 0 : W.constructor) == null ? void 0 : _a2.enumName) === this.enumName || x(W, this);
              }
              static members() {
                return this._members;
              }
              static values() {
                return Object.values(this._members);
              }
              static fromName(W) {
                const de = this._members[W];
                if (!de) throw new TypeError(`${W} is not a member of ${this.enumName}`);
                return de;
              }
              static fromValue(W) {
                const de = this._byValue[W];
                if (de === void 0) throw new TypeError(`${W} is not a value of any member of ${this.enumName}`);
                return de;
              }
              static create(W, de, tt) {
                const Ne = class extends _e {
                };
                Ne.enumName = de, W.results[de] = Ne, Ne._members = {}, Ne._byValue = {};
                for (const [ut, Ze] of Object.entries(tt)) {
                  const Et = new Ne(ut, Ze);
                  Ne._members[ut] = Et, Ne._byValue[Ze] = Et, Ne[ut] = () => Et;
                }
                return Ne;
              }
            }
            class Be extends I {
              resolve() {
                throw new l('"resolve" method should be implemented in the descendant class');
              }
            }
            class Qe extends q {
              constructor(W) {
                super(), this._attributes = W || {};
              }
              static read(W) {
                const de = {};
                for (const [tt, Ne] of this._fields) de[tt] = Ne.read(W);
                return new this(de);
              }
              static write(W, de) {
                var _a2;
                if (!this.isValid(W)) throw new g(`${W} has struct name ${(_a2 = W == null ? void 0 : W.constructor) == null ? void 0 : _a2.structName}, not ${this.structName}: ${JSON.stringify(W)}`);
                for (const [tt, Ne] of this._fields) {
                  const ut = W._attributes[tt];
                  Ne.write(ut, de);
                }
              }
              static isValid(W) {
                var _a2;
                return ((_a2 = W == null ? void 0 : W.constructor) == null ? void 0 : _a2.structName) === this.structName || x(W, this);
              }
              static create(W, de, tt) {
                const Ne = class extends Qe {
                };
                Ne.structName = de, W.results[de] = Ne;
                const ut = new Array(tt.length);
                for (let Ze = 0; Ze < tt.length; Ze++) {
                  const Et = tt[Ze], rr = Et[0];
                  let je = Et[1];
                  je instanceof Be && (je = je.resolve(W)), ut[Ze] = [rr, je], Ne.prototype[rr] = ee(rr);
                }
                return Ne._fields = ut, Ne;
              }
            }
            function ee(ae) {
              return function(W) {
                return W !== void 0 && (this._attributes[ae] = W), this._attributes[ae];
              };
            }
            class P extends q {
              constructor(W, de) {
                super(), this.set(W, de);
              }
              set(W, de) {
                typeof W == "string" && (W = this.constructor._switchOn.fromName(W)), this._switch = W;
                const tt = this.constructor.armForSwitch(this._switch);
                this._arm = tt, this._armType = tt === Ve ? Ve : this.constructor._arms[tt], this._value = de;
              }
              get(W = this._arm) {
                if (this._arm !== Ve && this._arm !== W) throw new TypeError(`${W} not set`);
                return this._value;
              }
              switch() {
                return this._switch;
              }
              arm() {
                return this._arm;
              }
              armType() {
                return this._armType;
              }
              value() {
                return this._value;
              }
              static armForSwitch(W) {
                const de = this._switches.get(W);
                if (de !== void 0) return de;
                if (this._defaultArm) return this._defaultArm;
                throw new TypeError(`Bad union switch: ${W}`);
              }
              static armTypeForArm(W) {
                return W === Ve ? Ve : this._arms[W];
              }
              static read(W) {
                const de = this._switchOn.read(W), tt = this.armForSwitch(de), Ne = tt === Ve ? Ve : this._arms[tt];
                let ut;
                return ut = Ne !== void 0 ? Ne.read(W) : tt.read(W), new this(de, ut);
              }
              static write(W, de) {
                if (!this.isValid(W)) throw new g(`${W} has union name ${W == null ? void 0 : W.unionName}, not ${this.unionName}: ${JSON.stringify(W)}`);
                this._switchOn.write(W.switch(), de), W.armType().write(W.value(), de);
              }
              static isValid(W) {
                var _a2;
                return ((_a2 = W == null ? void 0 : W.constructor) == null ? void 0 : _a2.unionName) === this.unionName || x(W, this);
              }
              static create(W, de, tt) {
                const Ne = class extends P {
                };
                Ne.unionName = de, W.results[de] = Ne, tt.switchOn instanceof Be ? Ne._switchOn = tt.switchOn.resolve(W) : Ne._switchOn = tt.switchOn, Ne._switches = /* @__PURE__ */ new Map(), Ne._arms = {};
                let ut = tt.defaultArm;
                ut instanceof Be && (ut = ut.resolve(W)), Ne._defaultArm = ut;
                for (const [Ze, Et] of tt.switches) {
                  const rr = typeof Ze == "string" ? Ne._switchOn.fromName(Ze) : Ze;
                  Ne._switches.set(rr, Et);
                }
                if (Ne._switchOn.values !== void 0) for (const Ze of Ne._switchOn.values()) Ne[Ze.name] = function(Et) {
                  return new Ne(Ze, Et);
                }, Ne.prototype[Ze.name] = function(Et) {
                  return this.set(Ze, Et);
                };
                if (tt.arms) for (const [Ze, Et] of Object.entries(tt.arms)) Ne._arms[Ze] = Et instanceof Be ? Et.resolve(W) : Et, Et !== Ve && (Ne.prototype[Ze] = function() {
                  return this.get(Ze);
                });
                return Ne;
              }
            }
            class T extends Be {
              constructor(W) {
                super(), this.name = W;
              }
              resolve(W) {
                return W.definitions[this.name].resolve(W);
              }
            }
            class O extends Be {
              constructor(W, de, tt = false) {
                super(), this.childReference = W, this.length = de, this.variable = tt;
              }
              resolve(W) {
                let de = this.childReference, tt = this.length;
                return de instanceof Be && (de = de.resolve(W)), tt instanceof Be && (tt = tt.resolve(W)), this.variable ? new Oe(de, tt) : new pe(de, tt);
              }
            }
            class V extends Be {
              constructor(W) {
                super(), this.childReference = W, this.name = W.name;
              }
              resolve(W) {
                let de = this.childReference;
                return de instanceof Be && (de = de.resolve(W)), new xe(de);
              }
            }
            class D extends Be {
              constructor(W, de) {
                super(), this.sizedType = W, this.length = de;
              }
              resolve(W) {
                let de = this.length;
                return de instanceof Be && (de = de.resolve(W)), new this.sizedType(de);
              }
            }
            class C {
              constructor(W, de, tt) {
                this.constructor = W, this.name = de, this.config = tt;
              }
              resolve(W) {
                return this.name in W.results ? W.results[this.name] : this.constructor(W, this.name, this.config);
              }
            }
            function p(ae, W, de) {
              return de instanceof Be && (de = de.resolve(ae)), ae.results[W] = de, de;
            }
            function A(ae, W, de) {
              return ae.results[W] = de, de;
            }
            class U {
              constructor(W) {
                this._destination = W, this._definitions = {};
              }
              enum(W, de) {
                const tt = new C(_e.create, W, de);
                this.define(W, tt);
              }
              struct(W, de) {
                const tt = new C(Qe.create, W, de);
                this.define(W, tt);
              }
              union(W, de) {
                const tt = new C(P.create, W, de);
                this.define(W, tt);
              }
              typedef(W, de) {
                const tt = new C(p, W, de);
                this.define(W, tt);
              }
              const(W, de) {
                const tt = new C(A, W, de);
                this.define(W, tt);
              }
              void() {
                return Ve;
              }
              bool() {
                return ce;
              }
              int() {
                return z;
              }
              hyper() {
                return X;
              }
              uint() {
                return B;
              }
              uhyper() {
                return Q;
              }
              float() {
                return ne;
              }
              double() {
                return K;
              }
              quadruple() {
                return ie;
              }
              string(W) {
                return new D(oe, W);
              }
              opaque(W) {
                return new D(re, W);
              }
              varOpaque(W) {
                return new D(Te, W);
              }
              array(W, de) {
                return new O(W, de);
              }
              varArray(W, de) {
                return new O(W, de, true);
              }
              option(W) {
                return new V(W);
              }
              define(W, de) {
                if (this._destination[W] !== void 0) throw new l(`${W} is already defined`);
                this._definitions[W] = de;
              }
              lookup(W) {
                return new T(W);
              }
              resolve() {
                for (const W of Object.values(this._definitions)) W.resolve({ definitions: this._definitions, results: this._destination });
              }
            }
            function Y(ae, W = {}) {
              if (ae) {
                const de = new U(W);
                ae(de), de.resolve();
              }
              return W;
            }
          }, 526: (f, r) => {
            r.byteLength = function(E) {
              var R = b(E), k = R[0], w = R[1];
              return 3 * (k + w) / 4 - w;
            }, r.toByteArray = function(E) {
              var R, k, w = b(E), F = w[0], I = w[1], q = new a(function(_, x, L) {
                return 3 * (x + L) / 4 - L;
              }(0, F, I)), N = 0, H = I > 0 ? F - 4 : F;
              for (k = 0; k < H; k += 4) R = g[E.charCodeAt(k)] << 18 | g[E.charCodeAt(k + 1)] << 12 | g[E.charCodeAt(k + 2)] << 6 | g[E.charCodeAt(k + 3)], q[N++] = R >> 16 & 255, q[N++] = R >> 8 & 255, q[N++] = 255 & R;
              return I === 2 && (R = g[E.charCodeAt(k)] << 2 | g[E.charCodeAt(k + 1)] >> 4, q[N++] = 255 & R), I === 1 && (R = g[E.charCodeAt(k)] << 10 | g[E.charCodeAt(k + 1)] << 4 | g[E.charCodeAt(k + 2)] >> 2, q[N++] = R >> 8 & 255, q[N++] = 255 & R), q;
            }, r.fromByteArray = function(E) {
              for (var R, k = E.length, w = k % 3, F = [], I = 16383, q = 0, N = k - w; q < N; q += I) F.push(S(E, q, q + I > N ? N : q + I));
              return w === 1 ? (R = E[k - 1], F.push(m[R >> 2] + m[R << 4 & 63] + "==")) : w === 2 && (R = (E[k - 2] << 8) + E[k - 1], F.push(m[R >> 10] + m[R >> 4 & 63] + m[R << 2 & 63] + "=")), F.join("");
            };
            for (var m = [], g = [], a = typeof Uint8Array < "u" ? Uint8Array : Array, l = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", d = 0; d < 64; ++d) m[d] = l[d], g[l.charCodeAt(d)] = d;
            function b(E) {
              var R = E.length;
              if (R % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
              var k = E.indexOf("=");
              return k === -1 && (k = R), [k, k === R ? 0 : 4 - k % 4];
            }
            function S(E, R, k) {
              for (var w, F, I = [], q = R; q < k; q += 3) w = (E[q] << 16 & 16711680) + (E[q + 1] << 8 & 65280) + (255 & E[q + 2]), I.push(m[(F = w) >> 18 & 63] + m[F >> 12 & 63] + m[F >> 6 & 63] + m[63 & F]);
              return I.join("");
            }
            g[45] = 62, g[95] = 63;
          }, 287: (f, r, m) => {
            const g = m(526), a = m(251), l = typeof Symbol == "function" && typeof Symbol.for == "function" ? Symbol.for("nodejs.util.inspect.custom") : null;
            r.hp = S, r.IS = 50;
            const d = 2147483647;
            function b(p) {
              if (p > d) throw new RangeError('The value "' + p + '" is invalid for option "size"');
              const A = new Uint8Array(p);
              return Object.setPrototypeOf(A, S.prototype), A;
            }
            function S(p, A, U) {
              if (typeof p == "number") {
                if (typeof A == "string") throw new TypeError('The "string" argument must be of type string. Received type number');
                return k(p);
              }
              return E(p, A, U);
            }
            function E(p, A, U) {
              if (typeof p == "string") return function(W, de) {
                if (typeof de == "string" && de !== "" || (de = "utf8"), !S.isEncoding(de)) throw new TypeError("Unknown encoding: " + de);
                const tt = 0 | q(W, de);
                let Ne = b(tt);
                const ut = Ne.write(W, de);
                return ut !== tt && (Ne = Ne.slice(0, ut)), Ne;
              }(p, A);
              if (ArrayBuffer.isView(p)) return function(W) {
                if (T(W, Uint8Array)) {
                  const de = new Uint8Array(W);
                  return F(de.buffer, de.byteOffset, de.byteLength);
                }
                return w(W);
              }(p);
              if (p == null) throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof p);
              if (T(p, ArrayBuffer) || p && T(p.buffer, ArrayBuffer) || typeof SharedArrayBuffer < "u" && (T(p, SharedArrayBuffer) || p && T(p.buffer, SharedArrayBuffer))) return F(p, A, U);
              if (typeof p == "number") throw new TypeError('The "value" argument must not be of type number. Received type number');
              const Y = p.valueOf && p.valueOf();
              if (Y != null && Y !== p) return S.from(Y, A, U);
              const ae = function(W) {
                if (S.isBuffer(W)) {
                  const de = 0 | I(W.length), tt = b(de);
                  return tt.length === 0 || W.copy(tt, 0, 0, de), tt;
                }
                return W.length !== void 0 ? typeof W.length != "number" || O(W.length) ? b(0) : w(W) : W.type === "Buffer" && Array.isArray(W.data) ? w(W.data) : void 0;
              }(p);
              if (ae) return ae;
              if (typeof Symbol < "u" && Symbol.toPrimitive != null && typeof p[Symbol.toPrimitive] == "function") return S.from(p[Symbol.toPrimitive]("string"), A, U);
              throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof p);
            }
            function R(p) {
              if (typeof p != "number") throw new TypeError('"size" argument must be of type number');
              if (p < 0) throw new RangeError('The value "' + p + '" is invalid for option "size"');
            }
            function k(p) {
              return R(p), b(p < 0 ? 0 : 0 | I(p));
            }
            function w(p) {
              const A = p.length < 0 ? 0 : 0 | I(p.length), U = b(A);
              for (let Y = 0; Y < A; Y += 1) U[Y] = 255 & p[Y];
              return U;
            }
            function F(p, A, U) {
              if (A < 0 || p.byteLength < A) throw new RangeError('"offset" is outside of buffer bounds');
              if (p.byteLength < A + (U || 0)) throw new RangeError('"length" is outside of buffer bounds');
              let Y;
              return Y = A === void 0 && U === void 0 ? new Uint8Array(p) : U === void 0 ? new Uint8Array(p, A) : new Uint8Array(p, A, U), Object.setPrototypeOf(Y, S.prototype), Y;
            }
            function I(p) {
              if (p >= d) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + d.toString(16) + " bytes");
              return 0 | p;
            }
            function q(p, A) {
              if (S.isBuffer(p)) return p.length;
              if (ArrayBuffer.isView(p) || T(p, ArrayBuffer)) return p.byteLength;
              if (typeof p != "string") throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof p);
              const U = p.length, Y = arguments.length > 2 && arguments[2] === true;
              if (!Y && U === 0) return 0;
              let ae = false;
              for (; ; ) switch (A) {
                case "ascii":
                case "latin1":
                case "binary":
                  return U;
                case "utf8":
                case "utf-8":
                  return Qe(p).length;
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return 2 * U;
                case "hex":
                  return U >>> 1;
                case "base64":
                  return ee(p).length;
                default:
                  if (ae) return Y ? -1 : Qe(p).length;
                  A = ("" + A).toLowerCase(), ae = true;
              }
            }
            function N(p, A, U) {
              let Y = false;
              if ((A === void 0 || A < 0) && (A = 0), A > this.length || ((U === void 0 || U > this.length) && (U = this.length), U <= 0) || (U >>>= 0) <= (A >>>= 0)) return "";
              for (p || (p = "utf8"); ; ) switch (p) {
                case "hex":
                  return ne(this, A, U);
                case "utf8":
                case "utf-8":
                  return X(this, A, U);
                case "ascii":
                  return B(this, A, U);
                case "latin1":
                case "binary":
                  return Q(this, A, U);
                case "base64":
                  return $(this, A, U);
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return K(this, A, U);
                default:
                  if (Y) throw new TypeError("Unknown encoding: " + p);
                  p = (p + "").toLowerCase(), Y = true;
              }
            }
            function H(p, A, U) {
              const Y = p[A];
              p[A] = p[U], p[U] = Y;
            }
            function _(p, A, U, Y, ae) {
              if (p.length === 0) return -1;
              if (typeof U == "string" ? (Y = U, U = 0) : U > 2147483647 ? U = 2147483647 : U < -2147483648 && (U = -2147483648), O(U = +U) && (U = ae ? 0 : p.length - 1), U < 0 && (U = p.length + U), U >= p.length) {
                if (ae) return -1;
                U = p.length - 1;
              } else if (U < 0) {
                if (!ae) return -1;
                U = 0;
              }
              if (typeof A == "string" && (A = S.from(A, Y)), S.isBuffer(A)) return A.length === 0 ? -1 : x(p, A, U, Y, ae);
              if (typeof A == "number") return A &= 255, typeof Uint8Array.prototype.indexOf == "function" ? ae ? Uint8Array.prototype.indexOf.call(p, A, U) : Uint8Array.prototype.lastIndexOf.call(p, A, U) : x(p, [A], U, Y, ae);
              throw new TypeError("val must be string, number or Buffer");
            }
            function x(p, A, U, Y, ae) {
              let W, de = 1, tt = p.length, Ne = A.length;
              if (Y !== void 0 && ((Y = String(Y).toLowerCase()) === "ucs2" || Y === "ucs-2" || Y === "utf16le" || Y === "utf-16le")) {
                if (p.length < 2 || A.length < 2) return -1;
                de = 2, tt /= 2, Ne /= 2, U /= 2;
              }
              function ut(Ze, Et) {
                return de === 1 ? Ze[Et] : Ze.readUInt16BE(Et * de);
              }
              if (ae) {
                let Ze = -1;
                for (W = U; W < tt; W++) if (ut(p, W) === ut(A, Ze === -1 ? 0 : W - Ze)) {
                  if (Ze === -1 && (Ze = W), W - Ze + 1 === Ne) return Ze * de;
                } else Ze !== -1 && (W -= W - Ze), Ze = -1;
              } else for (U + Ne > tt && (U = tt - Ne), W = U; W >= 0; W--) {
                let Ze = true;
                for (let Et = 0; Et < Ne; Et++) if (ut(p, W + Et) !== ut(A, Et)) {
                  Ze = false;
                  break;
                }
                if (Ze) return W;
              }
              return -1;
            }
            function L(p, A, U, Y) {
              U = Number(U) || 0;
              const ae = p.length - U;
              Y ? (Y = Number(Y)) > ae && (Y = ae) : Y = ae;
              const W = A.length;
              let de;
              for (Y > W / 2 && (Y = W / 2), de = 0; de < Y; ++de) {
                const tt = parseInt(A.substr(2 * de, 2), 16);
                if (O(tt)) return de;
                p[U + de] = tt;
              }
              return de;
            }
            function j(p, A, U, Y) {
              return P(Qe(A, p.length - U), p, U, Y);
            }
            function z(p, A, U, Y) {
              return P(function(ae) {
                const W = [];
                for (let de = 0; de < ae.length; ++de) W.push(255 & ae.charCodeAt(de));
                return W;
              }(A), p, U, Y);
            }
            function Z(p, A, U, Y) {
              return P(ee(A), p, U, Y);
            }
            function ue(p, A, U, Y) {
              return P(function(ae, W) {
                let de, tt, Ne;
                const ut = [];
                for (let Ze = 0; Ze < ae.length && !((W -= 2) < 0); ++Ze) de = ae.charCodeAt(Ze), tt = de >> 8, Ne = de % 256, ut.push(Ne), ut.push(tt);
                return ut;
              }(A, p.length - U), p, U, Y);
            }
            function $(p, A, U) {
              return A === 0 && U === p.length ? g.fromByteArray(p) : g.fromByteArray(p.slice(A, U));
            }
            function X(p, A, U) {
              U = Math.min(p.length, U);
              const Y = [];
              let ae = A;
              for (; ae < U; ) {
                const W = p[ae];
                let de = null, tt = W > 239 ? 4 : W > 223 ? 3 : W > 191 ? 2 : 1;
                if (ae + tt <= U) {
                  let Ne, ut, Ze, Et;
                  switch (tt) {
                    case 1:
                      W < 128 && (de = W);
                      break;
                    case 2:
                      Ne = p[ae + 1], (192 & Ne) == 128 && (Et = (31 & W) << 6 | 63 & Ne, Et > 127 && (de = Et));
                      break;
                    case 3:
                      Ne = p[ae + 1], ut = p[ae + 2], (192 & Ne) == 128 && (192 & ut) == 128 && (Et = (15 & W) << 12 | (63 & Ne) << 6 | 63 & ut, Et > 2047 && (Et < 55296 || Et > 57343) && (de = Et));
                      break;
                    case 4:
                      Ne = p[ae + 1], ut = p[ae + 2], Ze = p[ae + 3], (192 & Ne) == 128 && (192 & ut) == 128 && (192 & Ze) == 128 && (Et = (15 & W) << 18 | (63 & Ne) << 12 | (63 & ut) << 6 | 63 & Ze, Et > 65535 && Et < 1114112 && (de = Et));
                  }
                }
                de === null ? (de = 65533, tt = 1) : de > 65535 && (de -= 65536, Y.push(de >>> 10 & 1023 | 55296), de = 56320 | 1023 & de), Y.push(de), ae += tt;
              }
              return function(W) {
                const de = W.length;
                if (de <= J) return String.fromCharCode.apply(String, W);
                let tt = "", Ne = 0;
                for (; Ne < de; ) tt += String.fromCharCode.apply(String, W.slice(Ne, Ne += J));
                return tt;
              }(Y);
            }
            S.TYPED_ARRAY_SUPPORT = function() {
              try {
                const p = new Uint8Array(1), A = { foo: function() {
                  return 42;
                } };
                return Object.setPrototypeOf(A, Uint8Array.prototype), Object.setPrototypeOf(p, A), p.foo() === 42;
              } catch {
                return false;
              }
            }(), S.TYPED_ARRAY_SUPPORT || typeof console > "u" || typeof console.error != "function" || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."), Object.defineProperty(S.prototype, "parent", { enumerable: true, get: function() {
              if (S.isBuffer(this)) return this.buffer;
            } }), Object.defineProperty(S.prototype, "offset", { enumerable: true, get: function() {
              if (S.isBuffer(this)) return this.byteOffset;
            } }), S.poolSize = 8192, S.from = function(p, A, U) {
              return E(p, A, U);
            }, Object.setPrototypeOf(S.prototype, Uint8Array.prototype), Object.setPrototypeOf(S, Uint8Array), S.alloc = function(p, A, U) {
              return function(Y, ae, W) {
                return R(Y), Y <= 0 ? b(Y) : ae !== void 0 ? typeof W == "string" ? b(Y).fill(ae, W) : b(Y).fill(ae) : b(Y);
              }(p, A, U);
            }, S.allocUnsafe = function(p) {
              return k(p);
            }, S.allocUnsafeSlow = function(p) {
              return k(p);
            }, S.isBuffer = function(p) {
              return p != null && p._isBuffer === true && p !== S.prototype;
            }, S.compare = function(p, A) {
              if (T(p, Uint8Array) && (p = S.from(p, p.offset, p.byteLength)), T(A, Uint8Array) && (A = S.from(A, A.offset, A.byteLength)), !S.isBuffer(p) || !S.isBuffer(A)) throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
              if (p === A) return 0;
              let U = p.length, Y = A.length;
              for (let ae = 0, W = Math.min(U, Y); ae < W; ++ae) if (p[ae] !== A[ae]) {
                U = p[ae], Y = A[ae];
                break;
              }
              return U < Y ? -1 : Y < U ? 1 : 0;
            }, S.isEncoding = function(p) {
              switch (String(p).toLowerCase()) {
                case "hex":
                case "utf8":
                case "utf-8":
                case "ascii":
                case "latin1":
                case "binary":
                case "base64":
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return true;
                default:
                  return false;
              }
            }, S.concat = function(p, A) {
              if (!Array.isArray(p)) throw new TypeError('"list" argument must be an Array of Buffers');
              if (p.length === 0) return S.alloc(0);
              let U;
              if (A === void 0) for (A = 0, U = 0; U < p.length; ++U) A += p[U].length;
              const Y = S.allocUnsafe(A);
              let ae = 0;
              for (U = 0; U < p.length; ++U) {
                let W = p[U];
                if (T(W, Uint8Array)) ae + W.length > Y.length ? (S.isBuffer(W) || (W = S.from(W)), W.copy(Y, ae)) : Uint8Array.prototype.set.call(Y, W, ae);
                else {
                  if (!S.isBuffer(W)) throw new TypeError('"list" argument must be an Array of Buffers');
                  W.copy(Y, ae);
                }
                ae += W.length;
              }
              return Y;
            }, S.byteLength = q, S.prototype._isBuffer = true, S.prototype.swap16 = function() {
              const p = this.length;
              if (p % 2 != 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
              for (let A = 0; A < p; A += 2) H(this, A, A + 1);
              return this;
            }, S.prototype.swap32 = function() {
              const p = this.length;
              if (p % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
              for (let A = 0; A < p; A += 4) H(this, A, A + 3), H(this, A + 1, A + 2);
              return this;
            }, S.prototype.swap64 = function() {
              const p = this.length;
              if (p % 8 != 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
              for (let A = 0; A < p; A += 8) H(this, A, A + 7), H(this, A + 1, A + 6), H(this, A + 2, A + 5), H(this, A + 3, A + 4);
              return this;
            }, S.prototype.toString = function() {
              const p = this.length;
              return p === 0 ? "" : arguments.length === 0 ? X(this, 0, p) : N.apply(this, arguments);
            }, S.prototype.toLocaleString = S.prototype.toString, S.prototype.equals = function(p) {
              if (!S.isBuffer(p)) throw new TypeError("Argument must be a Buffer");
              return this === p || S.compare(this, p) === 0;
            }, S.prototype.inspect = function() {
              let p = "";
              const A = r.IS;
              return p = this.toString("hex", 0, A).replace(/(.{2})/g, "$1 ").trim(), this.length > A && (p += " ... "), "<Buffer " + p + ">";
            }, l && (S.prototype[l] = S.prototype.inspect), S.prototype.compare = function(p, A, U, Y, ae) {
              if (T(p, Uint8Array) && (p = S.from(p, p.offset, p.byteLength)), !S.isBuffer(p)) throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof p);
              if (A === void 0 && (A = 0), U === void 0 && (U = p ? p.length : 0), Y === void 0 && (Y = 0), ae === void 0 && (ae = this.length), A < 0 || U > p.length || Y < 0 || ae > this.length) throw new RangeError("out of range index");
              if (Y >= ae && A >= U) return 0;
              if (Y >= ae) return -1;
              if (A >= U) return 1;
              if (this === p) return 0;
              let W = (ae >>>= 0) - (Y >>>= 0), de = (U >>>= 0) - (A >>>= 0);
              const tt = Math.min(W, de), Ne = this.slice(Y, ae), ut = p.slice(A, U);
              for (let Ze = 0; Ze < tt; ++Ze) if (Ne[Ze] !== ut[Ze]) {
                W = Ne[Ze], de = ut[Ze];
                break;
              }
              return W < de ? -1 : de < W ? 1 : 0;
            }, S.prototype.includes = function(p, A, U) {
              return this.indexOf(p, A, U) !== -1;
            }, S.prototype.indexOf = function(p, A, U) {
              return _(this, p, A, U, true);
            }, S.prototype.lastIndexOf = function(p, A, U) {
              return _(this, p, A, U, false);
            }, S.prototype.write = function(p, A, U, Y) {
              if (A === void 0) Y = "utf8", U = this.length, A = 0;
              else if (U === void 0 && typeof A == "string") Y = A, U = this.length, A = 0;
              else {
                if (!isFinite(A)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                A >>>= 0, isFinite(U) ? (U >>>= 0, Y === void 0 && (Y = "utf8")) : (Y = U, U = void 0);
              }
              const ae = this.length - A;
              if ((U === void 0 || U > ae) && (U = ae), p.length > 0 && (U < 0 || A < 0) || A > this.length) throw new RangeError("Attempt to write outside buffer bounds");
              Y || (Y = "utf8");
              let W = false;
              for (; ; ) switch (Y) {
                case "hex":
                  return L(this, p, A, U);
                case "utf8":
                case "utf-8":
                  return j(this, p, A, U);
                case "ascii":
                case "latin1":
                case "binary":
                  return z(this, p, A, U);
                case "base64":
                  return Z(this, p, A, U);
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return ue(this, p, A, U);
                default:
                  if (W) throw new TypeError("Unknown encoding: " + Y);
                  Y = ("" + Y).toLowerCase(), W = true;
              }
            }, S.prototype.toJSON = function() {
              return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
            };
            const J = 4096;
            function B(p, A, U) {
              let Y = "";
              U = Math.min(p.length, U);
              for (let ae = A; ae < U; ++ae) Y += String.fromCharCode(127 & p[ae]);
              return Y;
            }
            function Q(p, A, U) {
              let Y = "";
              U = Math.min(p.length, U);
              for (let ae = A; ae < U; ++ae) Y += String.fromCharCode(p[ae]);
              return Y;
            }
            function ne(p, A, U) {
              const Y = p.length;
              (!A || A < 0) && (A = 0), (!U || U < 0 || U > Y) && (U = Y);
              let ae = "";
              for (let W = A; W < U; ++W) ae += V[p[W]];
              return ae;
            }
            function K(p, A, U) {
              const Y = p.slice(A, U);
              let ae = "";
              for (let W = 0; W < Y.length - 1; W += 2) ae += String.fromCharCode(Y[W] + 256 * Y[W + 1]);
              return ae;
            }
            function ie(p, A, U) {
              if (p % 1 != 0 || p < 0) throw new RangeError("offset is not uint");
              if (p + A > U) throw new RangeError("Trying to access beyond buffer length");
            }
            function ce(p, A, U, Y, ae, W) {
              if (!S.isBuffer(p)) throw new TypeError('"buffer" argument must be a Buffer instance');
              if (A > ae || A < W) throw new RangeError('"value" argument is out of bounds');
              if (U + Y > p.length) throw new RangeError("Index out of range");
            }
            function ye(p, A, U, Y, ae) {
              xe(A, Y, ae, p, U, 7);
              let W = Number(A & BigInt(4294967295));
              p[U++] = W, W >>= 8, p[U++] = W, W >>= 8, p[U++] = W, W >>= 8, p[U++] = W;
              let de = Number(A >> BigInt(32) & BigInt(4294967295));
              return p[U++] = de, de >>= 8, p[U++] = de, de >>= 8, p[U++] = de, de >>= 8, p[U++] = de, U;
            }
            function oe(p, A, U, Y, ae) {
              xe(A, Y, ae, p, U, 7);
              let W = Number(A & BigInt(4294967295));
              p[U + 7] = W, W >>= 8, p[U + 6] = W, W >>= 8, p[U + 5] = W, W >>= 8, p[U + 4] = W;
              let de = Number(A >> BigInt(32) & BigInt(4294967295));
              return p[U + 3] = de, de >>= 8, p[U + 2] = de, de >>= 8, p[U + 1] = de, de >>= 8, p[U] = de, U + 8;
            }
            function se(p, A, U, Y, ae, W) {
              if (U + Y > p.length) throw new RangeError("Index out of range");
              if (U < 0) throw new RangeError("Index out of range");
            }
            function re(p, A, U, Y, ae) {
              return A = +A, U >>>= 0, ae || se(p, 0, U, 4), a.write(p, A, U, Y, 23, 4), U + 4;
            }
            function ge(p, A, U, Y, ae) {
              return A = +A, U >>>= 0, ae || se(p, 0, U, 8), a.write(p, A, U, Y, 52, 8), U + 8;
            }
            S.prototype.slice = function(p, A) {
              const U = this.length;
              (p = ~~p) < 0 ? (p += U) < 0 && (p = 0) : p > U && (p = U), (A = A === void 0 ? U : ~~A) < 0 ? (A += U) < 0 && (A = 0) : A > U && (A = U), A < p && (A = p);
              const Y = this.subarray(p, A);
              return Object.setPrototypeOf(Y, S.prototype), Y;
            }, S.prototype.readUintLE = S.prototype.readUIntLE = function(p, A, U) {
              p >>>= 0, A >>>= 0, U || ie(p, A, this.length);
              let Y = this[p], ae = 1, W = 0;
              for (; ++W < A && (ae *= 256); ) Y += this[p + W] * ae;
              return Y;
            }, S.prototype.readUintBE = S.prototype.readUIntBE = function(p, A, U) {
              p >>>= 0, A >>>= 0, U || ie(p, A, this.length);
              let Y = this[p + --A], ae = 1;
              for (; A > 0 && (ae *= 256); ) Y += this[p + --A] * ae;
              return Y;
            }, S.prototype.readUint8 = S.prototype.readUInt8 = function(p, A) {
              return p >>>= 0, A || ie(p, 1, this.length), this[p];
            }, S.prototype.readUint16LE = S.prototype.readUInt16LE = function(p, A) {
              return p >>>= 0, A || ie(p, 2, this.length), this[p] | this[p + 1] << 8;
            }, S.prototype.readUint16BE = S.prototype.readUInt16BE = function(p, A) {
              return p >>>= 0, A || ie(p, 2, this.length), this[p] << 8 | this[p + 1];
            }, S.prototype.readUint32LE = S.prototype.readUInt32LE = function(p, A) {
              return p >>>= 0, A || ie(p, 4, this.length), (this[p] | this[p + 1] << 8 | this[p + 2] << 16) + 16777216 * this[p + 3];
            }, S.prototype.readUint32BE = S.prototype.readUInt32BE = function(p, A) {
              return p >>>= 0, A || ie(p, 4, this.length), 16777216 * this[p] + (this[p + 1] << 16 | this[p + 2] << 8 | this[p + 3]);
            }, S.prototype.readBigUInt64LE = D(function(p) {
              Ve(p >>>= 0, "offset");
              const A = this[p], U = this[p + 7];
              A !== void 0 && U !== void 0 || _e(p, this.length - 8);
              const Y = A + 256 * this[++p] + 65536 * this[++p] + this[++p] * 2 ** 24, ae = this[++p] + 256 * this[++p] + 65536 * this[++p] + U * 2 ** 24;
              return BigInt(Y) + (BigInt(ae) << BigInt(32));
            }), S.prototype.readBigUInt64BE = D(function(p) {
              Ve(p >>>= 0, "offset");
              const A = this[p], U = this[p + 7];
              A !== void 0 && U !== void 0 || _e(p, this.length - 8);
              const Y = A * 2 ** 24 + 65536 * this[++p] + 256 * this[++p] + this[++p], ae = this[++p] * 2 ** 24 + 65536 * this[++p] + 256 * this[++p] + U;
              return (BigInt(Y) << BigInt(32)) + BigInt(ae);
            }), S.prototype.readIntLE = function(p, A, U) {
              p >>>= 0, A >>>= 0, U || ie(p, A, this.length);
              let Y = this[p], ae = 1, W = 0;
              for (; ++W < A && (ae *= 256); ) Y += this[p + W] * ae;
              return ae *= 128, Y >= ae && (Y -= Math.pow(2, 8 * A)), Y;
            }, S.prototype.readIntBE = function(p, A, U) {
              p >>>= 0, A >>>= 0, U || ie(p, A, this.length);
              let Y = A, ae = 1, W = this[p + --Y];
              for (; Y > 0 && (ae *= 256); ) W += this[p + --Y] * ae;
              return ae *= 128, W >= ae && (W -= Math.pow(2, 8 * A)), W;
            }, S.prototype.readInt8 = function(p, A) {
              return p >>>= 0, A || ie(p, 1, this.length), 128 & this[p] ? -1 * (255 - this[p] + 1) : this[p];
            }, S.prototype.readInt16LE = function(p, A) {
              p >>>= 0, A || ie(p, 2, this.length);
              const U = this[p] | this[p + 1] << 8;
              return 32768 & U ? 4294901760 | U : U;
            }, S.prototype.readInt16BE = function(p, A) {
              p >>>= 0, A || ie(p, 2, this.length);
              const U = this[p + 1] | this[p] << 8;
              return 32768 & U ? 4294901760 | U : U;
            }, S.prototype.readInt32LE = function(p, A) {
              return p >>>= 0, A || ie(p, 4, this.length), this[p] | this[p + 1] << 8 | this[p + 2] << 16 | this[p + 3] << 24;
            }, S.prototype.readInt32BE = function(p, A) {
              return p >>>= 0, A || ie(p, 4, this.length), this[p] << 24 | this[p + 1] << 16 | this[p + 2] << 8 | this[p + 3];
            }, S.prototype.readBigInt64LE = D(function(p) {
              Ve(p >>>= 0, "offset");
              const A = this[p], U = this[p + 7];
              A !== void 0 && U !== void 0 || _e(p, this.length - 8);
              const Y = this[p + 4] + 256 * this[p + 5] + 65536 * this[p + 6] + (U << 24);
              return (BigInt(Y) << BigInt(32)) + BigInt(A + 256 * this[++p] + 65536 * this[++p] + this[++p] * 16777216);
            }), S.prototype.readBigInt64BE = D(function(p) {
              Ve(p >>>= 0, "offset");
              const A = this[p], U = this[p + 7];
              A !== void 0 && U !== void 0 || _e(p, this.length - 8);
              const Y = (A << 24) + 65536 * this[++p] + 256 * this[++p] + this[++p];
              return (BigInt(Y) << BigInt(32)) + BigInt(this[++p] * 16777216 + 65536 * this[++p] + 256 * this[++p] + U);
            }), S.prototype.readFloatLE = function(p, A) {
              return p >>>= 0, A || ie(p, 4, this.length), a.read(this, p, true, 23, 4);
            }, S.prototype.readFloatBE = function(p, A) {
              return p >>>= 0, A || ie(p, 4, this.length), a.read(this, p, false, 23, 4);
            }, S.prototype.readDoubleLE = function(p, A) {
              return p >>>= 0, A || ie(p, 8, this.length), a.read(this, p, true, 52, 8);
            }, S.prototype.readDoubleBE = function(p, A) {
              return p >>>= 0, A || ie(p, 8, this.length), a.read(this, p, false, 52, 8);
            }, S.prototype.writeUintLE = S.prototype.writeUIntLE = function(p, A, U, Y) {
              p = +p, A >>>= 0, U >>>= 0, Y || ce(this, p, A, U, Math.pow(2, 8 * U) - 1, 0);
              let ae = 1, W = 0;
              for (this[A] = 255 & p; ++W < U && (ae *= 256); ) this[A + W] = p / ae & 255;
              return A + U;
            }, S.prototype.writeUintBE = S.prototype.writeUIntBE = function(p, A, U, Y) {
              p = +p, A >>>= 0, U >>>= 0, Y || ce(this, p, A, U, Math.pow(2, 8 * U) - 1, 0);
              let ae = U - 1, W = 1;
              for (this[A + ae] = 255 & p; --ae >= 0 && (W *= 256); ) this[A + ae] = p / W & 255;
              return A + U;
            }, S.prototype.writeUint8 = S.prototype.writeUInt8 = function(p, A, U) {
              return p = +p, A >>>= 0, U || ce(this, p, A, 1, 255, 0), this[A] = 255 & p, A + 1;
            }, S.prototype.writeUint16LE = S.prototype.writeUInt16LE = function(p, A, U) {
              return p = +p, A >>>= 0, U || ce(this, p, A, 2, 65535, 0), this[A] = 255 & p, this[A + 1] = p >>> 8, A + 2;
            }, S.prototype.writeUint16BE = S.prototype.writeUInt16BE = function(p, A, U) {
              return p = +p, A >>>= 0, U || ce(this, p, A, 2, 65535, 0), this[A] = p >>> 8, this[A + 1] = 255 & p, A + 2;
            }, S.prototype.writeUint32LE = S.prototype.writeUInt32LE = function(p, A, U) {
              return p = +p, A >>>= 0, U || ce(this, p, A, 4, 4294967295, 0), this[A + 3] = p >>> 24, this[A + 2] = p >>> 16, this[A + 1] = p >>> 8, this[A] = 255 & p, A + 4;
            }, S.prototype.writeUint32BE = S.prototype.writeUInt32BE = function(p, A, U) {
              return p = +p, A >>>= 0, U || ce(this, p, A, 4, 4294967295, 0), this[A] = p >>> 24, this[A + 1] = p >>> 16, this[A + 2] = p >>> 8, this[A + 3] = 255 & p, A + 4;
            }, S.prototype.writeBigUInt64LE = D(function(p, A = 0) {
              return ye(this, p, A, BigInt(0), BigInt("0xffffffffffffffff"));
            }), S.prototype.writeBigUInt64BE = D(function(p, A = 0) {
              return oe(this, p, A, BigInt(0), BigInt("0xffffffffffffffff"));
            }), S.prototype.writeIntLE = function(p, A, U, Y) {
              if (p = +p, A >>>= 0, !Y) {
                const tt = Math.pow(2, 8 * U - 1);
                ce(this, p, A, U, tt - 1, -tt);
              }
              let ae = 0, W = 1, de = 0;
              for (this[A] = 255 & p; ++ae < U && (W *= 256); ) p < 0 && de === 0 && this[A + ae - 1] !== 0 && (de = 1), this[A + ae] = (p / W | 0) - de & 255;
              return A + U;
            }, S.prototype.writeIntBE = function(p, A, U, Y) {
              if (p = +p, A >>>= 0, !Y) {
                const tt = Math.pow(2, 8 * U - 1);
                ce(this, p, A, U, tt - 1, -tt);
              }
              let ae = U - 1, W = 1, de = 0;
              for (this[A + ae] = 255 & p; --ae >= 0 && (W *= 256); ) p < 0 && de === 0 && this[A + ae + 1] !== 0 && (de = 1), this[A + ae] = (p / W | 0) - de & 255;
              return A + U;
            }, S.prototype.writeInt8 = function(p, A, U) {
              return p = +p, A >>>= 0, U || ce(this, p, A, 1, 127, -128), p < 0 && (p = 255 + p + 1), this[A] = 255 & p, A + 1;
            }, S.prototype.writeInt16LE = function(p, A, U) {
              return p = +p, A >>>= 0, U || ce(this, p, A, 2, 32767, -32768), this[A] = 255 & p, this[A + 1] = p >>> 8, A + 2;
            }, S.prototype.writeInt16BE = function(p, A, U) {
              return p = +p, A >>>= 0, U || ce(this, p, A, 2, 32767, -32768), this[A] = p >>> 8, this[A + 1] = 255 & p, A + 2;
            }, S.prototype.writeInt32LE = function(p, A, U) {
              return p = +p, A >>>= 0, U || ce(this, p, A, 4, 2147483647, -2147483648), this[A] = 255 & p, this[A + 1] = p >>> 8, this[A + 2] = p >>> 16, this[A + 3] = p >>> 24, A + 4;
            }, S.prototype.writeInt32BE = function(p, A, U) {
              return p = +p, A >>>= 0, U || ce(this, p, A, 4, 2147483647, -2147483648), p < 0 && (p = 4294967295 + p + 1), this[A] = p >>> 24, this[A + 1] = p >>> 16, this[A + 2] = p >>> 8, this[A + 3] = 255 & p, A + 4;
            }, S.prototype.writeBigInt64LE = D(function(p, A = 0) {
              return ye(this, p, A, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
            }), S.prototype.writeBigInt64BE = D(function(p, A = 0) {
              return oe(this, p, A, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
            }), S.prototype.writeFloatLE = function(p, A, U) {
              return re(this, p, A, true, U);
            }, S.prototype.writeFloatBE = function(p, A, U) {
              return re(this, p, A, false, U);
            }, S.prototype.writeDoubleLE = function(p, A, U) {
              return ge(this, p, A, true, U);
            }, S.prototype.writeDoubleBE = function(p, A, U) {
              return ge(this, p, A, false, U);
            }, S.prototype.copy = function(p, A, U, Y) {
              if (!S.isBuffer(p)) throw new TypeError("argument should be a Buffer");
              if (U || (U = 0), Y || Y === 0 || (Y = this.length), A >= p.length && (A = p.length), A || (A = 0), Y > 0 && Y < U && (Y = U), Y === U || p.length === 0 || this.length === 0) return 0;
              if (A < 0) throw new RangeError("targetStart out of bounds");
              if (U < 0 || U >= this.length) throw new RangeError("Index out of range");
              if (Y < 0) throw new RangeError("sourceEnd out of bounds");
              Y > this.length && (Y = this.length), p.length - A < Y - U && (Y = p.length - A + U);
              const ae = Y - U;
              return this === p && typeof Uint8Array.prototype.copyWithin == "function" ? this.copyWithin(A, U, Y) : Uint8Array.prototype.set.call(p, this.subarray(U, Y), A), ae;
            }, S.prototype.fill = function(p, A, U, Y) {
              if (typeof p == "string") {
                if (typeof A == "string" ? (Y = A, A = 0, U = this.length) : typeof U == "string" && (Y = U, U = this.length), Y !== void 0 && typeof Y != "string") throw new TypeError("encoding must be a string");
                if (typeof Y == "string" && !S.isEncoding(Y)) throw new TypeError("Unknown encoding: " + Y);
                if (p.length === 1) {
                  const W = p.charCodeAt(0);
                  (Y === "utf8" && W < 128 || Y === "latin1") && (p = W);
                }
              } else typeof p == "number" ? p &= 255 : typeof p == "boolean" && (p = Number(p));
              if (A < 0 || this.length < A || this.length < U) throw new RangeError("Out of range index");
              if (U <= A) return this;
              let ae;
              if (A >>>= 0, U = U === void 0 ? this.length : U >>> 0, p || (p = 0), typeof p == "number") for (ae = A; ae < U; ++ae) this[ae] = p;
              else {
                const W = S.isBuffer(p) ? p : S.from(p, Y), de = W.length;
                if (de === 0) throw new TypeError('The value "' + p + '" is invalid for argument "value"');
                for (ae = 0; ae < U - A; ++ae) this[ae + A] = W[ae % de];
              }
              return this;
            };
            const Te = {};
            function pe(p, A, U) {
              Te[p] = class extends U {
                constructor() {
                  super(), Object.defineProperty(this, "message", { value: A.apply(this, arguments), writable: true, configurable: true }), this.name = `${this.name} [${p}]`, this.stack, delete this.name;
                }
                get code() {
                  return p;
                }
                set code(Y) {
                  Object.defineProperty(this, "code", { configurable: true, enumerable: true, value: Y, writable: true });
                }
                toString() {
                  return `${this.name} [${p}]: ${this.message}`;
                }
              };
            }
            function Oe(p) {
              let A = "", U = p.length;
              const Y = p[0] === "-" ? 1 : 0;
              for (; U >= Y + 4; U -= 3) A = `_${p.slice(U - 3, U)}${A}`;
              return `${p.slice(0, U)}${A}`;
            }
            function xe(p, A, U, Y, ae, W) {
              if (p > U || p < A) {
                const de = typeof A == "bigint" ? "n" : "";
                let tt;
                throw tt = A === 0 || A === BigInt(0) ? `>= 0${de} and < 2${de} ** ${8 * (W + 1)}${de}` : `>= -(2${de} ** ${8 * (W + 1) - 1}${de}) and < 2 ** ${8 * (W + 1) - 1}${de}`, new Te.ERR_OUT_OF_RANGE("value", tt, p);
              }
              (function(de, tt, Ne) {
                Ve(tt, "offset"), de[tt] !== void 0 && de[tt + Ne] !== void 0 || _e(tt, de.length - (Ne + 1));
              })(Y, ae, W);
            }
            function Ve(p, A) {
              if (typeof p != "number") throw new Te.ERR_INVALID_ARG_TYPE(A, "number", p);
            }
            function _e(p, A, U) {
              throw Math.floor(p) !== p ? (Ve(p, U), new Te.ERR_OUT_OF_RANGE("offset", "an integer", p)) : A < 0 ? new Te.ERR_BUFFER_OUT_OF_BOUNDS() : new Te.ERR_OUT_OF_RANGE("offset", `>= 0 and <= ${A}`, p);
            }
            pe("ERR_BUFFER_OUT_OF_BOUNDS", function(p) {
              return p ? `${p} is outside of buffer bounds` : "Attempt to access memory outside buffer bounds";
            }, RangeError), pe("ERR_INVALID_ARG_TYPE", function(p, A) {
              return `The "${p}" argument must be of type number. Received type ${typeof A}`;
            }, TypeError), pe("ERR_OUT_OF_RANGE", function(p, A, U) {
              let Y = `The value of "${p}" is out of range.`, ae = U;
              return Number.isInteger(U) && Math.abs(U) > 4294967296 ? ae = Oe(String(U)) : typeof U == "bigint" && (ae = String(U), (U > BigInt(2) ** BigInt(32) || U < -(BigInt(2) ** BigInt(32))) && (ae = Oe(ae)), ae += "n"), Y += ` It must be ${A}. Received ${ae}`, Y;
            }, RangeError);
            const Be = /[^+/0-9A-Za-z-_]/g;
            function Qe(p, A) {
              let U;
              A = A || 1 / 0;
              const Y = p.length;
              let ae = null;
              const W = [];
              for (let de = 0; de < Y; ++de) {
                if (U = p.charCodeAt(de), U > 55295 && U < 57344) {
                  if (!ae) {
                    if (U > 56319) {
                      (A -= 3) > -1 && W.push(239, 191, 189);
                      continue;
                    }
                    if (de + 1 === Y) {
                      (A -= 3) > -1 && W.push(239, 191, 189);
                      continue;
                    }
                    ae = U;
                    continue;
                  }
                  if (U < 56320) {
                    (A -= 3) > -1 && W.push(239, 191, 189), ae = U;
                    continue;
                  }
                  U = 65536 + (ae - 55296 << 10 | U - 56320);
                } else ae && (A -= 3) > -1 && W.push(239, 191, 189);
                if (ae = null, U < 128) {
                  if ((A -= 1) < 0) break;
                  W.push(U);
                } else if (U < 2048) {
                  if ((A -= 2) < 0) break;
                  W.push(U >> 6 | 192, 63 & U | 128);
                } else if (U < 65536) {
                  if ((A -= 3) < 0) break;
                  W.push(U >> 12 | 224, U >> 6 & 63 | 128, 63 & U | 128);
                } else {
                  if (!(U < 1114112)) throw new Error("Invalid code point");
                  if ((A -= 4) < 0) break;
                  W.push(U >> 18 | 240, U >> 12 & 63 | 128, U >> 6 & 63 | 128, 63 & U | 128);
                }
              }
              return W;
            }
            function ee(p) {
              return g.toByteArray(function(A) {
                if ((A = (A = A.split("=")[0]).trim().replace(Be, "")).length < 2) return "";
                for (; A.length % 4 != 0; ) A += "=";
                return A;
              }(p));
            }
            function P(p, A, U, Y) {
              let ae;
              for (ae = 0; ae < Y && !(ae + U >= A.length || ae >= p.length); ++ae) A[ae + U] = p[ae];
              return ae;
            }
            function T(p, A) {
              return p instanceof A || p != null && p.constructor != null && p.constructor.name != null && p.constructor.name === A.name;
            }
            function O(p) {
              return p != p;
            }
            const V = function() {
              const p = "0123456789abcdef", A = new Array(256);
              for (let U = 0; U < 16; ++U) {
                const Y = 16 * U;
                for (let ae = 0; ae < 16; ++ae) A[Y + ae] = p[U] + p[ae];
              }
              return A;
            }();
            function D(p) {
              return typeof BigInt > "u" ? C : p;
            }
            function C() {
              throw new Error("BigInt not supported");
            }
          }, 251: (f, r) => {
            r.read = function(m, g, a, l, d) {
              var b, S, E = 8 * d - l - 1, R = (1 << E) - 1, k = R >> 1, w = -7, F = a ? d - 1 : 0, I = a ? -1 : 1, q = m[g + F];
              for (F += I, b = q & (1 << -w) - 1, q >>= -w, w += E; w > 0; b = 256 * b + m[g + F], F += I, w -= 8) ;
              for (S = b & (1 << -w) - 1, b >>= -w, w += l; w > 0; S = 256 * S + m[g + F], F += I, w -= 8) ;
              if (b === 0) b = 1 - k;
              else {
                if (b === R) return S ? NaN : 1 / 0 * (q ? -1 : 1);
                S += Math.pow(2, l), b -= k;
              }
              return (q ? -1 : 1) * S * Math.pow(2, b - l);
            }, r.write = function(m, g, a, l, d, b) {
              var S, E, R, k = 8 * b - d - 1, w = (1 << k) - 1, F = w >> 1, I = d === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, q = l ? 0 : b - 1, N = l ? 1 : -1, H = g < 0 || g === 0 && 1 / g < 0 ? 1 : 0;
              for (g = Math.abs(g), isNaN(g) || g === 1 / 0 ? (E = isNaN(g) ? 1 : 0, S = w) : (S = Math.floor(Math.log(g) / Math.LN2), g * (R = Math.pow(2, -S)) < 1 && (S--, R *= 2), (g += S + F >= 1 ? I / R : I * Math.pow(2, 1 - F)) * R >= 2 && (S++, R /= 2), S + F >= w ? (E = 0, S = w) : S + F >= 1 ? (E = (g * R - 1) * Math.pow(2, d), S += F) : (E = g * Math.pow(2, F - 1) * Math.pow(2, d), S = 0)); d >= 8; m[a + q] = 255 & E, q += N, E /= 256, d -= 8) ;
              for (S = S << d | E, k += d; k > 0; m[a + q] = 255 & S, q += N, S /= 256, k -= 8) ;
              m[a + q - N] |= 128 * H;
            };
          } }, c = {};
          function h(f) {
            var r = c[f];
            if (r !== void 0) return r.exports;
            var m = c[f] = { exports: {} };
            return s[f](m, m.exports, h), m.exports;
          }
          return h.d = (f, r) => {
            for (var m in r) h.o(r, m) && !h.o(f, m) && Object.defineProperty(f, m, { enumerable: true, get: r[m] });
          }, h.g = function() {
            if (typeof globalThis == "object") return globalThis;
            try {
              return this || new Function("return this")();
            } catch {
              if (typeof window == "object") return window;
            }
          }(), h.o = (f, r) => Object.prototype.hasOwnProperty.call(f, r), h.r = (f) => {
            typeof Symbol < "u" && Symbol.toStringTag && Object.defineProperty(f, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(f, "__esModule", { value: true });
          }, h(281);
        })(), t.exports = o();
      }, 3758: (t, o, s) => {
        var c = s(8287).Buffer;
        Object.defineProperty(o, "__esModule", { value: true }), o.TransactionBase = void 0;
        var h, f = (h = s(1918)) && h.__esModule ? h : { default: h }, r = s(9152), m = s(6691);
        function g(d) {
          return g = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(b) {
            return typeof b;
          } : function(b) {
            return b && typeof Symbol == "function" && b.constructor === Symbol && b !== Symbol.prototype ? "symbol" : typeof b;
          }, g(d);
        }
        function a(d, b) {
          for (var S = 0; S < b.length; S++) {
            var E = b[S];
            E.enumerable = E.enumerable || false, E.configurable = true, "value" in E && (E.writable = true), Object.defineProperty(d, l(E.key), E);
          }
        }
        function l(d) {
          var b = function(S, E) {
            if (g(S) != "object" || !S) return S;
            var R = S[Symbol.toPrimitive];
            if (R !== void 0) {
              var k = R.call(S, E);
              if (g(k) != "object") return k;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(S);
          }(d, "string");
          return g(b) == "symbol" ? b : b + "";
        }
        o.TransactionBase = function() {
          return function(d, b, S) {
            return b && a(d.prototype, b), Object.defineProperty(d, "prototype", { writable: false }), d;
          }(function d(b, S, E, R) {
            if (function(k, w) {
              if (!(k instanceof w)) throw new TypeError("Cannot call a class as a function");
            }(this, d), typeof R != "string") throw new Error("Invalid passphrase provided to Transaction: expected a string but got a ".concat(g(R)));
            this._networkPassphrase = R, this._tx = b, this._signatures = S, this._fee = E;
          }, [{ key: "signatures", get: function() {
            return this._signatures;
          }, set: function(d) {
            throw new Error("Transaction is immutable");
          } }, { key: "tx", get: function() {
            return this._tx;
          }, set: function(d) {
            throw new Error("Transaction is immutable");
          } }, { key: "fee", get: function() {
            return this._fee;
          }, set: function(d) {
            throw new Error("Transaction is immutable");
          } }, { key: "networkPassphrase", get: function() {
            return this._networkPassphrase;
          }, set: function(d) {
            this._networkPassphrase = d;
          } }, { key: "sign", value: function() {
            for (var d = this, b = this.hash(), S = arguments.length, E = new Array(S), R = 0; R < S; R++) E[R] = arguments[R];
            E.forEach(function(k) {
              var w = k.signDecorated(b);
              d.signatures.push(w);
            });
          } }, { key: "getKeypairSignature", value: function(d) {
            return d.sign(this.hash()).toString("base64");
          } }, { key: "addSignature", value: function() {
            var d, b, S = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "", E = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
            if (!E || typeof E != "string") throw new Error("Invalid signature");
            if (!S || typeof S != "string") throw new Error("Invalid publicKey");
            var R = c.from(E, "base64");
            try {
              b = (d = m.Keypair.fromPublicKey(S)).signatureHint();
            } catch {
              throw new Error("Invalid publicKey");
            }
            if (!d.verify(this.hash(), R)) throw new Error("Invalid signature");
            this.signatures.push(new f.default.DecoratedSignature({ hint: b, signature: R }));
          } }, { key: "addDecoratedSignature", value: function(d) {
            this.signatures.push(d);
          } }, { key: "signHashX", value: function(d) {
            if (typeof d == "string" && (d = c.from(d, "hex")), d.length > 64) throw new Error("preimage cannnot be longer than 64 bytes");
            var b = d, S = (0, r.hash)(d), E = S.slice(S.length - 4);
            this.signatures.push(new f.default.DecoratedSignature({ hint: E, signature: b }));
          } }, { key: "hash", value: function() {
            return (0, r.hash)(this.signatureBase());
          } }, { key: "signatureBase", value: function() {
            throw new Error("Implement in subclass");
          } }, { key: "toEnvelope", value: function() {
            throw new Error("Implement in subclass");
          } }, { key: "toXDR", value: function() {
            return this.toEnvelope().toXDR().toString("base64");
          } }]);
        }();
      }, 3874: (t, o, s) => {
        Object.defineProperty(o, "__esModule", { value: true }), o.pathPaymentStrictSend = function(r) {
          switch (true) {
            case !r.sendAsset:
              throw new Error("Must specify a send asset");
            case !this.isValidAmount(r.sendAmount):
              throw new TypeError(this.constructAmountRequirementsError("sendAmount"));
            case !r.destAsset:
              throw new Error("Must provide a destAsset for a payment operation");
            case !this.isValidAmount(r.destMin):
              throw new TypeError(this.constructAmountRequirementsError("destMin"));
          }
          var m = {};
          m.sendAsset = r.sendAsset.toXDRObject(), m.sendAmount = this._toXDRAmount(r.sendAmount);
          try {
            m.destination = (0, f.decodeAddressToMuxedAccount)(r.destination);
          } catch {
            throw new Error("destination is invalid");
          }
          m.destAsset = r.destAsset.toXDRObject(), m.destMin = this._toXDRAmount(r.destMin);
          var g = r.path ? r.path : [];
          m.path = g.map(function(d) {
            return d.toXDRObject();
          });
          var a = new h.default.PathPaymentStrictSendOp(m), l = {};
          return l.body = h.default.OperationBody.pathPaymentStrictSend(a), this.setSourceAccount(l, r), new h.default.Operation(l);
        };
        var c, h = (c = s(1918)) && c.__esModule ? c : { default: c }, f = s(6160);
      }, 3898: (t, o, s) => {
        s.r(o), s.d(o, { Api: () => {
        }, Resolver: () => I, STELLAR_TOML_MAX_SIZE: () => w });
        var c = s(1293), h = s.n(c), f = s(9983), r = s(8732);
        function m(q) {
          return m = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(N) {
            return typeof N;
          } : function(N) {
            return N && typeof Symbol == "function" && N.constructor === Symbol && N !== Symbol.prototype ? "symbol" : typeof N;
          }, m(q);
        }
        function g() {
          g = function() {
            return N;
          };
          var q, N = {}, H = Object.prototype, _ = H.hasOwnProperty, x = Object.defineProperty || function(ee, P, T) {
            ee[P] = T.value;
          }, L = typeof Symbol == "function" ? Symbol : {}, j = L.iterator || "@@iterator", z = L.asyncIterator || "@@asyncIterator", Z = L.toStringTag || "@@toStringTag";
          function ue(ee, P, T) {
            return Object.defineProperty(ee, P, { value: T, enumerable: true, configurable: true, writable: true }), ee[P];
          }
          try {
            ue({}, "");
          } catch {
            ue = function(P, T, O) {
              return P[T] = O;
            };
          }
          function $(ee, P, T, O) {
            var V = P && P.prototype instanceof ie ? P : ie, D = Object.create(V.prototype), C = new Be(O || []);
            return x(D, "_invoke", { value: Oe(ee, T, C) }), D;
          }
          function X(ee, P, T) {
            try {
              return { type: "normal", arg: ee.call(P, T) };
            } catch (O) {
              return { type: "throw", arg: O };
            }
          }
          N.wrap = $;
          var J = "suspendedStart", B = "suspendedYield", Q = "executing", ne = "completed", K = {};
          function ie() {
          }
          function ce() {
          }
          function ye() {
          }
          var oe = {};
          ue(oe, j, function() {
            return this;
          });
          var se = Object.getPrototypeOf, re = se && se(se(Qe([])));
          re && re !== H && _.call(re, j) && (oe = re);
          var ge = ye.prototype = ie.prototype = Object.create(oe);
          function Te(ee) {
            ["next", "throw", "return"].forEach(function(P) {
              ue(ee, P, function(T) {
                return this._invoke(P, T);
              });
            });
          }
          function pe(ee, P) {
            function T(V, D, C, p) {
              var A = X(ee[V], ee, D);
              if (A.type !== "throw") {
                var U = A.arg, Y = U.value;
                return Y && m(Y) == "object" && _.call(Y, "__await") ? P.resolve(Y.__await).then(function(ae) {
                  T("next", ae, C, p);
                }, function(ae) {
                  T("throw", ae, C, p);
                }) : P.resolve(Y).then(function(ae) {
                  U.value = ae, C(U);
                }, function(ae) {
                  return T("throw", ae, C, p);
                });
              }
              p(A.arg);
            }
            var O;
            x(this, "_invoke", { value: function(V, D) {
              function C() {
                return new P(function(p, A) {
                  T(V, D, p, A);
                });
              }
              return O = O ? O.then(C, C) : C();
            } });
          }
          function Oe(ee, P, T) {
            var O = J;
            return function(V, D) {
              if (O === Q) throw Error("Generator is already running");
              if (O === ne) {
                if (V === "throw") throw D;
                return { value: q, done: true };
              }
              for (T.method = V, T.arg = D; ; ) {
                var C = T.delegate;
                if (C) {
                  var p = xe(C, T);
                  if (p) {
                    if (p === K) continue;
                    return p;
                  }
                }
                if (T.method === "next") T.sent = T._sent = T.arg;
                else if (T.method === "throw") {
                  if (O === J) throw O = ne, T.arg;
                  T.dispatchException(T.arg);
                } else T.method === "return" && T.abrupt("return", T.arg);
                O = Q;
                var A = X(ee, P, T);
                if (A.type === "normal") {
                  if (O = T.done ? ne : B, A.arg === K) continue;
                  return { value: A.arg, done: T.done };
                }
                A.type === "throw" && (O = ne, T.method = "throw", T.arg = A.arg);
              }
            };
          }
          function xe(ee, P) {
            var T = P.method, O = ee.iterator[T];
            if (O === q) return P.delegate = null, T === "throw" && ee.iterator.return && (P.method = "return", P.arg = q, xe(ee, P), P.method === "throw") || T !== "return" && (P.method = "throw", P.arg = new TypeError("The iterator does not provide a '" + T + "' method")), K;
            var V = X(O, ee.iterator, P.arg);
            if (V.type === "throw") return P.method = "throw", P.arg = V.arg, P.delegate = null, K;
            var D = V.arg;
            return D ? D.done ? (P[ee.resultName] = D.value, P.next = ee.nextLoc, P.method !== "return" && (P.method = "next", P.arg = q), P.delegate = null, K) : D : (P.method = "throw", P.arg = new TypeError("iterator result is not an object"), P.delegate = null, K);
          }
          function Ve(ee) {
            var P = { tryLoc: ee[0] };
            1 in ee && (P.catchLoc = ee[1]), 2 in ee && (P.finallyLoc = ee[2], P.afterLoc = ee[3]), this.tryEntries.push(P);
          }
          function _e(ee) {
            var P = ee.completion || {};
            P.type = "normal", delete P.arg, ee.completion = P;
          }
          function Be(ee) {
            this.tryEntries = [{ tryLoc: "root" }], ee.forEach(Ve, this), this.reset(true);
          }
          function Qe(ee) {
            if (ee || ee === "") {
              var P = ee[j];
              if (P) return P.call(ee);
              if (typeof ee.next == "function") return ee;
              if (!isNaN(ee.length)) {
                var T = -1, O = function V() {
                  for (; ++T < ee.length; ) if (_.call(ee, T)) return V.value = ee[T], V.done = false, V;
                  return V.value = q, V.done = true, V;
                };
                return O.next = O;
              }
            }
            throw new TypeError(m(ee) + " is not iterable");
          }
          return ce.prototype = ye, x(ge, "constructor", { value: ye, configurable: true }), x(ye, "constructor", { value: ce, configurable: true }), ce.displayName = ue(ye, Z, "GeneratorFunction"), N.isGeneratorFunction = function(ee) {
            var P = typeof ee == "function" && ee.constructor;
            return !!P && (P === ce || (P.displayName || P.name) === "GeneratorFunction");
          }, N.mark = function(ee) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(ee, ye) : (ee.__proto__ = ye, ue(ee, Z, "GeneratorFunction")), ee.prototype = Object.create(ge), ee;
          }, N.awrap = function(ee) {
            return { __await: ee };
          }, Te(pe.prototype), ue(pe.prototype, z, function() {
            return this;
          }), N.AsyncIterator = pe, N.async = function(ee, P, T, O, V) {
            V === void 0 && (V = Promise);
            var D = new pe($(ee, P, T, O), V);
            return N.isGeneratorFunction(P) ? D : D.next().then(function(C) {
              return C.done ? C.value : D.next();
            });
          }, Te(ge), ue(ge, Z, "Generator"), ue(ge, j, function() {
            return this;
          }), ue(ge, "toString", function() {
            return "[object Generator]";
          }), N.keys = function(ee) {
            var P = Object(ee), T = [];
            for (var O in P) T.push(O);
            return T.reverse(), function V() {
              for (; T.length; ) {
                var D = T.pop();
                if (D in P) return V.value = D, V.done = false, V;
              }
              return V.done = true, V;
            };
          }, N.values = Qe, Be.prototype = { constructor: Be, reset: function(ee) {
            if (this.prev = 0, this.next = 0, this.sent = this._sent = q, this.done = false, this.delegate = null, this.method = "next", this.arg = q, this.tryEntries.forEach(_e), !ee) for (var P in this) P.charAt(0) === "t" && _.call(this, P) && !isNaN(+P.slice(1)) && (this[P] = q);
          }, stop: function() {
            this.done = true;
            var ee = this.tryEntries[0].completion;
            if (ee.type === "throw") throw ee.arg;
            return this.rval;
          }, dispatchException: function(ee) {
            if (this.done) throw ee;
            var P = this;
            function T(A, U) {
              return D.type = "throw", D.arg = ee, P.next = A, U && (P.method = "next", P.arg = q), !!U;
            }
            for (var O = this.tryEntries.length - 1; O >= 0; --O) {
              var V = this.tryEntries[O], D = V.completion;
              if (V.tryLoc === "root") return T("end");
              if (V.tryLoc <= this.prev) {
                var C = _.call(V, "catchLoc"), p = _.call(V, "finallyLoc");
                if (C && p) {
                  if (this.prev < V.catchLoc) return T(V.catchLoc, true);
                  if (this.prev < V.finallyLoc) return T(V.finallyLoc);
                } else if (C) {
                  if (this.prev < V.catchLoc) return T(V.catchLoc, true);
                } else {
                  if (!p) throw Error("try statement without catch or finally");
                  if (this.prev < V.finallyLoc) return T(V.finallyLoc);
                }
              }
            }
          }, abrupt: function(ee, P) {
            for (var T = this.tryEntries.length - 1; T >= 0; --T) {
              var O = this.tryEntries[T];
              if (O.tryLoc <= this.prev && _.call(O, "finallyLoc") && this.prev < O.finallyLoc) {
                var V = O;
                break;
              }
            }
            V && (ee === "break" || ee === "continue") && V.tryLoc <= P && P <= V.finallyLoc && (V = null);
            var D = V ? V.completion : {};
            return D.type = ee, D.arg = P, V ? (this.method = "next", this.next = V.finallyLoc, K) : this.complete(D);
          }, complete: function(ee, P) {
            if (ee.type === "throw") throw ee.arg;
            return ee.type === "break" || ee.type === "continue" ? this.next = ee.arg : ee.type === "return" ? (this.rval = this.arg = ee.arg, this.method = "return", this.next = "end") : ee.type === "normal" && P && (this.next = P), K;
          }, finish: function(ee) {
            for (var P = this.tryEntries.length - 1; P >= 0; --P) {
              var T = this.tryEntries[P];
              if (T.finallyLoc === ee) return this.complete(T.completion, T.afterLoc), _e(T), K;
            }
          }, catch: function(ee) {
            for (var P = this.tryEntries.length - 1; P >= 0; --P) {
              var T = this.tryEntries[P];
              if (T.tryLoc === ee) {
                var O = T.completion;
                if (O.type === "throw") {
                  var V = O.arg;
                  _e(T);
                }
                return V;
              }
            }
            throw Error("illegal catch attempt");
          }, delegateYield: function(ee, P, T) {
            return this.delegate = { iterator: Qe(ee), resultName: P, nextLoc: T }, this.method === "next" && (this.arg = q), K;
          } }, N;
        }
        function a(q, N, H, _, x, L, j) {
          try {
            var z = q[L](j), Z = z.value;
          } catch (ue) {
            return void H(ue);
          }
          z.done ? N(Z) : Promise.resolve(Z).then(_, x);
        }
        function l(q, N) {
          for (var H = 0; H < N.length; H++) {
            var _ = N[H];
            _.enumerable = _.enumerable || false, _.configurable = true, "value" in _ && (_.writable = true), Object.defineProperty(q, d(_.key), _);
          }
        }
        function d(q) {
          var N = function(H, _) {
            if (m(H) != "object" || !H) return H;
            var x = H[Symbol.toPrimitive];
            if (x !== void 0) {
              var L = x.call(H, _);
              if (m(L) != "object") return L;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(H);
          }(q, "string");
          return m(N) == "symbol" ? N : N + "";
        }
        var b, S, E, R, k, w = 102400, F = f.ok.CancelToken, I = (b = function q() {
          (function(N, H) {
            if (!(N instanceof H)) throw new TypeError("Cannot call a class as a function");
          })(this, q);
        }, S = null, E = [{ key: "resolve", value: (R = g().mark(function q(N) {
          var H, _, x, L, j, z = arguments;
          return g().wrap(function(Z) {
            for (; ; ) switch (Z.prev = Z.next) {
              case 0:
                return x = (_ = z.length > 1 && z[1] !== void 0 ? z[1] : {}).allowHttp === void 0 ? r.T.isAllowHttp() : _.allowHttp, L = _.timeout === void 0 ? r.T.getTimeout() : _.timeout, j = x ? "http" : "https", Z.abrupt("return", f.ok.get("".concat(j, "://").concat(N, "/.well-known/stellar.toml"), { maxRedirects: (H = _.allowedRedirects) !== null && H !== void 0 ? H : 0, maxContentLength: w, cancelToken: L ? new F(function(ue) {
                  return setTimeout(function() {
                    return ue("timeout of ".concat(L, "ms exceeded"));
                  }, L);
                }) : void 0, timeout: L }).then(function(ue) {
                  try {
                    var $ = h().parse(ue.data);
                    return Promise.resolve($);
                  } catch (X) {
                    return Promise.reject(new Error("stellar.toml is invalid - Parsing error on line ".concat(X.line, ", column ").concat(X.column, ": ").concat(X.message)));
                  }
                }).catch(function(ue) {
                  throw ue.message.match(/^maxContentLength size/) ? new Error("stellar.toml file exceeds allowed size of ".concat(w)) : ue;
                }));
              case 5:
              case "end":
                return Z.stop();
            }
          }, q);
        }), k = function() {
          var q = this, N = arguments;
          return new Promise(function(H, _) {
            var x = R.apply(q, N);
            function L(z) {
              a(x, H, _, L, j, "next", z);
            }
            function j(z) {
              a(x, H, _, L, j, "throw", z);
            }
            L(void 0);
          });
        }, function(q) {
          return k.apply(this, arguments);
        }) }], S && l(b.prototype, S), E && l(b, E), Object.defineProperty(b, "prototype", { writable: false }), b);
      }, 3919: (t, o, s) => {
        Object.defineProperty(o, "__esModule", { value: true }), o.humanizeEvents = function(l) {
          return l.map(function(d) {
            return d.inSuccessfulContractCall ? a(d.event()) : a(d);
          });
        };
        var c = s(7120), h = s(7177);
        function f(l) {
          return f = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(d) {
            return typeof d;
          } : function(d) {
            return d && typeof Symbol == "function" && d.constructor === Symbol && d !== Symbol.prototype ? "symbol" : typeof d;
          }, f(l);
        }
        function r(l, d) {
          var b = Object.keys(l);
          if (Object.getOwnPropertySymbols) {
            var S = Object.getOwnPropertySymbols(l);
            d && (S = S.filter(function(E) {
              return Object.getOwnPropertyDescriptor(l, E).enumerable;
            })), b.push.apply(b, S);
          }
          return b;
        }
        function m(l) {
          for (var d = 1; d < arguments.length; d++) {
            var b = arguments[d] != null ? arguments[d] : {};
            d % 2 ? r(Object(b), true).forEach(function(S) {
              g(l, S, b[S]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(l, Object.getOwnPropertyDescriptors(b)) : r(Object(b)).forEach(function(S) {
              Object.defineProperty(l, S, Object.getOwnPropertyDescriptor(b, S));
            });
          }
          return l;
        }
        function g(l, d, b) {
          return (d = function(S) {
            var E = function(R, k) {
              if (f(R) != "object" || !R) return R;
              var w = R[Symbol.toPrimitive];
              if (w !== void 0) {
                var F = w.call(R, k);
                if (f(F) != "object") return F;
                throw new TypeError("@@toPrimitive must return a primitive value.");
              }
              return (k === "string" ? String : Number)(R);
            }(S, "string");
            return f(E) == "symbol" ? E : E + "";
          }(d)) in l ? Object.defineProperty(l, d, { value: b, enumerable: true, configurable: true, writable: true }) : l[d] = b, l;
        }
        function a(l) {
          return m(m({}, typeof l.contractId == "function" && l.contractId() != null && { contractId: c.StrKey.encodeContract(l.contractId()) }), {}, { type: l.type().name, topics: l.body().value().topics().map(function(d) {
            return (0, h.scValToNative)(d);
          }), data: (0, h.scValToNative)(l.body().value().data()) });
        }
      }, 4035: (t, o, s) => {
        var c, h = s(6556), f = s(9092)(), r = s(9957), m = s(5795);
        if (f) {
          var g = h("RegExp.prototype.exec"), a = {}, l = function() {
            throw a;
          }, d = { toString: l, valueOf: l };
          typeof Symbol.toPrimitive == "symbol" && (d[Symbol.toPrimitive] = l), c = function(S) {
            if (!S || typeof S != "object") return false;
            var E = m(S, "lastIndex");
            if (!(E && r(E, "value"))) return false;
            try {
              g(S, d);
            } catch (R) {
              return R === a;
            }
          };
        } else {
          var b = h("Object.prototype.toString");
          c = function(S) {
            return !(!S || typeof S != "object" && typeof S != "function") && b(S) === "[object RegExp]";
          };
        }
        t.exports = c;
      }, 4039: (t, o, s) => {
        var c = typeof Symbol < "u" && Symbol, h = s(1333);
        t.exports = function() {
          return typeof c == "function" && typeof Symbol == "function" && typeof c("foo") == "symbol" && typeof Symbol("bar") == "symbol" && h();
        };
      }, 4062: (t, o) => {
        function s(m) {
          return s = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(g) {
            return typeof g;
          } : function(g) {
            return g && typeof Symbol == "function" && g.constructor === Symbol && g !== Symbol.prototype ? "symbol" : typeof g;
          }, s(m);
        }
        function c(m) {
          return function(g) {
            if (Array.isArray(g)) return g;
          }(m) || function(g) {
            if (typeof Symbol < "u" && g[Symbol.iterator] != null || g["@@iterator"] != null) return Array.from(g);
          }(m) || function(g, a) {
            if (g) {
              if (typeof g == "string") return h(g, a);
              var l = {}.toString.call(g).slice(8, -1);
              return l === "Object" && g.constructor && (l = g.constructor.name), l === "Map" || l === "Set" ? Array.from(g) : l === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(l) ? h(g, a) : void 0;
            }
          }(m) || function() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
          }();
        }
        function h(m, g) {
          (g == null || g > m.length) && (g = m.length);
          for (var a = 0, l = Array(g); a < g; a++) l[a] = m[a];
          return l;
        }
        function f(m, g) {
          for (var a = 0; a < g.length; a++) {
            var l = g[a];
            l.enumerable = l.enumerable || false, l.configurable = true, "value" in l && (l.writable = true), Object.defineProperty(m, r(l.key), l);
          }
        }
        function r(m) {
          var g = function(a, l) {
            if (s(a) != "object" || !a) return a;
            var d = a[Symbol.toPrimitive];
            if (d !== void 0) {
              var b = d.call(a, l);
              if (s(b) != "object") return b;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(a);
          }(m, "string");
          return s(g) == "symbol" ? g : g + "";
        }
        Object.defineProperty(o, "__esModule", { value: true }), o.Soroban = void 0, o.Soroban = function() {
          return m = function l() {
            (function(d, b) {
              if (!(d instanceof b)) throw new TypeError("Cannot call a class as a function");
            })(this, l);
          }, a = [{ key: "formatTokenAmount", value: function(l, d) {
            if (l.includes(".")) throw new TypeError("No decimals are allowed");
            var b = l;
            return d > 0 && (b = d > b.length ? ["0", b.toString().padStart(d, "0")].join(".") : [b.slice(0, -d), b.slice(-d)].join(".")), b.replace(/(\.\d*?)0+$/, "$1");
          } }, { key: "parseTokenAmount", value: function(l, d) {
            var b, S = c(l.split(".").slice()), E = S[0], R = S[1];
            if (S.slice(2).length) throw new Error("Invalid decimal value: ".concat(l));
            return BigInt(E + ((b = R == null ? void 0 : R.padEnd(d, "0")) !== null && b !== void 0 ? b : "0".repeat(d))).toString();
          } }], (g = null) && f(m.prototype, g), a && f(m, a), Object.defineProperty(m, "prototype", { writable: false }), m;
          var m, g, a;
        }();
      }, 4063: (t, o, s) => {
        function c(d) {
          return c = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(b) {
            return typeof b;
          } : function(b) {
            return b && typeof Symbol == "function" && b.constructor === Symbol && b !== Symbol.prototype ? "symbol" : typeof b;
          }, c(d);
        }
        Object.defineProperty(o, "__esModule", { value: true }), o.Int256 = void 0;
        var h = s(3740);
        function f(d, b) {
          for (var S = 0; S < b.length; S++) {
            var E = b[S];
            E.enumerable = E.enumerable || false, E.configurable = true, "value" in E && (E.writable = true), Object.defineProperty(d, r(E.key), E);
          }
        }
        function r(d) {
          var b = function(S, E) {
            if (c(S) != "object" || !S) return S;
            var R = S[Symbol.toPrimitive];
            if (R !== void 0) {
              var k = R.call(S, E);
              if (c(k) != "object") return k;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(S);
          }(d, "string");
          return c(b) == "symbol" ? b : b + "";
        }
        function m(d, b, S) {
          return b = a(b), function(E, R) {
            if (R && (c(R) == "object" || typeof R == "function")) return R;
            if (R !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(k) {
              if (k === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return k;
            }(E);
          }(d, g() ? Reflect.construct(b, S || [], a(d).constructor) : b.apply(d, S));
        }
        function g() {
          try {
            var d = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (g = function() {
            return !!d;
          })();
        }
        function a(d) {
          return a = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(b) {
            return b.__proto__ || Object.getPrototypeOf(b);
          }, a(d);
        }
        function l(d, b) {
          return l = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(S, E) {
            return S.__proto__ = E, S;
          }, l(d, b);
        }
        (o.Int256 = function(d) {
          function b() {
            (function(I, q) {
              if (!(I instanceof q)) throw new TypeError("Cannot call a class as a function");
            })(this, b);
            for (var k = arguments.length, w = new Array(k), F = 0; F < k; F++) w[F] = arguments[F];
            return m(this, b, [w]);
          }
          return function(k, w) {
            if (typeof w != "function" && w !== null) throw new TypeError("Super expression must either be null or a function");
            k.prototype = Object.create(w && w.prototype, { constructor: { value: k, writable: true, configurable: true } }), Object.defineProperty(k, "prototype", { writable: false }), w && l(k, w);
          }(b, d), S = b, (E = [{ key: "unsigned", get: function() {
            return false;
          } }, { key: "size", get: function() {
            return 256;
          } }]) && f(S.prototype, E), R && f(S, R), Object.defineProperty(S, "prototype", { writable: false }), S;
          var S, E, R;
        }(h.LargeInt)).defineIntBoundaries();
      }, 4076: (t, o, s) => {
        var c;
        s.d(o, { j: () => c }), function(h) {
          var f = function(m) {
            return m.SUCCESS = "SUCCESS", m.NOT_FOUND = "NOT_FOUND", m.FAILED = "FAILED", m;
          }({});
          function r(m) {
            return "transactionData" in m;
          }
          h.GetTransactionStatus = f, h.isSimulationError = function(m) {
            return "error" in m;
          }, h.isSimulationSuccess = r, h.isSimulationRestore = function(m) {
            return r(m) && "restorePreamble" in m && !!m.restorePreamble.transactionData;
          }, h.isSimulationRaw = function(m) {
            return !m._parsed;
          };
        }(c || (c = {}));
      }, 4107: (t, o, s) => {
        var c = s(6698), h = s(392), f = s(2861).Buffer, r = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298], m = new Array(64);
        function g() {
          this.init(), this._w = m, h.call(this, 64, 56);
        }
        function a(E, R, k) {
          return k ^ E & (R ^ k);
        }
        function l(E, R, k) {
          return E & R | k & (E | R);
        }
        function d(E) {
          return (E >>> 2 | E << 30) ^ (E >>> 13 | E << 19) ^ (E >>> 22 | E << 10);
        }
        function b(E) {
          return (E >>> 6 | E << 26) ^ (E >>> 11 | E << 21) ^ (E >>> 25 | E << 7);
        }
        function S(E) {
          return (E >>> 7 | E << 25) ^ (E >>> 18 | E << 14) ^ E >>> 3;
        }
        c(g, h), g.prototype.init = function() {
          return this._a = 1779033703, this._b = 3144134277, this._c = 1013904242, this._d = 2773480762, this._e = 1359893119, this._f = 2600822924, this._g = 528734635, this._h = 1541459225, this;
        }, g.prototype._update = function(E) {
          for (var R, k = this._w, w = 0 | this._a, F = 0 | this._b, I = 0 | this._c, q = 0 | this._d, N = 0 | this._e, H = 0 | this._f, _ = 0 | this._g, x = 0 | this._h, L = 0; L < 16; ++L) k[L] = E.readInt32BE(4 * L);
          for (; L < 64; ++L) k[L] = 0 | (((R = k[L - 2]) >>> 17 | R << 15) ^ (R >>> 19 | R << 13) ^ R >>> 10) + k[L - 7] + S(k[L - 15]) + k[L - 16];
          for (var j = 0; j < 64; ++j) {
            var z = x + b(N) + a(N, H, _) + r[j] + k[j] | 0, Z = d(w) + l(w, F, I) | 0;
            x = _, _ = H, H = N, N = q + z | 0, q = I, I = F, F = w, w = z + Z | 0;
          }
          this._a = w + this._a | 0, this._b = F + this._b | 0, this._c = I + this._c | 0, this._d = q + this._d | 0, this._e = N + this._e | 0, this._f = H + this._f | 0, this._g = _ + this._g | 0, this._h = x + this._h | 0;
        }, g.prototype._hash = function() {
          var E = f.allocUnsafe(32);
          return E.writeInt32BE(this._a, 0), E.writeInt32BE(this._b, 4), E.writeInt32BE(this._c, 8), E.writeInt32BE(this._d, 12), E.writeInt32BE(this._e, 16), E.writeInt32BE(this._f, 20), E.writeInt32BE(this._g, 24), E.writeInt32BE(this._h, 28), E;
        }, t.exports = g;
      }, 4151: (t, o, s) => {
        Object.defineProperty(o, "__esModule", { value: true }), o.best_r = function(m) {
          for (var g, a, l = new h.default(m), d = [[new h.default(0), new h.default(1)], [new h.default(1), new h.default(0)]], b = 2; !l.gt(r); ) {
            g = l.integerValue(h.default.ROUND_FLOOR), a = l.minus(g);
            var S = g.times(d[b - 1][0]).plus(d[b - 2][0]), E = g.times(d[b - 1][1]).plus(d[b - 2][1]);
            if (S.gt(r) || E.gt(r) || (d.push([S, E]), a.eq(0))) break;
            l = new h.default(1).div(a), b += 1;
          }
          var R = (F = d[d.length - 1], I = 2, function(q) {
            if (Array.isArray(q)) return q;
          }(F) || function(q, N) {
            var H = q == null ? null : typeof Symbol < "u" && q[Symbol.iterator] || q["@@iterator"];
            if (H != null) {
              var _, x, L, j, z = [], Z = true, ue = false;
              try {
                if (L = (H = H.call(q)).next, N === 0) {
                  if (Object(H) !== H) return;
                  Z = false;
                } else for (; !(Z = (_ = L.call(H)).done) && (z.push(_.value), z.length !== N); Z = true) ;
              } catch ($) {
                ue = true, x = $;
              } finally {
                try {
                  if (!Z && H.return != null && (j = H.return(), Object(j) !== j)) return;
                } finally {
                  if (ue) throw x;
                }
              }
              return z;
            }
          }(F, I) || function(q, N) {
            if (q) {
              if (typeof q == "string") return f(q, N);
              var H = {}.toString.call(q).slice(8, -1);
              return H === "Object" && q.constructor && (H = q.constructor.name), H === "Map" || H === "Set" ? Array.from(q) : H === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(H) ? f(q, N) : void 0;
            }
          }(F, I) || function() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
          }()), k = R[0], w = R[1], F, I;
          if (k.isZero() || w.isZero()) throw new Error("Couldn't find approximation");
          return [k.toNumber(), w.toNumber()];
        };
        var c, h = (c = s(1242)) && c.__esModule ? c : { default: c };
        function f(m, g) {
          (g == null || g > m.length) && (g = m.length);
          for (var a = 0, l = Array(g); a < g; a++) l[a] = m[a];
          return l;
        }
        var r = 2147483647;
      }, 4172: (t, o, s) => {
        var c = s(8287).Buffer;
        Object.defineProperty(o, "__esModule", { value: true }), o.MemoText = o.MemoReturn = o.MemoNone = o.MemoID = o.MemoHash = o.Memo = void 0;
        var h = s(3740), f = m(s(1242)), r = m(s(1918));
        function m(k) {
          return k && k.__esModule ? k : { default: k };
        }
        function g(k) {
          return g = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(w) {
            return typeof w;
          } : function(w) {
            return w && typeof Symbol == "function" && w.constructor === Symbol && w !== Symbol.prototype ? "symbol" : typeof w;
          }, g(k);
        }
        function a(k, w) {
          for (var F = 0; F < w.length; F++) {
            var I = w[F];
            I.enumerable = I.enumerable || false, I.configurable = true, "value" in I && (I.writable = true), Object.defineProperty(k, l(I.key), I);
          }
        }
        function l(k) {
          var w = function(F, I) {
            if (g(F) != "object" || !F) return F;
            var q = F[Symbol.toPrimitive];
            if (q !== void 0) {
              var N = q.call(F, I);
              if (g(N) != "object") return N;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(F);
          }(k, "string");
          return g(w) == "symbol" ? w : w + "";
        }
        var d = o.MemoNone = "none", b = o.MemoID = "id", S = o.MemoText = "text", E = o.MemoHash = "hash", R = o.MemoReturn = "return";
        o.Memo = function() {
          function k(q) {
            var N = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
            switch (function(H, _) {
              if (!(H instanceof _)) throw new TypeError("Cannot call a class as a function");
            }(this, k), this._type = q, this._value = N, this._type) {
              case d:
                break;
              case b:
                k._validateIdValue(N);
                break;
              case S:
                k._validateTextValue(N);
                break;
              case E:
              case R:
                k._validateHashValue(N), typeof N == "string" && (this._value = c.from(N, "hex"));
                break;
              default:
                throw new Error("Invalid memo type");
            }
          }
          return w = k, I = [{ key: "_validateIdValue", value: function(q) {
            var N, H = new Error("Expects a int64 as a string. Got ".concat(q));
            if (typeof q != "string") throw H;
            try {
              N = new f.default(q);
            } catch {
              throw H;
            }
            if (!N.isFinite() || N.isNaN()) throw H;
          } }, { key: "_validateTextValue", value: function(q) {
            if (!r.default.Memo.armTypeForArm("text").isValid(q)) throw new Error("Expects string, array or buffer, max 28 bytes");
          } }, { key: "_validateHashValue", value: function(q) {
            var N, H = new Error("Expects a 32 byte hash value or hex encoded string. Got ".concat(q));
            if (q == null) throw H;
            if (typeof q == "string") {
              if (!/^[0-9A-Fa-f]{64}$/g.test(q)) throw H;
              N = c.from(q, "hex");
            } else {
              if (!c.isBuffer(q)) throw H;
              N = c.from(q);
            }
            if (!N.length || N.length !== 32) throw H;
          } }, { key: "none", value: function() {
            return new k(d);
          } }, { key: "text", value: function(q) {
            return new k(S, q);
          } }, { key: "id", value: function(q) {
            return new k(b, q);
          } }, { key: "hash", value: function(q) {
            return new k(E, q);
          } }, { key: "return", value: function(q) {
            return new k(R, q);
          } }, { key: "fromXDRObject", value: function(q) {
            switch (q.arm()) {
              case "id":
                return k.id(q.value().toString());
              case "text":
                return k.text(q.value());
              case "hash":
                return k.hash(q.value());
              case "retHash":
                return k.return(q.value());
            }
            if (q.value() === void 0) return k.none();
            throw new Error("Unknown type");
          } }], (F = [{ key: "type", get: function() {
            return this._type;
          }, set: function(q) {
            throw new Error("Memo is immutable");
          } }, { key: "value", get: function() {
            switch (this._type) {
              case d:
                return null;
              case b:
              case S:
                return this._value;
              case E:
              case R:
                return c.from(this._value);
              default:
                throw new Error("Invalid memo type");
            }
          }, set: function(q) {
            throw new Error("Memo is immutable");
          } }, { key: "toXDRObject", value: function() {
            switch (this._type) {
              case d:
                return r.default.Memo.memoNone();
              case b:
                return r.default.Memo.memoId(h.UnsignedHyper.fromString(this._value));
              case S:
                return r.default.Memo.memoText(this._value);
              case E:
                return r.default.Memo.memoHash(this._value);
              case R:
                return r.default.Memo.memoReturn(this._value);
              default:
                return null;
            }
          } }]) && a(w.prototype, F), I && a(w, I), Object.defineProperty(w, "prototype", { writable: false }), w;
          var w, F, I;
        }();
      }, 4193: function(t, o, s) {
        var c, h, f;
        (function(r, m) {
          t.exports ? t.exports = m(s(9340), s(1430), s(4704)) : (h = [s(9340), s(1430), s(4704)], (f = typeof (c = m) == "function" ? c.apply(o, h) : c) === void 0 || (t.exports = f));
        })(0, function(r, m, g, a) {
          var l = a && a.URI;
          function d(B, Q) {
            var ne = arguments.length >= 1;
            if (!(this instanceof d)) return ne ? arguments.length >= 2 ? new d(B, Q) : new d(B) : new d();
            if (B === void 0) {
              if (ne) throw new TypeError("undefined is not a valid argument for URI");
              B = typeof location < "u" ? location.href + "" : "";
            }
            if (B === null && ne) throw new TypeError("null is not a valid argument for URI");
            return this.href(B), Q !== void 0 ? this.absoluteTo(Q) : this;
          }
          d.version = "1.19.11";
          var b = d.prototype, S = Object.prototype.hasOwnProperty;
          function E(B) {
            return B.replace(/([.*+?^=!:${}()|[\]\/\\])/g, "\\$1");
          }
          function R(B) {
            return B === void 0 ? "Undefined" : String(Object.prototype.toString.call(B)).slice(8, -1);
          }
          function k(B) {
            return R(B) === "Array";
          }
          function w(B, Q) {
            var ne, K, ie = {};
            if (R(Q) === "RegExp") ie = null;
            else if (k(Q)) for (ne = 0, K = Q.length; ne < K; ne++) ie[Q[ne]] = true;
            else ie[Q] = true;
            for (ne = 0, K = B.length; ne < K; ne++) (ie && ie[B[ne]] !== void 0 || !ie && Q.test(B[ne])) && (B.splice(ne, 1), K--, ne--);
            return B;
          }
          function F(B, Q) {
            var ne, K;
            if (k(Q)) {
              for (ne = 0, K = Q.length; ne < K; ne++) if (!F(B, Q[ne])) return false;
              return true;
            }
            var ie = R(Q);
            for (ne = 0, K = B.length; ne < K; ne++) if (ie === "RegExp") {
              if (typeof B[ne] == "string" && B[ne].match(Q)) return true;
            } else if (B[ne] === Q) return true;
            return false;
          }
          function I(B, Q) {
            if (!k(B) || !k(Q) || B.length !== Q.length) return false;
            B.sort(), Q.sort();
            for (var ne = 0, K = B.length; ne < K; ne++) if (B[ne] !== Q[ne]) return false;
            return true;
          }
          function q(B) {
            return B.replace(/^\/+|\/+$/g, "");
          }
          function N(B) {
            return escape(B);
          }
          function H(B) {
            return encodeURIComponent(B).replace(/[!'()*]/g, N).replace(/\*/g, "%2A");
          }
          d._parts = function() {
            return { protocol: null, username: null, password: null, hostname: null, urn: null, port: null, path: null, query: null, fragment: null, preventInvalidHostname: d.preventInvalidHostname, duplicateQueryParameters: d.duplicateQueryParameters, escapeQuerySpace: d.escapeQuerySpace };
          }, d.preventInvalidHostname = false, d.duplicateQueryParameters = false, d.escapeQuerySpace = true, d.protocol_expression = /^[a-z][a-z0-9.+-]*$/i, d.idn_expression = /[^a-z0-9\._-]/i, d.punycode_expression = /(xn--)/i, d.ip4_expression = /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/, d.ip6_expression = /^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$/, d.find_uri_expression = /\b((?:[a-z][\w-]+:(?:\/{1,3}|[a-z0-9%])|www\d{0,3}[.]|[a-z0-9.\-]+[.][a-z]{2,4}\/)(?:[^\s()<>]+|\(([^\s()<>]+|(\([^\s()<>]+\)))*\))+(?:\(([^\s()<>]+|(\([^\s()<>]+\)))*\)|[^\s`!()\[\]{};:'".,<>?\xab\xbb\u201c\u201d\u2018\u2019]))/gi, d.findUri = { start: /\b(?:([a-z][a-z0-9.+-]*:\/\/)|www\.)/gi, end: /[\s\r\n]|$/, trim: /[`!()\[\]{};:'".,<>?\xab\xbb\u201c\u201d\u201e\u2018\u2019]+$/, parens: /(\([^\)]*\)|\[[^\]]*\]|\{[^}]*\}|<[^>]*>)/g }, d.leading_whitespace_expression = /^[\x00-\x20\u00a0\u1680\u2000-\u200a\u2028\u2029\u202f\u205f\u3000\ufeff]+/, d.ascii_tab_whitespace = /[\u0009\u000A\u000D]+/g, d.defaultPorts = { http: "80", https: "443", ftp: "21", gopher: "70", ws: "80", wss: "443" }, d.hostProtocols = ["http", "https"], d.invalid_hostname_characters = /[^a-zA-Z0-9\.\-:_]/, d.domAttributes = { a: "href", blockquote: "cite", link: "href", base: "href", script: "src", form: "action", img: "src", area: "href", iframe: "src", embed: "src", source: "src", track: "src", input: "src", audio: "src", video: "src" }, d.getDomAttribute = function(B) {
            if (B && B.nodeName) {
              var Q = B.nodeName.toLowerCase();
              if (Q !== "input" || B.type === "image") return d.domAttributes[Q];
            }
          }, d.encode = H, d.decode = decodeURIComponent, d.iso8859 = function() {
            d.encode = escape, d.decode = unescape;
          }, d.unicode = function() {
            d.encode = H, d.decode = decodeURIComponent;
          }, d.characters = { pathname: { encode: { expression: /%(24|26|2B|2C|3B|3D|3A|40)/gi, map: { "%24": "$", "%26": "&", "%2B": "+", "%2C": ",", "%3B": ";", "%3D": "=", "%3A": ":", "%40": "@" } }, decode: { expression: /[\/\?#]/g, map: { "/": "%2F", "?": "%3F", "#": "%23" } } }, reserved: { encode: { expression: /%(21|23|24|26|27|28|29|2A|2B|2C|2F|3A|3B|3D|3F|40|5B|5D)/gi, map: { "%3A": ":", "%2F": "/", "%3F": "?", "%23": "#", "%5B": "[", "%5D": "]", "%40": "@", "%21": "!", "%24": "$", "%26": "&", "%27": "'", "%28": "(", "%29": ")", "%2A": "*", "%2B": "+", "%2C": ",", "%3B": ";", "%3D": "=" } } }, urnpath: { encode: { expression: /%(21|24|27|28|29|2A|2B|2C|3B|3D|40)/gi, map: { "%21": "!", "%24": "$", "%27": "'", "%28": "(", "%29": ")", "%2A": "*", "%2B": "+", "%2C": ",", "%3B": ";", "%3D": "=", "%40": "@" } }, decode: { expression: /[\/\?#:]/g, map: { "/": "%2F", "?": "%3F", "#": "%23", ":": "%3A" } } } }, d.encodeQuery = function(B, Q) {
            var ne = d.encode(B + "");
            return Q === void 0 && (Q = d.escapeQuerySpace), Q ? ne.replace(/%20/g, "+") : ne;
          }, d.decodeQuery = function(B, Q) {
            B += "", Q === void 0 && (Q = d.escapeQuerySpace);
            try {
              return d.decode(Q ? B.replace(/\+/g, "%20") : B);
            } catch {
              return B;
            }
          };
          var _, x = { encode: "encode", decode: "decode" }, L = function(B, Q) {
            return function(ne) {
              try {
                return d[Q](ne + "").replace(d.characters[B][Q].expression, function(K) {
                  return d.characters[B][Q].map[K];
                });
              } catch {
                return ne;
              }
            };
          };
          for (_ in x) d[_ + "PathSegment"] = L("pathname", x[_]), d[_ + "UrnPathSegment"] = L("urnpath", x[_]);
          var j = function(B, Q, ne) {
            return function(K) {
              var ie;
              ie = ne ? function(se) {
                return d[Q](d[ne](se));
              } : d[Q];
              for (var ce = (K + "").split(B), ye = 0, oe = ce.length; ye < oe; ye++) ce[ye] = ie(ce[ye]);
              return ce.join(B);
            };
          };
          function z(B) {
            return function(Q, ne) {
              return Q === void 0 ? this._parts[B] || "" : (this._parts[B] = Q || null, this.build(!ne), this);
            };
          }
          function Z(B, Q) {
            return function(ne, K) {
              return ne === void 0 ? this._parts[B] || "" : (ne !== null && (ne += "").charAt(0) === Q && (ne = ne.substring(1)), this._parts[B] = ne, this.build(!K), this);
            };
          }
          d.decodePath = j("/", "decodePathSegment"), d.decodeUrnPath = j(":", "decodeUrnPathSegment"), d.recodePath = j("/", "encodePathSegment", "decode"), d.recodeUrnPath = j(":", "encodeUrnPathSegment", "decode"), d.encodeReserved = L("reserved", "encode"), d.parse = function(B, Q) {
            var ne;
            return Q || (Q = { preventInvalidHostname: d.preventInvalidHostname }), (ne = (B = (B = B.replace(d.leading_whitespace_expression, "")).replace(d.ascii_tab_whitespace, "")).indexOf("#")) > -1 && (Q.fragment = B.substring(ne + 1) || null, B = B.substring(0, ne)), (ne = B.indexOf("?")) > -1 && (Q.query = B.substring(ne + 1) || null, B = B.substring(0, ne)), (B = (B = B.replace(/^(https?|ftp|wss?)?:+[/\\]*/i, "$1://")).replace(/^[/\\]{2,}/i, "//")).substring(0, 2) === "//" ? (Q.protocol = null, B = B.substring(2), B = d.parseAuthority(B, Q)) : (ne = B.indexOf(":")) > -1 && (Q.protocol = B.substring(0, ne) || null, Q.protocol && !Q.protocol.match(d.protocol_expression) ? Q.protocol = void 0 : B.substring(ne + 1, ne + 3).replace(/\\/g, "/") === "//" ? (B = B.substring(ne + 3), B = d.parseAuthority(B, Q)) : (B = B.substring(ne + 1), Q.urn = true)), Q.path = B, Q;
          }, d.parseHost = function(B, Q) {
            B || (B = "");
            var ne, K, ie = (B = B.replace(/\\/g, "/")).indexOf("/");
            if (ie === -1 && (ie = B.length), B.charAt(0) === "[") ne = B.indexOf("]"), Q.hostname = B.substring(1, ne) || null, Q.port = B.substring(ne + 2, ie) || null, Q.port === "/" && (Q.port = null);
            else {
              var ce = B.indexOf(":"), ye = B.indexOf("/"), oe = B.indexOf(":", ce + 1);
              oe !== -1 && (ye === -1 || oe < ye) ? (Q.hostname = B.substring(0, ie) || null, Q.port = null) : (K = B.substring(0, ie).split(":"), Q.hostname = K[0] || null, Q.port = K[1] || null);
            }
            return Q.hostname && B.substring(ie).charAt(0) !== "/" && (ie++, B = "/" + B), Q.preventInvalidHostname && d.ensureValidHostname(Q.hostname, Q.protocol), Q.port && d.ensureValidPort(Q.port), B.substring(ie) || "/";
          }, d.parseAuthority = function(B, Q) {
            return B = d.parseUserinfo(B, Q), d.parseHost(B, Q);
          }, d.parseUserinfo = function(B, Q) {
            var ne = B;
            B.indexOf("\\") !== -1 && (B = B.replace(/\\/g, "/"));
            var K, ie = B.indexOf("/"), ce = B.lastIndexOf("@", ie > -1 ? ie : B.length - 1);
            return ce > -1 && (ie === -1 || ce < ie) ? (K = B.substring(0, ce).split(":"), Q.username = K[0] ? d.decode(K[0]) : null, K.shift(), Q.password = K[0] ? d.decode(K.join(":")) : null, B = ne.substring(ce + 1)) : (Q.username = null, Q.password = null), B;
          }, d.parseQuery = function(B, Q) {
            if (!B) return {};
            if (!(B = B.replace(/&+/g, "&").replace(/^\?*&*|&+$/g, ""))) return {};
            for (var ne, K, ie, ce = {}, ye = B.split("&"), oe = ye.length, se = 0; se < oe; se++) ne = ye[se].split("="), K = d.decodeQuery(ne.shift(), Q), ie = ne.length ? d.decodeQuery(ne.join("="), Q) : null, K !== "__proto__" && (S.call(ce, K) ? (typeof ce[K] != "string" && ce[K] !== null || (ce[K] = [ce[K]]), ce[K].push(ie)) : ce[K] = ie);
            return ce;
          }, d.build = function(B) {
            var Q = "", ne = false;
            return B.protocol && (Q += B.protocol + ":"), B.urn || !Q && !B.hostname || (Q += "//", ne = true), Q += d.buildAuthority(B) || "", typeof B.path == "string" && (B.path.charAt(0) !== "/" && ne && (Q += "/"), Q += B.path), typeof B.query == "string" && B.query && (Q += "?" + B.query), typeof B.fragment == "string" && B.fragment && (Q += "#" + B.fragment), Q;
          }, d.buildHost = function(B) {
            var Q = "";
            return B.hostname ? (d.ip6_expression.test(B.hostname) ? Q += "[" + B.hostname + "]" : Q += B.hostname, B.port && (Q += ":" + B.port), Q) : "";
          }, d.buildAuthority = function(B) {
            return d.buildUserinfo(B) + d.buildHost(B);
          }, d.buildUserinfo = function(B) {
            var Q = "";
            return B.username && (Q += d.encode(B.username)), B.password && (Q += ":" + d.encode(B.password)), Q && (Q += "@"), Q;
          }, d.buildQuery = function(B, Q, ne) {
            var K, ie, ce, ye, oe = "";
            for (ie in B) if (ie !== "__proto__" && S.call(B, ie)) if (k(B[ie])) for (K = {}, ce = 0, ye = B[ie].length; ce < ye; ce++) B[ie][ce] !== void 0 && K[B[ie][ce] + ""] === void 0 && (oe += "&" + d.buildQueryParameter(ie, B[ie][ce], ne), Q !== true && (K[B[ie][ce] + ""] = true));
            else B[ie] !== void 0 && (oe += "&" + d.buildQueryParameter(ie, B[ie], ne));
            return oe.substring(1);
          }, d.buildQueryParameter = function(B, Q, ne) {
            return d.encodeQuery(B, ne) + (Q !== null ? "=" + d.encodeQuery(Q, ne) : "");
          }, d.addQuery = function(B, Q, ne) {
            if (typeof Q == "object") for (var K in Q) S.call(Q, K) && d.addQuery(B, K, Q[K]);
            else {
              if (typeof Q != "string") throw new TypeError("URI.addQuery() accepts an object, string as the name parameter");
              if (B[Q] === void 0) return void (B[Q] = ne);
              typeof B[Q] == "string" && (B[Q] = [B[Q]]), k(ne) || (ne = [ne]), B[Q] = (B[Q] || []).concat(ne);
            }
          }, d.setQuery = function(B, Q, ne) {
            if (typeof Q == "object") for (var K in Q) S.call(Q, K) && d.setQuery(B, K, Q[K]);
            else {
              if (typeof Q != "string") throw new TypeError("URI.setQuery() accepts an object, string as the name parameter");
              B[Q] = ne === void 0 ? null : ne;
            }
          }, d.removeQuery = function(B, Q, ne) {
            var K, ie, ce;
            if (k(Q)) for (K = 0, ie = Q.length; K < ie; K++) B[Q[K]] = void 0;
            else if (R(Q) === "RegExp") for (ce in B) Q.test(ce) && (B[ce] = void 0);
            else if (typeof Q == "object") for (ce in Q) S.call(Q, ce) && d.removeQuery(B, ce, Q[ce]);
            else {
              if (typeof Q != "string") throw new TypeError("URI.removeQuery() accepts an object, string, RegExp as the first parameter");
              ne !== void 0 ? R(ne) === "RegExp" ? !k(B[Q]) && ne.test(B[Q]) ? B[Q] = void 0 : B[Q] = w(B[Q], ne) : B[Q] !== String(ne) || k(ne) && ne.length !== 1 ? k(B[Q]) && (B[Q] = w(B[Q], ne)) : B[Q] = void 0 : B[Q] = void 0;
            }
          }, d.hasQuery = function(B, Q, ne, K) {
            switch (R(Q)) {
              case "String":
                break;
              case "RegExp":
                for (var ie in B) if (S.call(B, ie) && Q.test(ie) && (ne === void 0 || d.hasQuery(B, ie, ne))) return true;
                return false;
              case "Object":
                for (var ce in Q) if (S.call(Q, ce) && !d.hasQuery(B, ce, Q[ce])) return false;
                return true;
              default:
                throw new TypeError("URI.hasQuery() accepts a string, regular expression or object as the name parameter");
            }
            switch (R(ne)) {
              case "Undefined":
                return Q in B;
              case "Boolean":
                return ne === !!(k(B[Q]) ? B[Q].length : B[Q]);
              case "Function":
                return !!ne(B[Q], Q, B);
              case "Array":
                return !!k(B[Q]) && (K ? F : I)(B[Q], ne);
              case "RegExp":
                return k(B[Q]) ? !!K && F(B[Q], ne) : !!(B[Q] && B[Q].match(ne));
              case "Number":
                ne = String(ne);
              case "String":
                return k(B[Q]) ? !!K && F(B[Q], ne) : B[Q] === ne;
              default:
                throw new TypeError("URI.hasQuery() accepts undefined, boolean, string, number, RegExp, Function as the value parameter");
            }
          }, d.joinPaths = function() {
            for (var B = [], Q = [], ne = 0, K = 0; K < arguments.length; K++) {
              var ie = new d(arguments[K]);
              B.push(ie);
              for (var ce = ie.segment(), ye = 0; ye < ce.length; ye++) typeof ce[ye] == "string" && Q.push(ce[ye]), ce[ye] && ne++;
            }
            if (!Q.length || !ne) return new d("");
            var oe = new d("").segment(Q);
            return B[0].path() !== "" && B[0].path().slice(0, 1) !== "/" || oe.path("/" + oe.path()), oe.normalize();
          }, d.commonPath = function(B, Q) {
            var ne, K = Math.min(B.length, Q.length);
            for (ne = 0; ne < K; ne++) if (B.charAt(ne) !== Q.charAt(ne)) {
              ne--;
              break;
            }
            return ne < 1 ? B.charAt(0) === Q.charAt(0) && B.charAt(0) === "/" ? "/" : "" : (B.charAt(ne) === "/" && Q.charAt(ne) === "/" || (ne = B.substring(0, ne).lastIndexOf("/")), B.substring(0, ne + 1));
          }, d.withinString = function(B, Q, ne) {
            ne || (ne = {});
            var K = ne.start || d.findUri.start, ie = ne.end || d.findUri.end, ce = ne.trim || d.findUri.trim, ye = ne.parens || d.findUri.parens, oe = /[a-z0-9-]=["']?$/i;
            for (K.lastIndex = 0; ; ) {
              var se = K.exec(B);
              if (!se) break;
              var re = se.index;
              if (ne.ignoreHtml) {
                var ge = B.slice(Math.max(re - 3, 0), re);
                if (ge && oe.test(ge)) continue;
              }
              for (var Te = re + B.slice(re).search(ie), pe = B.slice(re, Te), Oe = -1; ; ) {
                var xe = ye.exec(pe);
                if (!xe) break;
                var Ve = xe.index + xe[0].length;
                Oe = Math.max(Oe, Ve);
              }
              if (!((pe = Oe > -1 ? pe.slice(0, Oe) + pe.slice(Oe).replace(ce, "") : pe.replace(ce, "")).length <= se[0].length || ne.ignore && ne.ignore.test(pe))) {
                var _e = Q(pe, re, Te = re + pe.length, B);
                _e !== void 0 ? (_e = String(_e), B = B.slice(0, re) + _e + B.slice(Te), K.lastIndex = re + _e.length) : K.lastIndex = Te;
              }
            }
            return K.lastIndex = 0, B;
          }, d.ensureValidHostname = function(B, Q) {
            var ne = !!B, K = false;
            if (Q && (K = F(d.hostProtocols, Q)), K && !ne) throw new TypeError("Hostname cannot be empty, if protocol is " + Q);
            if (B && B.match(d.invalid_hostname_characters)) {
              if (!r) throw new TypeError('Hostname "' + B + '" contains characters other than [A-Z0-9.-:_] and Punycode.js is not available');
              if (r.toASCII(B).match(d.invalid_hostname_characters)) throw new TypeError('Hostname "' + B + '" contains characters other than [A-Z0-9.-:_]');
            }
          }, d.ensureValidPort = function(B) {
            if (B) {
              var Q = Number(B);
              if (!(/^[0-9]+$/.test(Q) && Q > 0 && Q < 65536)) throw new TypeError('Port "' + B + '" is not a valid port');
            }
          }, d.noConflict = function(B) {
            if (B) {
              var Q = { URI: this.noConflict() };
              return a.URITemplate && typeof a.URITemplate.noConflict == "function" && (Q.URITemplate = a.URITemplate.noConflict()), a.IPv6 && typeof a.IPv6.noConflict == "function" && (Q.IPv6 = a.IPv6.noConflict()), a.SecondLevelDomains && typeof a.SecondLevelDomains.noConflict == "function" && (Q.SecondLevelDomains = a.SecondLevelDomains.noConflict()), Q;
            }
            return a.URI === this && (a.URI = l), this;
          }, b.build = function(B) {
            return B === true ? this._deferred_build = true : (B === void 0 || this._deferred_build) && (this._string = d.build(this._parts), this._deferred_build = false), this;
          }, b.clone = function() {
            return new d(this);
          }, b.valueOf = b.toString = function() {
            return this.build(false)._string;
          }, b.protocol = z("protocol"), b.username = z("username"), b.password = z("password"), b.hostname = z("hostname"), b.port = z("port"), b.query = Z("query", "?"), b.fragment = Z("fragment", "#"), b.search = function(B, Q) {
            var ne = this.query(B, Q);
            return typeof ne == "string" && ne.length ? "?" + ne : ne;
          }, b.hash = function(B, Q) {
            var ne = this.fragment(B, Q);
            return typeof ne == "string" && ne.length ? "#" + ne : ne;
          }, b.pathname = function(B, Q) {
            if (B === void 0 || B === true) {
              var ne = this._parts.path || (this._parts.hostname ? "/" : "");
              return B ? (this._parts.urn ? d.decodeUrnPath : d.decodePath)(ne) : ne;
            }
            return this._parts.urn ? this._parts.path = B ? d.recodeUrnPath(B) : "" : this._parts.path = B ? d.recodePath(B) : "/", this.build(!Q), this;
          }, b.path = b.pathname, b.href = function(B, Q) {
            var ne;
            if (B === void 0) return this.toString();
            this._string = "", this._parts = d._parts();
            var K = B instanceof d, ie = typeof B == "object" && (B.hostname || B.path || B.pathname);
            if (B.nodeName && (B = B[d.getDomAttribute(B)] || "", ie = false), !K && ie && B.pathname !== void 0 && (B = B.toString()), typeof B == "string" || B instanceof String) this._parts = d.parse(String(B), this._parts);
            else {
              if (!K && !ie) throw new TypeError("invalid input");
              var ce = K ? B._parts : B;
              for (ne in ce) ne !== "query" && S.call(this._parts, ne) && (this._parts[ne] = ce[ne]);
              ce.query && this.query(ce.query, false);
            }
            return this.build(!Q), this;
          }, b.is = function(B) {
            var Q = false, ne = false, K = false, ie = false, ce = false, ye = false, oe = false, se = !this._parts.urn;
            switch (this._parts.hostname && (se = false, ne = d.ip4_expression.test(this._parts.hostname), K = d.ip6_expression.test(this._parts.hostname), ce = (ie = !(Q = ne || K)) && g && g.has(this._parts.hostname), ye = ie && d.idn_expression.test(this._parts.hostname), oe = ie && d.punycode_expression.test(this._parts.hostname)), B.toLowerCase()) {
              case "relative":
                return se;
              case "absolute":
                return !se;
              case "domain":
              case "name":
                return ie;
              case "sld":
                return ce;
              case "ip":
                return Q;
              case "ip4":
              case "ipv4":
              case "inet4":
                return ne;
              case "ip6":
              case "ipv6":
              case "inet6":
                return K;
              case "idn":
                return ye;
              case "url":
                return !this._parts.urn;
              case "urn":
                return !!this._parts.urn;
              case "punycode":
                return oe;
            }
            return null;
          };
          var ue = b.protocol, $ = b.port, X = b.hostname;
          b.protocol = function(B, Q) {
            if (B && !(B = B.replace(/:(\/\/)?$/, "")).match(d.protocol_expression)) throw new TypeError('Protocol "' + B + `" contains characters other than [A-Z0-9.+-] or doesn't start with [A-Z]`);
            return ue.call(this, B, Q);
          }, b.scheme = b.protocol, b.port = function(B, Q) {
            return this._parts.urn ? B === void 0 ? "" : this : (B !== void 0 && (B === 0 && (B = null), B && ((B += "").charAt(0) === ":" && (B = B.substring(1)), d.ensureValidPort(B))), $.call(this, B, Q));
          }, b.hostname = function(B, Q) {
            if (this._parts.urn) return B === void 0 ? "" : this;
            if (B !== void 0) {
              var ne = { preventInvalidHostname: this._parts.preventInvalidHostname };
              if (d.parseHost(B, ne) !== "/") throw new TypeError('Hostname "' + B + '" contains characters other than [A-Z0-9.-]');
              B = ne.hostname, this._parts.preventInvalidHostname && d.ensureValidHostname(B, this._parts.protocol);
            }
            return X.call(this, B, Q);
          }, b.origin = function(B, Q) {
            if (this._parts.urn) return B === void 0 ? "" : this;
            if (B === void 0) {
              var ne = this.protocol();
              return this.authority() ? (ne ? ne + "://" : "") + this.authority() : "";
            }
            var K = d(B);
            return this.protocol(K.protocol()).authority(K.authority()).build(!Q), this;
          }, b.host = function(B, Q) {
            if (this._parts.urn) return B === void 0 ? "" : this;
            if (B === void 0) return this._parts.hostname ? d.buildHost(this._parts) : "";
            if (d.parseHost(B, this._parts) !== "/") throw new TypeError('Hostname "' + B + '" contains characters other than [A-Z0-9.-]');
            return this.build(!Q), this;
          }, b.authority = function(B, Q) {
            if (this._parts.urn) return B === void 0 ? "" : this;
            if (B === void 0) return this._parts.hostname ? d.buildAuthority(this._parts) : "";
            if (d.parseAuthority(B, this._parts) !== "/") throw new TypeError('Hostname "' + B + '" contains characters other than [A-Z0-9.-]');
            return this.build(!Q), this;
          }, b.userinfo = function(B, Q) {
            if (this._parts.urn) return B === void 0 ? "" : this;
            if (B === void 0) {
              var ne = d.buildUserinfo(this._parts);
              return ne && ne.substring(0, ne.length - 1);
            }
            return B[B.length - 1] !== "@" && (B += "@"), d.parseUserinfo(B, this._parts), this.build(!Q), this;
          }, b.resource = function(B, Q) {
            var ne;
            return B === void 0 ? this.path() + this.search() + this.hash() : (ne = d.parse(B), this._parts.path = ne.path, this._parts.query = ne.query, this._parts.fragment = ne.fragment, this.build(!Q), this);
          }, b.subdomain = function(B, Q) {
            if (this._parts.urn) return B === void 0 ? "" : this;
            if (B === void 0) {
              if (!this._parts.hostname || this.is("IP")) return "";
              var ne = this._parts.hostname.length - this.domain().length - 1;
              return this._parts.hostname.substring(0, ne) || "";
            }
            var K = this._parts.hostname.length - this.domain().length, ie = this._parts.hostname.substring(0, K), ce = new RegExp("^" + E(ie));
            if (B && B.charAt(B.length - 1) !== "." && (B += "."), B.indexOf(":") !== -1) throw new TypeError("Domains cannot contain colons");
            return B && d.ensureValidHostname(B, this._parts.protocol), this._parts.hostname = this._parts.hostname.replace(ce, B), this.build(!Q), this;
          }, b.domain = function(B, Q) {
            if (this._parts.urn) return B === void 0 ? "" : this;
            if (typeof B == "boolean" && (Q = B, B = void 0), B === void 0) {
              if (!this._parts.hostname || this.is("IP")) return "";
              var ne = this._parts.hostname.match(/\./g);
              if (ne && ne.length < 2) return this._parts.hostname;
              var K = this._parts.hostname.length - this.tld(Q).length - 1;
              return K = this._parts.hostname.lastIndexOf(".", K - 1) + 1, this._parts.hostname.substring(K) || "";
            }
            if (!B) throw new TypeError("cannot set domain empty");
            if (B.indexOf(":") !== -1) throw new TypeError("Domains cannot contain colons");
            if (d.ensureValidHostname(B, this._parts.protocol), !this._parts.hostname || this.is("IP")) this._parts.hostname = B;
            else {
              var ie = new RegExp(E(this.domain()) + "$");
              this._parts.hostname = this._parts.hostname.replace(ie, B);
            }
            return this.build(!Q), this;
          }, b.tld = function(B, Q) {
            if (this._parts.urn) return B === void 0 ? "" : this;
            if (typeof B == "boolean" && (Q = B, B = void 0), B === void 0) {
              if (!this._parts.hostname || this.is("IP")) return "";
              var ne = this._parts.hostname.lastIndexOf("."), K = this._parts.hostname.substring(ne + 1);
              return Q !== true && g && g.list[K.toLowerCase()] && g.get(this._parts.hostname) || K;
            }
            var ie;
            if (!B) throw new TypeError("cannot set TLD empty");
            if (B.match(/[^a-zA-Z0-9-]/)) {
              if (!g || !g.is(B)) throw new TypeError('TLD "' + B + '" contains characters other than [A-Z0-9]');
              ie = new RegExp(E(this.tld()) + "$"), this._parts.hostname = this._parts.hostname.replace(ie, B);
            } else {
              if (!this._parts.hostname || this.is("IP")) throw new ReferenceError("cannot set TLD on non-domain host");
              ie = new RegExp(E(this.tld()) + "$"), this._parts.hostname = this._parts.hostname.replace(ie, B);
            }
            return this.build(!Q), this;
          }, b.directory = function(B, Q) {
            if (this._parts.urn) return B === void 0 ? "" : this;
            if (B === void 0 || B === true) {
              if (!this._parts.path && !this._parts.hostname) return "";
              if (this._parts.path === "/") return "/";
              var ne = this._parts.path.length - this.filename().length - 1, K = this._parts.path.substring(0, ne) || (this._parts.hostname ? "/" : "");
              return B ? d.decodePath(K) : K;
            }
            var ie = this._parts.path.length - this.filename().length, ce = this._parts.path.substring(0, ie), ye = new RegExp("^" + E(ce));
            return this.is("relative") || (B || (B = "/"), B.charAt(0) !== "/" && (B = "/" + B)), B && B.charAt(B.length - 1) !== "/" && (B += "/"), B = d.recodePath(B), this._parts.path = this._parts.path.replace(ye, B), this.build(!Q), this;
          }, b.filename = function(B, Q) {
            if (this._parts.urn) return B === void 0 ? "" : this;
            if (typeof B != "string") {
              if (!this._parts.path || this._parts.path === "/") return "";
              var ne = this._parts.path.lastIndexOf("/"), K = this._parts.path.substring(ne + 1);
              return B ? d.decodePathSegment(K) : K;
            }
            var ie = false;
            B.charAt(0) === "/" && (B = B.substring(1)), B.match(/\.?\//) && (ie = true);
            var ce = new RegExp(E(this.filename()) + "$");
            return B = d.recodePath(B), this._parts.path = this._parts.path.replace(ce, B), ie ? this.normalizePath(Q) : this.build(!Q), this;
          }, b.suffix = function(B, Q) {
            if (this._parts.urn) return B === void 0 ? "" : this;
            if (B === void 0 || B === true) {
              if (!this._parts.path || this._parts.path === "/") return "";
              var ne, K, ie = this.filename(), ce = ie.lastIndexOf(".");
              return ce === -1 ? "" : (ne = ie.substring(ce + 1), K = /^[a-z0-9%]+$/i.test(ne) ? ne : "", B ? d.decodePathSegment(K) : K);
            }
            B.charAt(0) === "." && (B = B.substring(1));
            var ye, oe = this.suffix();
            if (oe) ye = B ? new RegExp(E(oe) + "$") : new RegExp(E("." + oe) + "$");
            else {
              if (!B) return this;
              this._parts.path += "." + d.recodePath(B);
            }
            return ye && (B = d.recodePath(B), this._parts.path = this._parts.path.replace(ye, B)), this.build(!Q), this;
          }, b.segment = function(B, Q, ne) {
            var K = this._parts.urn ? ":" : "/", ie = this.path(), ce = ie.substring(0, 1) === "/", ye = ie.split(K);
            if (B !== void 0 && typeof B != "number" && (ne = Q, Q = B, B = void 0), B !== void 0 && typeof B != "number") throw new Error('Bad segment "' + B + '", must be 0-based integer');
            if (ce && ye.shift(), B < 0 && (B = Math.max(ye.length + B, 0)), Q === void 0) return B === void 0 ? ye : ye[B];
            if (B === null || ye[B] === void 0) if (k(Q)) {
              ye = [];
              for (var oe = 0, se = Q.length; oe < se; oe++) (Q[oe].length || ye.length && ye[ye.length - 1].length) && (ye.length && !ye[ye.length - 1].length && ye.pop(), ye.push(q(Q[oe])));
            } else (Q || typeof Q == "string") && (Q = q(Q), ye[ye.length - 1] === "" ? ye[ye.length - 1] = Q : ye.push(Q));
            else Q ? ye[B] = q(Q) : ye.splice(B, 1);
            return ce && ye.unshift(""), this.path(ye.join(K), ne);
          }, b.segmentCoded = function(B, Q, ne) {
            var K, ie, ce;
            if (typeof B != "number" && (ne = Q, Q = B, B = void 0), Q === void 0) {
              if (k(K = this.segment(B, Q, ne))) for (ie = 0, ce = K.length; ie < ce; ie++) K[ie] = d.decode(K[ie]);
              else K = K !== void 0 ? d.decode(K) : void 0;
              return K;
            }
            if (k(Q)) for (ie = 0, ce = Q.length; ie < ce; ie++) Q[ie] = d.encode(Q[ie]);
            else Q = typeof Q == "string" || Q instanceof String ? d.encode(Q) : Q;
            return this.segment(B, Q, ne);
          };
          var J = b.query;
          return b.query = function(B, Q) {
            if (B === true) return d.parseQuery(this._parts.query, this._parts.escapeQuerySpace);
            if (typeof B == "function") {
              var ne = d.parseQuery(this._parts.query, this._parts.escapeQuerySpace), K = B.call(this, ne);
              return this._parts.query = d.buildQuery(K || ne, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace), this.build(!Q), this;
            }
            return B !== void 0 && typeof B != "string" ? (this._parts.query = d.buildQuery(B, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace), this.build(!Q), this) : J.call(this, B, Q);
          }, b.setQuery = function(B, Q, ne) {
            var K = d.parseQuery(this._parts.query, this._parts.escapeQuerySpace);
            if (typeof B == "string" || B instanceof String) K[B] = Q !== void 0 ? Q : null;
            else {
              if (typeof B != "object") throw new TypeError("URI.addQuery() accepts an object, string as the name parameter");
              for (var ie in B) S.call(B, ie) && (K[ie] = B[ie]);
            }
            return this._parts.query = d.buildQuery(K, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace), typeof B != "string" && (ne = Q), this.build(!ne), this;
          }, b.addQuery = function(B, Q, ne) {
            var K = d.parseQuery(this._parts.query, this._parts.escapeQuerySpace);
            return d.addQuery(K, B, Q === void 0 ? null : Q), this._parts.query = d.buildQuery(K, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace), typeof B != "string" && (ne = Q), this.build(!ne), this;
          }, b.removeQuery = function(B, Q, ne) {
            var K = d.parseQuery(this._parts.query, this._parts.escapeQuerySpace);
            return d.removeQuery(K, B, Q), this._parts.query = d.buildQuery(K, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace), typeof B != "string" && (ne = Q), this.build(!ne), this;
          }, b.hasQuery = function(B, Q, ne) {
            var K = d.parseQuery(this._parts.query, this._parts.escapeQuerySpace);
            return d.hasQuery(K, B, Q, ne);
          }, b.setSearch = b.setQuery, b.addSearch = b.addQuery, b.removeSearch = b.removeQuery, b.hasSearch = b.hasQuery, b.normalize = function() {
            return this._parts.urn ? this.normalizeProtocol(false).normalizePath(false).normalizeQuery(false).normalizeFragment(false).build() : this.normalizeProtocol(false).normalizeHostname(false).normalizePort(false).normalizePath(false).normalizeQuery(false).normalizeFragment(false).build();
          }, b.normalizeProtocol = function(B) {
            return typeof this._parts.protocol == "string" && (this._parts.protocol = this._parts.protocol.toLowerCase(), this.build(!B)), this;
          }, b.normalizeHostname = function(B) {
            return this._parts.hostname && (this.is("IDN") && r ? this._parts.hostname = r.toASCII(this._parts.hostname) : this.is("IPv6") && m && (this._parts.hostname = m.best(this._parts.hostname)), this._parts.hostname = this._parts.hostname.toLowerCase(), this.build(!B)), this;
          }, b.normalizePort = function(B) {
            return typeof this._parts.protocol == "string" && this._parts.port === d.defaultPorts[this._parts.protocol] && (this._parts.port = null, this.build(!B)), this;
          }, b.normalizePath = function(B) {
            var Q, ne = this._parts.path;
            if (!ne) return this;
            if (this._parts.urn) return this._parts.path = d.recodeUrnPath(this._parts.path), this.build(!B), this;
            if (this._parts.path === "/") return this;
            var K, ie, ce = "";
            for ((ne = d.recodePath(ne)).charAt(0) !== "/" && (Q = true, ne = "/" + ne), ne.slice(-3) !== "/.." && ne.slice(-2) !== "/." || (ne += "/"), ne = ne.replace(/(\/(\.\/)+)|(\/\.$)/g, "/").replace(/\/{2,}/g, "/"), Q && (ce = ne.substring(1).match(/^(\.\.\/)+/) || "") && (ce = ce[0]); (K = ne.search(/\/\.\.(\/|$)/)) !== -1; ) K !== 0 ? ((ie = ne.substring(0, K).lastIndexOf("/")) === -1 && (ie = K), ne = ne.substring(0, ie) + ne.substring(K + 3)) : ne = ne.substring(3);
            return Q && this.is("relative") && (ne = ce + ne.substring(1)), this._parts.path = ne, this.build(!B), this;
          }, b.normalizePathname = b.normalizePath, b.normalizeQuery = function(B) {
            return typeof this._parts.query == "string" && (this._parts.query.length ? this.query(d.parseQuery(this._parts.query, this._parts.escapeQuerySpace)) : this._parts.query = null, this.build(!B)), this;
          }, b.normalizeFragment = function(B) {
            return this._parts.fragment || (this._parts.fragment = null, this.build(!B)), this;
          }, b.normalizeSearch = b.normalizeQuery, b.normalizeHash = b.normalizeFragment, b.iso8859 = function() {
            var B = d.encode, Q = d.decode;
            d.encode = escape, d.decode = decodeURIComponent;
            try {
              this.normalize();
            } finally {
              d.encode = B, d.decode = Q;
            }
            return this;
          }, b.unicode = function() {
            var B = d.encode, Q = d.decode;
            d.encode = H, d.decode = unescape;
            try {
              this.normalize();
            } finally {
              d.encode = B, d.decode = Q;
            }
            return this;
          }, b.readable = function() {
            var B = this.clone();
            B.username("").password("").normalize();
            var Q = "";
            if (B._parts.protocol && (Q += B._parts.protocol + "://"), B._parts.hostname && (B.is("punycode") && r ? (Q += r.toUnicode(B._parts.hostname), B._parts.port && (Q += ":" + B._parts.port)) : Q += B.host()), B._parts.hostname && B._parts.path && B._parts.path.charAt(0) !== "/" && (Q += "/"), Q += B.path(true), B._parts.query) {
              for (var ne = "", K = 0, ie = B._parts.query.split("&"), ce = ie.length; K < ce; K++) {
                var ye = (ie[K] || "").split("=");
                ne += "&" + d.decodeQuery(ye[0], this._parts.escapeQuerySpace).replace(/&/g, "%26"), ye[1] !== void 0 && (ne += "=" + d.decodeQuery(ye[1], this._parts.escapeQuerySpace).replace(/&/g, "%26"));
              }
              Q += "?" + ne.substring(1);
            }
            return Q += d.decodeQuery(B.hash(), true);
          }, b.absoluteTo = function(B) {
            var Q, ne, K, ie = this.clone(), ce = ["protocol", "username", "password", "hostname", "port"];
            if (this._parts.urn) throw new Error("URNs do not have any generally defined hierarchical components");
            if (B instanceof d || (B = new d(B)), ie._parts.protocol || (ie._parts.protocol = B._parts.protocol, this._parts.hostname)) return ie;
            for (ne = 0; K = ce[ne]; ne++) ie._parts[K] = B._parts[K];
            return ie._parts.path ? (ie._parts.path.substring(-2) === ".." && (ie._parts.path += "/"), ie.path().charAt(0) !== "/" && (Q = (Q = B.directory()) || (B.path().indexOf("/") === 0 ? "/" : ""), ie._parts.path = (Q ? Q + "/" : "") + ie._parts.path, ie.normalizePath())) : (ie._parts.path = B._parts.path, ie._parts.query || (ie._parts.query = B._parts.query)), ie.build(), ie;
          }, b.relativeTo = function(B) {
            var Q, ne, K, ie, ce, ye = this.clone().normalize();
            if (ye._parts.urn) throw new Error("URNs do not have any generally defined hierarchical components");
            if (B = new d(B).normalize(), Q = ye._parts, ne = B._parts, ie = ye.path(), ce = B.path(), ie.charAt(0) !== "/") throw new Error("URI is already relative");
            if (ce.charAt(0) !== "/") throw new Error("Cannot calculate a URI relative to another relative URI");
            if (Q.protocol === ne.protocol && (Q.protocol = null), Q.username !== ne.username || Q.password !== ne.password || Q.protocol !== null || Q.username !== null || Q.password !== null || Q.hostname !== ne.hostname || Q.port !== ne.port) return ye.build();
            if (Q.hostname = null, Q.port = null, ie === ce) return Q.path = "", ye.build();
            if (!(K = d.commonPath(ie, ce))) return ye.build();
            var oe = ne.path.substring(K.length).replace(/[^\/]*$/, "").replace(/.*?\//g, "../");
            return Q.path = oe + Q.path.substring(K.length) || "./", ye.build();
          }, b.equals = function(B) {
            var Q, ne, K, ie, ce, ye = this.clone(), oe = new d(B), se = {};
            if (ye.normalize(), oe.normalize(), ye.toString() === oe.toString()) return true;
            if (K = ye.query(), ie = oe.query(), ye.query(""), oe.query(""), ye.toString() !== oe.toString() || K.length !== ie.length) return false;
            for (ce in Q = d.parseQuery(K, this._parts.escapeQuerySpace), ne = d.parseQuery(ie, this._parts.escapeQuerySpace), Q) if (S.call(Q, ce)) {
              if (k(Q[ce])) {
                if (!I(Q[ce], ne[ce])) return false;
              } else if (Q[ce] !== ne[ce]) return false;
              se[ce] = true;
            }
            for (ce in ne) if (S.call(ne, ce) && !se[ce]) return false;
            return true;
          }, b.preventInvalidHostname = function(B) {
            return this._parts.preventInvalidHostname = !!B, this;
          }, b.duplicateQueryParameters = function(B) {
            return this._parts.duplicateQueryParameters = !!B, this;
          }, b.escapeQuerySpace = function(B) {
            return this._parts.escapeQuerySpace = !!B, this;
          }, d;
        });
      }, 4295: (t, o, s) => {
        Object.defineProperty(o, "__esModule", { value: true }), o.accountMerge = function(r) {
          var m = {};
          try {
            m.body = h.default.OperationBody.accountMerge((0, f.decodeAddressToMuxedAccount)(r.destination));
          } catch {
            throw new Error("destination is invalid");
          }
          return this.setSourceAccount(m, r), new h.default.Operation(m);
        };
        var c, h = (c = s(1918)) && c.__esModule ? c : { default: c }, f = s(6160);
      }, 4356: (t, o, s) => {
        s.r(o), s.d(o, { AccountRequiresMemoError: () => c.Cu, BadRequestError: () => c.v7, BadResponseError: () => c.nS, Config: () => h.T, Federation: () => m, Friendbot: () => a, Horizon: () => l, NetworkError: () => c.Dr, NotFoundError: () => c.m_, StellarToml: () => r, Utils: () => f.A, WebAuth: () => g, contract: () => b, default: () => R, rpc: () => d });
        var c = s(5976), h = s(8732), f = s(3121), r = s(3898), m = s(7600), g = s(5479), a = s(8242), l = s(8733), d = s(3496), b = s(6299), S = s(356), E = {};
        for (const k in S) ["default", "Config", "Utils", "StellarToml", "Federation", "WebAuth", "Friendbot", "Horizon", "rpc", "contract", "AccountRequiresMemoError", "BadRequestError", "BadResponseError", "NetworkError", "NotFoundError"].indexOf(k) < 0 && (E[k] = () => S[k]);
        s.d(o, E);
        const R = (t = s.hmd(t)).exports;
        s.g.__USE_AXIOS__ === void 0 && (s.g.__USE_AXIOS__ = true), s.g.__USE_EVENTSOURCE__ === void 0 && (s.g.__USE_EVENTSOURCE__ = false);
      }, 4403: (t, o, s) => {
        var c = s(8287).Buffer;
        Object.defineProperty(o, "__esModule", { value: true }), o.createCustomContract = function(l) {
          var d, b = c.from(l.salt || r.Keypair.random().xdrPublicKey().value());
          if (!l.wasmHash || l.wasmHash.length !== 32) throw new TypeError("expected hash(contract WASM) in 'opts.wasmHash', got ".concat(l.wasmHash));
          if (b.length !== 32) throw new TypeError("expected 32-byte salt in 'opts.salt', got ".concat(l.wasmHash));
          return this.invokeHostFunction({ source: l.source, auth: l.auth, func: f.default.HostFunction.hostFunctionTypeCreateContractV2(new f.default.CreateContractArgsV2({ executable: f.default.ContractExecutable.contractExecutableWasm(c.from(l.wasmHash)), contractIdPreimage: f.default.ContractIdPreimage.contractIdPreimageFromAddress(new f.default.ContractIdPreimageFromAddress({ address: l.address.toScAddress(), salt: b })), constructorArgs: (d = l.constructorArgs) !== null && d !== void 0 ? d : [] })) });
        }, o.createStellarAssetContract = function(l) {
          var d = l.asset;
          if (typeof d == "string") {
            var b = d.split(":"), S = (w = 2, function(F) {
              if (Array.isArray(F)) return F;
            }(k = b) || function(F, I) {
              var q = F == null ? null : typeof Symbol < "u" && F[Symbol.iterator] || F["@@iterator"];
              if (q != null) {
                var N, H, _, x, L = [], j = true, z = false;
                try {
                  if (_ = (q = q.call(F)).next, I === 0) {
                    if (Object(q) !== q) return;
                    j = false;
                  } else for (; !(j = (N = _.call(q)).done) && (L.push(N.value), L.length !== I); j = true) ;
                } catch (Z) {
                  z = true, H = Z;
                } finally {
                  try {
                    if (!j && q.return != null && (x = q.return(), Object(x) !== x)) return;
                  } finally {
                    if (z) throw H;
                  }
                }
                return L;
              }
            }(k, w) || function(F, I) {
              if (F) {
                if (typeof F == "string") return a(F, I);
                var q = {}.toString.call(F).slice(8, -1);
                return q === "Object" && F.constructor && (q = F.constructor.name), q === "Map" || q === "Set" ? Array.from(F) : q === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(q) ? a(F, I) : void 0;
              }
            }(k, w) || function() {
              throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
            }()), E = S[0], R = S[1];
            d = new g.Asset(E, R);
          }
          var k, w;
          if (!(d instanceof g.Asset)) throw new TypeError("expected Asset in 'opts.asset', got ".concat(d));
          return this.invokeHostFunction({ source: l.source, auth: l.auth, func: f.default.HostFunction.hostFunctionTypeCreateContract(new f.default.CreateContractArgs({ executable: f.default.ContractExecutable.contractExecutableStellarAsset(), contractIdPreimage: f.default.ContractIdPreimage.contractIdPreimageFromAsset(d.toXDRObject()) })) });
        }, o.invokeContractFunction = function(l) {
          var d = new m.Address(l.contract);
          if (d._type !== "contract") throw new TypeError("expected contract strkey instance, got ".concat(d));
          return this.invokeHostFunction({ source: l.source, auth: l.auth, func: f.default.HostFunction.hostFunctionTypeInvokeContract(new f.default.InvokeContractArgs({ contractAddress: d.toScAddress(), functionName: l.function, args: l.args })) });
        }, o.invokeHostFunction = function(l) {
          if (!l.func) throw new TypeError("host function invocation ('func') required (got ".concat(JSON.stringify(l), ")"));
          var d = new f.default.InvokeHostFunctionOp({ hostFunction: l.func, auth: l.auth || [] }), b = { body: f.default.OperationBody.invokeHostFunction(d) };
          return this.setSourceAccount(b, l), new f.default.Operation(b);
        }, o.uploadContractWasm = function(l) {
          return this.invokeHostFunction({ source: l.source, auth: l.auth, func: f.default.HostFunction.hostFunctionTypeUploadContractWasm(c.from(l.wasm)) });
        };
        var h, f = (h = s(1918)) && h.__esModule ? h : { default: h }, r = s(6691), m = s(1180), g = s(1764);
        function a(l, d) {
          (d == null || d > l.length) && (d = l.length);
          for (var b = 0, S = Array(d); b < d; b++) S[b] = l[b];
          return S;
        }
      }, 4459: (t) => {
        t.exports = Number.isNaN || function(o) {
          return o != o;
        };
      }, 4610: (t, o, s) => {
        t.exports = l;
        var c = s(6048).F, h = c.ERR_METHOD_NOT_IMPLEMENTED, f = c.ERR_MULTIPLE_CALLBACK, r = c.ERR_TRANSFORM_ALREADY_TRANSFORMING, m = c.ERR_TRANSFORM_WITH_LENGTH_0, g = s(5382);
        function a(S, E) {
          var R = this._transformState;
          R.transforming = false;
          var k = R.writecb;
          if (k === null) return this.emit("error", new f());
          R.writechunk = null, R.writecb = null, E != null && this.push(E), k(S);
          var w = this._readableState;
          w.reading = false, (w.needReadable || w.length < w.highWaterMark) && this._read(w.highWaterMark);
        }
        function l(S) {
          if (!(this instanceof l)) return new l(S);
          g.call(this, S), this._transformState = { afterTransform: a.bind(this), needTransform: false, transforming: false, writecb: null, writechunk: null, writeencoding: null }, this._readableState.needReadable = true, this._readableState.sync = false, S && (typeof S.transform == "function" && (this._transform = S.transform), typeof S.flush == "function" && (this._flush = S.flush)), this.on("prefinish", d);
        }
        function d() {
          var S = this;
          typeof this._flush != "function" || this._readableState.destroyed ? b(this, null, null) : this._flush(function(E, R) {
            b(S, E, R);
          });
        }
        function b(S, E, R) {
          if (E) return S.emit("error", E);
          if (R != null && S.push(R), S._writableState.length) throw new m();
          if (S._transformState.transforming) throw new r();
          return S.push(null);
        }
        s(6698)(l, g), l.prototype.push = function(S, E) {
          return this._transformState.needTransform = false, g.prototype.push.call(this, S, E);
        }, l.prototype._transform = function(S, E, R) {
          R(new h("_transform()"));
        }, l.prototype._write = function(S, E, R) {
          var k = this._transformState;
          if (k.writecb = R, k.writechunk = S, k.writeencoding = E, !k.transforming) {
            var w = this._readableState;
            (k.needTransform || w.needReadable || w.length < w.highWaterMark) && this._read(w.highWaterMark);
          }
        }, l.prototype._read = function(S) {
          var E = this._transformState;
          E.writechunk === null || E.transforming ? E.needTransform = true : (E.transforming = true, this._transform(E.writechunk, E.writeencoding, E.afterTransform));
        }, l.prototype._destroy = function(S, E) {
          g.prototype._destroy.call(this, S, function(R) {
            E(R);
          });
        };
      }, 4643: (t, o, s) => {
        function c(h) {
          try {
            if (!s.g.localStorage) return false;
          } catch {
            return false;
          }
          var f = s.g.localStorage[h];
          return f != null && String(f).toLowerCase() === "true";
        }
        t.exports = function(h, f) {
          if (c("noDeprecation")) return h;
          var r = false;
          return function() {
            if (!r) {
              if (c("throwDeprecation")) throw new Error(f);
              c("traceDeprecation") ? console.trace(f) : console.warn(f), r = true;
            }
            return h.apply(this, arguments);
          };
        };
      }, 4704: function(t, o, s) {
        var c, h;
        (function(f, r) {
          t.exports ? t.exports = r() : (h = typeof (c = r) == "function" ? c.call(o, s, o, t) : c) === void 0 || (t.exports = h);
        })(0, function(f) {
          var r = f && f.SecondLevelDomains, m = { list: { ac: " com gov mil net org ", ae: " ac co gov mil name net org pro sch ", af: " com edu gov net org ", al: " com edu gov mil net org ", ao: " co ed gv it og pb ", ar: " com edu gob gov int mil net org tur ", at: " ac co gv or ", au: " asn com csiro edu gov id net org ", ba: " co com edu gov mil net org rs unbi unmo unsa untz unze ", bb: " biz co com edu gov info net org store tv ", bh: " biz cc com edu gov info net org ", bn: " com edu gov net org ", bo: " com edu gob gov int mil net org tv ", br: " adm adv agr am arq art ato b bio blog bmd cim cng cnt com coop ecn edu eng esp etc eti far flog fm fnd fot fst g12 ggf gov imb ind inf jor jus lel mat med mil mus net nom not ntr odo org ppg pro psc psi qsl rec slg srv tmp trd tur tv vet vlog wiki zlg ", bs: " com edu gov net org ", bz: " du et om ov rg ", ca: " ab bc mb nb nf nl ns nt nu on pe qc sk yk ", ck: " biz co edu gen gov info net org ", cn: " ac ah bj com cq edu fj gd gov gs gx gz ha hb he hi hl hn jl js jx ln mil net nm nx org qh sc sd sh sn sx tj tw xj xz yn zj ", co: " com edu gov mil net nom org ", cr: " ac c co ed fi go or sa ", cy: " ac biz com ekloges gov ltd name net org parliament press pro tm ", do: " art com edu gob gov mil net org sld web ", dz: " art asso com edu gov net org pol ", ec: " com edu fin gov info med mil net org pro ", eg: " com edu eun gov mil name net org sci ", er: " com edu gov ind mil net org rochest w ", es: " com edu gob nom org ", et: " biz com edu gov info name net org ", fj: " ac biz com info mil name net org pro ", fk: " ac co gov net nom org ", fr: " asso com f gouv nom prd presse tm ", gg: " co net org ", gh: " com edu gov mil org ", gn: " ac com gov net org ", gr: " com edu gov mil net org ", gt: " com edu gob ind mil net org ", gu: " com edu gov net org ", hk: " com edu gov idv net org ", hu: " 2000 agrar bolt casino city co erotica erotika film forum games hotel info ingatlan jogasz konyvelo lakas media news org priv reklam sex shop sport suli szex tm tozsde utazas video ", id: " ac co go mil net or sch web ", il: " ac co gov idf k12 muni net org ", in: " ac co edu ernet firm gen gov i ind mil net nic org res ", iq: " com edu gov i mil net org ", ir: " ac co dnssec gov i id net org sch ", it: " edu gov ", je: " co net org ", jo: " com edu gov mil name net org sch ", jp: " ac ad co ed go gr lg ne or ", ke: " ac co go info me mobi ne or sc ", kh: " com edu gov mil net org per ", ki: " biz com de edu gov info mob net org tel ", km: " asso com coop edu gouv k medecin mil nom notaires pharmaciens presse tm veterinaire ", kn: " edu gov net org ", kr: " ac busan chungbuk chungnam co daegu daejeon es gangwon go gwangju gyeongbuk gyeonggi gyeongnam hs incheon jeju jeonbuk jeonnam k kg mil ms ne or pe re sc seoul ulsan ", kw: " com edu gov net org ", ky: " com edu gov net org ", kz: " com edu gov mil net org ", lb: " com edu gov net org ", lk: " assn com edu gov grp hotel int ltd net ngo org sch soc web ", lr: " com edu gov net org ", lv: " asn com conf edu gov id mil net org ", ly: " com edu gov id med net org plc sch ", ma: " ac co gov m net org press ", mc: " asso tm ", me: " ac co edu gov its net org priv ", mg: " com edu gov mil nom org prd tm ", mk: " com edu gov inf name net org pro ", ml: " com edu gov net org presse ", mn: " edu gov org ", mo: " com edu gov net org ", mt: " com edu gov net org ", mv: " aero biz com coop edu gov info int mil museum name net org pro ", mw: " ac co com coop edu gov int museum net org ", mx: " com edu gob net org ", my: " com edu gov mil name net org sch ", nf: " arts com firm info net other per rec store web ", ng: " biz com edu gov mil mobi name net org sch ", ni: " ac co com edu gob mil net nom org ", np: " com edu gov mil net org ", nr: " biz com edu gov info net org ", om: " ac biz co com edu gov med mil museum net org pro sch ", pe: " com edu gob mil net nom org sld ", ph: " com edu gov i mil net ngo org ", pk: " biz com edu fam gob gok gon gop gos gov net org web ", pl: " art bialystok biz com edu gda gdansk gorzow gov info katowice krakow lodz lublin mil net ngo olsztyn org poznan pwr radom slupsk szczecin torun warszawa waw wroc wroclaw zgora ", pr: " ac biz com edu est gov info isla name net org pro prof ", ps: " com edu gov net org plo sec ", pw: " belau co ed go ne or ", ro: " arts com firm info nom nt org rec store tm www ", rs: " ac co edu gov in org ", sb: " com edu gov net org ", sc: " com edu gov net org ", sh: " co com edu gov net nom org ", sl: " com edu gov net org ", st: " co com consulado edu embaixada gov mil net org principe saotome store ", sv: " com edu gob org red ", sz: " ac co org ", tr: " av bbs bel biz com dr edu gen gov info k12 name net org pol tel tsk tv web ", tt: " aero biz cat co com coop edu gov info int jobs mil mobi museum name net org pro tel travel ", tw: " club com ebiz edu game gov idv mil net org ", mu: " ac co com gov net or org ", mz: " ac co edu gov org ", na: " co com ", nz: " ac co cri geek gen govt health iwi maori mil net org parliament school ", pa: " abo ac com edu gob ing med net nom org sld ", pt: " com edu gov int net nome org publ ", py: " com edu gov mil net org ", qa: " com edu gov mil net org ", re: " asso com nom ", ru: " ac adygeya altai amur arkhangelsk astrakhan bashkiria belgorod bir bryansk buryatia cbg chel chelyabinsk chita chukotka chuvashia com dagestan e-burg edu gov grozny int irkutsk ivanovo izhevsk jar joshkar-ola kalmykia kaluga kamchatka karelia kazan kchr kemerovo khabarovsk khakassia khv kirov koenig komi kostroma kranoyarsk kuban kurgan kursk lipetsk magadan mari mari-el marine mil mordovia mosreg msk murmansk nalchik net nnov nov novosibirsk nsk omsk orenburg org oryol penza perm pp pskov ptz rnd ryazan sakhalin samara saratov simbirsk smolensk spb stavropol stv surgut tambov tatarstan tom tomsk tsaritsyn tsk tula tuva tver tyumen udm udmurtia ulan-ude vladikavkaz vladimir vladivostok volgograd vologda voronezh vrn vyatka yakutia yamal yekaterinburg yuzhno-sakhalinsk ", rw: " ac co com edu gouv gov int mil net ", sa: " com edu gov med net org pub sch ", sd: " com edu gov info med net org tv ", se: " a ac b bd c d e f g h i k l m n o org p parti pp press r s t tm u w x y z ", sg: " com edu gov idn net org per ", sn: " art com edu gouv org perso univ ", sy: " com edu gov mil net news org ", th: " ac co go in mi net or ", tj: " ac biz co com edu go gov info int mil name net nic org test web ", tn: " agrinet com defense edunet ens fin gov ind info intl mincom nat net org perso rnrt rns rnu tourism ", tz: " ac co go ne or ", ua: " biz cherkassy chernigov chernovtsy ck cn co com crimea cv dn dnepropetrovsk donetsk dp edu gov if in ivano-frankivsk kh kharkov kherson khmelnitskiy kiev kirovograd km kr ks kv lg lugansk lutsk lviv me mk net nikolaev od odessa org pl poltava pp rovno rv sebastopol sumy te ternopil uzhgorod vinnica vn zaporizhzhe zhitomir zp zt ", ug: " ac co go ne or org sc ", uk: " ac bl british-library co cym gov govt icnet jet lea ltd me mil mod national-library-scotland nel net nhs nic nls org orgn parliament plc police sch scot soc ", us: " dni fed isa kids nsn ", uy: " com edu gub mil net org ", ve: " co com edu gob info mil net org web ", vi: " co com k12 net org ", vn: " ac biz com edu gov health info int name net org pro ", ye: " co com gov ltd me net org plc ", yu: " ac co edu gov org ", za: " ac agric alt bourse city co cybernet db edu gov grondar iaccess imt inca landesign law mil net ngo nis nom olivetti org pix school tm web ", zm: " ac co com edu gov net org sch ", com: "ar br cn de eu gb gr hu jpn kr no qc ru sa se uk us uy za ", net: "gb jp se uk ", org: "ae", de: "com " }, has: function(g) {
            var a = g.lastIndexOf(".");
            if (a <= 0 || a >= g.length - 1) return false;
            var l = g.lastIndexOf(".", a - 1);
            if (l <= 0 || l >= a - 1) return false;
            var d = m.list[g.slice(a + 1)];
            return !!d && d.indexOf(" " + g.slice(l + 1, a) + " ") >= 0;
          }, is: function(g) {
            var a = g.lastIndexOf(".");
            if (a <= 0 || a >= g.length - 1 || g.lastIndexOf(".", a - 1) >= 0) return false;
            var l = m.list[g.slice(a + 1)];
            return !!l && l.indexOf(" " + g.slice(0, a) + " ") >= 0;
          }, get: function(g) {
            var a = g.lastIndexOf(".");
            if (a <= 0 || a >= g.length - 1) return null;
            var l = g.lastIndexOf(".", a - 1);
            if (l <= 0 || l >= a - 1) return null;
            var d = m.list[g.slice(a + 1)];
            return d ? d.indexOf(" " + g.slice(l + 1, a) + " ") < 0 ? null : g.slice(l + 1) : null;
          }, noConflict: function() {
            return f.SecondLevelDomains === this && (f.SecondLevelDomains = r), this;
          } };
          return m;
        });
      }, 4737: (t, o, s) => {
        Object.defineProperty(o, "__esModule", { value: true }), o.liquidityPoolWithdraw = function() {
          var f = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, r = {};
          if (!f.liquidityPoolId) throw new TypeError("liquidityPoolId argument is required");
          if (r.liquidityPoolId = h.default.PoolId.fromXDR(f.liquidityPoolId, "hex"), !this.isValidAmount(f.amount)) throw new TypeError(this.constructAmountRequirementsError("amount"));
          if (r.amount = this._toXDRAmount(f.amount), !this.isValidAmount(f.minAmountA, true)) throw new TypeError(this.constructAmountRequirementsError("minAmountA"));
          if (r.minAmountA = this._toXDRAmount(f.minAmountA), !this.isValidAmount(f.minAmountB, true)) throw new TypeError(this.constructAmountRequirementsError("minAmountB"));
          r.minAmountB = this._toXDRAmount(f.minAmountB);
          var m = new h.default.LiquidityPoolWithdrawOp(r), g = { body: h.default.OperationBody.liquidityPoolWithdraw(m) };
          return this.setSourceAccount(g, f), new h.default.Operation(g);
        };
        var c, h = (c = s(1918)) && c.__esModule ? c : { default: c };
      }, 4765: (t) => {
        var o = String.prototype.replace, s = /%20/g, c = "RFC1738", h = "RFC3986";
        t.exports = { default: h, formatters: { RFC1738: function(f) {
          return o.call(f, s, "+");
        }, RFC3986: function(f) {
          return String(f);
        } }, RFC1738: c, RFC3986: h };
      }, 4803: (t, o, s) => {
        var c = s(8859), h = s(9675), f = function(r, m, g) {
          for (var a, l = r; (a = l.next) != null; l = a) if (a.key === m) return l.next = a.next, g || (a.next = r.next, r.next = a), a;
        };
        t.exports = function() {
          var r, m = { assert: function(g) {
            if (!m.has(g)) throw new h("Side channel does not contain " + c(g));
          }, delete: function(g) {
            var a = r && r.next, l = function(d, b) {
              if (d) return f(d, b, true);
            }(r, g);
            return l && a && a === l && (r = void 0), !!l;
          }, get: function(g) {
            return function(a, l) {
              if (a) {
                var d = f(a, l);
                return d && d.value;
              }
            }(r, g);
          }, has: function(g) {
            return function(a, l) {
              return !!a && !!f(a, l);
            }(r, g);
          }, set: function(g, a) {
            r || (r = { next: void 0 }), function(l, d, b) {
              var S = f(l, d);
              S ? S.value = b : l.next = { key: d, next: l.next, value: b };
            }(r, g, a);
          } };
          return m;
        };
      }, 4831: (t, o, s) => {
        Object.defineProperty(o, "__esModule", { value: true }), o.createClaimableBalance = function(r) {
          if (!(r.asset instanceof f.Asset)) throw new Error("must provide an asset for create claimable balance operation");
          if (!this.isValidAmount(r.amount)) throw new TypeError(this.constructAmountRequirementsError("amount"));
          if (!Array.isArray(r.claimants) || r.claimants.length === 0) throw new Error("must provide at least one claimant");
          var m = {};
          m.asset = r.asset.toXDRObject(), m.amount = this._toXDRAmount(r.amount), m.claimants = Object.values(r.claimants).map(function(l) {
            return l.toXDRObject();
          });
          var g = new h.default.CreateClaimableBalanceOp(m), a = {};
          return a.body = h.default.OperationBody.createClaimableBalance(g), this.setSourceAccount(a, r), new h.default.Operation(a);
        };
        var c, h = (c = s(1918)) && c.__esModule ? c : { default: c }, f = s(1764);
      }, 4842: (t, o, s) => {
        Object.defineProperty(o, "__esModule", { value: true }), o.SorobanDataBuilder = void 0;
        var c, h = (c = s(1918)) && c.__esModule ? c : { default: c };
        function f(g) {
          return f = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(a) {
            return typeof a;
          } : function(a) {
            return a && typeof Symbol == "function" && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a;
          }, f(g);
        }
        function r(g, a) {
          for (var l = 0; l < a.length; l++) {
            var d = a[l];
            d.enumerable = d.enumerable || false, d.configurable = true, "value" in d && (d.writable = true), Object.defineProperty(g, m(d.key), d);
          }
        }
        function m(g) {
          var a = function(l, d) {
            if (f(l) != "object" || !l) return l;
            var b = l[Symbol.toPrimitive];
            if (b !== void 0) {
              var S = b.call(l, d);
              if (f(S) != "object") return S;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return (d === "string" ? String : Number)(l);
          }(g, "string");
          return f(a) == "symbol" ? a : a + "";
        }
        o.SorobanDataBuilder = function() {
          return function(g, a, l) {
            return a && r(g.prototype, a), l && r(g, l), Object.defineProperty(g, "prototype", { writable: false }), g;
          }(function g(a) {
            var l;
            (function(d, b) {
              if (!(d instanceof b)) throw new TypeError("Cannot call a class as a function");
            })(this, g), function(d, b, S) {
              (b = m(b)) in d ? Object.defineProperty(d, b, { value: S, enumerable: true, configurable: true, writable: true }) : d[b] = S;
            }(this, "_data", void 0), l = a ? typeof a == "string" || ArrayBuffer.isView(a) ? g.fromXDR(a) : g.fromXDR(a.toXDR()) : new h.default.SorobanTransactionData({ resources: new h.default.SorobanResources({ footprint: new h.default.LedgerFootprint({ readOnly: [], readWrite: [] }), instructions: 0, readBytes: 0, writeBytes: 0 }), ext: new h.default.ExtensionPoint(0), resourceFee: new h.default.Int64(0) }), this._data = l;
          }, [{ key: "setResourceFee", value: function(g) {
            return this._data.resourceFee(new h.default.Int64(g)), this;
          } }, { key: "setResources", value: function(g, a, l) {
            return this._data.resources().instructions(g), this._data.resources().readBytes(a), this._data.resources().writeBytes(l), this;
          } }, { key: "appendFootprint", value: function(g, a) {
            return this.setFootprint(this.getReadOnly().concat(g), this.getReadWrite().concat(a));
          } }, { key: "setFootprint", value: function(g, a) {
            return g !== null && this.setReadOnly(g), a !== null && this.setReadWrite(a), this;
          } }, { key: "setReadOnly", value: function(g) {
            return this._data.resources().footprint().readOnly(g ?? []), this;
          } }, { key: "setReadWrite", value: function(g) {
            return this._data.resources().footprint().readWrite(g ?? []), this;
          } }, { key: "build", value: function() {
            return h.default.SorobanTransactionData.fromXDR(this._data.toXDR());
          } }, { key: "getReadOnly", value: function() {
            return this.getFootprint().readOnly();
          } }, { key: "getReadWrite", value: function() {
            return this.getFootprint().readWrite();
          } }, { key: "getFootprint", value: function() {
            return this._data.resources().footprint();
          } }], [{ key: "fromXDR", value: function(g) {
            return h.default.SorobanTransactionData.fromXDR(g, typeof g == "string" ? "base64" : "raw");
          } }]);
        }();
      }, 4940: (t, o, s) => {
        (function(c) {
          var h = function(je) {
            var Ge, at = new Float64Array(16);
            if (je) for (Ge = 0; Ge < je.length; Ge++) at[Ge] = je[Ge];
            return at;
          }, f = function() {
            throw new Error("no PRNG");
          }, r = new Uint8Array(16), m = new Uint8Array(32);
          m[0] = 9;
          var g = h(), a = h([1]), l = h([56129, 1]), d = h([30883, 4953, 19914, 30187, 55467, 16705, 2637, 112, 59544, 30585, 16505, 36039, 65139, 11119, 27886, 20995]), b = h([61785, 9906, 39828, 60374, 45398, 33411, 5274, 224, 53552, 61171, 33010, 6542, 64743, 22239, 55772, 9222]), S = h([54554, 36645, 11616, 51542, 42930, 38181, 51040, 26924, 56412, 64982, 57905, 49316, 21502, 52590, 14035, 8553]), E = h([26200, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214]), R = h([41136, 18958, 6951, 50414, 58488, 44335, 6150, 12099, 55207, 15867, 153, 11085, 57099, 20417, 9344, 11139]);
          function k(je, Ge, at, Ae) {
            je[Ge] = at >> 24 & 255, je[Ge + 1] = at >> 16 & 255, je[Ge + 2] = at >> 8 & 255, je[Ge + 3] = 255 & at, je[Ge + 4] = Ae >> 24 & 255, je[Ge + 5] = Ae >> 16 & 255, je[Ge + 6] = Ae >> 8 & 255, je[Ge + 7] = 255 & Ae;
          }
          function w(je, Ge, at, Ae, qe) {
            var Ft, Dt = 0;
            for (Ft = 0; Ft < qe; Ft++) Dt |= je[Ge + Ft] ^ at[Ae + Ft];
            return (1 & Dt - 1 >>> 8) - 1;
          }
          function F(je, Ge, at, Ae) {
            return w(je, Ge, at, Ae, 16);
          }
          function I(je, Ge, at, Ae) {
            return w(je, Ge, at, Ae, 32);
          }
          function q(je, Ge, at, Ae) {
            (function(qe, Ft, Dt, wr) {
              for (var Nt, yr = 255 & wr[0] | (255 & wr[1]) << 8 | (255 & wr[2]) << 16 | (255 & wr[3]) << 24, Ur = 255 & Dt[0] | (255 & Dt[1]) << 8 | (255 & Dt[2]) << 16 | (255 & Dt[3]) << 24, Pe = 255 & Dt[4] | (255 & Dt[5]) << 8 | (255 & Dt[6]) << 16 | (255 & Dt[7]) << 24, $e = 255 & Dt[8] | (255 & Dt[9]) << 8 | (255 & Dt[10]) << 16 | (255 & Dt[11]) << 24, le = 255 & Dt[12] | (255 & Dt[13]) << 8 | (255 & Dt[14]) << 16 | (255 & Dt[15]) << 24, te = 255 & wr[4] | (255 & wr[5]) << 8 | (255 & wr[6]) << 16 | (255 & wr[7]) << 24, Le = 255 & Ft[0] | (255 & Ft[1]) << 8 | (255 & Ft[2]) << 16 | (255 & Ft[3]) << 24, nt = 255 & Ft[4] | (255 & Ft[5]) << 8 | (255 & Ft[6]) << 16 | (255 & Ft[7]) << 24, ft = 255 & Ft[8] | (255 & Ft[9]) << 8 | (255 & Ft[10]) << 16 | (255 & Ft[11]) << 24, zt = 255 & Ft[12] | (255 & Ft[13]) << 8 | (255 & Ft[14]) << 16 | (255 & Ft[15]) << 24, st = 255 & wr[8] | (255 & wr[9]) << 8 | (255 & wr[10]) << 16 | (255 & wr[11]) << 24, ct = 255 & Dt[16] | (255 & Dt[17]) << 8 | (255 & Dt[18]) << 16 | (255 & Dt[19]) << 24, yt = 255 & Dt[20] | (255 & Dt[21]) << 8 | (255 & Dt[22]) << 16 | (255 & Dt[23]) << 24, Zt = 255 & Dt[24] | (255 & Dt[25]) << 8 | (255 & Dt[26]) << 16 | (255 & Dt[27]) << 24, Ct = 255 & Dt[28] | (255 & Dt[29]) << 8 | (255 & Dt[30]) << 16 | (255 & Dt[31]) << 24, Lt = 255 & wr[12] | (255 & wr[13]) << 8 | (255 & wr[14]) << 16 | (255 & wr[15]) << 24, Wt = yr, vr = Ur, ar = Pe, sr = $e, gr = le, Tr = te, Mr = Le, Nr = nt, Lr = ft, jr = zt, Hr = st, kr = ct, Xt = yt, Qt = Zt, br = Ct, we = Lt, me = 0; me < 20; me += 2) Wt ^= (Nt = (Xt ^= (Nt = (Lr ^= (Nt = (gr ^= (Nt = Wt + Xt | 0) << 7 | Nt >>> 25) + Wt | 0) << 9 | Nt >>> 23) + gr | 0) << 13 | Nt >>> 19) + Lr | 0) << 18 | Nt >>> 14, Tr ^= (Nt = (vr ^= (Nt = (Qt ^= (Nt = (jr ^= (Nt = Tr + vr | 0) << 7 | Nt >>> 25) + Tr | 0) << 9 | Nt >>> 23) + jr | 0) << 13 | Nt >>> 19) + Qt | 0) << 18 | Nt >>> 14, Hr ^= (Nt = (Mr ^= (Nt = (ar ^= (Nt = (br ^= (Nt = Hr + Mr | 0) << 7 | Nt >>> 25) + Hr | 0) << 9 | Nt >>> 23) + br | 0) << 13 | Nt >>> 19) + ar | 0) << 18 | Nt >>> 14, we ^= (Nt = (kr ^= (Nt = (Nr ^= (Nt = (sr ^= (Nt = we + kr | 0) << 7 | Nt >>> 25) + we | 0) << 9 | Nt >>> 23) + sr | 0) << 13 | Nt >>> 19) + Nr | 0) << 18 | Nt >>> 14, Wt ^= (Nt = (sr ^= (Nt = (ar ^= (Nt = (vr ^= (Nt = Wt + sr | 0) << 7 | Nt >>> 25) + Wt | 0) << 9 | Nt >>> 23) + vr | 0) << 13 | Nt >>> 19) + ar | 0) << 18 | Nt >>> 14, Tr ^= (Nt = (gr ^= (Nt = (Nr ^= (Nt = (Mr ^= (Nt = Tr + gr | 0) << 7 | Nt >>> 25) + Tr | 0) << 9 | Nt >>> 23) + Mr | 0) << 13 | Nt >>> 19) + Nr | 0) << 18 | Nt >>> 14, Hr ^= (Nt = (jr ^= (Nt = (Lr ^= (Nt = (kr ^= (Nt = Hr + jr | 0) << 7 | Nt >>> 25) + Hr | 0) << 9 | Nt >>> 23) + kr | 0) << 13 | Nt >>> 19) + Lr | 0) << 18 | Nt >>> 14, we ^= (Nt = (br ^= (Nt = (Qt ^= (Nt = (Xt ^= (Nt = we + br | 0) << 7 | Nt >>> 25) + we | 0) << 9 | Nt >>> 23) + Xt | 0) << 13 | Nt >>> 19) + Qt | 0) << 18 | Nt >>> 14;
              Wt = Wt + yr | 0, vr = vr + Ur | 0, ar = ar + Pe | 0, sr = sr + $e | 0, gr = gr + le | 0, Tr = Tr + te | 0, Mr = Mr + Le | 0, Nr = Nr + nt | 0, Lr = Lr + ft | 0, jr = jr + zt | 0, Hr = Hr + st | 0, kr = kr + ct | 0, Xt = Xt + yt | 0, Qt = Qt + Zt | 0, br = br + Ct | 0, we = we + Lt | 0, qe[0] = Wt >>> 0 & 255, qe[1] = Wt >>> 8 & 255, qe[2] = Wt >>> 16 & 255, qe[3] = Wt >>> 24 & 255, qe[4] = vr >>> 0 & 255, qe[5] = vr >>> 8 & 255, qe[6] = vr >>> 16 & 255, qe[7] = vr >>> 24 & 255, qe[8] = ar >>> 0 & 255, qe[9] = ar >>> 8 & 255, qe[10] = ar >>> 16 & 255, qe[11] = ar >>> 24 & 255, qe[12] = sr >>> 0 & 255, qe[13] = sr >>> 8 & 255, qe[14] = sr >>> 16 & 255, qe[15] = sr >>> 24 & 255, qe[16] = gr >>> 0 & 255, qe[17] = gr >>> 8 & 255, qe[18] = gr >>> 16 & 255, qe[19] = gr >>> 24 & 255, qe[20] = Tr >>> 0 & 255, qe[21] = Tr >>> 8 & 255, qe[22] = Tr >>> 16 & 255, qe[23] = Tr >>> 24 & 255, qe[24] = Mr >>> 0 & 255, qe[25] = Mr >>> 8 & 255, qe[26] = Mr >>> 16 & 255, qe[27] = Mr >>> 24 & 255, qe[28] = Nr >>> 0 & 255, qe[29] = Nr >>> 8 & 255, qe[30] = Nr >>> 16 & 255, qe[31] = Nr >>> 24 & 255, qe[32] = Lr >>> 0 & 255, qe[33] = Lr >>> 8 & 255, qe[34] = Lr >>> 16 & 255, qe[35] = Lr >>> 24 & 255, qe[36] = jr >>> 0 & 255, qe[37] = jr >>> 8 & 255, qe[38] = jr >>> 16 & 255, qe[39] = jr >>> 24 & 255, qe[40] = Hr >>> 0 & 255, qe[41] = Hr >>> 8 & 255, qe[42] = Hr >>> 16 & 255, qe[43] = Hr >>> 24 & 255, qe[44] = kr >>> 0 & 255, qe[45] = kr >>> 8 & 255, qe[46] = kr >>> 16 & 255, qe[47] = kr >>> 24 & 255, qe[48] = Xt >>> 0 & 255, qe[49] = Xt >>> 8 & 255, qe[50] = Xt >>> 16 & 255, qe[51] = Xt >>> 24 & 255, qe[52] = Qt >>> 0 & 255, qe[53] = Qt >>> 8 & 255, qe[54] = Qt >>> 16 & 255, qe[55] = Qt >>> 24 & 255, qe[56] = br >>> 0 & 255, qe[57] = br >>> 8 & 255, qe[58] = br >>> 16 & 255, qe[59] = br >>> 24 & 255, qe[60] = we >>> 0 & 255, qe[61] = we >>> 8 & 255, qe[62] = we >>> 16 & 255, qe[63] = we >>> 24 & 255;
            })(je, Ge, at, Ae);
          }
          function N(je, Ge, at, Ae) {
            (function(qe, Ft, Dt, wr) {
              for (var Nt, yr = 255 & wr[0] | (255 & wr[1]) << 8 | (255 & wr[2]) << 16 | (255 & wr[3]) << 24, Ur = 255 & Dt[0] | (255 & Dt[1]) << 8 | (255 & Dt[2]) << 16 | (255 & Dt[3]) << 24, Pe = 255 & Dt[4] | (255 & Dt[5]) << 8 | (255 & Dt[6]) << 16 | (255 & Dt[7]) << 24, $e = 255 & Dt[8] | (255 & Dt[9]) << 8 | (255 & Dt[10]) << 16 | (255 & Dt[11]) << 24, le = 255 & Dt[12] | (255 & Dt[13]) << 8 | (255 & Dt[14]) << 16 | (255 & Dt[15]) << 24, te = 255 & wr[4] | (255 & wr[5]) << 8 | (255 & wr[6]) << 16 | (255 & wr[7]) << 24, Le = 255 & Ft[0] | (255 & Ft[1]) << 8 | (255 & Ft[2]) << 16 | (255 & Ft[3]) << 24, nt = 255 & Ft[4] | (255 & Ft[5]) << 8 | (255 & Ft[6]) << 16 | (255 & Ft[7]) << 24, ft = 255 & Ft[8] | (255 & Ft[9]) << 8 | (255 & Ft[10]) << 16 | (255 & Ft[11]) << 24, zt = 255 & Ft[12] | (255 & Ft[13]) << 8 | (255 & Ft[14]) << 16 | (255 & Ft[15]) << 24, st = 255 & wr[8] | (255 & wr[9]) << 8 | (255 & wr[10]) << 16 | (255 & wr[11]) << 24, ct = 255 & Dt[16] | (255 & Dt[17]) << 8 | (255 & Dt[18]) << 16 | (255 & Dt[19]) << 24, yt = 255 & Dt[20] | (255 & Dt[21]) << 8 | (255 & Dt[22]) << 16 | (255 & Dt[23]) << 24, Zt = 255 & Dt[24] | (255 & Dt[25]) << 8 | (255 & Dt[26]) << 16 | (255 & Dt[27]) << 24, Ct = 255 & Dt[28] | (255 & Dt[29]) << 8 | (255 & Dt[30]) << 16 | (255 & Dt[31]) << 24, Lt = 255 & wr[12] | (255 & wr[13]) << 8 | (255 & wr[14]) << 16 | (255 & wr[15]) << 24, Wt = 0; Wt < 20; Wt += 2) yr ^= (Nt = (yt ^= (Nt = (ft ^= (Nt = (le ^= (Nt = yr + yt | 0) << 7 | Nt >>> 25) + yr | 0) << 9 | Nt >>> 23) + le | 0) << 13 | Nt >>> 19) + ft | 0) << 18 | Nt >>> 14, te ^= (Nt = (Ur ^= (Nt = (Zt ^= (Nt = (zt ^= (Nt = te + Ur | 0) << 7 | Nt >>> 25) + te | 0) << 9 | Nt >>> 23) + zt | 0) << 13 | Nt >>> 19) + Zt | 0) << 18 | Nt >>> 14, st ^= (Nt = (Le ^= (Nt = (Pe ^= (Nt = (Ct ^= (Nt = st + Le | 0) << 7 | Nt >>> 25) + st | 0) << 9 | Nt >>> 23) + Ct | 0) << 13 | Nt >>> 19) + Pe | 0) << 18 | Nt >>> 14, Lt ^= (Nt = (ct ^= (Nt = (nt ^= (Nt = ($e ^= (Nt = Lt + ct | 0) << 7 | Nt >>> 25) + Lt | 0) << 9 | Nt >>> 23) + $e | 0) << 13 | Nt >>> 19) + nt | 0) << 18 | Nt >>> 14, yr ^= (Nt = ($e ^= (Nt = (Pe ^= (Nt = (Ur ^= (Nt = yr + $e | 0) << 7 | Nt >>> 25) + yr | 0) << 9 | Nt >>> 23) + Ur | 0) << 13 | Nt >>> 19) + Pe | 0) << 18 | Nt >>> 14, te ^= (Nt = (le ^= (Nt = (nt ^= (Nt = (Le ^= (Nt = te + le | 0) << 7 | Nt >>> 25) + te | 0) << 9 | Nt >>> 23) + Le | 0) << 13 | Nt >>> 19) + nt | 0) << 18 | Nt >>> 14, st ^= (Nt = (zt ^= (Nt = (ft ^= (Nt = (ct ^= (Nt = st + zt | 0) << 7 | Nt >>> 25) + st | 0) << 9 | Nt >>> 23) + ct | 0) << 13 | Nt >>> 19) + ft | 0) << 18 | Nt >>> 14, Lt ^= (Nt = (Ct ^= (Nt = (Zt ^= (Nt = (yt ^= (Nt = Lt + Ct | 0) << 7 | Nt >>> 25) + Lt | 0) << 9 | Nt >>> 23) + yt | 0) << 13 | Nt >>> 19) + Zt | 0) << 18 | Nt >>> 14;
              qe[0] = yr >>> 0 & 255, qe[1] = yr >>> 8 & 255, qe[2] = yr >>> 16 & 255, qe[3] = yr >>> 24 & 255, qe[4] = te >>> 0 & 255, qe[5] = te >>> 8 & 255, qe[6] = te >>> 16 & 255, qe[7] = te >>> 24 & 255, qe[8] = st >>> 0 & 255, qe[9] = st >>> 8 & 255, qe[10] = st >>> 16 & 255, qe[11] = st >>> 24 & 255, qe[12] = Lt >>> 0 & 255, qe[13] = Lt >>> 8 & 255, qe[14] = Lt >>> 16 & 255, qe[15] = Lt >>> 24 & 255, qe[16] = Le >>> 0 & 255, qe[17] = Le >>> 8 & 255, qe[18] = Le >>> 16 & 255, qe[19] = Le >>> 24 & 255, qe[20] = nt >>> 0 & 255, qe[21] = nt >>> 8 & 255, qe[22] = nt >>> 16 & 255, qe[23] = nt >>> 24 & 255, qe[24] = ft >>> 0 & 255, qe[25] = ft >>> 8 & 255, qe[26] = ft >>> 16 & 255, qe[27] = ft >>> 24 & 255, qe[28] = zt >>> 0 & 255, qe[29] = zt >>> 8 & 255, qe[30] = zt >>> 16 & 255, qe[31] = zt >>> 24 & 255;
            })(je, Ge, at, Ae);
          }
          var H = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);
          function _(je, Ge, at, Ae, qe, Ft, Dt) {
            var wr, Nt, yr = new Uint8Array(16), Ur = new Uint8Array(64);
            for (Nt = 0; Nt < 16; Nt++) yr[Nt] = 0;
            for (Nt = 0; Nt < 8; Nt++) yr[Nt] = Ft[Nt];
            for (; qe >= 64; ) {
              for (q(Ur, yr, Dt, H), Nt = 0; Nt < 64; Nt++) je[Ge + Nt] = at[Ae + Nt] ^ Ur[Nt];
              for (wr = 1, Nt = 8; Nt < 16; Nt++) wr = wr + (255 & yr[Nt]) | 0, yr[Nt] = 255 & wr, wr >>>= 8;
              qe -= 64, Ge += 64, Ae += 64;
            }
            if (qe > 0) for (q(Ur, yr, Dt, H), Nt = 0; Nt < qe; Nt++) je[Ge + Nt] = at[Ae + Nt] ^ Ur[Nt];
            return 0;
          }
          function x(je, Ge, at, Ae, qe) {
            var Ft, Dt, wr = new Uint8Array(16), Nt = new Uint8Array(64);
            for (Dt = 0; Dt < 16; Dt++) wr[Dt] = 0;
            for (Dt = 0; Dt < 8; Dt++) wr[Dt] = Ae[Dt];
            for (; at >= 64; ) {
              for (q(Nt, wr, qe, H), Dt = 0; Dt < 64; Dt++) je[Ge + Dt] = Nt[Dt];
              for (Ft = 1, Dt = 8; Dt < 16; Dt++) Ft = Ft + (255 & wr[Dt]) | 0, wr[Dt] = 255 & Ft, Ft >>>= 8;
              at -= 64, Ge += 64;
            }
            if (at > 0) for (q(Nt, wr, qe, H), Dt = 0; Dt < at; Dt++) je[Ge + Dt] = Nt[Dt];
            return 0;
          }
          function L(je, Ge, at, Ae, qe) {
            var Ft = new Uint8Array(32);
            N(Ft, Ae, qe, H);
            for (var Dt = new Uint8Array(8), wr = 0; wr < 8; wr++) Dt[wr] = Ae[wr + 16];
            return x(je, Ge, at, Dt, Ft);
          }
          function j(je, Ge, at, Ae, qe, Ft, Dt) {
            var wr = new Uint8Array(32);
            N(wr, Ft, Dt, H);
            for (var Nt = new Uint8Array(8), yr = 0; yr < 8; yr++) Nt[yr] = Ft[yr + 16];
            return _(je, Ge, at, Ae, qe, Nt, wr);
          }
          var z = function(je) {
            var Ge, at, Ae, qe, Ft, Dt, wr, Nt;
            this.buffer = new Uint8Array(16), this.r = new Uint16Array(10), this.h = new Uint16Array(10), this.pad = new Uint16Array(8), this.leftover = 0, this.fin = 0, Ge = 255 & je[0] | (255 & je[1]) << 8, this.r[0] = 8191 & Ge, at = 255 & je[2] | (255 & je[3]) << 8, this.r[1] = 8191 & (Ge >>> 13 | at << 3), Ae = 255 & je[4] | (255 & je[5]) << 8, this.r[2] = 7939 & (at >>> 10 | Ae << 6), qe = 255 & je[6] | (255 & je[7]) << 8, this.r[3] = 8191 & (Ae >>> 7 | qe << 9), Ft = 255 & je[8] | (255 & je[9]) << 8, this.r[4] = 255 & (qe >>> 4 | Ft << 12), this.r[5] = Ft >>> 1 & 8190, Dt = 255 & je[10] | (255 & je[11]) << 8, this.r[6] = 8191 & (Ft >>> 14 | Dt << 2), wr = 255 & je[12] | (255 & je[13]) << 8, this.r[7] = 8065 & (Dt >>> 11 | wr << 5), Nt = 255 & je[14] | (255 & je[15]) << 8, this.r[8] = 8191 & (wr >>> 8 | Nt << 8), this.r[9] = Nt >>> 5 & 127, this.pad[0] = 255 & je[16] | (255 & je[17]) << 8, this.pad[1] = 255 & je[18] | (255 & je[19]) << 8, this.pad[2] = 255 & je[20] | (255 & je[21]) << 8, this.pad[3] = 255 & je[22] | (255 & je[23]) << 8, this.pad[4] = 255 & je[24] | (255 & je[25]) << 8, this.pad[5] = 255 & je[26] | (255 & je[27]) << 8, this.pad[6] = 255 & je[28] | (255 & je[29]) << 8, this.pad[7] = 255 & je[30] | (255 & je[31]) << 8;
          };
          function Z(je, Ge, at, Ae, qe, Ft) {
            var Dt = new z(Ft);
            return Dt.update(at, Ae, qe), Dt.finish(je, Ge), 0;
          }
          function ue(je, Ge, at, Ae, qe, Ft) {
            var Dt = new Uint8Array(16);
            return Z(Dt, 0, at, Ae, qe, Ft), F(je, Ge, Dt, 0);
          }
          function $(je, Ge, at, Ae, qe) {
            var Ft;
            if (at < 32) return -1;
            for (j(je, 0, Ge, 0, at, Ae, qe), Z(je, 16, je, 32, at - 32, je), Ft = 0; Ft < 16; Ft++) je[Ft] = 0;
            return 0;
          }
          function X(je, Ge, at, Ae, qe) {
            var Ft, Dt = new Uint8Array(32);
            if (at < 32 || (L(Dt, 0, 32, Ae, qe), ue(Ge, 16, Ge, 32, at - 32, Dt) !== 0)) return -1;
            for (j(je, 0, Ge, 0, at, Ae, qe), Ft = 0; Ft < 32; Ft++) je[Ft] = 0;
            return 0;
          }
          function J(je, Ge) {
            var at;
            for (at = 0; at < 16; at++) je[at] = 0 | Ge[at];
          }
          function B(je) {
            var Ge, at, Ae = 1;
            for (Ge = 0; Ge < 16; Ge++) at = je[Ge] + Ae + 65535, Ae = Math.floor(at / 65536), je[Ge] = at - 65536 * Ae;
            je[0] += Ae - 1 + 37 * (Ae - 1);
          }
          function Q(je, Ge, at) {
            for (var Ae, qe = ~(at - 1), Ft = 0; Ft < 16; Ft++) Ae = qe & (je[Ft] ^ Ge[Ft]), je[Ft] ^= Ae, Ge[Ft] ^= Ae;
          }
          function ne(je, Ge) {
            var at, Ae, qe, Ft = h(), Dt = h();
            for (at = 0; at < 16; at++) Dt[at] = Ge[at];
            for (B(Dt), B(Dt), B(Dt), Ae = 0; Ae < 2; Ae++) {
              for (Ft[0] = Dt[0] - 65517, at = 1; at < 15; at++) Ft[at] = Dt[at] - 65535 - (Ft[at - 1] >> 16 & 1), Ft[at - 1] &= 65535;
              Ft[15] = Dt[15] - 32767 - (Ft[14] >> 16 & 1), qe = Ft[15] >> 16 & 1, Ft[14] &= 65535, Q(Dt, Ft, 1 - qe);
            }
            for (at = 0; at < 16; at++) je[2 * at] = 255 & Dt[at], je[2 * at + 1] = Dt[at] >> 8;
          }
          function K(je, Ge) {
            var at = new Uint8Array(32), Ae = new Uint8Array(32);
            return ne(at, je), ne(Ae, Ge), I(at, 0, Ae, 0);
          }
          function ie(je) {
            var Ge = new Uint8Array(32);
            return ne(Ge, je), 1 & Ge[0];
          }
          function ce(je, Ge) {
            var at;
            for (at = 0; at < 16; at++) je[at] = Ge[2 * at] + (Ge[2 * at + 1] << 8);
            je[15] &= 32767;
          }
          function ye(je, Ge, at) {
            for (var Ae = 0; Ae < 16; Ae++) je[Ae] = Ge[Ae] + at[Ae];
          }
          function oe(je, Ge, at) {
            for (var Ae = 0; Ae < 16; Ae++) je[Ae] = Ge[Ae] - at[Ae];
          }
          function se(je, Ge, at) {
            var Ae, qe, Ft = 0, Dt = 0, wr = 0, Nt = 0, yr = 0, Ur = 0, Pe = 0, $e = 0, le = 0, te = 0, Le = 0, nt = 0, ft = 0, zt = 0, st = 0, ct = 0, yt = 0, Zt = 0, Ct = 0, Lt = 0, Wt = 0, vr = 0, ar = 0, sr = 0, gr = 0, Tr = 0, Mr = 0, Nr = 0, Lr = 0, jr = 0, Hr = 0, kr = at[0], Xt = at[1], Qt = at[2], br = at[3], we = at[4], me = at[5], ze = at[6], rt = at[7], Tt = at[8], Ot = at[9], It = at[10], We = at[11], mt = at[12], Gt = at[13], ir = at[14], dr = at[15];
            Ft += (Ae = Ge[0]) * kr, Dt += Ae * Xt, wr += Ae * Qt, Nt += Ae * br, yr += Ae * we, Ur += Ae * me, Pe += Ae * ze, $e += Ae * rt, le += Ae * Tt, te += Ae * Ot, Le += Ae * It, nt += Ae * We, ft += Ae * mt, zt += Ae * Gt, st += Ae * ir, ct += Ae * dr, Dt += (Ae = Ge[1]) * kr, wr += Ae * Xt, Nt += Ae * Qt, yr += Ae * br, Ur += Ae * we, Pe += Ae * me, $e += Ae * ze, le += Ae * rt, te += Ae * Tt, Le += Ae * Ot, nt += Ae * It, ft += Ae * We, zt += Ae * mt, st += Ae * Gt, ct += Ae * ir, yt += Ae * dr, wr += (Ae = Ge[2]) * kr, Nt += Ae * Xt, yr += Ae * Qt, Ur += Ae * br, Pe += Ae * we, $e += Ae * me, le += Ae * ze, te += Ae * rt, Le += Ae * Tt, nt += Ae * Ot, ft += Ae * It, zt += Ae * We, st += Ae * mt, ct += Ae * Gt, yt += Ae * ir, Zt += Ae * dr, Nt += (Ae = Ge[3]) * kr, yr += Ae * Xt, Ur += Ae * Qt, Pe += Ae * br, $e += Ae * we, le += Ae * me, te += Ae * ze, Le += Ae * rt, nt += Ae * Tt, ft += Ae * Ot, zt += Ae * It, st += Ae * We, ct += Ae * mt, yt += Ae * Gt, Zt += Ae * ir, Ct += Ae * dr, yr += (Ae = Ge[4]) * kr, Ur += Ae * Xt, Pe += Ae * Qt, $e += Ae * br, le += Ae * we, te += Ae * me, Le += Ae * ze, nt += Ae * rt, ft += Ae * Tt, zt += Ae * Ot, st += Ae * It, ct += Ae * We, yt += Ae * mt, Zt += Ae * Gt, Ct += Ae * ir, Lt += Ae * dr, Ur += (Ae = Ge[5]) * kr, Pe += Ae * Xt, $e += Ae * Qt, le += Ae * br, te += Ae * we, Le += Ae * me, nt += Ae * ze, ft += Ae * rt, zt += Ae * Tt, st += Ae * Ot, ct += Ae * It, yt += Ae * We, Zt += Ae * mt, Ct += Ae * Gt, Lt += Ae * ir, Wt += Ae * dr, Pe += (Ae = Ge[6]) * kr, $e += Ae * Xt, le += Ae * Qt, te += Ae * br, Le += Ae * we, nt += Ae * me, ft += Ae * ze, zt += Ae * rt, st += Ae * Tt, ct += Ae * Ot, yt += Ae * It, Zt += Ae * We, Ct += Ae * mt, Lt += Ae * Gt, Wt += Ae * ir, vr += Ae * dr, $e += (Ae = Ge[7]) * kr, le += Ae * Xt, te += Ae * Qt, Le += Ae * br, nt += Ae * we, ft += Ae * me, zt += Ae * ze, st += Ae * rt, ct += Ae * Tt, yt += Ae * Ot, Zt += Ae * It, Ct += Ae * We, Lt += Ae * mt, Wt += Ae * Gt, vr += Ae * ir, ar += Ae * dr, le += (Ae = Ge[8]) * kr, te += Ae * Xt, Le += Ae * Qt, nt += Ae * br, ft += Ae * we, zt += Ae * me, st += Ae * ze, ct += Ae * rt, yt += Ae * Tt, Zt += Ae * Ot, Ct += Ae * It, Lt += Ae * We, Wt += Ae * mt, vr += Ae * Gt, ar += Ae * ir, sr += Ae * dr, te += (Ae = Ge[9]) * kr, Le += Ae * Xt, nt += Ae * Qt, ft += Ae * br, zt += Ae * we, st += Ae * me, ct += Ae * ze, yt += Ae * rt, Zt += Ae * Tt, Ct += Ae * Ot, Lt += Ae * It, Wt += Ae * We, vr += Ae * mt, ar += Ae * Gt, sr += Ae * ir, gr += Ae * dr, Le += (Ae = Ge[10]) * kr, nt += Ae * Xt, ft += Ae * Qt, zt += Ae * br, st += Ae * we, ct += Ae * me, yt += Ae * ze, Zt += Ae * rt, Ct += Ae * Tt, Lt += Ae * Ot, Wt += Ae * It, vr += Ae * We, ar += Ae * mt, sr += Ae * Gt, gr += Ae * ir, Tr += Ae * dr, nt += (Ae = Ge[11]) * kr, ft += Ae * Xt, zt += Ae * Qt, st += Ae * br, ct += Ae * we, yt += Ae * me, Zt += Ae * ze, Ct += Ae * rt, Lt += Ae * Tt, Wt += Ae * Ot, vr += Ae * It, ar += Ae * We, sr += Ae * mt, gr += Ae * Gt, Tr += Ae * ir, Mr += Ae * dr, ft += (Ae = Ge[12]) * kr, zt += Ae * Xt, st += Ae * Qt, ct += Ae * br, yt += Ae * we, Zt += Ae * me, Ct += Ae * ze, Lt += Ae * rt, Wt += Ae * Tt, vr += Ae * Ot, ar += Ae * It, sr += Ae * We, gr += Ae * mt, Tr += Ae * Gt, Mr += Ae * ir, Nr += Ae * dr, zt += (Ae = Ge[13]) * kr, st += Ae * Xt, ct += Ae * Qt, yt += Ae * br, Zt += Ae * we, Ct += Ae * me, Lt += Ae * ze, Wt += Ae * rt, vr += Ae * Tt, ar += Ae * Ot, sr += Ae * It, gr += Ae * We, Tr += Ae * mt, Mr += Ae * Gt, Nr += Ae * ir, Lr += Ae * dr, st += (Ae = Ge[14]) * kr, ct += Ae * Xt, yt += Ae * Qt, Zt += Ae * br, Ct += Ae * we, Lt += Ae * me, Wt += Ae * ze, vr += Ae * rt, ar += Ae * Tt, sr += Ae * Ot, gr += Ae * It, Tr += Ae * We, Mr += Ae * mt, Nr += Ae * Gt, Lr += Ae * ir, jr += Ae * dr, ct += (Ae = Ge[15]) * kr, Dt += 38 * (Zt += Ae * Qt), wr += 38 * (Ct += Ae * br), Nt += 38 * (Lt += Ae * we), yr += 38 * (Wt += Ae * me), Ur += 38 * (vr += Ae * ze), Pe += 38 * (ar += Ae * rt), $e += 38 * (sr += Ae * Tt), le += 38 * (gr += Ae * Ot), te += 38 * (Tr += Ae * It), Le += 38 * (Mr += Ae * We), nt += 38 * (Nr += Ae * mt), ft += 38 * (Lr += Ae * Gt), zt += 38 * (jr += Ae * ir), st += 38 * (Hr += Ae * dr), Ft = (Ae = (Ft += 38 * (yt += Ae * Xt)) + (qe = 1) + 65535) - 65536 * (qe = Math.floor(Ae / 65536)), Dt = (Ae = Dt + qe + 65535) - 65536 * (qe = Math.floor(Ae / 65536)), wr = (Ae = wr + qe + 65535) - 65536 * (qe = Math.floor(Ae / 65536)), Nt = (Ae = Nt + qe + 65535) - 65536 * (qe = Math.floor(Ae / 65536)), yr = (Ae = yr + qe + 65535) - 65536 * (qe = Math.floor(Ae / 65536)), Ur = (Ae = Ur + qe + 65535) - 65536 * (qe = Math.floor(Ae / 65536)), Pe = (Ae = Pe + qe + 65535) - 65536 * (qe = Math.floor(Ae / 65536)), $e = (Ae = $e + qe + 65535) - 65536 * (qe = Math.floor(Ae / 65536)), le = (Ae = le + qe + 65535) - 65536 * (qe = Math.floor(Ae / 65536)), te = (Ae = te + qe + 65535) - 65536 * (qe = Math.floor(Ae / 65536)), Le = (Ae = Le + qe + 65535) - 65536 * (qe = Math.floor(Ae / 65536)), nt = (Ae = nt + qe + 65535) - 65536 * (qe = Math.floor(Ae / 65536)), ft = (Ae = ft + qe + 65535) - 65536 * (qe = Math.floor(Ae / 65536)), zt = (Ae = zt + qe + 65535) - 65536 * (qe = Math.floor(Ae / 65536)), st = (Ae = st + qe + 65535) - 65536 * (qe = Math.floor(Ae / 65536)), ct = (Ae = ct + qe + 65535) - 65536 * (qe = Math.floor(Ae / 65536)), Ft = (Ae = (Ft += qe - 1 + 37 * (qe - 1)) + (qe = 1) + 65535) - 65536 * (qe = Math.floor(Ae / 65536)), Dt = (Ae = Dt + qe + 65535) - 65536 * (qe = Math.floor(Ae / 65536)), wr = (Ae = wr + qe + 65535) - 65536 * (qe = Math.floor(Ae / 65536)), Nt = (Ae = Nt + qe + 65535) - 65536 * (qe = Math.floor(Ae / 65536)), yr = (Ae = yr + qe + 65535) - 65536 * (qe = Math.floor(Ae / 65536)), Ur = (Ae = Ur + qe + 65535) - 65536 * (qe = Math.floor(Ae / 65536)), Pe = (Ae = Pe + qe + 65535) - 65536 * (qe = Math.floor(Ae / 65536)), $e = (Ae = $e + qe + 65535) - 65536 * (qe = Math.floor(Ae / 65536)), le = (Ae = le + qe + 65535) - 65536 * (qe = Math.floor(Ae / 65536)), te = (Ae = te + qe + 65535) - 65536 * (qe = Math.floor(Ae / 65536)), Le = (Ae = Le + qe + 65535) - 65536 * (qe = Math.floor(Ae / 65536)), nt = (Ae = nt + qe + 65535) - 65536 * (qe = Math.floor(Ae / 65536)), ft = (Ae = ft + qe + 65535) - 65536 * (qe = Math.floor(Ae / 65536)), zt = (Ae = zt + qe + 65535) - 65536 * (qe = Math.floor(Ae / 65536)), st = (Ae = st + qe + 65535) - 65536 * (qe = Math.floor(Ae / 65536)), ct = (Ae = ct + qe + 65535) - 65536 * (qe = Math.floor(Ae / 65536)), Ft += qe - 1 + 37 * (qe - 1), je[0] = Ft, je[1] = Dt, je[2] = wr, je[3] = Nt, je[4] = yr, je[5] = Ur, je[6] = Pe, je[7] = $e, je[8] = le, je[9] = te, je[10] = Le, je[11] = nt, je[12] = ft, je[13] = zt, je[14] = st, je[15] = ct;
          }
          function re(je, Ge) {
            se(je, Ge, Ge);
          }
          function ge(je, Ge) {
            var at, Ae = h();
            for (at = 0; at < 16; at++) Ae[at] = Ge[at];
            for (at = 253; at >= 0; at--) re(Ae, Ae), at !== 2 && at !== 4 && se(Ae, Ae, Ge);
            for (at = 0; at < 16; at++) je[at] = Ae[at];
          }
          function Te(je, Ge) {
            var at, Ae = h();
            for (at = 0; at < 16; at++) Ae[at] = Ge[at];
            for (at = 250; at >= 0; at--) re(Ae, Ae), at !== 1 && se(Ae, Ae, Ge);
            for (at = 0; at < 16; at++) je[at] = Ae[at];
          }
          function pe(je, Ge, at) {
            var Ae, qe, Ft = new Uint8Array(32), Dt = new Float64Array(80), wr = h(), Nt = h(), yr = h(), Ur = h(), Pe = h(), $e = h();
            for (qe = 0; qe < 31; qe++) Ft[qe] = Ge[qe];
            for (Ft[31] = 127 & Ge[31] | 64, Ft[0] &= 248, ce(Dt, at), qe = 0; qe < 16; qe++) Nt[qe] = Dt[qe], Ur[qe] = wr[qe] = yr[qe] = 0;
            for (wr[0] = Ur[0] = 1, qe = 254; qe >= 0; --qe) Q(wr, Nt, Ae = Ft[qe >>> 3] >>> (7 & qe) & 1), Q(yr, Ur, Ae), ye(Pe, wr, yr), oe(wr, wr, yr), ye(yr, Nt, Ur), oe(Nt, Nt, Ur), re(Ur, Pe), re($e, wr), se(wr, yr, wr), se(yr, Nt, Pe), ye(Pe, wr, yr), oe(wr, wr, yr), re(Nt, wr), oe(yr, Ur, $e), se(wr, yr, l), ye(wr, wr, Ur), se(yr, yr, wr), se(wr, Ur, $e), se(Ur, Nt, Dt), re(Nt, Pe), Q(wr, Nt, Ae), Q(yr, Ur, Ae);
            for (qe = 0; qe < 16; qe++) Dt[qe + 16] = wr[qe], Dt[qe + 32] = yr[qe], Dt[qe + 48] = Nt[qe], Dt[qe + 64] = Ur[qe];
            var le = Dt.subarray(32), te = Dt.subarray(16);
            return ge(le, le), se(te, te, le), ne(je, te), 0;
          }
          function Oe(je, Ge) {
            return pe(je, Ge, m);
          }
          function xe(je, Ge) {
            return f(Ge, 32), Oe(je, Ge);
          }
          function Ve(je, Ge, at) {
            var Ae = new Uint8Array(32);
            return pe(Ae, at, Ge), N(je, r, Ae, H);
          }
          z.prototype.blocks = function(je, Ge, at) {
            for (var Ae, qe, Ft, Dt, wr, Nt, yr, Ur, Pe, $e, le, te, Le, nt, ft, zt, st, ct, yt, Zt = this.fin ? 0 : 2048, Ct = this.h[0], Lt = this.h[1], Wt = this.h[2], vr = this.h[3], ar = this.h[4], sr = this.h[5], gr = this.h[6], Tr = this.h[7], Mr = this.h[8], Nr = this.h[9], Lr = this.r[0], jr = this.r[1], Hr = this.r[2], kr = this.r[3], Xt = this.r[4], Qt = this.r[5], br = this.r[6], we = this.r[7], me = this.r[8], ze = this.r[9]; at >= 16; ) $e = Pe = 0, $e += (Ct += 8191 & (Ae = 255 & je[Ge + 0] | (255 & je[Ge + 1]) << 8)) * Lr, $e += (Lt += 8191 & (Ae >>> 13 | (qe = 255 & je[Ge + 2] | (255 & je[Ge + 3]) << 8) << 3)) * (5 * ze), $e += (Wt += 8191 & (qe >>> 10 | (Ft = 255 & je[Ge + 4] | (255 & je[Ge + 5]) << 8) << 6)) * (5 * me), $e += (vr += 8191 & (Ft >>> 7 | (Dt = 255 & je[Ge + 6] | (255 & je[Ge + 7]) << 8) << 9)) * (5 * we), Pe = ($e += (ar += 8191 & (Dt >>> 4 | (wr = 255 & je[Ge + 8] | (255 & je[Ge + 9]) << 8) << 12)) * (5 * br)) >>> 13, $e &= 8191, $e += (sr += wr >>> 1 & 8191) * (5 * Qt), $e += (gr += 8191 & (wr >>> 14 | (Nt = 255 & je[Ge + 10] | (255 & je[Ge + 11]) << 8) << 2)) * (5 * Xt), $e += (Tr += 8191 & (Nt >>> 11 | (yr = 255 & je[Ge + 12] | (255 & je[Ge + 13]) << 8) << 5)) * (5 * kr), $e += (Mr += 8191 & (yr >>> 8 | (Ur = 255 & je[Ge + 14] | (255 & je[Ge + 15]) << 8) << 8)) * (5 * Hr), le = Pe += ($e += (Nr += Ur >>> 5 | Zt) * (5 * jr)) >>> 13, le += Ct * jr, le += Lt * Lr, le += Wt * (5 * ze), le += vr * (5 * me), Pe = (le += ar * (5 * we)) >>> 13, le &= 8191, le += sr * (5 * br), le += gr * (5 * Qt), le += Tr * (5 * Xt), le += Mr * (5 * kr), Pe += (le += Nr * (5 * Hr)) >>> 13, le &= 8191, te = Pe, te += Ct * Hr, te += Lt * jr, te += Wt * Lr, te += vr * (5 * ze), Pe = (te += ar * (5 * me)) >>> 13, te &= 8191, te += sr * (5 * we), te += gr * (5 * br), te += Tr * (5 * Qt), te += Mr * (5 * Xt), Le = Pe += (te += Nr * (5 * kr)) >>> 13, Le += Ct * kr, Le += Lt * Hr, Le += Wt * jr, Le += vr * Lr, Pe = (Le += ar * (5 * ze)) >>> 13, Le &= 8191, Le += sr * (5 * me), Le += gr * (5 * we), Le += Tr * (5 * br), Le += Mr * (5 * Qt), nt = Pe += (Le += Nr * (5 * Xt)) >>> 13, nt += Ct * Xt, nt += Lt * kr, nt += Wt * Hr, nt += vr * jr, Pe = (nt += ar * Lr) >>> 13, nt &= 8191, nt += sr * (5 * ze), nt += gr * (5 * me), nt += Tr * (5 * we), nt += Mr * (5 * br), ft = Pe += (nt += Nr * (5 * Qt)) >>> 13, ft += Ct * Qt, ft += Lt * Xt, ft += Wt * kr, ft += vr * Hr, Pe = (ft += ar * jr) >>> 13, ft &= 8191, ft += sr * Lr, ft += gr * (5 * ze), ft += Tr * (5 * me), ft += Mr * (5 * we), zt = Pe += (ft += Nr * (5 * br)) >>> 13, zt += Ct * br, zt += Lt * Qt, zt += Wt * Xt, zt += vr * kr, Pe = (zt += ar * Hr) >>> 13, zt &= 8191, zt += sr * jr, zt += gr * Lr, zt += Tr * (5 * ze), zt += Mr * (5 * me), st = Pe += (zt += Nr * (5 * we)) >>> 13, st += Ct * we, st += Lt * br, st += Wt * Qt, st += vr * Xt, Pe = (st += ar * kr) >>> 13, st &= 8191, st += sr * Hr, st += gr * jr, st += Tr * Lr, st += Mr * (5 * ze), ct = Pe += (st += Nr * (5 * me)) >>> 13, ct += Ct * me, ct += Lt * we, ct += Wt * br, ct += vr * Qt, Pe = (ct += ar * Xt) >>> 13, ct &= 8191, ct += sr * kr, ct += gr * Hr, ct += Tr * jr, ct += Mr * Lr, yt = Pe += (ct += Nr * (5 * ze)) >>> 13, yt += Ct * ze, yt += Lt * me, yt += Wt * we, yt += vr * br, Pe = (yt += ar * Qt) >>> 13, yt &= 8191, yt += sr * Xt, yt += gr * kr, yt += Tr * Hr, yt += Mr * jr, Ct = $e = 8191 & (Pe = (Pe = ((Pe += (yt += Nr * Lr) >>> 13) << 2) + Pe | 0) + ($e &= 8191) | 0), Lt = le += Pe >>>= 13, Wt = te &= 8191, vr = Le &= 8191, ar = nt &= 8191, sr = ft &= 8191, gr = zt &= 8191, Tr = st &= 8191, Mr = ct &= 8191, Nr = yt &= 8191, Ge += 16, at -= 16;
            this.h[0] = Ct, this.h[1] = Lt, this.h[2] = Wt, this.h[3] = vr, this.h[4] = ar, this.h[5] = sr, this.h[6] = gr, this.h[7] = Tr, this.h[8] = Mr, this.h[9] = Nr;
          }, z.prototype.finish = function(je, Ge) {
            var at, Ae, qe, Ft, Dt = new Uint16Array(10);
            if (this.leftover) {
              for (Ft = this.leftover, this.buffer[Ft++] = 1; Ft < 16; Ft++) this.buffer[Ft] = 0;
              this.fin = 1, this.blocks(this.buffer, 0, 16);
            }
            for (at = this.h[1] >>> 13, this.h[1] &= 8191, Ft = 2; Ft < 10; Ft++) this.h[Ft] += at, at = this.h[Ft] >>> 13, this.h[Ft] &= 8191;
            for (this.h[0] += 5 * at, at = this.h[0] >>> 13, this.h[0] &= 8191, this.h[1] += at, at = this.h[1] >>> 13, this.h[1] &= 8191, this.h[2] += at, Dt[0] = this.h[0] + 5, at = Dt[0] >>> 13, Dt[0] &= 8191, Ft = 1; Ft < 10; Ft++) Dt[Ft] = this.h[Ft] + at, at = Dt[Ft] >>> 13, Dt[Ft] &= 8191;
            for (Dt[9] -= 8192, Ae = (1 ^ at) - 1, Ft = 0; Ft < 10; Ft++) Dt[Ft] &= Ae;
            for (Ae = ~Ae, Ft = 0; Ft < 10; Ft++) this.h[Ft] = this.h[Ft] & Ae | Dt[Ft];
            for (this.h[0] = 65535 & (this.h[0] | this.h[1] << 13), this.h[1] = 65535 & (this.h[1] >>> 3 | this.h[2] << 10), this.h[2] = 65535 & (this.h[2] >>> 6 | this.h[3] << 7), this.h[3] = 65535 & (this.h[3] >>> 9 | this.h[4] << 4), this.h[4] = 65535 & (this.h[4] >>> 12 | this.h[5] << 1 | this.h[6] << 14), this.h[5] = 65535 & (this.h[6] >>> 2 | this.h[7] << 11), this.h[6] = 65535 & (this.h[7] >>> 5 | this.h[8] << 8), this.h[7] = 65535 & (this.h[8] >>> 8 | this.h[9] << 5), qe = this.h[0] + this.pad[0], this.h[0] = 65535 & qe, Ft = 1; Ft < 8; Ft++) qe = (this.h[Ft] + this.pad[Ft] | 0) + (qe >>> 16) | 0, this.h[Ft] = 65535 & qe;
            je[Ge + 0] = this.h[0] >>> 0 & 255, je[Ge + 1] = this.h[0] >>> 8 & 255, je[Ge + 2] = this.h[1] >>> 0 & 255, je[Ge + 3] = this.h[1] >>> 8 & 255, je[Ge + 4] = this.h[2] >>> 0 & 255, je[Ge + 5] = this.h[2] >>> 8 & 255, je[Ge + 6] = this.h[3] >>> 0 & 255, je[Ge + 7] = this.h[3] >>> 8 & 255, je[Ge + 8] = this.h[4] >>> 0 & 255, je[Ge + 9] = this.h[4] >>> 8 & 255, je[Ge + 10] = this.h[5] >>> 0 & 255, je[Ge + 11] = this.h[5] >>> 8 & 255, je[Ge + 12] = this.h[6] >>> 0 & 255, je[Ge + 13] = this.h[6] >>> 8 & 255, je[Ge + 14] = this.h[7] >>> 0 & 255, je[Ge + 15] = this.h[7] >>> 8 & 255;
          }, z.prototype.update = function(je, Ge, at) {
            var Ae, qe;
            if (this.leftover) {
              for ((qe = 16 - this.leftover) > at && (qe = at), Ae = 0; Ae < qe; Ae++) this.buffer[this.leftover + Ae] = je[Ge + Ae];
              if (at -= qe, Ge += qe, this.leftover += qe, this.leftover < 16) return;
              this.blocks(this.buffer, 0, 16), this.leftover = 0;
            }
            if (at >= 16 && (qe = at - at % 16, this.blocks(je, Ge, qe), Ge += qe, at -= qe), at) {
              for (Ae = 0; Ae < at; Ae++) this.buffer[this.leftover + Ae] = je[Ge + Ae];
              this.leftover += at;
            }
          };
          var _e = $, Be = X, Qe = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591];
          function ee(je, Ge, at, Ae) {
            for (var qe, Ft, Dt, wr, Nt, yr, Ur, Pe, $e, le, te, Le, nt, ft, zt, st, ct, yt, Zt, Ct, Lt, Wt, vr, ar, sr, gr, Tr = new Int32Array(16), Mr = new Int32Array(16), Nr = je[0], Lr = je[1], jr = je[2], Hr = je[3], kr = je[4], Xt = je[5], Qt = je[6], br = je[7], we = Ge[0], me = Ge[1], ze = Ge[2], rt = Ge[3], Tt = Ge[4], Ot = Ge[5], It = Ge[6], We = Ge[7], mt = 0; Ae >= 128; ) {
              for (Zt = 0; Zt < 16; Zt++) Ct = 8 * Zt + mt, Tr[Zt] = at[Ct + 0] << 24 | at[Ct + 1] << 16 | at[Ct + 2] << 8 | at[Ct + 3], Mr[Zt] = at[Ct + 4] << 24 | at[Ct + 5] << 16 | at[Ct + 6] << 8 | at[Ct + 7];
              for (Zt = 0; Zt < 80; Zt++) if (qe = Nr, Ft = Lr, Dt = jr, wr = Hr, Nt = kr, yr = Xt, Ur = Qt, $e = we, le = me, te = ze, Le = rt, nt = Tt, ft = Ot, zt = It, vr = 65535 & (Wt = We), ar = Wt >>> 16, sr = 65535 & (Lt = br), gr = Lt >>> 16, vr += 65535 & (Wt = (Tt >>> 14 | kr << 18) ^ (Tt >>> 18 | kr << 14) ^ (kr >>> 9 | Tt << 23)), ar += Wt >>> 16, sr += 65535 & (Lt = (kr >>> 14 | Tt << 18) ^ (kr >>> 18 | Tt << 14) ^ (Tt >>> 9 | kr << 23)), gr += Lt >>> 16, vr += 65535 & (Wt = Tt & Ot ^ ~Tt & It), ar += Wt >>> 16, sr += 65535 & (Lt = kr & Xt ^ ~kr & Qt), gr += Lt >>> 16, vr += 65535 & (Wt = Qe[2 * Zt + 1]), ar += Wt >>> 16, sr += 65535 & (Lt = Qe[2 * Zt]), gr += Lt >>> 16, Lt = Tr[Zt % 16], ar += (Wt = Mr[Zt % 16]) >>> 16, sr += 65535 & Lt, gr += Lt >>> 16, sr += (ar += (vr += 65535 & Wt) >>> 16) >>> 16, vr = 65535 & (Wt = yt = 65535 & vr | ar << 16), ar = Wt >>> 16, sr = 65535 & (Lt = ct = 65535 & sr | (gr += sr >>> 16) << 16), gr = Lt >>> 16, vr += 65535 & (Wt = (we >>> 28 | Nr << 4) ^ (Nr >>> 2 | we << 30) ^ (Nr >>> 7 | we << 25)), ar += Wt >>> 16, sr += 65535 & (Lt = (Nr >>> 28 | we << 4) ^ (we >>> 2 | Nr << 30) ^ (we >>> 7 | Nr << 25)), gr += Lt >>> 16, ar += (Wt = we & me ^ we & ze ^ me & ze) >>> 16, sr += 65535 & (Lt = Nr & Lr ^ Nr & jr ^ Lr & jr), gr += Lt >>> 16, Pe = 65535 & (sr += (ar += (vr += 65535 & Wt) >>> 16) >>> 16) | (gr += sr >>> 16) << 16, st = 65535 & vr | ar << 16, vr = 65535 & (Wt = Le), ar = Wt >>> 16, sr = 65535 & (Lt = wr), gr = Lt >>> 16, ar += (Wt = yt) >>> 16, sr += 65535 & (Lt = ct), gr += Lt >>> 16, Lr = qe, jr = Ft, Hr = Dt, kr = wr = 65535 & (sr += (ar += (vr += 65535 & Wt) >>> 16) >>> 16) | (gr += sr >>> 16) << 16, Xt = Nt, Qt = yr, br = Ur, Nr = Pe, me = $e, ze = le, rt = te, Tt = Le = 65535 & vr | ar << 16, Ot = nt, It = ft, We = zt, we = st, Zt % 16 == 15) for (Ct = 0; Ct < 16; Ct++) Lt = Tr[Ct], vr = 65535 & (Wt = Mr[Ct]), ar = Wt >>> 16, sr = 65535 & Lt, gr = Lt >>> 16, Lt = Tr[(Ct + 9) % 16], vr += 65535 & (Wt = Mr[(Ct + 9) % 16]), ar += Wt >>> 16, sr += 65535 & Lt, gr += Lt >>> 16, ct = Tr[(Ct + 1) % 16], vr += 65535 & (Wt = ((yt = Mr[(Ct + 1) % 16]) >>> 1 | ct << 31) ^ (yt >>> 8 | ct << 24) ^ (yt >>> 7 | ct << 25)), ar += Wt >>> 16, sr += 65535 & (Lt = (ct >>> 1 | yt << 31) ^ (ct >>> 8 | yt << 24) ^ ct >>> 7), gr += Lt >>> 16, ct = Tr[(Ct + 14) % 16], ar += (Wt = ((yt = Mr[(Ct + 14) % 16]) >>> 19 | ct << 13) ^ (ct >>> 29 | yt << 3) ^ (yt >>> 6 | ct << 26)) >>> 16, sr += 65535 & (Lt = (ct >>> 19 | yt << 13) ^ (yt >>> 29 | ct << 3) ^ ct >>> 6), gr += Lt >>> 16, gr += (sr += (ar += (vr += 65535 & Wt) >>> 16) >>> 16) >>> 16, Tr[Ct] = 65535 & sr | gr << 16, Mr[Ct] = 65535 & vr | ar << 16;
              vr = 65535 & (Wt = we), ar = Wt >>> 16, sr = 65535 & (Lt = Nr), gr = Lt >>> 16, Lt = je[0], ar += (Wt = Ge[0]) >>> 16, sr += 65535 & Lt, gr += Lt >>> 16, gr += (sr += (ar += (vr += 65535 & Wt) >>> 16) >>> 16) >>> 16, je[0] = Nr = 65535 & sr | gr << 16, Ge[0] = we = 65535 & vr | ar << 16, vr = 65535 & (Wt = me), ar = Wt >>> 16, sr = 65535 & (Lt = Lr), gr = Lt >>> 16, Lt = je[1], ar += (Wt = Ge[1]) >>> 16, sr += 65535 & Lt, gr += Lt >>> 16, gr += (sr += (ar += (vr += 65535 & Wt) >>> 16) >>> 16) >>> 16, je[1] = Lr = 65535 & sr | gr << 16, Ge[1] = me = 65535 & vr | ar << 16, vr = 65535 & (Wt = ze), ar = Wt >>> 16, sr = 65535 & (Lt = jr), gr = Lt >>> 16, Lt = je[2], ar += (Wt = Ge[2]) >>> 16, sr += 65535 & Lt, gr += Lt >>> 16, gr += (sr += (ar += (vr += 65535 & Wt) >>> 16) >>> 16) >>> 16, je[2] = jr = 65535 & sr | gr << 16, Ge[2] = ze = 65535 & vr | ar << 16, vr = 65535 & (Wt = rt), ar = Wt >>> 16, sr = 65535 & (Lt = Hr), gr = Lt >>> 16, Lt = je[3], ar += (Wt = Ge[3]) >>> 16, sr += 65535 & Lt, gr += Lt >>> 16, gr += (sr += (ar += (vr += 65535 & Wt) >>> 16) >>> 16) >>> 16, je[3] = Hr = 65535 & sr | gr << 16, Ge[3] = rt = 65535 & vr | ar << 16, vr = 65535 & (Wt = Tt), ar = Wt >>> 16, sr = 65535 & (Lt = kr), gr = Lt >>> 16, Lt = je[4], ar += (Wt = Ge[4]) >>> 16, sr += 65535 & Lt, gr += Lt >>> 16, gr += (sr += (ar += (vr += 65535 & Wt) >>> 16) >>> 16) >>> 16, je[4] = kr = 65535 & sr | gr << 16, Ge[4] = Tt = 65535 & vr | ar << 16, vr = 65535 & (Wt = Ot), ar = Wt >>> 16, sr = 65535 & (Lt = Xt), gr = Lt >>> 16, Lt = je[5], ar += (Wt = Ge[5]) >>> 16, sr += 65535 & Lt, gr += Lt >>> 16, gr += (sr += (ar += (vr += 65535 & Wt) >>> 16) >>> 16) >>> 16, je[5] = Xt = 65535 & sr | gr << 16, Ge[5] = Ot = 65535 & vr | ar << 16, vr = 65535 & (Wt = It), ar = Wt >>> 16, sr = 65535 & (Lt = Qt), gr = Lt >>> 16, Lt = je[6], ar += (Wt = Ge[6]) >>> 16, sr += 65535 & Lt, gr += Lt >>> 16, gr += (sr += (ar += (vr += 65535 & Wt) >>> 16) >>> 16) >>> 16, je[6] = Qt = 65535 & sr | gr << 16, Ge[6] = It = 65535 & vr | ar << 16, vr = 65535 & (Wt = We), ar = Wt >>> 16, sr = 65535 & (Lt = br), gr = Lt >>> 16, Lt = je[7], ar += (Wt = Ge[7]) >>> 16, sr += 65535 & Lt, gr += Lt >>> 16, gr += (sr += (ar += (vr += 65535 & Wt) >>> 16) >>> 16) >>> 16, je[7] = br = 65535 & sr | gr << 16, Ge[7] = We = 65535 & vr | ar << 16, mt += 128, Ae -= 128;
            }
            return Ae;
          }
          function P(je, Ge, at) {
            var Ae, qe = new Int32Array(8), Ft = new Int32Array(8), Dt = new Uint8Array(256), wr = at;
            for (qe[0] = 1779033703, qe[1] = 3144134277, qe[2] = 1013904242, qe[3] = 2773480762, qe[4] = 1359893119, qe[5] = 2600822924, qe[6] = 528734635, qe[7] = 1541459225, Ft[0] = 4089235720, Ft[1] = 2227873595, Ft[2] = 4271175723, Ft[3] = 1595750129, Ft[4] = 2917565137, Ft[5] = 725511199, Ft[6] = 4215389547, Ft[7] = 327033209, ee(qe, Ft, Ge, at), at %= 128, Ae = 0; Ae < at; Ae++) Dt[Ae] = Ge[wr - at + Ae];
            for (Dt[at] = 128, Dt[(at = 256 - 128 * (at < 112 ? 1 : 0)) - 9] = 0, k(Dt, at - 8, wr / 536870912 | 0, wr << 3), ee(qe, Ft, Dt, at), Ae = 0; Ae < 8; Ae++) k(je, 8 * Ae, qe[Ae], Ft[Ae]);
            return 0;
          }
          function T(je, Ge) {
            var at = h(), Ae = h(), qe = h(), Ft = h(), Dt = h(), wr = h(), Nt = h(), yr = h(), Ur = h();
            oe(at, je[1], je[0]), oe(Ur, Ge[1], Ge[0]), se(at, at, Ur), ye(Ae, je[0], je[1]), ye(Ur, Ge[0], Ge[1]), se(Ae, Ae, Ur), se(qe, je[3], Ge[3]), se(qe, qe, b), se(Ft, je[2], Ge[2]), ye(Ft, Ft, Ft), oe(Dt, Ae, at), oe(wr, Ft, qe), ye(Nt, Ft, qe), ye(yr, Ae, at), se(je[0], Dt, wr), se(je[1], yr, Nt), se(je[2], Nt, wr), se(je[3], Dt, yr);
          }
          function O(je, Ge, at) {
            var Ae;
            for (Ae = 0; Ae < 4; Ae++) Q(je[Ae], Ge[Ae], at);
          }
          function V(je, Ge) {
            var at = h(), Ae = h(), qe = h();
            ge(qe, Ge[2]), se(at, Ge[0], qe), se(Ae, Ge[1], qe), ne(je, Ae), je[31] ^= ie(at) << 7;
          }
          function D(je, Ge, at) {
            var Ae, qe;
            for (J(je[0], g), J(je[1], a), J(je[2], a), J(je[3], g), qe = 255; qe >= 0; --qe) O(je, Ge, Ae = at[qe / 8 | 0] >> (7 & qe) & 1), T(Ge, je), T(je, je), O(je, Ge, Ae);
          }
          function C(je, Ge) {
            var at = [h(), h(), h(), h()];
            J(at[0], S), J(at[1], E), J(at[2], a), se(at[3], S, E), D(je, at, Ge);
          }
          function p(je, Ge, at) {
            var Ae, qe = new Uint8Array(64), Ft = [h(), h(), h(), h()];
            for (at || f(Ge, 32), P(qe, Ge, 32), qe[0] &= 248, qe[31] &= 127, qe[31] |= 64, C(Ft, qe), V(je, Ft), Ae = 0; Ae < 32; Ae++) Ge[Ae + 32] = je[Ae];
            return 0;
          }
          var A = new Float64Array([237, 211, 245, 92, 26, 99, 18, 88, 214, 156, 247, 162, 222, 249, 222, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16]);
          function U(je, Ge) {
            var at, Ae, qe, Ft;
            for (Ae = 63; Ae >= 32; --Ae) {
              for (at = 0, qe = Ae - 32, Ft = Ae - 12; qe < Ft; ++qe) Ge[qe] += at - 16 * Ge[Ae] * A[qe - (Ae - 32)], at = Math.floor((Ge[qe] + 128) / 256), Ge[qe] -= 256 * at;
              Ge[qe] += at, Ge[Ae] = 0;
            }
            for (at = 0, qe = 0; qe < 32; qe++) Ge[qe] += at - (Ge[31] >> 4) * A[qe], at = Ge[qe] >> 8, Ge[qe] &= 255;
            for (qe = 0; qe < 32; qe++) Ge[qe] -= at * A[qe];
            for (Ae = 0; Ae < 32; Ae++) Ge[Ae + 1] += Ge[Ae] >> 8, je[Ae] = 255 & Ge[Ae];
          }
          function Y(je) {
            var Ge, at = new Float64Array(64);
            for (Ge = 0; Ge < 64; Ge++) at[Ge] = je[Ge];
            for (Ge = 0; Ge < 64; Ge++) je[Ge] = 0;
            U(je, at);
          }
          function ae(je, Ge, at, Ae) {
            var qe, Ft, Dt = new Uint8Array(64), wr = new Uint8Array(64), Nt = new Uint8Array(64), yr = new Float64Array(64), Ur = [h(), h(), h(), h()];
            P(Dt, Ae, 32), Dt[0] &= 248, Dt[31] &= 127, Dt[31] |= 64;
            var Pe = at + 64;
            for (qe = 0; qe < at; qe++) je[64 + qe] = Ge[qe];
            for (qe = 0; qe < 32; qe++) je[32 + qe] = Dt[32 + qe];
            for (P(Nt, je.subarray(32), at + 32), Y(Nt), C(Ur, Nt), V(je, Ur), qe = 32; qe < 64; qe++) je[qe] = Ae[qe];
            for (P(wr, je, at + 64), Y(wr), qe = 0; qe < 64; qe++) yr[qe] = 0;
            for (qe = 0; qe < 32; qe++) yr[qe] = Nt[qe];
            for (qe = 0; qe < 32; qe++) for (Ft = 0; Ft < 32; Ft++) yr[qe + Ft] += wr[qe] * Dt[Ft];
            return U(je.subarray(32), yr), Pe;
          }
          function W(je, Ge, at, Ae) {
            var qe, Ft = new Uint8Array(32), Dt = new Uint8Array(64), wr = [h(), h(), h(), h()], Nt = [h(), h(), h(), h()];
            if (at < 64 || function(yr, Ur) {
              var Pe = h(), $e = h(), le = h(), te = h(), Le = h(), nt = h(), ft = h();
              return J(yr[2], a), ce(yr[1], Ur), re(le, yr[1]), se(te, le, d), oe(le, le, yr[2]), ye(te, yr[2], te), re(Le, te), re(nt, Le), se(ft, nt, Le), se(Pe, ft, le), se(Pe, Pe, te), Te(Pe, Pe), se(Pe, Pe, le), se(Pe, Pe, te), se(Pe, Pe, te), se(yr[0], Pe, te), re($e, yr[0]), se($e, $e, te), K($e, le) && se(yr[0], yr[0], R), re($e, yr[0]), se($e, $e, te), K($e, le) ? -1 : (ie(yr[0]) === Ur[31] >> 7 && oe(yr[0], g, yr[0]), se(yr[3], yr[0], yr[1]), 0);
            }(Nt, Ae)) return -1;
            for (qe = 0; qe < at; qe++) je[qe] = Ge[qe];
            for (qe = 0; qe < 32; qe++) je[qe + 32] = Ae[qe];
            if (P(Dt, je, at), Y(Dt), D(wr, Nt, Dt), C(Nt, Ge.subarray(32)), T(wr, Nt), V(Ft, wr), at -= 64, I(Ge, 0, Ft, 0)) {
              for (qe = 0; qe < at; qe++) je[qe] = 0;
              return -1;
            }
            for (qe = 0; qe < at; qe++) je[qe] = Ge[qe + 64];
            return at;
          }
          var de = 16, tt = 64, Ne = 32, ut = 64;
          function Ze(je, Ge) {
            if (je.length !== 32) throw new Error("bad key size");
            if (Ge.length !== 24) throw new Error("bad nonce size");
          }
          function Et() {
            for (var je = 0; je < arguments.length; je++) if (!(arguments[je] instanceof Uint8Array)) throw new TypeError("unexpected type, use Uint8Array");
          }
          function rr(je) {
            for (var Ge = 0; Ge < je.length; Ge++) je[Ge] = 0;
          }
          c.lowlevel = { crypto_core_hsalsa20: N, crypto_stream_xor: j, crypto_stream: L, crypto_stream_salsa20_xor: _, crypto_stream_salsa20: x, crypto_onetimeauth: Z, crypto_onetimeauth_verify: ue, crypto_verify_16: F, crypto_verify_32: I, crypto_secretbox: $, crypto_secretbox_open: X, crypto_scalarmult: pe, crypto_scalarmult_base: Oe, crypto_box_beforenm: Ve, crypto_box_afternm: _e, crypto_box: function(je, Ge, at, Ae, qe, Ft) {
            var Dt = new Uint8Array(32);
            return Ve(Dt, qe, Ft), _e(je, Ge, at, Ae, Dt);
          }, crypto_box_open: function(je, Ge, at, Ae, qe, Ft) {
            var Dt = new Uint8Array(32);
            return Ve(Dt, qe, Ft), Be(je, Ge, at, Ae, Dt);
          }, crypto_box_keypair: xe, crypto_hash: P, crypto_sign: ae, crypto_sign_keypair: p, crypto_sign_open: W, crypto_secretbox_KEYBYTES: 32, crypto_secretbox_NONCEBYTES: 24, crypto_secretbox_ZEROBYTES: 32, crypto_secretbox_BOXZEROBYTES: de, crypto_scalarmult_BYTES: 32, crypto_scalarmult_SCALARBYTES: 32, crypto_box_PUBLICKEYBYTES: 32, crypto_box_SECRETKEYBYTES: 32, crypto_box_BEFORENMBYTES: 32, crypto_box_NONCEBYTES: 24, crypto_box_ZEROBYTES: 32, crypto_box_BOXZEROBYTES: 16, crypto_sign_BYTES: tt, crypto_sign_PUBLICKEYBYTES: Ne, crypto_sign_SECRETKEYBYTES: ut, crypto_sign_SEEDBYTES: 32, crypto_hash_BYTES: 64, gf: h, D: d, L: A, pack25519: ne, unpack25519: ce, M: se, A: ye, S: re, Z: oe, pow2523: Te, add: T, set25519: J, modL: U, scalarmult: D, scalarbase: C }, c.randomBytes = function(je) {
            var Ge = new Uint8Array(je);
            return f(Ge, je), Ge;
          }, c.secretbox = function(je, Ge, at) {
            Et(je, Ge, at), Ze(at, Ge);
            for (var Ae = new Uint8Array(32 + je.length), qe = new Uint8Array(Ae.length), Ft = 0; Ft < je.length; Ft++) Ae[Ft + 32] = je[Ft];
            return $(qe, Ae, Ae.length, Ge, at), qe.subarray(de);
          }, c.secretbox.open = function(je, Ge, at) {
            Et(je, Ge, at), Ze(at, Ge);
            for (var Ae = new Uint8Array(de + je.length), qe = new Uint8Array(Ae.length), Ft = 0; Ft < je.length; Ft++) Ae[Ft + de] = je[Ft];
            return Ae.length < 32 || X(qe, Ae, Ae.length, Ge, at) !== 0 ? null : qe.subarray(32);
          }, c.secretbox.keyLength = 32, c.secretbox.nonceLength = 24, c.secretbox.overheadLength = de, c.scalarMult = function(je, Ge) {
            if (Et(je, Ge), je.length !== 32) throw new Error("bad n size");
            if (Ge.length !== 32) throw new Error("bad p size");
            var at = new Uint8Array(32);
            return pe(at, je, Ge), at;
          }, c.scalarMult.base = function(je) {
            if (Et(je), je.length !== 32) throw new Error("bad n size");
            var Ge = new Uint8Array(32);
            return Oe(Ge, je), Ge;
          }, c.scalarMult.scalarLength = 32, c.scalarMult.groupElementLength = 32, c.box = function(je, Ge, at, Ae) {
            var qe = c.box.before(at, Ae);
            return c.secretbox(je, Ge, qe);
          }, c.box.before = function(je, Ge) {
            Et(je, Ge), function(Ae, qe) {
              if (Ae.length !== 32) throw new Error("bad public key size");
              if (qe.length !== 32) throw new Error("bad secret key size");
            }(je, Ge);
            var at = new Uint8Array(32);
            return Ve(at, je, Ge), at;
          }, c.box.after = c.secretbox, c.box.open = function(je, Ge, at, Ae) {
            var qe = c.box.before(at, Ae);
            return c.secretbox.open(je, Ge, qe);
          }, c.box.open.after = c.secretbox.open, c.box.keyPair = function() {
            var je = new Uint8Array(32), Ge = new Uint8Array(32);
            return xe(je, Ge), { publicKey: je, secretKey: Ge };
          }, c.box.keyPair.fromSecretKey = function(je) {
            if (Et(je), je.length !== 32) throw new Error("bad secret key size");
            var Ge = new Uint8Array(32);
            return Oe(Ge, je), { publicKey: Ge, secretKey: new Uint8Array(je) };
          }, c.box.publicKeyLength = 32, c.box.secretKeyLength = 32, c.box.sharedKeyLength = 32, c.box.nonceLength = 24, c.box.overheadLength = c.secretbox.overheadLength, c.sign = function(je, Ge) {
            if (Et(je, Ge), Ge.length !== ut) throw new Error("bad secret key size");
            var at = new Uint8Array(tt + je.length);
            return ae(at, je, je.length, Ge), at;
          }, c.sign.open = function(je, Ge) {
            if (Et(je, Ge), Ge.length !== Ne) throw new Error("bad public key size");
            var at = new Uint8Array(je.length), Ae = W(at, je, je.length, Ge);
            if (Ae < 0) return null;
            for (var qe = new Uint8Array(Ae), Ft = 0; Ft < qe.length; Ft++) qe[Ft] = at[Ft];
            return qe;
          }, c.sign.detached = function(je, Ge) {
            for (var at = c.sign(je, Ge), Ae = new Uint8Array(tt), qe = 0; qe < Ae.length; qe++) Ae[qe] = at[qe];
            return Ae;
          }, c.sign.detached.verify = function(je, Ge, at) {
            if (Et(je, Ge, at), Ge.length !== tt) throw new Error("bad signature size");
            if (at.length !== Ne) throw new Error("bad public key size");
            var Ae, qe = new Uint8Array(tt + je.length), Ft = new Uint8Array(tt + je.length);
            for (Ae = 0; Ae < tt; Ae++) qe[Ae] = Ge[Ae];
            for (Ae = 0; Ae < je.length; Ae++) qe[Ae + tt] = je[Ae];
            return W(Ft, qe, qe.length, at) >= 0;
          }, c.sign.keyPair = function() {
            var je = new Uint8Array(Ne), Ge = new Uint8Array(ut);
            return p(je, Ge), { publicKey: je, secretKey: Ge };
          }, c.sign.keyPair.fromSecretKey = function(je) {
            if (Et(je), je.length !== ut) throw new Error("bad secret key size");
            for (var Ge = new Uint8Array(Ne), at = 0; at < Ge.length; at++) Ge[at] = je[32 + at];
            return { publicKey: Ge, secretKey: new Uint8Array(je) };
          }, c.sign.keyPair.fromSeed = function(je) {
            if (Et(je), je.length !== 32) throw new Error("bad seed size");
            for (var Ge = new Uint8Array(Ne), at = new Uint8Array(ut), Ae = 0; Ae < 32; Ae++) at[Ae] = je[Ae];
            return p(Ge, at, true), { publicKey: Ge, secretKey: at };
          }, c.sign.publicKeyLength = Ne, c.sign.secretKeyLength = ut, c.sign.seedLength = 32, c.sign.signatureLength = tt, c.hash = function(je) {
            Et(je);
            var Ge = new Uint8Array(64);
            return P(Ge, je, je.length), Ge;
          }, c.hash.hashLength = 64, c.verify = function(je, Ge) {
            return Et(je, Ge), je.length !== 0 && Ge.length !== 0 && je.length === Ge.length && w(je, 0, Ge, 0, je.length) === 0;
          }, c.setPRNG = function(je) {
            f = je;
          }, function() {
            var je = typeof self < "u" ? self.crypto || self.msCrypto : null;
            je && je.getRandomValues ? c.setPRNG(function(Ge, at) {
              var Ae, qe = new Uint8Array(at);
              for (Ae = 0; Ae < at; Ae += 65536) je.getRandomValues(qe.subarray(Ae, Ae + Math.min(at - Ae, 65536)));
              for (Ae = 0; Ae < at; Ae++) Ge[Ae] = qe[Ae];
              rr(qe);
            }) : (je = s(2894)) && je.randomBytes && c.setPRNG(function(Ge, at) {
              var Ae, qe = je.randomBytes(at);
              for (Ae = 0; Ae < at; Ae++) Ge[Ae] = qe[Ae];
              rr(qe);
            });
          }();
        })(t.exports ? t.exports : self.nacl = self.nacl || {});
      }, 5157: (t) => {
        t.exports = function() {
          throw new Error("Readable.from is not available in the browser");
        };
      }, 5291: (t, o, s) => {
        var c = s(6048).F.ERR_INVALID_OPT_VALUE;
        t.exports = { getHighWaterMark: function(h, f, r, m) {
          var g = function(a, l, d) {
            return a.highWaterMark != null ? a.highWaterMark : l ? a[d] : null;
          }(f, m, r);
          if (g != null) {
            if (!isFinite(g) || Math.floor(g) !== g || g < 0) throw new c(m ? r : "highWaterMark", g);
            return Math.floor(g);
          }
          return h.objectMode ? 16 : 16384;
        } };
      }, 5328: (t, o, s) => {
        var c = s(8287).Buffer;
        Object.defineProperty(o, "__esModule", { value: true }), o.authorizeEntry = R, o.authorizeInvocation = function(w, F, I) {
          var q = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : "", N = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : g.Networks.FUTURENET, H = r.Keypair.random().rawPublicKey(), _ = new f.default.Int64((L = H, L.subarray(0, 8).reduce(function(j, z) {
            return j << 8 | z;
          }, 0))), x = q || w.publicKey(), L;
          if (!x) throw new Error("authorizeInvocation requires publicKey parameter");
          return R(new f.default.SorobanAuthorizationEntry({ rootInvocation: I, credentials: f.default.SorobanCredentials.sorobanCredentialsAddress(new f.default.SorobanAddressCredentials({ address: new l.Address(x).toScAddress(), nonce: _, signatureExpirationLedger: 0, signature: f.default.ScVal.scvVec([]) })) }), w, F, N);
        };
        var h, f = (h = s(1918)) && h.__esModule ? h : { default: h }, r = s(6691), m = s(7120), g = s(6202), a = s(9152), l = s(1180), d = s(7177);
        function b(w) {
          return b = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(F) {
            return typeof F;
          } : function(F) {
            return F && typeof Symbol == "function" && F.constructor === Symbol && F !== Symbol.prototype ? "symbol" : typeof F;
          }, b(w);
        }
        function S() {
          S = function() {
            return F;
          };
          var w, F = {}, I = Object.prototype, q = I.hasOwnProperty, N = Object.defineProperty || function(_e, Be, Qe) {
            _e[Be] = Qe.value;
          }, H = typeof Symbol == "function" ? Symbol : {}, _ = H.iterator || "@@iterator", x = H.asyncIterator || "@@asyncIterator", L = H.toStringTag || "@@toStringTag";
          function j(_e, Be, Qe) {
            return Object.defineProperty(_e, Be, { value: Qe, enumerable: true, configurable: true, writable: true }), _e[Be];
          }
          try {
            j({}, "");
          } catch {
            j = function(Be, Qe, ee) {
              return Be[Qe] = ee;
            };
          }
          function z(_e, Be, Qe, ee) {
            var P = Be && Be.prototype instanceof Q ? Be : Q, T = Object.create(P.prototype), O = new xe(ee || []);
            return N(T, "_invoke", { value: ge(_e, Qe, O) }), T;
          }
          function Z(_e, Be, Qe) {
            try {
              return { type: "normal", arg: _e.call(Be, Qe) };
            } catch (ee) {
              return { type: "throw", arg: ee };
            }
          }
          F.wrap = z;
          var ue = "suspendedStart", $ = "suspendedYield", X = "executing", J = "completed", B = {};
          function Q() {
          }
          function ne() {
          }
          function K() {
          }
          var ie = {};
          j(ie, _, function() {
            return this;
          });
          var ce = Object.getPrototypeOf, ye = ce && ce(ce(Ve([])));
          ye && ye !== I && q.call(ye, _) && (ie = ye);
          var oe = K.prototype = Q.prototype = Object.create(ie);
          function se(_e) {
            ["next", "throw", "return"].forEach(function(Be) {
              j(_e, Be, function(Qe) {
                return this._invoke(Be, Qe);
              });
            });
          }
          function re(_e, Be) {
            function Qe(P, T, O, V) {
              var D = Z(_e[P], _e, T);
              if (D.type !== "throw") {
                var C = D.arg, p = C.value;
                return p && b(p) == "object" && q.call(p, "__await") ? Be.resolve(p.__await).then(function(A) {
                  Qe("next", A, O, V);
                }, function(A) {
                  Qe("throw", A, O, V);
                }) : Be.resolve(p).then(function(A) {
                  C.value = A, O(C);
                }, function(A) {
                  return Qe("throw", A, O, V);
                });
              }
              V(D.arg);
            }
            var ee;
            N(this, "_invoke", { value: function(P, T) {
              function O() {
                return new Be(function(V, D) {
                  Qe(P, T, V, D);
                });
              }
              return ee = ee ? ee.then(O, O) : O();
            } });
          }
          function ge(_e, Be, Qe) {
            var ee = ue;
            return function(P, T) {
              if (ee === X) throw Error("Generator is already running");
              if (ee === J) {
                if (P === "throw") throw T;
                return { value: w, done: true };
              }
              for (Qe.method = P, Qe.arg = T; ; ) {
                var O = Qe.delegate;
                if (O) {
                  var V = Te(O, Qe);
                  if (V) {
                    if (V === B) continue;
                    return V;
                  }
                }
                if (Qe.method === "next") Qe.sent = Qe._sent = Qe.arg;
                else if (Qe.method === "throw") {
                  if (ee === ue) throw ee = J, Qe.arg;
                  Qe.dispatchException(Qe.arg);
                } else Qe.method === "return" && Qe.abrupt("return", Qe.arg);
                ee = X;
                var D = Z(_e, Be, Qe);
                if (D.type === "normal") {
                  if (ee = Qe.done ? J : $, D.arg === B) continue;
                  return { value: D.arg, done: Qe.done };
                }
                D.type === "throw" && (ee = J, Qe.method = "throw", Qe.arg = D.arg);
              }
            };
          }
          function Te(_e, Be) {
            var Qe = Be.method, ee = _e.iterator[Qe];
            if (ee === w) return Be.delegate = null, Qe === "throw" && _e.iterator.return && (Be.method = "return", Be.arg = w, Te(_e, Be), Be.method === "throw") || Qe !== "return" && (Be.method = "throw", Be.arg = new TypeError("The iterator does not provide a '" + Qe + "' method")), B;
            var P = Z(ee, _e.iterator, Be.arg);
            if (P.type === "throw") return Be.method = "throw", Be.arg = P.arg, Be.delegate = null, B;
            var T = P.arg;
            return T ? T.done ? (Be[_e.resultName] = T.value, Be.next = _e.nextLoc, Be.method !== "return" && (Be.method = "next", Be.arg = w), Be.delegate = null, B) : T : (Be.method = "throw", Be.arg = new TypeError("iterator result is not an object"), Be.delegate = null, B);
          }
          function pe(_e) {
            var Be = { tryLoc: _e[0] };
            1 in _e && (Be.catchLoc = _e[1]), 2 in _e && (Be.finallyLoc = _e[2], Be.afterLoc = _e[3]), this.tryEntries.push(Be);
          }
          function Oe(_e) {
            var Be = _e.completion || {};
            Be.type = "normal", delete Be.arg, _e.completion = Be;
          }
          function xe(_e) {
            this.tryEntries = [{ tryLoc: "root" }], _e.forEach(pe, this), this.reset(true);
          }
          function Ve(_e) {
            if (_e || _e === "") {
              var Be = _e[_];
              if (Be) return Be.call(_e);
              if (typeof _e.next == "function") return _e;
              if (!isNaN(_e.length)) {
                var Qe = -1, ee = function P() {
                  for (; ++Qe < _e.length; ) if (q.call(_e, Qe)) return P.value = _e[Qe], P.done = false, P;
                  return P.value = w, P.done = true, P;
                };
                return ee.next = ee;
              }
            }
            throw new TypeError(b(_e) + " is not iterable");
          }
          return ne.prototype = K, N(oe, "constructor", { value: K, configurable: true }), N(K, "constructor", { value: ne, configurable: true }), ne.displayName = j(K, L, "GeneratorFunction"), F.isGeneratorFunction = function(_e) {
            var Be = typeof _e == "function" && _e.constructor;
            return !!Be && (Be === ne || (Be.displayName || Be.name) === "GeneratorFunction");
          }, F.mark = function(_e) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(_e, K) : (_e.__proto__ = K, j(_e, L, "GeneratorFunction")), _e.prototype = Object.create(oe), _e;
          }, F.awrap = function(_e) {
            return { __await: _e };
          }, se(re.prototype), j(re.prototype, x, function() {
            return this;
          }), F.AsyncIterator = re, F.async = function(_e, Be, Qe, ee, P) {
            P === void 0 && (P = Promise);
            var T = new re(z(_e, Be, Qe, ee), P);
            return F.isGeneratorFunction(Be) ? T : T.next().then(function(O) {
              return O.done ? O.value : T.next();
            });
          }, se(oe), j(oe, L, "Generator"), j(oe, _, function() {
            return this;
          }), j(oe, "toString", function() {
            return "[object Generator]";
          }), F.keys = function(_e) {
            var Be = Object(_e), Qe = [];
            for (var ee in Be) Qe.push(ee);
            return Qe.reverse(), function P() {
              for (; Qe.length; ) {
                var T = Qe.pop();
                if (T in Be) return P.value = T, P.done = false, P;
              }
              return P.done = true, P;
            };
          }, F.values = Ve, xe.prototype = { constructor: xe, reset: function(_e) {
            if (this.prev = 0, this.next = 0, this.sent = this._sent = w, this.done = false, this.delegate = null, this.method = "next", this.arg = w, this.tryEntries.forEach(Oe), !_e) for (var Be in this) Be.charAt(0) === "t" && q.call(this, Be) && !isNaN(+Be.slice(1)) && (this[Be] = w);
          }, stop: function() {
            this.done = true;
            var _e = this.tryEntries[0].completion;
            if (_e.type === "throw") throw _e.arg;
            return this.rval;
          }, dispatchException: function(_e) {
            if (this.done) throw _e;
            var Be = this;
            function Qe(D, C) {
              return T.type = "throw", T.arg = _e, Be.next = D, C && (Be.method = "next", Be.arg = w), !!C;
            }
            for (var ee = this.tryEntries.length - 1; ee >= 0; --ee) {
              var P = this.tryEntries[ee], T = P.completion;
              if (P.tryLoc === "root") return Qe("end");
              if (P.tryLoc <= this.prev) {
                var O = q.call(P, "catchLoc"), V = q.call(P, "finallyLoc");
                if (O && V) {
                  if (this.prev < P.catchLoc) return Qe(P.catchLoc, true);
                  if (this.prev < P.finallyLoc) return Qe(P.finallyLoc);
                } else if (O) {
                  if (this.prev < P.catchLoc) return Qe(P.catchLoc, true);
                } else {
                  if (!V) throw Error("try statement without catch or finally");
                  if (this.prev < P.finallyLoc) return Qe(P.finallyLoc);
                }
              }
            }
          }, abrupt: function(_e, Be) {
            for (var Qe = this.tryEntries.length - 1; Qe >= 0; --Qe) {
              var ee = this.tryEntries[Qe];
              if (ee.tryLoc <= this.prev && q.call(ee, "finallyLoc") && this.prev < ee.finallyLoc) {
                var P = ee;
                break;
              }
            }
            P && (_e === "break" || _e === "continue") && P.tryLoc <= Be && Be <= P.finallyLoc && (P = null);
            var T = P ? P.completion : {};
            return T.type = _e, T.arg = Be, P ? (this.method = "next", this.next = P.finallyLoc, B) : this.complete(T);
          }, complete: function(_e, Be) {
            if (_e.type === "throw") throw _e.arg;
            return _e.type === "break" || _e.type === "continue" ? this.next = _e.arg : _e.type === "return" ? (this.rval = this.arg = _e.arg, this.method = "return", this.next = "end") : _e.type === "normal" && Be && (this.next = Be), B;
          }, finish: function(_e) {
            for (var Be = this.tryEntries.length - 1; Be >= 0; --Be) {
              var Qe = this.tryEntries[Be];
              if (Qe.finallyLoc === _e) return this.complete(Qe.completion, Qe.afterLoc), Oe(Qe), B;
            }
          }, catch: function(_e) {
            for (var Be = this.tryEntries.length - 1; Be >= 0; --Be) {
              var Qe = this.tryEntries[Be];
              if (Qe.tryLoc === _e) {
                var ee = Qe.completion;
                if (ee.type === "throw") {
                  var P = ee.arg;
                  Oe(Qe);
                }
                return P;
              }
            }
            throw Error("illegal catch attempt");
          }, delegateYield: function(_e, Be, Qe) {
            return this.delegate = { iterator: Ve(_e), resultName: Be, nextLoc: Qe }, this.method === "next" && (this.arg = w), B;
          } }, F;
        }
        function E(w, F, I, q, N, H, _) {
          try {
            var x = w[H](_), L = x.value;
          } catch (j) {
            return void I(j);
          }
          x.done ? F(L) : Promise.resolve(L).then(q, N);
        }
        function R(w, F, I) {
          return k.apply(this, arguments);
        }
        function k() {
          var w;
          return w = S().mark(function F(I, q, N) {
            var H, _, x, L, j, z, Z, ue, $, X, J = arguments;
            return S().wrap(function(B) {
              for (; ; ) switch (B.prev = B.next) {
                case 0:
                  if (H = J.length > 3 && J[3] !== void 0 ? J[3] : g.Networks.FUTURENET, I.credentials().switch().value === f.default.SorobanCredentialsType.sorobanCredentialsAddress().value) {
                    B.next = 3;
                    break;
                  }
                  return B.abrupt("return", I);
                case 3:
                  if (_ = f.default.SorobanAuthorizationEntry.fromXDR(I.toXDR()), (x = _.credentials().address()).signatureExpirationLedger(N), L = (0, a.hash)(c.from(H)), j = f.default.HashIdPreimage.envelopeTypeSorobanAuthorization(new f.default.HashIdPreimageSorobanAuthorization({ networkId: L, nonce: x.nonce(), invocation: _.rootInvocation(), signatureExpirationLedger: x.signatureExpirationLedger() })), z = (0, a.hash)(j.toXDR()), typeof q != "function") {
                    B.next = 16;
                    break;
                  }
                  return B.next = 12, q(j);
                case 12:
                  ($ = B.sent) != null && $.signature ? (Z = c.from($.signature), ue = $.publicKey) : (Z = c.from($), ue = l.Address.fromScAddress(x.address()).toString()), B.next = 18;
                  break;
                case 16:
                  Z = c.from(q.sign(z)), ue = q.publicKey();
                case 18:
                  if (r.Keypair.fromPublicKey(ue).verify(z, Z)) {
                    B.next = 20;
                    break;
                  }
                  throw new Error("signature doesn't match payload");
                case 20:
                  return X = (0, d.nativeToScVal)({ public_key: m.StrKey.decodeEd25519PublicKey(ue), signature: Z }, { type: { public_key: ["symbol", null], signature: ["symbol", null] } }), x.signature(f.default.ScVal.scvVec([X])), B.abrupt("return", _);
                case 23:
                case "end":
                  return B.stop();
              }
            }, F);
          }), k = function() {
            var F = this, I = arguments;
            return new Promise(function(q, N) {
              var H = w.apply(F, I);
              function _(L) {
                E(H, q, N, _, x, "next", L);
              }
              function x(L) {
                E(H, q, N, _, x, "throw", L);
              }
              _(void 0);
            });
          }, k.apply(this, arguments);
        }
      }, 5340: () => {
      }, 5345: (t) => {
        t.exports = URIError;
      }, 5360: (t, o) => {
        var s = function(g, a) {
          return a || (a = {}), g.split("").forEach(function(l, d) {
            l in a || (a[l] = d);
          }), a;
        }, c = { alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567", charmap: { 0: 14, 1: 8 } };
        c.charmap = s(c.alphabet, c.charmap);
        var h = { alphabet: "0123456789ABCDEFGHJKMNPQRSTVWXYZ", charmap: { O: 0, I: 1, L: 1 } };
        h.charmap = s(h.alphabet, h.charmap);
        var f = { alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV", charmap: {} };
        function r(g) {
          if (this.buf = [], this.shift = 8, this.carry = 0, g) {
            switch (g.type) {
              case "rfc4648":
                this.charmap = o.rfc4648.charmap;
                break;
              case "crockford":
                this.charmap = o.crockford.charmap;
                break;
              case "base32hex":
                this.charmap = o.base32hex.charmap;
                break;
              default:
                throw new Error("invalid type");
            }
            g.charmap && (this.charmap = g.charmap);
          }
        }
        function m(g) {
          if (this.buf = "", this.shift = 3, this.carry = 0, g) {
            switch (g.type) {
              case "rfc4648":
                this.alphabet = o.rfc4648.alphabet;
                break;
              case "crockford":
                this.alphabet = o.crockford.alphabet;
                break;
              case "base32hex":
                this.alphabet = o.base32hex.alphabet;
                break;
              default:
                throw new Error("invalid type");
            }
            g.alphabet ? this.alphabet = g.alphabet : g.lc && (this.alphabet = this.alphabet.toLowerCase());
          }
        }
        f.charmap = s(f.alphabet, f.charmap), r.prototype.charmap = c.charmap, r.prototype.write = function(g) {
          var a = this.charmap, l = this.buf, d = this.shift, b = this.carry;
          return g.toUpperCase().split("").forEach(function(S) {
            if (S != "=") {
              var E = 255 & a[S];
              (d -= 5) > 0 ? b |= E << d : d < 0 ? (l.push(b | E >> -d), b = E << (d += 8) & 255) : (l.push(b | E), d = 8, b = 0);
            }
          }), this.shift = d, this.carry = b, this;
        }, r.prototype.finalize = function(g) {
          return g && this.write(g), this.shift !== 8 && this.carry !== 0 && (this.buf.push(this.carry), this.shift = 8, this.carry = 0), this.buf;
        }, m.prototype.alphabet = c.alphabet, m.prototype.write = function(g) {
          var a, l, d, b = this.shift, S = this.carry;
          for (d = 0; d < g.length; d++) a = S | (l = g[d]) >> b, this.buf += this.alphabet[31 & a], b > 5 && (a = l >> (b -= 5), this.buf += this.alphabet[31 & a]), S = l << (b = 5 - b), b = 8 - b;
          return this.shift = b, this.carry = S, this;
        }, m.prototype.finalize = function(g) {
          return g && this.write(g), this.shift !== 3 && (this.buf += this.alphabet[31 & this.carry], this.shift = 3, this.carry = 0), this.buf;
        }, o.encode = function(g, a) {
          return new m(a).finalize(g);
        }, o.decode = function(g, a) {
          return new r(a).finalize(g);
        }, o.Decoder = r, o.Encoder = m, o.charmap = s, o.crockford = h, o.rfc4648 = c, o.base32hex = f;
      }, 5373: (t, o, s) => {
        var c = s(8636), h = s(2642), f = s(4765);
        t.exports = { formats: f, parse: h, stringify: c };
      }, 5382: (t, o, s) => {
        var c = Object.keys || function(b) {
          var S = [];
          for (var E in b) S.push(E);
          return S;
        };
        t.exports = a;
        var h = s(5412), f = s(6708);
        s(6698)(a, h);
        for (var r = c(f.prototype), m = 0; m < r.length; m++) {
          var g = r[m];
          a.prototype[g] || (a.prototype[g] = f.prototype[g]);
        }
        function a(b) {
          if (!(this instanceof a)) return new a(b);
          h.call(this, b), f.call(this, b), this.allowHalfOpen = true, b && (b.readable === false && (this.readable = false), b.writable === false && (this.writable = false), b.allowHalfOpen === false && (this.allowHalfOpen = false, this.once("end", l)));
        }
        function l() {
          this._writableState.ended || process.nextTick(d, this);
        }
        function d(b) {
          b.end();
        }
        Object.defineProperty(a.prototype, "writableHighWaterMark", { enumerable: false, get: function() {
          return this._writableState.highWaterMark;
        } }), Object.defineProperty(a.prototype, "writableBuffer", { enumerable: false, get: function() {
          return this._writableState && this._writableState.getBuffer();
        } }), Object.defineProperty(a.prototype, "writableLength", { enumerable: false, get: function() {
          return this._writableState.length;
        } }), Object.defineProperty(a.prototype, "destroyed", { enumerable: false, get: function() {
          return this._readableState !== void 0 && this._writableState !== void 0 && this._readableState.destroyed && this._writableState.destroyed;
        }, set: function(b) {
          this._readableState !== void 0 && this._writableState !== void 0 && (this._readableState.destroyed = b, this._writableState.destroyed = b);
        } });
      }, 5412: (t, o, s) => {
        var c;
        t.exports = x, x.ReadableState = _, s(7007).EventEmitter;
        var h = function(se, re) {
          return se.listeners(re).length;
        }, f = s(345), r = s(8287).Buffer, m = (s.g !== void 0 ? s.g : typeof window < "u" ? window : typeof self < "u" ? self : {}).Uint8Array || function() {
        }, g, a = s(9838);
        g = a && a.debuglog ? a.debuglog("stream") : function() {
        };
        var l, d, b, S = s(2726), E = s(5896), R = s(5291).getHighWaterMark, k = s(6048).F, w = k.ERR_INVALID_ARG_TYPE, F = k.ERR_STREAM_PUSH_AFTER_EOF, I = k.ERR_METHOD_NOT_IMPLEMENTED, q = k.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;
        s(6698)(x, f);
        var N = E.errorOrDestroy, H = ["error", "close", "destroy", "pause", "resume"];
        function _(se, re, ge) {
          c = c || s(5382), se = se || {}, typeof ge != "boolean" && (ge = re instanceof c), this.objectMode = !!se.objectMode, ge && (this.objectMode = this.objectMode || !!se.readableObjectMode), this.highWaterMark = R(this, se, "readableHighWaterMark", ge), this.buffer = new S(), this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = false, this.endEmitted = false, this.reading = false, this.sync = true, this.needReadable = false, this.emittedReadable = false, this.readableListening = false, this.resumeScheduled = false, this.paused = true, this.emitClose = se.emitClose !== false, this.autoDestroy = !!se.autoDestroy, this.destroyed = false, this.defaultEncoding = se.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = false, this.decoder = null, this.encoding = null, se.encoding && (l || (l = s(3141).I), this.decoder = new l(se.encoding), this.encoding = se.encoding);
        }
        function x(se) {
          if (c = c || s(5382), !(this instanceof x)) return new x(se);
          var re = this instanceof c;
          this._readableState = new _(se, this, re), this.readable = true, se && (typeof se.read == "function" && (this._read = se.read), typeof se.destroy == "function" && (this._destroy = se.destroy)), f.call(this);
        }
        function L(se, re, ge, Te, pe) {
          g("readableAddChunk", re);
          var Oe, xe = se._readableState;
          if (re === null) xe.reading = false, function(Ve, _e) {
            if (g("onEofChunk"), !_e.ended) {
              if (_e.decoder) {
                var Be = _e.decoder.end();
                Be && Be.length && (_e.buffer.push(Be), _e.length += _e.objectMode ? 1 : Be.length);
              }
              _e.ended = true, _e.sync ? ue(Ve) : (_e.needReadable = false, _e.emittedReadable || (_e.emittedReadable = true, $(Ve)));
            }
          }(se, xe);
          else if (pe || (Oe = function(Ve, _e) {
            var Be;
            Qe = _e, r.isBuffer(Qe) || Qe instanceof m || typeof _e == "string" || _e === void 0 || Ve.objectMode || (Be = new w("chunk", ["string", "Buffer", "Uint8Array"], _e));
            var Qe;
            return Be;
          }(xe, re)), Oe) N(se, Oe);
          else if (xe.objectMode || re && re.length > 0) if (typeof re == "string" || xe.objectMode || Object.getPrototypeOf(re) === r.prototype || (re = function(Ve) {
            return r.from(Ve);
          }(re)), Te) xe.endEmitted ? N(se, new q()) : j(se, xe, re, true);
          else if (xe.ended) N(se, new F());
          else {
            if (xe.destroyed) return false;
            xe.reading = false, xe.decoder && !ge ? (re = xe.decoder.write(re), xe.objectMode || re.length !== 0 ? j(se, xe, re, false) : X(se, xe)) : j(se, xe, re, false);
          }
          else Te || (xe.reading = false, X(se, xe));
          return !xe.ended && (xe.length < xe.highWaterMark || xe.length === 0);
        }
        function j(se, re, ge, Te) {
          re.flowing && re.length === 0 && !re.sync ? (re.awaitDrain = 0, se.emit("data", ge)) : (re.length += re.objectMode ? 1 : ge.length, Te ? re.buffer.unshift(ge) : re.buffer.push(ge), re.needReadable && ue(se)), X(se, re);
        }
        Object.defineProperty(x.prototype, "destroyed", { enumerable: false, get: function() {
          return this._readableState !== void 0 && this._readableState.destroyed;
        }, set: function(se) {
          this._readableState && (this._readableState.destroyed = se);
        } }), x.prototype.destroy = E.destroy, x.prototype._undestroy = E.undestroy, x.prototype._destroy = function(se, re) {
          re(se);
        }, x.prototype.push = function(se, re) {
          var ge, Te = this._readableState;
          return Te.objectMode ? ge = true : typeof se == "string" && ((re = re || Te.defaultEncoding) !== Te.encoding && (se = r.from(se, re), re = ""), ge = true), L(this, se, re, false, ge);
        }, x.prototype.unshift = function(se) {
          return L(this, se, null, true, false);
        }, x.prototype.isPaused = function() {
          return this._readableState.flowing === false;
        }, x.prototype.setEncoding = function(se) {
          l || (l = s(3141).I);
          var re = new l(se);
          this._readableState.decoder = re, this._readableState.encoding = this._readableState.decoder.encoding;
          for (var ge = this._readableState.buffer.head, Te = ""; ge !== null; ) Te += re.write(ge.data), ge = ge.next;
          return this._readableState.buffer.clear(), Te !== "" && this._readableState.buffer.push(Te), this._readableState.length = Te.length, this;
        };
        var z = 1073741824;
        function Z(se, re) {
          return se <= 0 || re.length === 0 && re.ended ? 0 : re.objectMode ? 1 : se != se ? re.flowing && re.length ? re.buffer.head.data.length : re.length : (se > re.highWaterMark && (re.highWaterMark = function(ge) {
            return ge >= z ? ge = z : (ge--, ge |= ge >>> 1, ge |= ge >>> 2, ge |= ge >>> 4, ge |= ge >>> 8, ge |= ge >>> 16, ge++), ge;
          }(se)), se <= re.length ? se : re.ended ? re.length : (re.needReadable = true, 0));
        }
        function ue(se) {
          var re = se._readableState;
          g("emitReadable", re.needReadable, re.emittedReadable), re.needReadable = false, re.emittedReadable || (g("emitReadable", re.flowing), re.emittedReadable = true, process.nextTick($, se));
        }
        function $(se) {
          var re = se._readableState;
          g("emitReadable_", re.destroyed, re.length, re.ended), re.destroyed || !re.length && !re.ended || (se.emit("readable"), re.emittedReadable = false), re.needReadable = !re.flowing && !re.ended && re.length <= re.highWaterMark, K(se);
        }
        function X(se, re) {
          re.readingMore || (re.readingMore = true, process.nextTick(J, se, re));
        }
        function J(se, re) {
          for (; !re.reading && !re.ended && (re.length < re.highWaterMark || re.flowing && re.length === 0); ) {
            var ge = re.length;
            if (g("maybeReadMore read 0"), se.read(0), ge === re.length) break;
          }
          re.readingMore = false;
        }
        function B(se) {
          var re = se._readableState;
          re.readableListening = se.listenerCount("readable") > 0, re.resumeScheduled && !re.paused ? re.flowing = true : se.listenerCount("data") > 0 && se.resume();
        }
        function Q(se) {
          g("readable nexttick read 0"), se.read(0);
        }
        function ne(se, re) {
          g("resume", re.reading), re.reading || se.read(0), re.resumeScheduled = false, se.emit("resume"), K(se), re.flowing && !re.reading && se.read(0);
        }
        function K(se) {
          var re = se._readableState;
          for (g("flow", re.flowing); re.flowing && se.read() !== null; ) ;
        }
        function ie(se, re) {
          return re.length === 0 ? null : (re.objectMode ? ge = re.buffer.shift() : !se || se >= re.length ? (ge = re.decoder ? re.buffer.join("") : re.buffer.length === 1 ? re.buffer.first() : re.buffer.concat(re.length), re.buffer.clear()) : ge = re.buffer.consume(se, re.decoder), ge);
          var ge;
        }
        function ce(se) {
          var re = se._readableState;
          g("endReadable", re.endEmitted), re.endEmitted || (re.ended = true, process.nextTick(ye, re, se));
        }
        function ye(se, re) {
          if (g("endReadableNT", se.endEmitted, se.length), !se.endEmitted && se.length === 0 && (se.endEmitted = true, re.readable = false, re.emit("end"), se.autoDestroy)) {
            var ge = re._writableState;
            (!ge || ge.autoDestroy && ge.finished) && re.destroy();
          }
        }
        function oe(se, re) {
          for (var ge = 0, Te = se.length; ge < Te; ge++) if (se[ge] === re) return ge;
          return -1;
        }
        x.prototype.read = function(se) {
          g("read", se), se = parseInt(se, 10);
          var re = this._readableState, ge = se;
          if (se !== 0 && (re.emittedReadable = false), se === 0 && re.needReadable && ((re.highWaterMark !== 0 ? re.length >= re.highWaterMark : re.length > 0) || re.ended)) return g("read: emitReadable", re.length, re.ended), re.length === 0 && re.ended ? ce(this) : ue(this), null;
          if ((se = Z(se, re)) === 0 && re.ended) return re.length === 0 && ce(this), null;
          var Te, pe = re.needReadable;
          return g("need readable", pe), (re.length === 0 || re.length - se < re.highWaterMark) && g("length less than watermark", pe = true), re.ended || re.reading ? g("reading or ended", pe = false) : pe && (g("do read"), re.reading = true, re.sync = true, re.length === 0 && (re.needReadable = true), this._read(re.highWaterMark), re.sync = false, re.reading || (se = Z(ge, re))), (Te = se > 0 ? ie(se, re) : null) === null ? (re.needReadable = re.length <= re.highWaterMark, se = 0) : (re.length -= se, re.awaitDrain = 0), re.length === 0 && (re.ended || (re.needReadable = true), ge !== se && re.ended && ce(this)), Te !== null && this.emit("data", Te), Te;
        }, x.prototype._read = function(se) {
          N(this, new I("_read()"));
        }, x.prototype.pipe = function(se, re) {
          var ge = this, Te = this._readableState;
          switch (Te.pipesCount) {
            case 0:
              Te.pipes = se;
              break;
            case 1:
              Te.pipes = [Te.pipes, se];
              break;
            default:
              Te.pipes.push(se);
          }
          Te.pipesCount += 1, g("pipe count=%d opts=%j", Te.pipesCount, re);
          var pe = (!re || re.end !== false) && se !== process.stdout && se !== process.stderr ? xe : T;
          function Oe(O, V) {
            g("onunpipe"), O === ge && V && V.hasUnpiped === false && (V.hasUnpiped = true, g("cleanup"), se.removeListener("close", ee), se.removeListener("finish", P), se.removeListener("drain", Ve), se.removeListener("error", Qe), se.removeListener("unpipe", Oe), ge.removeListener("end", xe), ge.removeListener("end", T), ge.removeListener("data", Be), _e = true, !Te.awaitDrain || se._writableState && !se._writableState.needDrain || Ve());
          }
          function xe() {
            g("onend"), se.end();
          }
          Te.endEmitted ? process.nextTick(pe) : ge.once("end", pe), se.on("unpipe", Oe);
          var Ve = /* @__PURE__ */ function(O) {
            return function() {
              var V = O._readableState;
              g("pipeOnDrain", V.awaitDrain), V.awaitDrain && V.awaitDrain--, V.awaitDrain === 0 && h(O, "data") && (V.flowing = true, K(O));
            };
          }(ge);
          se.on("drain", Ve);
          var _e = false;
          function Be(O) {
            g("ondata");
            var V = se.write(O);
            g("dest.write", V), V === false && ((Te.pipesCount === 1 && Te.pipes === se || Te.pipesCount > 1 && oe(Te.pipes, se) !== -1) && !_e && (g("false write response, pause", Te.awaitDrain), Te.awaitDrain++), ge.pause());
          }
          function Qe(O) {
            g("onerror", O), T(), se.removeListener("error", Qe), h(se, "error") === 0 && N(se, O);
          }
          function ee() {
            se.removeListener("finish", P), T();
          }
          function P() {
            g("onfinish"), se.removeListener("close", ee), T();
          }
          function T() {
            g("unpipe"), ge.unpipe(se);
          }
          return ge.on("data", Be), function(O, V, D) {
            if (typeof O.prependListener == "function") return O.prependListener(V, D);
            O._events && O._events[V] ? Array.isArray(O._events[V]) ? O._events[V].unshift(D) : O._events[V] = [D, O._events[V]] : O.on(V, D);
          }(se, "error", Qe), se.once("close", ee), se.once("finish", P), se.emit("pipe", ge), Te.flowing || (g("pipe resume"), ge.resume()), se;
        }, x.prototype.unpipe = function(se) {
          var re = this._readableState, ge = { hasUnpiped: false };
          if (re.pipesCount === 0) return this;
          if (re.pipesCount === 1) return se && se !== re.pipes || (se || (se = re.pipes), re.pipes = null, re.pipesCount = 0, re.flowing = false, se && se.emit("unpipe", this, ge)), this;
          if (!se) {
            var Te = re.pipes, pe = re.pipesCount;
            re.pipes = null, re.pipesCount = 0, re.flowing = false;
            for (var Oe = 0; Oe < pe; Oe++) Te[Oe].emit("unpipe", this, { hasUnpiped: false });
            return this;
          }
          var xe = oe(re.pipes, se);
          return xe === -1 || (re.pipes.splice(xe, 1), re.pipesCount -= 1, re.pipesCount === 1 && (re.pipes = re.pipes[0]), se.emit("unpipe", this, ge)), this;
        }, x.prototype.on = function(se, re) {
          var ge = f.prototype.on.call(this, se, re), Te = this._readableState;
          return se === "data" ? (Te.readableListening = this.listenerCount("readable") > 0, Te.flowing !== false && this.resume()) : se === "readable" && (Te.endEmitted || Te.readableListening || (Te.readableListening = Te.needReadable = true, Te.flowing = false, Te.emittedReadable = false, g("on readable", Te.length, Te.reading), Te.length ? ue(this) : Te.reading || process.nextTick(Q, this))), ge;
        }, x.prototype.addListener = x.prototype.on, x.prototype.removeListener = function(se, re) {
          var ge = f.prototype.removeListener.call(this, se, re);
          return se === "readable" && process.nextTick(B, this), ge;
        }, x.prototype.removeAllListeners = function(se) {
          var re = f.prototype.removeAllListeners.apply(this, arguments);
          return se !== "readable" && se !== void 0 || process.nextTick(B, this), re;
        }, x.prototype.resume = function() {
          var se = this._readableState;
          return se.flowing || (g("resume"), se.flowing = !se.readableListening, function(re, ge) {
            ge.resumeScheduled || (ge.resumeScheduled = true, process.nextTick(ne, re, ge));
          }(this, se)), se.paused = false, this;
        }, x.prototype.pause = function() {
          return g("call pause flowing=%j", this._readableState.flowing), this._readableState.flowing !== false && (g("pause"), this._readableState.flowing = false, this.emit("pause")), this._readableState.paused = true, this;
        }, x.prototype.wrap = function(se) {
          var re = this, ge = this._readableState, Te = false;
          for (var pe in se.on("end", function() {
            if (g("wrapped end"), ge.decoder && !ge.ended) {
              var xe = ge.decoder.end();
              xe && xe.length && re.push(xe);
            }
            re.push(null);
          }), se.on("data", function(xe) {
            g("wrapped data"), ge.decoder && (xe = ge.decoder.write(xe)), ge.objectMode && xe == null || (ge.objectMode || xe && xe.length) && (re.push(xe) || (Te = true, se.pause()));
          }), se) this[pe] === void 0 && typeof se[pe] == "function" && (this[pe] = /* @__PURE__ */ function(xe) {
            return function() {
              return se[xe].apply(se, arguments);
            };
          }(pe));
          for (var Oe = 0; Oe < H.length; Oe++) se.on(H[Oe], this.emit.bind(this, H[Oe]));
          return this._read = function(xe) {
            g("wrapped _read", xe), Te && (Te = false, se.resume());
          }, this;
        }, typeof Symbol == "function" && (x.prototype[Symbol.asyncIterator] = function() {
          return d === void 0 && (d = s(2955)), d(this);
        }), Object.defineProperty(x.prototype, "readableHighWaterMark", { enumerable: false, get: function() {
          return this._readableState.highWaterMark;
        } }), Object.defineProperty(x.prototype, "readableBuffer", { enumerable: false, get: function() {
          return this._readableState && this._readableState.buffer;
        } }), Object.defineProperty(x.prototype, "readableFlowing", { enumerable: false, get: function() {
          return this._readableState.flowing;
        }, set: function(se) {
          this._readableState && (this._readableState.flowing = se);
        } }), x._fromList = ie, Object.defineProperty(x.prototype, "readableLength", { enumerable: false, get: function() {
          return this._readableState.length;
        } }), typeof Symbol == "function" && (x.from = function(se, re) {
          return b === void 0 && (b = s(5157)), b(x, se, re);
        });
      }, 5479: (t, o, s) => {
        s.r(o), s.d(o, { InvalidChallengeError: () => R, buildChallengeTx: () => x, gatherTxSigners: () => ue, readChallengeTx: () => L, verifyChallengeTxSigners: () => z, verifyChallengeTxThreshold: () => j, verifyTxSignedBy: () => Z });
        var c = s(3209), h = s.n(c), f = s(356), r = s(3121);
        function m($) {
          return m = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(X) {
            return typeof X;
          } : function(X) {
            return X && typeof Symbol == "function" && X.constructor === Symbol && X !== Symbol.prototype ? "symbol" : typeof X;
          }, m($);
        }
        function g($, X) {
          for (var J = 0; J < X.length; J++) {
            var B = X[J];
            B.enumerable = B.enumerable || false, B.configurable = true, "value" in B && (B.writable = true), Object.defineProperty($, a(B.key), B);
          }
        }
        function a($) {
          var X = function(J, B) {
            if (m(J) != "object" || !J) return J;
            var Q = J[Symbol.toPrimitive];
            if (Q !== void 0) {
              var ne = Q.call(J, B);
              if (m(ne) != "object") return ne;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(J);
          }($, "string");
          return m(X) == "symbol" ? X : X + "";
        }
        function l($, X, J) {
          return X = E(X), function(B, Q) {
            if (Q && (m(Q) == "object" || typeof Q == "function")) return Q;
            if (Q !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(ne) {
              if (ne === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return ne;
            }(B);
          }($, b() ? Reflect.construct(X, J || [], E($).constructor) : X.apply($, J));
        }
        function d($) {
          var X = typeof Map == "function" ? /* @__PURE__ */ new Map() : void 0;
          return d = function(J) {
            if (J === null || !function(Q) {
              try {
                return Function.toString.call(Q).indexOf("[native code]") !== -1;
              } catch {
                return typeof Q == "function";
              }
            }(J)) return J;
            if (typeof J != "function") throw new TypeError("Super expression must either be null or a function");
            if (X !== void 0) {
              if (X.has(J)) return X.get(J);
              X.set(J, B);
            }
            function B() {
              return function(Q, ne, K) {
                if (b()) return Reflect.construct.apply(null, arguments);
                var ie = [null];
                ie.push.apply(ie, ne);
                var ce = new (Q.bind.apply(Q, ie))();
                return K && S(ce, K.prototype), ce;
              }(J, arguments, E(this).constructor);
            }
            return B.prototype = Object.create(J.prototype, { constructor: { value: B, enumerable: false, writable: true, configurable: true } }), S(B, J);
          }, d($);
        }
        function b() {
          try {
            var $ = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (b = function() {
            return !!$;
          })();
        }
        function S($, X) {
          return S = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(J, B) {
            return J.__proto__ = B, J;
          }, S($, X);
        }
        function E($) {
          return E = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(X) {
            return X.__proto__ || Object.getPrototypeOf(X);
          }, E($);
        }
        var R = function($) {
          function X(ne) {
            var K;
            (function(ce, ye) {
              if (!(ce instanceof ye)) throw new TypeError("Cannot call a class as a function");
            })(this, X);
            var ie = (this instanceof X ? this.constructor : void 0).prototype;
            return (K = l(this, X, [ne])).__proto__ = ie, K.constructor = X, K.name = "InvalidChallengeError", K;
          }
          return function(ne, K) {
            if (typeof K != "function" && K !== null) throw new TypeError("Super expression must either be null or a function");
            ne.prototype = Object.create(K && K.prototype, { constructor: { value: ne, writable: true, configurable: true } }), Object.defineProperty(ne, "prototype", { writable: false }), K && S(ne, K);
          }(X, $), J = X, B && g(J.prototype, B), Q && g(J, Q), Object.defineProperty(J, "prototype", { writable: false }), J;
          var J, B, Q;
        }(d(Error)), k = s(8287).Buffer;
        function w($) {
          return function(X) {
            if (Array.isArray(X)) return H(X);
          }($) || _($) || N($) || function() {
            throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
          }();
        }
        function F($, X) {
          var J = typeof Symbol < "u" && $[Symbol.iterator] || $["@@iterator"];
          if (!J) {
            if (Array.isArray($) || (J = N($)) || X) {
              J && ($ = J);
              var B = 0, Q = function() {
              };
              return { s: Q, n: function() {
                return B >= $.length ? { done: true } : { done: false, value: $[B++] };
              }, e: function(ce) {
                throw ce;
              }, f: Q };
            }
            throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
          }
          var ne, K = true, ie = false;
          return { s: function() {
            J = J.call($);
          }, n: function() {
            var ce = J.next();
            return K = ce.done, ce;
          }, e: function(ce) {
            ie = true, ne = ce;
          }, f: function() {
            try {
              K || J.return == null || J.return();
            } finally {
              if (ie) throw ne;
            }
          } };
        }
        function I($) {
          return I = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(X) {
            return typeof X;
          } : function(X) {
            return X && typeof Symbol == "function" && X.constructor === Symbol && X !== Symbol.prototype ? "symbol" : typeof X;
          }, I($);
        }
        function q($) {
          return function(X) {
            if (Array.isArray(X)) return X;
          }($) || _($) || N($) || function() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
          }();
        }
        function N($, X) {
          if ($) {
            if (typeof $ == "string") return H($, X);
            var J = {}.toString.call($).slice(8, -1);
            return J === "Object" && $.constructor && (J = $.constructor.name), J === "Map" || J === "Set" ? Array.from($) : J === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(J) ? H($, X) : void 0;
          }
        }
        function H($, X) {
          (X == null || X > $.length) && (X = $.length);
          for (var J = 0, B = Array(X); J < X; J++) B[J] = $[J];
          return B;
        }
        function _($) {
          if (typeof Symbol < "u" && $[Symbol.iterator] != null || $["@@iterator"] != null) return Array.from($);
        }
        function x($, X, J) {
          var B = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 300, Q = arguments.length > 4 ? arguments[4] : void 0, ne = arguments.length > 5 ? arguments[5] : void 0, K = arguments.length > 6 && arguments[6] !== void 0 ? arguments[6] : null, ie = arguments.length > 7 && arguments[7] !== void 0 ? arguments[7] : null, ce = arguments.length > 8 && arguments[8] !== void 0 ? arguments[8] : null;
          if (X.startsWith("M") && K) throw Error("memo cannot be used if clientAccountID is a muxed account");
          var ye = new f.Account($.publicKey(), "-1"), oe = Math.floor(Date.now() / 1e3), se = h()(48).toString("base64"), re = new f.TransactionBuilder(ye, { fee: f.BASE_FEE, networkPassphrase: Q, timebounds: { minTime: oe, maxTime: oe + B } }).addOperation(f.Operation.manageData({ name: "".concat(J, " auth"), value: se, source: X })).addOperation(f.Operation.manageData({ name: "web_auth_domain", value: ne, source: ye.accountId() }));
          if (ie) {
            if (!ce) throw Error("clientSigningKey is required if clientDomain is provided");
            re.addOperation(f.Operation.manageData({ name: "client_domain", value: ie, source: ce }));
          }
          K && re.addMemo(f.Memo.id(K));
          var ge = re.build();
          return ge.sign($), ge.toEnvelope().toXDR("base64").toString();
        }
        function L($, X, J, B, Q) {
          var ne, K;
          if (X.startsWith("M")) throw Error("Invalid serverAccountID: multiplexed accounts are not supported.");
          try {
            K = new f.Transaction($, J);
          } catch {
            try {
              K = new f.FeeBumpTransaction($, J);
            } catch {
              throw new R("Invalid challenge: unable to deserialize challengeTx transaction string");
            }
            throw new R("Invalid challenge: expected a Transaction but received a FeeBumpTransaction");
          }
          if (Number.parseInt(K.sequence, 10) !== 0) throw new R("The transaction sequence number should be zero");
          if (K.source !== X) throw new R("The transaction source account is not equal to the server's account");
          if (K.operations.length < 1) throw new R("The transaction should contain at least one operation");
          var ie = q(K.operations), ce = ie[0], ye = ie.slice(1);
          if (!ce.source) throw new R("The transaction's operation should contain a source account");
          var oe, se = ce.source, re = null;
          if (K.memo.type !== f.MemoNone) {
            if (se.startsWith("M")) throw new R("The transaction has a memo but the client account ID is a muxed account");
            if (K.memo.type !== f.MemoID) throw new R("The transaction's memo must be of type `id`");
            re = K.memo.value;
          }
          if (ce.type !== "manageData") throw new R("The transaction's operation type should be 'manageData'");
          if (K.timeBounds && Number.parseInt((ne = K.timeBounds) === null || ne === void 0 ? void 0 : ne.maxTime, 10) === f.TimeoutInfinite) throw new R("The transaction requires non-infinite timebounds");
          if (!r.A.validateTimebounds(K, 300)) throw new R("The transaction has expired");
          if (ce.value === void 0) throw new R("The transaction's operation values should not be null");
          if (!ce.value) throw new R("The transaction's operation value should not be null");
          if (k.from(ce.value.toString(), "base64").length !== 48) throw new R("The transaction's operation value should be a 64 bytes base64 random string");
          if (!B) throw new R("Invalid homeDomains: a home domain must be provided for verification");
          if (typeof B == "string") "".concat(B, " auth") === ce.name && (oe = B);
          else {
            if (!Array.isArray(B)) throw new R("Invalid homeDomains: homeDomains type is ".concat(I(B), " but should be a string or an array"));
            oe = B.find(function(Oe) {
              return "".concat(Oe, " auth") === ce.name;
            });
          }
          if (!oe) throw new R("Invalid homeDomains: the transaction's operation key name does not match the expected home domain");
          var ge, Te = F(ye);
          try {
            for (Te.s(); !(ge = Te.n()).done; ) {
              var pe = ge.value;
              if (pe.type !== "manageData") throw new R("The transaction has operations that are not of type 'manageData'");
              if (pe.source !== X && pe.name !== "client_domain") throw new R("The transaction has operations that are unrecognized");
              if (pe.name === "web_auth_domain") {
                if (pe.value === void 0) throw new R("'web_auth_domain' operation value should not be null");
                if (pe.value.compare(k.from(Q))) throw new R("'web_auth_domain' operation value does not match ".concat(Q));
              }
            }
          } catch (Oe) {
            Te.e(Oe);
          } finally {
            Te.f();
          }
          if (!Z(K, X)) throw new R("Transaction not signed by server: '".concat(X, "'"));
          return { tx: K, clientAccountID: se, matchedHomeDomain: oe, memo: re };
        }
        function j($, X, J, B, Q, ne, K) {
          for (var ie = z($, X, J, Q.map(function(re) {
            return re.key;
          }), ne, K), ce = 0, ye = function() {
            var re, ge = se[oe], Te = ((re = Q.find(function(pe) {
              return pe.key === ge;
            })) === null || re === void 0 ? void 0 : re.weight) || 0;
            ce += Te;
          }, oe = 0, se = ie; oe < se.length; oe++) ye();
          if (ce < B) throw new R("signers with weight ".concat(ce, " do not meet threshold ").concat(B, '"'));
          return ie;
        }
        function z($, X, J, B, Q, ne) {
          var K, ie = L($, X, J, Q, ne).tx;
          try {
            K = f.Keypair.fromPublicKey(X);
          } catch (P) {
            throw new Error("Couldn't infer keypair from the provided 'serverAccountID': ".concat(P.message));
          }
          var ce, ye, oe = /* @__PURE__ */ new Set(), se = F(B);
          try {
            for (se.s(); !(ce = se.n()).done; ) {
              var re = ce.value;
              re !== K.publicKey() && re.charAt(0) === "G" && oe.add(re);
            }
          } catch (P) {
            se.e(P);
          } finally {
            se.f();
          }
          if (oe.size === 0) throw new R("No verifiable client signers provided, at least one G... address must be provided");
          var ge, Te = F(ie.operations);
          try {
            for (Te.s(); !(ge = Te.n()).done; ) {
              var pe = ge.value;
              if (pe.type === "manageData" && pe.name === "client_domain") {
                if (ye) throw new R("Found more than one client_domain operation");
                ye = pe.source;
              }
            }
          } catch (P) {
            Te.e(P);
          } finally {
            Te.f();
          }
          var Oe = [K.publicKey()].concat(w(Array.from(oe)));
          ye && Oe.push(ye);
          for (var xe = ue(ie, Oe), Ve = false, _e = false, Be = 0, Qe = xe; Be < Qe.length; Be++) {
            var ee = Qe[Be];
            ee === K.publicKey() && (Ve = true), ee === ye && (_e = true);
          }
          if (!Ve) throw new R("Transaction not signed by server: '".concat(K.publicKey(), "'"));
          if (ye && !_e) throw new R("Transaction not signed by the source account of the 'client_domain' ManageData operation");
          if (xe.length === 1) throw new R("None of the given signers match the transaction signatures");
          if (xe.length !== ie.signatures.length) throw new R("Transaction has unrecognized signatures");
          return xe.splice(xe.indexOf(K.publicKey()), 1), ye && xe.splice(xe.indexOf(ye), 1), xe;
        }
        function Z($, X) {
          return ue($, [X]).length !== 0;
        }
        function ue($, X) {
          var J, B = $.hash(), Q = w($.signatures), ne = /* @__PURE__ */ new Set(), K = F(X);
          try {
            for (K.s(); !(J = K.n()).done; ) {
              var ie = J.value;
              if (Q.length === 0) break;
              var ce = void 0;
              try {
                ce = f.Keypair.fromPublicKey(ie);
              } catch (se) {
                throw new R("Signer is not a valid address: ".concat(se.message));
              }
              for (var ye = 0; ye < Q.length; ye++) {
                var oe = Q[ye];
                if (oe.hint().equals(ce.signatureHint()) && ce.verify(B, oe.signature())) {
                  ne.add(ie), Q.splice(ye, 1);
                  break;
                }
              }
            }
          } catch (se) {
            K.e(se);
          } finally {
            K.f();
          }
          return Array.from(ne);
        }
      }, 5487: (t, o, s) => {
        function c(d) {
          return c = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(b) {
            return typeof b;
          } : function(b) {
            return b && typeof Symbol == "function" && b.constructor === Symbol && b !== Symbol.prototype ? "symbol" : typeof b;
          }, c(d);
        }
        Object.defineProperty(o, "__esModule", { value: true }), o.Int128 = void 0;
        var h = s(3740);
        function f(d, b) {
          for (var S = 0; S < b.length; S++) {
            var E = b[S];
            E.enumerable = E.enumerable || false, E.configurable = true, "value" in E && (E.writable = true), Object.defineProperty(d, r(E.key), E);
          }
        }
        function r(d) {
          var b = function(S, E) {
            if (c(S) != "object" || !S) return S;
            var R = S[Symbol.toPrimitive];
            if (R !== void 0) {
              var k = R.call(S, E);
              if (c(k) != "object") return k;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(S);
          }(d, "string");
          return c(b) == "symbol" ? b : b + "";
        }
        function m(d, b, S) {
          return b = a(b), function(E, R) {
            if (R && (c(R) == "object" || typeof R == "function")) return R;
            if (R !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(k) {
              if (k === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return k;
            }(E);
          }(d, g() ? Reflect.construct(b, S || [], a(d).constructor) : b.apply(d, S));
        }
        function g() {
          try {
            var d = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (g = function() {
            return !!d;
          })();
        }
        function a(d) {
          return a = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(b) {
            return b.__proto__ || Object.getPrototypeOf(b);
          }, a(d);
        }
        function l(d, b) {
          return l = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(S, E) {
            return S.__proto__ = E, S;
          }, l(d, b);
        }
        (o.Int128 = function(d) {
          function b() {
            (function(I, q) {
              if (!(I instanceof q)) throw new TypeError("Cannot call a class as a function");
            })(this, b);
            for (var k = arguments.length, w = new Array(k), F = 0; F < k; F++) w[F] = arguments[F];
            return m(this, b, [w]);
          }
          return function(k, w) {
            if (typeof w != "function" && w !== null) throw new TypeError("Super expression must either be null or a function");
            k.prototype = Object.create(w && w.prototype, { constructor: { value: k, writable: true, configurable: true } }), Object.defineProperty(k, "prototype", { writable: false }), w && l(k, w);
          }(b, d), S = b, (E = [{ key: "unsigned", get: function() {
            return false;
          } }, { key: "size", get: function() {
            return 128;
          } }]) && f(S.prototype, E), R && f(S, R), Object.defineProperty(S, "prototype", { writable: false }), S;
          var S, E, R;
        }(h.LargeInt)).defineIntBoundaries();
      }, 5537: (t, o, s) => {
        var c = s(8287).Buffer, h = s(6688), f = s(6698), r = s(6917), m = s(8399), g = r.IncomingMessage, a = r.readyStates, l = t.exports = function(b) {
          var S, E = this;
          m.Writable.call(E), E._opts = b, E._body = [], E._headers = {}, b.auth && E.setHeader("Authorization", "Basic " + c.from(b.auth).toString("base64")), Object.keys(b.headers).forEach(function(k) {
            E.setHeader(k, b.headers[k]);
          });
          var R = true;
          if (b.mode === "disable-fetch" || "requestTimeout" in b && !h.abortController) R = false, S = true;
          else if (b.mode === "prefer-streaming") S = false;
          else if (b.mode === "allow-wrong-content-type") S = !h.overrideMimeType;
          else {
            if (b.mode && b.mode !== "default" && b.mode !== "prefer-fast") throw new Error("Invalid value for opts.mode");
            S = true;
          }
          E._mode = function(k, w) {
            return h.fetch && w ? "fetch" : h.mozchunkedarraybuffer ? "moz-chunked-arraybuffer" : h.msstream ? "ms-stream" : h.arraybuffer && k ? "arraybuffer" : "text";
          }(S, R), E._fetchTimer = null, E._socketTimeout = null, E._socketTimer = null, E.on("finish", function() {
            E._onFinish();
          });
        };
        f(l, m.Writable), l.prototype.setHeader = function(b, S) {
          var E = b.toLowerCase();
          d.indexOf(E) === -1 && (this._headers[E] = { name: b, value: S });
        }, l.prototype.getHeader = function(b) {
          var S = this._headers[b.toLowerCase()];
          return S ? S.value : null;
        }, l.prototype.removeHeader = function(b) {
          delete this._headers[b.toLowerCase()];
        }, l.prototype._onFinish = function() {
          var b = this;
          if (!b._destroyed) {
            var S = b._opts;
            "timeout" in S && S.timeout !== 0 && b.setTimeout(S.timeout);
            var E = b._headers, R = null;
            S.method !== "GET" && S.method !== "HEAD" && (R = new Blob(b._body, { type: (E["content-type"] || {}).value || "" }));
            var k = [];
            if (Object.keys(E).forEach(function(q) {
              var N = E[q].name, H = E[q].value;
              Array.isArray(H) ? H.forEach(function(_) {
                k.push([N, _]);
              }) : k.push([N, H]);
            }), b._mode === "fetch") {
              var w = null;
              if (h.abortController) {
                var F = new AbortController();
                w = F.signal, b._fetchAbortController = F, "requestTimeout" in S && S.requestTimeout !== 0 && (b._fetchTimer = s.g.setTimeout(function() {
                  b.emit("requestTimeout"), b._fetchAbortController && b._fetchAbortController.abort();
                }, S.requestTimeout));
              }
              s.g.fetch(b._opts.url, { method: b._opts.method, headers: k, body: R || void 0, mode: "cors", credentials: S.withCredentials ? "include" : "same-origin", signal: w }).then(function(q) {
                b._fetchResponse = q, b._resetTimers(false), b._connect();
              }, function(q) {
                b._resetTimers(true), b._destroyed || b.emit("error", q);
              });
            } else {
              var I = b._xhr = new s.g.XMLHttpRequest();
              try {
                I.open(b._opts.method, b._opts.url, true);
              } catch (q) {
                return void process.nextTick(function() {
                  b.emit("error", q);
                });
              }
              "responseType" in I && (I.responseType = b._mode), "withCredentials" in I && (I.withCredentials = !!S.withCredentials), b._mode === "text" && "overrideMimeType" in I && I.overrideMimeType("text/plain; charset=x-user-defined"), "requestTimeout" in S && (I.timeout = S.requestTimeout, I.ontimeout = function() {
                b.emit("requestTimeout");
              }), k.forEach(function(q) {
                I.setRequestHeader(q[0], q[1]);
              }), b._response = null, I.onreadystatechange = function() {
                switch (I.readyState) {
                  case a.LOADING:
                  case a.DONE:
                    b._onXHRProgress();
                }
              }, b._mode === "moz-chunked-arraybuffer" && (I.onprogress = function() {
                b._onXHRProgress();
              }), I.onerror = function() {
                b._destroyed || (b._resetTimers(true), b.emit("error", new Error("XHR error")));
              };
              try {
                I.send(R);
              } catch (q) {
                return void process.nextTick(function() {
                  b.emit("error", q);
                });
              }
            }
          }
        }, l.prototype._onXHRProgress = function() {
          var b = this;
          b._resetTimers(false), function(S) {
            try {
              var E = S.status;
              return E !== null && E !== 0;
            } catch {
              return false;
            }
          }(b._xhr) && !b._destroyed && (b._response || b._connect(), b._response._onXHRProgress(b._resetTimers.bind(b)));
        }, l.prototype._connect = function() {
          var b = this;
          b._destroyed || (b._response = new g(b._xhr, b._fetchResponse, b._mode, b._resetTimers.bind(b)), b._response.on("error", function(S) {
            b.emit("error", S);
          }), b.emit("response", b._response));
        }, l.prototype._write = function(b, S, E) {
          this._body.push(b), E();
        }, l.prototype._resetTimers = function(b) {
          var S = this;
          s.g.clearTimeout(S._socketTimer), S._socketTimer = null, b ? (s.g.clearTimeout(S._fetchTimer), S._fetchTimer = null) : S._socketTimeout && (S._socketTimer = s.g.setTimeout(function() {
            S.emit("timeout");
          }, S._socketTimeout));
        }, l.prototype.abort = l.prototype.destroy = function(b) {
          var S = this;
          S._destroyed = true, S._resetTimers(true), S._response && (S._response._destroyed = true), S._xhr ? S._xhr.abort() : S._fetchAbortController && S._fetchAbortController.abort(), b && S.emit("error", b);
        }, l.prototype.end = function(b, S, E) {
          typeof b == "function" && (E = b, b = void 0), m.Writable.prototype.end.call(this, b, S, E);
        }, l.prototype.setTimeout = function(b, S) {
          var E = this;
          S && E.once("timeout", S), E._socketTimeout = b, E._resetTimers(false);
        }, l.prototype.flushHeaders = function() {
        }, l.prototype.setNoDelay = function() {
        }, l.prototype.setSocketKeepAlive = function() {
        };
        var d = ["accept-charset", "accept-encoding", "access-control-request-headers", "access-control-request-method", "connection", "content-length", "cookie", "cookie2", "date", "dnt", "expect", "host", "keep-alive", "origin", "referer", "te", "trailer", "transfer-encoding", "upgrade", "via"];
      }, 5546: (t) => {
        t.exports = function() {
          function o(s, c, h, f, r, m) {
            this.message = s, this.expected = c, this.found = h, this.offset = f, this.line = r, this.column = m, this.name = "SyntaxError";
          }
          return function(s, c) {
            function h() {
              this.constructor = s;
            }
            h.prototype = c.prototype, s.prototype = new h();
          }(o, Error), { SyntaxError: o, parse: function(s) {
            var c, h = arguments.length > 1 ? arguments[1] : {}, f = {}, r = { start: en }, m = en, g = function() {
              return Ht;
            }, a = f, l = "#", d = { type: "literal", value: "#", description: '"#"' }, b = void 0, S = { type: "any", description: "any character" }, E = "[", R = { type: "literal", value: "[", description: '"["' }, k = "]", w = { type: "literal", value: "]", description: '"]"' }, F = function(Ee) {
              tr(Sr("ObjectPath", Ee, Yt, cr));
            }, I = function(Ee) {
              tr(Sr("ArrayPath", Ee, Yt, cr));
            }, q = function(Ee, ot) {
              return Ee.concat(ot);
            }, N = function(Ee) {
              return [Ee];
            }, H = function(Ee) {
              return Ee;
            }, _ = ".", x = { type: "literal", value: ".", description: '"."' }, L = "=", j = { type: "literal", value: "=", description: '"="' }, z = function(Ee, ot) {
              tr(Sr("Assign", ot, Yt, cr, Ee));
            }, Z = function(Ee) {
              return Ee.join("");
            }, ue = function(Ee) {
              return Ee.value;
            }, $ = '"""', X = { type: "literal", value: '"""', description: '"\\"\\"\\""' }, J = null, B = function(Ee) {
              return Sr("String", Ee.join(""), Yt, cr);
            }, Q = '"', ne = { type: "literal", value: '"', description: '"\\""' }, K = "'''", ie = { type: "literal", value: "'''", description: `"'''"` }, ce = "'", ye = { type: "literal", value: "'", description: `"'"` }, oe = function(Ee) {
              return Ee;
            }, se = function(Ee) {
              return Ee;
            }, re = "\\", ge = { type: "literal", value: "\\", description: '"\\\\"' }, Te = function() {
              return "";
            }, pe = "e", Oe = { type: "literal", value: "e", description: '"e"' }, xe = "E", Ve = { type: "literal", value: "E", description: '"E"' }, _e = function(Ee, ot) {
              return Sr("Float", parseFloat(Ee + "e" + ot), Yt, cr);
            }, Be = function(Ee) {
              return Sr("Float", parseFloat(Ee), Yt, cr);
            }, Qe = "+", ee = { type: "literal", value: "+", description: '"+"' }, P = function(Ee) {
              return Ee.join("");
            }, T = "-", O = { type: "literal", value: "-", description: '"-"' }, V = function(Ee) {
              return "-" + Ee.join("");
            }, D = function(Ee) {
              return Sr("Integer", parseInt(Ee, 10), Yt, cr);
            }, C = "true", p = { type: "literal", value: "true", description: '"true"' }, A = function() {
              return Sr("Boolean", true, Yt, cr);
            }, U = "false", Y = { type: "literal", value: "false", description: '"false"' }, ae = function() {
              return Sr("Boolean", false, Yt, cr);
            }, W = function() {
              return Sr("Array", [], Yt, cr);
            }, de = function(Ee) {
              return Sr("Array", Ee ? [Ee] : [], Yt, cr);
            }, tt = function(Ee) {
              return Sr("Array", Ee, Yt, cr);
            }, Ne = function(Ee, ot) {
              return Sr("Array", Ee.concat(ot), Yt, cr);
            }, ut = function(Ee) {
              return Ee;
            }, Ze = ",", Et = { type: "literal", value: ",", description: '","' }, rr = "{", je = { type: "literal", value: "{", description: '"{"' }, Ge = "}", at = { type: "literal", value: "}", description: '"}"' }, Ae = function(Ee) {
              return Sr("InlineTable", Ee, Yt, cr);
            }, qe = function(Ee, ot) {
              return Sr("InlineTableValue", ot, Yt, cr, Ee);
            }, Ft = function(Ee) {
              return "." + Ee;
            }, Dt = function(Ee) {
              return Ee.join("");
            }, wr = ":", Nt = { type: "literal", value: ":", description: '":"' }, yr = function(Ee) {
              return Ee.join("");
            }, Ur = "T", Pe = { type: "literal", value: "T", description: '"T"' }, $e = "Z", le = { type: "literal", value: "Z", description: '"Z"' }, te = function(Ee, ot) {
              return Sr("Date", /* @__PURE__ */ new Date(Ee + "T" + ot + "Z"), Yt, cr);
            }, Le = function(Ee, ot) {
              return Sr("Date", /* @__PURE__ */ new Date(Ee + "T" + ot), Yt, cr);
            }, nt = /^[ \t]/, ft = { type: "class", value: "[ \\t]", description: "[ \\t]" }, zt = `
`, st = { type: "literal", value: `
`, description: '"\\n"' }, ct = "\r", yt = { type: "literal", value: "\r", description: '"\\r"' }, Zt = /^[0-9a-f]/i, Ct = { type: "class", value: "[0-9a-f]i", description: "[0-9a-f]i" }, Lt = /^[0-9]/, Wt = { type: "class", value: "[0-9]", description: "[0-9]" }, vr = "_", ar = { type: "literal", value: "_", description: '"_"' }, sr = function() {
              return "";
            }, gr = /^[A-Za-z0-9_\-]/, Tr = { type: "class", value: "[A-Za-z0-9_\\-]", description: "[A-Za-z0-9_\\-]" }, Mr = function(Ee) {
              return Ee.join("");
            }, Nr = '\\"', Lr = { type: "literal", value: '\\"', description: '"\\\\\\""' }, jr = function() {
              return '"';
            }, Hr = "\\\\", kr = { type: "literal", value: "\\\\", description: '"\\\\\\\\"' }, Xt = function() {
              return "\\";
            }, Qt = "\\b", br = { type: "literal", value: "\\b", description: '"\\\\b"' }, we = function() {
              return "\b";
            }, me = "\\t", ze = { type: "literal", value: "\\t", description: '"\\\\t"' }, rt = function() {
              return "	";
            }, Tt = "\\n", Ot = { type: "literal", value: "\\n", description: '"\\\\n"' }, It = function() {
              return `
`;
            }, We = "\\f", mt = { type: "literal", value: "\\f", description: '"\\\\f"' }, Gt = function() {
              return "\f";
            }, ir = "\\r", dr = { type: "literal", value: "\\r", description: '"\\\\r"' }, hr = function() {
              return "\r";
            }, Fr = "\\U", Gr = { type: "literal", value: "\\U", description: '"\\\\U"' }, Br = function(Ee) {
              return function(ot, Mt, gt) {
                var Rt = parseInt("0x" + ot);
                if (!(!isFinite(Rt) || Math.floor(Rt) != Rt || Rt < 0 || Rt > 1114111 || Rt > 55295 && Rt < 57344)) return function() {
                  var or, nr, Yr = 16384, Xr = [], $r = -1, un = arguments.length;
                  if (!un) return "";
                  for (var Kr = ""; ++$r < un; ) {
                    var Ir = Number(arguments[$r]);
                    Ir <= 65535 ? Xr.push(Ir) : (or = 55296 + ((Ir -= 65536) >> 10), nr = Ir % 1024 + 56320, Xr.push(or, nr)), ($r + 1 == un || Xr.length > Yr) && (Kr += String.fromCharCode.apply(null, Xr), Xr.length = 0);
                  }
                  return Kr;
                }(Rt);
                (function(or, nr, Yr) {
                  var Xr = new Error(or);
                  throw Xr.line = nr, Xr.column = Yr, Xr;
                })("Invalid Unicode escape code: " + ot, Mt, gt);
              }(Ee.join(""));
            }, Dr = "\\u", Vr = { type: "literal", value: "\\u", description: '"\\\\u"' }, be = 0, Or = 0, Ue = 0, it = { line: 1, column: 1, seenCR: false }, dt = 0, vt = [], wt = 0, Pt = {};
            if ("startRule" in h) {
              if (!(h.startRule in r)) throw new Error(`Can't start parsing from rule "` + h.startRule + '".');
              m = r[h.startRule];
            }
            function Yt() {
              return qr(Or).line;
            }
            function cr() {
              return qr(Or).column;
            }
            function qr(Ee) {
              return Ue !== Ee && (Ue > Ee && (Ue = 0, it = { line: 1, column: 1, seenCR: false }), function(ot, Mt, gt) {
                var Rt, or;
                for (Rt = Mt; Rt < gt; Rt++) (or = s.charAt(Rt)) === `
` ? (ot.seenCR || ot.line++, ot.column = 1, ot.seenCR = false) : or === "\r" || or === "\u2028" || or === "\u2029" ? (ot.line++, ot.column = 1, ot.seenCR = true) : (ot.column++, ot.seenCR = false);
              }(it, Ue, Ee), Ue = Ee), it;
            }
            function Vt(Ee) {
              be < dt || (be > dt && (dt = be, vt = []), vt.push(Ee));
            }
            function zr(Ee, ot, Mt) {
              var gt = qr(Mt), Rt = Mt < s.length ? s.charAt(Mt) : null;
              return ot !== null && function(or) {
                var nr = 1;
                for (or.sort(function(Yr, Xr) {
                  return Yr.description < Xr.description ? -1 : Yr.description > Xr.description ? 1 : 0;
                }); nr < or.length; ) or[nr - 1] === or[nr] ? or.splice(nr, 1) : nr++;
              }(ot), new o(function(or, nr) {
                var Yr, Xr = new Array(or.length);
                for (Yr = 0; Yr < or.length; Yr++) Xr[Yr] = or[Yr].description;
                return "Expected " + (or.length > 1 ? Xr.slice(0, -1).join(", ") + " or " + Xr[or.length - 1] : Xr[0]) + " but " + (nr ? '"' + function($r) {
                  function un(Kr) {
                    return Kr.charCodeAt(0).toString(16).toUpperCase();
                  }
                  return $r.replace(/\\/g, "\\\\").replace(/"/g, '\\"').replace(/\x08/g, "\\b").replace(/\t/g, "\\t").replace(/\n/g, "\\n").replace(/\f/g, "\\f").replace(/\r/g, "\\r").replace(/[\x00-\x07\x0B\x0E\x0F]/g, function(Kr) {
                    return "\\x0" + un(Kr);
                  }).replace(/[\x10-\x1F\x80-\xFF]/g, function(Kr) {
                    return "\\x" + un(Kr);
                  }).replace(/[\u0180-\u0FFF]/g, function(Kr) {
                    return "\\u0" + un(Kr);
                  }).replace(/[\u1080-\uFFFF]/g, function(Kr) {
                    return "\\u" + un(Kr);
                  });
                }(nr) + '"' : "end of input") + " found.";
              }(ot, Rt), ot, Rt, Mt, gt.line, gt.column);
            }
            function en() {
              var Ee, ot, Mt, gt = 49 * be + 0, Rt = Pt[gt];
              if (Rt) return be = Rt.nextPos, Rt.result;
              for (Ee = be, ot = [], Mt = Me(); Mt !== f; ) ot.push(Mt), Mt = Me();
              return ot !== f && (Or = Ee, ot = g()), Ee = ot, Pt[gt] = { nextPos: be, result: Ee }, Ee;
            }
            function Me() {
              var Ee, ot, Mt, gt, Rt, or, nr, Yr = 49 * be + 1, Xr = Pt[Yr];
              if (Xr) return be = Xr.nextPos, Xr.result;
              for (Ee = be, ot = [], Mt = M(); Mt !== f; ) ot.push(Mt), Mt = M();
              if (ot !== f) if (Mt = function() {
                var $r, un = 49 * be + 2, Kr = Pt[un];
                return Kr ? (be = Kr.nextPos, Kr.result) : ($r = De(), $r === f && ($r = function() {
                  var Ir, An, En, Sn, On, gn, Bn = 49 * be + 4, jn = Pt[Bn];
                  if (jn) return be = jn.nextPos, jn.result;
                  if (Ir = be, s.charCodeAt(be) === 91 ? (An = E, be++) : (An = f, wt === 0 && Vt(R)), An !== f) {
                    for (En = [], Sn = M(); Sn !== f; ) En.push(Sn), Sn = M();
                    if (En !== f) if ((Sn = Ke()) !== f) {
                      for (On = [], gn = M(); gn !== f; ) On.push(gn), gn = M();
                      On !== f ? (s.charCodeAt(be) === 93 ? (gn = k, be++) : (gn = f, wt === 0 && Vt(w)), gn !== f ? (Or = Ir, Ir = An = F(Sn)) : (be = Ir, Ir = a)) : (be = Ir, Ir = a);
                    } else be = Ir, Ir = a;
                    else be = Ir, Ir = a;
                  } else be = Ir, Ir = a;
                  return Pt[Bn] = { nextPos: be, result: Ir }, Ir;
                }(), $r === f && ($r = function() {
                  var Ir, An, En, Sn, On, gn, Bn, jn, qn = 49 * be + 5, Qn = Pt[qn];
                  if (Qn) return be = Qn.nextPos, Qn.result;
                  if (Ir = be, s.charCodeAt(be) === 91 ? (An = E, be++) : (An = f, wt === 0 && Vt(R)), An !== f) if (s.charCodeAt(be) === 91 ? (En = E, be++) : (En = f, wt === 0 && Vt(R)), En !== f) {
                    for (Sn = [], On = M(); On !== f; ) Sn.push(On), On = M();
                    if (Sn !== f) if ((On = Ke()) !== f) {
                      for (gn = [], Bn = M(); Bn !== f; ) gn.push(Bn), Bn = M();
                      gn !== f ? (s.charCodeAt(be) === 93 ? (Bn = k, be++) : (Bn = f, wt === 0 && Vt(w)), Bn !== f ? (s.charCodeAt(be) === 93 ? (jn = k, be++) : (jn = f, wt === 0 && Vt(w)), jn !== f ? (Or = Ir, Ir = An = I(On)) : (be = Ir, Ir = a)) : (be = Ir, Ir = a)) : (be = Ir, Ir = a);
                    } else be = Ir, Ir = a;
                    else be = Ir, Ir = a;
                  } else be = Ir, Ir = a;
                  else be = Ir, Ir = a;
                  return Pt[qn] = { nextPos: be, result: Ir }, Ir;
                }(), $r === f && ($r = function() {
                  var Ir, An, En, Sn, On, gn, Bn = 49 * be + 9, jn = Pt[Bn];
                  if (jn) return be = jn.nextPos, jn.result;
                  if (Ir = be, An = ur(), An !== f) {
                    for (En = [], Sn = M(); Sn !== f; ) En.push(Sn), Sn = M();
                    if (En !== f) if (s.charCodeAt(be) === 61 ? (Sn = L, be++) : (Sn = f, wt === 0 && Vt(j)), Sn !== f) {
                      for (On = [], gn = M(); gn !== f; ) On.push(gn), gn = M();
                      On !== f && (gn = Wr()) !== f ? (Or = Ir, Ir = An = z(An, gn)) : (be = Ir, Ir = a);
                    } else be = Ir, Ir = a;
                    else be = Ir, Ir = a;
                  } else be = Ir, Ir = a;
                  if (Ir === f) if (Ir = be, (An = Cr()) !== f) {
                    for (En = [], Sn = M(); Sn !== f; ) En.push(Sn), Sn = M();
                    if (En !== f) if (s.charCodeAt(be) === 61 ? (Sn = L, be++) : (Sn = f, wt === 0 && Vt(j)), Sn !== f) {
                      for (On = [], gn = M(); gn !== f; ) On.push(gn), gn = M();
                      On !== f && (gn = Wr()) !== f ? (Or = Ir, Ir = An = z(An, gn)) : (be = Ir, Ir = a);
                    } else be = Ir, Ir = a;
                    else be = Ir, Ir = a;
                  } else be = Ir, Ir = a;
                  return Pt[Bn] = { nextPos: be, result: Ir }, Ir;
                }()))), Pt[un] = { nextPos: be, result: $r }, $r);
              }(), Mt !== f) {
                for (gt = [], Rt = M(); Rt !== f; ) gt.push(Rt), Rt = M();
                if (gt !== f) {
                  for (Rt = [], or = De(); or !== f; ) Rt.push(or), or = De();
                  if (Rt !== f) {
                    if (or = [], (nr = G()) !== f) for (; nr !== f; ) or.push(nr), nr = G();
                    else or = a;
                    or === f && (or = Se()), or !== f ? Ee = ot = [ot, Mt, gt, Rt, or] : (be = Ee, Ee = a);
                  } else be = Ee, Ee = a;
                } else be = Ee, Ee = a;
              } else be = Ee, Ee = a;
              else be = Ee, Ee = a;
              if (Ee === f) {
                if (Ee = be, ot = [], (Mt = M()) !== f) for (; Mt !== f; ) ot.push(Mt), Mt = M();
                else ot = a;
                if (ot !== f) {
                  if (Mt = [], (gt = G()) !== f) for (; gt !== f; ) Mt.push(gt), gt = G();
                  else Mt = a;
                  Mt === f && (Mt = Se()), Mt !== f ? Ee = ot = [ot, Mt] : (be = Ee, Ee = a);
                } else be = Ee, Ee = a;
                Ee === f && (Ee = G());
              }
              return Pt[Yr] = { nextPos: be, result: Ee }, Ee;
            }
            function De() {
              var Ee, ot, Mt, gt, Rt, or, nr = 49 * be + 3, Yr = Pt[nr];
              if (Yr) return be = Yr.nextPos, Yr.result;
              if (Ee = be, s.charCodeAt(be) === 35 ? (ot = l, be++) : (ot = f, wt === 0 && Vt(d)), ot !== f) {
                for (Mt = [], gt = be, Rt = be, wt++, (or = G()) === f && (or = Se()), wt--, or === f ? Rt = b : (be = Rt, Rt = a), Rt !== f ? (s.length > be ? (or = s.charAt(be), be++) : (or = f, wt === 0 && Vt(S)), or !== f ? gt = Rt = [Rt, or] : (be = gt, gt = a)) : (be = gt, gt = a); gt !== f; ) Mt.push(gt), gt = be, Rt = be, wt++, (or = G()) === f && (or = Se()), wt--, or === f ? Rt = b : (be = Rt, Rt = a), Rt !== f ? (s.length > be ? (or = s.charAt(be), be++) : (or = f, wt === 0 && Vt(S)), or !== f ? gt = Rt = [Rt, or] : (be = gt, gt = a)) : (be = gt, gt = a);
                Mt !== f ? Ee = ot = [ot, Mt] : (be = Ee, Ee = a);
              } else be = Ee, Ee = a;
              return Pt[nr] = { nextPos: be, result: Ee }, Ee;
            }
            function Ke() {
              var Ee, ot, Mt, gt = 49 * be + 6, Rt = Pt[gt];
              if (Rt) return be = Rt.nextPos, Rt.result;
              if (Ee = be, ot = [], (Mt = St()) !== f) for (; Mt !== f; ) ot.push(Mt), Mt = St();
              else ot = a;
              return ot !== f && (Mt = Bt()) !== f ? (Or = Ee, Ee = ot = q(ot, Mt)) : (be = Ee, Ee = a), Ee === f && (Ee = be, (ot = Bt()) !== f && (Or = Ee, ot = N(ot)), Ee = ot), Pt[gt] = { nextPos: be, result: Ee }, Ee;
            }
            function Bt() {
              var Ee, ot, Mt, gt, Rt, or = 49 * be + 7, nr = Pt[or];
              if (nr) return be = nr.nextPos, nr.result;
              for (Ee = be, ot = [], Mt = M(); Mt !== f; ) ot.push(Mt), Mt = M();
              if (ot !== f) if ((Mt = ur()) !== f) {
                for (gt = [], Rt = M(); Rt !== f; ) gt.push(Rt), Rt = M();
                gt !== f ? (Or = Ee, Ee = ot = H(Mt)) : (be = Ee, Ee = a);
              } else be = Ee, Ee = a;
              else be = Ee, Ee = a;
              if (Ee === f) {
                for (Ee = be, ot = [], Mt = M(); Mt !== f; ) ot.push(Mt), Mt = M();
                if (ot !== f) if ((Mt = Cr()) !== f) {
                  for (gt = [], Rt = M(); Rt !== f; ) gt.push(Rt), Rt = M();
                  gt !== f ? (Or = Ee, Ee = ot = H(Mt)) : (be = Ee, Ee = a);
                } else be = Ee, Ee = a;
                else be = Ee, Ee = a;
              }
              return Pt[or] = { nextPos: be, result: Ee }, Ee;
            }
            function St() {
              var Ee, ot, Mt, gt, Rt, or, nr, Yr = 49 * be + 8, Xr = Pt[Yr];
              if (Xr) return be = Xr.nextPos, Xr.result;
              for (Ee = be, ot = [], Mt = M(); Mt !== f; ) ot.push(Mt), Mt = M();
              if (ot !== f) if ((Mt = ur()) !== f) {
                for (gt = [], Rt = M(); Rt !== f; ) gt.push(Rt), Rt = M();
                if (gt !== f) if (s.charCodeAt(be) === 46 ? (Rt = _, be++) : (Rt = f, wt === 0 && Vt(x)), Rt !== f) {
                  for (or = [], nr = M(); nr !== f; ) or.push(nr), nr = M();
                  or !== f ? (Or = Ee, Ee = ot = H(Mt)) : (be = Ee, Ee = a);
                } else be = Ee, Ee = a;
                else be = Ee, Ee = a;
              } else be = Ee, Ee = a;
              else be = Ee, Ee = a;
              if (Ee === f) {
                for (Ee = be, ot = [], Mt = M(); Mt !== f; ) ot.push(Mt), Mt = M();
                if (ot !== f) if ((Mt = Cr()) !== f) {
                  for (gt = [], Rt = M(); Rt !== f; ) gt.push(Rt), Rt = M();
                  if (gt !== f) if (s.charCodeAt(be) === 46 ? (Rt = _, be++) : (Rt = f, wt === 0 && Vt(x)), Rt !== f) {
                    for (or = [], nr = M(); nr !== f; ) or.push(nr), nr = M();
                    or !== f ? (Or = Ee, Ee = ot = H(Mt)) : (be = Ee, Ee = a);
                  } else be = Ee, Ee = a;
                  else be = Ee, Ee = a;
                } else be = Ee, Ee = a;
                else be = Ee, Ee = a;
              }
              return Pt[Yr] = { nextPos: be, result: Ee }, Ee;
            }
            function ur() {
              var Ee, ot, Mt, gt = 49 * be + 10, Rt = Pt[gt];
              if (Rt) return be = Rt.nextPos, Rt.result;
              if (Ee = be, ot = [], (Mt = Je()) !== f) for (; Mt !== f; ) ot.push(Mt), Mt = Je();
              else ot = a;
              return ot !== f && (Or = Ee, ot = Z(ot)), Ee = ot, Pt[gt] = { nextPos: be, result: Ee }, Ee;
            }
            function Cr() {
              var Ee, ot, Mt = 49 * be + 11, gt = Pt[Mt];
              return gt ? (be = gt.nextPos, gt.result) : (Ee = be, (ot = Qr()) !== f && (Or = Ee, ot = ue(ot)), (Ee = ot) === f && (Ee = be, (ot = dn()) !== f && (Or = Ee, ot = ue(ot)), Ee = ot), Pt[Mt] = { nextPos: be, result: Ee }, Ee);
            }
            function Wr() {
              var Ee, ot = 49 * be + 12, Mt = Pt[ot];
              return Mt ? (be = Mt.nextPos, Mt.result) : (Ee = function() {
                var gt, Rt = 49 * be + 13, or = Pt[Rt];
                return or ? (be = or.nextPos, or.result) : (gt = function() {
                  var nr, Yr, Xr, $r, un, Kr = 49 * be + 14, Ir = Pt[Kr];
                  if (Ir) return be = Ir.nextPos, Ir.result;
                  if (nr = be, s.substr(be, 3) === $ ? (Yr = $, be += 3) : (Yr = f, wt === 0 && Vt(X)), Yr !== f) if ((Xr = G()) === f && (Xr = J), Xr !== f) {
                    for ($r = [], un = pi(); un !== f; ) $r.push(un), un = pi();
                    $r !== f ? (s.substr(be, 3) === $ ? (un = $, be += 3) : (un = f, wt === 0 && Vt(X)), un !== f ? (Or = nr, nr = Yr = B($r)) : (be = nr, nr = a)) : (be = nr, nr = a);
                  } else be = nr, nr = a;
                  else be = nr, nr = a;
                  return Pt[Kr] = { nextPos: be, result: nr }, nr;
                }(), gt === f && (gt = Qr()) === f && (gt = function() {
                  var nr, Yr, Xr, $r, un, Kr = 49 * be + 16, Ir = Pt[Kr];
                  if (Ir) return be = Ir.nextPos, Ir.result;
                  if (nr = be, s.substr(be, 3) === K ? (Yr = K, be += 3) : (Yr = f, wt === 0 && Vt(ie)), Yr !== f) if ((Xr = G()) === f && (Xr = J), Xr !== f) {
                    for ($r = [], un = Bi(); un !== f; ) $r.push(un), un = Bi();
                    $r !== f ? (s.substr(be, 3) === K ? (un = K, be += 3) : (un = f, wt === 0 && Vt(ie)), un !== f ? (Or = nr, nr = Yr = B($r)) : (be = nr, nr = a)) : (be = nr, nr = a);
                  } else be = nr, nr = a;
                  else be = nr, nr = a;
                  return Pt[Kr] = { nextPos: be, result: nr }, nr;
                }(), gt === f && (gt = dn())), Pt[Rt] = { nextPos: be, result: gt }, gt);
              }(), Ee === f && (Ee = function() {
                var gt, Rt, or, nr, Yr, Xr = 49 * be + 38, $r = Pt[Xr];
                return $r ? (be = $r.nextPos, $r.result) : (gt = be, (Rt = fr()) !== f ? (s.charCodeAt(be) === 84 ? (or = Ur, be++) : (or = f, wt === 0 && Vt(Pe)), or !== f ? (nr = function() {
                  var un, Kr, Ir, An, En, Sn, On, gn, Bn, jn, qn, Qn = 49 * be + 36, ii = Pt[Qn];
                  return ii ? (be = ii.nextPos, ii.result) : (un = be, Kr = be, Ir = Re(), Ir !== f && (An = Re()) !== f ? (s.charCodeAt(be) === 58 ? (En = wr, be++) : (En = f, wt === 0 && Vt(Nt)), En !== f && (Sn = Re()) !== f && (On = Re()) !== f ? (s.charCodeAt(be) === 58 ? (gn = wr, be++) : (gn = f, wt === 0 && Vt(Nt)), gn !== f && (Bn = Re()) !== f && (jn = Re()) !== f ? ((qn = $t()) === f && (qn = J), qn !== f ? Kr = Ir = [Ir, An, En, Sn, On, gn, Bn, jn, qn] : (be = Kr, Kr = a)) : (be = Kr, Kr = a)) : (be = Kr, Kr = a)) : (be = Kr, Kr = a), Kr !== f && (Or = un, Kr = yr(Kr)), un = Kr, Pt[Qn] = { nextPos: be, result: un }, un);
                }(), nr !== f ? (s.charCodeAt(be) === 90 ? (Yr = $e, be++) : (Yr = f, wt === 0 && Vt(le)), Yr !== f ? (Or = gt, gt = Rt = te(Rt, nr)) : (be = gt, gt = a)) : (be = gt, gt = a)) : (be = gt, gt = a)) : (be = gt, gt = a), gt === f && (gt = be, (Rt = fr()) !== f ? (s.charCodeAt(be) === 84 ? (or = Ur, be++) : (or = f, wt === 0 && Vt(Pe)), or !== f ? (nr = function() {
                  var un, Kr, Ir, An, En, Sn, On, gn, Bn, jn, qn, Qn, ii, gi, so, Uo, ca, Rn = 49 * be + 37, Ie = Pt[Rn];
                  return Ie ? (be = Ie.nextPos, Ie.result) : (un = be, Kr = be, Ir = Re(), Ir !== f && (An = Re()) !== f ? (s.charCodeAt(be) === 58 ? (En = wr, be++) : (En = f, wt === 0 && Vt(Nt)), En !== f && (Sn = Re()) !== f && (On = Re()) !== f ? (s.charCodeAt(be) === 58 ? (gn = wr, be++) : (gn = f, wt === 0 && Vt(Nt)), gn !== f && (Bn = Re()) !== f && (jn = Re()) !== f ? ((qn = $t()) === f && (qn = J), qn !== f ? (s.charCodeAt(be) === 45 ? (Qn = T, be++) : (Qn = f, wt === 0 && Vt(O)), Qn === f && (s.charCodeAt(be) === 43 ? (Qn = Qe, be++) : (Qn = f, wt === 0 && Vt(ee))), Qn !== f && (ii = Re()) !== f && (gi = Re()) !== f ? (s.charCodeAt(be) === 58 ? (so = wr, be++) : (so = f, wt === 0 && Vt(Nt)), so !== f && (Uo = Re()) !== f && (ca = Re()) !== f ? Kr = Ir = [Ir, An, En, Sn, On, gn, Bn, jn, qn, Qn, ii, gi, so, Uo, ca] : (be = Kr, Kr = a)) : (be = Kr, Kr = a)) : (be = Kr, Kr = a)) : (be = Kr, Kr = a)) : (be = Kr, Kr = a)) : (be = Kr, Kr = a), Kr !== f && (Or = un, Kr = yr(Kr)), un = Kr, Pt[Rn] = { nextPos: be, result: un }, un);
                }(), nr !== f ? (Or = gt, gt = Rt = Le(Rt, nr)) : (be = gt, gt = a)) : (be = gt, gt = a)) : (be = gt, gt = a)), Pt[Xr] = { nextPos: be, result: gt }, gt);
              }(), Ee === f && (Ee = function() {
                var gt, Rt, or, nr, Yr = 49 * be + 23, Xr = Pt[Yr];
                return Xr ? (be = Xr.nextPos, Xr.result) : (gt = be, (Rt = Ni()) === f && (Rt = Un()), Rt !== f ? (s.charCodeAt(be) === 101 ? (or = pe, be++) : (or = f, wt === 0 && Vt(Oe)), or === f && (s.charCodeAt(be) === 69 ? (or = xe, be++) : (or = f, wt === 0 && Vt(Ve))), or !== f && (nr = Un()) !== f ? (Or = gt, gt = Rt = _e(Rt, nr)) : (be = gt, gt = a)) : (be = gt, gt = a), gt === f && (gt = be, (Rt = Ni()) !== f && (Or = gt, Rt = Be(Rt)), gt = Rt), Pt[Yr] = { nextPos: be, result: gt }, gt);
              }(), Ee === f && (Ee = function() {
                var gt, Rt, or = 49 * be + 25, nr = Pt[or];
                return nr ? (be = nr.nextPos, nr.result) : (gt = be, (Rt = Un()) !== f && (Or = gt, Rt = D(Rt)), gt = Rt, Pt[or] = { nextPos: be, result: gt }, gt);
              }(), Ee === f && (Ee = function() {
                var gt, Rt, or = 49 * be + 27, nr = Pt[or];
                return nr ? (be = nr.nextPos, nr.result) : (gt = be, s.substr(be, 4) === C ? (Rt = C, be += 4) : (Rt = f, wt === 0 && Vt(p)), Rt !== f && (Or = gt, Rt = A()), gt = Rt, gt === f && (gt = be, s.substr(be, 5) === U ? (Rt = U, be += 5) : (Rt = f, wt === 0 && Vt(Y)), Rt !== f && (Or = gt, Rt = ae()), gt = Rt), Pt[or] = { nextPos: be, result: gt }, gt);
              }(), Ee === f && (Ee = function() {
                var gt, Rt, or, nr, Yr, Xr = 49 * be + 28, $r = Pt[Xr];
                if ($r) return be = $r.nextPos, $r.result;
                if (gt = be, s.charCodeAt(be) === 91 ? (Rt = E, be++) : (Rt = f, wt === 0 && Vt(R)), Rt !== f) {
                  for (or = [], nr = bt(); nr !== f; ) or.push(nr), nr = bt();
                  or !== f ? (s.charCodeAt(be) === 93 ? (nr = k, be++) : (nr = f, wt === 0 && Vt(w)), nr !== f ? (Or = gt, gt = Rt = W()) : (be = gt, gt = a)) : (be = gt, gt = a);
                } else be = gt, gt = a;
                if (gt === f && (gt = be, s.charCodeAt(be) === 91 ? (Rt = E, be++) : (Rt = f, wt === 0 && Vt(R)), Rt !== f ? ((or = Xe()) === f && (or = J), or !== f ? (s.charCodeAt(be) === 93 ? (nr = k, be++) : (nr = f, wt === 0 && Vt(w)), nr !== f ? (Or = gt, gt = Rt = de(or)) : (be = gt, gt = a)) : (be = gt, gt = a)) : (be = gt, gt = a), gt === f)) {
                  if (gt = be, s.charCodeAt(be) === 91 ? (Rt = E, be++) : (Rt = f, wt === 0 && Vt(R)), Rt !== f) {
                    if (or = [], (nr = Ye()) !== f) for (; nr !== f; ) or.push(nr), nr = Ye();
                    else or = a;
                    or !== f ? (s.charCodeAt(be) === 93 ? (nr = k, be++) : (nr = f, wt === 0 && Vt(w)), nr !== f ? (Or = gt, gt = Rt = tt(or)) : (be = gt, gt = a)) : (be = gt, gt = a);
                  } else be = gt, gt = a;
                  if (gt === f) if (gt = be, s.charCodeAt(be) === 91 ? (Rt = E, be++) : (Rt = f, wt === 0 && Vt(R)), Rt !== f) {
                    if (or = [], (nr = Ye()) !== f) for (; nr !== f; ) or.push(nr), nr = Ye();
                    else or = a;
                    or !== f && (nr = Xe()) !== f ? (s.charCodeAt(be) === 93 ? (Yr = k, be++) : (Yr = f, wt === 0 && Vt(w)), Yr !== f ? (Or = gt, gt = Rt = Ne(or, nr)) : (be = gt, gt = a)) : (be = gt, gt = a);
                  } else be = gt, gt = a;
                }
                return Pt[Xr] = { nextPos: be, result: gt }, gt;
              }(), Ee === f && (Ee = function() {
                var gt, Rt, or, nr, Yr, Xr, $r = 49 * be + 32, un = Pt[$r];
                if (un) return be = un.nextPos, un.result;
                if (gt = be, s.charCodeAt(be) === 123 ? (Rt = rr, be++) : (Rt = f, wt === 0 && Vt(je)), Rt !== f) {
                  for (or = [], nr = M(); nr !== f; ) or.push(nr), nr = M();
                  if (or !== f) {
                    for (nr = [], Yr = xt(); Yr !== f; ) nr.push(Yr), Yr = xt();
                    if (nr !== f) {
                      for (Yr = [], Xr = M(); Xr !== f; ) Yr.push(Xr), Xr = M();
                      Yr !== f ? (s.charCodeAt(be) === 125 ? (Xr = Ge, be++) : (Xr = f, wt === 0 && Vt(at)), Xr !== f ? (Or = gt, gt = Rt = Ae(nr)) : (be = gt, gt = a)) : (be = gt, gt = a);
                    } else be = gt, gt = a;
                  } else be = gt, gt = a;
                } else be = gt, gt = a;
                return Pt[$r] = { nextPos: be, result: gt }, gt;
              }())))))), Pt[ot] = { nextPos: be, result: Ee }, Ee);
            }
            function Qr() {
              var Ee, ot, Mt, gt, Rt = 49 * be + 15, or = Pt[Rt];
              if (or) return be = or.nextPos, or.result;
              if (Ee = be, s.charCodeAt(be) === 34 ? (ot = Q, be++) : (ot = f, wt === 0 && Vt(ne)), ot !== f) {
                for (Mt = [], gt = wn(); gt !== f; ) Mt.push(gt), gt = wn();
                Mt !== f ? (s.charCodeAt(be) === 34 ? (gt = Q, be++) : (gt = f, wt === 0 && Vt(ne)), gt !== f ? (Or = Ee, Ee = ot = B(Mt)) : (be = Ee, Ee = a)) : (be = Ee, Ee = a);
              } else be = Ee, Ee = a;
              return Pt[Rt] = { nextPos: be, result: Ee }, Ee;
            }
            function dn() {
              var Ee, ot, Mt, gt, Rt = 49 * be + 17, or = Pt[Rt];
              if (or) return be = or.nextPos, or.result;
              if (Ee = be, s.charCodeAt(be) === 39 ? (ot = ce, be++) : (ot = f, wt === 0 && Vt(ye)), ot !== f) {
                for (Mt = [], gt = yn(); gt !== f; ) Mt.push(gt), gt = yn();
                Mt !== f ? (s.charCodeAt(be) === 39 ? (gt = ce, be++) : (gt = f, wt === 0 && Vt(ye)), gt !== f ? (Or = Ee, Ee = ot = B(Mt)) : (be = Ee, Ee = a)) : (be = Ee, Ee = a);
              } else be = Ee, Ee = a;
              return Pt[Rt] = { nextPos: be, result: Ee }, Ee;
            }
            function wn() {
              var Ee, ot, Mt, gt = 49 * be + 18, Rt = Pt[gt];
              return Rt ? (be = Rt.nextPos, Rt.result) : ((Ee = _t()) === f && (Ee = be, ot = be, wt++, s.charCodeAt(be) === 34 ? (Mt = Q, be++) : (Mt = f, wt === 0 && Vt(ne)), wt--, Mt === f ? ot = b : (be = ot, ot = a), ot !== f ? (s.length > be ? (Mt = s.charAt(be), be++) : (Mt = f, wt === 0 && Vt(S)), Mt !== f ? (Or = Ee, Ee = ot = oe(Mt)) : (be = Ee, Ee = a)) : (be = Ee, Ee = a)), Pt[gt] = { nextPos: be, result: Ee }, Ee);
            }
            function yn() {
              var Ee, ot, Mt, gt = 49 * be + 19, Rt = Pt[gt];
              return Rt ? (be = Rt.nextPos, Rt.result) : (Ee = be, ot = be, wt++, s.charCodeAt(be) === 39 ? (Mt = ce, be++) : (Mt = f, wt === 0 && Vt(ye)), wt--, Mt === f ? ot = b : (be = ot, ot = a), ot !== f ? (s.length > be ? (Mt = s.charAt(be), be++) : (Mt = f, wt === 0 && Vt(S)), Mt !== f ? (Or = Ee, Ee = ot = oe(Mt)) : (be = Ee, Ee = a)) : (be = Ee, Ee = a), Pt[gt] = { nextPos: be, result: Ee }, Ee);
            }
            function pi() {
              var Ee, ot, Mt, gt = 49 * be + 20, Rt = Pt[gt];
              return Rt ? (be = Rt.nextPos, Rt.result) : ((Ee = _t()) === f && (Ee = function() {
                var or, nr, Yr, Xr, $r = 49 * be + 21, un = Pt[$r];
                if (un) return be = un.nextPos, un.result;
                if (or = be, s.charCodeAt(be) === 92 ? (nr = re, be++) : (nr = f, wt === 0 && Vt(ge)), nr !== f) if (G() !== f) {
                  for (Yr = [], Xr = fe(); Xr !== f; ) Yr.push(Xr), Xr = fe();
                  Yr !== f ? (Or = or, or = nr = Te()) : (be = or, or = a);
                } else be = or, or = a;
                else be = or, or = a;
                return Pt[$r] = { nextPos: be, result: or }, or;
              }(), Ee === f && (Ee = be, ot = be, wt++, s.substr(be, 3) === $ ? (Mt = $, be += 3) : (Mt = f, wt === 0 && Vt(X)), wt--, Mt === f ? ot = b : (be = ot, ot = a), ot !== f ? (s.length > be ? (Mt = s.charAt(be), be++) : (Mt = f, wt === 0 && Vt(S)), Mt !== f ? (Or = Ee, Ee = ot = se(Mt)) : (be = Ee, Ee = a)) : (be = Ee, Ee = a))), Pt[gt] = { nextPos: be, result: Ee }, Ee);
            }
            function Bi() {
              var Ee, ot, Mt, gt = 49 * be + 22, Rt = Pt[gt];
              return Rt ? (be = Rt.nextPos, Rt.result) : (Ee = be, ot = be, wt++, s.substr(be, 3) === K ? (Mt = K, be += 3) : (Mt = f, wt === 0 && Vt(ie)), wt--, Mt === f ? ot = b : (be = ot, ot = a), ot !== f ? (s.length > be ? (Mt = s.charAt(be), be++) : (Mt = f, wt === 0 && Vt(S)), Mt !== f ? (Or = Ee, Ee = ot = oe(Mt)) : (be = Ee, Ee = a)) : (be = Ee, Ee = a), Pt[gt] = { nextPos: be, result: Ee }, Ee);
            }
            function Ni() {
              var Ee, ot, Mt, gt, Rt, or, nr = 49 * be + 24, Yr = Pt[nr];
              return Yr ? (be = Yr.nextPos, Yr.result) : (Ee = be, s.charCodeAt(be) === 43 ? (ot = Qe, be++) : (ot = f, wt === 0 && Vt(ee)), ot === f && (ot = J), ot !== f ? (Mt = be, (gt = Ut()) !== f ? (s.charCodeAt(be) === 46 ? (Rt = _, be++) : (Rt = f, wt === 0 && Vt(x)), Rt !== f && (or = Ut()) !== f ? Mt = gt = [gt, Rt, or] : (be = Mt, Mt = a)) : (be = Mt, Mt = a), Mt !== f ? (Or = Ee, Ee = ot = P(Mt)) : (be = Ee, Ee = a)) : (be = Ee, Ee = a), Ee === f && (Ee = be, s.charCodeAt(be) === 45 ? (ot = T, be++) : (ot = f, wt === 0 && Vt(O)), ot !== f ? (Mt = be, (gt = Ut()) !== f ? (s.charCodeAt(be) === 46 ? (Rt = _, be++) : (Rt = f, wt === 0 && Vt(x)), Rt !== f && (or = Ut()) !== f ? Mt = gt = [gt, Rt, or] : (be = Mt, Mt = a)) : (be = Mt, Mt = a), Mt !== f ? (Or = Ee, Ee = ot = V(Mt)) : (be = Ee, Ee = a)) : (be = Ee, Ee = a)), Pt[nr] = { nextPos: be, result: Ee }, Ee);
            }
            function Un() {
              var Ee, ot, Mt, gt, Rt, or = 49 * be + 26, nr = Pt[or];
              if (nr) return be = nr.nextPos, nr.result;
              if (Ee = be, s.charCodeAt(be) === 43 ? (ot = Qe, be++) : (ot = f, wt === 0 && Vt(ee)), ot === f && (ot = J), ot !== f) {
                if (Mt = [], (gt = Re()) !== f) for (; gt !== f; ) Mt.push(gt), gt = Re();
                else Mt = a;
                Mt !== f ? (gt = be, wt++, s.charCodeAt(be) === 46 ? (Rt = _, be++) : (Rt = f, wt === 0 && Vt(x)), wt--, Rt === f ? gt = b : (be = gt, gt = a), gt !== f ? (Or = Ee, Ee = ot = P(Mt)) : (be = Ee, Ee = a)) : (be = Ee, Ee = a);
              } else be = Ee, Ee = a;
              if (Ee === f) if (Ee = be, s.charCodeAt(be) === 45 ? (ot = T, be++) : (ot = f, wt === 0 && Vt(O)), ot !== f) {
                if (Mt = [], (gt = Re()) !== f) for (; gt !== f; ) Mt.push(gt), gt = Re();
                else Mt = a;
                Mt !== f ? (gt = be, wt++, s.charCodeAt(be) === 46 ? (Rt = _, be++) : (Rt = f, wt === 0 && Vt(x)), wt--, Rt === f ? gt = b : (be = gt, gt = a), gt !== f ? (Or = Ee, Ee = ot = V(Mt)) : (be = Ee, Ee = a)) : (be = Ee, Ee = a);
              } else be = Ee, Ee = a;
              return Pt[or] = { nextPos: be, result: Ee }, Ee;
            }
            function Xe() {
              var Ee, ot, Mt, gt, Rt, or = 49 * be + 29, nr = Pt[or];
              if (nr) return be = nr.nextPos, nr.result;
              for (Ee = be, ot = [], Mt = bt(); Mt !== f; ) ot.push(Mt), Mt = bt();
              if (ot !== f) if ((Mt = Wr()) !== f) {
                for (gt = [], Rt = bt(); Rt !== f; ) gt.push(Rt), Rt = bt();
                gt !== f ? (Or = Ee, Ee = ot = ut(Mt)) : (be = Ee, Ee = a);
              } else be = Ee, Ee = a;
              else be = Ee, Ee = a;
              return Pt[or] = { nextPos: be, result: Ee }, Ee;
            }
            function Ye() {
              var Ee, ot, Mt, gt, Rt, or, nr, Yr = 49 * be + 30, Xr = Pt[Yr];
              if (Xr) return be = Xr.nextPos, Xr.result;
              for (Ee = be, ot = [], Mt = bt(); Mt !== f; ) ot.push(Mt), Mt = bt();
              if (ot !== f) if ((Mt = Wr()) !== f) {
                for (gt = [], Rt = bt(); Rt !== f; ) gt.push(Rt), Rt = bt();
                if (gt !== f) if (s.charCodeAt(be) === 44 ? (Rt = Ze, be++) : (Rt = f, wt === 0 && Vt(Et)), Rt !== f) {
                  for (or = [], nr = bt(); nr !== f; ) or.push(nr), nr = bt();
                  or !== f ? (Or = Ee, Ee = ot = ut(Mt)) : (be = Ee, Ee = a);
                } else be = Ee, Ee = a;
                else be = Ee, Ee = a;
              } else be = Ee, Ee = a;
              else be = Ee, Ee = a;
              return Pt[Yr] = { nextPos: be, result: Ee }, Ee;
            }
            function bt() {
              var Ee, ot = 49 * be + 31, Mt = Pt[ot];
              return Mt ? (be = Mt.nextPos, Mt.result) : ((Ee = M()) === f && (Ee = G()) === f && (Ee = De()), Pt[ot] = { nextPos: be, result: Ee }, Ee);
            }
            function xt() {
              var Ee, ot, Mt, gt, Rt, or, nr, Yr, Xr, $r, un, Kr = 49 * be + 33, Ir = Pt[Kr];
              if (Ir) return be = Ir.nextPos, Ir.result;
              for (Ee = be, ot = [], Mt = M(); Mt !== f; ) ot.push(Mt), Mt = M();
              if (ot !== f) if ((Mt = ur()) !== f) {
                for (gt = [], Rt = M(); Rt !== f; ) gt.push(Rt), Rt = M();
                if (gt !== f) if (s.charCodeAt(be) === 61 ? (Rt = L, be++) : (Rt = f, wt === 0 && Vt(j)), Rt !== f) {
                  for (or = [], nr = M(); nr !== f; ) or.push(nr), nr = M();
                  if (or !== f) if ((nr = Wr()) !== f) {
                    for (Yr = [], Xr = M(); Xr !== f; ) Yr.push(Xr), Xr = M();
                    if (Yr !== f) if (s.charCodeAt(be) === 44 ? (Xr = Ze, be++) : (Xr = f, wt === 0 && Vt(Et)), Xr !== f) {
                      for ($r = [], un = M(); un !== f; ) $r.push(un), un = M();
                      $r !== f ? (Or = Ee, Ee = ot = qe(Mt, nr)) : (be = Ee, Ee = a);
                    } else be = Ee, Ee = a;
                    else be = Ee, Ee = a;
                  } else be = Ee, Ee = a;
                  else be = Ee, Ee = a;
                } else be = Ee, Ee = a;
                else be = Ee, Ee = a;
              } else be = Ee, Ee = a;
              else be = Ee, Ee = a;
              if (Ee === f) {
                for (Ee = be, ot = [], Mt = M(); Mt !== f; ) ot.push(Mt), Mt = M();
                if (ot !== f) if ((Mt = ur()) !== f) {
                  for (gt = [], Rt = M(); Rt !== f; ) gt.push(Rt), Rt = M();
                  if (gt !== f) if (s.charCodeAt(be) === 61 ? (Rt = L, be++) : (Rt = f, wt === 0 && Vt(j)), Rt !== f) {
                    for (or = [], nr = M(); nr !== f; ) or.push(nr), nr = M();
                    or !== f && (nr = Wr()) !== f ? (Or = Ee, Ee = ot = qe(Mt, nr)) : (be = Ee, Ee = a);
                  } else be = Ee, Ee = a;
                  else be = Ee, Ee = a;
                } else be = Ee, Ee = a;
                else be = Ee, Ee = a;
              }
              return Pt[Kr] = { nextPos: be, result: Ee }, Ee;
            }
            function $t() {
              var Ee, ot, Mt, gt = 49 * be + 34, Rt = Pt[gt];
              return Rt ? (be = Rt.nextPos, Rt.result) : (Ee = be, s.charCodeAt(be) === 46 ? (ot = _, be++) : (ot = f, wt === 0 && Vt(x)), ot !== f && (Mt = Ut()) !== f ? (Or = Ee, Ee = ot = Ft(Mt)) : (be = Ee, Ee = a), Pt[gt] = { nextPos: be, result: Ee }, Ee);
            }
            function fr() {
              var Ee, ot, Mt, gt, Rt, or, nr, Yr, Xr, $r, un, Kr, Ir = 49 * be + 35, An = Pt[Ir];
              return An ? (be = An.nextPos, An.result) : (Ee = be, ot = be, (Mt = Re()) !== f && (gt = Re()) !== f && (Rt = Re()) !== f && (or = Re()) !== f ? (s.charCodeAt(be) === 45 ? (nr = T, be++) : (nr = f, wt === 0 && Vt(O)), nr !== f && (Yr = Re()) !== f && (Xr = Re()) !== f ? (s.charCodeAt(be) === 45 ? ($r = T, be++) : ($r = f, wt === 0 && Vt(O)), $r !== f && (un = Re()) !== f && (Kr = Re()) !== f ? ot = Mt = [Mt, gt, Rt, or, nr, Yr, Xr, $r, un, Kr] : (be = ot, ot = a)) : (be = ot, ot = a)) : (be = ot, ot = a), ot !== f && (Or = Ee, ot = Dt(ot)), Ee = ot, Pt[Ir] = { nextPos: be, result: Ee }, Ee);
            }
            function M() {
              var Ee, ot = 49 * be + 39, Mt = Pt[ot];
              return Mt ? (be = Mt.nextPos, Mt.result) : (nt.test(s.charAt(be)) ? (Ee = s.charAt(be), be++) : (Ee = f, wt === 0 && Vt(ft)), Pt[ot] = { nextPos: be, result: Ee }, Ee);
            }
            function G() {
              var Ee, ot, Mt, gt = 49 * be + 40, Rt = Pt[gt];
              return Rt ? (be = Rt.nextPos, Rt.result) : (s.charCodeAt(be) === 10 ? (Ee = zt, be++) : (Ee = f, wt === 0 && Vt(st)), Ee === f && (Ee = be, s.charCodeAt(be) === 13 ? (ot = ct, be++) : (ot = f, wt === 0 && Vt(yt)), ot !== f ? (s.charCodeAt(be) === 10 ? (Mt = zt, be++) : (Mt = f, wt === 0 && Vt(st)), Mt !== f ? Ee = ot = [ot, Mt] : (be = Ee, Ee = a)) : (be = Ee, Ee = a)), Pt[gt] = { nextPos: be, result: Ee }, Ee);
            }
            function fe() {
              var Ee, ot = 49 * be + 41, Mt = Pt[ot];
              return Mt ? (be = Mt.nextPos, Mt.result) : ((Ee = G()) === f && (Ee = M()), Pt[ot] = { nextPos: be, result: Ee }, Ee);
            }
            function Se() {
              var Ee, ot, Mt = 49 * be + 42, gt = Pt[Mt];
              return gt ? (be = gt.nextPos, gt.result) : (Ee = be, wt++, s.length > be ? (ot = s.charAt(be), be++) : (ot = f, wt === 0 && Vt(S)), wt--, ot === f ? Ee = b : (be = Ee, Ee = a), Pt[Mt] = { nextPos: be, result: Ee }, Ee);
            }
            function Ce() {
              var Ee, ot = 49 * be + 43, Mt = Pt[ot];
              return Mt ? (be = Mt.nextPos, Mt.result) : (Zt.test(s.charAt(be)) ? (Ee = s.charAt(be), be++) : (Ee = f, wt === 0 && Vt(Ct)), Pt[ot] = { nextPos: be, result: Ee }, Ee);
            }
            function Re() {
              var Ee, ot, Mt = 49 * be + 44, gt = Pt[Mt];
              return gt ? (be = gt.nextPos, gt.result) : (Lt.test(s.charAt(be)) ? (Ee = s.charAt(be), be++) : (Ee = f, wt === 0 && Vt(Wt)), Ee === f && (Ee = be, s.charCodeAt(be) === 95 ? (ot = vr, be++) : (ot = f, wt === 0 && Vt(ar)), ot !== f && (Or = Ee, ot = sr()), Ee = ot), Pt[Mt] = { nextPos: be, result: Ee }, Ee);
            }
            function Je() {
              var Ee, ot = 49 * be + 45, Mt = Pt[ot];
              return Mt ? (be = Mt.nextPos, Mt.result) : (gr.test(s.charAt(be)) ? (Ee = s.charAt(be), be++) : (Ee = f, wt === 0 && Vt(Tr)), Pt[ot] = { nextPos: be, result: Ee }, Ee);
            }
            function Ut() {
              var Ee, ot, Mt, gt = 49 * be + 46, Rt = Pt[gt];
              if (Rt) return be = Rt.nextPos, Rt.result;
              if (Ee = be, ot = [], (Mt = Re()) !== f) for (; Mt !== f; ) ot.push(Mt), Mt = Re();
              else ot = a;
              return ot !== f && (Or = Ee, ot = Mr(ot)), Ee = ot, Pt[gt] = { nextPos: be, result: Ee }, Ee;
            }
            function _t() {
              var Ee, ot, Mt = 49 * be + 47, gt = Pt[Mt];
              return gt ? (be = gt.nextPos, gt.result) : (Ee = be, s.substr(be, 2) === Nr ? (ot = Nr, be += 2) : (ot = f, wt === 0 && Vt(Lr)), ot !== f && (Or = Ee, ot = jr()), (Ee = ot) === f && (Ee = be, s.substr(be, 2) === Hr ? (ot = Hr, be += 2) : (ot = f, wt === 0 && Vt(kr)), ot !== f && (Or = Ee, ot = Xt()), (Ee = ot) === f && (Ee = be, s.substr(be, 2) === Qt ? (ot = Qt, be += 2) : (ot = f, wt === 0 && Vt(br)), ot !== f && (Or = Ee, ot = we()), (Ee = ot) === f && (Ee = be, s.substr(be, 2) === me ? (ot = me, be += 2) : (ot = f, wt === 0 && Vt(ze)), ot !== f && (Or = Ee, ot = rt()), (Ee = ot) === f && (Ee = be, s.substr(be, 2) === Tt ? (ot = Tt, be += 2) : (ot = f, wt === 0 && Vt(Ot)), ot !== f && (Or = Ee, ot = It()), (Ee = ot) === f && (Ee = be, s.substr(be, 2) === We ? (ot = We, be += 2) : (ot = f, wt === 0 && Vt(mt)), ot !== f && (Or = Ee, ot = Gt()), (Ee = ot) === f && (Ee = be, s.substr(be, 2) === ir ? (ot = ir, be += 2) : (ot = f, wt === 0 && Vt(dr)), ot !== f && (Or = Ee, ot = hr()), (Ee = ot) === f && (Ee = function() {
                var Rt, or, nr, Yr, Xr, $r, un, Kr, Ir, An, En, Sn = 49 * be + 48, On = Pt[Sn];
                return On ? (be = On.nextPos, On.result) : (Rt = be, s.substr(be, 2) === Fr ? (or = Fr, be += 2) : (or = f, wt === 0 && Vt(Gr)), or !== f ? (nr = be, (Yr = Ce()) !== f && (Xr = Ce()) !== f && ($r = Ce()) !== f && (un = Ce()) !== f && (Kr = Ce()) !== f && (Ir = Ce()) !== f && (An = Ce()) !== f && (En = Ce()) !== f ? nr = Yr = [Yr, Xr, $r, un, Kr, Ir, An, En] : (be = nr, nr = a), nr !== f ? (Or = Rt, Rt = or = Br(nr)) : (be = Rt, Rt = a)) : (be = Rt, Rt = a), Rt === f && (Rt = be, s.substr(be, 2) === Dr ? (or = Dr, be += 2) : (or = f, wt === 0 && Vt(Vr)), or !== f ? (nr = be, (Yr = Ce()) !== f && (Xr = Ce()) !== f && ($r = Ce()) !== f && (un = Ce()) !== f ? nr = Yr = [Yr, Xr, $r, un] : (be = nr, nr = a), nr !== f ? (Or = Rt, Rt = or = Br(nr)) : (be = Rt, Rt = a)) : (be = Rt, Rt = a)), Pt[Sn] = { nextPos: be, result: Rt }, Rt);
              }()))))))), Pt[Mt] = { nextPos: be, result: Ee }, Ee);
            }
            var Ht = [];
            function tr(Ee) {
              Ht.push(Ee);
            }
            function Sr(Ee, ot, Mt, gt, Rt) {
              var or = { type: Ee, value: ot, line: Mt(), column: gt() };
              return Rt && (or.key = Rt), or;
            }
            if ((c = m()) !== f && be === s.length) return c;
            throw c !== f && be < s.length && Vt({ type: "end", description: "end of input" }), zr(null, vt, dt);
          } };
        }();
      }, 5578: (t, o, s) => {
        var c = s(8287).Buffer;
        Object.defineProperty(o, "__esModule", { value: true }), o.LiquidityPoolFeeV18 = void 0, o.getLiquidityPoolId = function(a) {
          var l = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          if (a !== "constant_product") throw new Error("liquidityPoolType is invalid");
          var d = l.assetA, b = l.assetB, S = l.fee;
          if (!(d && d instanceof r.Asset)) throw new Error("assetA is invalid");
          if (!(b && b instanceof r.Asset)) throw new Error("assetB is invalid");
          if (!S || S !== g) throw new Error("fee is invalid");
          if (r.Asset.compare(d, b) !== -1) throw new Error("Assets are not in lexicographic order");
          var E = f.default.LiquidityPoolType.liquidityPoolConstantProduct().toXDR(), R = new f.default.LiquidityPoolConstantProductParameters({ assetA: d.toXDRObject(), assetB: b.toXDRObject(), fee: S }).toXDR(), k = c.concat([E, R]);
          return (0, m.hash)(k);
        };
        var h, f = (h = s(1918)) && h.__esModule ? h : { default: h }, r = s(1764), m = s(9152), g = o.LiquidityPoolFeeV18 = 30;
      }, 5680: (t, o, s) => {
        var c = s(5767);
        t.exports = function(h) {
          return !!c(h);
        };
      }, 5767: (t, o, s) => {
        var c = s(2682), h = s(9209), f = s(487), r = s(6556), m = s(5795), g = s(3628), a = r("Object.prototype.toString"), l = s(9092)(), d = typeof globalThis > "u" ? s.g : globalThis, b = h(), S = r("String.prototype.slice"), E = r("Array.prototype.indexOf", true) || function(k, w) {
          for (var F = 0; F < k.length; F += 1) if (k[F] === w) return F;
          return -1;
        }, R = { __proto__: null };
        c(b, l && m && g ? function(k) {
          var w = new d[k]();
          if (Symbol.toStringTag in w && g) {
            var F = g(w), I = m(F, Symbol.toStringTag);
            if (!I && F) {
              var q = g(F);
              I = m(q, Symbol.toStringTag);
            }
            R["$" + k] = f(I.get);
          }
        } : function(k) {
          var w = new d[k](), F = w.slice || w.set;
          F && (R["$" + k] = f(F));
        }), t.exports = function(k) {
          if (!k || typeof k != "object") return false;
          if (!l) {
            var w = S(a(k), 8, -1);
            return E(b, w) > -1 ? w : w === "Object" && function(F) {
              var I = false;
              return c(R, function(q, N) {
                if (!I) try {
                  q(F), I = S(N, 1);
                } catch {
                }
              }), I;
            }(k);
          }
          return m ? function(F) {
            var I = false;
            return c(R, function(q, N) {
              if (!I) try {
                "$" + q(F) === N && (I = S(N, 1));
              } catch {
              }
            }), I;
          }(k) : null;
        };
      }, 5795: (t, o, s) => {
        var c = s(6549);
        if (c) try {
          c([], "length");
        } catch {
          c = null;
        }
        t.exports = c;
      }, 5880: (t) => {
        t.exports = Math.pow;
      }, 5896: (t) => {
        function o(h, f) {
          c(h, f), s(h);
        }
        function s(h) {
          h._writableState && !h._writableState.emitClose || h._readableState && !h._readableState.emitClose || h.emit("close");
        }
        function c(h, f) {
          h.emit("error", f);
        }
        t.exports = { destroy: function(h, f) {
          var r = this, m = this._readableState && this._readableState.destroyed, g = this._writableState && this._writableState.destroyed;
          return m || g ? (f ? f(h) : h && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = true, process.nextTick(c, this, h)) : process.nextTick(c, this, h)), this) : (this._readableState && (this._readableState.destroyed = true), this._writableState && (this._writableState.destroyed = true), this._destroy(h || null, function(a) {
            !f && a ? r._writableState ? r._writableState.errorEmitted ? process.nextTick(s, r) : (r._writableState.errorEmitted = true, process.nextTick(o, r, a)) : process.nextTick(o, r, a) : f ? (process.nextTick(s, r), f(a)) : process.nextTick(s, r);
          }), this);
        }, undestroy: function() {
          this._readableState && (this._readableState.destroyed = false, this._readableState.reading = false, this._readableState.ended = false, this._readableState.endEmitted = false), this._writableState && (this._writableState.destroyed = false, this._writableState.ended = false, this._writableState.ending = false, this._writableState.finalCalled = false, this._writableState.prefinished = false, this._writableState.finished = false, this._writableState.errorEmitted = false);
        }, errorOrDestroy: function(h, f) {
          var r = h._readableState, m = h._writableState;
          r && r.autoDestroy || m && m.autoDestroy ? h.destroy(f) : h.emit("error", f);
        } };
      }, 5976: (t, o, s) => {
        function c(pe) {
          return c = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(Oe) {
            return typeof Oe;
          } : function(Oe) {
            return Oe && typeof Symbol == "function" && Oe.constructor === Symbol && Oe !== Symbol.prototype ? "symbol" : typeof Oe;
          }, c(pe);
        }
        function h(pe, Oe) {
          for (var xe = 0; xe < Oe.length; xe++) {
            var Ve = Oe[xe];
            Ve.enumerable = Ve.enumerable || false, Ve.configurable = true, "value" in Ve && (Ve.writable = true), Object.defineProperty(pe, f(Ve.key), Ve);
          }
        }
        function f(pe) {
          var Oe = function(xe, Ve) {
            if (c(xe) != "object" || !xe) return xe;
            var _e = xe[Symbol.toPrimitive];
            if (_e !== void 0) {
              var Be = _e.call(xe, Ve);
              if (c(Be) != "object") return Be;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(xe);
          }(pe, "string");
          return c(Oe) == "symbol" ? Oe : Oe + "";
        }
        function r(pe, Oe, xe) {
          return Oe = l(Oe), function(Ve, _e) {
            if (_e && (c(_e) == "object" || typeof _e == "function")) return _e;
            if (_e !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(Be) {
              if (Be === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return Be;
            }(Ve);
          }(pe, g() ? Reflect.construct(Oe, xe || [], l(pe).constructor) : Oe.apply(pe, xe));
        }
        function m(pe) {
          var Oe = typeof Map == "function" ? /* @__PURE__ */ new Map() : void 0;
          return m = function(xe) {
            if (xe === null || !function(_e) {
              try {
                return Function.toString.call(_e).indexOf("[native code]") !== -1;
              } catch {
                return typeof _e == "function";
              }
            }(xe)) return xe;
            if (typeof xe != "function") throw new TypeError("Super expression must either be null or a function");
            if (Oe !== void 0) {
              if (Oe.has(xe)) return Oe.get(xe);
              Oe.set(xe, Ve);
            }
            function Ve() {
              return function(_e, Be, Qe) {
                if (g()) return Reflect.construct.apply(null, arguments);
                var ee = [null];
                ee.push.apply(ee, Be);
                var P = new (_e.bind.apply(_e, ee))();
                return Qe && a(P, Qe.prototype), P;
              }(xe, arguments, l(this).constructor);
            }
            return Ve.prototype = Object.create(xe.prototype, { constructor: { value: Ve, enumerable: false, writable: true, configurable: true } }), a(Ve, xe);
          }, m(pe);
        }
        function g() {
          try {
            var pe = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (g = function() {
            return !!pe;
          })();
        }
        function a(pe, Oe) {
          return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(xe, Ve) {
            return xe.__proto__ = Ve, xe;
          }, a(pe, Oe);
        }
        function l(pe) {
          return l = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(Oe) {
            return Oe.__proto__ || Object.getPrototypeOf(Oe);
          }, l(pe);
        }
        s.d(o, { Cu: () => Te, v7: () => z, nS: () => ne, Dr: () => d, m_: () => I });
        var d = function(pe) {
          function Oe(Be, Qe) {
            var ee;
            (function(T, O) {
              if (!(T instanceof O)) throw new TypeError("Cannot call a class as a function");
            })(this, Oe);
            var P = (this instanceof Oe ? this.constructor : void 0).prototype;
            return (ee = r(this, Oe, [Be])).__proto__ = P, ee.constructor = Oe, ee.response = Qe, ee;
          }
          return function(Be, Qe) {
            if (typeof Qe != "function" && Qe !== null) throw new TypeError("Super expression must either be null or a function");
            Be.prototype = Object.create(Qe && Qe.prototype, { constructor: { value: Be, writable: true, configurable: true } }), Object.defineProperty(Be, "prototype", { writable: false }), Qe && a(Be, Qe);
          }(Oe, pe), xe = Oe, (Ve = [{ key: "getResponse", value: function() {
            return this.response;
          } }]) && h(xe.prototype, Ve), _e && h(xe, _e), Object.defineProperty(xe, "prototype", { writable: false }), xe;
          var xe, Ve, _e;
        }(m(Error));
        function b(pe) {
          return b = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(Oe) {
            return typeof Oe;
          } : function(Oe) {
            return Oe && typeof Symbol == "function" && Oe.constructor === Symbol && Oe !== Symbol.prototype ? "symbol" : typeof Oe;
          }, b(pe);
        }
        function S(pe, Oe) {
          for (var xe = 0; xe < Oe.length; xe++) {
            var Ve = Oe[xe];
            Ve.enumerable = Ve.enumerable || false, Ve.configurable = true, "value" in Ve && (Ve.writable = true), Object.defineProperty(pe, E(Ve.key), Ve);
          }
        }
        function E(pe) {
          var Oe = function(xe, Ve) {
            if (b(xe) != "object" || !xe) return xe;
            var _e = xe[Symbol.toPrimitive];
            if (_e !== void 0) {
              var Be = _e.call(xe, Ve);
              if (b(Be) != "object") return Be;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(xe);
          }(pe, "string");
          return b(Oe) == "symbol" ? Oe : Oe + "";
        }
        function R(pe, Oe, xe) {
          return Oe = w(Oe), function(Ve, _e) {
            if (_e && (b(_e) == "object" || typeof _e == "function")) return _e;
            if (_e !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(Be) {
              if (Be === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return Be;
            }(Ve);
          }(pe, k() ? Reflect.construct(Oe, xe || [], w(pe).constructor) : Oe.apply(pe, xe));
        }
        function k() {
          try {
            var pe = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (k = function() {
            return !!pe;
          })();
        }
        function w(pe) {
          return w = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(Oe) {
            return Oe.__proto__ || Object.getPrototypeOf(Oe);
          }, w(pe);
        }
        function F(pe, Oe) {
          return F = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(xe, Ve) {
            return xe.__proto__ = Ve, xe;
          }, F(pe, Oe);
        }
        var I = function(pe) {
          function Oe(Be, Qe) {
            var ee;
            (function(T, O) {
              if (!(T instanceof O)) throw new TypeError("Cannot call a class as a function");
            })(this, Oe);
            var P = (this instanceof Oe ? this.constructor : void 0).prototype;
            return (ee = R(this, Oe, [Be, Qe])).__proto__ = P, ee.constructor = Oe, ee.name = "NotFoundError", ee;
          }
          return function(Be, Qe) {
            if (typeof Qe != "function" && Qe !== null) throw new TypeError("Super expression must either be null or a function");
            Be.prototype = Object.create(Qe && Qe.prototype, { constructor: { value: Be, writable: true, configurable: true } }), Object.defineProperty(Be, "prototype", { writable: false }), Qe && F(Be, Qe);
          }(Oe, pe), xe = Oe, Ve && S(xe.prototype, Ve), _e && S(xe, _e), Object.defineProperty(xe, "prototype", { writable: false }), xe;
          var xe, Ve, _e;
        }(d);
        function q(pe) {
          return q = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(Oe) {
            return typeof Oe;
          } : function(Oe) {
            return Oe && typeof Symbol == "function" && Oe.constructor === Symbol && Oe !== Symbol.prototype ? "symbol" : typeof Oe;
          }, q(pe);
        }
        function N(pe, Oe) {
          for (var xe = 0; xe < Oe.length; xe++) {
            var Ve = Oe[xe];
            Ve.enumerable = Ve.enumerable || false, Ve.configurable = true, "value" in Ve && (Ve.writable = true), Object.defineProperty(pe, H(Ve.key), Ve);
          }
        }
        function H(pe) {
          var Oe = function(xe, Ve) {
            if (q(xe) != "object" || !xe) return xe;
            var _e = xe[Symbol.toPrimitive];
            if (_e !== void 0) {
              var Be = _e.call(xe, Ve);
              if (q(Be) != "object") return Be;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(xe);
          }(pe, "string");
          return q(Oe) == "symbol" ? Oe : Oe + "";
        }
        function _(pe, Oe, xe) {
          return Oe = L(Oe), function(Ve, _e) {
            if (_e && (q(_e) == "object" || typeof _e == "function")) return _e;
            if (_e !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(Be) {
              if (Be === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return Be;
            }(Ve);
          }(pe, x() ? Reflect.construct(Oe, xe || [], L(pe).constructor) : Oe.apply(pe, xe));
        }
        function x() {
          try {
            var pe = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (x = function() {
            return !!pe;
          })();
        }
        function L(pe) {
          return L = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(Oe) {
            return Oe.__proto__ || Object.getPrototypeOf(Oe);
          }, L(pe);
        }
        function j(pe, Oe) {
          return j = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(xe, Ve) {
            return xe.__proto__ = Ve, xe;
          }, j(pe, Oe);
        }
        var z = function(pe) {
          function Oe(Be, Qe) {
            var ee;
            (function(T, O) {
              if (!(T instanceof O)) throw new TypeError("Cannot call a class as a function");
            })(this, Oe);
            var P = (this instanceof Oe ? this.constructor : void 0).prototype;
            return (ee = _(this, Oe, [Be, Qe])).__proto__ = P, ee.constructor = Oe, ee.name = "BadRequestError", ee;
          }
          return function(Be, Qe) {
            if (typeof Qe != "function" && Qe !== null) throw new TypeError("Super expression must either be null or a function");
            Be.prototype = Object.create(Qe && Qe.prototype, { constructor: { value: Be, writable: true, configurable: true } }), Object.defineProperty(Be, "prototype", { writable: false }), Qe && j(Be, Qe);
          }(Oe, pe), xe = Oe, Ve && N(xe.prototype, Ve), _e && N(xe, _e), Object.defineProperty(xe, "prototype", { writable: false }), xe;
          var xe, Ve, _e;
        }(d);
        function Z(pe) {
          return Z = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(Oe) {
            return typeof Oe;
          } : function(Oe) {
            return Oe && typeof Symbol == "function" && Oe.constructor === Symbol && Oe !== Symbol.prototype ? "symbol" : typeof Oe;
          }, Z(pe);
        }
        function ue(pe, Oe) {
          for (var xe = 0; xe < Oe.length; xe++) {
            var Ve = Oe[xe];
            Ve.enumerable = Ve.enumerable || false, Ve.configurable = true, "value" in Ve && (Ve.writable = true), Object.defineProperty(pe, $(Ve.key), Ve);
          }
        }
        function $(pe) {
          var Oe = function(xe, Ve) {
            if (Z(xe) != "object" || !xe) return xe;
            var _e = xe[Symbol.toPrimitive];
            if (_e !== void 0) {
              var Be = _e.call(xe, Ve);
              if (Z(Be) != "object") return Be;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(xe);
          }(pe, "string");
          return Z(Oe) == "symbol" ? Oe : Oe + "";
        }
        function X(pe, Oe, xe) {
          return Oe = B(Oe), function(Ve, _e) {
            if (_e && (Z(_e) == "object" || typeof _e == "function")) return _e;
            if (_e !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(Be) {
              if (Be === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return Be;
            }(Ve);
          }(pe, J() ? Reflect.construct(Oe, xe || [], B(pe).constructor) : Oe.apply(pe, xe));
        }
        function J() {
          try {
            var pe = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (J = function() {
            return !!pe;
          })();
        }
        function B(pe) {
          return B = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(Oe) {
            return Oe.__proto__ || Object.getPrototypeOf(Oe);
          }, B(pe);
        }
        function Q(pe, Oe) {
          return Q = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(xe, Ve) {
            return xe.__proto__ = Ve, xe;
          }, Q(pe, Oe);
        }
        var ne = function(pe) {
          function Oe(Be, Qe) {
            var ee;
            (function(T, O) {
              if (!(T instanceof O)) throw new TypeError("Cannot call a class as a function");
            })(this, Oe);
            var P = (this instanceof Oe ? this.constructor : void 0).prototype;
            return (ee = X(this, Oe, [Be, Qe])).__proto__ = P, ee.constructor = Oe, ee.name = "BadResponseError", ee;
          }
          return function(Be, Qe) {
            if (typeof Qe != "function" && Qe !== null) throw new TypeError("Super expression must either be null or a function");
            Be.prototype = Object.create(Qe && Qe.prototype, { constructor: { value: Be, writable: true, configurable: true } }), Object.defineProperty(Be, "prototype", { writable: false }), Qe && Q(Be, Qe);
          }(Oe, pe), xe = Oe, Ve && ue(xe.prototype, Ve), _e && ue(xe, _e), Object.defineProperty(xe, "prototype", { writable: false }), xe;
          var xe, Ve, _e;
        }(d);
        function K(pe) {
          return K = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(Oe) {
            return typeof Oe;
          } : function(Oe) {
            return Oe && typeof Symbol == "function" && Oe.constructor === Symbol && Oe !== Symbol.prototype ? "symbol" : typeof Oe;
          }, K(pe);
        }
        function ie(pe, Oe) {
          for (var xe = 0; xe < Oe.length; xe++) {
            var Ve = Oe[xe];
            Ve.enumerable = Ve.enumerable || false, Ve.configurable = true, "value" in Ve && (Ve.writable = true), Object.defineProperty(pe, ce(Ve.key), Ve);
          }
        }
        function ce(pe) {
          var Oe = function(xe, Ve) {
            if (K(xe) != "object" || !xe) return xe;
            var _e = xe[Symbol.toPrimitive];
            if (_e !== void 0) {
              var Be = _e.call(xe, Ve);
              if (K(Be) != "object") return Be;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(xe);
          }(pe, "string");
          return K(Oe) == "symbol" ? Oe : Oe + "";
        }
        function ye(pe, Oe, xe) {
          return Oe = ge(Oe), function(Ve, _e) {
            if (_e && (K(_e) == "object" || typeof _e == "function")) return _e;
            if (_e !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(Be) {
              if (Be === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return Be;
            }(Ve);
          }(pe, se() ? Reflect.construct(Oe, xe || [], ge(pe).constructor) : Oe.apply(pe, xe));
        }
        function oe(pe) {
          var Oe = typeof Map == "function" ? /* @__PURE__ */ new Map() : void 0;
          return oe = function(xe) {
            if (xe === null || !function(_e) {
              try {
                return Function.toString.call(_e).indexOf("[native code]") !== -1;
              } catch {
                return typeof _e == "function";
              }
            }(xe)) return xe;
            if (typeof xe != "function") throw new TypeError("Super expression must either be null or a function");
            if (Oe !== void 0) {
              if (Oe.has(xe)) return Oe.get(xe);
              Oe.set(xe, Ve);
            }
            function Ve() {
              return function(_e, Be, Qe) {
                if (se()) return Reflect.construct.apply(null, arguments);
                var ee = [null];
                ee.push.apply(ee, Be);
                var P = new (_e.bind.apply(_e, ee))();
                return Qe && re(P, Qe.prototype), P;
              }(xe, arguments, ge(this).constructor);
            }
            return Ve.prototype = Object.create(xe.prototype, { constructor: { value: Ve, enumerable: false, writable: true, configurable: true } }), re(Ve, xe);
          }, oe(pe);
        }
        function se() {
          try {
            var pe = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (se = function() {
            return !!pe;
          })();
        }
        function re(pe, Oe) {
          return re = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(xe, Ve) {
            return xe.__proto__ = Ve, xe;
          }, re(pe, Oe);
        }
        function ge(pe) {
          return ge = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(Oe) {
            return Oe.__proto__ || Object.getPrototypeOf(Oe);
          }, ge(pe);
        }
        var Te = function(pe) {
          function Oe(Be, Qe, ee) {
            var P;
            (function(O, V) {
              if (!(O instanceof V)) throw new TypeError("Cannot call a class as a function");
            })(this, Oe);
            var T = (this instanceof Oe ? this.constructor : void 0).prototype;
            return (P = ye(this, Oe, [Be])).__proto__ = T, P.constructor = Oe, P.name = "AccountRequiresMemoError", P.accountId = Qe, P.operationIndex = ee, P;
          }
          return function(Be, Qe) {
            if (typeof Qe != "function" && Qe !== null) throw new TypeError("Super expression must either be null or a function");
            Be.prototype = Object.create(Qe && Qe.prototype, { constructor: { value: Be, writable: true, configurable: true } }), Object.defineProperty(Be, "prototype", { writable: false }), Qe && re(Be, Qe);
          }(Oe, pe), xe = Oe, Ve && ie(xe.prototype, Ve), _e && ie(xe, _e), Object.defineProperty(xe, "prototype", { writable: false }), xe;
          var xe, Ve, _e;
        }(oe(Error));
      }, 6048: (t) => {
        var o = {};
        function s(h, f, r) {
          r || (r = Error);
          var m = function(g) {
            var a, l;
            function d(b, S, E) {
              return g.call(this, function(R, k, w) {
                return typeof f == "string" ? f : f(R, k, w);
              }(b, S, E)) || this;
            }
            return l = g, (a = d).prototype = Object.create(l.prototype), a.prototype.constructor = a, a.__proto__ = l, d;
          }(r);
          m.prototype.name = r.name, m.prototype.code = h, o[h] = m;
        }
        function c(h, f) {
          if (Array.isArray(h)) {
            var r = h.length;
            return h = h.map(function(m) {
              return String(m);
            }), r > 2 ? "one of ".concat(f, " ").concat(h.slice(0, r - 1).join(", "), ", or ") + h[r - 1] : r === 2 ? "one of ".concat(f, " ").concat(h[0], " or ").concat(h[1]) : "of ".concat(f, " ").concat(h[0]);
          }
          return "of ".concat(f, " ").concat(String(h));
        }
        s("ERR_INVALID_OPT_VALUE", function(h, f) {
          return 'The value "' + f + '" is invalid for option "' + h + '"';
        }, TypeError), s("ERR_INVALID_ARG_TYPE", function(h, f, r) {
          var m, g, a;
          if (typeof f == "string" && (g = "not ", f.substr(0, g.length) === g) ? (m = "must not be", f = f.replace(/^not /, "")) : m = "must be", function(d, b, S) {
            return (S === void 0 || S > d.length) && (S = d.length), d.substring(S - b.length, S) === b;
          }(h, " argument")) a = "The ".concat(h, " ").concat(m, " ").concat(c(f, "type"));
          else {
            var l = function(d, b, S) {
              return typeof S != "number" && (S = 0), !(S + b.length > d.length) && d.indexOf(b, S) !== -1;
            }(h, ".") ? "property" : "argument";
            a = 'The "'.concat(h, '" ').concat(l, " ").concat(m, " ").concat(c(f, "type"));
          }
          return a += ". Received type ".concat(typeof r);
        }, TypeError), s("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF"), s("ERR_METHOD_NOT_IMPLEMENTED", function(h) {
          return "The " + h + " method is not implemented";
        }), s("ERR_STREAM_PREMATURE_CLOSE", "Premature close"), s("ERR_STREAM_DESTROYED", function(h) {
          return "Cannot call " + h + " after a stream was destroyed";
        }), s("ERR_MULTIPLE_CALLBACK", "Callback called multiple times"), s("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable"), s("ERR_STREAM_WRITE_AFTER_END", "write after end"), s("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError), s("ERR_UNKNOWN_ENCODING", function(h) {
          return "Unknown encoding: " + h;
        }, TypeError), s("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event"), t.exports.F = o;
      }, 6121: (t, o, s) => {
        s.r(o), s.d(o, { axiosClient: () => be, create: () => Or });
        var c = {};
        function h(Ue, it) {
          return function() {
            return Ue.apply(it, arguments);
          };
        }
        s.r(c), s.d(c, { hasBrowserEnv: () => de, hasStandardBrowserEnv: () => Ne, hasStandardBrowserWebWorkerEnv: () => ut, navigator: () => tt, origin: () => Ze });
        const { toString: f } = Object.prototype, { getPrototypeOf: r } = Object, m = (g = /* @__PURE__ */ Object.create(null), (Ue) => {
          const it = f.call(Ue);
          return g[it] || (g[it] = it.slice(8, -1).toLowerCase());
        });
        var g;
        const a = (Ue) => (Ue = Ue.toLowerCase(), (it) => m(it) === Ue), l = (Ue) => (it) => typeof it === Ue, { isArray: d } = Array, b = l("undefined"), S = a("ArrayBuffer"), E = l("string"), R = l("function"), k = l("number"), w = (Ue) => Ue !== null && typeof Ue == "object", F = (Ue) => {
          if (m(Ue) !== "object") return false;
          const it = r(Ue);
          return !(it !== null && it !== Object.prototype && Object.getPrototypeOf(it) !== null || Symbol.toStringTag in Ue || Symbol.iterator in Ue);
        }, I = a("Date"), q = a("File"), N = a("Blob"), H = a("FileList"), _ = a("URLSearchParams"), [x, L, j, z] = ["ReadableStream", "Request", "Response", "Headers"].map(a);
        function Z(Ue, it, { allOwnKeys: dt = false } = {}) {
          if (Ue == null) return;
          let vt, wt;
          if (typeof Ue != "object" && (Ue = [Ue]), d(Ue)) for (vt = 0, wt = Ue.length; vt < wt; vt++) it.call(null, Ue[vt], vt, Ue);
          else {
            const Pt = dt ? Object.getOwnPropertyNames(Ue) : Object.keys(Ue), Yt = Pt.length;
            let cr;
            for (vt = 0; vt < Yt; vt++) cr = Pt[vt], it.call(null, Ue[cr], cr, Ue);
          }
        }
        function ue(Ue, it) {
          it = it.toLowerCase();
          const dt = Object.keys(Ue);
          let vt, wt = dt.length;
          for (; wt-- > 0; ) if (vt = dt[wt], it === vt.toLowerCase()) return vt;
          return null;
        }
        const $ = typeof globalThis < "u" ? globalThis : typeof self < "u" ? self : typeof window < "u" ? window : vc, X = (Ue) => !b(Ue) && Ue !== $, J = (B = typeof Uint8Array < "u" && r(Uint8Array), (Ue) => B && Ue instanceof B);
        var B;
        const Q = a("HTMLFormElement"), ne = (({ hasOwnProperty: Ue }) => (it, dt) => Ue.call(it, dt))(Object.prototype), K = a("RegExp"), ie = (Ue, it) => {
          const dt = Object.getOwnPropertyDescriptors(Ue), vt = {};
          Z(dt, (wt, Pt) => {
            let Yt;
            (Yt = it(wt, Pt, Ue)) !== false && (vt[Pt] = Yt || wt);
          }), Object.defineProperties(Ue, vt);
        }, ce = a("AsyncFunction"), ye = (oe = typeof setImmediate == "function", se = R($.postMessage), oe ? setImmediate : se ? (re = `axios@${Math.random()}`, ge = [], $.addEventListener("message", ({ source: Ue, data: it }) => {
          Ue === $ && it === re && ge.length && ge.shift()();
        }, false), (Ue) => {
          ge.push(Ue), $.postMessage(re, "*");
        }) : (Ue) => setTimeout(Ue));
        var oe, se, re, ge;
        const Te = typeof queueMicrotask < "u" ? queueMicrotask.bind($) : typeof process < "u" && process.nextTick || ye, pe = { isArray: d, isArrayBuffer: S, isBuffer: function(Ue) {
          return Ue !== null && !b(Ue) && Ue.constructor !== null && !b(Ue.constructor) && R(Ue.constructor.isBuffer) && Ue.constructor.isBuffer(Ue);
        }, isFormData: (Ue) => {
          let it;
          return Ue && (typeof FormData == "function" && Ue instanceof FormData || R(Ue.append) && ((it = m(Ue)) === "formdata" || it === "object" && R(Ue.toString) && Ue.toString() === "[object FormData]"));
        }, isArrayBufferView: function(Ue) {
          let it;
          return it = typeof ArrayBuffer < "u" && ArrayBuffer.isView ? ArrayBuffer.isView(Ue) : Ue && Ue.buffer && S(Ue.buffer), it;
        }, isString: E, isNumber: k, isBoolean: (Ue) => Ue === true || Ue === false, isObject: w, isPlainObject: F, isReadableStream: x, isRequest: L, isResponse: j, isHeaders: z, isUndefined: b, isDate: I, isFile: q, isBlob: N, isRegExp: K, isFunction: R, isStream: (Ue) => w(Ue) && R(Ue.pipe), isURLSearchParams: _, isTypedArray: J, isFileList: H, forEach: Z, merge: function Ue() {
          const { caseless: it } = X(this) && this || {}, dt = {}, vt = (wt, Pt) => {
            const Yt = it && ue(dt, Pt) || Pt;
            F(dt[Yt]) && F(wt) ? dt[Yt] = Ue(dt[Yt], wt) : F(wt) ? dt[Yt] = Ue({}, wt) : d(wt) ? dt[Yt] = wt.slice() : dt[Yt] = wt;
          };
          for (let wt = 0, Pt = arguments.length; wt < Pt; wt++) arguments[wt] && Z(arguments[wt], vt);
          return dt;
        }, extend: (Ue, it, dt, { allOwnKeys: vt } = {}) => (Z(it, (wt, Pt) => {
          dt && R(wt) ? Ue[Pt] = h(wt, dt) : Ue[Pt] = wt;
        }, { allOwnKeys: vt }), Ue), trim: (Ue) => Ue.trim ? Ue.trim() : Ue.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, ""), stripBOM: (Ue) => (Ue.charCodeAt(0) === 65279 && (Ue = Ue.slice(1)), Ue), inherits: (Ue, it, dt, vt) => {
          Ue.prototype = Object.create(it.prototype, vt), Ue.prototype.constructor = Ue, Object.defineProperty(Ue, "super", { value: it.prototype }), dt && Object.assign(Ue.prototype, dt);
        }, toFlatObject: (Ue, it, dt, vt) => {
          let wt, Pt, Yt;
          const cr = {};
          if (it = it || {}, Ue == null) return it;
          do {
            for (wt = Object.getOwnPropertyNames(Ue), Pt = wt.length; Pt-- > 0; ) Yt = wt[Pt], vt && !vt(Yt, Ue, it) || cr[Yt] || (it[Yt] = Ue[Yt], cr[Yt] = true);
            Ue = dt !== false && r(Ue);
          } while (Ue && (!dt || dt(Ue, it)) && Ue !== Object.prototype);
          return it;
        }, kindOf: m, kindOfTest: a, endsWith: (Ue, it, dt) => {
          Ue = String(Ue), (dt === void 0 || dt > Ue.length) && (dt = Ue.length), dt -= it.length;
          const vt = Ue.indexOf(it, dt);
          return vt !== -1 && vt === dt;
        }, toArray: (Ue) => {
          if (!Ue) return null;
          if (d(Ue)) return Ue;
          let it = Ue.length;
          if (!k(it)) return null;
          const dt = new Array(it);
          for (; it-- > 0; ) dt[it] = Ue[it];
          return dt;
        }, forEachEntry: (Ue, it) => {
          const dt = (Ue && Ue[Symbol.iterator]).call(Ue);
          let vt;
          for (; (vt = dt.next()) && !vt.done; ) {
            const wt = vt.value;
            it.call(Ue, wt[0], wt[1]);
          }
        }, matchAll: (Ue, it) => {
          let dt;
          const vt = [];
          for (; (dt = Ue.exec(it)) !== null; ) vt.push(dt);
          return vt;
        }, isHTMLForm: Q, hasOwnProperty: ne, hasOwnProp: ne, reduceDescriptors: ie, freezeMethods: (Ue) => {
          ie(Ue, (it, dt) => {
            if (R(Ue) && ["arguments", "caller", "callee"].indexOf(dt) !== -1) return false;
            const vt = Ue[dt];
            R(vt) && (it.enumerable = false, "writable" in it ? it.writable = false : it.set || (it.set = () => {
              throw Error("Can not rewrite read-only method '" + dt + "'");
            }));
          });
        }, toObjectSet: (Ue, it) => {
          const dt = {}, vt = (wt) => {
            wt.forEach((Pt) => {
              dt[Pt] = true;
            });
          };
          return d(Ue) ? vt(Ue) : vt(String(Ue).split(it)), dt;
        }, toCamelCase: (Ue) => Ue.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g, function(it, dt, vt) {
          return dt.toUpperCase() + vt;
        }), noop: () => {
        }, toFiniteNumber: (Ue, it) => Ue != null && Number.isFinite(Ue = +Ue) ? Ue : it, findKey: ue, global: $, isContextDefined: X, isSpecCompliantForm: function(Ue) {
          return !!(Ue && R(Ue.append) && Ue[Symbol.toStringTag] === "FormData" && Ue[Symbol.iterator]);
        }, toJSONObject: (Ue) => {
          const it = new Array(10), dt = (vt, wt) => {
            if (w(vt)) {
              if (it.indexOf(vt) >= 0) return;
              if (!("toJSON" in vt)) {
                it[wt] = vt;
                const Pt = d(vt) ? [] : {};
                return Z(vt, (Yt, cr) => {
                  const qr = dt(Yt, wt + 1);
                  !b(qr) && (Pt[cr] = qr);
                }), it[wt] = void 0, Pt;
              }
            }
            return vt;
          };
          return dt(Ue, 0);
        }, isAsyncFn: ce, isThenable: (Ue) => Ue && (w(Ue) || R(Ue)) && R(Ue.then) && R(Ue.catch), setImmediate: ye, asap: Te };
        function Oe(Ue, it, dt, vt, wt) {
          Error.call(this), Error.captureStackTrace ? Error.captureStackTrace(this, this.constructor) : this.stack = new Error().stack, this.message = Ue, this.name = "AxiosError", it && (this.code = it), dt && (this.config = dt), vt && (this.request = vt), wt && (this.response = wt, this.status = wt.status ? wt.status : null);
        }
        pe.inherits(Oe, Error, { toJSON: function() {
          return { message: this.message, name: this.name, description: this.description, number: this.number, fileName: this.fileName, lineNumber: this.lineNumber, columnNumber: this.columnNumber, stack: this.stack, config: pe.toJSONObject(this.config), code: this.code, status: this.status };
        } });
        const xe = Oe.prototype, Ve = {};
        ["ERR_BAD_OPTION_VALUE", "ERR_BAD_OPTION", "ECONNABORTED", "ETIMEDOUT", "ERR_NETWORK", "ERR_FR_TOO_MANY_REDIRECTS", "ERR_DEPRECATED", "ERR_BAD_RESPONSE", "ERR_BAD_REQUEST", "ERR_CANCELED", "ERR_NOT_SUPPORT", "ERR_INVALID_URL"].forEach((Ue) => {
          Ve[Ue] = { value: Ue };
        }), Object.defineProperties(Oe, Ve), Object.defineProperty(xe, "isAxiosError", { value: true }), Oe.from = (Ue, it, dt, vt, wt, Pt) => {
          const Yt = Object.create(xe);
          return pe.toFlatObject(Ue, Yt, function(cr) {
            return cr !== Error.prototype;
          }, (cr) => cr !== "isAxiosError"), Oe.call(Yt, Ue.message, it, dt, vt, wt), Yt.cause = Ue, Yt.name = Ue.name, Pt && Object.assign(Yt, Pt), Yt;
        };
        const _e = Oe;
        var Be = s(8287).Buffer;
        function Qe(Ue) {
          return pe.isPlainObject(Ue) || pe.isArray(Ue);
        }
        function ee(Ue) {
          return pe.endsWith(Ue, "[]") ? Ue.slice(0, -2) : Ue;
        }
        function P(Ue, it, dt) {
          return Ue ? Ue.concat(it).map(function(vt, wt) {
            return vt = ee(vt), !dt && wt ? "[" + vt + "]" : vt;
          }).join(dt ? "." : "") : it;
        }
        const T = pe.toFlatObject(pe, {}, null, function(Ue) {
          return /^is[A-Z]/.test(Ue);
        }), O = function(Ue, it, dt) {
          if (!pe.isObject(Ue)) throw new TypeError("target must be an object");
          it = it || new FormData();
          const vt = (dt = pe.toFlatObject(dt, { metaTokens: true, dots: false, indexes: false }, false, function(Me, De) {
            return !pe.isUndefined(De[Me]);
          })).metaTokens, wt = dt.visitor || Vt, Pt = dt.dots, Yt = dt.indexes, cr = (dt.Blob || typeof Blob < "u" && Blob) && pe.isSpecCompliantForm(it);
          if (!pe.isFunction(wt)) throw new TypeError("visitor must be a function");
          function qr(Me) {
            if (Me === null) return "";
            if (pe.isDate(Me)) return Me.toISOString();
            if (!cr && pe.isBlob(Me)) throw new _e("Blob is not supported. Use a Buffer instead.");
            return pe.isArrayBuffer(Me) || pe.isTypedArray(Me) ? cr && typeof Blob == "function" ? new Blob([Me]) : Be.from(Me) : Me;
          }
          function Vt(Me, De, Ke) {
            let Bt = Me;
            if (Me && !Ke && typeof Me == "object") {
              if (pe.endsWith(De, "{}")) De = vt ? De : De.slice(0, -2), Me = JSON.stringify(Me);
              else if (pe.isArray(Me) && function(St) {
                return pe.isArray(St) && !St.some(Qe);
              }(Me) || (pe.isFileList(Me) || pe.endsWith(De, "[]")) && (Bt = pe.toArray(Me))) return De = ee(De), Bt.forEach(function(St, ur) {
                !pe.isUndefined(St) && St !== null && it.append(Yt === true ? P([De], ur, Pt) : Yt === null ? De : De + "[]", qr(St));
              }), false;
            }
            return !!Qe(Me) || (it.append(P(Ke, De, Pt), qr(Me)), false);
          }
          const zr = [], en = Object.assign(T, { defaultVisitor: Vt, convertValue: qr, isVisitable: Qe });
          if (!pe.isObject(Ue)) throw new TypeError("data must be an object");
          return function Me(De, Ke) {
            if (!pe.isUndefined(De)) {
              if (zr.indexOf(De) !== -1) throw Error("Circular reference detected in " + Ke.join("."));
              zr.push(De), pe.forEach(De, function(Bt, St) {
                (!(pe.isUndefined(Bt) || Bt === null) && wt.call(it, Bt, pe.isString(St) ? St.trim() : St, Ke, en)) === true && Me(Bt, Ke ? Ke.concat(St) : [St]);
              }), zr.pop();
            }
          }(Ue), it;
        };
        function V(Ue) {
          const it = { "!": "%21", "'": "%27", "(": "%28", ")": "%29", "~": "%7E", "%20": "+", "%00": "\0" };
          return encodeURIComponent(Ue).replace(/[!'()~]|%20|%00/g, function(dt) {
            return it[dt];
          });
        }
        function D(Ue, it) {
          this._pairs = [], Ue && O(Ue, this, it);
        }
        const C = D.prototype;
        C.append = function(Ue, it) {
          this._pairs.push([Ue, it]);
        }, C.toString = function(Ue) {
          const it = Ue ? function(dt) {
            return Ue.call(this, dt, V);
          } : V;
          return this._pairs.map(function(dt) {
            return it(dt[0]) + "=" + it(dt[1]);
          }, "").join("&");
        };
        const p = D;
        function A(Ue) {
          return encodeURIComponent(Ue).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
        }
        function U(Ue, it, dt) {
          if (!it) return Ue;
          const vt = dt && dt.encode || A;
          pe.isFunction(dt) && (dt = { serialize: dt });
          const wt = dt && dt.serialize;
          let Pt;
          if (Pt = wt ? wt(it, dt) : pe.isURLSearchParams(it) ? it.toString() : new p(it, dt).toString(vt), Pt) {
            const Yt = Ue.indexOf("#");
            Yt !== -1 && (Ue = Ue.slice(0, Yt)), Ue += (Ue.indexOf("?") === -1 ? "?" : "&") + Pt;
          }
          return Ue;
        }
        const Y = class {
          constructor() {
            this.handlers = [];
          }
          use(Ue, it, dt) {
            return this.handlers.push({ fulfilled: Ue, rejected: it, synchronous: !!dt && dt.synchronous, runWhen: dt ? dt.runWhen : null }), this.handlers.length - 1;
          }
          eject(Ue) {
            this.handlers[Ue] && (this.handlers[Ue] = null);
          }
          clear() {
            this.handlers && (this.handlers = []);
          }
          forEach(Ue) {
            pe.forEach(this.handlers, function(it) {
              it !== null && Ue(it);
            });
          }
        }, ae = { silentJSONParsing: true, forcedJSONParsing: true, clarifyTimeoutError: false }, W = { isBrowser: true, classes: { URLSearchParams: typeof URLSearchParams < "u" ? URLSearchParams : p, FormData: typeof FormData < "u" ? FormData : null, Blob: typeof Blob < "u" ? Blob : null }, protocols: ["http", "https", "file", "blob", "url", "data"] }, de = typeof window < "u" && typeof document < "u", tt = typeof navigator == "object" && navigator || void 0, Ne = de && (!tt || ["ReactNative", "NativeScript", "NS"].indexOf(tt.product) < 0), ut = typeof WorkerGlobalScope < "u" && self instanceof WorkerGlobalScope && typeof self.importScripts == "function", Ze = de && window.location.href || "http://localhost", Et = { ...c, ...W }, rr = function(Ue) {
          function it(dt, vt, wt, Pt) {
            let Yt = dt[Pt++];
            if (Yt === "__proto__") return true;
            const cr = Number.isFinite(+Yt), qr = Pt >= dt.length;
            return Yt = !Yt && pe.isArray(wt) ? wt.length : Yt, qr ? (pe.hasOwnProp(wt, Yt) ? wt[Yt] = [wt[Yt], vt] : wt[Yt] = vt, !cr) : (wt[Yt] && pe.isObject(wt[Yt]) || (wt[Yt] = []), it(dt, vt, wt[Yt], Pt) && pe.isArray(wt[Yt]) && (wt[Yt] = function(Vt) {
              const zr = {}, en = Object.keys(Vt);
              let Me;
              const De = en.length;
              let Ke;
              for (Me = 0; Me < De; Me++) Ke = en[Me], zr[Ke] = Vt[Ke];
              return zr;
            }(wt[Yt])), !cr);
          }
          if (pe.isFormData(Ue) && pe.isFunction(Ue.entries)) {
            const dt = {};
            return pe.forEachEntry(Ue, (vt, wt) => {
              it(function(Pt) {
                return pe.matchAll(/\w+|\[(\w*)]/g, Pt).map((Yt) => Yt[0] === "[]" ? "" : Yt[1] || Yt[0]);
              }(vt), wt, dt, 0);
            }), dt;
          }
          return null;
        }, je = { transitional: ae, adapter: ["xhr", "http", "fetch"], transformRequest: [function(Ue, it) {
          const dt = it.getContentType() || "", vt = dt.indexOf("application/json") > -1, wt = pe.isObject(Ue);
          if (wt && pe.isHTMLForm(Ue) && (Ue = new FormData(Ue)), pe.isFormData(Ue)) return vt ? JSON.stringify(rr(Ue)) : Ue;
          if (pe.isArrayBuffer(Ue) || pe.isBuffer(Ue) || pe.isStream(Ue) || pe.isFile(Ue) || pe.isBlob(Ue) || pe.isReadableStream(Ue)) return Ue;
          if (pe.isArrayBufferView(Ue)) return Ue.buffer;
          if (pe.isURLSearchParams(Ue)) return it.setContentType("application/x-www-form-urlencoded;charset=utf-8", false), Ue.toString();
          let Pt;
          if (wt) {
            if (dt.indexOf("application/x-www-form-urlencoded") > -1) return function(Yt, cr) {
              return O(Yt, new Et.classes.URLSearchParams(), Object.assign({ visitor: function(qr, Vt, zr, en) {
                return Et.isNode && pe.isBuffer(qr) ? (this.append(Vt, qr.toString("base64")), false) : en.defaultVisitor.apply(this, arguments);
              } }, cr));
            }(Ue, this.formSerializer).toString();
            if ((Pt = pe.isFileList(Ue)) || dt.indexOf("multipart/form-data") > -1) {
              const Yt = this.env && this.env.FormData;
              return O(Pt ? { "files[]": Ue } : Ue, Yt && new Yt(), this.formSerializer);
            }
          }
          return wt || vt ? (it.setContentType("application/json", false), function(Yt, cr, qr) {
            if (pe.isString(Yt)) try {
              return (cr || JSON.parse)(Yt), pe.trim(Yt);
            } catch (Vt) {
              if (Vt.name !== "SyntaxError") throw Vt;
            }
            return (qr || JSON.stringify)(Yt);
          }(Ue)) : Ue;
        }], transformResponse: [function(Ue) {
          const it = this.transitional || je.transitional, dt = it && it.forcedJSONParsing, vt = this.responseType === "json";
          if (pe.isResponse(Ue) || pe.isReadableStream(Ue)) return Ue;
          if (Ue && pe.isString(Ue) && (dt && !this.responseType || vt)) {
            const wt = !(it && it.silentJSONParsing) && vt;
            try {
              return JSON.parse(Ue);
            } catch (Pt) {
              if (wt) throw Pt.name === "SyntaxError" ? _e.from(Pt, _e.ERR_BAD_RESPONSE, this, null, this.response) : Pt;
            }
          }
          return Ue;
        }], timeout: 0, xsrfCookieName: "XSRF-TOKEN", xsrfHeaderName: "X-XSRF-TOKEN", maxContentLength: -1, maxBodyLength: -1, env: { FormData: Et.classes.FormData, Blob: Et.classes.Blob }, validateStatus: function(Ue) {
          return Ue >= 200 && Ue < 300;
        }, headers: { common: { Accept: "application/json, text/plain, */*", "Content-Type": void 0 } } };
        pe.forEach(["delete", "get", "head", "post", "put", "patch"], (Ue) => {
          je.headers[Ue] = {};
        });
        const Ge = je, at = pe.toObjectSet(["age", "authorization", "content-length", "content-type", "etag", "expires", "from", "host", "if-modified-since", "if-unmodified-since", "last-modified", "location", "max-forwards", "proxy-authorization", "referer", "retry-after", "user-agent"]), Ae = Symbol("internals");
        function qe(Ue) {
          return Ue && String(Ue).trim().toLowerCase();
        }
        function Ft(Ue) {
          return Ue === false || Ue == null ? Ue : pe.isArray(Ue) ? Ue.map(Ft) : String(Ue);
        }
        function Dt(Ue, it, dt, vt, wt) {
          return pe.isFunction(vt) ? vt.call(this, it, dt) : (wt && (it = dt), pe.isString(it) ? pe.isString(vt) ? it.indexOf(vt) !== -1 : pe.isRegExp(vt) ? vt.test(it) : void 0 : void 0);
        }
        class wr {
          constructor(it) {
            it && this.set(it);
          }
          set(it, dt, vt) {
            const wt = this;
            function Pt(cr, qr, Vt) {
              const zr = qe(qr);
              if (!zr) throw new Error("header name must be a non-empty string");
              const en = pe.findKey(wt, zr);
              (!en || wt[en] === void 0 || Vt === true || Vt === void 0 && wt[en] !== false) && (wt[en || qr] = Ft(cr));
            }
            const Yt = (cr, qr) => pe.forEach(cr, (Vt, zr) => Pt(Vt, zr, qr));
            if (pe.isPlainObject(it) || it instanceof this.constructor) Yt(it, dt);
            else if (pe.isString(it) && (it = it.trim()) && !/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(it.trim())) Yt(((cr) => {
              const qr = {};
              let Vt, zr, en;
              return cr && cr.split(`
`).forEach(function(Me) {
                en = Me.indexOf(":"), Vt = Me.substring(0, en).trim().toLowerCase(), zr = Me.substring(en + 1).trim(), !Vt || qr[Vt] && at[Vt] || (Vt === "set-cookie" ? qr[Vt] ? qr[Vt].push(zr) : qr[Vt] = [zr] : qr[Vt] = qr[Vt] ? qr[Vt] + ", " + zr : zr);
              }), qr;
            })(it), dt);
            else if (pe.isHeaders(it)) for (const [cr, qr] of it.entries()) Pt(qr, cr, vt);
            else it != null && Pt(dt, it, vt);
            return this;
          }
          get(it, dt) {
            if (it = qe(it)) {
              const vt = pe.findKey(this, it);
              if (vt) {
                const wt = this[vt];
                if (!dt) return wt;
                if (dt === true) return function(Pt) {
                  const Yt = /* @__PURE__ */ Object.create(null), cr = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
                  let qr;
                  for (; qr = cr.exec(Pt); ) Yt[qr[1]] = qr[2];
                  return Yt;
                }(wt);
                if (pe.isFunction(dt)) return dt.call(this, wt, vt);
                if (pe.isRegExp(dt)) return dt.exec(wt);
                throw new TypeError("parser must be boolean|regexp|function");
              }
            }
          }
          has(it, dt) {
            if (it = qe(it)) {
              const vt = pe.findKey(this, it);
              return !(!vt || this[vt] === void 0 || dt && !Dt(0, this[vt], vt, dt));
            }
            return false;
          }
          delete(it, dt) {
            const vt = this;
            let wt = false;
            function Pt(Yt) {
              if (Yt = qe(Yt)) {
                const cr = pe.findKey(vt, Yt);
                !cr || dt && !Dt(0, vt[cr], cr, dt) || (delete vt[cr], wt = true);
              }
            }
            return pe.isArray(it) ? it.forEach(Pt) : Pt(it), wt;
          }
          clear(it) {
            const dt = Object.keys(this);
            let vt = dt.length, wt = false;
            for (; vt--; ) {
              const Pt = dt[vt];
              it && !Dt(0, this[Pt], Pt, it, true) || (delete this[Pt], wt = true);
            }
            return wt;
          }
          normalize(it) {
            const dt = this, vt = {};
            return pe.forEach(this, (wt, Pt) => {
              const Yt = pe.findKey(vt, Pt);
              if (Yt) return dt[Yt] = Ft(wt), void delete dt[Pt];
              const cr = it ? function(qr) {
                return qr.trim().toLowerCase().replace(/([a-z\d])(\w*)/g, (Vt, zr, en) => zr.toUpperCase() + en);
              }(Pt) : String(Pt).trim();
              cr !== Pt && delete dt[Pt], dt[cr] = Ft(wt), vt[cr] = true;
            }), this;
          }
          concat(...it) {
            return this.constructor.concat(this, ...it);
          }
          toJSON(it) {
            const dt = /* @__PURE__ */ Object.create(null);
            return pe.forEach(this, (vt, wt) => {
              vt != null && vt !== false && (dt[wt] = it && pe.isArray(vt) ? vt.join(", ") : vt);
            }), dt;
          }
          [Symbol.iterator]() {
            return Object.entries(this.toJSON())[Symbol.iterator]();
          }
          toString() {
            return Object.entries(this.toJSON()).map(([it, dt]) => it + ": " + dt).join(`
`);
          }
          get [Symbol.toStringTag]() {
            return "AxiosHeaders";
          }
          static from(it) {
            return it instanceof this ? it : new this(it);
          }
          static concat(it, ...dt) {
            const vt = new this(it);
            return dt.forEach((wt) => vt.set(wt)), vt;
          }
          static accessor(it) {
            const dt = (this[Ae] = this[Ae] = { accessors: {} }).accessors, vt = this.prototype;
            function wt(Pt) {
              const Yt = qe(Pt);
              dt[Yt] || (function(cr, qr) {
                const Vt = pe.toCamelCase(" " + qr);
                ["get", "set", "has"].forEach((zr) => {
                  Object.defineProperty(cr, zr + Vt, { value: function(en, Me, De) {
                    return this[zr].call(this, qr, en, Me, De);
                  }, configurable: true });
                });
              }(vt, Pt), dt[Yt] = true);
            }
            return pe.isArray(it) ? it.forEach(wt) : wt(it), this;
          }
        }
        wr.accessor(["Content-Type", "Content-Length", "Accept", "Accept-Encoding", "User-Agent", "Authorization"]), pe.reduceDescriptors(wr.prototype, ({ value: Ue }, it) => {
          let dt = it[0].toUpperCase() + it.slice(1);
          return { get: () => Ue, set(vt) {
            this[dt] = vt;
          } };
        }), pe.freezeMethods(wr);
        const Nt = wr;
        function yr(Ue, it) {
          const dt = this || Ge, vt = it || dt, wt = Nt.from(vt.headers);
          let Pt = vt.data;
          return pe.forEach(Ue, function(Yt) {
            Pt = Yt.call(dt, Pt, wt.normalize(), it ? it.status : void 0);
          }), wt.normalize(), Pt;
        }
        function Ur(Ue) {
          return !(!Ue || !Ue.__CANCEL__);
        }
        function Pe(Ue, it, dt) {
          _e.call(this, Ue ?? "canceled", _e.ERR_CANCELED, it, dt), this.name = "CanceledError";
        }
        pe.inherits(Pe, _e, { __CANCEL__: true });
        const $e = Pe;
        function le(Ue, it, dt) {
          const vt = dt.config.validateStatus;
          dt.status && vt && !vt(dt.status) ? it(new _e("Request failed with status code " + dt.status, [_e.ERR_BAD_REQUEST, _e.ERR_BAD_RESPONSE][Math.floor(dt.status / 100) - 4], dt.config, dt.request, dt)) : Ue(dt);
        }
        const te = function(Ue, it) {
          Ue = Ue || 10;
          const dt = new Array(Ue), vt = new Array(Ue);
          let wt, Pt = 0, Yt = 0;
          return it = it !== void 0 ? it : 1e3, function(cr) {
            const qr = Date.now(), Vt = vt[Yt];
            wt || (wt = qr), dt[Pt] = cr, vt[Pt] = qr;
            let zr = Yt, en = 0;
            for (; zr !== Pt; ) en += dt[zr++], zr %= Ue;
            if (Pt = (Pt + 1) % Ue, Pt === Yt && (Yt = (Yt + 1) % Ue), qr - wt < it) return;
            const Me = Vt && qr - Vt;
            return Me ? Math.round(1e3 * en / Me) : void 0;
          };
        }, Le = function(Ue, it) {
          let dt, vt, wt = 0, Pt = 1e3 / it;
          const Yt = (cr, qr = Date.now()) => {
            wt = qr, dt = null, vt && (clearTimeout(vt), vt = null), Ue.apply(null, cr);
          };
          return [(...cr) => {
            const qr = Date.now(), Vt = qr - wt;
            Vt >= Pt ? Yt(cr, qr) : (dt = cr, vt || (vt = setTimeout(() => {
              vt = null, Yt(dt);
            }, Pt - Vt)));
          }, () => dt && Yt(dt)];
        }, nt = (Ue, it, dt = 3) => {
          let vt = 0;
          const wt = te(50, 250);
          return Le((Pt) => {
            const Yt = Pt.loaded, cr = Pt.lengthComputable ? Pt.total : void 0, qr = Yt - vt, Vt = wt(qr);
            vt = Yt, Ue({ loaded: Yt, total: cr, progress: cr ? Yt / cr : void 0, bytes: qr, rate: Vt || void 0, estimated: Vt && cr && Yt <= cr ? (cr - Yt) / Vt : void 0, event: Pt, lengthComputable: cr != null, [it ? "download" : "upload"]: true });
          }, dt);
        }, ft = (Ue, it) => {
          const dt = Ue != null;
          return [(vt) => it[0]({ lengthComputable: dt, total: Ue, loaded: vt }), it[1]];
        }, zt = (Ue) => (...it) => pe.asap(() => Ue(...it)), st = Et.hasStandardBrowserEnv ? /* @__PURE__ */ ((Ue, it) => (dt) => (dt = new URL(dt, Et.origin), Ue.protocol === dt.protocol && Ue.host === dt.host && (it || Ue.port === dt.port)))(new URL(Et.origin), Et.navigator && /(msie|trident)/i.test(Et.navigator.userAgent)) : () => true, ct = Et.hasStandardBrowserEnv ? { write(Ue, it, dt, vt, wt, Pt) {
          const Yt = [Ue + "=" + encodeURIComponent(it)];
          pe.isNumber(dt) && Yt.push("expires=" + new Date(dt).toGMTString()), pe.isString(vt) && Yt.push("path=" + vt), pe.isString(wt) && Yt.push("domain=" + wt), Pt === true && Yt.push("secure"), document.cookie = Yt.join("; ");
        }, read(Ue) {
          const it = document.cookie.match(new RegExp("(^|;\\s*)(" + Ue + ")=([^;]*)"));
          return it ? decodeURIComponent(it[3]) : null;
        }, remove(Ue) {
          this.write(Ue, "", Date.now() - 864e5);
        } } : { write() {
        }, read: () => null, remove() {
        } };
        function yt(Ue, it, dt) {
          let vt = !/^([a-z][a-z\d+\-.]*:)?\/\//i.test(it);
          return Ue && (vt || dt == 0) ? function(wt, Pt) {
            return Pt ? wt.replace(/\/?\/$/, "") + "/" + Pt.replace(/^\/+/, "") : wt;
          }(Ue, it) : it;
        }
        const Zt = (Ue) => Ue instanceof Nt ? { ...Ue } : Ue;
        function Ct(Ue, it) {
          it = it || {};
          const dt = {};
          function vt(Vt, zr, en, Me) {
            return pe.isPlainObject(Vt) && pe.isPlainObject(zr) ? pe.merge.call({ caseless: Me }, Vt, zr) : pe.isPlainObject(zr) ? pe.merge({}, zr) : pe.isArray(zr) ? zr.slice() : zr;
          }
          function wt(Vt, zr, en, Me) {
            return pe.isUndefined(zr) ? pe.isUndefined(Vt) ? void 0 : vt(void 0, Vt, 0, Me) : vt(Vt, zr, 0, Me);
          }
          function Pt(Vt, zr) {
            if (!pe.isUndefined(zr)) return vt(void 0, zr);
          }
          function Yt(Vt, zr) {
            return pe.isUndefined(zr) ? pe.isUndefined(Vt) ? void 0 : vt(void 0, Vt) : vt(void 0, zr);
          }
          function cr(Vt, zr, en) {
            return en in it ? vt(Vt, zr) : en in Ue ? vt(void 0, Vt) : void 0;
          }
          const qr = { url: Pt, method: Pt, data: Pt, baseURL: Yt, transformRequest: Yt, transformResponse: Yt, paramsSerializer: Yt, timeout: Yt, timeoutMessage: Yt, withCredentials: Yt, withXSRFToken: Yt, adapter: Yt, responseType: Yt, xsrfCookieName: Yt, xsrfHeaderName: Yt, onUploadProgress: Yt, onDownloadProgress: Yt, decompress: Yt, maxContentLength: Yt, maxBodyLength: Yt, beforeRedirect: Yt, transport: Yt, httpAgent: Yt, httpsAgent: Yt, cancelToken: Yt, socketPath: Yt, responseEncoding: Yt, validateStatus: cr, headers: (Vt, zr, en) => wt(Zt(Vt), Zt(zr), 0, true) };
          return pe.forEach(Object.keys(Object.assign({}, Ue, it)), function(Vt) {
            const zr = qr[Vt] || wt, en = zr(Ue[Vt], it[Vt], Vt);
            pe.isUndefined(en) && zr !== cr || (dt[Vt] = en);
          }), dt;
        }
        const Lt = (Ue) => {
          const it = Ct({}, Ue);
          let dt, { data: vt, withXSRFToken: wt, xsrfHeaderName: Pt, xsrfCookieName: Yt, headers: cr, auth: qr } = it;
          if (it.headers = cr = Nt.from(cr), it.url = U(yt(it.baseURL, it.url, it.allowAbsoluteUrls), Ue.params, Ue.paramsSerializer), qr && cr.set("Authorization", "Basic " + btoa((qr.username || "") + ":" + (qr.password ? unescape(encodeURIComponent(qr.password)) : ""))), pe.isFormData(vt)) {
            if (Et.hasStandardBrowserEnv || Et.hasStandardBrowserWebWorkerEnv) cr.setContentType(void 0);
            else if ((dt = cr.getContentType()) !== false) {
              const [Vt, ...zr] = dt ? dt.split(";").map((en) => en.trim()).filter(Boolean) : [];
              cr.setContentType([Vt || "multipart/form-data", ...zr].join("; "));
            }
          }
          if (Et.hasStandardBrowserEnv && (wt && pe.isFunction(wt) && (wt = wt(it)), wt || wt !== false && st(it.url))) {
            const Vt = Pt && Yt && ct.read(Yt);
            Vt && cr.set(Pt, Vt);
          }
          return it;
        }, Wt = typeof XMLHttpRequest < "u" && function(Ue) {
          return new Promise(function(it, dt) {
            const vt = Lt(Ue);
            let wt = vt.data;
            const Pt = Nt.from(vt.headers).normalize();
            let Yt, cr, qr, Vt, zr, { responseType: en, onUploadProgress: Me, onDownloadProgress: De } = vt;
            function Ke() {
              Vt && Vt(), zr && zr(), vt.cancelToken && vt.cancelToken.unsubscribe(Yt), vt.signal && vt.signal.removeEventListener("abort", Yt);
            }
            let Bt = new XMLHttpRequest();
            function St() {
              if (!Bt) return;
              const Cr = Nt.from("getAllResponseHeaders" in Bt && Bt.getAllResponseHeaders());
              le(function(Wr) {
                it(Wr), Ke();
              }, function(Wr) {
                dt(Wr), Ke();
              }, { data: en && en !== "text" && en !== "json" ? Bt.response : Bt.responseText, status: Bt.status, statusText: Bt.statusText, headers: Cr, config: Ue, request: Bt }), Bt = null;
            }
            Bt.open(vt.method.toUpperCase(), vt.url, true), Bt.timeout = vt.timeout, "onloadend" in Bt ? Bt.onloadend = St : Bt.onreadystatechange = function() {
              Bt && Bt.readyState === 4 && (Bt.status !== 0 || Bt.responseURL && Bt.responseURL.indexOf("file:") === 0) && setTimeout(St);
            }, Bt.onabort = function() {
              Bt && (dt(new _e("Request aborted", _e.ECONNABORTED, Ue, Bt)), Bt = null);
            }, Bt.onerror = function() {
              dt(new _e("Network Error", _e.ERR_NETWORK, Ue, Bt)), Bt = null;
            }, Bt.ontimeout = function() {
              let Cr = vt.timeout ? "timeout of " + vt.timeout + "ms exceeded" : "timeout exceeded";
              const Wr = vt.transitional || ae;
              vt.timeoutErrorMessage && (Cr = vt.timeoutErrorMessage), dt(new _e(Cr, Wr.clarifyTimeoutError ? _e.ETIMEDOUT : _e.ECONNABORTED, Ue, Bt)), Bt = null;
            }, wt === void 0 && Pt.setContentType(null), "setRequestHeader" in Bt && pe.forEach(Pt.toJSON(), function(Cr, Wr) {
              Bt.setRequestHeader(Wr, Cr);
            }), pe.isUndefined(vt.withCredentials) || (Bt.withCredentials = !!vt.withCredentials), en && en !== "json" && (Bt.responseType = vt.responseType), De && ([qr, zr] = nt(De, true), Bt.addEventListener("progress", qr)), Me && Bt.upload && ([cr, Vt] = nt(Me), Bt.upload.addEventListener("progress", cr), Bt.upload.addEventListener("loadend", Vt)), (vt.cancelToken || vt.signal) && (Yt = (Cr) => {
              Bt && (dt(!Cr || Cr.type ? new $e(null, Ue, Bt) : Cr), Bt.abort(), Bt = null);
            }, vt.cancelToken && vt.cancelToken.subscribe(Yt), vt.signal && (vt.signal.aborted ? Yt() : vt.signal.addEventListener("abort", Yt)));
            const ur = function(Cr) {
              const Wr = /^([-+\w]{1,25})(:?\/\/|:)/.exec(Cr);
              return Wr && Wr[1] || "";
            }(vt.url);
            ur && Et.protocols.indexOf(ur) === -1 ? dt(new _e("Unsupported protocol " + ur + ":", _e.ERR_BAD_REQUEST, Ue)) : Bt.send(wt || null);
          });
        }, vr = (Ue, it) => {
          const { length: dt } = Ue = Ue ? Ue.filter(Boolean) : [];
          if (it || dt) {
            let vt, wt = new AbortController();
            const Pt = function(Vt) {
              if (!vt) {
                vt = true, cr();
                const zr = Vt instanceof Error ? Vt : this.reason;
                wt.abort(zr instanceof _e ? zr : new $e(zr instanceof Error ? zr.message : zr));
              }
            };
            let Yt = it && setTimeout(() => {
              Yt = null, Pt(new _e(`timeout ${it} of ms exceeded`, _e.ETIMEDOUT));
            }, it);
            const cr = () => {
              Ue && (Yt && clearTimeout(Yt), Yt = null, Ue.forEach((Vt) => {
                Vt.unsubscribe ? Vt.unsubscribe(Pt) : Vt.removeEventListener("abort", Pt);
              }), Ue = null);
            };
            Ue.forEach((Vt) => Vt.addEventListener("abort", Pt));
            const { signal: qr } = wt;
            return qr.unsubscribe = () => pe.asap(cr), qr;
          }
        }, ar = function* (Ue, it) {
          let dt = Ue.byteLength;
          if (dt < it) return void (yield Ue);
          let vt, wt = 0;
          for (; wt < dt; ) vt = wt + it, yield Ue.slice(wt, vt), wt = vt;
        }, sr = async function* (Ue) {
          if (Ue[Symbol.asyncIterator]) return void (yield* Ue);
          const it = Ue.getReader();
          try {
            for (; ; ) {
              const { done: dt, value: vt } = await it.read();
              if (dt) break;
              yield vt;
            }
          } finally {
            await it.cancel();
          }
        }, gr = (Ue, it, dt, vt) => {
          const wt = async function* (qr, Vt) {
            for await (const zr of sr(qr)) yield* ar(zr, Vt);
          }(Ue, it);
          let Pt, Yt = 0, cr = (qr) => {
            Pt || (Pt = true, vt && vt(qr));
          };
          return new ReadableStream({ async pull(qr) {
            try {
              const { done: Vt, value: zr } = await wt.next();
              if (Vt) return cr(), void qr.close();
              let en = zr.byteLength;
              if (dt) {
                let Me = Yt += en;
                dt(Me);
              }
              qr.enqueue(new Uint8Array(zr));
            } catch (Vt) {
              throw cr(Vt), Vt;
            }
          }, cancel: (qr) => (cr(qr), wt.return()) }, { highWaterMark: 2 });
        }, Tr = typeof fetch == "function" && typeof Request == "function" && typeof Response == "function", Mr = Tr && typeof ReadableStream == "function", Nr = Tr && (typeof TextEncoder == "function" ? (Lr = new TextEncoder(), (Ue) => Lr.encode(Ue)) : async (Ue) => new Uint8Array(await new Response(Ue).arrayBuffer()));
        var Lr;
        const jr = (Ue, ...it) => {
          try {
            return !!Ue(...it);
          } catch {
            return false;
          }
        }, Hr = Mr && jr(() => {
          let Ue = false;
          const it = new Request(Et.origin, { body: new ReadableStream(), method: "POST", get duplex() {
            return Ue = true, "half";
          } }).headers.has("Content-Type");
          return Ue && !it;
        }), kr = Mr && jr(() => pe.isReadableStream(new Response("").body)), Xt = { stream: kr && ((Ue) => Ue.body) };
        var Qt;
        Tr && (Qt = new Response(), ["text", "arrayBuffer", "blob", "formData", "stream"].forEach((Ue) => {
          !Xt[Ue] && (Xt[Ue] = pe.isFunction(Qt[Ue]) ? (it) => it[Ue]() : (it, dt) => {
            throw new _e(`Response type '${Ue}' is not supported`, _e.ERR_NOT_SUPPORT, dt);
          });
        }));
        const br = async (Ue, it) => {
          const dt = pe.toFiniteNumber(Ue.getContentLength());
          return dt ?? (async (vt) => vt == null ? 0 : pe.isBlob(vt) ? vt.size : pe.isSpecCompliantForm(vt) ? (await new Request(Et.origin, { method: "POST", body: vt }).arrayBuffer()).byteLength : pe.isArrayBufferView(vt) || pe.isArrayBuffer(vt) ? vt.byteLength : (pe.isURLSearchParams(vt) && (vt += ""), pe.isString(vt) ? (await Nr(vt)).byteLength : void 0))(it);
        }, we = { http: null, xhr: Wt, fetch: Tr && (async (Ue) => {
          let { url: it, method: dt, data: vt, signal: wt, cancelToken: Pt, timeout: Yt, onDownloadProgress: cr, onUploadProgress: qr, responseType: Vt, headers: zr, withCredentials: en = "same-origin", fetchOptions: Me } = Lt(Ue);
          Vt = Vt ? (Vt + "").toLowerCase() : "text";
          let De, Ke = vr([wt, Pt && Pt.toAbortSignal()], Yt);
          const Bt = Ke && Ke.unsubscribe && (() => {
            Ke.unsubscribe();
          });
          let St;
          try {
            if (qr && Hr && dt !== "get" && dt !== "head" && (St = await br(zr, vt)) !== 0) {
              let dn, wn = new Request(it, { method: "POST", body: vt, duplex: "half" });
              if (pe.isFormData(vt) && (dn = wn.headers.get("content-type")) && zr.setContentType(dn), wn.body) {
                const [yn, pi] = ft(St, nt(zt(qr)));
                vt = gr(wn.body, 65536, yn, pi);
              }
            }
            pe.isString(en) || (en = en ? "include" : "omit");
            const ur = "credentials" in Request.prototype;
            De = new Request(it, { ...Me, signal: Ke, method: dt.toUpperCase(), headers: zr.normalize().toJSON(), body: vt, duplex: "half", credentials: ur ? en : void 0 });
            let Cr = await fetch(De);
            const Wr = kr && (Vt === "stream" || Vt === "response");
            if (kr && (cr || Wr && Bt)) {
              const dn = {};
              ["status", "statusText", "headers"].forEach((Bi) => {
                dn[Bi] = Cr[Bi];
              });
              const wn = pe.toFiniteNumber(Cr.headers.get("content-length")), [yn, pi] = cr && ft(wn, nt(zt(cr), true)) || [];
              Cr = new Response(gr(Cr.body, 65536, yn, () => {
                pi && pi(), Bt && Bt();
              }), dn);
            }
            Vt = Vt || "text";
            let Qr = await Xt[pe.findKey(Xt, Vt) || "text"](Cr, Ue);
            return !Wr && Bt && Bt(), await new Promise((dn, wn) => {
              le(dn, wn, { data: Qr, headers: Nt.from(Cr.headers), status: Cr.status, statusText: Cr.statusText, config: Ue, request: De });
            });
          } catch (ur) {
            throw Bt && Bt(), ur && ur.name === "TypeError" && /fetch/i.test(ur.message) ? Object.assign(new _e("Network Error", _e.ERR_NETWORK, Ue, De), { cause: ur.cause || ur }) : _e.from(ur, ur && ur.code, Ue, De);
          }
        }) };
        pe.forEach(we, (Ue, it) => {
          if (Ue) {
            try {
              Object.defineProperty(Ue, "name", { value: it });
            } catch {
            }
            Object.defineProperty(Ue, "adapterName", { value: it });
          }
        });
        const me = (Ue) => `- ${Ue}`, ze = (Ue) => pe.isFunction(Ue) || Ue === null || Ue === false, rt = (Ue) => {
          Ue = pe.isArray(Ue) ? Ue : [Ue];
          const { length: it } = Ue;
          let dt, vt;
          const wt = {};
          for (let Pt = 0; Pt < it; Pt++) {
            let Yt;
            if (dt = Ue[Pt], vt = dt, !ze(dt) && (vt = we[(Yt = String(dt)).toLowerCase()], vt === void 0)) throw new _e(`Unknown adapter '${Yt}'`);
            if (vt) break;
            wt[Yt || "#" + Pt] = vt;
          }
          if (!vt) {
            const Pt = Object.entries(wt).map(([cr, qr]) => `adapter ${cr} ` + (qr === false ? "is not supported by the environment" : "is not available in the build"));
            let Yt = it ? Pt.length > 1 ? `since :
` + Pt.map(me).join(`
`) : " " + me(Pt[0]) : "as no adapter specified";
            throw new _e("There is no suitable adapter to dispatch the request " + Yt, "ERR_NOT_SUPPORT");
          }
          return vt;
        };
        function Tt(Ue) {
          if (Ue.cancelToken && Ue.cancelToken.throwIfRequested(), Ue.signal && Ue.signal.aborted) throw new $e(null, Ue);
        }
        function Ot(Ue) {
          return Tt(Ue), Ue.headers = Nt.from(Ue.headers), Ue.data = yr.call(Ue, Ue.transformRequest), ["post", "put", "patch"].indexOf(Ue.method) !== -1 && Ue.headers.setContentType("application/x-www-form-urlencoded", false), rt(Ue.adapter || Ge.adapter)(Ue).then(function(it) {
            return Tt(Ue), it.data = yr.call(Ue, Ue.transformResponse, it), it.headers = Nt.from(it.headers), it;
          }, function(it) {
            return Ur(it) || (Tt(Ue), it && it.response && (it.response.data = yr.call(Ue, Ue.transformResponse, it.response), it.response.headers = Nt.from(it.response.headers))), Promise.reject(it);
          });
        }
        const It = "1.8.4", We = {};
        ["object", "boolean", "number", "function", "string", "symbol"].forEach((Ue, it) => {
          We[Ue] = function(dt) {
            return typeof dt === Ue || "a" + (it < 1 ? "n " : " ") + Ue;
          };
        });
        const mt = {};
        We.transitional = function(Ue, it, dt) {
          function vt(wt, Pt) {
            return "[Axios v1.8.4] Transitional option '" + wt + "'" + Pt + (dt ? ". " + dt : "");
          }
          return (wt, Pt, Yt) => {
            if (Ue === false) throw new _e(vt(Pt, " has been removed" + (it ? " in " + it : "")), _e.ERR_DEPRECATED);
            return it && !mt[Pt] && (mt[Pt] = true, console.warn(vt(Pt, " has been deprecated since v" + it + " and will be removed in the near future"))), !Ue || Ue(wt, Pt, Yt);
          };
        }, We.spelling = function(Ue) {
          return (it, dt) => (console.warn(`${dt} is likely a misspelling of ${Ue}`), true);
        };
        const Gt = { assertOptions: function(Ue, it, dt) {
          if (typeof Ue != "object") throw new _e("options must be an object", _e.ERR_BAD_OPTION_VALUE);
          const vt = Object.keys(Ue);
          let wt = vt.length;
          for (; wt-- > 0; ) {
            const Pt = vt[wt], Yt = it[Pt];
            if (Yt) {
              const cr = Ue[Pt], qr = cr === void 0 || Yt(cr, Pt, Ue);
              if (qr !== true) throw new _e("option " + Pt + " must be " + qr, _e.ERR_BAD_OPTION_VALUE);
            } else if (dt !== true) throw new _e("Unknown option " + Pt, _e.ERR_BAD_OPTION);
          }
        }, validators: We }, ir = Gt.validators;
        class dr {
          constructor(it) {
            this.defaults = it, this.interceptors = { request: new Y(), response: new Y() };
          }
          async request(it, dt) {
            try {
              return await this._request(it, dt);
            } catch (vt) {
              if (vt instanceof Error) {
                let wt = {};
                Error.captureStackTrace ? Error.captureStackTrace(wt) : wt = new Error();
                const Pt = wt.stack ? wt.stack.replace(/^.+\n/, "") : "";
                try {
                  vt.stack ? Pt && !String(vt.stack).endsWith(Pt.replace(/^.+\n.+\n/, "")) && (vt.stack += `
` + Pt) : vt.stack = Pt;
                } catch {
                }
              }
              throw vt;
            }
          }
          _request(it, dt) {
            typeof it == "string" ? (dt = dt || {}).url = it : dt = it || {}, dt = Ct(this.defaults, dt);
            const { transitional: vt, paramsSerializer: wt, headers: Pt } = dt;
            vt !== void 0 && Gt.assertOptions(vt, { silentJSONParsing: ir.transitional(ir.boolean), forcedJSONParsing: ir.transitional(ir.boolean), clarifyTimeoutError: ir.transitional(ir.boolean) }, false), wt != null && (pe.isFunction(wt) ? dt.paramsSerializer = { serialize: wt } : Gt.assertOptions(wt, { encode: ir.function, serialize: ir.function }, true)), dt.allowAbsoluteUrls !== void 0 || (this.defaults.allowAbsoluteUrls !== void 0 ? dt.allowAbsoluteUrls = this.defaults.allowAbsoluteUrls : dt.allowAbsoluteUrls = true), Gt.assertOptions(dt, { baseUrl: ir.spelling("baseURL"), withXsrfToken: ir.spelling("withXSRFToken") }, true), dt.method = (dt.method || this.defaults.method || "get").toLowerCase();
            let Yt = Pt && pe.merge(Pt.common, Pt[dt.method]);
            Pt && pe.forEach(["delete", "get", "head", "post", "put", "patch", "common"], (Ke) => {
              delete Pt[Ke];
            }), dt.headers = Nt.concat(Yt, Pt);
            const cr = [];
            let qr = true;
            this.interceptors.request.forEach(function(Ke) {
              typeof Ke.runWhen == "function" && Ke.runWhen(dt) === false || (qr = qr && Ke.synchronous, cr.unshift(Ke.fulfilled, Ke.rejected));
            });
            const Vt = [];
            let zr;
            this.interceptors.response.forEach(function(Ke) {
              Vt.push(Ke.fulfilled, Ke.rejected);
            });
            let en, Me = 0;
            if (!qr) {
              const Ke = [Ot.bind(this), void 0];
              for (Ke.unshift.apply(Ke, cr), Ke.push.apply(Ke, Vt), en = Ke.length, zr = Promise.resolve(dt); Me < en; ) zr = zr.then(Ke[Me++], Ke[Me++]);
              return zr;
            }
            en = cr.length;
            let De = dt;
            for (Me = 0; Me < en; ) {
              const Ke = cr[Me++], Bt = cr[Me++];
              try {
                De = Ke(De);
              } catch (St) {
                Bt.call(this, St);
                break;
              }
            }
            try {
              zr = Ot.call(this, De);
            } catch (Ke) {
              return Promise.reject(Ke);
            }
            for (Me = 0, en = Vt.length; Me < en; ) zr = zr.then(Vt[Me++], Vt[Me++]);
            return zr;
          }
          getUri(it) {
            return U(yt((it = Ct(this.defaults, it)).baseURL, it.url, it.allowAbsoluteUrls), it.params, it.paramsSerializer);
          }
        }
        pe.forEach(["delete", "get", "head", "options"], function(Ue) {
          dr.prototype[Ue] = function(it, dt) {
            return this.request(Ct(dt || {}, { method: Ue, url: it, data: (dt || {}).data }));
          };
        }), pe.forEach(["post", "put", "patch"], function(Ue) {
          function it(dt) {
            return function(vt, wt, Pt) {
              return this.request(Ct(Pt || {}, { method: Ue, headers: dt ? { "Content-Type": "multipart/form-data" } : {}, url: vt, data: wt }));
            };
          }
          dr.prototype[Ue] = it(), dr.prototype[Ue + "Form"] = it(true);
        });
        const hr = dr;
        class Fr {
          constructor(it) {
            if (typeof it != "function") throw new TypeError("executor must be a function.");
            let dt;
            this.promise = new Promise(function(wt) {
              dt = wt;
            });
            const vt = this;
            this.promise.then((wt) => {
              if (!vt._listeners) return;
              let Pt = vt._listeners.length;
              for (; Pt-- > 0; ) vt._listeners[Pt](wt);
              vt._listeners = null;
            }), this.promise.then = (wt) => {
              let Pt;
              const Yt = new Promise((cr) => {
                vt.subscribe(cr), Pt = cr;
              }).then(wt);
              return Yt.cancel = function() {
                vt.unsubscribe(Pt);
              }, Yt;
            }, it(function(wt, Pt, Yt) {
              vt.reason || (vt.reason = new $e(wt, Pt, Yt), dt(vt.reason));
            });
          }
          throwIfRequested() {
            if (this.reason) throw this.reason;
          }
          subscribe(it) {
            this.reason ? it(this.reason) : this._listeners ? this._listeners.push(it) : this._listeners = [it];
          }
          unsubscribe(it) {
            if (!this._listeners) return;
            const dt = this._listeners.indexOf(it);
            dt !== -1 && this._listeners.splice(dt, 1);
          }
          toAbortSignal() {
            const it = new AbortController(), dt = (vt) => {
              it.abort(vt);
            };
            return this.subscribe(dt), it.signal.unsubscribe = () => this.unsubscribe(dt), it.signal;
          }
          static source() {
            let it;
            return { token: new Fr(function(dt) {
              it = dt;
            }), cancel: it };
          }
        }
        const Gr = Fr, Br = { Continue: 100, SwitchingProtocols: 101, Processing: 102, EarlyHints: 103, Ok: 200, Created: 201, Accepted: 202, NonAuthoritativeInformation: 203, NoContent: 204, ResetContent: 205, PartialContent: 206, MultiStatus: 207, AlreadyReported: 208, ImUsed: 226, MultipleChoices: 300, MovedPermanently: 301, Found: 302, SeeOther: 303, NotModified: 304, UseProxy: 305, Unused: 306, TemporaryRedirect: 307, PermanentRedirect: 308, BadRequest: 400, Unauthorized: 401, PaymentRequired: 402, Forbidden: 403, NotFound: 404, MethodNotAllowed: 405, NotAcceptable: 406, ProxyAuthenticationRequired: 407, RequestTimeout: 408, Conflict: 409, Gone: 410, LengthRequired: 411, PreconditionFailed: 412, PayloadTooLarge: 413, UriTooLong: 414, UnsupportedMediaType: 415, RangeNotSatisfiable: 416, ExpectationFailed: 417, ImATeapot: 418, MisdirectedRequest: 421, UnprocessableEntity: 422, Locked: 423, FailedDependency: 424, TooEarly: 425, UpgradeRequired: 426, PreconditionRequired: 428, TooManyRequests: 429, RequestHeaderFieldsTooLarge: 431, UnavailableForLegalReasons: 451, InternalServerError: 500, NotImplemented: 501, BadGateway: 502, ServiceUnavailable: 503, GatewayTimeout: 504, HttpVersionNotSupported: 505, VariantAlsoNegotiates: 506, InsufficientStorage: 507, LoopDetected: 508, NotExtended: 510, NetworkAuthenticationRequired: 511 };
        Object.entries(Br).forEach(([Ue, it]) => {
          Br[it] = Ue;
        });
        const Dr = Br, Vr = function Ue(it) {
          const dt = new hr(it), vt = h(hr.prototype.request, dt);
          return pe.extend(vt, hr.prototype, dt, { allOwnKeys: true }), pe.extend(vt, dt, null, { allOwnKeys: true }), vt.create = function(wt) {
            return Ue(Ct(it, wt));
          }, vt;
        }(Ge);
        Vr.Axios = hr, Vr.CanceledError = $e, Vr.CancelToken = Gr, Vr.isCancel = Ur, Vr.VERSION = It, Vr.toFormData = O, Vr.AxiosError = _e, Vr.Cancel = Vr.CanceledError, Vr.all = function(Ue) {
          return Promise.all(Ue);
        }, Vr.spread = function(Ue) {
          return function(it) {
            return Ue.apply(null, it);
          };
        }, Vr.isAxiosError = function(Ue) {
          return pe.isObject(Ue) && Ue.isAxiosError === true;
        }, Vr.mergeConfig = Ct, Vr.AxiosHeaders = Nt, Vr.formToJSON = (Ue) => rr(pe.isHTMLForm(Ue) ? new FormData(Ue) : Ue), Vr.getAdapter = rt, Vr.HttpStatusCode = Dr, Vr.default = Vr;
        var be = Vr, Or = Vr.create;
      }, 6160: (t, o, s) => {
        var c = s(8287).Buffer;
        Object.defineProperty(o, "__esModule", { value: true }), o.decodeAddressToMuxedAccount = m, o.encodeMuxedAccount = function(a, l) {
          if (!r.StrKey.isValidEd25519PublicKey(a)) throw new Error("address should be a Stellar account ID (G...)");
          if (typeof l != "string") throw new Error("id should be a string representing a number (uint64)");
          return f.default.MuxedAccount.keyTypeMuxedEd25519(new f.default.MuxedAccountMed25519({ id: f.default.Uint64.fromString(l), ed25519: r.StrKey.decodeEd25519PublicKey(a) }));
        }, o.encodeMuxedAccountToAddress = g, o.extractBaseAddress = function(a) {
          if (r.StrKey.isValidEd25519PublicKey(a)) return a;
          if (!r.StrKey.isValidMed25519PublicKey(a)) throw new TypeError("expected muxed account (M...), got ".concat(a));
          var l = m(a);
          return r.StrKey.encodeEd25519PublicKey(l.med25519().ed25519());
        };
        var h, f = (h = s(1918)) && h.__esModule ? h : { default: h }, r = s(7120);
        function m(a) {
          return r.StrKey.isValidMed25519PublicKey(a) ? function(l) {
            var d = r.StrKey.decodeMed25519PublicKey(l);
            return f.default.MuxedAccount.keyTypeMuxedEd25519(new f.default.MuxedAccountMed25519({ id: f.default.Uint64.fromXDR(d.subarray(-8)), ed25519: d.subarray(0, -8) }));
          }(a) : f.default.MuxedAccount.keyTypeEd25519(r.StrKey.decodeEd25519PublicKey(a));
        }
        function g(a) {
          return a.switch().value === f.default.CryptoKeyType.keyTypeMuxedEd25519().value ? function(l) {
            if (l.switch() === f.default.CryptoKeyType.keyTypeEd25519()) return g(l);
            var d = l.med25519();
            return r.StrKey.encodeMed25519PublicKey(c.concat([d.ed25519(), d.id().toXDR("raw")]));
          }(a) : r.StrKey.encodeEd25519PublicKey(a.ed25519());
        }
      }, 6183: (t, o, s) => {
        Object.defineProperty(o, "__esModule", { value: true }), o.bumpSequence = function(m) {
          var g = {};
          if (typeof m.bumpTo != "string") throw new Error("bumpTo must be a string");
          try {
            new h.default(m.bumpTo);
          } catch {
            throw new Error("bumpTo must be a stringified number");
          }
          g.bumpTo = c.Hyper.fromString(m.bumpTo);
          var a = new f.default.BumpSequenceOp(g), l = {};
          return l.body = f.default.OperationBody.bumpSequence(a), this.setSourceAccount(l, m), new f.default.Operation(l);
        };
        var c = s(3740), h = r(s(1242)), f = r(s(1918));
        function r(m) {
          return m && m.__esModule ? m : { default: m };
        }
      }, 6188: (t) => {
        t.exports = Math.max;
      }, 6202: (t, o) => {
        Object.defineProperty(o, "__esModule", { value: true }), o.Networks = void 0, o.Networks = { PUBLIC: "Public Global Stellar Network ; September 2015", TESTNET: "Test SDF Network ; September 2015", FUTURENET: "Test SDF Future Network ; October 2022", SANDBOX: "Local Sandbox Stellar Network ; September 2022", STANDALONE: "Standalone Network ; February 2017" };
      }, 6238: (t, o, s) => {
        var c = s(6048).F.ERR_STREAM_PREMATURE_CLOSE;
        function h() {
        }
        t.exports = function f(r, m, g) {
          if (typeof m == "function") return f(r, null, m);
          m || (m = {}), g = /* @__PURE__ */ function(I) {
            var q = false;
            return function() {
              if (!q) {
                q = true;
                for (var N = arguments.length, H = new Array(N), _ = 0; _ < N; _++) H[_] = arguments[_];
                I.apply(this, H);
              }
            };
          }(g || h);
          var a = m.readable || m.readable !== false && r.readable, l = m.writable || m.writable !== false && r.writable, d = function() {
            r.writable || S();
          }, b = r._writableState && r._writableState.finished, S = function() {
            l = false, b = true, a || g.call(r);
          }, E = r._readableState && r._readableState.endEmitted, R = function() {
            a = false, E = true, l || g.call(r);
          }, k = function(I) {
            g.call(r, I);
          }, w = function() {
            var I;
            return a && !E ? (r._readableState && r._readableState.ended || (I = new c()), g.call(r, I)) : l && !b ? (r._writableState && r._writableState.ended || (I = new c()), g.call(r, I)) : void 0;
          }, F = function() {
            r.req.on("finish", S);
          };
          return function(I) {
            return I.setHeader && typeof I.abort == "function";
          }(r) ? (r.on("complete", S), r.on("abort", w), r.req ? F() : r.on("request", F)) : l && !r._writableState && (r.on("end", d), r.on("close", d)), r.on("end", R), r.on("finish", S), m.error !== false && r.on("error", k), r.on("close", w), function() {
            r.removeListener("complete", S), r.removeListener("abort", w), r.removeListener("request", F), r.req && r.req.removeListener("finish", S), r.removeListener("end", d), r.removeListener("close", d), r.removeListener("finish", S), r.removeListener("end", R), r.removeListener("error", k), r.removeListener("close", w);
          };
        };
      }, 6272: (t, o, s) => {
        function c(d) {
          return c = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(b) {
            return typeof b;
          } : function(b) {
            return b && typeof Symbol == "function" && b.constructor === Symbol && b !== Symbol.prototype ? "symbol" : typeof b;
          }, c(d);
        }
        Object.defineProperty(o, "__esModule", { value: true }), o.Uint128 = void 0;
        var h = s(3740);
        function f(d, b) {
          for (var S = 0; S < b.length; S++) {
            var E = b[S];
            E.enumerable = E.enumerable || false, E.configurable = true, "value" in E && (E.writable = true), Object.defineProperty(d, r(E.key), E);
          }
        }
        function r(d) {
          var b = function(S, E) {
            if (c(S) != "object" || !S) return S;
            var R = S[Symbol.toPrimitive];
            if (R !== void 0) {
              var k = R.call(S, E);
              if (c(k) != "object") return k;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(S);
          }(d, "string");
          return c(b) == "symbol" ? b : b + "";
        }
        function m(d, b, S) {
          return b = a(b), function(E, R) {
            if (R && (c(R) == "object" || typeof R == "function")) return R;
            if (R !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(k) {
              if (k === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return k;
            }(E);
          }(d, g() ? Reflect.construct(b, S || [], a(d).constructor) : b.apply(d, S));
        }
        function g() {
          try {
            var d = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (g = function() {
            return !!d;
          })();
        }
        function a(d) {
          return a = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(b) {
            return b.__proto__ || Object.getPrototypeOf(b);
          }, a(d);
        }
        function l(d, b) {
          return l = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(S, E) {
            return S.__proto__ = E, S;
          }, l(d, b);
        }
        (o.Uint128 = function(d) {
          function b() {
            (function(I, q) {
              if (!(I instanceof q)) throw new TypeError("Cannot call a class as a function");
            })(this, b);
            for (var k = arguments.length, w = new Array(k), F = 0; F < k; F++) w[F] = arguments[F];
            return m(this, b, [w]);
          }
          return function(k, w) {
            if (typeof w != "function" && w !== null) throw new TypeError("Super expression must either be null or a function");
            k.prototype = Object.create(w && w.prototype, { constructor: { value: k, writable: true, configurable: true } }), Object.defineProperty(k, "prototype", { writable: false }), w && l(k, w);
          }(b, d), S = b, (E = [{ key: "unsigned", get: function() {
            return true;
          } }, { key: "size", get: function() {
            return 128;
          } }]) && f(S.prototype, E), R && f(S, R), Object.defineProperty(S, "prototype", { writable: false }), S;
          var S, E, R;
        }(h.LargeInt)).defineIntBoundaries();
      }, 6299: (t, o, s) => {
        s.r(o), s.d(o, { AssembledTransaction: () => Ne, Client: () => br, DEFAULT_TIMEOUT: () => E, Err: () => S, NULL_ACCOUNT: () => R, Ok: () => b, SentTransaction: () => ge, Spec: () => ft, basicNodeSigner: () => Ge });
        var c = s(356), h = s(3496), f = s(4076), r = s(8680);
        function m(we) {
          return m = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(me) {
            return typeof me;
          } : function(me) {
            return me && typeof Symbol == "function" && me.constructor === Symbol && me !== Symbol.prototype ? "symbol" : typeof me;
          }, m(we);
        }
        function g(we, me) {
          if (!(we instanceof me)) throw new TypeError("Cannot call a class as a function");
        }
        function a(we, me) {
          for (var ze = 0; ze < me.length; ze++) {
            var rt = me[ze];
            rt.enumerable = rt.enumerable || false, rt.configurable = true, "value" in rt && (rt.writable = true), Object.defineProperty(we, d(rt.key), rt);
          }
        }
        function l(we, me, ze) {
          return me && a(we.prototype, me), Object.defineProperty(we, "prototype", { writable: false }), we;
        }
        function d(we) {
          var me = function(ze, rt) {
            if (m(ze) != "object" || !ze) return ze;
            var Tt = ze[Symbol.toPrimitive];
            if (Tt !== void 0) {
              var Ot = Tt.call(ze, rt);
              if (m(Ot) != "object") return Ot;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(ze);
          }(we, "string");
          return m(me) == "symbol" ? me : me + "";
        }
        var b = l(function we(me) {
          g(this, we), this.value = me;
        }, [{ key: "unwrapErr", value: function() {
          throw new Error("No error");
        } }, { key: "unwrap", value: function() {
          return this.value;
        } }, { key: "isOk", value: function() {
          return true;
        } }, { key: "isErr", value: function() {
          return false;
        } }]), S = l(function we(me) {
          g(this, we), this.error = me;
        }, [{ key: "unwrapErr", value: function() {
          return this.error;
        } }, { key: "unwrap", value: function() {
          throw new Error(this.error.message);
        } }, { key: "isOk", value: function() {
          return false;
        } }, { key: "isErr", value: function() {
          return true;
        } }]), E = 300, R = "GAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWHF";
        function k() {
          k = function() {
            return me;
          };
          var we, me = {}, ze = Object.prototype, rt = ze.hasOwnProperty, Tt = Object.defineProperty || function(Me, De, Ke) {
            Me[De] = Ke.value;
          }, Ot = typeof Symbol == "function" ? Symbol : {}, It = Ot.iterator || "@@iterator", We = Ot.asyncIterator || "@@asyncIterator", mt = Ot.toStringTag || "@@toStringTag";
          function Gt(Me, De, Ke) {
            return Object.defineProperty(Me, De, { value: Ke, enumerable: true, configurable: true, writable: true }), Me[De];
          }
          try {
            Gt({}, "");
          } catch {
            Gt = function(De, Ke, Bt) {
              return De[Ke] = Bt;
            };
          }
          function ir(Me, De, Ke, Bt) {
            var St = De && De.prototype instanceof Vr ? De : Vr, ur = Object.create(St.prototype), Cr = new zr(Bt || []);
            return Tt(ur, "_invoke", { value: Yt(Me, Ke, Cr) }), ur;
          }
          function dr(Me, De, Ke) {
            try {
              return { type: "normal", arg: Me.call(De, Ke) };
            } catch (Bt) {
              return { type: "throw", arg: Bt };
            }
          }
          me.wrap = ir;
          var hr = "suspendedStart", Fr = "suspendedYield", Gr = "executing", Br = "completed", Dr = {};
          function Vr() {
          }
          function be() {
          }
          function Or() {
          }
          var Ue = {};
          Gt(Ue, It, function() {
            return this;
          });
          var it = Object.getPrototypeOf, dt = it && it(it(en([])));
          dt && dt !== ze && rt.call(dt, It) && (Ue = dt);
          var vt = Or.prototype = Vr.prototype = Object.create(Ue);
          function wt(Me) {
            ["next", "throw", "return"].forEach(function(De) {
              Gt(Me, De, function(Ke) {
                return this._invoke(De, Ke);
              });
            });
          }
          function Pt(Me, De) {
            function Ke(St, ur, Cr, Wr) {
              var Qr = dr(Me[St], Me, ur);
              if (Qr.type !== "throw") {
                var dn = Qr.arg, wn = dn.value;
                return wn && w(wn) == "object" && rt.call(wn, "__await") ? De.resolve(wn.__await).then(function(yn) {
                  Ke("next", yn, Cr, Wr);
                }, function(yn) {
                  Ke("throw", yn, Cr, Wr);
                }) : De.resolve(wn).then(function(yn) {
                  dn.value = yn, Cr(dn);
                }, function(yn) {
                  return Ke("throw", yn, Cr, Wr);
                });
              }
              Wr(Qr.arg);
            }
            var Bt;
            Tt(this, "_invoke", { value: function(St, ur) {
              function Cr() {
                return new De(function(Wr, Qr) {
                  Ke(St, ur, Wr, Qr);
                });
              }
              return Bt = Bt ? Bt.then(Cr, Cr) : Cr();
            } });
          }
          function Yt(Me, De, Ke) {
            var Bt = hr;
            return function(St, ur) {
              if (Bt === Gr) throw Error("Generator is already running");
              if (Bt === Br) {
                if (St === "throw") throw ur;
                return { value: we, done: true };
              }
              for (Ke.method = St, Ke.arg = ur; ; ) {
                var Cr = Ke.delegate;
                if (Cr) {
                  var Wr = cr(Cr, Ke);
                  if (Wr) {
                    if (Wr === Dr) continue;
                    return Wr;
                  }
                }
                if (Ke.method === "next") Ke.sent = Ke._sent = Ke.arg;
                else if (Ke.method === "throw") {
                  if (Bt === hr) throw Bt = Br, Ke.arg;
                  Ke.dispatchException(Ke.arg);
                } else Ke.method === "return" && Ke.abrupt("return", Ke.arg);
                Bt = Gr;
                var Qr = dr(Me, De, Ke);
                if (Qr.type === "normal") {
                  if (Bt = Ke.done ? Br : Fr, Qr.arg === Dr) continue;
                  return { value: Qr.arg, done: Ke.done };
                }
                Qr.type === "throw" && (Bt = Br, Ke.method = "throw", Ke.arg = Qr.arg);
              }
            };
          }
          function cr(Me, De) {
            var Ke = De.method, Bt = Me.iterator[Ke];
            if (Bt === we) return De.delegate = null, Ke === "throw" && Me.iterator.return && (De.method = "return", De.arg = we, cr(Me, De), De.method === "throw") || Ke !== "return" && (De.method = "throw", De.arg = new TypeError("The iterator does not provide a '" + Ke + "' method")), Dr;
            var St = dr(Bt, Me.iterator, De.arg);
            if (St.type === "throw") return De.method = "throw", De.arg = St.arg, De.delegate = null, Dr;
            var ur = St.arg;
            return ur ? ur.done ? (De[Me.resultName] = ur.value, De.next = Me.nextLoc, De.method !== "return" && (De.method = "next", De.arg = we), De.delegate = null, Dr) : ur : (De.method = "throw", De.arg = new TypeError("iterator result is not an object"), De.delegate = null, Dr);
          }
          function qr(Me) {
            var De = { tryLoc: Me[0] };
            1 in Me && (De.catchLoc = Me[1]), 2 in Me && (De.finallyLoc = Me[2], De.afterLoc = Me[3]), this.tryEntries.push(De);
          }
          function Vt(Me) {
            var De = Me.completion || {};
            De.type = "normal", delete De.arg, Me.completion = De;
          }
          function zr(Me) {
            this.tryEntries = [{ tryLoc: "root" }], Me.forEach(qr, this), this.reset(true);
          }
          function en(Me) {
            if (Me || Me === "") {
              var De = Me[It];
              if (De) return De.call(Me);
              if (typeof Me.next == "function") return Me;
              if (!isNaN(Me.length)) {
                var Ke = -1, Bt = function St() {
                  for (; ++Ke < Me.length; ) if (rt.call(Me, Ke)) return St.value = Me[Ke], St.done = false, St;
                  return St.value = we, St.done = true, St;
                };
                return Bt.next = Bt;
              }
            }
            throw new TypeError(w(Me) + " is not iterable");
          }
          return be.prototype = Or, Tt(vt, "constructor", { value: Or, configurable: true }), Tt(Or, "constructor", { value: be, configurable: true }), be.displayName = Gt(Or, mt, "GeneratorFunction"), me.isGeneratorFunction = function(Me) {
            var De = typeof Me == "function" && Me.constructor;
            return !!De && (De === be || (De.displayName || De.name) === "GeneratorFunction");
          }, me.mark = function(Me) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(Me, Or) : (Me.__proto__ = Or, Gt(Me, mt, "GeneratorFunction")), Me.prototype = Object.create(vt), Me;
          }, me.awrap = function(Me) {
            return { __await: Me };
          }, wt(Pt.prototype), Gt(Pt.prototype, We, function() {
            return this;
          }), me.AsyncIterator = Pt, me.async = function(Me, De, Ke, Bt, St) {
            St === void 0 && (St = Promise);
            var ur = new Pt(ir(Me, De, Ke, Bt), St);
            return me.isGeneratorFunction(De) ? ur : ur.next().then(function(Cr) {
              return Cr.done ? Cr.value : ur.next();
            });
          }, wt(vt), Gt(vt, mt, "Generator"), Gt(vt, It, function() {
            return this;
          }), Gt(vt, "toString", function() {
            return "[object Generator]";
          }), me.keys = function(Me) {
            var De = Object(Me), Ke = [];
            for (var Bt in De) Ke.push(Bt);
            return Ke.reverse(), function St() {
              for (; Ke.length; ) {
                var ur = Ke.pop();
                if (ur in De) return St.value = ur, St.done = false, St;
              }
              return St.done = true, St;
            };
          }, me.values = en, zr.prototype = { constructor: zr, reset: function(Me) {
            if (this.prev = 0, this.next = 0, this.sent = this._sent = we, this.done = false, this.delegate = null, this.method = "next", this.arg = we, this.tryEntries.forEach(Vt), !Me) for (var De in this) De.charAt(0) === "t" && rt.call(this, De) && !isNaN(+De.slice(1)) && (this[De] = we);
          }, stop: function() {
            this.done = true;
            var Me = this.tryEntries[0].completion;
            if (Me.type === "throw") throw Me.arg;
            return this.rval;
          }, dispatchException: function(Me) {
            if (this.done) throw Me;
            var De = this;
            function Ke(Qr, dn) {
              return ur.type = "throw", ur.arg = Me, De.next = Qr, dn && (De.method = "next", De.arg = we), !!dn;
            }
            for (var Bt = this.tryEntries.length - 1; Bt >= 0; --Bt) {
              var St = this.tryEntries[Bt], ur = St.completion;
              if (St.tryLoc === "root") return Ke("end");
              if (St.tryLoc <= this.prev) {
                var Cr = rt.call(St, "catchLoc"), Wr = rt.call(St, "finallyLoc");
                if (Cr && Wr) {
                  if (this.prev < St.catchLoc) return Ke(St.catchLoc, true);
                  if (this.prev < St.finallyLoc) return Ke(St.finallyLoc);
                } else if (Cr) {
                  if (this.prev < St.catchLoc) return Ke(St.catchLoc, true);
                } else {
                  if (!Wr) throw Error("try statement without catch or finally");
                  if (this.prev < St.finallyLoc) return Ke(St.finallyLoc);
                }
              }
            }
          }, abrupt: function(Me, De) {
            for (var Ke = this.tryEntries.length - 1; Ke >= 0; --Ke) {
              var Bt = this.tryEntries[Ke];
              if (Bt.tryLoc <= this.prev && rt.call(Bt, "finallyLoc") && this.prev < Bt.finallyLoc) {
                var St = Bt;
                break;
              }
            }
            St && (Me === "break" || Me === "continue") && St.tryLoc <= De && De <= St.finallyLoc && (St = null);
            var ur = St ? St.completion : {};
            return ur.type = Me, ur.arg = De, St ? (this.method = "next", this.next = St.finallyLoc, Dr) : this.complete(ur);
          }, complete: function(Me, De) {
            if (Me.type === "throw") throw Me.arg;
            return Me.type === "break" || Me.type === "continue" ? this.next = Me.arg : Me.type === "return" ? (this.rval = this.arg = Me.arg, this.method = "return", this.next = "end") : Me.type === "normal" && De && (this.next = De), Dr;
          }, finish: function(Me) {
            for (var De = this.tryEntries.length - 1; De >= 0; --De) {
              var Ke = this.tryEntries[De];
              if (Ke.finallyLoc === Me) return this.complete(Ke.completion, Ke.afterLoc), Vt(Ke), Dr;
            }
          }, catch: function(Me) {
            for (var De = this.tryEntries.length - 1; De >= 0; --De) {
              var Ke = this.tryEntries[De];
              if (Ke.tryLoc === Me) {
                var Bt = Ke.completion;
                if (Bt.type === "throw") {
                  var St = Bt.arg;
                  Vt(Ke);
                }
                return St;
              }
            }
            throw Error("illegal catch attempt");
          }, delegateYield: function(Me, De, Ke) {
            return this.delegate = { iterator: en(Me), resultName: De, nextLoc: Ke }, this.method === "next" && (this.arg = we), Dr;
          } }, me;
        }
        function w(we) {
          return w = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(me) {
            return typeof me;
          } : function(me) {
            return me && typeof Symbol == "function" && me.constructor === Symbol && me !== Symbol.prototype ? "symbol" : typeof me;
          }, w(we);
        }
        function F(we, me, ze, rt, Tt, Ot, It) {
          try {
            var We = we[Ot](It), mt = We.value;
          } catch (Gt) {
            return void ze(Gt);
          }
          We.done ? me(mt) : Promise.resolve(mt).then(rt, Tt);
        }
        function I(we) {
          return function() {
            var me = this, ze = arguments;
            return new Promise(function(rt, Tt) {
              var Ot = we.apply(me, ze);
              function It(mt) {
                F(Ot, rt, Tt, It, We, "next", mt);
              }
              function We(mt) {
                F(Ot, rt, Tt, It, We, "throw", mt);
              }
              It(void 0);
            });
          };
        }
        function q(we, me, ze) {
          return N.apply(this, arguments);
        }
        function N() {
          return N = I(k().mark(function we(me, ze, rt) {
            var Tt, Ot, It, We, mt, Gt, ir, dr = arguments;
            return k().wrap(function(hr) {
              for (; ; ) switch (hr.prev = hr.next) {
                case 0:
                  return Tt = dr.length > 3 && dr[3] !== void 0 ? dr[3] : 1.5, Ot = dr.length > 4 && dr[4] !== void 0 && dr[4], It = [], We = 0, hr.t0 = It, hr.next = 7, me();
                case 7:
                  if (hr.t1 = hr.sent, hr.t0.push.call(hr.t0, hr.t1), ze(It[It.length - 1])) {
                    hr.next = 11;
                    break;
                  }
                  return hr.abrupt("return", It);
                case 11:
                  mt = new Date(Date.now() + 1e3 * rt).valueOf(), ir = Gt = 1e3;
                case 14:
                  if (!(Date.now() < mt && ze(It[It.length - 1]))) {
                    hr.next = 30;
                    break;
                  }
                  return We += 1, Ot && console.info("Waiting ".concat(Gt, "ms before trying again (bringing the total wait time to ").concat(ir, "ms so far, of total ").concat(1e3 * rt, "ms)")), hr.next = 19, new Promise(function(Fr) {
                    return setTimeout(Fr, Gt);
                  });
                case 19:
                  return Gt *= Tt, new Date(Date.now() + Gt).valueOf() > mt && (Gt = mt - Date.now(), Ot && console.info("was gonna wait too long; new waitTime: ".concat(Gt, "ms"))), ir = Gt + ir, hr.t2 = It, hr.next = 25, me(It[It.length - 1]);
                case 25:
                  hr.t3 = hr.sent, hr.t2.push.call(hr.t2, hr.t3), Ot && ze(It[It.length - 1]) && console.info("".concat(We, ". Called ").concat(me, "; ").concat(It.length, " prev attempts. Most recent: ").concat(JSON.stringify(It[It.length - 1], null, 2))), hr.next = 14;
                  break;
                case 30:
                  return hr.abrupt("return", It);
                case 31:
                case "end":
                  return hr.stop();
              }
            }, we);
          })), N.apply(this, arguments);
        }
        var H, _ = /Error\(Contract, #(\d+)\)/;
        function x(we) {
          for (var me = new c.cereal.XdrReader(we), ze = []; !me.eof; ) ze.push(c.xdr.ScSpecEntry.read(me));
          return ze;
        }
        function L(we, me) {
          return j.apply(this, arguments);
        }
        function j() {
          return (j = I(k().mark(function we(me, ze) {
            return k().wrap(function(rt) {
              for (; ; ) switch (rt.prev = rt.next) {
                case 0:
                  return rt.abrupt("return", me.publicKey ? ze.getAccount(me.publicKey) : new c.Account(R, "0"));
                case 1:
                case "end":
                  return rt.stop();
              }
            }, we);
          }))).apply(this, arguments);
        }
        function z(we, me, ze) {
          return me = J(me), function(rt, Tt) {
            if (Tt && (B(Tt) == "object" || typeof Tt == "function")) return Tt;
            if (Tt !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(Ot) {
              if (Ot === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return Ot;
            }(rt);
          }(we, $() ? Reflect.construct(me, ze || [], J(we).constructor) : me.apply(we, ze));
        }
        function Z(we, me) {
          if (typeof me != "function" && me !== null) throw new TypeError("Super expression must either be null or a function");
          we.prototype = Object.create(me && me.prototype, { constructor: { value: we, writable: true, configurable: true } }), Object.defineProperty(we, "prototype", { writable: false }), me && X(we, me);
        }
        function ue(we) {
          var me = typeof Map == "function" ? /* @__PURE__ */ new Map() : void 0;
          return ue = function(ze) {
            if (ze === null || !function(Tt) {
              try {
                return Function.toString.call(Tt).indexOf("[native code]") !== -1;
              } catch {
                return typeof Tt == "function";
              }
            }(ze)) return ze;
            if (typeof ze != "function") throw new TypeError("Super expression must either be null or a function");
            if (me !== void 0) {
              if (me.has(ze)) return me.get(ze);
              me.set(ze, rt);
            }
            function rt() {
              return function(Tt, Ot, It) {
                if ($()) return Reflect.construct.apply(null, arguments);
                var We = [null];
                We.push.apply(We, Ot);
                var mt = new (Tt.bind.apply(Tt, We))();
                return It && X(mt, It.prototype), mt;
              }(ze, arguments, J(this).constructor);
            }
            return rt.prototype = Object.create(ze.prototype, { constructor: { value: rt, enumerable: false, writable: true, configurable: true } }), X(rt, ze);
          }, ue(we);
        }
        function $() {
          try {
            var we = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return ($ = function() {
            return !!we;
          })();
        }
        function X(we, me) {
          return X = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(ze, rt) {
            return ze.__proto__ = rt, ze;
          }, X(we, me);
        }
        function J(we) {
          return J = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(me) {
            return me.__proto__ || Object.getPrototypeOf(me);
          }, J(we);
        }
        function B(we) {
          return B = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(me) {
            return typeof me;
          } : function(me) {
            return me && typeof Symbol == "function" && me.constructor === Symbol && me !== Symbol.prototype ? "symbol" : typeof me;
          }, B(we);
        }
        function Q() {
          Q = function() {
            return me;
          };
          var we, me = {}, ze = Object.prototype, rt = ze.hasOwnProperty, Tt = Object.defineProperty || function(Me, De, Ke) {
            Me[De] = Ke.value;
          }, Ot = typeof Symbol == "function" ? Symbol : {}, It = Ot.iterator || "@@iterator", We = Ot.asyncIterator || "@@asyncIterator", mt = Ot.toStringTag || "@@toStringTag";
          function Gt(Me, De, Ke) {
            return Object.defineProperty(Me, De, { value: Ke, enumerable: true, configurable: true, writable: true }), Me[De];
          }
          try {
            Gt({}, "");
          } catch {
            Gt = function(De, Ke, Bt) {
              return De[Ke] = Bt;
            };
          }
          function ir(Me, De, Ke, Bt) {
            var St = De && De.prototype instanceof Vr ? De : Vr, ur = Object.create(St.prototype), Cr = new zr(Bt || []);
            return Tt(ur, "_invoke", { value: Yt(Me, Ke, Cr) }), ur;
          }
          function dr(Me, De, Ke) {
            try {
              return { type: "normal", arg: Me.call(De, Ke) };
            } catch (Bt) {
              return { type: "throw", arg: Bt };
            }
          }
          me.wrap = ir;
          var hr = "suspendedStart", Fr = "suspendedYield", Gr = "executing", Br = "completed", Dr = {};
          function Vr() {
          }
          function be() {
          }
          function Or() {
          }
          var Ue = {};
          Gt(Ue, It, function() {
            return this;
          });
          var it = Object.getPrototypeOf, dt = it && it(it(en([])));
          dt && dt !== ze && rt.call(dt, It) && (Ue = dt);
          var vt = Or.prototype = Vr.prototype = Object.create(Ue);
          function wt(Me) {
            ["next", "throw", "return"].forEach(function(De) {
              Gt(Me, De, function(Ke) {
                return this._invoke(De, Ke);
              });
            });
          }
          function Pt(Me, De) {
            function Ke(St, ur, Cr, Wr) {
              var Qr = dr(Me[St], Me, ur);
              if (Qr.type !== "throw") {
                var dn = Qr.arg, wn = dn.value;
                return wn && B(wn) == "object" && rt.call(wn, "__await") ? De.resolve(wn.__await).then(function(yn) {
                  Ke("next", yn, Cr, Wr);
                }, function(yn) {
                  Ke("throw", yn, Cr, Wr);
                }) : De.resolve(wn).then(function(yn) {
                  dn.value = yn, Cr(dn);
                }, function(yn) {
                  return Ke("throw", yn, Cr, Wr);
                });
              }
              Wr(Qr.arg);
            }
            var Bt;
            Tt(this, "_invoke", { value: function(St, ur) {
              function Cr() {
                return new De(function(Wr, Qr) {
                  Ke(St, ur, Wr, Qr);
                });
              }
              return Bt = Bt ? Bt.then(Cr, Cr) : Cr();
            } });
          }
          function Yt(Me, De, Ke) {
            var Bt = hr;
            return function(St, ur) {
              if (Bt === Gr) throw Error("Generator is already running");
              if (Bt === Br) {
                if (St === "throw") throw ur;
                return { value: we, done: true };
              }
              for (Ke.method = St, Ke.arg = ur; ; ) {
                var Cr = Ke.delegate;
                if (Cr) {
                  var Wr = cr(Cr, Ke);
                  if (Wr) {
                    if (Wr === Dr) continue;
                    return Wr;
                  }
                }
                if (Ke.method === "next") Ke.sent = Ke._sent = Ke.arg;
                else if (Ke.method === "throw") {
                  if (Bt === hr) throw Bt = Br, Ke.arg;
                  Ke.dispatchException(Ke.arg);
                } else Ke.method === "return" && Ke.abrupt("return", Ke.arg);
                Bt = Gr;
                var Qr = dr(Me, De, Ke);
                if (Qr.type === "normal") {
                  if (Bt = Ke.done ? Br : Fr, Qr.arg === Dr) continue;
                  return { value: Qr.arg, done: Ke.done };
                }
                Qr.type === "throw" && (Bt = Br, Ke.method = "throw", Ke.arg = Qr.arg);
              }
            };
          }
          function cr(Me, De) {
            var Ke = De.method, Bt = Me.iterator[Ke];
            if (Bt === we) return De.delegate = null, Ke === "throw" && Me.iterator.return && (De.method = "return", De.arg = we, cr(Me, De), De.method === "throw") || Ke !== "return" && (De.method = "throw", De.arg = new TypeError("The iterator does not provide a '" + Ke + "' method")), Dr;
            var St = dr(Bt, Me.iterator, De.arg);
            if (St.type === "throw") return De.method = "throw", De.arg = St.arg, De.delegate = null, Dr;
            var ur = St.arg;
            return ur ? ur.done ? (De[Me.resultName] = ur.value, De.next = Me.nextLoc, De.method !== "return" && (De.method = "next", De.arg = we), De.delegate = null, Dr) : ur : (De.method = "throw", De.arg = new TypeError("iterator result is not an object"), De.delegate = null, Dr);
          }
          function qr(Me) {
            var De = { tryLoc: Me[0] };
            1 in Me && (De.catchLoc = Me[1]), 2 in Me && (De.finallyLoc = Me[2], De.afterLoc = Me[3]), this.tryEntries.push(De);
          }
          function Vt(Me) {
            var De = Me.completion || {};
            De.type = "normal", delete De.arg, Me.completion = De;
          }
          function zr(Me) {
            this.tryEntries = [{ tryLoc: "root" }], Me.forEach(qr, this), this.reset(true);
          }
          function en(Me) {
            if (Me || Me === "") {
              var De = Me[It];
              if (De) return De.call(Me);
              if (typeof Me.next == "function") return Me;
              if (!isNaN(Me.length)) {
                var Ke = -1, Bt = function St() {
                  for (; ++Ke < Me.length; ) if (rt.call(Me, Ke)) return St.value = Me[Ke], St.done = false, St;
                  return St.value = we, St.done = true, St;
                };
                return Bt.next = Bt;
              }
            }
            throw new TypeError(B(Me) + " is not iterable");
          }
          return be.prototype = Or, Tt(vt, "constructor", { value: Or, configurable: true }), Tt(Or, "constructor", { value: be, configurable: true }), be.displayName = Gt(Or, mt, "GeneratorFunction"), me.isGeneratorFunction = function(Me) {
            var De = typeof Me == "function" && Me.constructor;
            return !!De && (De === be || (De.displayName || De.name) === "GeneratorFunction");
          }, me.mark = function(Me) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(Me, Or) : (Me.__proto__ = Or, Gt(Me, mt, "GeneratorFunction")), Me.prototype = Object.create(vt), Me;
          }, me.awrap = function(Me) {
            return { __await: Me };
          }, wt(Pt.prototype), Gt(Pt.prototype, We, function() {
            return this;
          }), me.AsyncIterator = Pt, me.async = function(Me, De, Ke, Bt, St) {
            St === void 0 && (St = Promise);
            var ur = new Pt(ir(Me, De, Ke, Bt), St);
            return me.isGeneratorFunction(De) ? ur : ur.next().then(function(Cr) {
              return Cr.done ? Cr.value : ur.next();
            });
          }, wt(vt), Gt(vt, mt, "Generator"), Gt(vt, It, function() {
            return this;
          }), Gt(vt, "toString", function() {
            return "[object Generator]";
          }), me.keys = function(Me) {
            var De = Object(Me), Ke = [];
            for (var Bt in De) Ke.push(Bt);
            return Ke.reverse(), function St() {
              for (; Ke.length; ) {
                var ur = Ke.pop();
                if (ur in De) return St.value = ur, St.done = false, St;
              }
              return St.done = true, St;
            };
          }, me.values = en, zr.prototype = { constructor: zr, reset: function(Me) {
            if (this.prev = 0, this.next = 0, this.sent = this._sent = we, this.done = false, this.delegate = null, this.method = "next", this.arg = we, this.tryEntries.forEach(Vt), !Me) for (var De in this) De.charAt(0) === "t" && rt.call(this, De) && !isNaN(+De.slice(1)) && (this[De] = we);
          }, stop: function() {
            this.done = true;
            var Me = this.tryEntries[0].completion;
            if (Me.type === "throw") throw Me.arg;
            return this.rval;
          }, dispatchException: function(Me) {
            if (this.done) throw Me;
            var De = this;
            function Ke(Qr, dn) {
              return ur.type = "throw", ur.arg = Me, De.next = Qr, dn && (De.method = "next", De.arg = we), !!dn;
            }
            for (var Bt = this.tryEntries.length - 1; Bt >= 0; --Bt) {
              var St = this.tryEntries[Bt], ur = St.completion;
              if (St.tryLoc === "root") return Ke("end");
              if (St.tryLoc <= this.prev) {
                var Cr = rt.call(St, "catchLoc"), Wr = rt.call(St, "finallyLoc");
                if (Cr && Wr) {
                  if (this.prev < St.catchLoc) return Ke(St.catchLoc, true);
                  if (this.prev < St.finallyLoc) return Ke(St.finallyLoc);
                } else if (Cr) {
                  if (this.prev < St.catchLoc) return Ke(St.catchLoc, true);
                } else {
                  if (!Wr) throw Error("try statement without catch or finally");
                  if (this.prev < St.finallyLoc) return Ke(St.finallyLoc);
                }
              }
            }
          }, abrupt: function(Me, De) {
            for (var Ke = this.tryEntries.length - 1; Ke >= 0; --Ke) {
              var Bt = this.tryEntries[Ke];
              if (Bt.tryLoc <= this.prev && rt.call(Bt, "finallyLoc") && this.prev < Bt.finallyLoc) {
                var St = Bt;
                break;
              }
            }
            St && (Me === "break" || Me === "continue") && St.tryLoc <= De && De <= St.finallyLoc && (St = null);
            var ur = St ? St.completion : {};
            return ur.type = Me, ur.arg = De, St ? (this.method = "next", this.next = St.finallyLoc, Dr) : this.complete(ur);
          }, complete: function(Me, De) {
            if (Me.type === "throw") throw Me.arg;
            return Me.type === "break" || Me.type === "continue" ? this.next = Me.arg : Me.type === "return" ? (this.rval = this.arg = Me.arg, this.method = "return", this.next = "end") : Me.type === "normal" && De && (this.next = De), Dr;
          }, finish: function(Me) {
            for (var De = this.tryEntries.length - 1; De >= 0; --De) {
              var Ke = this.tryEntries[De];
              if (Ke.finallyLoc === Me) return this.complete(Ke.completion, Ke.afterLoc), Vt(Ke), Dr;
            }
          }, catch: function(Me) {
            for (var De = this.tryEntries.length - 1; De >= 0; --De) {
              var Ke = this.tryEntries[De];
              if (Ke.tryLoc === Me) {
                var Bt = Ke.completion;
                if (Bt.type === "throw") {
                  var St = Bt.arg;
                  Vt(Ke);
                }
                return St;
              }
            }
            throw Error("illegal catch attempt");
          }, delegateYield: function(Me, De, Ke) {
            return this.delegate = { iterator: en(Me), resultName: De, nextLoc: Ke }, this.method === "next" && (this.arg = we), Dr;
          } }, me;
        }
        function ne(we, me, ze, rt, Tt, Ot, It) {
          try {
            var We = we[Ot](It), mt = We.value;
          } catch (Gt) {
            return void ze(Gt);
          }
          We.done ? me(mt) : Promise.resolve(mt).then(rt, Tt);
        }
        function K(we) {
          return function() {
            var me = this, ze = arguments;
            return new Promise(function(rt, Tt) {
              var Ot = we.apply(me, ze);
              function It(mt) {
                ne(Ot, rt, Tt, It, We, "next", mt);
              }
              function We(mt) {
                ne(Ot, rt, Tt, It, We, "throw", mt);
              }
              It(void 0);
            });
          };
        }
        function ie(we, me) {
          if (!(we instanceof me)) throw new TypeError("Cannot call a class as a function");
        }
        function ce(we, me) {
          for (var ze = 0; ze < me.length; ze++) {
            var rt = me[ze];
            rt.enumerable = rt.enumerable || false, rt.configurable = true, "value" in rt && (rt.writable = true), Object.defineProperty(we, se(rt.key), rt);
          }
        }
        function ye(we, me, ze) {
          return me && ce(we.prototype, me), Object.defineProperty(we, "prototype", { writable: false }), we;
        }
        function oe(we, me, ze) {
          return (me = se(me)) in we ? Object.defineProperty(we, me, { value: ze, enumerable: true, configurable: true, writable: true }) : we[me] = ze, we;
        }
        function se(we) {
          var me = function(ze, rt) {
            if (B(ze) != "object" || !ze) return ze;
            var Tt = ze[Symbol.toPrimitive];
            if (Tt !== void 0) {
              var Ot = Tt.call(ze, rt);
              if (B(Ot) != "object") return Ot;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return (rt === "string" ? String : Number)(ze);
          }(we, "string");
          return B(me) == "symbol" ? me : me + "";
        }
        var re, ge = function() {
          function we(me) {
            var ze, rt = this;
            ie(this, we), oe(this, "send", K(Q().mark(function Tt() {
              var Ot, It, We;
              return Q().wrap(function(mt) {
                for (; ; ) switch (mt.prev = mt.next) {
                  case 0:
                    return mt.next = 2, rt.server.sendTransaction(rt.assembled.signed);
                  case 2:
                    if (rt.sendTransactionResponse = mt.sent, rt.sendTransactionResponse.status === "PENDING") {
                      mt.next = 5;
                      break;
                    }
                    throw new we.Errors.SendFailed(`Sending the transaction to the network failed!
`.concat(JSON.stringify(rt.sendTransactionResponse, null, 2)));
                  case 5:
                    return It = rt.sendTransactionResponse.hash, We = (Ot = rt.assembled.options.timeoutInSeconds) !== null && Ot !== void 0 ? Ot : E, mt.next = 9, q(function() {
                      return rt.server.getTransaction(It);
                    }, function(Gt) {
                      return Gt.status === f.j.GetTransactionStatus.NOT_FOUND;
                    }, We);
                  case 9:
                    if (rt.getTransactionResponseAll = mt.sent, rt.getTransactionResponse = rt.getTransactionResponseAll[rt.getTransactionResponseAll.length - 1], rt.getTransactionResponse.status !== f.j.GetTransactionStatus.NOT_FOUND) {
                      mt.next = 13;
                      break;
                    }
                    throw new we.Errors.TransactionStillPending("Waited ".concat(We, " seconds for transaction to complete, but it did not. ") + "Returning anyway. Check the transaction status manually. " + "Sent transaction: ".concat(JSON.stringify(rt.sendTransactionResponse, null, 2), `
`) + "All attempts to get the result: ".concat(JSON.stringify(rt.getTransactionResponseAll, null, 2)));
                  case 13:
                    return mt.abrupt("return", rt);
                  case 14:
                  case "end":
                    return mt.stop();
                }
              }, Tt);
            }))), this.assembled = me, this.server = new h.Server(this.assembled.options.rpcUrl, { allowHttp: (ze = this.assembled.options.allowHttp) !== null && ze !== void 0 && ze });
          }
          return ye(we, [{ key: "result", get: function() {
            if ("getTransactionResponse" in this && this.getTransactionResponse) {
              if ("returnValue" in this.getTransactionResponse) return this.assembled.options.parseResultXdr(this.getTransactionResponse.returnValue);
              throw new Error("Transaction failed! Cannot parse result.");
            }
            if (this.sendTransactionResponse) {
              var me, ze = (me = this.sendTransactionResponse.errorResult) === null || me === void 0 ? void 0 : me.result();
              throw ze ? new we.Errors.SendFailed("Transaction simulation looked correct, but attempting to send the transaction failed. Check `simulation` and `sendTransactionResponseAll` to troubleshoot. Decoded `sendTransactionResponse.errorResultXdr`: ".concat(ze)) : new we.Errors.SendResultOnly("Transaction was sent to the network, but not yet awaited. No result to show. Await transaction completion with `getTransaction(sendTransactionResponse.hash)`");
            }
            throw new Error("Sending transaction failed: ".concat(JSON.stringify(this.assembled.signed)));
          } }]);
        }();
        H = ge, oe(ge, "Errors", { SendFailed: function(we) {
          function me() {
            return ie(this, me), z(this, me, arguments);
          }
          return Z(me, we), ye(me);
        }(ue(Error)), SendResultOnly: function(we) {
          function me() {
            return ie(this, me), z(this, me, arguments);
          }
          return Z(me, we), ye(me);
        }(ue(Error)), TransactionStillPending: function(we) {
          function me() {
            return ie(this, me), z(this, me, arguments);
          }
          return Z(me, we), ye(me);
        }(ue(Error)) }), oe(ge, "init", (re = K(Q().mark(function we(me) {
          var ze, rt;
          return Q().wrap(function(Tt) {
            for (; ; ) switch (Tt.prev = Tt.next) {
              case 0:
                return ze = new H(me), Tt.next = 3, ze.send();
              case 3:
                return rt = Tt.sent, Tt.abrupt("return", rt);
              case 5:
              case "end":
                return Tt.stop();
            }
          }, we);
        })), function(we) {
          return re.apply(this, arguments);
        }));
        var Te = s(8287).Buffer;
        function pe(we, me, ze) {
          return me = Be(me), function(rt, Tt) {
            if (Tt && (Qe(Tt) == "object" || typeof Tt == "function")) return Tt;
            if (Tt !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(Ot) {
              if (Ot === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return Ot;
            }(rt);
          }(we, Ve() ? Reflect.construct(me, ze || [], Be(we).constructor) : me.apply(we, ze));
        }
        function Oe(we, me) {
          if (typeof me != "function" && me !== null) throw new TypeError("Super expression must either be null or a function");
          we.prototype = Object.create(me && me.prototype, { constructor: { value: we, writable: true, configurable: true } }), Object.defineProperty(we, "prototype", { writable: false }), me && _e(we, me);
        }
        function xe(we) {
          var me = typeof Map == "function" ? /* @__PURE__ */ new Map() : void 0;
          return xe = function(ze) {
            if (ze === null || !function(Tt) {
              try {
                return Function.toString.call(Tt).indexOf("[native code]") !== -1;
              } catch {
                return typeof Tt == "function";
              }
            }(ze)) return ze;
            if (typeof ze != "function") throw new TypeError("Super expression must either be null or a function");
            if (me !== void 0) {
              if (me.has(ze)) return me.get(ze);
              me.set(ze, rt);
            }
            function rt() {
              return function(Tt, Ot, It) {
                if (Ve()) return Reflect.construct.apply(null, arguments);
                var We = [null];
                We.push.apply(We, Ot);
                var mt = new (Tt.bind.apply(Tt, We))();
                return It && _e(mt, It.prototype), mt;
              }(ze, arguments, Be(this).constructor);
            }
            return rt.prototype = Object.create(ze.prototype, { constructor: { value: rt, enumerable: false, writable: true, configurable: true } }), _e(rt, ze);
          }, xe(we);
        }
        function Ve() {
          try {
            var we = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (Ve = function() {
            return !!we;
          })();
        }
        function _e(we, me) {
          return _e = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(ze, rt) {
            return ze.__proto__ = rt, ze;
          }, _e(we, me);
        }
        function Be(we) {
          return Be = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(me) {
            return me.__proto__ || Object.getPrototypeOf(me);
          }, Be(we);
        }
        function Qe(we) {
          return Qe = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(me) {
            return typeof me;
          } : function(me) {
            return me && typeof Symbol == "function" && me.constructor === Symbol && me !== Symbol.prototype ? "symbol" : typeof me;
          }, Qe(we);
        }
        function ee(we, me) {
          var ze = Object.keys(we);
          if (Object.getOwnPropertySymbols) {
            var rt = Object.getOwnPropertySymbols(we);
            me && (rt = rt.filter(function(Tt) {
              return Object.getOwnPropertyDescriptor(we, Tt).enumerable;
            })), ze.push.apply(ze, rt);
          }
          return ze;
        }
        function P(we) {
          for (var me = 1; me < arguments.length; me++) {
            var ze = arguments[me] != null ? arguments[me] : {};
            me % 2 ? ee(Object(ze), true).forEach(function(rt) {
              de(we, rt, ze[rt]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(we, Object.getOwnPropertyDescriptors(ze)) : ee(Object(ze)).forEach(function(rt) {
              Object.defineProperty(we, rt, Object.getOwnPropertyDescriptor(ze, rt));
            });
          }
          return we;
        }
        function T(we, me) {
          return function(ze) {
            if (Array.isArray(ze)) return ze;
          }(we) || function(ze, rt) {
            var Tt = ze == null ? null : typeof Symbol < "u" && ze[Symbol.iterator] || ze["@@iterator"];
            if (Tt != null) {
              var Ot, It, We, mt, Gt = [], ir = true, dr = false;
              try {
                if (We = (Tt = Tt.call(ze)).next, rt !== 0) for (; !(ir = (Ot = We.call(Tt)).done) && (Gt.push(Ot.value), Gt.length !== rt); ir = true) ;
              } catch (hr) {
                dr = true, It = hr;
              } finally {
                try {
                  if (!ir && Tt.return != null && (mt = Tt.return(), Object(mt) !== mt)) return;
                } finally {
                  if (dr) throw It;
                }
              }
              return Gt;
            }
          }(we, me) || C(we, me) || function() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
          }();
        }
        function O(we, me) {
          var ze = typeof Symbol < "u" && we[Symbol.iterator] || we["@@iterator"];
          if (!ze) {
            if (Array.isArray(we) || (ze = C(we)) || me) {
              ze && (we = ze);
              var rt = 0, Tt = function() {
              };
              return { s: Tt, n: function() {
                return rt >= we.length ? { done: true } : { done: false, value: we[rt++] };
              }, e: function(mt) {
                throw mt;
              }, f: Tt };
            }
            throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
          }
          var Ot, It = true, We = false;
          return { s: function() {
            ze = ze.call(we);
          }, n: function() {
            var mt = ze.next();
            return It = mt.done, mt;
          }, e: function(mt) {
            We = true, Ot = mt;
          }, f: function() {
            try {
              It || ze.return == null || ze.return();
            } finally {
              if (We) throw Ot;
            }
          } };
        }
        function V() {
          V = function() {
            return me;
          };
          var we, me = {}, ze = Object.prototype, rt = ze.hasOwnProperty, Tt = Object.defineProperty || function(Me, De, Ke) {
            Me[De] = Ke.value;
          }, Ot = typeof Symbol == "function" ? Symbol : {}, It = Ot.iterator || "@@iterator", We = Ot.asyncIterator || "@@asyncIterator", mt = Ot.toStringTag || "@@toStringTag";
          function Gt(Me, De, Ke) {
            return Object.defineProperty(Me, De, { value: Ke, enumerable: true, configurable: true, writable: true }), Me[De];
          }
          try {
            Gt({}, "");
          } catch {
            Gt = function(De, Ke, Bt) {
              return De[Ke] = Bt;
            };
          }
          function ir(Me, De, Ke, Bt) {
            var St = De && De.prototype instanceof Vr ? De : Vr, ur = Object.create(St.prototype), Cr = new zr(Bt || []);
            return Tt(ur, "_invoke", { value: Yt(Me, Ke, Cr) }), ur;
          }
          function dr(Me, De, Ke) {
            try {
              return { type: "normal", arg: Me.call(De, Ke) };
            } catch (Bt) {
              return { type: "throw", arg: Bt };
            }
          }
          me.wrap = ir;
          var hr = "suspendedStart", Fr = "suspendedYield", Gr = "executing", Br = "completed", Dr = {};
          function Vr() {
          }
          function be() {
          }
          function Or() {
          }
          var Ue = {};
          Gt(Ue, It, function() {
            return this;
          });
          var it = Object.getPrototypeOf, dt = it && it(it(en([])));
          dt && dt !== ze && rt.call(dt, It) && (Ue = dt);
          var vt = Or.prototype = Vr.prototype = Object.create(Ue);
          function wt(Me) {
            ["next", "throw", "return"].forEach(function(De) {
              Gt(Me, De, function(Ke) {
                return this._invoke(De, Ke);
              });
            });
          }
          function Pt(Me, De) {
            function Ke(St, ur, Cr, Wr) {
              var Qr = dr(Me[St], Me, ur);
              if (Qr.type !== "throw") {
                var dn = Qr.arg, wn = dn.value;
                return wn && Qe(wn) == "object" && rt.call(wn, "__await") ? De.resolve(wn.__await).then(function(yn) {
                  Ke("next", yn, Cr, Wr);
                }, function(yn) {
                  Ke("throw", yn, Cr, Wr);
                }) : De.resolve(wn).then(function(yn) {
                  dn.value = yn, Cr(dn);
                }, function(yn) {
                  return Ke("throw", yn, Cr, Wr);
                });
              }
              Wr(Qr.arg);
            }
            var Bt;
            Tt(this, "_invoke", { value: function(St, ur) {
              function Cr() {
                return new De(function(Wr, Qr) {
                  Ke(St, ur, Wr, Qr);
                });
              }
              return Bt = Bt ? Bt.then(Cr, Cr) : Cr();
            } });
          }
          function Yt(Me, De, Ke) {
            var Bt = hr;
            return function(St, ur) {
              if (Bt === Gr) throw Error("Generator is already running");
              if (Bt === Br) {
                if (St === "throw") throw ur;
                return { value: we, done: true };
              }
              for (Ke.method = St, Ke.arg = ur; ; ) {
                var Cr = Ke.delegate;
                if (Cr) {
                  var Wr = cr(Cr, Ke);
                  if (Wr) {
                    if (Wr === Dr) continue;
                    return Wr;
                  }
                }
                if (Ke.method === "next") Ke.sent = Ke._sent = Ke.arg;
                else if (Ke.method === "throw") {
                  if (Bt === hr) throw Bt = Br, Ke.arg;
                  Ke.dispatchException(Ke.arg);
                } else Ke.method === "return" && Ke.abrupt("return", Ke.arg);
                Bt = Gr;
                var Qr = dr(Me, De, Ke);
                if (Qr.type === "normal") {
                  if (Bt = Ke.done ? Br : Fr, Qr.arg === Dr) continue;
                  return { value: Qr.arg, done: Ke.done };
                }
                Qr.type === "throw" && (Bt = Br, Ke.method = "throw", Ke.arg = Qr.arg);
              }
            };
          }
          function cr(Me, De) {
            var Ke = De.method, Bt = Me.iterator[Ke];
            if (Bt === we) return De.delegate = null, Ke === "throw" && Me.iterator.return && (De.method = "return", De.arg = we, cr(Me, De), De.method === "throw") || Ke !== "return" && (De.method = "throw", De.arg = new TypeError("The iterator does not provide a '" + Ke + "' method")), Dr;
            var St = dr(Bt, Me.iterator, De.arg);
            if (St.type === "throw") return De.method = "throw", De.arg = St.arg, De.delegate = null, Dr;
            var ur = St.arg;
            return ur ? ur.done ? (De[Me.resultName] = ur.value, De.next = Me.nextLoc, De.method !== "return" && (De.method = "next", De.arg = we), De.delegate = null, Dr) : ur : (De.method = "throw", De.arg = new TypeError("iterator result is not an object"), De.delegate = null, Dr);
          }
          function qr(Me) {
            var De = { tryLoc: Me[0] };
            1 in Me && (De.catchLoc = Me[1]), 2 in Me && (De.finallyLoc = Me[2], De.afterLoc = Me[3]), this.tryEntries.push(De);
          }
          function Vt(Me) {
            var De = Me.completion || {};
            De.type = "normal", delete De.arg, Me.completion = De;
          }
          function zr(Me) {
            this.tryEntries = [{ tryLoc: "root" }], Me.forEach(qr, this), this.reset(true);
          }
          function en(Me) {
            if (Me || Me === "") {
              var De = Me[It];
              if (De) return De.call(Me);
              if (typeof Me.next == "function") return Me;
              if (!isNaN(Me.length)) {
                var Ke = -1, Bt = function St() {
                  for (; ++Ke < Me.length; ) if (rt.call(Me, Ke)) return St.value = Me[Ke], St.done = false, St;
                  return St.value = we, St.done = true, St;
                };
                return Bt.next = Bt;
              }
            }
            throw new TypeError(Qe(Me) + " is not iterable");
          }
          return be.prototype = Or, Tt(vt, "constructor", { value: Or, configurable: true }), Tt(Or, "constructor", { value: be, configurable: true }), be.displayName = Gt(Or, mt, "GeneratorFunction"), me.isGeneratorFunction = function(Me) {
            var De = typeof Me == "function" && Me.constructor;
            return !!De && (De === be || (De.displayName || De.name) === "GeneratorFunction");
          }, me.mark = function(Me) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(Me, Or) : (Me.__proto__ = Or, Gt(Me, mt, "GeneratorFunction")), Me.prototype = Object.create(vt), Me;
          }, me.awrap = function(Me) {
            return { __await: Me };
          }, wt(Pt.prototype), Gt(Pt.prototype, We, function() {
            return this;
          }), me.AsyncIterator = Pt, me.async = function(Me, De, Ke, Bt, St) {
            St === void 0 && (St = Promise);
            var ur = new Pt(ir(Me, De, Ke, Bt), St);
            return me.isGeneratorFunction(De) ? ur : ur.next().then(function(Cr) {
              return Cr.done ? Cr.value : ur.next();
            });
          }, wt(vt), Gt(vt, mt, "Generator"), Gt(vt, It, function() {
            return this;
          }), Gt(vt, "toString", function() {
            return "[object Generator]";
          }), me.keys = function(Me) {
            var De = Object(Me), Ke = [];
            for (var Bt in De) Ke.push(Bt);
            return Ke.reverse(), function St() {
              for (; Ke.length; ) {
                var ur = Ke.pop();
                if (ur in De) return St.value = ur, St.done = false, St;
              }
              return St.done = true, St;
            };
          }, me.values = en, zr.prototype = { constructor: zr, reset: function(Me) {
            if (this.prev = 0, this.next = 0, this.sent = this._sent = we, this.done = false, this.delegate = null, this.method = "next", this.arg = we, this.tryEntries.forEach(Vt), !Me) for (var De in this) De.charAt(0) === "t" && rt.call(this, De) && !isNaN(+De.slice(1)) && (this[De] = we);
          }, stop: function() {
            this.done = true;
            var Me = this.tryEntries[0].completion;
            if (Me.type === "throw") throw Me.arg;
            return this.rval;
          }, dispatchException: function(Me) {
            if (this.done) throw Me;
            var De = this;
            function Ke(Qr, dn) {
              return ur.type = "throw", ur.arg = Me, De.next = Qr, dn && (De.method = "next", De.arg = we), !!dn;
            }
            for (var Bt = this.tryEntries.length - 1; Bt >= 0; --Bt) {
              var St = this.tryEntries[Bt], ur = St.completion;
              if (St.tryLoc === "root") return Ke("end");
              if (St.tryLoc <= this.prev) {
                var Cr = rt.call(St, "catchLoc"), Wr = rt.call(St, "finallyLoc");
                if (Cr && Wr) {
                  if (this.prev < St.catchLoc) return Ke(St.catchLoc, true);
                  if (this.prev < St.finallyLoc) return Ke(St.finallyLoc);
                } else if (Cr) {
                  if (this.prev < St.catchLoc) return Ke(St.catchLoc, true);
                } else {
                  if (!Wr) throw Error("try statement without catch or finally");
                  if (this.prev < St.finallyLoc) return Ke(St.finallyLoc);
                }
              }
            }
          }, abrupt: function(Me, De) {
            for (var Ke = this.tryEntries.length - 1; Ke >= 0; --Ke) {
              var Bt = this.tryEntries[Ke];
              if (Bt.tryLoc <= this.prev && rt.call(Bt, "finallyLoc") && this.prev < Bt.finallyLoc) {
                var St = Bt;
                break;
              }
            }
            St && (Me === "break" || Me === "continue") && St.tryLoc <= De && De <= St.finallyLoc && (St = null);
            var ur = St ? St.completion : {};
            return ur.type = Me, ur.arg = De, St ? (this.method = "next", this.next = St.finallyLoc, Dr) : this.complete(ur);
          }, complete: function(Me, De) {
            if (Me.type === "throw") throw Me.arg;
            return Me.type === "break" || Me.type === "continue" ? this.next = Me.arg : Me.type === "return" ? (this.rval = this.arg = Me.arg, this.method = "return", this.next = "end") : Me.type === "normal" && De && (this.next = De), Dr;
          }, finish: function(Me) {
            for (var De = this.tryEntries.length - 1; De >= 0; --De) {
              var Ke = this.tryEntries[De];
              if (Ke.finallyLoc === Me) return this.complete(Ke.completion, Ke.afterLoc), Vt(Ke), Dr;
            }
          }, catch: function(Me) {
            for (var De = this.tryEntries.length - 1; De >= 0; --De) {
              var Ke = this.tryEntries[De];
              if (Ke.tryLoc === Me) {
                var Bt = Ke.completion;
                if (Bt.type === "throw") {
                  var St = Bt.arg;
                  Vt(Ke);
                }
                return St;
              }
            }
            throw Error("illegal catch attempt");
          }, delegateYield: function(Me, De, Ke) {
            return this.delegate = { iterator: en(Me), resultName: De, nextLoc: Ke }, this.method === "next" && (this.arg = we), Dr;
          } }, me;
        }
        function D(we) {
          return function(me) {
            if (Array.isArray(me)) return p(me);
          }(we) || function(me) {
            if (typeof Symbol < "u" && me[Symbol.iterator] != null || me["@@iterator"] != null) return Array.from(me);
          }(we) || C(we) || function() {
            throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
          }();
        }
        function C(we, me) {
          if (we) {
            if (typeof we == "string") return p(we, me);
            var ze = {}.toString.call(we).slice(8, -1);
            return ze === "Object" && we.constructor && (ze = we.constructor.name), ze === "Map" || ze === "Set" ? Array.from(we) : ze === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(ze) ? p(we, me) : void 0;
          }
        }
        function p(we, me) {
          (me == null || me > we.length) && (me = we.length);
          for (var ze = 0, rt = Array(me); ze < me; ze++) rt[ze] = we[ze];
          return rt;
        }
        function A(we, me, ze, rt, Tt, Ot, It) {
          try {
            var We = we[Ot](It), mt = We.value;
          } catch (Gt) {
            return void ze(Gt);
          }
          We.done ? me(mt) : Promise.resolve(mt).then(rt, Tt);
        }
        function U(we) {
          return function() {
            var me = this, ze = arguments;
            return new Promise(function(rt, Tt) {
              var Ot = we.apply(me, ze);
              function It(mt) {
                A(Ot, rt, Tt, It, We, "next", mt);
              }
              function We(mt) {
                A(Ot, rt, Tt, It, We, "throw", mt);
              }
              It(void 0);
            });
          };
        }
        function Y(we, me) {
          if (!(we instanceof me)) throw new TypeError("Cannot call a class as a function");
        }
        function ae(we, me) {
          for (var ze = 0; ze < me.length; ze++) {
            var rt = me[ze];
            rt.enumerable = rt.enumerable || false, rt.configurable = true, "value" in rt && (rt.writable = true), Object.defineProperty(we, tt(rt.key), rt);
          }
        }
        function W(we, me, ze) {
          return me && ae(we.prototype, me), ze && ae(we, ze), Object.defineProperty(we, "prototype", { writable: false }), we;
        }
        function de(we, me, ze) {
          return (me = tt(me)) in we ? Object.defineProperty(we, me, { value: ze, enumerable: true, configurable: true, writable: true }) : we[me] = ze, we;
        }
        function tt(we) {
          var me = function(ze, rt) {
            if (Qe(ze) != "object" || !ze) return ze;
            var Tt = ze[Symbol.toPrimitive];
            if (Tt !== void 0) {
              var Ot = Tt.call(ze, rt);
              if (Qe(Ot) != "object") return Ot;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return (rt === "string" ? String : Number)(ze);
          }(we, "string");
          return Qe(me) == "symbol" ? me : me + "";
        }
        var Ne = function() {
          function we(Ot) {
            var It, We, mt = this;
            Y(this, we), de(this, "simulate", U(V().mark(function Gt() {
              var ir, dr, hr, Fr, Gr, Br, Dr, Vr = arguments;
              return V().wrap(function(be) {
                for (; ; ) switch (be.prev = be.next) {
                  case 0:
                    if (ir = (Vr.length > 0 && Vr[0] !== void 0 ? Vr[0] : {}).restore, mt.built) {
                      be.next = 5;
                      break;
                    }
                    if (mt.raw) {
                      be.next = 4;
                      break;
                    }
                    throw new Error("Transaction has not yet been assembled; call `AssembledTransaction.build` first.");
                  case 4:
                    mt.built = mt.raw.build();
                  case 5:
                    return ir = ir ?? mt.options.restore, delete mt.simulationResult, delete mt.simulationTransactionData, be.next = 10, mt.server.simulateTransaction(mt.built);
                  case 10:
                    if (mt.simulation = be.sent, !ir || !f.j.isSimulationRestore(mt.simulation)) {
                      be.next = 25;
                      break;
                    }
                    return be.next = 14, L(mt.options, mt.server);
                  case 14:
                    return dr = be.sent, be.next = 17, mt.restoreFootprint(mt.simulation.restorePreamble, dr);
                  case 17:
                    if ((hr = be.sent).status !== f.j.GetTransactionStatus.SUCCESS) {
                      be.next = 24;
                      break;
                    }
                    return Dr = new c.Contract(mt.options.contractId), mt.raw = new c.TransactionBuilder(dr, { fee: (Fr = mt.options.fee) !== null && Fr !== void 0 ? Fr : c.BASE_FEE, networkPassphrase: mt.options.networkPassphrase }).addOperation(Dr.call.apply(Dr, [mt.options.method].concat(D((Gr = mt.options.args) !== null && Gr !== void 0 ? Gr : [])))).setTimeout((Br = mt.options.timeoutInSeconds) !== null && Br !== void 0 ? Br : E), be.next = 23, mt.simulate();
                  case 23:
                    return be.abrupt("return", mt);
                  case 24:
                    throw new we.Errors.RestorationFailure(`Automatic restore failed! You set 'restore: true' but the attempted restore did not work. Result:
`.concat(JSON.stringify(hr)));
                  case 25:
                    return f.j.isSimulationSuccess(mt.simulation) && (mt.built = (0, r.X)(mt.built, mt.simulation).build()), be.abrupt("return", mt);
                  case 27:
                  case "end":
                    return be.stop();
                }
              }, Gt);
            }))), de(this, "sign", U(V().mark(function Gt() {
              var ir, dr, hr, Fr, Gr, Br, Dr, Vr, be, Or, Ue, it, dt = arguments;
              return V().wrap(function(vt) {
                for (; ; ) switch (vt.prev = vt.next) {
                  case 0:
                    if (hr = (dr = dt.length > 0 && dt[0] !== void 0 ? dt[0] : {}).force, Fr = hr !== void 0 && hr, Gr = dr.signTransaction, Br = Gr === void 0 ? mt.options.signTransaction : Gr, mt.built) {
                      vt.next = 3;
                      break;
                    }
                    throw new Error("Transaction has not yet been simulated");
                  case 3:
                    if (Fr || !mt.isReadCall) {
                      vt.next = 5;
                      break;
                    }
                    throw new we.Errors.NoSignatureNeeded("This is a read call. It requires no signature or sending. Use `force: true` to sign and send anyway.");
                  case 5:
                    if (Br) {
                      vt.next = 7;
                      break;
                    }
                    throw new we.Errors.NoSigner("You must provide a signTransaction function, either when calling `signAndSend` or when initializing your Client");
                  case 7:
                    if (!(Dr = mt.needsNonInvokerSigningBy().filter(function(wt) {
                      return !wt.startsWith("C");
                    })).length) {
                      vt.next = 10;
                      break;
                    }
                    throw new we.Errors.NeedsMoreSignatures("Transaction requires signatures from ".concat(Dr, ". ") + "See `needsNonInvokerSigningBy` for details.");
                  case 10:
                    return Vr = (ir = mt.options.timeoutInSeconds) !== null && ir !== void 0 ? ir : E, mt.built = c.TransactionBuilder.cloneFrom(mt.built, { fee: mt.built.fee, timebounds: void 0, sorobanData: mt.simulationData.transactionData }).setTimeout(Vr).build(), be = { networkPassphrase: mt.options.networkPassphrase }, mt.options.address && (be.address = mt.options.address), mt.options.submit !== void 0 && (be.submit = mt.options.submit), mt.options.submitUrl && (be.submitUrl = mt.options.submitUrl), vt.next = 18, Br(mt.built.toXDR(), be);
                  case 18:
                    Or = vt.sent, Ue = Or.signedTxXdr, it = Or.error, mt.handleWalletError(it), mt.signed = c.TransactionBuilder.fromXDR(Ue, mt.options.networkPassphrase);
                  case 23:
                  case "end":
                    return vt.stop();
                }
              }, Gt);
            }))), de(this, "signAndSend", U(V().mark(function Gt() {
              var ir, dr, hr, Fr, Gr, Br, Dr = arguments;
              return V().wrap(function(Vr) {
                for (; ; ) switch (Vr.prev = Vr.next) {
                  case 0:
                    if (dr = (ir = Dr.length > 0 && Dr[0] !== void 0 ? Dr[0] : {}).force, hr = dr !== void 0 && dr, Fr = ir.signTransaction, Gr = Fr === void 0 ? mt.options.signTransaction : Fr, mt.signed) {
                      Vr.next = 10;
                      break;
                    }
                    return Br = mt.options.submit, mt.options.submit && (mt.options.submit = false), Vr.prev = 4, Vr.next = 7, mt.sign({ force: hr, signTransaction: Gr });
                  case 7:
                    return Vr.prev = 7, mt.options.submit = Br, Vr.finish(7);
                  case 10:
                    return Vr.abrupt("return", mt.send());
                  case 11:
                  case "end":
                    return Vr.stop();
                }
              }, Gt, null, [[4, , 7, 10]]);
            }))), de(this, "needsNonInvokerSigningBy", function() {
              var Gt, ir = (arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}).includeAlreadySigned, dr = ir !== void 0 && ir;
              if (!mt.built) throw new Error("Transaction has not yet been simulated");
              if (!("operations" in mt.built)) throw new Error("Unexpected Transaction type; no operations: ".concat(JSON.stringify(mt.built)));
              var hr = mt.built.operations[0];
              return D(new Set(((Gt = hr.auth) !== null && Gt !== void 0 ? Gt : []).filter(function(Fr) {
                return Fr.credentials().switch() === c.xdr.SorobanCredentialsType.sorobanCredentialsAddress() && (dr || Fr.credentials().address().signature().switch().name === "scvVoid");
              }).map(function(Fr) {
                return c.Address.fromScAddress(Fr.credentials().address().address()).toString();
              })));
            }), de(this, "signAuthEntries", U(V().mark(function Gt() {
              var ir, dr, hr, Fr, Gr, Br, Dr, Vr, be, Or, Ue, it, dt, vt, wt, Pt, Yt = arguments;
              return V().wrap(function(cr) {
                for (; ; ) switch (cr.prev = cr.next) {
                  case 0:
                    if (hr = (dr = Yt.length > 0 && Yt[0] !== void 0 ? Yt[0] : {}).expiration, Fr = hr === void 0 ? U(V().mark(function qr() {
                      return V().wrap(function(Vt) {
                        for (; ; ) switch (Vt.prev = Vt.next) {
                          case 0:
                            return Vt.next = 2, mt.server.getLatestLedger();
                          case 2:
                            return Vt.t0 = Vt.sent.sequence, Vt.abrupt("return", Vt.t0 + 100);
                          case 4:
                          case "end":
                            return Vt.stop();
                        }
                      }, qr);
                    }))() : hr, Gr = dr.signAuthEntry, Br = Gr === void 0 ? mt.options.signAuthEntry : Gr, Dr = dr.address, Vr = Dr === void 0 ? mt.options.publicKey : Dr, be = dr.authorizeEntry, Or = be === void 0 ? c.authorizeEntry : be, mt.built) {
                      cr.next = 3;
                      break;
                    }
                    throw new Error("Transaction has not yet been assembled or simulated");
                  case 3:
                    if (Or !== c.authorizeEntry) {
                      cr.next = 11;
                      break;
                    }
                    if ((Ue = mt.needsNonInvokerSigningBy()).length !== 0) {
                      cr.next = 7;
                      break;
                    }
                    throw new we.Errors.NoUnsignedNonInvokerAuthEntries("No unsigned non-invoker auth entries; maybe you already signed?");
                  case 7:
                    if (Ue.indexOf(Vr ?? "") !== -1) {
                      cr.next = 9;
                      break;
                    }
                    throw new we.Errors.NoSignatureNeeded('No auth entries for public key "'.concat(Vr, '"'));
                  case 9:
                    if (Br) {
                      cr.next = 11;
                      break;
                    }
                    throw new we.Errors.NoSigner("You must provide `signAuthEntry` or a custom `authorizeEntry`");
                  case 11:
                    it = mt.built.operations[0], dt = (ir = it.auth) !== null && ir !== void 0 ? ir : [], vt = O(dt.entries()), cr.prev = 14, Pt = V().mark(function qr() {
                      var Vt, zr, en, Me, De;
                      return V().wrap(function(Ke) {
                        for (; ; ) switch (Ke.prev = Ke.next) {
                          case 0:
                            if (Vt = T(wt.value, 2), zr = Vt[0], en = Vt[1], (Me = c.xdr.SorobanCredentials.fromXDR(en.credentials().toXDR())).switch() === c.xdr.SorobanCredentialsType.sorobanCredentialsAddress()) {
                              Ke.next = 4;
                              break;
                            }
                            return Ke.abrupt("return", 0);
                          case 4:
                            if (c.Address.fromScAddress(Me.address().address()).toString() === Vr) {
                              Ke.next = 7;
                              break;
                            }
                            return Ke.abrupt("return", 0);
                          case 7:
                            return De = Br ?? Promise.resolve, Ke.t0 = Or, Ke.t1 = en, Ke.t2 = function() {
                              var Bt = U(V().mark(function St(ur) {
                                var Cr, Wr, Qr;
                                return V().wrap(function(dn) {
                                  for (; ; ) switch (dn.prev = dn.next) {
                                    case 0:
                                      return dn.next = 2, De(ur.toXDR("base64"), { address: Vr });
                                    case 2:
                                      return Cr = dn.sent, Wr = Cr.signedAuthEntry, Qr = Cr.error, mt.handleWalletError(Qr), dn.abrupt("return", Te.from(Wr, "base64"));
                                    case 7:
                                    case "end":
                                      return dn.stop();
                                  }
                                }, St);
                              }));
                              return function(St) {
                                return Bt.apply(this, arguments);
                              };
                            }(), Ke.next = 13, Fr;
                          case 13:
                            return Ke.t3 = Ke.sent, Ke.t4 = mt.options.networkPassphrase, Ke.next = 17, (0, Ke.t0)(Ke.t1, Ke.t2, Ke.t3, Ke.t4);
                          case 17:
                            dt[zr] = Ke.sent;
                          case 18:
                          case "end":
                            return Ke.stop();
                        }
                      }, qr);
                    }), vt.s();
                  case 17:
                    if ((wt = vt.n()).done) {
                      cr.next = 24;
                      break;
                    }
                    return cr.delegateYield(Pt(), "t0", 19);
                  case 19:
                    if (cr.t0 !== 0) {
                      cr.next = 22;
                      break;
                    }
                    return cr.abrupt("continue", 22);
                  case 22:
                    cr.next = 17;
                    break;
                  case 24:
                    cr.next = 29;
                    break;
                  case 26:
                    cr.prev = 26, cr.t1 = cr.catch(14), vt.e(cr.t1);
                  case 29:
                    return cr.prev = 29, vt.f(), cr.finish(29);
                  case 32:
                  case "end":
                    return cr.stop();
                }
              }, Gt, null, [[14, 26, 29, 32]]);
            }))), this.options = Ot, this.options.simulate = (It = this.options.simulate) === null || It === void 0 || It, this.server = new h.Server(this.options.rpcUrl, { allowHttp: (We = this.options.allowHttp) !== null && We !== void 0 && We });
          }
          return W(we, [{ key: "toJSON", value: function() {
            var Ot;
            return JSON.stringify({ method: this.options.method, tx: (Ot = this.built) === null || Ot === void 0 ? void 0 : Ot.toXDR(), simulationResult: { auth: this.simulationData.result.auth.map(function(It) {
              return It.toXDR("base64");
            }), retval: this.simulationData.result.retval.toXDR("base64") }, simulationTransactionData: this.simulationData.transactionData.toXDR("base64") });
          } }, { key: "toXDR", value: function() {
            var Ot;
            if (!this.built) throw new Error("Transaction has not yet been simulated; call `AssembledTransaction.simulate` first.");
            return (Ot = this.built) === null || Ot === void 0 ? void 0 : Ot.toEnvelope().toXDR("base64");
          } }, { key: "handleWalletError", value: function(Ot) {
            if (Ot) {
              var It = Ot.message, We = Ot.code, mt = "".concat(It).concat(Ot.ext ? " (".concat(Ot.ext.join(", "), ")") : "");
              switch (We) {
                case -1:
                  throw new we.Errors.InternalWalletError(mt);
                case -2:
                  throw new we.Errors.ExternalServiceError(mt);
                case -3:
                  throw new we.Errors.InvalidClientRequest(mt);
                case -4:
                  throw new we.Errors.UserRejected(mt);
                default:
                  throw new Error("Unhandled error: ".concat(mt));
              }
            }
          } }, { key: "simulationData", get: function() {
            var Ot;
            if (this.simulationResult && this.simulationTransactionData) return { result: this.simulationResult, transactionData: this.simulationTransactionData };
            var It = this.simulation;
            if (!It) throw new we.Errors.NotYetSimulated("Transaction has not yet been simulated");
            if (f.j.isSimulationError(It)) throw new we.Errors.SimulationFailed('Transaction simulation failed: "'.concat(It.error, '"'));
            if (f.j.isSimulationRestore(It)) throw new we.Errors.ExpiredState("You need to restore some contract state before you can invoke this method.\nYou can set `restore` to true in the method options in order to automatically restore the contract state when needed.");
            return this.simulationResult = (Ot = It.result) !== null && Ot !== void 0 ? Ot : { auth: [], retval: c.xdr.ScVal.scvVoid() }, this.simulationTransactionData = It.transactionData.build(), { result: this.simulationResult, transactionData: this.simulationTransactionData };
          } }, { key: "result", get: function() {
            try {
              if (!this.simulationData.result) throw new Error("No simulation result!");
              return this.options.parseResultXdr(this.simulationData.result.retval);
            } catch (We) {
              if (w(It = We) !== "object" || It === null || !("toString" in It)) throw We;
              var Ot = this.parseError(We.toString());
              if (Ot) return Ot;
              throw We;
            }
            var It;
          } }, { key: "parseError", value: function(Ot) {
            if (this.options.errorTypes) {
              var It = Ot.match(_);
              if (It) {
                var We = parseInt(It[1], 10), mt = this.options.errorTypes[We];
                if (mt) return new S(mt);
              }
            }
          } }, { key: "send", value: (Tt = U(V().mark(function Ot() {
            var It;
            return V().wrap(function(We) {
              for (; ; ) switch (We.prev = We.next) {
                case 0:
                  if (this.signed) {
                    We.next = 2;
                    break;
                  }
                  throw new Error("The transaction has not yet been signed. Run `sign` first, or use `signAndSend` instead.");
                case 2:
                  return We.next = 4, ge.init(this);
                case 4:
                  return It = We.sent, We.abrupt("return", It);
                case 6:
                case "end":
                  return We.stop();
              }
            }, Ot, this);
          })), function() {
            return Tt.apply(this, arguments);
          }) }, { key: "isReadCall", get: function() {
            var Ot = this.simulationData.result.auth.length, It = this.simulationData.transactionData.resources().footprint().readWrite().length;
            return Ot === 0 && It === 0;
          } }, { key: "restoreFootprint", value: (rt = U(V().mark(function Ot(It, We) {
            var mt, Gt;
            return V().wrap(function(ir) {
              for (; ; ) switch (ir.prev = ir.next) {
                case 0:
                  if (this.options.signTransaction) {
                    ir.next = 2;
                    break;
                  }
                  throw new Error("For automatic restore to work you must provide a signTransaction function when initializing your Client");
                case 2:
                  if (We == null) {
                    ir.next = 6;
                    break;
                  }
                  ir.t0 = We, ir.next = 9;
                  break;
                case 6:
                  return ir.next = 8, L(this.options, this.server);
                case 8:
                  ir.t0 = ir.sent;
                case 9:
                  return We = ir.t0, ir.next = 12, we.buildFootprintRestoreTransaction(P({}, this.options), It.transactionData, We, It.minResourceFee);
                case 12:
                  return mt = ir.sent, ir.next = 15, mt.signAndSend();
                case 15:
                  if ((Gt = ir.sent).getTransactionResponse) {
                    ir.next = 18;
                    break;
                  }
                  throw new we.Errors.RestorationFailure(`The attempt at automatic restore failed. 
`.concat(JSON.stringify(Gt)));
                case 18:
                  return ir.abrupt("return", Gt.getTransactionResponse);
                case 19:
                case "end":
                  return ir.stop();
              }
            }, Ot, this);
          })), function(Ot, It) {
            return rt.apply(this, arguments);
          }) }], [{ key: "fromJSON", value: function(Ot, It) {
            var We = It.tx, mt = It.simulationResult, Gt = It.simulationTransactionData, ir = new we(Ot);
            return ir.built = c.TransactionBuilder.fromXDR(We, Ot.networkPassphrase), ir.simulationResult = { auth: mt.auth.map(function(dr) {
              return c.xdr.SorobanAuthorizationEntry.fromXDR(dr, "base64");
            }), retval: c.xdr.ScVal.fromXDR(mt.retval, "base64") }, ir.simulationTransactionData = c.xdr.SorobanTransactionData.fromXDR(Gt, "base64"), ir;
          } }, { key: "fromXDR", value: function(Ot, It, We) {
            var mt, Gt = c.xdr.TransactionEnvelope.fromXDR(It, "base64"), ir = c.TransactionBuilder.fromXDR(Gt, Ot.networkPassphrase), dr = ir.operations[0];
            if (dr == null || (mt = dr.func) === null || mt === void 0 || !mt.value || typeof dr.func.value != "function") throw new Error("Could not extract the method from the transaction envelope.");
            var hr = dr.func.value();
            if (hr == null || !hr.functionName) throw new Error("Could not extract the method name from the transaction envelope.");
            var Fr = hr.functionName().toString("utf-8"), Gr = new we(P(P({}, Ot), {}, { method: Fr, parseResultXdr: function(Br) {
              return We.funcResToNative(Fr, Br);
            } }));
            return Gr.built = ir, Gr;
          } }, { key: "build", value: function(Ot) {
            var It, We = new c.Contract(Ot.contractId);
            return we.buildWithOp(We.call.apply(We, [Ot.method].concat(D((It = Ot.args) !== null && It !== void 0 ? It : []))), Ot);
          } }, { key: "buildWithOp", value: (ze = U(V().mark(function Ot(It, We) {
            var mt, Gt, ir, dr;
            return V().wrap(function(hr) {
              for (; ; ) switch (hr.prev = hr.next) {
                case 0:
                  return ir = new we(We), hr.next = 3, L(We, ir.server);
                case 3:
                  if (dr = hr.sent, ir.raw = new c.TransactionBuilder(dr, { fee: (mt = We.fee) !== null && mt !== void 0 ? mt : c.BASE_FEE, networkPassphrase: We.networkPassphrase }).setTimeout((Gt = We.timeoutInSeconds) !== null && Gt !== void 0 ? Gt : E).addOperation(It), !We.simulate) {
                    hr.next = 8;
                    break;
                  }
                  return hr.next = 8, ir.simulate();
                case 8:
                  return hr.abrupt("return", ir);
                case 9:
                case "end":
                  return hr.stop();
              }
            }, Ot);
          })), function(Ot, It) {
            return ze.apply(this, arguments);
          }) }, { key: "buildFootprintRestoreTransaction", value: (me = U(V().mark(function Ot(It, We, mt, Gt) {
            var ir, dr;
            return V().wrap(function(hr) {
              for (; ; ) switch (hr.prev = hr.next) {
                case 0:
                  return (dr = new we(It)).raw = new c.TransactionBuilder(mt, { fee: Gt, networkPassphrase: It.networkPassphrase }).setSorobanData(We instanceof c.SorobanDataBuilder ? We.build() : We).addOperation(c.Operation.restoreFootprint({})).setTimeout((ir = It.timeoutInSeconds) !== null && ir !== void 0 ? ir : E), hr.next = 4, dr.simulate({ restore: false });
                case 4:
                  return hr.abrupt("return", dr);
                case 5:
                case "end":
                  return hr.stop();
              }
            }, Ot);
          })), function(Ot, It, We, mt) {
            return me.apply(this, arguments);
          }) }]);
          var me, ze, rt, Tt;
        }();
        de(Ne, "Errors", { ExpiredState: function(we) {
          function me() {
            return Y(this, me), pe(this, me, arguments);
          }
          return Oe(me, we), W(me);
        }(xe(Error)), RestorationFailure: function(we) {
          function me() {
            return Y(this, me), pe(this, me, arguments);
          }
          return Oe(me, we), W(me);
        }(xe(Error)), NeedsMoreSignatures: function(we) {
          function me() {
            return Y(this, me), pe(this, me, arguments);
          }
          return Oe(me, we), W(me);
        }(xe(Error)), NoSignatureNeeded: function(we) {
          function me() {
            return Y(this, me), pe(this, me, arguments);
          }
          return Oe(me, we), W(me);
        }(xe(Error)), NoUnsignedNonInvokerAuthEntries: function(we) {
          function me() {
            return Y(this, me), pe(this, me, arguments);
          }
          return Oe(me, we), W(me);
        }(xe(Error)), NoSigner: function(we) {
          function me() {
            return Y(this, me), pe(this, me, arguments);
          }
          return Oe(me, we), W(me);
        }(xe(Error)), NotYetSimulated: function(we) {
          function me() {
            return Y(this, me), pe(this, me, arguments);
          }
          return Oe(me, we), W(me);
        }(xe(Error)), FakeAccount: function(we) {
          function me() {
            return Y(this, me), pe(this, me, arguments);
          }
          return Oe(me, we), W(me);
        }(xe(Error)), SimulationFailed: function(we) {
          function me() {
            return Y(this, me), pe(this, me, arguments);
          }
          return Oe(me, we), W(me);
        }(xe(Error)), InternalWalletError: function(we) {
          function me() {
            return Y(this, me), pe(this, me, arguments);
          }
          return Oe(me, we), W(me);
        }(xe(Error)), ExternalServiceError: function(we) {
          function me() {
            return Y(this, me), pe(this, me, arguments);
          }
          return Oe(me, we), W(me);
        }(xe(Error)), InvalidClientRequest: function(we) {
          function me() {
            return Y(this, me), pe(this, me, arguments);
          }
          return Oe(me, we), W(me);
        }(xe(Error)), UserRejected: function(we) {
          function me() {
            return Y(this, me), pe(this, me, arguments);
          }
          return Oe(me, we), W(me);
        }(xe(Error)) });
        var ut = s(8287).Buffer;
        function Ze(we) {
          return Ze = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(me) {
            return typeof me;
          } : function(me) {
            return me && typeof Symbol == "function" && me.constructor === Symbol && me !== Symbol.prototype ? "symbol" : typeof me;
          }, Ze(we);
        }
        function Et() {
          Et = function() {
            return me;
          };
          var we, me = {}, ze = Object.prototype, rt = ze.hasOwnProperty, Tt = Object.defineProperty || function(Me, De, Ke) {
            Me[De] = Ke.value;
          }, Ot = typeof Symbol == "function" ? Symbol : {}, It = Ot.iterator || "@@iterator", We = Ot.asyncIterator || "@@asyncIterator", mt = Ot.toStringTag || "@@toStringTag";
          function Gt(Me, De, Ke) {
            return Object.defineProperty(Me, De, { value: Ke, enumerable: true, configurable: true, writable: true }), Me[De];
          }
          try {
            Gt({}, "");
          } catch {
            Gt = function(De, Ke, Bt) {
              return De[Ke] = Bt;
            };
          }
          function ir(Me, De, Ke, Bt) {
            var St = De && De.prototype instanceof Vr ? De : Vr, ur = Object.create(St.prototype), Cr = new zr(Bt || []);
            return Tt(ur, "_invoke", { value: Yt(Me, Ke, Cr) }), ur;
          }
          function dr(Me, De, Ke) {
            try {
              return { type: "normal", arg: Me.call(De, Ke) };
            } catch (Bt) {
              return { type: "throw", arg: Bt };
            }
          }
          me.wrap = ir;
          var hr = "suspendedStart", Fr = "suspendedYield", Gr = "executing", Br = "completed", Dr = {};
          function Vr() {
          }
          function be() {
          }
          function Or() {
          }
          var Ue = {};
          Gt(Ue, It, function() {
            return this;
          });
          var it = Object.getPrototypeOf, dt = it && it(it(en([])));
          dt && dt !== ze && rt.call(dt, It) && (Ue = dt);
          var vt = Or.prototype = Vr.prototype = Object.create(Ue);
          function wt(Me) {
            ["next", "throw", "return"].forEach(function(De) {
              Gt(Me, De, function(Ke) {
                return this._invoke(De, Ke);
              });
            });
          }
          function Pt(Me, De) {
            function Ke(St, ur, Cr, Wr) {
              var Qr = dr(Me[St], Me, ur);
              if (Qr.type !== "throw") {
                var dn = Qr.arg, wn = dn.value;
                return wn && Ze(wn) == "object" && rt.call(wn, "__await") ? De.resolve(wn.__await).then(function(yn) {
                  Ke("next", yn, Cr, Wr);
                }, function(yn) {
                  Ke("throw", yn, Cr, Wr);
                }) : De.resolve(wn).then(function(yn) {
                  dn.value = yn, Cr(dn);
                }, function(yn) {
                  return Ke("throw", yn, Cr, Wr);
                });
              }
              Wr(Qr.arg);
            }
            var Bt;
            Tt(this, "_invoke", { value: function(St, ur) {
              function Cr() {
                return new De(function(Wr, Qr) {
                  Ke(St, ur, Wr, Qr);
                });
              }
              return Bt = Bt ? Bt.then(Cr, Cr) : Cr();
            } });
          }
          function Yt(Me, De, Ke) {
            var Bt = hr;
            return function(St, ur) {
              if (Bt === Gr) throw Error("Generator is already running");
              if (Bt === Br) {
                if (St === "throw") throw ur;
                return { value: we, done: true };
              }
              for (Ke.method = St, Ke.arg = ur; ; ) {
                var Cr = Ke.delegate;
                if (Cr) {
                  var Wr = cr(Cr, Ke);
                  if (Wr) {
                    if (Wr === Dr) continue;
                    return Wr;
                  }
                }
                if (Ke.method === "next") Ke.sent = Ke._sent = Ke.arg;
                else if (Ke.method === "throw") {
                  if (Bt === hr) throw Bt = Br, Ke.arg;
                  Ke.dispatchException(Ke.arg);
                } else Ke.method === "return" && Ke.abrupt("return", Ke.arg);
                Bt = Gr;
                var Qr = dr(Me, De, Ke);
                if (Qr.type === "normal") {
                  if (Bt = Ke.done ? Br : Fr, Qr.arg === Dr) continue;
                  return { value: Qr.arg, done: Ke.done };
                }
                Qr.type === "throw" && (Bt = Br, Ke.method = "throw", Ke.arg = Qr.arg);
              }
            };
          }
          function cr(Me, De) {
            var Ke = De.method, Bt = Me.iterator[Ke];
            if (Bt === we) return De.delegate = null, Ke === "throw" && Me.iterator.return && (De.method = "return", De.arg = we, cr(Me, De), De.method === "throw") || Ke !== "return" && (De.method = "throw", De.arg = new TypeError("The iterator does not provide a '" + Ke + "' method")), Dr;
            var St = dr(Bt, Me.iterator, De.arg);
            if (St.type === "throw") return De.method = "throw", De.arg = St.arg, De.delegate = null, Dr;
            var ur = St.arg;
            return ur ? ur.done ? (De[Me.resultName] = ur.value, De.next = Me.nextLoc, De.method !== "return" && (De.method = "next", De.arg = we), De.delegate = null, Dr) : ur : (De.method = "throw", De.arg = new TypeError("iterator result is not an object"), De.delegate = null, Dr);
          }
          function qr(Me) {
            var De = { tryLoc: Me[0] };
            1 in Me && (De.catchLoc = Me[1]), 2 in Me && (De.finallyLoc = Me[2], De.afterLoc = Me[3]), this.tryEntries.push(De);
          }
          function Vt(Me) {
            var De = Me.completion || {};
            De.type = "normal", delete De.arg, Me.completion = De;
          }
          function zr(Me) {
            this.tryEntries = [{ tryLoc: "root" }], Me.forEach(qr, this), this.reset(true);
          }
          function en(Me) {
            if (Me || Me === "") {
              var De = Me[It];
              if (De) return De.call(Me);
              if (typeof Me.next == "function") return Me;
              if (!isNaN(Me.length)) {
                var Ke = -1, Bt = function St() {
                  for (; ++Ke < Me.length; ) if (rt.call(Me, Ke)) return St.value = Me[Ke], St.done = false, St;
                  return St.value = we, St.done = true, St;
                };
                return Bt.next = Bt;
              }
            }
            throw new TypeError(Ze(Me) + " is not iterable");
          }
          return be.prototype = Or, Tt(vt, "constructor", { value: Or, configurable: true }), Tt(Or, "constructor", { value: be, configurable: true }), be.displayName = Gt(Or, mt, "GeneratorFunction"), me.isGeneratorFunction = function(Me) {
            var De = typeof Me == "function" && Me.constructor;
            return !!De && (De === be || (De.displayName || De.name) === "GeneratorFunction");
          }, me.mark = function(Me) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(Me, Or) : (Me.__proto__ = Or, Gt(Me, mt, "GeneratorFunction")), Me.prototype = Object.create(vt), Me;
          }, me.awrap = function(Me) {
            return { __await: Me };
          }, wt(Pt.prototype), Gt(Pt.prototype, We, function() {
            return this;
          }), me.AsyncIterator = Pt, me.async = function(Me, De, Ke, Bt, St) {
            St === void 0 && (St = Promise);
            var ur = new Pt(ir(Me, De, Ke, Bt), St);
            return me.isGeneratorFunction(De) ? ur : ur.next().then(function(Cr) {
              return Cr.done ? Cr.value : ur.next();
            });
          }, wt(vt), Gt(vt, mt, "Generator"), Gt(vt, It, function() {
            return this;
          }), Gt(vt, "toString", function() {
            return "[object Generator]";
          }), me.keys = function(Me) {
            var De = Object(Me), Ke = [];
            for (var Bt in De) Ke.push(Bt);
            return Ke.reverse(), function St() {
              for (; Ke.length; ) {
                var ur = Ke.pop();
                if (ur in De) return St.value = ur, St.done = false, St;
              }
              return St.done = true, St;
            };
          }, me.values = en, zr.prototype = { constructor: zr, reset: function(Me) {
            if (this.prev = 0, this.next = 0, this.sent = this._sent = we, this.done = false, this.delegate = null, this.method = "next", this.arg = we, this.tryEntries.forEach(Vt), !Me) for (var De in this) De.charAt(0) === "t" && rt.call(this, De) && !isNaN(+De.slice(1)) && (this[De] = we);
          }, stop: function() {
            this.done = true;
            var Me = this.tryEntries[0].completion;
            if (Me.type === "throw") throw Me.arg;
            return this.rval;
          }, dispatchException: function(Me) {
            if (this.done) throw Me;
            var De = this;
            function Ke(Qr, dn) {
              return ur.type = "throw", ur.arg = Me, De.next = Qr, dn && (De.method = "next", De.arg = we), !!dn;
            }
            for (var Bt = this.tryEntries.length - 1; Bt >= 0; --Bt) {
              var St = this.tryEntries[Bt], ur = St.completion;
              if (St.tryLoc === "root") return Ke("end");
              if (St.tryLoc <= this.prev) {
                var Cr = rt.call(St, "catchLoc"), Wr = rt.call(St, "finallyLoc");
                if (Cr && Wr) {
                  if (this.prev < St.catchLoc) return Ke(St.catchLoc, true);
                  if (this.prev < St.finallyLoc) return Ke(St.finallyLoc);
                } else if (Cr) {
                  if (this.prev < St.catchLoc) return Ke(St.catchLoc, true);
                } else {
                  if (!Wr) throw Error("try statement without catch or finally");
                  if (this.prev < St.finallyLoc) return Ke(St.finallyLoc);
                }
              }
            }
          }, abrupt: function(Me, De) {
            for (var Ke = this.tryEntries.length - 1; Ke >= 0; --Ke) {
              var Bt = this.tryEntries[Ke];
              if (Bt.tryLoc <= this.prev && rt.call(Bt, "finallyLoc") && this.prev < Bt.finallyLoc) {
                var St = Bt;
                break;
              }
            }
            St && (Me === "break" || Me === "continue") && St.tryLoc <= De && De <= St.finallyLoc && (St = null);
            var ur = St ? St.completion : {};
            return ur.type = Me, ur.arg = De, St ? (this.method = "next", this.next = St.finallyLoc, Dr) : this.complete(ur);
          }, complete: function(Me, De) {
            if (Me.type === "throw") throw Me.arg;
            return Me.type === "break" || Me.type === "continue" ? this.next = Me.arg : Me.type === "return" ? (this.rval = this.arg = Me.arg, this.method = "return", this.next = "end") : Me.type === "normal" && De && (this.next = De), Dr;
          }, finish: function(Me) {
            for (var De = this.tryEntries.length - 1; De >= 0; --De) {
              var Ke = this.tryEntries[De];
              if (Ke.finallyLoc === Me) return this.complete(Ke.completion, Ke.afterLoc), Vt(Ke), Dr;
            }
          }, catch: function(Me) {
            for (var De = this.tryEntries.length - 1; De >= 0; --De) {
              var Ke = this.tryEntries[De];
              if (Ke.tryLoc === Me) {
                var Bt = Ke.completion;
                if (Bt.type === "throw") {
                  var St = Bt.arg;
                  Vt(Ke);
                }
                return St;
              }
            }
            throw Error("illegal catch attempt");
          }, delegateYield: function(Me, De, Ke) {
            return this.delegate = { iterator: en(Me), resultName: De, nextLoc: Ke }, this.method === "next" && (this.arg = we), Dr;
          } }, me;
        }
        function rr(we, me, ze, rt, Tt, Ot, It) {
          try {
            var We = we[Ot](It), mt = We.value;
          } catch (Gt) {
            return void ze(Gt);
          }
          We.done ? me(mt) : Promise.resolve(mt).then(rt, Tt);
        }
        function je(we) {
          return function() {
            var me = this, ze = arguments;
            return new Promise(function(rt, Tt) {
              var Ot = we.apply(me, ze);
              function It(mt) {
                rr(Ot, rt, Tt, It, We, "next", mt);
              }
              function We(mt) {
                rr(Ot, rt, Tt, It, We, "throw", mt);
              }
              It(void 0);
            });
          };
        }
        var Ge = function(we, me) {
          return { signTransaction: (rt = je(Et().mark(function Tt(Ot, It) {
            var We;
            return Et().wrap(function(mt) {
              for (; ; ) switch (mt.prev = mt.next) {
                case 0:
                  return (We = c.TransactionBuilder.fromXDR(Ot, (It == null ? void 0 : It.networkPassphrase) || me)).sign(we), mt.abrupt("return", { signedTxXdr: We.toXDR(), signerAddress: we.publicKey() });
                case 3:
                case "end":
                  return mt.stop();
              }
            }, Tt);
          })), function(Tt, Ot) {
            return rt.apply(this, arguments);
          }), signAuthEntry: (ze = je(Et().mark(function Tt(Ot) {
            var It;
            return Et().wrap(function(We) {
              for (; ; ) switch (We.prev = We.next) {
                case 0:
                  return It = we.sign((0, c.hash)(ut.from(Ot, "base64"))).toString("base64"), We.abrupt("return", { signedAuthEntry: It, signerAddress: we.publicKey() });
                case 2:
                case "end":
                  return We.stop();
              }
            }, Tt);
          })), function(Tt) {
            return ze.apply(this, arguments);
          }) };
          var ze, rt;
        }, at = s(8287).Buffer;
        function Ae(we, me) {
          var ze = Object.keys(we);
          if (Object.getOwnPropertySymbols) {
            var rt = Object.getOwnPropertySymbols(we);
            me && (rt = rt.filter(function(Tt) {
              return Object.getOwnPropertyDescriptor(we, Tt).enumerable;
            })), ze.push.apply(ze, rt);
          }
          return ze;
        }
        function qe(we) {
          for (var me = 1; me < arguments.length; me++) {
            var ze = arguments[me] != null ? arguments[me] : {};
            me % 2 ? Ae(Object(ze), true).forEach(function(rt) {
              wr(we, rt, ze[rt]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(we, Object.getOwnPropertyDescriptors(ze)) : Ae(Object(ze)).forEach(function(rt) {
              Object.defineProperty(we, rt, Object.getOwnPropertyDescriptor(ze, rt));
            });
          }
          return we;
        }
        function Ft(we) {
          return Ft = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(me) {
            return typeof me;
          } : function(me) {
            return me && typeof Symbol == "function" && me.constructor === Symbol && me !== Symbol.prototype ? "symbol" : typeof me;
          }, Ft(we);
        }
        function Dt(we, me) {
          for (var ze = 0; ze < me.length; ze++) {
            var rt = me[ze];
            rt.enumerable = rt.enumerable || false, rt.configurable = true, "value" in rt && (rt.writable = true), Object.defineProperty(we, Nt(rt.key), rt);
          }
        }
        function wr(we, me, ze) {
          return (me = Nt(me)) in we ? Object.defineProperty(we, me, { value: ze, enumerable: true, configurable: true, writable: true }) : we[me] = ze, we;
        }
        function Nt(we) {
          var me = function(ze, rt) {
            if (Ft(ze) != "object" || !ze) return ze;
            var Tt = ze[Symbol.toPrimitive];
            if (Tt !== void 0) {
              var Ot = Tt.call(ze, rt);
              if (Ft(Ot) != "object") return Ot;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return (rt === "string" ? String : Number)(ze);
          }(we, "string");
          return Ft(me) == "symbol" ? me : me + "";
        }
        function yr(we, me) {
          return function(ze) {
            if (Array.isArray(ze)) return ze;
          }(we) || function(ze, rt) {
            var Tt = ze == null ? null : typeof Symbol < "u" && ze[Symbol.iterator] || ze["@@iterator"];
            if (Tt != null) {
              var Ot, It, We, mt, Gt = [], ir = true, dr = false;
              try {
                if (We = (Tt = Tt.call(ze)).next, rt === 0) {
                  if (Object(Tt) !== Tt) return;
                  ir = false;
                } else for (; !(ir = (Ot = We.call(Tt)).done) && (Gt.push(Ot.value), Gt.length !== rt); ir = true) ;
              } catch (hr) {
                dr = true, It = hr;
              } finally {
                try {
                  if (!ir && Tt.return != null && (mt = Tt.return(), Object(mt) !== mt)) return;
                } finally {
                  if (dr) throw It;
                }
              }
              return Gt;
            }
          }(we, me) || function(ze, rt) {
            if (ze) {
              if (typeof ze == "string") return Ur(ze, rt);
              var Tt = {}.toString.call(ze).slice(8, -1);
              return Tt === "Object" && ze.constructor && (Tt = ze.constructor.name), Tt === "Map" || Tt === "Set" ? Array.from(ze) : Tt === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(Tt) ? Ur(ze, rt) : void 0;
            }
          }(we, me) || function() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
          }();
        }
        function Ur(we, me) {
          (me == null || me > we.length) && (me = we.length);
          for (var ze = 0, rt = Array(me); ze < me; ze++) rt[ze] = we[ze];
          return rt;
        }
        function Pe(we) {
          return /^\d+$/.test(we.name().toString());
        }
        var $e = { U32: { type: "integer", minimum: 0, maximum: 4294967295 }, I32: { type: "integer", minimum: -2147483648, maximum: 2147483647 }, U64: { type: "string", pattern: "^([1-9][0-9]*|0)$", minLength: 1, maxLength: 20 }, I64: { type: "string", pattern: "^(-?[1-9][0-9]*|0)$", minLength: 1, maxLength: 21 }, U128: { type: "string", pattern: "^([1-9][0-9]*|0)$", minLength: 1, maxLength: 39 }, I128: { type: "string", pattern: "^(-?[1-9][0-9]*|0)$", minLength: 1, maxLength: 40 }, U256: { type: "string", pattern: "^([1-9][0-9]*|0)$", minLength: 1, maxLength: 78 }, I256: { type: "string", pattern: "^(-?[1-9][0-9]*|0)$", minLength: 1, maxLength: 79 }, Address: { type: "string", format: "address", description: "Address can be a public key or contract id" }, ScString: { type: "string", description: "ScString is a string" }, ScSymbol: { type: "string", description: "ScSymbol is a string" }, DataUrl: { type: "string", pattern: "^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$" } };
        function le(we) {
          var me;
          switch (we.switch().value) {
            case c.xdr.ScSpecType.scSpecTypeVal().value:
              me = "Val";
              break;
            case c.xdr.ScSpecType.scSpecTypeBool().value:
              return { type: "boolean" };
            case c.xdr.ScSpecType.scSpecTypeVoid().value:
              return { type: "null" };
            case c.xdr.ScSpecType.scSpecTypeError().value:
              me = "Error";
              break;
            case c.xdr.ScSpecType.scSpecTypeU32().value:
              me = "U32";
              break;
            case c.xdr.ScSpecType.scSpecTypeI32().value:
              me = "I32";
              break;
            case c.xdr.ScSpecType.scSpecTypeU64().value:
              me = "U64";
              break;
            case c.xdr.ScSpecType.scSpecTypeI64().value:
              me = "I64";
              break;
            case c.xdr.ScSpecType.scSpecTypeTimepoint().value:
              throw new Error("Timepoint type not supported");
            case c.xdr.ScSpecType.scSpecTypeDuration().value:
              throw new Error("Duration not supported");
            case c.xdr.ScSpecType.scSpecTypeU128().value:
              me = "U128";
              break;
            case c.xdr.ScSpecType.scSpecTypeI128().value:
              me = "I128";
              break;
            case c.xdr.ScSpecType.scSpecTypeU256().value:
              me = "U256";
              break;
            case c.xdr.ScSpecType.scSpecTypeI256().value:
              me = "I256";
              break;
            case c.xdr.ScSpecType.scSpecTypeBytes().value:
              me = "DataUrl";
              break;
            case c.xdr.ScSpecType.scSpecTypeString().value:
              me = "ScString";
              break;
            case c.xdr.ScSpecType.scSpecTypeSymbol().value:
              me = "ScSymbol";
              break;
            case c.xdr.ScSpecType.scSpecTypeAddress().value:
              me = "Address";
              break;
            case c.xdr.ScSpecType.scSpecTypeOption().value:
              return le(we.option().valueType());
            case c.xdr.ScSpecType.scSpecTypeResult().value:
              break;
            case c.xdr.ScSpecType.scSpecTypeVec().value:
              return { type: "array", items: le(we.vec().elementType()) };
            case c.xdr.ScSpecType.scSpecTypeMap().value:
              var ze = we.map();
              return { type: "array", items: { type: "array", items: [le(ze.keyType()), le(ze.valueType())], minItems: 2, maxItems: 2 } };
            case c.xdr.ScSpecType.scSpecTypeTuple().value:
              var rt = we.tuple(), Tt = rt.valueTypes().length, Ot = Tt;
              return { type: "array", items: rt.valueTypes().map(le), minItems: Tt, maxItems: Ot };
            case c.xdr.ScSpecType.scSpecTypeBytesN().value:
              return { $ref: "#/definitions/DataUrl", maxLength: we.bytesN().n() };
            case c.xdr.ScSpecType.scSpecTypeUdt().value:
              me = we.udt().name().toString();
          }
          return { $ref: "#/definitions/".concat(me) };
        }
        function te(we) {
          var me = {}, ze = [];
          we.forEach(function(Tt) {
            var Ot = Tt.type(), It = Tt.name().toString();
            me[It] = le(Ot), Ot.switch().value !== c.xdr.ScSpecType.scSpecTypeOption().value && ze.push(It);
          });
          var rt = { properties: me };
          return ze.length > 0 && (rt.required = ze), rt;
        }
        var Le, nt, ft = (Le = function we(me) {
          if (function(rt, Tt) {
            if (!(rt instanceof Tt)) throw new TypeError("Cannot call a class as a function");
          }(this, we), wr(this, "entries", []), me.length === 0) throw new Error("Contract spec must have at least one entry");
          var ze = me[0];
          this.entries = typeof ze == "string" ? me.map(function(rt) {
            return c.xdr.ScSpecEntry.fromXDR(rt, "base64");
          }) : me;
        }, nt = [{ key: "funcs", value: function() {
          return this.entries.filter(function(we) {
            return we.switch().value === c.xdr.ScSpecEntryKind.scSpecEntryFunctionV0().value;
          }).map(function(we) {
            return we.functionV0();
          });
        } }, { key: "getFunc", value: function(we) {
          var me = this.findEntry(we);
          if (me.switch().value !== c.xdr.ScSpecEntryKind.scSpecEntryFunctionV0().value) throw new Error("".concat(we, " is not a function"));
          return me.functionV0();
        } }, { key: "funcArgsToScVals", value: function(we, me) {
          var ze = this;
          return this.getFunc(we).inputs().map(function(rt) {
            return ze.nativeToScVal(function(Tt, Ot) {
              var It = Ot.name().toString(), We = Object.entries(Tt).find(function(mt) {
                return yr(mt, 1)[0] === It;
              });
              if (!We) throw new Error("Missing field ".concat(It));
              return We[1];
            }(me, rt), rt.type());
          });
        } }, { key: "funcResToNative", value: function(we, me) {
          var ze = typeof me == "string" ? c.xdr.ScVal.fromXDR(me, "base64") : me, rt = this.getFunc(we).outputs();
          if (rt.length === 0) {
            var Tt = ze.switch();
            if (Tt.value !== c.xdr.ScValType.scvVoid().value) throw new Error("Expected void, got ".concat(Tt.name));
            return null;
          }
          if (rt.length > 1) throw new Error("Multiple outputs not supported");
          var Ot = rt[0];
          return Ot.switch().value === c.xdr.ScSpecType.scSpecTypeResult().value ? new b(this.scValToNative(ze, Ot.result().okType())) : this.scValToNative(ze, Ot);
        } }, { key: "findEntry", value: function(we) {
          var me = this.entries.find(function(ze) {
            return ze.value().name().toString() === we;
          });
          if (!me) throw new Error("no such entry: ".concat(we));
          return me;
        } }, { key: "nativeToScVal", value: function(we, me) {
          var ze = this, rt = me.switch(), Tt = rt.value;
          if (rt.value === c.xdr.ScSpecType.scSpecTypeUdt().value) {
            var Ot = me.udt();
            return this.nativeToUdt(we, Ot.name().toString());
          }
          if (Tt === c.xdr.ScSpecType.scSpecTypeOption().value) {
            var It = me.option();
            return we === void 0 ? c.xdr.ScVal.scvVoid() : this.nativeToScVal(we, It.valueType());
          }
          switch (Ft(we)) {
            case "object":
              var We, mt, Gt;
              if (we === null) {
                if (Tt === c.xdr.ScSpecType.scSpecTypeVoid().value) return c.xdr.ScVal.scvVoid();
                throw new TypeError("Type ".concat(me, " was not void, but value was null"));
              }
              if (we instanceof c.xdr.ScVal) return we;
              if (we instanceof c.Address) {
                if (me.switch().value !== c.xdr.ScSpecType.scSpecTypeAddress().value) throw new TypeError("Type ".concat(me, " was not address, but value was Address"));
                return we.toScVal();
              }
              if (we instanceof c.Contract) {
                if (me.switch().value !== c.xdr.ScSpecType.scSpecTypeAddress().value) throw new TypeError("Type ".concat(me, " was not address, but value was Address"));
                return we.address().toScVal();
              }
              if (we instanceof Uint8Array || at.isBuffer(we)) {
                var ir = Uint8Array.from(we);
                switch (Tt) {
                  case c.xdr.ScSpecType.scSpecTypeBytesN().value:
                    var dr = me.bytesN();
                    if (ir.length !== dr.n()) throw new TypeError("expected ".concat(dr.n(), " bytes, but got ").concat(ir.length));
                    return c.xdr.ScVal.scvBytes(ir);
                  case c.xdr.ScSpecType.scSpecTypeBytes().value:
                    return c.xdr.ScVal.scvBytes(ir);
                  default:
                    throw new TypeError("invalid type (".concat(me, ") specified for Bytes and BytesN"));
                }
              }
              if (Array.isArray(we)) switch (Tt) {
                case c.xdr.ScSpecType.scSpecTypeVec().value:
                  var hr = me.vec().elementType();
                  return c.xdr.ScVal.scvVec(we.map(function(cr) {
                    return ze.nativeToScVal(cr, hr);
                  }));
                case c.xdr.ScSpecType.scSpecTypeTuple().value:
                  var Fr = me.tuple().valueTypes();
                  if (we.length !== Fr.length) throw new TypeError("Tuple expects ".concat(Fr.length, " values, but ").concat(we.length, " were provided"));
                  return c.xdr.ScVal.scvVec(we.map(function(cr, qr) {
                    return ze.nativeToScVal(cr, Fr[qr]);
                  }));
                case c.xdr.ScSpecType.scSpecTypeMap().value:
                  var Gr = me.map(), Br = Gr.keyType(), Dr = Gr.valueType();
                  return c.xdr.ScVal.scvMap(we.map(function(cr) {
                    var qr = ze.nativeToScVal(cr[0], Br), Vt = ze.nativeToScVal(cr[1], Dr);
                    return new c.xdr.ScMapEntry({ key: qr, val: Vt });
                  }));
                default:
                  throw new TypeError("Type ".concat(me, " was not vec, but value was Array"));
              }
              if (we.constructor === Map) {
                if (Tt !== c.xdr.ScSpecType.scSpecTypeMap().value) throw new TypeError("Type ".concat(me, " was not map, but value was Map"));
                for (var Vr = me.map(), be = [], Or = we.entries(), Ue = Or.next(); !Ue.done; ) {
                  var it = yr(Ue.value, 2), dt = it[0], vt = it[1], wt = this.nativeToScVal(dt, Vr.keyType()), Pt = this.nativeToScVal(vt, Vr.valueType());
                  be.push(new c.xdr.ScMapEntry({ key: wt, val: Pt })), Ue = Or.next();
                }
                return c.xdr.ScVal.scvMap(be);
              }
              throw ((We = (mt = we.constructor) === null || mt === void 0 ? void 0 : mt.name) !== null && We !== void 0 ? We : "") !== "Object" ? new TypeError("cannot interpret ".concat((Gt = we.constructor) === null || Gt === void 0 ? void 0 : Gt.name, " value as ScVal (").concat(JSON.stringify(we), ")")) : new TypeError("Received object ".concat(we, "  did not match the provided type ").concat(me));
            case "number":
            case "bigint":
              switch (Tt) {
                case c.xdr.ScSpecType.scSpecTypeU32().value:
                  return c.xdr.ScVal.scvU32(we);
                case c.xdr.ScSpecType.scSpecTypeI32().value:
                  return c.xdr.ScVal.scvI32(we);
                case c.xdr.ScSpecType.scSpecTypeU64().value:
                case c.xdr.ScSpecType.scSpecTypeI64().value:
                case c.xdr.ScSpecType.scSpecTypeU128().value:
                case c.xdr.ScSpecType.scSpecTypeI128().value:
                case c.xdr.ScSpecType.scSpecTypeU256().value:
                case c.xdr.ScSpecType.scSpecTypeI256().value:
                  var Yt = rt.name.substring(10).toLowerCase();
                  return new c.XdrLargeInt(Yt, we).toScVal();
                default:
                  throw new TypeError("invalid type (".concat(me, ") specified for integer"));
              }
            case "string":
              return function(cr, qr) {
                switch (qr.value) {
                  case c.xdr.ScSpecType.scSpecTypeString().value:
                    return c.xdr.ScVal.scvString(cr);
                  case c.xdr.ScSpecType.scSpecTypeSymbol().value:
                    return c.xdr.ScVal.scvSymbol(cr);
                  case c.xdr.ScSpecType.scSpecTypeAddress().value:
                    var Vt = c.Address.fromString(cr);
                    return c.xdr.ScVal.scvAddress(Vt.toScAddress());
                  case c.xdr.ScSpecType.scSpecTypeU64().value:
                    return new c.XdrLargeInt("u64", cr).toScVal();
                  case c.xdr.ScSpecType.scSpecTypeI64().value:
                    return new c.XdrLargeInt("i64", cr).toScVal();
                  case c.xdr.ScSpecType.scSpecTypeU128().value:
                    return new c.XdrLargeInt("u128", cr).toScVal();
                  case c.xdr.ScSpecType.scSpecTypeI128().value:
                    return new c.XdrLargeInt("i128", cr).toScVal();
                  case c.xdr.ScSpecType.scSpecTypeU256().value:
                    return new c.XdrLargeInt("u256", cr).toScVal();
                  case c.xdr.ScSpecType.scSpecTypeI256().value:
                    return new c.XdrLargeInt("i256", cr).toScVal();
                  case c.xdr.ScSpecType.scSpecTypeBytes().value:
                  case c.xdr.ScSpecType.scSpecTypeBytesN().value:
                    return c.xdr.ScVal.scvBytes(at.from(cr, "base64"));
                  default:
                    throw new TypeError("invalid type ".concat(qr.name, " specified for string value"));
                }
              }(we, rt);
            case "boolean":
              if (Tt !== c.xdr.ScSpecType.scSpecTypeBool().value) throw TypeError("Type ".concat(me, " was not bool, but value was bool"));
              return c.xdr.ScVal.scvBool(we);
            case "undefined":
              if (!me) return c.xdr.ScVal.scvVoid();
              switch (Tt) {
                case c.xdr.ScSpecType.scSpecTypeVoid().value:
                case c.xdr.ScSpecType.scSpecTypeOption().value:
                  return c.xdr.ScVal.scvVoid();
                default:
                  throw new TypeError("Type ".concat(me, " was not void, but value was undefined"));
              }
            case "function":
              return this.nativeToScVal(we(), me);
            default:
              throw new TypeError("failed to convert typeof ".concat(Ft(we), " (").concat(we, ")"));
          }
        } }, { key: "nativeToUdt", value: function(we, me) {
          var ze = this.findEntry(me);
          switch (ze.switch()) {
            case c.xdr.ScSpecEntryKind.scSpecEntryUdtEnumV0():
              if (typeof we != "number") throw new TypeError("expected number for enum ".concat(me, ", but got ").concat(Ft(we)));
              return this.nativeToEnum(we, ze.udtEnumV0());
            case c.xdr.ScSpecEntryKind.scSpecEntryUdtStructV0():
              return this.nativeToStruct(we, ze.udtStructV0());
            case c.xdr.ScSpecEntryKind.scSpecEntryUdtUnionV0():
              return this.nativeToUnion(we, ze.udtUnionV0());
            default:
              throw new Error("failed to parse udt ".concat(me));
          }
        } }, { key: "nativeToUnion", value: function(we, me) {
          var ze = this, rt = we.tag, Tt = me.cases().find(function(mt) {
            return mt.value().name().toString() === rt;
          });
          if (!Tt) throw new TypeError("no such enum entry: ".concat(rt, " in ").concat(me));
          var Ot = c.xdr.ScVal.scvSymbol(rt);
          switch (Tt.switch()) {
            case c.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseVoidV0():
              return c.xdr.ScVal.scvVec([Ot]);
            case c.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseTupleV0():
              var It = Tt.tupleCase().type();
              if (Array.isArray(we.values)) {
                if (we.values.length !== It.length) throw new TypeError("union ".concat(me, " expects ").concat(It.length, " values, but got ").concat(we.values.length));
                var We = we.values.map(function(mt, Gt) {
                  return ze.nativeToScVal(mt, It[Gt]);
                });
                return We.unshift(Ot), c.xdr.ScVal.scvVec(We);
              }
              throw new Error("failed to parse union case ".concat(Tt, " with ").concat(we));
            default:
              throw new Error("failed to parse union ".concat(me, " with ").concat(we));
          }
        } }, { key: "nativeToStruct", value: function(we, me) {
          var ze = this, rt = me.fields();
          if (rt.some(Pe)) {
            if (!rt.every(Pe)) throw new Error("mixed numeric and non-numeric field names are not allowed");
            return c.xdr.ScVal.scvVec(rt.map(function(Tt, Ot) {
              return ze.nativeToScVal(we[Ot], rt[Ot].type());
            }));
          }
          return c.xdr.ScVal.scvMap(rt.map(function(Tt) {
            var Ot = Tt.name().toString();
            return new c.xdr.ScMapEntry({ key: ze.nativeToScVal(Ot, c.xdr.ScSpecTypeDef.scSpecTypeSymbol()), val: ze.nativeToScVal(we[Ot], Tt.type()) });
          }));
        } }, { key: "nativeToEnum", value: function(we, me) {
          if (me.cases().some(function(ze) {
            return ze.value() === we;
          })) return c.xdr.ScVal.scvU32(we);
          throw new TypeError("no such enum entry: ".concat(we, " in ").concat(me));
        } }, { key: "scValStrToNative", value: function(we, me) {
          return this.scValToNative(c.xdr.ScVal.fromXDR(we, "base64"), me);
        } }, { key: "scValToNative", value: function(we, me) {
          var ze = this, rt = me.switch(), Tt = rt.value;
          if (Tt === c.xdr.ScSpecType.scSpecTypeUdt().value) return this.scValUdtToNative(we, me.udt());
          switch (we.switch().value) {
            case c.xdr.ScValType.scvVoid().value:
              return;
            case c.xdr.ScValType.scvU64().value:
            case c.xdr.ScValType.scvI64().value:
            case c.xdr.ScValType.scvU128().value:
            case c.xdr.ScValType.scvI128().value:
            case c.xdr.ScValType.scvU256().value:
            case c.xdr.ScValType.scvI256().value:
              return (0, c.scValToBigInt)(we);
            case c.xdr.ScValType.scvVec().value:
              if (Tt === c.xdr.ScSpecType.scSpecTypeVec().value) {
                var Ot, It = me.vec();
                return ((Ot = we.vec()) !== null && Ot !== void 0 ? Ot : []).map(function(Br) {
                  return ze.scValToNative(Br, It.elementType());
                });
              }
              if (Tt === c.xdr.ScSpecType.scSpecTypeTuple().value) {
                var We, mt = me.tuple().valueTypes();
                return ((We = we.vec()) !== null && We !== void 0 ? We : []).map(function(Br, Dr) {
                  return ze.scValToNative(Br, mt[Dr]);
                });
              }
              throw new TypeError("Type ".concat(me, " was not vec, but ").concat(we, " is"));
            case c.xdr.ScValType.scvAddress().value:
              return c.Address.fromScVal(we).toString();
            case c.xdr.ScValType.scvMap().value:
              var Gt, ir = (Gt = we.map()) !== null && Gt !== void 0 ? Gt : [];
              if (Tt === c.xdr.ScSpecType.scSpecTypeMap().value) {
                var dr = me.map(), hr = dr.keyType(), Fr = dr.valueType();
                return ir.map(function(Br) {
                  return [ze.scValToNative(Br.key(), hr), ze.scValToNative(Br.val(), Fr)];
                });
              }
              throw new TypeError("ScSpecType ".concat(rt.name, " was not map, but ").concat(JSON.stringify(we, null, 2), " is"));
            case c.xdr.ScValType.scvBool().value:
            case c.xdr.ScValType.scvU32().value:
            case c.xdr.ScValType.scvI32().value:
            case c.xdr.ScValType.scvBytes().value:
              return we.value();
            case c.xdr.ScValType.scvString().value:
            case c.xdr.ScValType.scvSymbol().value:
              var Gr;
              if (Tt !== c.xdr.ScSpecType.scSpecTypeString().value && Tt !== c.xdr.ScSpecType.scSpecTypeSymbol().value) throw new Error("ScSpecType ".concat(rt.name, " was not string or symbol, but ").concat(JSON.stringify(we, null, 2), " is"));
              return (Gr = we.value()) === null || Gr === void 0 ? void 0 : Gr.toString();
            case c.xdr.ScValType.scvTimepoint().value:
            case c.xdr.ScValType.scvDuration().value:
              return (0, c.scValToBigInt)(c.xdr.ScVal.scvU64(we.u64()));
            default:
              throw new TypeError("failed to convert ".concat(JSON.stringify(we, null, 2), " to native type from type ").concat(rt.name));
          }
        } }, { key: "scValUdtToNative", value: function(we, me) {
          var ze = this.findEntry(me.name().toString());
          switch (ze.switch()) {
            case c.xdr.ScSpecEntryKind.scSpecEntryUdtEnumV0():
              return this.enumToNative(we);
            case c.xdr.ScSpecEntryKind.scSpecEntryUdtStructV0():
              return this.structToNative(we, ze.udtStructV0());
            case c.xdr.ScSpecEntryKind.scSpecEntryUdtUnionV0():
              return this.unionToNative(we, ze.udtUnionV0());
            default:
              throw new Error("failed to parse udt ".concat(me.name().toString(), ": ").concat(ze));
          }
        } }, { key: "unionToNative", value: function(we, me) {
          var ze = this, rt = we.vec();
          if (!rt) throw new Error("".concat(JSON.stringify(we, null, 2), " is not a vec"));
          if (rt.length === 0 && me.cases.length !== 0) throw new Error("".concat(we, " has length 0, but the there are at least one case in the union"));
          var Tt = rt[0].sym().toString();
          if (rt[0].switch().value !== c.xdr.ScValType.scvSymbol().value) throw new Error("{vec[0]} is not a symbol");
          var Ot = me.cases().find(/* @__PURE__ */ function(mt) {
            return function(Gt) {
              switch (Gt.switch().value) {
                case c.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseTupleV0().value:
                  return Gt.tupleCase().name().toString() === mt;
                case c.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseVoidV0().value:
                  return Gt.voidCase().name().toString() === mt;
                default:
                  return false;
              }
            };
          }(Tt));
          if (!Ot) throw new Error("failed to find entry ".concat(Tt, " in union {udt.name().toString()}"));
          var It = { tag: Tt };
          if (Ot.switch().value === c.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseTupleV0().value) {
            var We = Ot.tupleCase().type().map(function(mt, Gt) {
              return ze.scValToNative(rt[Gt + 1], mt);
            });
            It.values = We;
          }
          return It;
        } }, { key: "structToNative", value: function(we, me) {
          var ze, rt, Tt = this, Ot = {}, It = me.fields();
          return It.some(Pe) ? (rt = we.vec()) === null || rt === void 0 ? void 0 : rt.map(function(We, mt) {
            return Tt.scValToNative(We, It[mt].type());
          }) : ((ze = we.map()) === null || ze === void 0 || ze.forEach(function(We, mt) {
            var Gt = It[mt];
            Ot[Gt.name().toString()] = Tt.scValToNative(We.val(), Gt.type());
          }), Ot);
        } }, { key: "enumToNative", value: function(we) {
          if (we.switch().value !== c.xdr.ScValType.scvU32().value) throw new Error("Enum must have a u32 value");
          return we.u32();
        } }, { key: "errorCases", value: function() {
          return this.entries.filter(function(we) {
            return we.switch().value === c.xdr.ScSpecEntryKind.scSpecEntryUdtErrorEnumV0().value;
          }).flatMap(function(we) {
            return we.value().cases();
          });
        } }, { key: "jsonSchema", value: function(we) {
          var me = {};
          this.entries.forEach(function(rt) {
            switch (rt.switch().value) {
              case c.xdr.ScSpecEntryKind.scSpecEntryUdtEnumV0().value:
                var Tt = rt.udtEnumV0();
                me[Tt.name().toString()] = function(dr) {
                  var hr = dr.doc().toString(), Fr = dr.cases(), Gr = [];
                  Fr.forEach(function(Dr) {
                    var Vr = Dr.name().toString(), be = Dr.doc().toString();
                    Gr.push({ description: be, title: Vr, enum: [Dr.value()], type: "number" });
                  });
                  var Br = { oneOf: Gr };
                  return hr.length > 0 && (Br.description = hr), Br;
                }(Tt);
                break;
              case c.xdr.ScSpecEntryKind.scSpecEntryUdtStructV0().value:
                var Ot = rt.udtStructV0();
                me[Ot.name().toString()] = function(dr) {
                  var hr = dr.fields();
                  if (hr.some(Pe)) {
                    if (!hr.every(Pe)) throw new Error("mixed numeric and non-numeric field names are not allowed");
                    return { type: "array", items: hr.map(function(Vr, be) {
                      return le(hr[be].type());
                    }), minItems: hr.length, maxItems: hr.length };
                  }
                  var Fr = dr.doc().toString(), Gr = te(hr), Br = Gr.properties, Dr = Gr.required;
                  return Br.additionalProperties = false, { description: Fr, properties: Br, required: Dr, type: "object" };
                }(Ot);
                break;
              case c.xdr.ScSpecEntryKind.scSpecEntryUdtUnionV0().value:
                var It = rt.udtUnionV0();
                me[It.name().toString()] = function(dr) {
                  var hr = dr.doc().toString(), Fr = dr.cases(), Gr = [];
                  Fr.forEach(function(Dr) {
                    switch (Dr.switch().value) {
                      case c.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseVoidV0().value:
                        var Vr = Dr.voidCase().name().toString();
                        Gr.push({ type: "object", title: Vr, properties: { tag: Vr }, additionalProperties: false, required: ["tag"] });
                        break;
                      case c.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseTupleV0().value:
                        var be = Dr.tupleCase(), Or = be.name().toString();
                        Gr.push({ type: "object", title: Or, properties: { tag: Or, values: { type: "array", items: be.type().map(le) } }, required: ["tag", "values"], additionalProperties: false });
                    }
                  });
                  var Br = { oneOf: Gr };
                  return hr.length > 0 && (Br.description = hr), Br;
                }(It);
                break;
              case c.xdr.ScSpecEntryKind.scSpecEntryFunctionV0().value:
                var We = rt.functionV0(), mt = We.name().toString(), Gt = function(dr) {
                  var hr = te(dr.inputs()), Fr = hr.properties, Gr = hr.required, Br = { additionalProperties: false, properties: Fr, type: "object" };
                  (Gr == null ? void 0 : Gr.length) > 0 && (Br.required = Gr);
                  var Dr = { properties: { args: Br } }, Vr = dr.outputs(), be = Vr.length > 0 ? le(Vr[0]) : le(c.xdr.ScSpecTypeDef.scSpecTypeVoid()), Or = dr.doc().toString();
                  return Or.length > 0 && (Dr.description = Or), Dr.additionalProperties = false, be.additionalProperties = false, { input: Dr, output: be };
                }(We), ir = Gt.input;
                me[mt] = ir;
              case c.xdr.ScSpecEntryKind.scSpecEntryUdtErrorEnumV0().value:
            }
          });
          var ze = { $schema: "http://json-schema.org/draft-07/schema#", definitions: qe(qe({}, $e), me) };
          return we && (ze.$ref = "#/definitions/".concat(we)), ze;
        } }], nt && Dt(Le.prototype, nt), Object.defineProperty(Le, "prototype", { writable: false }), Le), zt = s(8287).Buffer;
        function st(we) {
          return st = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(me) {
            return typeof me;
          } : function(me) {
            return me && typeof Symbol == "function" && me.constructor === Symbol && me !== Symbol.prototype ? "symbol" : typeof me;
          }, st(we);
        }
        var ct = ["method"], yt = ["wasmHash", "salt", "format", "fee", "timeoutInSeconds", "simulate"];
        function Zt() {
          Zt = function() {
            return me;
          };
          var we, me = {}, ze = Object.prototype, rt = ze.hasOwnProperty, Tt = Object.defineProperty || function(Me, De, Ke) {
            Me[De] = Ke.value;
          }, Ot = typeof Symbol == "function" ? Symbol : {}, It = Ot.iterator || "@@iterator", We = Ot.asyncIterator || "@@asyncIterator", mt = Ot.toStringTag || "@@toStringTag";
          function Gt(Me, De, Ke) {
            return Object.defineProperty(Me, De, { value: Ke, enumerable: true, configurable: true, writable: true }), Me[De];
          }
          try {
            Gt({}, "");
          } catch {
            Gt = function(De, Ke, Bt) {
              return De[Ke] = Bt;
            };
          }
          function ir(Me, De, Ke, Bt) {
            var St = De && De.prototype instanceof Vr ? De : Vr, ur = Object.create(St.prototype), Cr = new zr(Bt || []);
            return Tt(ur, "_invoke", { value: Yt(Me, Ke, Cr) }), ur;
          }
          function dr(Me, De, Ke) {
            try {
              return { type: "normal", arg: Me.call(De, Ke) };
            } catch (Bt) {
              return { type: "throw", arg: Bt };
            }
          }
          me.wrap = ir;
          var hr = "suspendedStart", Fr = "suspendedYield", Gr = "executing", Br = "completed", Dr = {};
          function Vr() {
          }
          function be() {
          }
          function Or() {
          }
          var Ue = {};
          Gt(Ue, It, function() {
            return this;
          });
          var it = Object.getPrototypeOf, dt = it && it(it(en([])));
          dt && dt !== ze && rt.call(dt, It) && (Ue = dt);
          var vt = Or.prototype = Vr.prototype = Object.create(Ue);
          function wt(Me) {
            ["next", "throw", "return"].forEach(function(De) {
              Gt(Me, De, function(Ke) {
                return this._invoke(De, Ke);
              });
            });
          }
          function Pt(Me, De) {
            function Ke(St, ur, Cr, Wr) {
              var Qr = dr(Me[St], Me, ur);
              if (Qr.type !== "throw") {
                var dn = Qr.arg, wn = dn.value;
                return wn && st(wn) == "object" && rt.call(wn, "__await") ? De.resolve(wn.__await).then(function(yn) {
                  Ke("next", yn, Cr, Wr);
                }, function(yn) {
                  Ke("throw", yn, Cr, Wr);
                }) : De.resolve(wn).then(function(yn) {
                  dn.value = yn, Cr(dn);
                }, function(yn) {
                  return Ke("throw", yn, Cr, Wr);
                });
              }
              Wr(Qr.arg);
            }
            var Bt;
            Tt(this, "_invoke", { value: function(St, ur) {
              function Cr() {
                return new De(function(Wr, Qr) {
                  Ke(St, ur, Wr, Qr);
                });
              }
              return Bt = Bt ? Bt.then(Cr, Cr) : Cr();
            } });
          }
          function Yt(Me, De, Ke) {
            var Bt = hr;
            return function(St, ur) {
              if (Bt === Gr) throw Error("Generator is already running");
              if (Bt === Br) {
                if (St === "throw") throw ur;
                return { value: we, done: true };
              }
              for (Ke.method = St, Ke.arg = ur; ; ) {
                var Cr = Ke.delegate;
                if (Cr) {
                  var Wr = cr(Cr, Ke);
                  if (Wr) {
                    if (Wr === Dr) continue;
                    return Wr;
                  }
                }
                if (Ke.method === "next") Ke.sent = Ke._sent = Ke.arg;
                else if (Ke.method === "throw") {
                  if (Bt === hr) throw Bt = Br, Ke.arg;
                  Ke.dispatchException(Ke.arg);
                } else Ke.method === "return" && Ke.abrupt("return", Ke.arg);
                Bt = Gr;
                var Qr = dr(Me, De, Ke);
                if (Qr.type === "normal") {
                  if (Bt = Ke.done ? Br : Fr, Qr.arg === Dr) continue;
                  return { value: Qr.arg, done: Ke.done };
                }
                Qr.type === "throw" && (Bt = Br, Ke.method = "throw", Ke.arg = Qr.arg);
              }
            };
          }
          function cr(Me, De) {
            var Ke = De.method, Bt = Me.iterator[Ke];
            if (Bt === we) return De.delegate = null, Ke === "throw" && Me.iterator.return && (De.method = "return", De.arg = we, cr(Me, De), De.method === "throw") || Ke !== "return" && (De.method = "throw", De.arg = new TypeError("The iterator does not provide a '" + Ke + "' method")), Dr;
            var St = dr(Bt, Me.iterator, De.arg);
            if (St.type === "throw") return De.method = "throw", De.arg = St.arg, De.delegate = null, Dr;
            var ur = St.arg;
            return ur ? ur.done ? (De[Me.resultName] = ur.value, De.next = Me.nextLoc, De.method !== "return" && (De.method = "next", De.arg = we), De.delegate = null, Dr) : ur : (De.method = "throw", De.arg = new TypeError("iterator result is not an object"), De.delegate = null, Dr);
          }
          function qr(Me) {
            var De = { tryLoc: Me[0] };
            1 in Me && (De.catchLoc = Me[1]), 2 in Me && (De.finallyLoc = Me[2], De.afterLoc = Me[3]), this.tryEntries.push(De);
          }
          function Vt(Me) {
            var De = Me.completion || {};
            De.type = "normal", delete De.arg, Me.completion = De;
          }
          function zr(Me) {
            this.tryEntries = [{ tryLoc: "root" }], Me.forEach(qr, this), this.reset(true);
          }
          function en(Me) {
            if (Me || Me === "") {
              var De = Me[It];
              if (De) return De.call(Me);
              if (typeof Me.next == "function") return Me;
              if (!isNaN(Me.length)) {
                var Ke = -1, Bt = function St() {
                  for (; ++Ke < Me.length; ) if (rt.call(Me, Ke)) return St.value = Me[Ke], St.done = false, St;
                  return St.value = we, St.done = true, St;
                };
                return Bt.next = Bt;
              }
            }
            throw new TypeError(st(Me) + " is not iterable");
          }
          return be.prototype = Or, Tt(vt, "constructor", { value: Or, configurable: true }), Tt(Or, "constructor", { value: be, configurable: true }), be.displayName = Gt(Or, mt, "GeneratorFunction"), me.isGeneratorFunction = function(Me) {
            var De = typeof Me == "function" && Me.constructor;
            return !!De && (De === be || (De.displayName || De.name) === "GeneratorFunction");
          }, me.mark = function(Me) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(Me, Or) : (Me.__proto__ = Or, Gt(Me, mt, "GeneratorFunction")), Me.prototype = Object.create(vt), Me;
          }, me.awrap = function(Me) {
            return { __await: Me };
          }, wt(Pt.prototype), Gt(Pt.prototype, We, function() {
            return this;
          }), me.AsyncIterator = Pt, me.async = function(Me, De, Ke, Bt, St) {
            St === void 0 && (St = Promise);
            var ur = new Pt(ir(Me, De, Ke, Bt), St);
            return me.isGeneratorFunction(De) ? ur : ur.next().then(function(Cr) {
              return Cr.done ? Cr.value : ur.next();
            });
          }, wt(vt), Gt(vt, mt, "Generator"), Gt(vt, It, function() {
            return this;
          }), Gt(vt, "toString", function() {
            return "[object Generator]";
          }), me.keys = function(Me) {
            var De = Object(Me), Ke = [];
            for (var Bt in De) Ke.push(Bt);
            return Ke.reverse(), function St() {
              for (; Ke.length; ) {
                var ur = Ke.pop();
                if (ur in De) return St.value = ur, St.done = false, St;
              }
              return St.done = true, St;
            };
          }, me.values = en, zr.prototype = { constructor: zr, reset: function(Me) {
            if (this.prev = 0, this.next = 0, this.sent = this._sent = we, this.done = false, this.delegate = null, this.method = "next", this.arg = we, this.tryEntries.forEach(Vt), !Me) for (var De in this) De.charAt(0) === "t" && rt.call(this, De) && !isNaN(+De.slice(1)) && (this[De] = we);
          }, stop: function() {
            this.done = true;
            var Me = this.tryEntries[0].completion;
            if (Me.type === "throw") throw Me.arg;
            return this.rval;
          }, dispatchException: function(Me) {
            if (this.done) throw Me;
            var De = this;
            function Ke(Qr, dn) {
              return ur.type = "throw", ur.arg = Me, De.next = Qr, dn && (De.method = "next", De.arg = we), !!dn;
            }
            for (var Bt = this.tryEntries.length - 1; Bt >= 0; --Bt) {
              var St = this.tryEntries[Bt], ur = St.completion;
              if (St.tryLoc === "root") return Ke("end");
              if (St.tryLoc <= this.prev) {
                var Cr = rt.call(St, "catchLoc"), Wr = rt.call(St, "finallyLoc");
                if (Cr && Wr) {
                  if (this.prev < St.catchLoc) return Ke(St.catchLoc, true);
                  if (this.prev < St.finallyLoc) return Ke(St.finallyLoc);
                } else if (Cr) {
                  if (this.prev < St.catchLoc) return Ke(St.catchLoc, true);
                } else {
                  if (!Wr) throw Error("try statement without catch or finally");
                  if (this.prev < St.finallyLoc) return Ke(St.finallyLoc);
                }
              }
            }
          }, abrupt: function(Me, De) {
            for (var Ke = this.tryEntries.length - 1; Ke >= 0; --Ke) {
              var Bt = this.tryEntries[Ke];
              if (Bt.tryLoc <= this.prev && rt.call(Bt, "finallyLoc") && this.prev < Bt.finallyLoc) {
                var St = Bt;
                break;
              }
            }
            St && (Me === "break" || Me === "continue") && St.tryLoc <= De && De <= St.finallyLoc && (St = null);
            var ur = St ? St.completion : {};
            return ur.type = Me, ur.arg = De, St ? (this.method = "next", this.next = St.finallyLoc, Dr) : this.complete(ur);
          }, complete: function(Me, De) {
            if (Me.type === "throw") throw Me.arg;
            return Me.type === "break" || Me.type === "continue" ? this.next = Me.arg : Me.type === "return" ? (this.rval = this.arg = Me.arg, this.method = "return", this.next = "end") : Me.type === "normal" && De && (this.next = De), Dr;
          }, finish: function(Me) {
            for (var De = this.tryEntries.length - 1; De >= 0; --De) {
              var Ke = this.tryEntries[De];
              if (Ke.finallyLoc === Me) return this.complete(Ke.completion, Ke.afterLoc), Vt(Ke), Dr;
            }
          }, catch: function(Me) {
            for (var De = this.tryEntries.length - 1; De >= 0; --De) {
              var Ke = this.tryEntries[De];
              if (Ke.tryLoc === Me) {
                var Bt = Ke.completion;
                if (Bt.type === "throw") {
                  var St = Bt.arg;
                  Vt(Ke);
                }
                return St;
              }
            }
            throw Error("illegal catch attempt");
          }, delegateYield: function(Me, De, Ke) {
            return this.delegate = { iterator: en(Me), resultName: De, nextLoc: Ke }, this.method === "next" && (this.arg = we), Dr;
          } }, me;
        }
        function Ct(we, me) {
          var ze = Object.keys(we);
          if (Object.getOwnPropertySymbols) {
            var rt = Object.getOwnPropertySymbols(we);
            me && (rt = rt.filter(function(Tt) {
              return Object.getOwnPropertyDescriptor(we, Tt).enumerable;
            })), ze.push.apply(ze, rt);
          }
          return ze;
        }
        function Lt(we) {
          for (var me = 1; me < arguments.length; me++) {
            var ze = arguments[me] != null ? arguments[me] : {};
            me % 2 ? Ct(Object(ze), true).forEach(function(rt) {
              ar(we, rt, ze[rt]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(we, Object.getOwnPropertyDescriptors(ze)) : Ct(Object(ze)).forEach(function(rt) {
              Object.defineProperty(we, rt, Object.getOwnPropertyDescriptor(ze, rt));
            });
          }
          return we;
        }
        function Wt(we, me) {
          if (we == null) return {};
          var ze, rt, Tt = function(It, We) {
            if (It == null) return {};
            var mt = {};
            for (var Gt in It) if ({}.hasOwnProperty.call(It, Gt)) {
              if (We.indexOf(Gt) !== -1) continue;
              mt[Gt] = It[Gt];
            }
            return mt;
          }(we, me);
          if (Object.getOwnPropertySymbols) {
            var Ot = Object.getOwnPropertySymbols(we);
            for (rt = 0; rt < Ot.length; rt++) ze = Ot[rt], me.indexOf(ze) === -1 && {}.propertyIsEnumerable.call(we, ze) && (Tt[ze] = we[ze]);
          }
          return Tt;
        }
        function vr(we, me) {
          for (var ze = 0; ze < me.length; ze++) {
            var rt = me[ze];
            rt.enumerable = rt.enumerable || false, rt.configurable = true, "value" in rt && (rt.writable = true), Object.defineProperty(we, sr(rt.key), rt);
          }
        }
        function ar(we, me, ze) {
          return (me = sr(me)) in we ? Object.defineProperty(we, me, { value: ze, enumerable: true, configurable: true, writable: true }) : we[me] = ze, we;
        }
        function sr(we) {
          var me = function(ze, rt) {
            if (st(ze) != "object" || !ze) return ze;
            var Tt = ze[Symbol.toPrimitive];
            if (Tt !== void 0) {
              var Ot = Tt.call(ze, rt);
              if (st(Ot) != "object") return Ot;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return (rt === "string" ? String : Number)(ze);
          }(we, "string");
          return st(me) == "symbol" ? me : me + "";
        }
        function gr(we) {
          return function(me) {
            if (Array.isArray(me)) return Tr(me);
          }(we) || function(me) {
            if (typeof Symbol < "u" && me[Symbol.iterator] != null || me["@@iterator"] != null) return Array.from(me);
          }(we) || function(me, ze) {
            if (me) {
              if (typeof me == "string") return Tr(me, ze);
              var rt = {}.toString.call(me).slice(8, -1);
              return rt === "Object" && me.constructor && (rt = me.constructor.name), rt === "Map" || rt === "Set" ? Array.from(me) : rt === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(rt) ? Tr(me, ze) : void 0;
            }
          }(we) || function() {
            throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
          }();
        }
        function Tr(we, me) {
          (me == null || me > we.length) && (me = we.length);
          for (var ze = 0, rt = Array(me); ze < me; ze++) rt[ze] = we[ze];
          return rt;
        }
        function Mr(we, me, ze, rt, Tt, Ot, It) {
          try {
            var We = we[Ot](It), mt = We.value;
          } catch (Gt) {
            return void ze(Gt);
          }
          We.done ? me(mt) : Promise.resolve(mt).then(rt, Tt);
        }
        function Nr(we) {
          return function() {
            var me = this, ze = arguments;
            return new Promise(function(rt, Tt) {
              var Ot = we.apply(me, ze);
              function It(mt) {
                Mr(Ot, rt, Tt, It, We, "next", mt);
              }
              function We(mt) {
                Mr(Ot, rt, Tt, It, We, "throw", mt);
              }
              It(void 0);
            });
          };
        }
        var Lr = "__constructor";
        function jr(we) {
          return Hr.apply(this, arguments);
        }
        function Hr() {
          return (Hr = Nr(Zt().mark(function we(me) {
            var ze, rt, Tt, Ot, It, We;
            return Zt().wrap(function(mt) {
              for (; ; ) switch (mt.prev = mt.next) {
                case 0:
                  return mt.prev = 0, mt.next = 3, WebAssembly.compile(me);
                case 3:
                  rt = mt.sent, ze = WebAssembly.Module.customSections(rt, "contractspecv0"), mt.next = 11;
                  break;
                case 7:
                  mt.prev = 7, mt.t0 = mt.catch(0), Tt = kr(me), ze = Tt.get("contractspecv0");
                case 11:
                  if (ze && ze.length !== 0) {
                    mt.next = 13;
                    break;
                  }
                  throw new Error("Could not obtain contract spec from wasm");
                case 13:
                  return Ot = zt.from(ze[0]), It = x(Ot), We = new ft(It), mt.abrupt("return", We);
                case 17:
                case "end":
                  return mt.stop();
              }
            }, we, null, [[0, 7]]);
          }))).apply(this, arguments);
        }
        function kr(we) {
          var me = /* @__PURE__ */ new Map(), ze = we.buffer.slice(we.byteOffset, we.byteOffset + we.byteLength), rt = 0, Tt = function(Fr) {
            if (rt + Fr > we.byteLength) throw new Error("Buffer overflow");
            var Gr = new Uint8Array(ze, rt, Fr);
            return rt += Fr, Gr;
          };
          if (gr(Tt(4)).join() !== "0,97,115,109") throw new Error("Invalid WASM magic");
          if (gr(Tt(4)).join() !== "1,0,0,0") throw new Error("Invalid WASM version");
          for (; rt < we.byteLength; ) {
            var Ot = Tt(1)[0], It = hr(), We = rt;
            if (Ot === 0) {
              var mt = hr();
              if (mt === 0 || rt + mt > We + It) continue;
              var Gt = Tt(mt), ir = Tt(It - (rt - We));
              try {
                var dr = new TextDecoder("utf-8", { fatal: true }).decode(Gt);
                ir.length > 0 && me.set(dr, (me.get(dr) || []).concat(ir));
              } catch {
              }
            } else rt += It;
          }
          function hr() {
            for (var Fr = 0, Gr = 0; ; ) {
              var Br = Tt(1)[0];
              if (Fr |= (127 & Br) << Gr, !(128 & Br)) break;
              if ((Gr += 7) >= 32) throw new Error("Invalid WASM value");
            }
            return Fr >>> 0;
          }
          return me;
        }
        function Xt(we, me) {
          return Qt.apply(this, arguments);
        }
        function Qt() {
          return Qt = Nr(Zt().mark(function we(me, ze) {
            var rt, Tt, Ot, It, We, mt, Gt = arguments;
            return Zt().wrap(function(ir) {
              for (; ; ) switch (ir.prev = ir.next) {
                case 0:
                  if (rt = Gt.length > 2 && Gt[2] !== void 0 ? Gt[2] : "hex", ze && ze.rpcUrl) {
                    ir.next = 3;
                    break;
                  }
                  throw new TypeError("options must contain rpcUrl");
                case 3:
                  return Tt = ze.rpcUrl, Ot = ze.allowHttp, It = { allowHttp: Ot }, We = new h.Server(Tt, It), ir.next = 8, We.getContractWasmByHash(me, rt);
                case 8:
                  return mt = ir.sent, ir.abrupt("return", jr(mt));
                case 10:
                case "end":
                  return ir.stop();
              }
            }, we);
          })), Qt.apply(this, arguments);
        }
        var br = function() {
          function we(Ot, It) {
            var We = this;
            (function(mt, Gt) {
              if (!(mt instanceof Gt)) throw new TypeError("Cannot call a class as a function");
            })(this, we), ar(this, "txFromJSON", function(mt) {
              var Gt = JSON.parse(mt), ir = Gt.method, dr = Wt(Gt, ct);
              return Ne.fromJSON(Lt(Lt({}, We.options), {}, { method: ir, parseResultXdr: function(hr) {
                return We.spec.funcResToNative(ir, hr);
              } }), dr);
            }), ar(this, "txFromXDR", function(mt) {
              return Ne.fromXDR(We.options, mt, We.spec);
            }), this.spec = Ot, this.options = It, this.spec.funcs().forEach(function(mt) {
              var Gt = mt.name().toString();
              if (Gt !== Lr) {
                var ir = function(dr, hr) {
                  return Ne.build(Lt(Lt(Lt({ method: Gt, args: dr && Ot.funcArgsToScVals(Gt, dr) }, It), hr), {}, { errorTypes: Ot.errorCases().reduce(function(Fr, Gr) {
                    return Lt(Lt({}, Fr), {}, ar({}, Gr.value(), { message: Gr.doc().toString() }));
                  }, {}), parseResultXdr: function(Fr) {
                    return Ot.funcResToNative(Gt, Fr);
                  } }));
                };
                We[Gt] = Ot.getFunc(Gt).inputs().length === 0 ? function(dr) {
                  return ir(void 0, dr);
                } : ir;
              }
            });
          }
          return function(Ot, It, We) {
            return We && vr(Ot, We), Object.defineProperty(Ot, "prototype", { writable: false }), Ot;
          }(we, null, [{ key: "deploy", value: (Tt = Nr(Zt().mark(function Ot(It, We) {
            var mt, Gt, ir, dr, hr, Fr, Gr, Br, Dr;
            return Zt().wrap(function(Vr) {
              for (; ; ) switch (Vr.prev = Vr.next) {
                case 0:
                  return mt = We.wasmHash, Gt = We.salt, ir = We.format, dr = We.fee, hr = We.timeoutInSeconds, Fr = We.simulate, Gr = Wt(We, yt), Vr.next = 3, Xt(mt, Gr, ir);
                case 3:
                  return Br = Vr.sent, Dr = c.Operation.createCustomContract({ address: new c.Address(We.address || We.publicKey), wasmHash: typeof mt == "string" ? zt.from(mt, ir ?? "hex") : mt, salt: Gt, constructorArgs: It ? Br.funcArgsToScVals(Lr, It) : [] }), Vr.abrupt("return", Ne.buildWithOp(Dr, Lt(Lt({ fee: dr, timeoutInSeconds: hr, simulate: Fr }, Gr), {}, { contractId: "ignored", method: Lr, parseResultXdr: function(be) {
                    return new we(Br, Lt(Lt({}, Gr), {}, { contractId: c.Address.fromScVal(be).toString() }));
                  } })));
                case 6:
                case "end":
                  return Vr.stop();
              }
            }, Ot);
          })), function(Ot, It) {
            return Tt.apply(this, arguments);
          }) }, { key: "fromWasmHash", value: (rt = Nr(Zt().mark(function Ot(It, We) {
            var mt, Gt, ir, dr, hr, Fr, Gr = arguments;
            return Zt().wrap(function(Br) {
              for (; ; ) switch (Br.prev = Br.next) {
                case 0:
                  if (mt = Gr.length > 2 && Gr[2] !== void 0 ? Gr[2] : "hex", We && We.rpcUrl) {
                    Br.next = 3;
                    break;
                  }
                  throw new TypeError("options must contain rpcUrl");
                case 3:
                  return Gt = We.rpcUrl, ir = We.allowHttp, dr = { allowHttp: ir }, hr = new h.Server(Gt, dr), Br.next = 8, hr.getContractWasmByHash(It, mt);
                case 8:
                  return Fr = Br.sent, Br.abrupt("return", we.fromWasm(Fr, We));
                case 10:
                case "end":
                  return Br.stop();
              }
            }, Ot);
          })), function(Ot, It) {
            return rt.apply(this, arguments);
          }) }, { key: "fromWasm", value: (ze = Nr(Zt().mark(function Ot(It, We) {
            var mt;
            return Zt().wrap(function(Gt) {
              for (; ; ) switch (Gt.prev = Gt.next) {
                case 0:
                  return Gt.next = 2, jr(It);
                case 2:
                  return mt = Gt.sent, Gt.abrupt("return", new we(mt, We));
                case 4:
                case "end":
                  return Gt.stop();
              }
            }, Ot);
          })), function(Ot, It) {
            return ze.apply(this, arguments);
          }) }, { key: "from", value: (me = Nr(Zt().mark(function Ot(It) {
            var We, mt, Gt, ir, dr, hr;
            return Zt().wrap(function(Fr) {
              for (; ; ) switch (Fr.prev = Fr.next) {
                case 0:
                  if (It && It.rpcUrl && It.contractId) {
                    Fr.next = 2;
                    break;
                  }
                  throw new TypeError("options must contain rpcUrl and contractId");
                case 2:
                  return We = It.rpcUrl, mt = It.contractId, Gt = It.allowHttp, ir = { allowHttp: Gt }, dr = new h.Server(We, ir), Fr.next = 7, dr.getContractWasmByContractId(mt);
                case 7:
                  return hr = Fr.sent, Fr.abrupt("return", we.fromWasm(hr, It));
                case 9:
                case "end":
                  return Fr.stop();
              }
            }, Ot);
          })), function(Ot) {
            return me.apply(this, arguments);
          }) }]);
          var me, ze, rt, Tt;
        }();
      }, 6396: (t, o, s) => {
        Object.defineProperty(o, "__esModule", { value: true }), o.TransactionBuilder = o.TimeoutInfinite = o.BASE_FEE = void 0, o.isValidDate = L;
        var c = s(3740), h = R(s(1242)), f = R(s(1918)), r = s(2135), m = s(2243), g = s(6160), a = s(380), l = s(9260), d = s(4842), b = s(7120), S = s(225), E = s(4172);
        function R(j) {
          return j && j.__esModule ? j : { default: j };
        }
        function k(j) {
          return k = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(z) {
            return typeof z;
          } : function(z) {
            return z && typeof Symbol == "function" && z.constructor === Symbol && z !== Symbol.prototype ? "symbol" : typeof z;
          }, k(j);
        }
        function w(j) {
          return function(z) {
            if (Array.isArray(z)) return F(z);
          }(j) || function(z) {
            if (typeof Symbol < "u" && z[Symbol.iterator] != null || z["@@iterator"] != null) return Array.from(z);
          }(j) || function(z, Z) {
            if (z) {
              if (typeof z == "string") return F(z, Z);
              var ue = {}.toString.call(z).slice(8, -1);
              return ue === "Object" && z.constructor && (ue = z.constructor.name), ue === "Map" || ue === "Set" ? Array.from(z) : ue === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(ue) ? F(z, Z) : void 0;
            }
          }(j) || function() {
            throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
          }();
        }
        function F(j, z) {
          (z == null || z > j.length) && (z = j.length);
          for (var Z = 0, ue = Array(z); Z < z; Z++) ue[Z] = j[Z];
          return ue;
        }
        function I(j, z) {
          var Z = Object.keys(j);
          if (Object.getOwnPropertySymbols) {
            var ue = Object.getOwnPropertySymbols(j);
            z && (ue = ue.filter(function($) {
              return Object.getOwnPropertyDescriptor(j, $).enumerable;
            })), Z.push.apply(Z, ue);
          }
          return Z;
        }
        function q(j) {
          for (var z = 1; z < arguments.length; z++) {
            var Z = arguments[z] != null ? arguments[z] : {};
            z % 2 ? I(Object(Z), true).forEach(function(ue) {
              N(j, ue, Z[ue]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(j, Object.getOwnPropertyDescriptors(Z)) : I(Object(Z)).forEach(function(ue) {
              Object.defineProperty(j, ue, Object.getOwnPropertyDescriptor(Z, ue));
            });
          }
          return j;
        }
        function N(j, z, Z) {
          return (z = _(z)) in j ? Object.defineProperty(j, z, { value: Z, enumerable: true, configurable: true, writable: true }) : j[z] = Z, j;
        }
        function H(j, z) {
          for (var Z = 0; Z < z.length; Z++) {
            var ue = z[Z];
            ue.enumerable = ue.enumerable || false, ue.configurable = true, "value" in ue && (ue.writable = true), Object.defineProperty(j, _(ue.key), ue);
          }
        }
        function _(j) {
          var z = function(Z, ue) {
            if (k(Z) != "object" || !Z) return Z;
            var $ = Z[Symbol.toPrimitive];
            if ($ !== void 0) {
              var X = $.call(Z, ue);
              if (k(X) != "object") return X;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(Z);
          }(j, "string");
          return k(z) == "symbol" ? z : z + "";
        }
        var x = o.BASE_FEE = "100";
        o.TimeoutInfinite = 0, o.TransactionBuilder = function() {
          function j($) {
            var X = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
            if (function(J, B) {
              if (!(J instanceof B)) throw new TypeError("Cannot call a class as a function");
            }(this, j), !$) throw new Error("must specify source account for the transaction");
            if (X.fee === void 0) throw new Error("must specify fee for the transaction (in stroops)");
            this.source = $, this.operations = [], this.baseFee = X.fee, this.timebounds = X.timebounds ? q({}, X.timebounds) : null, this.ledgerbounds = X.ledgerbounds ? q({}, X.ledgerbounds) : null, this.minAccountSequence = X.minAccountSequence || null, this.minAccountSequenceAge = X.minAccountSequenceAge || null, this.minAccountSequenceLedgerGap = X.minAccountSequenceLedgerGap || null, this.extraSigners = X.extraSigners ? w(X.extraSigners) : null, this.memo = X.memo || E.Memo.none(), this.networkPassphrase = X.networkPassphrase || null, this.sorobanData = X.sorobanData ? new d.SorobanDataBuilder(X.sorobanData).build() : null;
          }
          return z = j, ue = [{ key: "cloneFrom", value: function($) {
            var X = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
            if (!($ instanceof a.Transaction)) throw new TypeError("expected a 'Transaction', got: ".concat($));
            var J, B = (BigInt($.sequence) - 1n).toString();
            if (b.StrKey.isValidMed25519PublicKey($.source)) J = m.MuxedAccount.fromAddress($.source, B);
            else {
              if (!b.StrKey.isValidEd25519PublicKey($.source)) throw new TypeError("unsupported tx source account: ".concat($.source));
              J = new r.Account($.source, B);
            }
            var Q = new j(J, q({ fee: (parseInt($.fee, 10) / $.operations.length || x).toString(), memo: $.memo, networkPassphrase: $.networkPassphrase, timebounds: $.timeBounds, ledgerbounds: $.ledgerBounds, minAccountSequence: $.minAccountSequence, minAccountSequenceAge: $.minAccountSequenceAge, minAccountSequenceLedgerGap: $.minAccountSequenceLedgerGap, extraSigners: $.extraSigners }, X));
            return $._tx.operations().forEach(function(ne) {
              return Q.addOperation(ne);
            }), Q;
          } }, { key: "buildFeeBumpTransaction", value: function($, X, J, B) {
            var Q = J.operations.length, ne = new h.default(J.fee).div(Q), K = new h.default(X);
            if (K.lt(ne)) throw new Error("Invalid baseFee, it should be at least ".concat(ne, " stroops."));
            var ie = new h.default(x);
            if (K.lt(ie)) throw new Error("Invalid baseFee, it should be at least ".concat(ie, " stroops."));
            var ce, ye = J.toEnvelope();
            if (ye.switch() === f.default.EnvelopeType.envelopeTypeTxV0()) {
              var oe = ye.v0().tx(), se = new f.default.Transaction({ sourceAccount: new f.default.MuxedAccount.keyTypeEd25519(oe.sourceAccountEd25519()), fee: oe.fee(), seqNum: oe.seqNum(), cond: f.default.Preconditions.precondTime(oe.timeBounds()), memo: oe.memo(), operations: oe.operations(), ext: new f.default.TransactionExt(0) });
              ye = new f.default.TransactionEnvelope.envelopeTypeTx(new f.default.TransactionV1Envelope({ tx: se, signatures: ye.v0().signatures() }));
            }
            ce = typeof $ == "string" ? (0, g.decodeAddressToMuxedAccount)($) : $.xdrMuxedAccount();
            var re = new f.default.FeeBumpTransaction({ feeSource: ce, fee: f.default.Int64.fromString(K.times(Q + 1).toString()), innerTx: f.default.FeeBumpTransactionInnerTx.envelopeTypeTx(ye.v1()), ext: new f.default.FeeBumpTransactionExt(0) }), ge = new f.default.FeeBumpTransactionEnvelope({ tx: re, signatures: [] }), Te = new f.default.TransactionEnvelope.envelopeTypeTxFeeBump(ge);
            return new l.FeeBumpTransaction(Te, B);
          } }, { key: "fromXDR", value: function($, X) {
            return typeof $ == "string" && ($ = f.default.TransactionEnvelope.fromXDR($, "base64")), $.switch() === f.default.EnvelopeType.envelopeTypeTxFeeBump() ? new l.FeeBumpTransaction($, X) : new a.Transaction($, X);
          } }], (Z = [{ key: "addOperation", value: function($) {
            return this.operations.push($), this;
          } }, { key: "addOperationAt", value: function($, X) {
            return this.operations.splice(X, 0, $), this;
          } }, { key: "clearOperations", value: function() {
            return this.operations = [], this;
          } }, { key: "clearOperationAt", value: function($) {
            return this.operations.splice($, 1), this;
          } }, { key: "addMemo", value: function($) {
            return this.memo = $, this;
          } }, { key: "setTimeout", value: function($) {
            if (this.timebounds !== null && this.timebounds.maxTime > 0) throw new Error("TimeBounds.max_time has been already set - setting timeout would overwrite it.");
            if ($ < 0) throw new Error("timeout cannot be negative");
            if ($ > 0) {
              var X = Math.floor(Date.now() / 1e3) + $;
              this.timebounds === null ? this.timebounds = { minTime: 0, maxTime: X } : this.timebounds = { minTime: this.timebounds.minTime, maxTime: X };
            } else this.timebounds = { minTime: 0, maxTime: 0 };
            return this;
          } }, { key: "setTimebounds", value: function($, X) {
            if (typeof $ == "number" && ($ = new Date(1e3 * $)), typeof X == "number" && (X = new Date(1e3 * X)), this.timebounds !== null) throw new Error("TimeBounds has been already set - setting timebounds would overwrite it.");
            var J = Math.floor($.valueOf() / 1e3), B = Math.floor(X.valueOf() / 1e3);
            if (J < 0) throw new Error("min_time cannot be negative");
            if (B < 0) throw new Error("max_time cannot be negative");
            if (B > 0 && J > B) throw new Error("min_time cannot be greater than max_time");
            return this.timebounds = { minTime: J, maxTime: B }, this;
          } }, { key: "setLedgerbounds", value: function($, X) {
            if (this.ledgerbounds !== null) throw new Error("LedgerBounds has been already set - setting ledgerbounds would overwrite it.");
            if ($ < 0) throw new Error("min_ledger cannot be negative");
            if (X < 0) throw new Error("max_ledger cannot be negative");
            if (X > 0 && $ > X) throw new Error("min_ledger cannot be greater than max_ledger");
            return this.ledgerbounds = { minLedger: $, maxLedger: X }, this;
          } }, { key: "setMinAccountSequence", value: function($) {
            if (this.minAccountSequence !== null) throw new Error("min_account_sequence has been already set - setting min_account_sequence would overwrite it.");
            return this.minAccountSequence = $, this;
          } }, { key: "setMinAccountSequenceAge", value: function($) {
            if (typeof $ != "number") throw new Error("min_account_sequence_age must be a number");
            if (this.minAccountSequenceAge !== null) throw new Error("min_account_sequence_age has been already set - setting min_account_sequence_age would overwrite it.");
            if ($ < 0) throw new Error("min_account_sequence_age cannot be negative");
            return this.minAccountSequenceAge = $, this;
          } }, { key: "setMinAccountSequenceLedgerGap", value: function($) {
            if (this.minAccountSequenceLedgerGap !== null) throw new Error("min_account_sequence_ledger_gap has been already set - setting min_account_sequence_ledger_gap would overwrite it.");
            if ($ < 0) throw new Error("min_account_sequence_ledger_gap cannot be negative");
            return this.minAccountSequenceLedgerGap = $, this;
          } }, { key: "setExtraSigners", value: function($) {
            if (!Array.isArray($)) throw new Error("extra_signers must be an array of strings.");
            if (this.extraSigners !== null) throw new Error("extra_signers has been already set - setting extra_signers would overwrite it.");
            if ($.length > 2) throw new Error("extra_signers cannot be longer than 2 elements.");
            return this.extraSigners = w($), this;
          } }, { key: "setNetworkPassphrase", value: function($) {
            return this.networkPassphrase = $, this;
          } }, { key: "setSorobanData", value: function($) {
            return this.sorobanData = new d.SorobanDataBuilder($).build(), this;
          } }, { key: "build", value: function() {
            var $ = new h.default(this.source.sequenceNumber()).plus(1), X = { fee: new h.default(this.baseFee).times(this.operations.length).toNumber(), seqNum: f.default.SequenceNumber.fromString($.toString()), memo: this.memo ? this.memo.toXDRObject() : null };
            if (this.timebounds === null || this.timebounds.minTime === void 0 || this.timebounds.maxTime === void 0) throw new Error("TimeBounds has to be set or you must call setTimeout(TimeoutInfinite).");
            L(this.timebounds.minTime) && (this.timebounds.minTime = this.timebounds.minTime.getTime() / 1e3), L(this.timebounds.maxTime) && (this.timebounds.maxTime = this.timebounds.maxTime.getTime() / 1e3), this.timebounds.minTime = c.UnsignedHyper.fromString(this.timebounds.minTime.toString()), this.timebounds.maxTime = c.UnsignedHyper.fromString(this.timebounds.maxTime.toString());
            var J = new f.default.TimeBounds(this.timebounds);
            if (this.hasV2Preconditions()) {
              var B = null;
              this.ledgerbounds !== null && (B = new f.default.LedgerBounds(this.ledgerbounds));
              var Q = this.minAccountSequence || "0";
              Q = f.default.SequenceNumber.fromString(Q);
              var ne = c.UnsignedHyper.fromString(this.minAccountSequenceAge !== null ? this.minAccountSequenceAge.toString() : "0"), K = this.minAccountSequenceLedgerGap || 0, ie = this.extraSigners !== null ? this.extraSigners.map(S.SignerKey.decodeAddress) : [];
              X.cond = f.default.Preconditions.precondV2(new f.default.PreconditionsV2({ timeBounds: J, ledgerBounds: B, minSeqNum: Q, minSeqAge: ne, minSeqLedgerGap: K, extraSigners: ie }));
            } else X.cond = f.default.Preconditions.precondTime(J);
            X.sourceAccount = (0, g.decodeAddressToMuxedAccount)(this.source.accountId()), this.sorobanData ? X.ext = new f.default.TransactionExt(1, this.sorobanData) : X.ext = new f.default.TransactionExt(0, f.default.Void);
            var ce = new f.default.Transaction(X);
            ce.operations(this.operations);
            var ye = new f.default.TransactionEnvelope.envelopeTypeTx(new f.default.TransactionV1Envelope({ tx: ce })), oe = new a.Transaction(ye, this.networkPassphrase);
            return this.source.incrementSequenceNumber(), oe;
          } }, { key: "hasV2Preconditions", value: function() {
            return this.ledgerbounds !== null || this.minAccountSequence !== null || this.minAccountSequenceAge !== null || this.minAccountSequenceLedgerGap !== null || this.extraSigners !== null && this.extraSigners.length > 0;
          } }]) && H(z.prototype, Z), ue && H(z, ue), Object.defineProperty(z, "prototype", { writable: false }), z;
          var z, Z, ue;
        }();
        function L(j) {
          return j instanceof Date && !isNaN(j);
        }
      }, 6549: (t) => {
        t.exports = Object.getOwnPropertyDescriptor;
      }, 6556: (t, o, s) => {
        var c = s(453), h = s(3126), f = h([c("%String.prototype.indexOf%")]);
        t.exports = function(r, m) {
          var g = c(r, !!m);
          return typeof g == "function" && f(r, ".prototype.") > -1 ? h([g]) : g;
        };
      }, 6578: (t) => {
        t.exports = ["Float16Array", "Float32Array", "Float64Array", "Int8Array", "Int16Array", "Int32Array", "Uint8Array", "Uint8ClampedArray", "Uint16Array", "Uint32Array", "BigInt64Array", "BigUint64Array"];
      }, 6688: (t, o, s) => {
        var c;
        function h() {
          if (c !== void 0) return c;
          if (s.g.XMLHttpRequest) {
            c = new s.g.XMLHttpRequest();
            try {
              c.open("GET", s.g.XDomainRequest ? "/" : "https://example.com");
            } catch {
              c = null;
            }
          } else c = null;
          return c;
        }
        function f(m) {
          var g = h();
          if (!g) return false;
          try {
            return g.responseType = m, g.responseType === m;
          } catch {
          }
          return false;
        }
        function r(m) {
          return typeof m == "function";
        }
        o.fetch = r(s.g.fetch) && r(s.g.ReadableStream), o.writableStream = r(s.g.WritableStream), o.abortController = r(s.g.AbortController), o.arraybuffer = o.fetch || f("arraybuffer"), o.msstream = !o.fetch && f("ms-stream"), o.mozchunkedarraybuffer = !o.fetch && f("moz-chunked-arraybuffer"), o.overrideMimeType = o.fetch || !!h() && r(h().overrideMimeType), c = null;
      }, 6691: (t, o, s) => {
        var c = s(8287).Buffer;
        Object.defineProperty(o, "__esModule", { value: true }), o.Keypair = void 0;
        var h = a(s(4940)), f = s(15), r = s(7120), m = s(9152), g = a(s(1918));
        function a(S) {
          return S && S.__esModule ? S : { default: S };
        }
        function l(S) {
          return l = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(E) {
            return typeof E;
          } : function(E) {
            return E && typeof Symbol == "function" && E.constructor === Symbol && E !== Symbol.prototype ? "symbol" : typeof E;
          }, l(S);
        }
        function d(S, E) {
          for (var R = 0; R < E.length; R++) {
            var k = E[R];
            k.enumerable = k.enumerable || false, k.configurable = true, "value" in k && (k.writable = true), Object.defineProperty(S, b(k.key), k);
          }
        }
        function b(S) {
          var E = function(R, k) {
            if (l(R) != "object" || !R) return R;
            var w = R[Symbol.toPrimitive];
            if (w !== void 0) {
              var F = w.call(R, k);
              if (l(F) != "object") return F;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(R);
          }(S, "string");
          return l(E) == "symbol" ? E : E + "";
        }
        o.Keypair = function() {
          return S = function k(w) {
            if (function(F, I) {
              if (!(F instanceof I)) throw new TypeError("Cannot call a class as a function");
            }(this, k), w.type !== "ed25519") throw new Error("Invalid keys type");
            if (this.type = w.type, w.secretKey) {
              if (w.secretKey = c.from(w.secretKey), w.secretKey.length !== 32) throw new Error("secretKey length is invalid");
              if (this._secretSeed = w.secretKey, this._publicKey = (0, f.generate)(w.secretKey), this._secretKey = c.concat([w.secretKey, this._publicKey]), w.publicKey && !this._publicKey.equals(c.from(w.publicKey))) throw new Error("secretKey does not match publicKey");
            } else if (this._publicKey = c.from(w.publicKey), this._publicKey.length !== 32) throw new Error("publicKey length is invalid");
          }, R = [{ key: "fromSecret", value: function(k) {
            var w = r.StrKey.decodeEd25519SecretSeed(k);
            return this.fromRawEd25519Seed(w);
          } }, { key: "fromRawEd25519Seed", value: function(k) {
            return new this({ type: "ed25519", secretKey: k });
          } }, { key: "master", value: function(k) {
            if (!k) throw new Error("No network selected. Please pass a network argument, e.g. `Keypair.master(Networks.PUBLIC)`.");
            return this.fromRawEd25519Seed((0, m.hash)(k));
          } }, { key: "fromPublicKey", value: function(k) {
            if ((k = r.StrKey.decodeEd25519PublicKey(k)).length !== 32) throw new Error("Invalid Stellar public key");
            return new this({ type: "ed25519", publicKey: k });
          } }, { key: "random", value: function() {
            var k = h.default.randomBytes(32);
            return this.fromRawEd25519Seed(k);
          } }], (E = [{ key: "xdrAccountId", value: function() {
            return new g.default.AccountId.publicKeyTypeEd25519(this._publicKey);
          } }, { key: "xdrPublicKey", value: function() {
            return new g.default.PublicKey.publicKeyTypeEd25519(this._publicKey);
          } }, { key: "xdrMuxedAccount", value: function(k) {
            if (k !== void 0) {
              if (typeof k != "string") throw new TypeError("expected string for ID, got ".concat(l(k)));
              return g.default.MuxedAccount.keyTypeMuxedEd25519(new g.default.MuxedAccountMed25519({ id: g.default.Uint64.fromString(k), ed25519: this._publicKey }));
            }
            return new g.default.MuxedAccount.keyTypeEd25519(this._publicKey);
          } }, { key: "rawPublicKey", value: function() {
            return this._publicKey;
          } }, { key: "signatureHint", value: function() {
            var k = this.xdrAccountId().toXDR();
            return k.slice(k.length - 4);
          } }, { key: "publicKey", value: function() {
            return r.StrKey.encodeEd25519PublicKey(this._publicKey);
          } }, { key: "secret", value: function() {
            if (!this._secretSeed) throw new Error("no secret key available");
            if (this.type === "ed25519") return r.StrKey.encodeEd25519SecretSeed(this._secretSeed);
            throw new Error("Invalid Keypair type");
          } }, { key: "rawSecretKey", value: function() {
            return this._secretSeed;
          } }, { key: "canSign", value: function() {
            return !!this._secretKey;
          } }, { key: "sign", value: function(k) {
            if (!this.canSign()) throw new Error("cannot sign: no secret key available");
            return (0, f.sign)(k, this._secretKey);
          } }, { key: "verify", value: function(k, w) {
            return (0, f.verify)(k, w, this._publicKey);
          } }, { key: "signDecorated", value: function(k) {
            var w = this.sign(k), F = this.signatureHint();
            return new g.default.DecoratedSignature({ hint: F, signature: w });
          } }, { key: "signPayloadDecorated", value: function(k) {
            var w = this.sign(k), F = this.signatureHint(), I = c.from(k.slice(-4));
            return I.length < 4 && (I = c.concat([I, c.alloc(4 - k.length, 0)])), new g.default.DecoratedSignature({ hint: I.map(function(q, N) {
              return q ^ F[N];
            }), signature: w });
          } }]) && d(S.prototype, E), R && d(S, R), Object.defineProperty(S, "prototype", { writable: false }), S;
          var S, E, R;
        }();
      }, 6698: (t) => {
        typeof Object.create == "function" ? t.exports = function(o, s) {
          s && (o.super_ = s, o.prototype = Object.create(s.prototype, { constructor: { value: o, enumerable: false, writable: true, configurable: true } }));
        } : t.exports = function(o, s) {
          if (s) {
            o.super_ = s;
            var c = function() {
            };
            c.prototype = s.prototype, o.prototype = new c(), o.prototype.constructor = o;
          }
        };
      }, 6708: (t, o, s) => {
        function c(X) {
          var J = this;
          this.next = null, this.entry = null, this.finish = function() {
            (function(B, Q, ne) {
              var K = B.entry;
              for (B.entry = null; K; ) {
                var ie = K.callback;
                Q.pendingcb--, ie(ne), K = K.next;
              }
              Q.corkedRequestsFree.next = B;
            })(J, X);
          };
        }
        var h;
        t.exports = x, x.WritableState = _;
        var f = { deprecate: s(4643) }, r = s(345), m = s(8287).Buffer, g = (s.g !== void 0 ? s.g : typeof window < "u" ? window : typeof self < "u" ? self : {}).Uint8Array || function() {
        }, a, l = s(5896), d = s(5291).getHighWaterMark, b = s(6048).F, S = b.ERR_INVALID_ARG_TYPE, E = b.ERR_METHOD_NOT_IMPLEMENTED, R = b.ERR_MULTIPLE_CALLBACK, k = b.ERR_STREAM_CANNOT_PIPE, w = b.ERR_STREAM_DESTROYED, F = b.ERR_STREAM_NULL_VALUES, I = b.ERR_STREAM_WRITE_AFTER_END, q = b.ERR_UNKNOWN_ENCODING, N = l.errorOrDestroy;
        function H() {
        }
        function _(X, J, B) {
          h = h || s(5382), X = X || {}, typeof B != "boolean" && (B = J instanceof h), this.objectMode = !!X.objectMode, B && (this.objectMode = this.objectMode || !!X.writableObjectMode), this.highWaterMark = d(this, X, "writableHighWaterMark", B), this.finalCalled = false, this.needDrain = false, this.ending = false, this.ended = false, this.finished = false, this.destroyed = false;
          var Q = X.decodeStrings === false;
          this.decodeStrings = !Q, this.defaultEncoding = X.defaultEncoding || "utf8", this.length = 0, this.writing = false, this.corked = 0, this.sync = true, this.bufferProcessing = false, this.onwrite = function(ne) {
            (function(K, ie) {
              var ce = K._writableState, ye = ce.sync, oe = ce.writecb;
              if (typeof oe != "function") throw new R();
              if (function(re) {
                re.writing = false, re.writecb = null, re.length -= re.writelen, re.writelen = 0;
              }(ce), ie) (function(re, ge, Te, pe, Oe) {
                --ge.pendingcb, Te ? (process.nextTick(Oe, pe), process.nextTick($, re, ge), re._writableState.errorEmitted = true, N(re, pe)) : (Oe(pe), re._writableState.errorEmitted = true, N(re, pe), $(re, ge));
              })(K, ce, ye, ie, oe);
              else {
                var se = Z(ce) || K.destroyed;
                se || ce.corked || ce.bufferProcessing || !ce.bufferedRequest || z(K, ce), ye ? process.nextTick(j, K, ce, se, oe) : j(K, ce, se, oe);
              }
            })(J, ne);
          }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = false, this.errorEmitted = false, this.emitClose = X.emitClose !== false, this.autoDestroy = !!X.autoDestroy, this.bufferedRequestCount = 0, this.corkedRequestsFree = new c(this);
        }
        function x(X) {
          var J = this instanceof (h = h || s(5382));
          if (!J && !a.call(x, this)) return new x(X);
          this._writableState = new _(X, this, J), this.writable = true, X && (typeof X.write == "function" && (this._write = X.write), typeof X.writev == "function" && (this._writev = X.writev), typeof X.destroy == "function" && (this._destroy = X.destroy), typeof X.final == "function" && (this._final = X.final)), r.call(this);
        }
        function L(X, J, B, Q, ne, K, ie) {
          J.writelen = Q, J.writecb = ie, J.writing = true, J.sync = true, J.destroyed ? J.onwrite(new w("write")) : B ? X._writev(ne, J.onwrite) : X._write(ne, K, J.onwrite), J.sync = false;
        }
        function j(X, J, B, Q) {
          B || function(ne, K) {
            K.length === 0 && K.needDrain && (K.needDrain = false, ne.emit("drain"));
          }(X, J), J.pendingcb--, Q(), $(X, J);
        }
        function z(X, J) {
          J.bufferProcessing = true;
          var B = J.bufferedRequest;
          if (X._writev && B && B.next) {
            var Q = J.bufferedRequestCount, ne = new Array(Q), K = J.corkedRequestsFree;
            K.entry = B;
            for (var ie = 0, ce = true; B; ) ne[ie] = B, B.isBuf || (ce = false), B = B.next, ie += 1;
            ne.allBuffers = ce, L(X, J, true, J.length, ne, "", K.finish), J.pendingcb++, J.lastBufferedRequest = null, K.next ? (J.corkedRequestsFree = K.next, K.next = null) : J.corkedRequestsFree = new c(J), J.bufferedRequestCount = 0;
          } else {
            for (; B; ) {
              var ye = B.chunk, oe = B.encoding, se = B.callback;
              if (L(X, J, false, J.objectMode ? 1 : ye.length, ye, oe, se), B = B.next, J.bufferedRequestCount--, J.writing) break;
            }
            B === null && (J.lastBufferedRequest = null);
          }
          J.bufferedRequest = B, J.bufferProcessing = false;
        }
        function Z(X) {
          return X.ending && X.length === 0 && X.bufferedRequest === null && !X.finished && !X.writing;
        }
        function ue(X, J) {
          X._final(function(B) {
            J.pendingcb--, B && N(X, B), J.prefinished = true, X.emit("prefinish"), $(X, J);
          });
        }
        function $(X, J) {
          var B = Z(J);
          if (B && (function(ne, K) {
            K.prefinished || K.finalCalled || (typeof ne._final != "function" || K.destroyed ? (K.prefinished = true, ne.emit("prefinish")) : (K.pendingcb++, K.finalCalled = true, process.nextTick(ue, ne, K)));
          }(X, J), J.pendingcb === 0 && (J.finished = true, X.emit("finish"), J.autoDestroy))) {
            var Q = X._readableState;
            (!Q || Q.autoDestroy && Q.endEmitted) && X.destroy();
          }
          return B;
        }
        s(6698)(x, r), _.prototype.getBuffer = function() {
          for (var X = this.bufferedRequest, J = []; X; ) J.push(X), X = X.next;
          return J;
        }, function() {
          try {
            Object.defineProperty(_.prototype, "buffer", { get: f.deprecate(function() {
              return this.getBuffer();
            }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003") });
          } catch {
          }
        }(), typeof Symbol == "function" && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] == "function" ? (a = Function.prototype[Symbol.hasInstance], Object.defineProperty(x, Symbol.hasInstance, { value: function(X) {
          return !!a.call(this, X) || this === x && X && X._writableState instanceof _;
        } })) : a = function(X) {
          return X instanceof this;
        }, x.prototype.pipe = function() {
          N(this, new k());
        }, x.prototype.write = function(X, J, B) {
          var Q, ne = this._writableState, K = false, ie = !ne.objectMode && (Q = X, m.isBuffer(Q) || Q instanceof g);
          return ie && !m.isBuffer(X) && (X = function(ce) {
            return m.from(ce);
          }(X)), typeof J == "function" && (B = J, J = null), ie ? J = "buffer" : J || (J = ne.defaultEncoding), typeof B != "function" && (B = H), ne.ending ? function(ce, ye) {
            var oe = new I();
            N(ce, oe), process.nextTick(ye, oe);
          }(this, B) : (ie || function(ce, ye, oe, se) {
            var re;
            return oe === null ? re = new F() : typeof oe == "string" || ye.objectMode || (re = new S("chunk", ["string", "Buffer"], oe)), !re || (N(ce, re), process.nextTick(se, re), false);
          }(this, ne, X, B)) && (ne.pendingcb++, K = function(ce, ye, oe, se, re, ge) {
            if (!oe) {
              var Te = function(Ve, _e, Be) {
                return Ve.objectMode || Ve.decodeStrings === false || typeof _e != "string" || (_e = m.from(_e, Be)), _e;
              }(ye, se, re);
              se !== Te && (oe = true, re = "buffer", se = Te);
            }
            var pe = ye.objectMode ? 1 : se.length;
            ye.length += pe;
            var Oe = ye.length < ye.highWaterMark;
            if (Oe || (ye.needDrain = true), ye.writing || ye.corked) {
              var xe = ye.lastBufferedRequest;
              ye.lastBufferedRequest = { chunk: se, encoding: re, isBuf: oe, callback: ge, next: null }, xe ? xe.next = ye.lastBufferedRequest : ye.bufferedRequest = ye.lastBufferedRequest, ye.bufferedRequestCount += 1;
            } else L(ce, ye, false, pe, se, re, ge);
            return Oe;
          }(this, ne, ie, X, J, B)), K;
        }, x.prototype.cork = function() {
          this._writableState.corked++;
        }, x.prototype.uncork = function() {
          var X = this._writableState;
          X.corked && (X.corked--, X.writing || X.corked || X.bufferProcessing || !X.bufferedRequest || z(this, X));
        }, x.prototype.setDefaultEncoding = function(X) {
          if (typeof X == "string" && (X = X.toLowerCase()), !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((X + "").toLowerCase()) > -1)) throw new q(X);
          return this._writableState.defaultEncoding = X, this;
        }, Object.defineProperty(x.prototype, "writableBuffer", { enumerable: false, get: function() {
          return this._writableState && this._writableState.getBuffer();
        } }), Object.defineProperty(x.prototype, "writableHighWaterMark", { enumerable: false, get: function() {
          return this._writableState.highWaterMark;
        } }), x.prototype._write = function(X, J, B) {
          B(new E("_write()"));
        }, x.prototype._writev = null, x.prototype.end = function(X, J, B) {
          var Q = this._writableState;
          return typeof X == "function" ? (B = X, X = null, J = null) : typeof J == "function" && (B = J, J = null), X != null && this.write(X, J), Q.corked && (Q.corked = 1, this.uncork()), Q.ending || function(ne, K, ie) {
            K.ending = true, $(ne, K), ie && (K.finished ? process.nextTick(ie) : ne.once("finish", ie)), K.ended = true, ne.writable = false;
          }(this, Q, B), this;
        }, Object.defineProperty(x.prototype, "writableLength", { enumerable: false, get: function() {
          return this._writableState.length;
        } }), Object.defineProperty(x.prototype, "destroyed", { enumerable: false, get: function() {
          return this._writableState !== void 0 && this._writableState.destroyed;
        }, set: function(X) {
          this._writableState && (this._writableState.destroyed = X);
        } }), x.prototype.destroy = l.destroy, x.prototype._undestroy = l.undestroy, x.prototype._destroy = function(X, J) {
          J(X);
        };
      }, 6710: (t, o, s) => {
        var c = s(6698), h = s(4107), f = s(392), r = s(2861).Buffer, m = new Array(64);
        function g() {
          this.init(), this._w = m, f.call(this, 64, 56);
        }
        c(g, h), g.prototype.init = function() {
          return this._a = 3238371032, this._b = 914150663, this._c = 812702999, this._d = 4144912697, this._e = 4290775857, this._f = 1750603025, this._g = 1694076839, this._h = 3204075428, this;
        }, g.prototype._hash = function() {
          var a = r.allocUnsafe(28);
          return a.writeInt32BE(this._a, 0), a.writeInt32BE(this._b, 4), a.writeInt32BE(this._c, 8), a.writeInt32BE(this._d, 12), a.writeInt32BE(this._e, 16), a.writeInt32BE(this._f, 20), a.writeInt32BE(this._g, 24), a;
        }, t.exports = g;
      }, 6743: (t, o, s) => {
        var c = s(1734);
        t.exports = Function.prototype.bind || c;
      }, 6866: (t) => {
        t.exports = { 100: "Continue", 101: "Switching Protocols", 102: "Processing", 200: "OK", 201: "Created", 202: "Accepted", 203: "Non-Authoritative Information", 204: "No Content", 205: "Reset Content", 206: "Partial Content", 207: "Multi-Status", 208: "Already Reported", 226: "IM Used", 300: "Multiple Choices", 301: "Moved Permanently", 302: "Found", 303: "See Other", 304: "Not Modified", 305: "Use Proxy", 307: "Temporary Redirect", 308: "Permanent Redirect", 400: "Bad Request", 401: "Unauthorized", 402: "Payment Required", 403: "Forbidden", 404: "Not Found", 405: "Method Not Allowed", 406: "Not Acceptable", 407: "Proxy Authentication Required", 408: "Request Timeout", 409: "Conflict", 410: "Gone", 411: "Length Required", 412: "Precondition Failed", 413: "Payload Too Large", 414: "URI Too Long", 415: "Unsupported Media Type", 416: "Range Not Satisfiable", 417: "Expectation Failed", 418: "I'm a teapot", 421: "Misdirected Request", 422: "Unprocessable Entity", 423: "Locked", 424: "Failed Dependency", 425: "Unordered Collection", 426: "Upgrade Required", 428: "Precondition Required", 429: "Too Many Requests", 431: "Request Header Fields Too Large", 451: "Unavailable For Legal Reasons", 500: "Internal Server Error", 501: "Not Implemented", 502: "Bad Gateway", 503: "Service Unavailable", 504: "Gateway Timeout", 505: "HTTP Version Not Supported", 506: "Variant Also Negotiates", 507: "Insufficient Storage", 508: "Loop Detected", 509: "Bandwidth Limit Exceeded", 510: "Not Extended", 511: "Network Authentication Required" };
      }, 6897: (t, o, s) => {
        var c = s(453), h = s(41), f = s(592)(), r = s(5795), m = s(9675), g = c("%Math.floor%");
        t.exports = function(a, l) {
          if (typeof a != "function") throw new m("`fn` is not a function");
          if (typeof l != "number" || l < 0 || l > 4294967295 || g(l) !== l) throw new m("`length` must be a positive 32-bit integer");
          var d = arguments.length > 2 && !!arguments[2], b = true, S = true;
          if ("length" in a && r) {
            var E = r(a, "length");
            E && !E.configurable && (b = false), E && !E.writable && (S = false);
          }
          return (b || S || !d) && (f ? h(a, "length", l, true, true) : h(a, "length", l)), a;
        };
      }, 6917: (t, o, s) => {
        var c = s(8287).Buffer, h = s(6688), f = s(6698), r = s(8399), m = o.readyStates = { UNSENT: 0, OPENED: 1, HEADERS_RECEIVED: 2, LOADING: 3, DONE: 4 }, g = o.IncomingMessage = function(a, l, d, b) {
          var S = this;
          if (r.Readable.call(S), S._mode = d, S.headers = {}, S.rawHeaders = [], S.trailers = {}, S.rawTrailers = [], S.on("end", function() {
            process.nextTick(function() {
              S.emit("close");
            });
          }), d === "fetch") {
            if (S._fetchResponse = l, S.url = l.url, S.statusCode = l.status, S.statusMessage = l.statusText, l.headers.forEach(function(F, I) {
              S.headers[I.toLowerCase()] = F, S.rawHeaders.push(I, F);
            }), h.writableStream) {
              var E = new WritableStream({ write: function(F) {
                return b(false), new Promise(function(I, q) {
                  S._destroyed ? q() : S.push(c.from(F)) ? I() : S._resumeFetch = I;
                });
              }, close: function() {
                b(true), S._destroyed || S.push(null);
              }, abort: function(F) {
                b(true), S._destroyed || S.emit("error", F);
              } });
              try {
                return void l.body.pipeTo(E).catch(function(F) {
                  b(true), S._destroyed || S.emit("error", F);
                });
              } catch {
              }
            }
            var R = l.body.getReader();
            (function F() {
              R.read().then(function(I) {
                S._destroyed || (b(I.done), I.done ? S.push(null) : (S.push(c.from(I.value)), F()));
              }).catch(function(I) {
                b(true), S._destroyed || S.emit("error", I);
              });
            })();
          } else if (S._xhr = a, S._pos = 0, S.url = a.responseURL, S.statusCode = a.status, S.statusMessage = a.statusText, a.getAllResponseHeaders().split(/\r?\n/).forEach(function(F) {
            var I = F.match(/^([^:]+):\s*(.*)/);
            if (I) {
              var q = I[1].toLowerCase();
              q === "set-cookie" ? (S.headers[q] === void 0 && (S.headers[q] = []), S.headers[q].push(I[2])) : S.headers[q] !== void 0 ? S.headers[q] += ", " + I[2] : S.headers[q] = I[2], S.rawHeaders.push(I[1], I[2]);
            }
          }), S._charset = "x-user-defined", !h.overrideMimeType) {
            var k = S.rawHeaders["mime-type"];
            if (k) {
              var w = k.match(/;\s*charset=([^;])(;|$)/);
              w && (S._charset = w[1].toLowerCase());
            }
            S._charset || (S._charset = "utf-8");
          }
        };
        f(g, r.Readable), g.prototype._read = function() {
          var a = this._resumeFetch;
          a && (this._resumeFetch = null, a());
        }, g.prototype._onXHRProgress = function(a) {
          var l = this, d = l._xhr, b = null;
          switch (l._mode) {
            case "text":
              if ((b = d.responseText).length > l._pos) {
                var S = b.substr(l._pos);
                if (l._charset === "x-user-defined") {
                  for (var E = c.alloc(S.length), R = 0; R < S.length; R++) E[R] = 255 & S.charCodeAt(R);
                  l.push(E);
                } else l.push(S, l._charset);
                l._pos = b.length;
              }
              break;
            case "arraybuffer":
              if (d.readyState !== m.DONE || !d.response) break;
              b = d.response, l.push(c.from(new Uint8Array(b)));
              break;
            case "moz-chunked-arraybuffer":
              if (b = d.response, d.readyState !== m.LOADING || !b) break;
              l.push(c.from(new Uint8Array(b)));
              break;
            case "ms-stream":
              if (b = d.response, d.readyState !== m.LOADING) break;
              var k = new s.g.MSStreamReader();
              k.onprogress = function() {
                k.result.byteLength > l._pos && (l.push(c.from(new Uint8Array(k.result.slice(l._pos)))), l._pos = k.result.byteLength);
              }, k.onload = function() {
                a(true), l.push(null);
              }, k.readAsArrayBuffer(b);
          }
          l._xhr.readyState === m.DONE && l._mode !== "ms-stream" && (a(true), l.push(null));
        };
      }, 7007: (t) => {
        var o, s = typeof Reflect == "object" ? Reflect : null, c = s && typeof s.apply == "function" ? s.apply : function(k, w, F) {
          return Function.prototype.apply.call(k, w, F);
        };
        o = s && typeof s.ownKeys == "function" ? s.ownKeys : Object.getOwnPropertySymbols ? function(k) {
          return Object.getOwnPropertyNames(k).concat(Object.getOwnPropertySymbols(k));
        } : function(k) {
          return Object.getOwnPropertyNames(k);
        };
        var h = Number.isNaN || function(k) {
          return k != k;
        };
        function f() {
          f.init.call(this);
        }
        t.exports = f, t.exports.once = function(k, w) {
          return new Promise(function(F, I) {
            function q(H) {
              k.removeListener(w, N), I(H);
            }
            function N() {
              typeof k.removeListener == "function" && k.removeListener("error", q), F([].slice.call(arguments));
            }
            R(k, w, N, { once: true }), w !== "error" && function(H, _, x) {
              typeof H.on == "function" && R(H, "error", _, x);
            }(k, q, { once: true });
          });
        }, f.EventEmitter = f, f.prototype._events = void 0, f.prototype._eventsCount = 0, f.prototype._maxListeners = void 0;
        var r = 10;
        function m(k) {
          if (typeof k != "function") throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof k);
        }
        function g(k) {
          return k._maxListeners === void 0 ? f.defaultMaxListeners : k._maxListeners;
        }
        function a(k, w, F, I) {
          var q, N, H, _;
          if (m(F), (N = k._events) === void 0 ? (N = k._events = /* @__PURE__ */ Object.create(null), k._eventsCount = 0) : (N.newListener !== void 0 && (k.emit("newListener", w, F.listener ? F.listener : F), N = k._events), H = N[w]), H === void 0) H = N[w] = F, ++k._eventsCount;
          else if (typeof H == "function" ? H = N[w] = I ? [F, H] : [H, F] : I ? H.unshift(F) : H.push(F), (q = g(k)) > 0 && H.length > q && !H.warned) {
            H.warned = true;
            var x = new Error("Possible EventEmitter memory leak detected. " + H.length + " " + String(w) + " listeners added. Use emitter.setMaxListeners() to increase limit");
            x.name = "MaxListenersExceededWarning", x.emitter = k, x.type = w, x.count = H.length, _ = x, console && console.warn && console.warn(_);
          }
          return k;
        }
        function l() {
          if (!this.fired) return this.target.removeListener(this.type, this.wrapFn), this.fired = true, arguments.length === 0 ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
        }
        function d(k, w, F) {
          var I = { fired: false, wrapFn: void 0, target: k, type: w, listener: F }, q = l.bind(I);
          return q.listener = F, I.wrapFn = q, q;
        }
        function b(k, w, F) {
          var I = k._events;
          if (I === void 0) return [];
          var q = I[w];
          return q === void 0 ? [] : typeof q == "function" ? F ? [q.listener || q] : [q] : F ? function(N) {
            for (var H = new Array(N.length), _ = 0; _ < H.length; ++_) H[_] = N[_].listener || N[_];
            return H;
          }(q) : E(q, q.length);
        }
        function S(k) {
          var w = this._events;
          if (w !== void 0) {
            var F = w[k];
            if (typeof F == "function") return 1;
            if (F !== void 0) return F.length;
          }
          return 0;
        }
        function E(k, w) {
          for (var F = new Array(w), I = 0; I < w; ++I) F[I] = k[I];
          return F;
        }
        function R(k, w, F, I) {
          if (typeof k.on == "function") I.once ? k.once(w, F) : k.on(w, F);
          else {
            if (typeof k.addEventListener != "function") throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof k);
            k.addEventListener(w, function q(N) {
              I.once && k.removeEventListener(w, q), F(N);
            });
          }
        }
        Object.defineProperty(f, "defaultMaxListeners", { enumerable: true, get: function() {
          return r;
        }, set: function(k) {
          if (typeof k != "number" || k < 0 || h(k)) throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + k + ".");
          r = k;
        } }), f.init = function() {
          this._events !== void 0 && this._events !== Object.getPrototypeOf(this)._events || (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0;
        }, f.prototype.setMaxListeners = function(k) {
          if (typeof k != "number" || k < 0 || h(k)) throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + k + ".");
          return this._maxListeners = k, this;
        }, f.prototype.getMaxListeners = function() {
          return g(this);
        }, f.prototype.emit = function(k) {
          for (var w = [], F = 1; F < arguments.length; F++) w.push(arguments[F]);
          var I = k === "error", q = this._events;
          if (q !== void 0) I = I && q.error === void 0;
          else if (!I) return false;
          if (I) {
            var N;
            if (w.length > 0 && (N = w[0]), N instanceof Error) throw N;
            var H = new Error("Unhandled error." + (N ? " (" + N.message + ")" : ""));
            throw H.context = N, H;
          }
          var _ = q[k];
          if (_ === void 0) return false;
          if (typeof _ == "function") c(_, this, w);
          else {
            var x = _.length, L = E(_, x);
            for (F = 0; F < x; ++F) c(L[F], this, w);
          }
          return true;
        }, f.prototype.addListener = function(k, w) {
          return a(this, k, w, false);
        }, f.prototype.on = f.prototype.addListener, f.prototype.prependListener = function(k, w) {
          return a(this, k, w, true);
        }, f.prototype.once = function(k, w) {
          return m(w), this.on(k, d(this, k, w)), this;
        }, f.prototype.prependOnceListener = function(k, w) {
          return m(w), this.prependListener(k, d(this, k, w)), this;
        }, f.prototype.removeListener = function(k, w) {
          var F, I, q, N, H;
          if (m(w), (I = this._events) === void 0) return this;
          if ((F = I[k]) === void 0) return this;
          if (F === w || F.listener === w) --this._eventsCount == 0 ? this._events = /* @__PURE__ */ Object.create(null) : (delete I[k], I.removeListener && this.emit("removeListener", k, F.listener || w));
          else if (typeof F != "function") {
            for (q = -1, N = F.length - 1; N >= 0; N--) if (F[N] === w || F[N].listener === w) {
              H = F[N].listener, q = N;
              break;
            }
            if (q < 0) return this;
            q === 0 ? F.shift() : function(_, x) {
              for (; x + 1 < _.length; x++) _[x] = _[x + 1];
              _.pop();
            }(F, q), F.length === 1 && (I[k] = F[0]), I.removeListener !== void 0 && this.emit("removeListener", k, H || w);
          }
          return this;
        }, f.prototype.off = f.prototype.removeListener, f.prototype.removeAllListeners = function(k) {
          var w, F, I;
          if ((F = this._events) === void 0) return this;
          if (F.removeListener === void 0) return arguments.length === 0 ? (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0) : F[k] !== void 0 && (--this._eventsCount == 0 ? this._events = /* @__PURE__ */ Object.create(null) : delete F[k]), this;
          if (arguments.length === 0) {
            var q, N = Object.keys(F);
            for (I = 0; I < N.length; ++I) (q = N[I]) !== "removeListener" && this.removeAllListeners(q);
            return this.removeAllListeners("removeListener"), this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0, this;
          }
          if (typeof (w = F[k]) == "function") this.removeListener(k, w);
          else if (w !== void 0) for (I = w.length - 1; I >= 0; I--) this.removeListener(k, w[I]);
          return this;
        }, f.prototype.listeners = function(k) {
          return b(this, k, true);
        }, f.prototype.rawListeners = function(k) {
          return b(this, k, false);
        }, f.listenerCount = function(k, w) {
          return typeof k.listenerCount == "function" ? k.listenerCount(w) : S.call(k, w);
        }, f.prototype.listenerCount = S, f.prototype.eventNames = function() {
          return this._eventsCount > 0 ? o(this._events) : [];
        };
      }, 7119: (t) => {
        t.exports = typeof Reflect < "u" && Reflect && Reflect.apply;
      }, 7120: (t, o, s) => {
        var c = s(8287).Buffer;
        Object.defineProperty(o, "__esModule", { value: true }), o.StrKey = void 0, o.decodeCheck = S, o.encodeCheck = E;
        var h, f = (h = s(5360)) && h.__esModule ? h : { default: h }, r = s(1346);
        function m(k) {
          return m = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(w) {
            return typeof w;
          } : function(w) {
            return w && typeof Symbol == "function" && w.constructor === Symbol && w !== Symbol.prototype ? "symbol" : typeof w;
          }, m(k);
        }
        function g(k, w) {
          for (var F = 0; F < w.length; F++) {
            var I = w[F];
            I.enumerable = I.enumerable || false, I.configurable = true, "value" in I && (I.writable = true), Object.defineProperty(k, a(I.key), I);
          }
        }
        function a(k) {
          var w = function(F, I) {
            if (m(F) != "object" || !F) return F;
            var q = F[Symbol.toPrimitive];
            if (q !== void 0) {
              var N = q.call(F, I);
              if (m(N) != "object") return N;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(F);
          }(k, "string");
          return m(w) == "symbol" ? w : w + "";
        }
        var l = { ed25519PublicKey: 48, ed25519SecretSeed: 144, med25519PublicKey: 96, preAuthTx: 152, sha256Hash: 184, signedPayload: 120, contract: 16 }, d = { G: "ed25519PublicKey", S: "ed25519SecretSeed", M: "med25519PublicKey", T: "preAuthTx", X: "sha256Hash", P: "signedPayload", C: "contract" };
        o.StrKey = function() {
          return function(k, w, F) {
            return F && g(k, F), Object.defineProperty(k, "prototype", { writable: false }), k;
          }(function k() {
            (function(w, F) {
              if (!(w instanceof F)) throw new TypeError("Cannot call a class as a function");
            })(this, k);
          }, null, [{ key: "encodeEd25519PublicKey", value: function(k) {
            return E("ed25519PublicKey", k);
          } }, { key: "decodeEd25519PublicKey", value: function(k) {
            return S("ed25519PublicKey", k);
          } }, { key: "isValidEd25519PublicKey", value: function(k) {
            return b("ed25519PublicKey", k);
          } }, { key: "encodeEd25519SecretSeed", value: function(k) {
            return E("ed25519SecretSeed", k);
          } }, { key: "decodeEd25519SecretSeed", value: function(k) {
            return S("ed25519SecretSeed", k);
          } }, { key: "isValidEd25519SecretSeed", value: function(k) {
            return b("ed25519SecretSeed", k);
          } }, { key: "encodeMed25519PublicKey", value: function(k) {
            return E("med25519PublicKey", k);
          } }, { key: "decodeMed25519PublicKey", value: function(k) {
            return S("med25519PublicKey", k);
          } }, { key: "isValidMed25519PublicKey", value: function(k) {
            return b("med25519PublicKey", k);
          } }, { key: "encodePreAuthTx", value: function(k) {
            return E("preAuthTx", k);
          } }, { key: "decodePreAuthTx", value: function(k) {
            return S("preAuthTx", k);
          } }, { key: "encodeSha256Hash", value: function(k) {
            return E("sha256Hash", k);
          } }, { key: "decodeSha256Hash", value: function(k) {
            return S("sha256Hash", k);
          } }, { key: "encodeSignedPayload", value: function(k) {
            return E("signedPayload", k);
          } }, { key: "decodeSignedPayload", value: function(k) {
            return S("signedPayload", k);
          } }, { key: "isValidSignedPayload", value: function(k) {
            return b("signedPayload", k);
          } }, { key: "encodeContract", value: function(k) {
            return E("contract", k);
          } }, { key: "decodeContract", value: function(k) {
            return S("contract", k);
          } }, { key: "isValidContract", value: function(k) {
            return b("contract", k);
          } }, { key: "getVersionByteForPrefix", value: function(k) {
            return d[k[0]];
          } }]);
        }();
        function b(k, w) {
          if (typeof w != "string") return false;
          switch (k) {
            case "ed25519PublicKey":
            case "ed25519SecretSeed":
            case "preAuthTx":
            case "sha256Hash":
            case "contract":
              if (w.length !== 56) return false;
              break;
            case "med25519PublicKey":
              if (w.length !== 69) return false;
              break;
            case "signedPayload":
              if (w.length < 56 || w.length > 165) return false;
              break;
            default:
              return false;
          }
          var F = "";
          try {
            F = S(k, w);
          } catch {
            return false;
          }
          switch (k) {
            case "ed25519PublicKey":
            case "ed25519SecretSeed":
            case "preAuthTx":
            case "sha256Hash":
            case "contract":
              return F.length === 32;
            case "med25519PublicKey":
              return F.length === 40;
            case "signedPayload":
              return F.length >= 40 && F.length <= 100;
            default:
              return false;
          }
        }
        function S(k, w) {
          if (typeof w != "string") throw new TypeError("encoded argument must be of type String");
          var F = f.default.decode(w), I = F[0], q = F.slice(0, -2), N = q.slice(1), H = F.slice(-2);
          if (w !== f.default.encode(F)) throw new Error("invalid encoded string");
          var _ = l[k];
          if (_ === void 0) throw new Error("".concat(k, " is not a valid version byte name. ") + "Expected one of ".concat(Object.keys(l).join(", ")));
          if (I !== _) throw new Error("invalid version byte. expected ".concat(_, ", got ").concat(I));
          var x = R(q);
          if (!(0, r.verifyChecksum)(x, H)) throw new Error("invalid checksum");
          return c.from(N);
        }
        function E(k, w) {
          if (w == null) throw new Error("cannot encode null data");
          var F = l[k];
          if (F === void 0) throw new Error("".concat(k, " is not a valid version byte name. ") + "Expected one of ".concat(Object.keys(l).join(", ")));
          w = c.from(w);
          var I = c.from([F]), q = c.concat([I, w]), N = c.from(R(q)), H = c.concat([q, N]);
          return f.default.encode(H);
        }
        function R(k) {
          for (var w = [0, 4129, 8258, 12387, 16516, 20645, 24774, 28903, 33032, 37161, 41290, 45419, 49548, 53677, 57806, 61935, 4657, 528, 12915, 8786, 21173, 17044, 29431, 25302, 37689, 33560, 45947, 41818, 54205, 50076, 62463, 58334, 9314, 13379, 1056, 5121, 25830, 29895, 17572, 21637, 42346, 46411, 34088, 38153, 58862, 62927, 50604, 54669, 13907, 9842, 5649, 1584, 30423, 26358, 22165, 18100, 46939, 42874, 38681, 34616, 63455, 59390, 55197, 51132, 18628, 22757, 26758, 30887, 2112, 6241, 10242, 14371, 51660, 55789, 59790, 63919, 35144, 39273, 43274, 47403, 23285, 19156, 31415, 27286, 6769, 2640, 14899, 10770, 56317, 52188, 64447, 60318, 39801, 35672, 47931, 43802, 27814, 31879, 19684, 23749, 11298, 15363, 3168, 7233, 60846, 64911, 52716, 56781, 44330, 48395, 36200, 40265, 32407, 28342, 24277, 20212, 15891, 11826, 7761, 3696, 65439, 61374, 57309, 53244, 48923, 44858, 40793, 36728, 37256, 33193, 45514, 41451, 53516, 49453, 61774, 57711, 4224, 161, 12482, 8419, 20484, 16421, 28742, 24679, 33721, 37784, 41979, 46042, 49981, 54044, 58239, 62302, 689, 4752, 8947, 13010, 16949, 21012, 25207, 29270, 46570, 42443, 38312, 34185, 62830, 58703, 54572, 50445, 13538, 9411, 5280, 1153, 29798, 25671, 21540, 17413, 42971, 47098, 34713, 38840, 59231, 63358, 50973, 55100, 9939, 14066, 1681, 5808, 26199, 30326, 17941, 22068, 55628, 51565, 63758, 59695, 39368, 35305, 47498, 43435, 22596, 18533, 30726, 26663, 6336, 2273, 14466, 10403, 52093, 56156, 60223, 64286, 35833, 39896, 43963, 48026, 19061, 23124, 27191, 31254, 2801, 6864, 10931, 14994, 64814, 60687, 56684, 52557, 48554, 44427, 40424, 36297, 31782, 27655, 23652, 19525, 15522, 11395, 7392, 3265, 61215, 65342, 53085, 57212, 44955, 49082, 36825, 40952, 28183, 32310, 20053, 24180, 11923, 16050, 3793, 7920], F = 0, I = 0; I < k.length; I += 1) F = F << 8 ^ w[F >> 8 ^ k[I]], F &= 65535;
          var q = new Uint8Array(2);
          return q[0] = 255 & F, q[1] = F >> 8 & 255, q;
        }
      }, 7176: (t, o, s) => {
        var c, h = s(3126), f = s(5795);
        try {
          c = [].__proto__ === Array.prototype;
        } catch (a) {
          if (!a || typeof a != "object" || !("code" in a) || a.code !== "ERR_PROTO_ACCESS") throw a;
        }
        var r = !!c && f && f(Object.prototype, "__proto__"), m = Object, g = m.getPrototypeOf;
        t.exports = r && typeof r.get == "function" ? h([r.get]) : typeof g == "function" && function(a) {
          return g(a == null ? a : m(a));
        };
      }, 7177: (t, o, s) => {
        var c = s(8287).Buffer;
        Object.defineProperty(o, "__esModule", { value: true }), o.nativeToScVal = function E(R) {
          var k = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          switch (b(R)) {
            case "object":
              var w, F, I;
              if (R === null) return f.default.ScVal.scvVoid();
              if (R instanceof f.default.ScVal) return R;
              if (R instanceof m.Address) return R.toScVal();
              if (R instanceof r.Keypair) return E(R.publicKey(), { type: "address" });
              if (R instanceof g.Contract) return R.address().toScVal();
              if (R instanceof Uint8Array || c.isBuffer(R)) {
                var q, N = Uint8Array.from(R);
                switch ((q = k == null ? void 0 : k.type) !== null && q !== void 0 ? q : "bytes") {
                  case "bytes":
                    return f.default.ScVal.scvBytes(N);
                  case "symbol":
                    return f.default.ScVal.scvSymbol(N);
                  case "string":
                    return f.default.ScVal.scvString(N);
                  default:
                    throw new TypeError("invalid type (".concat(k.type, ") specified for bytes-like value"));
                }
              }
              if (Array.isArray(R)) return f.default.ScVal.scvVec(R.map(function(x) {
                return E(x, k);
              }));
              if (((w = (F = R.constructor) === null || F === void 0 ? void 0 : F.name) !== null && w !== void 0 ? w : "") !== "Object") throw new TypeError("cannot interpret ".concat((I = R.constructor) === null || I === void 0 ? void 0 : I.name, " value as ScVal (").concat(JSON.stringify(R), ")"));
              return f.default.ScVal.scvMap(Object.entries(R).sort(function(x, L) {
                var j = l(x, 1)[0], z = l(L, 1)[0];
                return j.localeCompare(z);
              }).map(function(x) {
                var L, j, z = l(x, 2), Z = z[0], ue = z[1], $ = l((L = ((j = k == null ? void 0 : k.type) !== null && j !== void 0 ? j : {})[Z]) !== null && L !== void 0 ? L : [null, null], 2), X = $[0], J = $[1], B = X ? { type: X } : {}, Q = J ? { type: J } : {};
                return new f.default.ScMapEntry({ key: E(Z, B), val: E(ue, Q) });
              }));
            case "number":
            case "bigint":
              switch (k == null ? void 0 : k.type) {
                case "u32":
                  return f.default.ScVal.scvU32(R);
                case "i32":
                  return f.default.ScVal.scvI32(R);
              }
              return new a.ScInt(R, { type: k == null ? void 0 : k.type }).toScVal();
            case "string":
              var H, _ = (H = k == null ? void 0 : k.type) !== null && H !== void 0 ? H : "string";
              switch (_) {
                case "string":
                  return f.default.ScVal.scvString(R);
                case "symbol":
                  return f.default.ScVal.scvSymbol(R);
                case "address":
                  return new m.Address(R).toScVal();
                case "u32":
                  return f.default.ScVal.scvU32(parseInt(R, 10));
                case "i32":
                  return f.default.ScVal.scvI32(parseInt(R, 10));
                default:
                  if (a.XdrLargeInt.isType(_)) return new a.XdrLargeInt(_, R).toScVal();
                  throw new TypeError("invalid type (".concat(k.type, ") specified for string value"));
              }
            case "boolean":
              return f.default.ScVal.scvBool(R);
            case "undefined":
              return f.default.ScVal.scvVoid();
            case "function":
              return E(R());
            default:
              throw new TypeError("failed to convert typeof ".concat(b(R), " (").concat(R, ")"));
          }
        }, o.scValToNative = S;
        var h, f = (h = s(1918)) && h.__esModule ? h : { default: h }, r = s(6691), m = s(1180), g = s(7452), a = s(8549);
        function l(E, R) {
          return function(k) {
            if (Array.isArray(k)) return k;
          }(E) || function(k, w) {
            var F = k == null ? null : typeof Symbol < "u" && k[Symbol.iterator] || k["@@iterator"];
            if (F != null) {
              var I, q, N, H, _ = [], x = true, L = false;
              try {
                if (N = (F = F.call(k)).next, w === 0) {
                  if (Object(F) !== F) return;
                  x = false;
                } else for (; !(x = (I = N.call(F)).done) && (_.push(I.value), _.length !== w); x = true) ;
              } catch (j) {
                L = true, q = j;
              } finally {
                try {
                  if (!x && F.return != null && (H = F.return(), Object(H) !== H)) return;
                } finally {
                  if (L) throw q;
                }
              }
              return _;
            }
          }(E, R) || function(k, w) {
            if (k) {
              if (typeof k == "string") return d(k, w);
              var F = {}.toString.call(k).slice(8, -1);
              return F === "Object" && k.constructor && (F = k.constructor.name), F === "Map" || F === "Set" ? Array.from(k) : F === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(F) ? d(k, w) : void 0;
            }
          }(E, R) || function() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
          }();
        }
        function d(E, R) {
          (R == null || R > E.length) && (R = E.length);
          for (var k = 0, w = Array(R); k < R; k++) w[k] = E[k];
          return w;
        }
        function b(E) {
          return b = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(R) {
            return typeof R;
          } : function(R) {
            return R && typeof Symbol == "function" && R.constructor === Symbol && R !== Symbol.prototype ? "symbol" : typeof R;
          }, b(E);
        }
        function S(E) {
          var R, k;
          switch (E.switch().value) {
            case f.default.ScValType.scvVoid().value:
              return null;
            case f.default.ScValType.scvU64().value:
            case f.default.ScValType.scvI64().value:
              return E.value().toBigInt();
            case f.default.ScValType.scvU128().value:
            case f.default.ScValType.scvI128().value:
            case f.default.ScValType.scvU256().value:
            case f.default.ScValType.scvI256().value:
              return (0, a.scValToBigInt)(E);
            case f.default.ScValType.scvVec().value:
              return ((R = E.vec()) !== null && R !== void 0 ? R : []).map(S);
            case f.default.ScValType.scvAddress().value:
              return m.Address.fromScVal(E).toString();
            case f.default.ScValType.scvMap().value:
              return Object.fromEntries(((k = E.map()) !== null && k !== void 0 ? k : []).map(function(I) {
                return [S(I.key()), S(I.val())];
              }));
            case f.default.ScValType.scvBool().value:
            case f.default.ScValType.scvU32().value:
            case f.default.ScValType.scvI32().value:
            case f.default.ScValType.scvBytes().value:
              return E.value();
            case f.default.ScValType.scvSymbol().value:
            case f.default.ScValType.scvString().value:
              var w = E.value();
              if (c.isBuffer(w) || ArrayBuffer.isView(w)) try {
                return new TextDecoder().decode(w);
              } catch {
                return new Uint8Array(w.buffer);
              }
              return w;
            case f.default.ScValType.scvTimepoint().value:
            case f.default.ScValType.scvDuration().value:
              return new f.default.Uint64(E.value()).toBigInt();
            case f.default.ScValType.scvError().value:
              if (E.error().switch().value === f.default.ScErrorType.sceContract().value) return { type: "contract", code: E.error().contractCode() };
              var F = E.error();
              return { type: "system", code: F.code().value, value: F.code().name };
            default:
              return E.value();
          }
        }
        f.default.scvSortedMap = function(E) {
          var R = Array.from(E).sort(function(k, w) {
            var F = S(k.key()), I = S(w.key());
            switch (b(F)) {
              case "number":
              case "bigint":
                return F < I ? -1 : 1;
              default:
                return F.toString().localeCompare(I.toString());
            }
          });
          return f.default.ScVal.scvMap(R);
        };
      }, 7237: (t, o, s) => {
        Object.defineProperty(o, "__esModule", { value: true }), o.Operation = o.AuthRevocableFlag = o.AuthRequiredFlag = o.AuthImmutableFlag = o.AuthClawbackEnabledFlag = void 0;
        var c = s(3740), h = k(s(1242)), f = s(645), r = s(4151), m = s(1764), g = s(2262), a = s(1387), l = s(7120), d = s(9353), b = k(s(1918)), S = function(_, x) {
          if (_ && _.__esModule) return _;
          if (_ === null || w(_) != "object" && typeof _ != "function") return { default: _ };
          var L = R(x);
          if (L && L.has(_)) return L.get(_);
          var j = { __proto__: null }, z = Object.defineProperty && Object.getOwnPropertyDescriptor;
          for (var Z in _) if (Z !== "default" && {}.hasOwnProperty.call(_, Z)) {
            var ue = z ? Object.getOwnPropertyDescriptor(_, Z) : null;
            ue && (ue.get || ue.set) ? Object.defineProperty(j, Z, ue) : j[Z] = _[Z];
          }
          return j.default = _, L && L.set(_, j), j;
        }(s(7511)), E = s(6160);
        function R(_) {
          if (typeof WeakMap != "function") return null;
          var x = /* @__PURE__ */ new WeakMap(), L = /* @__PURE__ */ new WeakMap();
          return (R = function(j) {
            return j ? L : x;
          })(_);
        }
        function k(_) {
          return _ && _.__esModule ? _ : { default: _ };
        }
        function w(_) {
          return w = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(x) {
            return typeof x;
          } : function(x) {
            return x && typeof Symbol == "function" && x.constructor === Symbol && x !== Symbol.prototype ? "symbol" : typeof x;
          }, w(_);
        }
        function F(_, x) {
          for (var L = 0; L < x.length; L++) {
            var j = x[L];
            j.enumerable = j.enumerable || false, j.configurable = true, "value" in j && (j.writable = true), Object.defineProperty(_, I(j.key), j);
          }
        }
        function I(_) {
          var x = function(L, j) {
            if (w(L) != "object" || !L) return L;
            var z = L[Symbol.toPrimitive];
            if (z !== void 0) {
              var Z = z.call(L, j);
              if (w(Z) != "object") return Z;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(L);
          }(_, "string");
          return w(x) == "symbol" ? x : x + "";
        }
        var q = 1e7, N = (o.AuthRequiredFlag = 1, o.AuthRevocableFlag = 2, o.AuthImmutableFlag = 4, o.AuthClawbackEnabledFlag = 8, o.Operation = function() {
          return _ = function j() {
            (function(z, Z) {
              if (!(z instanceof Z)) throw new TypeError("Cannot call a class as a function");
            })(this, j);
          }, L = [{ key: "setSourceAccount", value: function(j, z) {
            if (z.source) try {
              j.sourceAccount = (0, E.decodeAddressToMuxedAccount)(z.source);
            } catch {
              throw new Error("Source address is invalid");
            }
          } }, { key: "fromXDRObject", value: function(j) {
            var z = {};
            j.sourceAccount() && (z.source = (0, E.encodeMuxedAccountToAddress)(j.sourceAccount()));
            var Z = j.body().value(), ue = j.body().switch().name;
            switch (ue) {
              case "createAccount":
                z.type = "createAccount", z.destination = H(Z.destination()), z.startingBalance = this._fromXDRAmount(Z.startingBalance());
                break;
              case "payment":
                z.type = "payment", z.destination = (0, E.encodeMuxedAccountToAddress)(Z.destination()), z.asset = m.Asset.fromOperation(Z.asset()), z.amount = this._fromXDRAmount(Z.amount());
                break;
              case "pathPaymentStrictReceive":
                z.type = "pathPaymentStrictReceive", z.sendAsset = m.Asset.fromOperation(Z.sendAsset()), z.sendMax = this._fromXDRAmount(Z.sendMax()), z.destination = (0, E.encodeMuxedAccountToAddress)(Z.destination()), z.destAsset = m.Asset.fromOperation(Z.destAsset()), z.destAmount = this._fromXDRAmount(Z.destAmount()), z.path = [];
                var $ = Z.path();
                Object.keys($).forEach(function(ye) {
                  z.path.push(m.Asset.fromOperation($[ye]));
                });
                break;
              case "pathPaymentStrictSend":
                z.type = "pathPaymentStrictSend", z.sendAsset = m.Asset.fromOperation(Z.sendAsset()), z.sendAmount = this._fromXDRAmount(Z.sendAmount()), z.destination = (0, E.encodeMuxedAccountToAddress)(Z.destination()), z.destAsset = m.Asset.fromOperation(Z.destAsset()), z.destMin = this._fromXDRAmount(Z.destMin()), z.path = [];
                var X = Z.path();
                Object.keys(X).forEach(function(ye) {
                  z.path.push(m.Asset.fromOperation(X[ye]));
                });
                break;
              case "changeTrust":
                z.type = "changeTrust", Z.line().switch() === b.default.AssetType.assetTypePoolShare() ? z.line = g.LiquidityPoolAsset.fromOperation(Z.line()) : z.line = m.Asset.fromOperation(Z.line()), z.limit = this._fromXDRAmount(Z.limit());
                break;
              case "allowTrust":
                z.type = "allowTrust", z.trustor = H(Z.trustor()), z.assetCode = Z.asset().value().toString(), z.assetCode = (0, f.trimEnd)(z.assetCode, "\0"), z.authorize = Z.authorize();
                break;
              case "setOptions":
                if (z.type = "setOptions", Z.inflationDest() && (z.inflationDest = H(Z.inflationDest())), z.clearFlags = Z.clearFlags(), z.setFlags = Z.setFlags(), z.masterWeight = Z.masterWeight(), z.lowThreshold = Z.lowThreshold(), z.medThreshold = Z.medThreshold(), z.highThreshold = Z.highThreshold(), z.homeDomain = Z.homeDomain() !== void 0 ? Z.homeDomain().toString("ascii") : void 0, Z.signer()) {
                  var J = {}, B = Z.signer().key().arm();
                  if (B === "ed25519") J.ed25519PublicKey = H(Z.signer().key());
                  else if (B === "preAuthTx") J.preAuthTx = Z.signer().key().preAuthTx();
                  else if (B === "hashX") J.sha256Hash = Z.signer().key().hashX();
                  else if (B === "ed25519SignedPayload") {
                    var Q = Z.signer().key().ed25519SignedPayload();
                    J.ed25519SignedPayload = l.StrKey.encodeSignedPayload(Q.toXDR());
                  }
                  J.weight = Z.signer().weight(), z.signer = J;
                }
                break;
              case "manageOffer":
              case "manageSellOffer":
                z.type = "manageSellOffer", z.selling = m.Asset.fromOperation(Z.selling()), z.buying = m.Asset.fromOperation(Z.buying()), z.amount = this._fromXDRAmount(Z.amount()), z.price = this._fromXDRPrice(Z.price()), z.offerId = Z.offerId().toString();
                break;
              case "manageBuyOffer":
                z.type = "manageBuyOffer", z.selling = m.Asset.fromOperation(Z.selling()), z.buying = m.Asset.fromOperation(Z.buying()), z.buyAmount = this._fromXDRAmount(Z.buyAmount()), z.price = this._fromXDRPrice(Z.price()), z.offerId = Z.offerId().toString();
                break;
              case "createPassiveOffer":
              case "createPassiveSellOffer":
                z.type = "createPassiveSellOffer", z.selling = m.Asset.fromOperation(Z.selling()), z.buying = m.Asset.fromOperation(Z.buying()), z.amount = this._fromXDRAmount(Z.amount()), z.price = this._fromXDRPrice(Z.price());
                break;
              case "accountMerge":
                z.type = "accountMerge", z.destination = (0, E.encodeMuxedAccountToAddress)(Z);
                break;
              case "manageData":
                z.type = "manageData", z.name = Z.dataName().toString("ascii"), z.value = Z.dataValue();
                break;
              case "inflation":
                z.type = "inflation";
                break;
              case "bumpSequence":
                z.type = "bumpSequence", z.bumpTo = Z.bumpTo().toString();
                break;
              case "createClaimableBalance":
                z.type = "createClaimableBalance", z.asset = m.Asset.fromOperation(Z.asset()), z.amount = this._fromXDRAmount(Z.amount()), z.claimants = [], Z.claimants().forEach(function(ye) {
                  z.claimants.push(a.Claimant.fromXDR(ye));
                });
                break;
              case "claimClaimableBalance":
                z.type = "claimClaimableBalance", z.balanceId = Z.toXDR("hex");
                break;
              case "beginSponsoringFutureReserves":
                z.type = "beginSponsoringFutureReserves", z.sponsoredId = H(Z.sponsoredId());
                break;
              case "endSponsoringFutureReserves":
                z.type = "endSponsoringFutureReserves";
                break;
              case "revokeSponsorship":
                (function(ye, oe) {
                  switch (ye.switch().name) {
                    case "revokeSponsorshipLedgerEntry":
                      var se = ye.ledgerKey();
                      switch (se.switch().name) {
                        case b.default.LedgerEntryType.account().name:
                          oe.type = "revokeAccountSponsorship", oe.account = H(se.account().accountId());
                          break;
                        case b.default.LedgerEntryType.trustline().name:
                          oe.type = "revokeTrustlineSponsorship", oe.account = H(se.trustLine().accountId());
                          var re = se.trustLine().asset();
                          re.switch() === b.default.AssetType.assetTypePoolShare() ? oe.asset = d.LiquidityPoolId.fromOperation(re) : oe.asset = m.Asset.fromOperation(re);
                          break;
                        case b.default.LedgerEntryType.offer().name:
                          oe.type = "revokeOfferSponsorship", oe.seller = H(se.offer().sellerId()), oe.offerId = se.offer().offerId().toString();
                          break;
                        case b.default.LedgerEntryType.data().name:
                          oe.type = "revokeDataSponsorship", oe.account = H(se.data().accountId()), oe.name = se.data().dataName().toString("ascii");
                          break;
                        case b.default.LedgerEntryType.claimableBalance().name:
                          oe.type = "revokeClaimableBalanceSponsorship", oe.balanceId = se.claimableBalance().balanceId().toXDR("hex");
                          break;
                        case b.default.LedgerEntryType.liquidityPool().name:
                          oe.type = "revokeLiquidityPoolSponsorship", oe.liquidityPoolId = se.liquidityPool().liquidityPoolId().toString("hex");
                          break;
                        default:
                          throw new Error("Unknown ledgerKey: ".concat(ye.switch().name));
                      }
                      break;
                    case "revokeSponsorshipSigner":
                      oe.type = "revokeSignerSponsorship", oe.account = H(ye.signer().accountId()), oe.signer = function(ge) {
                        var Te = {};
                        switch (ge.switch().name) {
                          case b.default.SignerKeyType.signerKeyTypeEd25519().name:
                            Te.ed25519PublicKey = l.StrKey.encodeEd25519PublicKey(ge.ed25519());
                            break;
                          case b.default.SignerKeyType.signerKeyTypePreAuthTx().name:
                            Te.preAuthTx = ge.preAuthTx().toString("hex");
                            break;
                          case b.default.SignerKeyType.signerKeyTypeHashX().name:
                            Te.sha256Hash = ge.hashX().toString("hex");
                            break;
                          default:
                            throw new Error("Unknown signerKey: ".concat(ge.switch().name));
                        }
                        return Te;
                      }(ye.signer().signerKey());
                      break;
                    default:
                      throw new Error("Unknown revokeSponsorship: ".concat(ye.switch().name));
                  }
                })(Z, z);
                break;
              case "clawback":
                z.type = "clawback", z.amount = this._fromXDRAmount(Z.amount()), z.from = (0, E.encodeMuxedAccountToAddress)(Z.from()), z.asset = m.Asset.fromOperation(Z.asset());
                break;
              case "clawbackClaimableBalance":
                z.type = "clawbackClaimableBalance", z.balanceId = Z.toXDR("hex");
                break;
              case "setTrustLineFlags":
                z.type = "setTrustLineFlags", z.asset = m.Asset.fromOperation(Z.asset()), z.trustor = H(Z.trustor());
                var ne = Z.clearFlags(), K = Z.setFlags(), ie = { authorized: b.default.TrustLineFlags.authorizedFlag(), authorizedToMaintainLiabilities: b.default.TrustLineFlags.authorizedToMaintainLiabilitiesFlag(), clawbackEnabled: b.default.TrustLineFlags.trustlineClawbackEnabledFlag() };
                z.flags = {}, Object.keys(ie).forEach(function(ye) {
                  var oe;
                  z.flags[ye] = (oe = ie[ye].value, !!(K & oe) || !(ne & oe) && void 0);
                });
                break;
              case "liquidityPoolDeposit":
                z.type = "liquidityPoolDeposit", z.liquidityPoolId = Z.liquidityPoolId().toString("hex"), z.maxAmountA = this._fromXDRAmount(Z.maxAmountA()), z.maxAmountB = this._fromXDRAmount(Z.maxAmountB()), z.minPrice = this._fromXDRPrice(Z.minPrice()), z.maxPrice = this._fromXDRPrice(Z.maxPrice());
                break;
              case "liquidityPoolWithdraw":
                z.type = "liquidityPoolWithdraw", z.liquidityPoolId = Z.liquidityPoolId().toString("hex"), z.amount = this._fromXDRAmount(Z.amount()), z.minAmountA = this._fromXDRAmount(Z.minAmountA()), z.minAmountB = this._fromXDRAmount(Z.minAmountB());
                break;
              case "invokeHostFunction":
                var ce;
                z.type = "invokeHostFunction", z.func = Z.hostFunction(), z.auth = (ce = Z.auth()) !== null && ce !== void 0 ? ce : [];
                break;
              case "extendFootprintTtl":
                z.type = "extendFootprintTtl", z.extendTo = Z.extendTo();
                break;
              case "restoreFootprint":
                z.type = "restoreFootprint";
                break;
              default:
                throw new Error("Unknown operation: ".concat(ue));
            }
            return z;
          } }, { key: "isValidAmount", value: function(j) {
            var z, Z = arguments.length > 1 && arguments[1] !== void 0 && arguments[1];
            if (typeof j != "string") return false;
            try {
              z = new h.default(j);
            } catch {
              return false;
            }
            return !(!Z && z.isZero() || z.isNegative() || z.times(q).gt(new h.default("9223372036854775807").toString()) || z.decimalPlaces() > 7 || z.isNaN() || !z.isFinite());
          } }, { key: "constructAmountRequirementsError", value: function(j) {
            return "".concat(j, " argument must be of type String, represent a positive number and have at most 7 digits after the decimal");
          } }, { key: "_checkUnsignedIntValue", value: function(j, z) {
            var Z = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
            if (z !== void 0) switch (typeof z == "string" && (z = parseFloat(z)), true) {
              case (typeof z != "number" || !Number.isFinite(z) || z % 1 != 0):
                throw new Error("".concat(j, " value is invalid"));
              case z < 0:
                throw new Error("".concat(j, " value must be unsigned"));
              case (!Z || Z && Z(z, j)):
                return z;
              default:
                throw new Error("".concat(j, " value is invalid"));
            }
          } }, { key: "_toXDRAmount", value: function(j) {
            var z = new h.default(j).times(q);
            return c.Hyper.fromString(z.toString());
          } }, { key: "_fromXDRAmount", value: function(j) {
            return new h.default(j).div(q).toFixed(7);
          } }, { key: "_fromXDRPrice", value: function(j) {
            return new h.default(j.n()).div(new h.default(j.d())).toString();
          } }, { key: "_toXDRPrice", value: function(j) {
            var z;
            if (j.n && j.d) z = new b.default.Price(j);
            else {
              var Z = (0, r.best_r)(j);
              z = new b.default.Price({ n: parseInt(Z[0], 10), d: parseInt(Z[1], 10) });
            }
            if (z.n() < 0 || z.d() < 0) throw new Error("price must be positive");
            return z;
          } }], (x = null) && F(_.prototype, x), L && F(_, L), Object.defineProperty(_, "prototype", { writable: false }), _;
          var _, x, L;
        }());
        function H(_) {
          return l.StrKey.encodeEd25519PublicKey(_.ed25519());
        }
        N.accountMerge = S.accountMerge, N.allowTrust = S.allowTrust, N.bumpSequence = S.bumpSequence, N.changeTrust = S.changeTrust, N.createAccount = S.createAccount, N.createClaimableBalance = S.createClaimableBalance, N.claimClaimableBalance = S.claimClaimableBalance, N.clawbackClaimableBalance = S.clawbackClaimableBalance, N.createPassiveSellOffer = S.createPassiveSellOffer, N.inflation = S.inflation, N.manageData = S.manageData, N.manageSellOffer = S.manageSellOffer, N.manageBuyOffer = S.manageBuyOffer, N.pathPaymentStrictReceive = S.pathPaymentStrictReceive, N.pathPaymentStrictSend = S.pathPaymentStrictSend, N.payment = S.payment, N.setOptions = S.setOptions, N.beginSponsoringFutureReserves = S.beginSponsoringFutureReserves, N.endSponsoringFutureReserves = S.endSponsoringFutureReserves, N.revokeAccountSponsorship = S.revokeAccountSponsorship, N.revokeTrustlineSponsorship = S.revokeTrustlineSponsorship, N.revokeOfferSponsorship = S.revokeOfferSponsorship, N.revokeDataSponsorship = S.revokeDataSponsorship, N.revokeClaimableBalanceSponsorship = S.revokeClaimableBalanceSponsorship, N.revokeLiquidityPoolSponsorship = S.revokeLiquidityPoolSponsorship, N.revokeSignerSponsorship = S.revokeSignerSponsorship, N.clawback = S.clawback, N.setTrustLineFlags = S.setTrustLineFlags, N.liquidityPoolDeposit = S.liquidityPoolDeposit, N.liquidityPoolWithdraw = S.liquidityPoolWithdraw, N.invokeHostFunction = S.invokeHostFunction, N.extendFootprintTtl = S.extendFootprintTtl, N.restoreFootprint = S.restoreFootprint, N.createStellarAssetContract = S.createStellarAssetContract, N.invokeContractFunction = S.invokeContractFunction, N.createCustomContract = S.createCustomContract, N.uploadContractWasm = S.uploadContractWasm;
      }, 7239: (t, o, s) => {
        Object.defineProperty(o, "__esModule", { value: true }), o.claimClaimableBalance = function() {
          var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          f(r.balanceId);
          var m = {};
          m.balanceId = h.default.ClaimableBalanceId.fromXDR(r.balanceId, "hex");
          var g = new h.default.ClaimClaimableBalanceOp(m), a = {};
          return a.body = h.default.OperationBody.claimClaimableBalance(g), this.setSourceAccount(a, r), new h.default.Operation(a);
        }, o.validateClaimableBalanceId = f;
        var c, h = (c = s(1918)) && c.__esModule ? c : { default: c };
        function f(r) {
          if (typeof r != "string" || r.length !== 72) throw new Error("must provide a valid claimable balance id");
        }
      }, 7244: (t, o, s) => {
        var c = s(9092)(), h = s(6556)("Object.prototype.toString"), f = function(g) {
          return !(c && g && typeof g == "object" && Symbol.toStringTag in g) && h(g) === "[object Arguments]";
        }, r = function(g) {
          return !!f(g) || g !== null && typeof g == "object" && "length" in g && typeof g.length == "number" && g.length >= 0 && h(g) !== "[object Array]" && "callee" in g && h(g.callee) === "[object Function]";
        }, m = function() {
          return f(arguments);
        }();
        f.isLegacyArguments = r, t.exports = m ? f : r;
      }, 7421: (t, o, s) => {
        Object.defineProperty(o, "__esModule", { value: true }), o.inflation = function() {
          var f = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, r = {};
          return r.body = h.default.OperationBody.inflation(), this.setSourceAccount(r, f), new h.default.Operation(r);
        };
        var c, h = (c = s(1918)) && c.__esModule ? c : { default: c };
      }, 7429: (t, o, s) => {
        Object.defineProperty(o, "__esModule", { value: true }), o.XdrLargeInt = void 0;
        var c, h = s(3740), f = s(6272), r = s(8672), m = s(5487), g = s(4063), a = (c = s(1918)) && c.__esModule ? c : { default: c };
        function l(E) {
          return l = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(R) {
            return typeof R;
          } : function(R) {
            return R && typeof Symbol == "function" && R.constructor === Symbol && R !== Symbol.prototype ? "symbol" : typeof R;
          }, l(E);
        }
        function d(E, R) {
          for (var k = 0; k < R.length; k++) {
            var w = R[k];
            w.enumerable = w.enumerable || false, w.configurable = true, "value" in w && (w.writable = true), Object.defineProperty(E, S(w.key), w);
          }
        }
        function b(E, R, k) {
          return (R = S(R)) in E ? Object.defineProperty(E, R, { value: k, enumerable: true, configurable: true, writable: true }) : E[R] = k, E;
        }
        function S(E) {
          var R = function(k, w) {
            if (l(k) != "object" || !k) return k;
            var F = k[Symbol.toPrimitive];
            if (F !== void 0) {
              var I = F.call(k, w);
              if (l(I) != "object") return I;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return (w === "string" ? String : Number)(k);
          }(E, "string");
          return l(R) == "symbol" ? R : R + "";
        }
        o.XdrLargeInt = function() {
          return function(E, R, k) {
            return R && d(E.prototype, R), k && d(E, k), Object.defineProperty(E, "prototype", { writable: false }), E;
          }(function E(R, k) {
            switch (function(w, F) {
              if (!(w instanceof F)) throw new TypeError("Cannot call a class as a function");
            }(this, E), b(this, "int", void 0), b(this, "type", void 0), k instanceof Array || (k = [k]), k = k.map(function(w) {
              return typeof w == "bigint" ? w : w instanceof E ? w.toBigInt() : BigInt(w);
            }), R) {
              case "i64":
                this.int = new h.Hyper(k);
                break;
              case "i128":
                this.int = new m.Int128(k);
                break;
              case "i256":
                this.int = new g.Int256(k);
                break;
              case "u64":
                this.int = new h.UnsignedHyper(k);
                break;
              case "u128":
                this.int = new f.Uint128(k);
                break;
              case "u256":
                this.int = new r.Uint256(k);
                break;
              default:
                throw TypeError("invalid type: ".concat(R));
            }
            this.type = R;
          }, [{ key: "toNumber", value: function() {
            var E = this.int.toBigInt();
            if (E > Number.MAX_SAFE_INTEGER || E < Number.MIN_SAFE_INTEGER) throw RangeError("value ".concat(E, " not in range for Number ") + "[".concat(Number.MAX_SAFE_INTEGER, ", ").concat(Number.MIN_SAFE_INTEGER, "]"));
            return Number(E);
          } }, { key: "toBigInt", value: function() {
            return this.int.toBigInt();
          } }, { key: "toI64", value: function() {
            this._sizeCheck(64);
            var E = this.toBigInt();
            if (BigInt.asIntN(64, E) !== E) throw RangeError("value too large for i64: ".concat(E));
            return a.default.ScVal.scvI64(new a.default.Int64(E));
          } }, { key: "toU64", value: function() {
            return this._sizeCheck(64), a.default.ScVal.scvU64(new a.default.Uint64(BigInt.asUintN(64, this.toBigInt())));
          } }, { key: "toI128", value: function() {
            this._sizeCheck(128);
            var E = this.int.toBigInt(), R = BigInt.asIntN(64, E >> 64n), k = BigInt.asUintN(64, E);
            return a.default.ScVal.scvI128(new a.default.Int128Parts({ hi: new a.default.Int64(R), lo: new a.default.Uint64(k) }));
          } }, { key: "toU128", value: function() {
            this._sizeCheck(128);
            var E = this.int.toBigInt();
            return a.default.ScVal.scvU128(new a.default.UInt128Parts({ hi: new a.default.Uint64(BigInt.asUintN(64, E >> 64n)), lo: new a.default.Uint64(BigInt.asUintN(64, E)) }));
          } }, { key: "toI256", value: function() {
            var E = this.int.toBigInt(), R = BigInt.asIntN(64, E >> 192n), k = BigInt.asUintN(64, E >> 128n), w = BigInt.asUintN(64, E >> 64n), F = BigInt.asUintN(64, E);
            return a.default.ScVal.scvI256(new a.default.Int256Parts({ hiHi: new a.default.Int64(R), hiLo: new a.default.Uint64(k), loHi: new a.default.Uint64(w), loLo: new a.default.Uint64(F) }));
          } }, { key: "toU256", value: function() {
            var E = this.int.toBigInt(), R = BigInt.asUintN(64, E >> 192n), k = BigInt.asUintN(64, E >> 128n), w = BigInt.asUintN(64, E >> 64n), F = BigInt.asUintN(64, E);
            return a.default.ScVal.scvU256(new a.default.UInt256Parts({ hiHi: new a.default.Uint64(R), hiLo: new a.default.Uint64(k), loHi: new a.default.Uint64(w), loLo: new a.default.Uint64(F) }));
          } }, { key: "toScVal", value: function() {
            switch (this.type) {
              case "i64":
                return this.toI64();
              case "i128":
                return this.toI128();
              case "i256":
                return this.toI256();
              case "u64":
                return this.toU64();
              case "u128":
                return this.toU128();
              case "u256":
                return this.toU256();
              default:
                throw TypeError("invalid type: ".concat(this.type));
            }
          } }, { key: "valueOf", value: function() {
            return this.int.valueOf();
          } }, { key: "toString", value: function() {
            return this.int.toString();
          } }, { key: "toJSON", value: function() {
            return { value: this.toBigInt().toString(), type: this.type };
          } }, { key: "_sizeCheck", value: function(E) {
            if (this.int.size > E) throw RangeError("value too large for ".concat(E, " bits (").concat(this.type, ")"));
          } }], [{ key: "isType", value: function(E) {
            switch (E) {
              case "i64":
              case "i128":
              case "i256":
              case "u64":
              case "u128":
              case "u256":
                return true;
              default:
                return false;
            }
          } }, { key: "getType", value: function(E) {
            return E.slice(3).toLowerCase();
          } }]);
        }();
      }, 7452: (t, o, s) => {
        Object.defineProperty(o, "__esModule", { value: true }), o.Contract = void 0;
        var c, h = s(1180), f = s(7237), r = (c = s(1918)) && c.__esModule ? c : { default: c }, m = s(7120);
        function g(d) {
          return g = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(b) {
            return typeof b;
          } : function(b) {
            return b && typeof Symbol == "function" && b.constructor === Symbol && b !== Symbol.prototype ? "symbol" : typeof b;
          }, g(d);
        }
        function a(d, b) {
          for (var S = 0; S < b.length; S++) {
            var E = b[S];
            E.enumerable = E.enumerable || false, E.configurable = true, "value" in E && (E.writable = true), Object.defineProperty(d, l(E.key), E);
          }
        }
        function l(d) {
          var b = function(S, E) {
            if (g(S) != "object" || !S) return S;
            var R = S[Symbol.toPrimitive];
            if (R !== void 0) {
              var k = R.call(S, E);
              if (g(k) != "object") return k;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(S);
          }(d, "string");
          return g(b) == "symbol" ? b : b + "";
        }
        o.Contract = function() {
          return function(d, b, S) {
            return b && a(d.prototype, b), Object.defineProperty(d, "prototype", { writable: false }), d;
          }(function d(b) {
            (function(S, E) {
              if (!(S instanceof E)) throw new TypeError("Cannot call a class as a function");
            })(this, d);
            try {
              this._id = m.StrKey.decodeContract(b);
            } catch {
              throw new Error("Invalid contract ID: ".concat(b));
            }
          }, [{ key: "contractId", value: function() {
            return m.StrKey.encodeContract(this._id);
          } }, { key: "toString", value: function() {
            return this.contractId();
          } }, { key: "address", value: function() {
            return h.Address.contract(this._id);
          } }, { key: "call", value: function(d) {
            for (var b = arguments.length, S = new Array(b > 1 ? b - 1 : 0), E = 1; E < b; E++) S[E - 1] = arguments[E];
            return f.Operation.invokeContractFunction({ contract: this.address().toString(), function: d, args: S });
          } }, { key: "getFootprint", value: function() {
            return r.default.LedgerKey.contractData(new r.default.LedgerKeyContractData({ contract: this.address().toScAddress(), key: r.default.ScVal.scvLedgerKeyContractInstance(), durability: r.default.ContractDataDurability.persistent() }));
          } }]);
        }();
      }, 7505: (t, o, s) => {
        Object.defineProperty(o, "__esModule", { value: true }), o.beginSponsoringFutureReserves = function() {
          var m = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          if (!f.StrKey.isValidEd25519PublicKey(m.sponsoredId)) throw new Error("sponsoredId is invalid");
          var g = new h.default.BeginSponsoringFutureReservesOp({ sponsoredId: r.Keypair.fromPublicKey(m.sponsoredId).xdrAccountId() }), a = {};
          return a.body = h.default.OperationBody.beginSponsoringFutureReserves(g), this.setSourceAccount(a, m), new h.default.Operation(a);
        };
        var c, h = (c = s(1918)) && c.__esModule ? c : { default: c }, f = s(7120), r = s(6691);
      }, 7510: (t) => {
        t.exports = function() {
          for (var s = {}, c = 0; c < arguments.length; c++) {
            var h = arguments[c];
            for (var f in h) o.call(h, f) && (s[f] = h[f]);
          }
          return s;
        };
        var o = Object.prototype.hasOwnProperty;
      }, 7511: (t, o, s) => {
        Object.defineProperty(o, "__esModule", { value: true }), Object.defineProperty(o, "accountMerge", { enumerable: true, get: function() {
          return f.accountMerge;
        } }), Object.defineProperty(o, "allowTrust", { enumerable: true, get: function() {
          return r.allowTrust;
        } }), Object.defineProperty(o, "beginSponsoringFutureReserves", { enumerable: true, get: function() {
          return q.beginSponsoringFutureReserves;
        } }), Object.defineProperty(o, "bumpSequence", { enumerable: true, get: function() {
          return m.bumpSequence;
        } }), Object.defineProperty(o, "changeTrust", { enumerable: true, get: function() {
          return g.changeTrust;
        } }), Object.defineProperty(o, "claimClaimableBalance", { enumerable: true, get: function() {
          return d.claimClaimableBalance;
        } }), Object.defineProperty(o, "clawback", { enumerable: true, get: function() {
          return _.clawback;
        } }), Object.defineProperty(o, "clawbackClaimableBalance", { enumerable: true, get: function() {
          return b.clawbackClaimableBalance;
        } }), Object.defineProperty(o, "createAccount", { enumerable: true, get: function() {
          return a.createAccount;
        } }), Object.defineProperty(o, "createClaimableBalance", { enumerable: true, get: function() {
          return l.createClaimableBalance;
        } }), Object.defineProperty(o, "createCustomContract", { enumerable: true, get: function() {
          return z.createCustomContract;
        } }), Object.defineProperty(o, "createPassiveSellOffer", { enumerable: true, get: function() {
          return h.createPassiveSellOffer;
        } }), Object.defineProperty(o, "createStellarAssetContract", { enumerable: true, get: function() {
          return z.createStellarAssetContract;
        } }), Object.defineProperty(o, "endSponsoringFutureReserves", { enumerable: true, get: function() {
          return N.endSponsoringFutureReserves;
        } }), Object.defineProperty(o, "extendFootprintTtl", { enumerable: true, get: function() {
          return Z.extendFootprintTtl;
        } }), Object.defineProperty(o, "inflation", { enumerable: true, get: function() {
          return S.inflation;
        } }), Object.defineProperty(o, "invokeContractFunction", { enumerable: true, get: function() {
          return z.invokeContractFunction;
        } }), Object.defineProperty(o, "invokeHostFunction", { enumerable: true, get: function() {
          return z.invokeHostFunction;
        } }), Object.defineProperty(o, "liquidityPoolDeposit", { enumerable: true, get: function() {
          return L.liquidityPoolDeposit;
        } }), Object.defineProperty(o, "liquidityPoolWithdraw", { enumerable: true, get: function() {
          return j.liquidityPoolWithdraw;
        } }), Object.defineProperty(o, "manageBuyOffer", { enumerable: true, get: function() {
          return R.manageBuyOffer;
        } }), Object.defineProperty(o, "manageData", { enumerable: true, get: function() {
          return E.manageData;
        } }), Object.defineProperty(o, "manageSellOffer", { enumerable: true, get: function() {
          return c.manageSellOffer;
        } }), Object.defineProperty(o, "pathPaymentStrictReceive", { enumerable: true, get: function() {
          return k.pathPaymentStrictReceive;
        } }), Object.defineProperty(o, "pathPaymentStrictSend", { enumerable: true, get: function() {
          return w.pathPaymentStrictSend;
        } }), Object.defineProperty(o, "payment", { enumerable: true, get: function() {
          return F.payment;
        } }), Object.defineProperty(o, "restoreFootprint", { enumerable: true, get: function() {
          return ue.restoreFootprint;
        } }), Object.defineProperty(o, "revokeAccountSponsorship", { enumerable: true, get: function() {
          return H.revokeAccountSponsorship;
        } }), Object.defineProperty(o, "revokeClaimableBalanceSponsorship", { enumerable: true, get: function() {
          return H.revokeClaimableBalanceSponsorship;
        } }), Object.defineProperty(o, "revokeDataSponsorship", { enumerable: true, get: function() {
          return H.revokeDataSponsorship;
        } }), Object.defineProperty(o, "revokeLiquidityPoolSponsorship", { enumerable: true, get: function() {
          return H.revokeLiquidityPoolSponsorship;
        } }), Object.defineProperty(o, "revokeOfferSponsorship", { enumerable: true, get: function() {
          return H.revokeOfferSponsorship;
        } }), Object.defineProperty(o, "revokeSignerSponsorship", { enumerable: true, get: function() {
          return H.revokeSignerSponsorship;
        } }), Object.defineProperty(o, "revokeTrustlineSponsorship", { enumerable: true, get: function() {
          return H.revokeTrustlineSponsorship;
        } }), Object.defineProperty(o, "setOptions", { enumerable: true, get: function() {
          return I.setOptions;
        } }), Object.defineProperty(o, "setTrustLineFlags", { enumerable: true, get: function() {
          return x.setTrustLineFlags;
        } }), Object.defineProperty(o, "uploadContractWasm", { enumerable: true, get: function() {
          return z.uploadContractWasm;
        } });
        var c = s(862), h = s(9073), f = s(4295), r = s(3683), m = s(6183), g = s(2810), a = s(2115), l = s(4831), d = s(7239), b = s(2203), S = s(7421), E = s(1411), R = s(1922), k = s(2075), w = s(3874), F = s(3533), I = s(2018), q = s(7505), N = s(721), H = s(7790), _ = s(7651), x = s(1804), L = s(9845), j = s(4737), z = s(4403), Z = s(8752), ue = s(149);
      }, 7526: (t, o) => {
        o.byteLength = function(a) {
          var l = m(a), d = l[0], b = l[1];
          return 3 * (d + b) / 4 - b;
        }, o.toByteArray = function(a) {
          var l, d, b = m(a), S = b[0], E = b[1], R = new h(function(F, I, q) {
            return 3 * (I + q) / 4 - q;
          }(0, S, E)), k = 0, w = E > 0 ? S - 4 : S;
          for (d = 0; d < w; d += 4) l = c[a.charCodeAt(d)] << 18 | c[a.charCodeAt(d + 1)] << 12 | c[a.charCodeAt(d + 2)] << 6 | c[a.charCodeAt(d + 3)], R[k++] = l >> 16 & 255, R[k++] = l >> 8 & 255, R[k++] = 255 & l;
          return E === 2 && (l = c[a.charCodeAt(d)] << 2 | c[a.charCodeAt(d + 1)] >> 4, R[k++] = 255 & l), E === 1 && (l = c[a.charCodeAt(d)] << 10 | c[a.charCodeAt(d + 1)] << 4 | c[a.charCodeAt(d + 2)] >> 2, R[k++] = l >> 8 & 255, R[k++] = 255 & l), R;
        }, o.fromByteArray = function(a) {
          for (var l, d = a.length, b = d % 3, S = [], E = 16383, R = 0, k = d - b; R < k; R += E) S.push(g(a, R, R + E > k ? k : R + E));
          return b === 1 ? (l = a[d - 1], S.push(s[l >> 2] + s[l << 4 & 63] + "==")) : b === 2 && (l = (a[d - 2] << 8) + a[d - 1], S.push(s[l >> 10] + s[l >> 4 & 63] + s[l << 2 & 63] + "=")), S.join("");
        };
        for (var s = [], c = [], h = typeof Uint8Array < "u" ? Uint8Array : Array, f = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", r = 0; r < 64; ++r) s[r] = f[r], c[f.charCodeAt(r)] = r;
        function m(a) {
          var l = a.length;
          if (l % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
          var d = a.indexOf("=");
          return d === -1 && (d = l), [d, d === l ? 0 : 4 - d % 4];
        }
        function g(a, l, d) {
          for (var b, S, E = [], R = l; R < d; R += 3) b = (a[R] << 16 & 16711680) + (a[R + 1] << 8 & 65280) + (255 & a[R + 2]), E.push(s[(S = b) >> 18 & 63] + s[S >> 12 & 63] + s[S >> 6 & 63] + s[63 & S]);
          return E.join("");
        }
        c[45] = 62, c[95] = 63;
      }, 7600: (t, o, s) => {
        s.r(o), s.d(o, { Api: () => {
        }, FEDERATION_RESPONSE_MAX_SIZE: () => F, Server: () => I });
        var c = s(356), h = s(4193), f = s.n(h), r = s(8732), m = s(5976), g = s(3898), a = s(9983);
        function l(q) {
          return l = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(N) {
            return typeof N;
          } : function(N) {
            return N && typeof Symbol == "function" && N.constructor === Symbol && N !== Symbol.prototype ? "symbol" : typeof N;
          }, l(q);
        }
        function d(q, N) {
          return function(H) {
            if (Array.isArray(H)) return H;
          }(q) || function(H, _) {
            var x = H == null ? null : typeof Symbol < "u" && H[Symbol.iterator] || H["@@iterator"];
            if (x != null) {
              var L, j, z, Z, ue = [], $ = true, X = false;
              try {
                if (z = (x = x.call(H)).next, _ !== 0) for (; !($ = (L = z.call(x)).done) && (ue.push(L.value), ue.length !== _); $ = true) ;
              } catch (J) {
                X = true, j = J;
              } finally {
                try {
                  if (!$ && x.return != null && (Z = x.return(), Object(Z) !== Z)) return;
                } finally {
                  if (X) throw j;
                }
              }
              return ue;
            }
          }(q, N) || function(H, _) {
            if (H) {
              if (typeof H == "string") return b(H, _);
              var x = {}.toString.call(H).slice(8, -1);
              return x === "Object" && H.constructor && (x = H.constructor.name), x === "Map" || x === "Set" ? Array.from(H) : x === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(x) ? b(H, _) : void 0;
            }
          }(q, N) || function() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
          }();
        }
        function b(q, N) {
          (N == null || N > q.length) && (N = q.length);
          for (var H = 0, _ = Array(N); H < N; H++) _[H] = q[H];
          return _;
        }
        function S() {
          S = function() {
            return N;
          };
          var q, N = {}, H = Object.prototype, _ = H.hasOwnProperty, x = Object.defineProperty || function(ee, P, T) {
            ee[P] = T.value;
          }, L = typeof Symbol == "function" ? Symbol : {}, j = L.iterator || "@@iterator", z = L.asyncIterator || "@@asyncIterator", Z = L.toStringTag || "@@toStringTag";
          function ue(ee, P, T) {
            return Object.defineProperty(ee, P, { value: T, enumerable: true, configurable: true, writable: true }), ee[P];
          }
          try {
            ue({}, "");
          } catch {
            ue = function(P, T, O) {
              return P[T] = O;
            };
          }
          function $(ee, P, T, O) {
            var V = P && P.prototype instanceof ie ? P : ie, D = Object.create(V.prototype), C = new Be(O || []);
            return x(D, "_invoke", { value: Oe(ee, T, C) }), D;
          }
          function X(ee, P, T) {
            try {
              return { type: "normal", arg: ee.call(P, T) };
            } catch (O) {
              return { type: "throw", arg: O };
            }
          }
          N.wrap = $;
          var J = "suspendedStart", B = "suspendedYield", Q = "executing", ne = "completed", K = {};
          function ie() {
          }
          function ce() {
          }
          function ye() {
          }
          var oe = {};
          ue(oe, j, function() {
            return this;
          });
          var se = Object.getPrototypeOf, re = se && se(se(Qe([])));
          re && re !== H && _.call(re, j) && (oe = re);
          var ge = ye.prototype = ie.prototype = Object.create(oe);
          function Te(ee) {
            ["next", "throw", "return"].forEach(function(P) {
              ue(ee, P, function(T) {
                return this._invoke(P, T);
              });
            });
          }
          function pe(ee, P) {
            function T(V, D, C, p) {
              var A = X(ee[V], ee, D);
              if (A.type !== "throw") {
                var U = A.arg, Y = U.value;
                return Y && l(Y) == "object" && _.call(Y, "__await") ? P.resolve(Y.__await).then(function(ae) {
                  T("next", ae, C, p);
                }, function(ae) {
                  T("throw", ae, C, p);
                }) : P.resolve(Y).then(function(ae) {
                  U.value = ae, C(U);
                }, function(ae) {
                  return T("throw", ae, C, p);
                });
              }
              p(A.arg);
            }
            var O;
            x(this, "_invoke", { value: function(V, D) {
              function C() {
                return new P(function(p, A) {
                  T(V, D, p, A);
                });
              }
              return O = O ? O.then(C, C) : C();
            } });
          }
          function Oe(ee, P, T) {
            var O = J;
            return function(V, D) {
              if (O === Q) throw Error("Generator is already running");
              if (O === ne) {
                if (V === "throw") throw D;
                return { value: q, done: true };
              }
              for (T.method = V, T.arg = D; ; ) {
                var C = T.delegate;
                if (C) {
                  var p = xe(C, T);
                  if (p) {
                    if (p === K) continue;
                    return p;
                  }
                }
                if (T.method === "next") T.sent = T._sent = T.arg;
                else if (T.method === "throw") {
                  if (O === J) throw O = ne, T.arg;
                  T.dispatchException(T.arg);
                } else T.method === "return" && T.abrupt("return", T.arg);
                O = Q;
                var A = X(ee, P, T);
                if (A.type === "normal") {
                  if (O = T.done ? ne : B, A.arg === K) continue;
                  return { value: A.arg, done: T.done };
                }
                A.type === "throw" && (O = ne, T.method = "throw", T.arg = A.arg);
              }
            };
          }
          function xe(ee, P) {
            var T = P.method, O = ee.iterator[T];
            if (O === q) return P.delegate = null, T === "throw" && ee.iterator.return && (P.method = "return", P.arg = q, xe(ee, P), P.method === "throw") || T !== "return" && (P.method = "throw", P.arg = new TypeError("The iterator does not provide a '" + T + "' method")), K;
            var V = X(O, ee.iterator, P.arg);
            if (V.type === "throw") return P.method = "throw", P.arg = V.arg, P.delegate = null, K;
            var D = V.arg;
            return D ? D.done ? (P[ee.resultName] = D.value, P.next = ee.nextLoc, P.method !== "return" && (P.method = "next", P.arg = q), P.delegate = null, K) : D : (P.method = "throw", P.arg = new TypeError("iterator result is not an object"), P.delegate = null, K);
          }
          function Ve(ee) {
            var P = { tryLoc: ee[0] };
            1 in ee && (P.catchLoc = ee[1]), 2 in ee && (P.finallyLoc = ee[2], P.afterLoc = ee[3]), this.tryEntries.push(P);
          }
          function _e(ee) {
            var P = ee.completion || {};
            P.type = "normal", delete P.arg, ee.completion = P;
          }
          function Be(ee) {
            this.tryEntries = [{ tryLoc: "root" }], ee.forEach(Ve, this), this.reset(true);
          }
          function Qe(ee) {
            if (ee || ee === "") {
              var P = ee[j];
              if (P) return P.call(ee);
              if (typeof ee.next == "function") return ee;
              if (!isNaN(ee.length)) {
                var T = -1, O = function V() {
                  for (; ++T < ee.length; ) if (_.call(ee, T)) return V.value = ee[T], V.done = false, V;
                  return V.value = q, V.done = true, V;
                };
                return O.next = O;
              }
            }
            throw new TypeError(l(ee) + " is not iterable");
          }
          return ce.prototype = ye, x(ge, "constructor", { value: ye, configurable: true }), x(ye, "constructor", { value: ce, configurable: true }), ce.displayName = ue(ye, Z, "GeneratorFunction"), N.isGeneratorFunction = function(ee) {
            var P = typeof ee == "function" && ee.constructor;
            return !!P && (P === ce || (P.displayName || P.name) === "GeneratorFunction");
          }, N.mark = function(ee) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(ee, ye) : (ee.__proto__ = ye, ue(ee, Z, "GeneratorFunction")), ee.prototype = Object.create(ge), ee;
          }, N.awrap = function(ee) {
            return { __await: ee };
          }, Te(pe.prototype), ue(pe.prototype, z, function() {
            return this;
          }), N.AsyncIterator = pe, N.async = function(ee, P, T, O, V) {
            V === void 0 && (V = Promise);
            var D = new pe($(ee, P, T, O), V);
            return N.isGeneratorFunction(P) ? D : D.next().then(function(C) {
              return C.done ? C.value : D.next();
            });
          }, Te(ge), ue(ge, Z, "Generator"), ue(ge, j, function() {
            return this;
          }), ue(ge, "toString", function() {
            return "[object Generator]";
          }), N.keys = function(ee) {
            var P = Object(ee), T = [];
            for (var O in P) T.push(O);
            return T.reverse(), function V() {
              for (; T.length; ) {
                var D = T.pop();
                if (D in P) return V.value = D, V.done = false, V;
              }
              return V.done = true, V;
            };
          }, N.values = Qe, Be.prototype = { constructor: Be, reset: function(ee) {
            if (this.prev = 0, this.next = 0, this.sent = this._sent = q, this.done = false, this.delegate = null, this.method = "next", this.arg = q, this.tryEntries.forEach(_e), !ee) for (var P in this) P.charAt(0) === "t" && _.call(this, P) && !isNaN(+P.slice(1)) && (this[P] = q);
          }, stop: function() {
            this.done = true;
            var ee = this.tryEntries[0].completion;
            if (ee.type === "throw") throw ee.arg;
            return this.rval;
          }, dispatchException: function(ee) {
            if (this.done) throw ee;
            var P = this;
            function T(A, U) {
              return D.type = "throw", D.arg = ee, P.next = A, U && (P.method = "next", P.arg = q), !!U;
            }
            for (var O = this.tryEntries.length - 1; O >= 0; --O) {
              var V = this.tryEntries[O], D = V.completion;
              if (V.tryLoc === "root") return T("end");
              if (V.tryLoc <= this.prev) {
                var C = _.call(V, "catchLoc"), p = _.call(V, "finallyLoc");
                if (C && p) {
                  if (this.prev < V.catchLoc) return T(V.catchLoc, true);
                  if (this.prev < V.finallyLoc) return T(V.finallyLoc);
                } else if (C) {
                  if (this.prev < V.catchLoc) return T(V.catchLoc, true);
                } else {
                  if (!p) throw Error("try statement without catch or finally");
                  if (this.prev < V.finallyLoc) return T(V.finallyLoc);
                }
              }
            }
          }, abrupt: function(ee, P) {
            for (var T = this.tryEntries.length - 1; T >= 0; --T) {
              var O = this.tryEntries[T];
              if (O.tryLoc <= this.prev && _.call(O, "finallyLoc") && this.prev < O.finallyLoc) {
                var V = O;
                break;
              }
            }
            V && (ee === "break" || ee === "continue") && V.tryLoc <= P && P <= V.finallyLoc && (V = null);
            var D = V ? V.completion : {};
            return D.type = ee, D.arg = P, V ? (this.method = "next", this.next = V.finallyLoc, K) : this.complete(D);
          }, complete: function(ee, P) {
            if (ee.type === "throw") throw ee.arg;
            return ee.type === "break" || ee.type === "continue" ? this.next = ee.arg : ee.type === "return" ? (this.rval = this.arg = ee.arg, this.method = "return", this.next = "end") : ee.type === "normal" && P && (this.next = P), K;
          }, finish: function(ee) {
            for (var P = this.tryEntries.length - 1; P >= 0; --P) {
              var T = this.tryEntries[P];
              if (T.finallyLoc === ee) return this.complete(T.completion, T.afterLoc), _e(T), K;
            }
          }, catch: function(ee) {
            for (var P = this.tryEntries.length - 1; P >= 0; --P) {
              var T = this.tryEntries[P];
              if (T.tryLoc === ee) {
                var O = T.completion;
                if (O.type === "throw") {
                  var V = O.arg;
                  _e(T);
                }
                return V;
              }
            }
            throw Error("illegal catch attempt");
          }, delegateYield: function(ee, P, T) {
            return this.delegate = { iterator: Qe(ee), resultName: P, nextLoc: T }, this.method === "next" && (this.arg = q), K;
          } }, N;
        }
        function E(q, N, H, _, x, L, j) {
          try {
            var z = q[L](j), Z = z.value;
          } catch (ue) {
            return void H(ue);
          }
          z.done ? N(Z) : Promise.resolve(Z).then(_, x);
        }
        function R(q) {
          return function() {
            var N = this, H = arguments;
            return new Promise(function(_, x) {
              var L = q.apply(N, H);
              function j(Z) {
                E(L, _, x, j, z, "next", Z);
              }
              function z(Z) {
                E(L, _, x, j, z, "throw", Z);
              }
              j(void 0);
            });
          };
        }
        function k(q, N) {
          for (var H = 0; H < N.length; H++) {
            var _ = N[H];
            _.enumerable = _.enumerable || false, _.configurable = true, "value" in _ && (_.writable = true), Object.defineProperty(q, w(_.key), _);
          }
        }
        function w(q) {
          var N = function(H, _) {
            if (l(H) != "object" || !H) return H;
            var x = H[Symbol.toPrimitive];
            if (x !== void 0) {
              var L = x.call(H, _);
              if (l(L) != "object") return L;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(H);
          }(q, "string");
          return l(N) == "symbol" ? N : N + "";
        }
        var F = 102400, I = function() {
          function q($, X) {
            var J = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
            (function(Q, ne) {
              if (!(Q instanceof ne)) throw new TypeError("Cannot call a class as a function");
            })(this, q), this.serverURL = f()($), this.domain = X;
            var B = J.allowHttp === void 0 ? r.T.isAllowHttp() : J.allowHttp;
            if (this.timeout = J.timeout === void 0 ? r.T.getTimeout() : J.timeout, this.serverURL.protocol() !== "https" && !B) throw new Error("Cannot connect to insecure federation server");
          }
          return N = q, H = [{ key: "resolveAddress", value: (ue = R(S().mark(function $(X) {
            var J, B;
            return S().wrap(function(Q) {
              for (; ; ) switch (Q.prev = Q.next) {
                case 0:
                  if (J = X, !(X.indexOf("*") < 0)) {
                    Q.next = 5;
                    break;
                  }
                  if (this.domain) {
                    Q.next = 4;
                    break;
                  }
                  return Q.abrupt("return", Promise.reject(new Error("Unknown domain. Make sure `address` contains a domain (ex. `bob*stellar.org`) or pass `domain` parameter when instantiating the server object.")));
                case 4:
                  J = "".concat(X, "*").concat(this.domain);
                case 5:
                  return B = this.serverURL.query({ type: "name", q: J }), Q.abrupt("return", this._sendRequest(B));
                case 7:
                case "end":
                  return Q.stop();
              }
            }, $, this);
          })), function($) {
            return ue.apply(this, arguments);
          }) }, { key: "resolveAccountId", value: (Z = R(S().mark(function $(X) {
            var J;
            return S().wrap(function(B) {
              for (; ; ) switch (B.prev = B.next) {
                case 0:
                  return J = this.serverURL.query({ type: "id", q: X }), B.abrupt("return", this._sendRequest(J));
                case 2:
                case "end":
                  return B.stop();
              }
            }, $, this);
          })), function($) {
            return Z.apply(this, arguments);
          }) }, { key: "resolveTransactionId", value: (z = R(S().mark(function $(X) {
            var J;
            return S().wrap(function(B) {
              for (; ; ) switch (B.prev = B.next) {
                case 0:
                  return J = this.serverURL.query({ type: "txid", q: X }), B.abrupt("return", this._sendRequest(J));
                case 2:
                case "end":
                  return B.stop();
              }
            }, $, this);
          })), function($) {
            return z.apply(this, arguments);
          }) }, { key: "_sendRequest", value: (j = R(S().mark(function $(X) {
            var J;
            return S().wrap(function(B) {
              for (; ; ) switch (B.prev = B.next) {
                case 0:
                  return J = this.timeout, B.abrupt("return", a.ok.get(X.toString(), { maxContentLength: F, timeout: J }).then(function(Q) {
                    if (Q.data.memo !== void 0 && typeof Q.data.memo != "string") throw new Error("memo value should be of type string");
                    return Q.data;
                  }).catch(function(Q) {
                    if (Q instanceof Error) {
                      if (Q.message.match(/^maxContentLength size/)) throw new Error("federation response exceeds allowed size of ".concat(F));
                      return Promise.reject(Q);
                    }
                    return Promise.reject(new m.nS("Server query failed. Server responded: ".concat(Q.status, " ").concat(Q.statusText), Q.data));
                  }));
                case 2:
                case "end":
                  return B.stop();
              }
            }, $, this);
          })), function($) {
            return j.apply(this, arguments);
          }) }], _ = [{ key: "resolve", value: (L = R(S().mark(function $(X) {
            var J, B, Q, ne, K, ie = arguments;
            return S().wrap(function(ce) {
              for (; ; ) switch (ce.prev = ce.next) {
                case 0:
                  if (J = ie.length > 1 && ie[1] !== void 0 ? ie[1] : {}, !(X.indexOf("*") < 0)) {
                    ce.next = 5;
                    break;
                  }
                  if (c.StrKey.isValidEd25519PublicKey(X)) {
                    ce.next = 4;
                    break;
                  }
                  return ce.abrupt("return", Promise.reject(new Error("Invalid Account ID")));
                case 4:
                  return ce.abrupt("return", Promise.resolve({ account_id: X }));
                case 5:
                  if (B = X.split("*"), Q = d(B, 2), ne = Q[1], B.length === 2 && ne) {
                    ce.next = 9;
                    break;
                  }
                  return ce.abrupt("return", Promise.reject(new Error("Invalid Stellar address")));
                case 9:
                  return ce.next = 11, q.createForDomain(ne, J);
                case 11:
                  return K = ce.sent, ce.abrupt("return", K.resolveAddress(X));
                case 13:
                case "end":
                  return ce.stop();
              }
            }, $);
          })), function($) {
            return L.apply(this, arguments);
          }) }, { key: "createForDomain", value: (x = R(S().mark(function $(X) {
            var J, B, Q = arguments;
            return S().wrap(function(ne) {
              for (; ; ) switch (ne.prev = ne.next) {
                case 0:
                  return J = Q.length > 1 && Q[1] !== void 0 ? Q[1] : {}, ne.next = 3, g.Resolver.resolve(X, J);
                case 3:
                  if ((B = ne.sent).FEDERATION_SERVER) {
                    ne.next = 6;
                    break;
                  }
                  return ne.abrupt("return", Promise.reject(new Error("stellar.toml does not contain FEDERATION_SERVER field")));
                case 6:
                  return ne.abrupt("return", new q(B.FEDERATION_SERVER, X, J));
                case 7:
                case "end":
                  return ne.stop();
              }
            }, $);
          })), function($) {
            return x.apply(this, arguments);
          }) }], H && k(N.prototype, H), _ && k(N, _), Object.defineProperty(N, "prototype", { writable: false }), N;
          var N, H, _, x, L, j, z, Z, ue;
        }();
      }, 7651: (t, o, s) => {
        Object.defineProperty(o, "__esModule", { value: true }), o.clawback = function(r) {
          var m = {};
          if (!this.isValidAmount(r.amount)) throw new TypeError(this.constructAmountRequirementsError("amount"));
          m.amount = this._toXDRAmount(r.amount), m.asset = r.asset.toXDRObject();
          try {
            m.from = (0, f.decodeAddressToMuxedAccount)(r.from);
          } catch {
            throw new Error("from address is invalid");
          }
          var g = { body: h.default.OperationBody.clawback(new h.default.ClawbackOp(m)) };
          return this.setSourceAccount(g, r), new h.default.Operation(g);
        };
        var c, h = (c = s(1918)) && c.__esModule ? c : { default: c }, f = s(6160);
      }, 7720: (t, o, s) => {
        var c = s(4765), h = Object.prototype.hasOwnProperty, f = Array.isArray, r = function() {
          for (var a = [], l = 0; l < 256; ++l) a.push("%" + ((l < 16 ? "0" : "") + l.toString(16)).toUpperCase());
          return a;
        }(), m = function(a, l) {
          for (var d = l && l.plainObjects ? { __proto__: null } : {}, b = 0; b < a.length; ++b) a[b] !== void 0 && (d[b] = a[b]);
          return d;
        }, g = 1024;
        t.exports = { arrayToObject: m, assign: function(a, l) {
          return Object.keys(l).reduce(function(d, b) {
            return d[b] = l[b], d;
          }, a);
        }, combine: function(a, l) {
          return [].concat(a, l);
        }, compact: function(a) {
          for (var l = [{ obj: { o: a }, prop: "o" }], d = [], b = 0; b < l.length; ++b) for (var S = l[b], E = S.obj[S.prop], R = Object.keys(E), k = 0; k < R.length; ++k) {
            var w = R[k], F = E[w];
            typeof F == "object" && F !== null && d.indexOf(F) === -1 && (l.push({ obj: E, prop: w }), d.push(F));
          }
          return function(I) {
            for (; I.length > 1; ) {
              var q = I.pop(), N = q.obj[q.prop];
              if (f(N)) {
                for (var H = [], _ = 0; _ < N.length; ++_) N[_] !== void 0 && H.push(N[_]);
                q.obj[q.prop] = H;
              }
            }
          }(l), a;
        }, decode: function(a, l, d) {
          var b = a.replace(/\+/g, " ");
          if (d === "iso-8859-1") return b.replace(/%[0-9a-f]{2}/gi, unescape);
          try {
            return decodeURIComponent(b);
          } catch {
            return b;
          }
        }, encode: function(a, l, d, b, S) {
          if (a.length === 0) return a;
          var E = a;
          if (typeof a == "symbol" ? E = Symbol.prototype.toString.call(a) : typeof a != "string" && (E = String(a)), d === "iso-8859-1") return escape(E).replace(/%u[0-9a-f]{4}/gi, function(N) {
            return "%26%23" + parseInt(N.slice(2), 16) + "%3B";
          });
          for (var R = "", k = 0; k < E.length; k += g) {
            for (var w = E.length >= g ? E.slice(k, k + g) : E, F = [], I = 0; I < w.length; ++I) {
              var q = w.charCodeAt(I);
              q === 45 || q === 46 || q === 95 || q === 126 || q >= 48 && q <= 57 || q >= 65 && q <= 90 || q >= 97 && q <= 122 || S === c.RFC1738 && (q === 40 || q === 41) ? F[F.length] = w.charAt(I) : q < 128 ? F[F.length] = r[q] : q < 2048 ? F[F.length] = r[192 | q >> 6] + r[128 | 63 & q] : q < 55296 || q >= 57344 ? F[F.length] = r[224 | q >> 12] + r[128 | q >> 6 & 63] + r[128 | 63 & q] : (I += 1, q = 65536 + ((1023 & q) << 10 | 1023 & w.charCodeAt(I)), F[F.length] = r[240 | q >> 18] + r[128 | q >> 12 & 63] + r[128 | q >> 6 & 63] + r[128 | 63 & q]);
            }
            R += F.join("");
          }
          return R;
        }, isBuffer: function(a) {
          return !(!a || typeof a != "object") && !!(a.constructor && a.constructor.isBuffer && a.constructor.isBuffer(a));
        }, isRegExp: function(a) {
          return Object.prototype.toString.call(a) === "[object RegExp]";
        }, maybeMap: function(a, l) {
          if (f(a)) {
            for (var d = [], b = 0; b < a.length; b += 1) d.push(l(a[b]));
            return d;
          }
          return l(a);
        }, merge: function a(l, d, b) {
          if (!d) return l;
          if (typeof d != "object" && typeof d != "function") {
            if (f(l)) l.push(d);
            else {
              if (!l || typeof l != "object") return [l, d];
              (b && (b.plainObjects || b.allowPrototypes) || !h.call(Object.prototype, d)) && (l[d] = true);
            }
            return l;
          }
          if (!l || typeof l != "object") return [l].concat(d);
          var S = l;
          return f(l) && !f(d) && (S = m(l, b)), f(l) && f(d) ? (d.forEach(function(E, R) {
            if (h.call(l, R)) {
              var k = l[R];
              k && typeof k == "object" && E && typeof E == "object" ? l[R] = a(k, E, b) : l.push(E);
            } else l[R] = E;
          }), l) : Object.keys(d).reduce(function(E, R) {
            var k = d[R];
            return h.call(E, R) ? E[R] = a(E[R], k, b) : E[R] = k, E;
          }, S);
        } };
      }, 7758: (t, o, s) => {
        var c, h = s(6048).F, f = h.ERR_MISSING_ARGS, r = h.ERR_STREAM_DESTROYED;
        function m(l) {
          if (l) throw l;
        }
        function g(l) {
          l();
        }
        function a(l, d) {
          return l.pipe(d);
        }
        t.exports = function() {
          for (var l = arguments.length, d = new Array(l), b = 0; b < l; b++) d[b] = arguments[b];
          var S, E = function(k) {
            return k.length ? typeof k[k.length - 1] != "function" ? m : k.pop() : m;
          }(d);
          if (Array.isArray(d[0]) && (d = d[0]), d.length < 2) throw new f("streams");
          var R = d.map(function(k, w) {
            var F = w < d.length - 1;
            return function(I, q, N, H) {
              H = /* @__PURE__ */ function(L) {
                var j = false;
                return function() {
                  j || (j = true, L.apply(void 0, arguments));
                };
              }(H);
              var _ = false;
              I.on("close", function() {
                _ = true;
              }), c === void 0 && (c = s(6238)), c(I, { readable: q, writable: N }, function(L) {
                if (L) return H(L);
                _ = true, H();
              });
              var x = false;
              return function(L) {
                if (!_ && !x) return x = true, function(j) {
                  return j.setHeader && typeof j.abort == "function";
                }(I) ? I.abort() : typeof I.destroy == "function" ? I.destroy() : void H(L || new r("pipe"));
              };
            }(k, F, w > 0, function(I) {
              S || (S = I), I && R.forEach(g), F || (R.forEach(g), E(S));
            });
          });
          return d.reduce(a);
        };
      }, 7790: (t, o, s) => {
        var c = s(8287).Buffer;
        Object.defineProperty(o, "__esModule", { value: true }), o.revokeAccountSponsorship = function() {
          var l = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          if (!r.StrKey.isValidEd25519PublicKey(l.account)) throw new Error("account is invalid");
          var d = f.default.LedgerKey.account(new f.default.LedgerKeyAccount({ accountId: m.Keypair.fromPublicKey(l.account).xdrAccountId() })), b = f.default.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(d), S = {};
          return S.body = f.default.OperationBody.revokeSponsorship(b), this.setSourceAccount(S, l), new f.default.Operation(S);
        }, o.revokeClaimableBalanceSponsorship = function() {
          var l = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          if (typeof l.balanceId != "string") throw new Error("balanceId is invalid");
          var d = f.default.LedgerKey.claimableBalance(new f.default.LedgerKeyClaimableBalance({ balanceId: f.default.ClaimableBalanceId.fromXDR(l.balanceId, "hex") })), b = f.default.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(d), S = {};
          return S.body = f.default.OperationBody.revokeSponsorship(b), this.setSourceAccount(S, l), new f.default.Operation(S);
        }, o.revokeDataSponsorship = function() {
          var l = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          if (!r.StrKey.isValidEd25519PublicKey(l.account)) throw new Error("account is invalid");
          if (typeof l.name != "string" || l.name.length > 64) throw new Error("name must be a string, up to 64 characters");
          var d = f.default.LedgerKey.data(new f.default.LedgerKeyData({ accountId: m.Keypair.fromPublicKey(l.account).xdrAccountId(), dataName: l.name })), b = f.default.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(d), S = {};
          return S.body = f.default.OperationBody.revokeSponsorship(b), this.setSourceAccount(S, l), new f.default.Operation(S);
        }, o.revokeLiquidityPoolSponsorship = function() {
          var l = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          if (typeof l.liquidityPoolId != "string") throw new Error("liquidityPoolId is invalid");
          var d = f.default.LedgerKey.liquidityPool(new f.default.LedgerKeyLiquidityPool({ liquidityPoolId: f.default.PoolId.fromXDR(l.liquidityPoolId, "hex") })), b = f.default.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(d), S = { body: f.default.OperationBody.revokeSponsorship(b) };
          return this.setSourceAccount(S, l), new f.default.Operation(S);
        }, o.revokeOfferSponsorship = function() {
          var l = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          if (!r.StrKey.isValidEd25519PublicKey(l.seller)) throw new Error("seller is invalid");
          if (typeof l.offerId != "string") throw new Error("offerId is invalid");
          var d = f.default.LedgerKey.offer(new f.default.LedgerKeyOffer({ sellerId: m.Keypair.fromPublicKey(l.seller).xdrAccountId(), offerId: f.default.Int64.fromString(l.offerId) })), b = f.default.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(d), S = {};
          return S.body = f.default.OperationBody.revokeSponsorship(b), this.setSourceAccount(S, l), new f.default.Operation(S);
        }, o.revokeSignerSponsorship = function() {
          var l, d = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          if (!r.StrKey.isValidEd25519PublicKey(d.account)) throw new Error("account is invalid");
          if (d.signer.ed25519PublicKey) {
            if (!r.StrKey.isValidEd25519PublicKey(d.signer.ed25519PublicKey)) throw new Error("signer.ed25519PublicKey is invalid.");
            var b = r.StrKey.decodeEd25519PublicKey(d.signer.ed25519PublicKey);
            l = new f.default.SignerKey.signerKeyTypeEd25519(b);
          } else if (d.signer.preAuthTx) {
            var S;
            if (S = typeof d.signer.preAuthTx == "string" ? c.from(d.signer.preAuthTx, "hex") : d.signer.preAuthTx, !c.isBuffer(S) || S.length !== 32) throw new Error("signer.preAuthTx must be 32 bytes Buffer.");
            l = new f.default.SignerKey.signerKeyTypePreAuthTx(S);
          } else {
            if (!d.signer.sha256Hash) throw new Error("signer is invalid");
            var E;
            if (E = typeof d.signer.sha256Hash == "string" ? c.from(d.signer.sha256Hash, "hex") : d.signer.sha256Hash, !c.isBuffer(E) || E.length !== 32) throw new Error("signer.sha256Hash must be 32 bytes Buffer.");
            l = new f.default.SignerKey.signerKeyTypeHashX(E);
          }
          var R = new f.default.RevokeSponsorshipOpSigner({ accountId: m.Keypair.fromPublicKey(d.account).xdrAccountId(), signerKey: l }), k = f.default.RevokeSponsorshipOp.revokeSponsorshipSigner(R), w = {};
          return w.body = f.default.OperationBody.revokeSponsorship(k), this.setSourceAccount(w, d), new f.default.Operation(w);
        }, o.revokeTrustlineSponsorship = function() {
          var l, d = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          if (!r.StrKey.isValidEd25519PublicKey(d.account)) throw new Error("account is invalid");
          if (d.asset instanceof g.Asset) l = d.asset.toTrustLineXDRObject();
          else {
            if (!(d.asset instanceof a.LiquidityPoolId)) throw new TypeError("asset must be an Asset or LiquidityPoolId");
            l = d.asset.toXDRObject();
          }
          var b = f.default.LedgerKey.trustline(new f.default.LedgerKeyTrustLine({ accountId: m.Keypair.fromPublicKey(d.account).xdrAccountId(), asset: l })), S = f.default.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(b), E = {};
          return E.body = f.default.OperationBody.revokeSponsorship(S), this.setSourceAccount(E, d), new f.default.Operation(E);
        };
        var h, f = (h = s(1918)) && h.__esModule ? h : { default: h }, r = s(7120), m = s(6691), g = s(1764), a = s(9353);
      }, 7816: (t, o, s) => {
        var c = s(6698), h = s(392), f = s(2861).Buffer, r = [1518500249, 1859775393, -1894007588, -899497514], m = new Array(80);
        function g() {
          this.init(), this._w = m, h.call(this, 64, 56);
        }
        function a(d) {
          return d << 30 | d >>> 2;
        }
        function l(d, b, S, E) {
          return d === 0 ? b & S | ~b & E : d === 2 ? b & S | b & E | S & E : b ^ S ^ E;
        }
        c(g, h), g.prototype.init = function() {
          return this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520, this;
        }, g.prototype._update = function(d) {
          for (var b, S = this._w, E = 0 | this._a, R = 0 | this._b, k = 0 | this._c, w = 0 | this._d, F = 0 | this._e, I = 0; I < 16; ++I) S[I] = d.readInt32BE(4 * I);
          for (; I < 80; ++I) S[I] = S[I - 3] ^ S[I - 8] ^ S[I - 14] ^ S[I - 16];
          for (var q = 0; q < 80; ++q) {
            var N = ~~(q / 20), H = 0 | ((b = E) << 5 | b >>> 27) + l(N, R, k, w) + F + S[q] + r[N];
            F = w, w = k, k = a(R), R = E, E = H;
          }
          this._a = E + this._a | 0, this._b = R + this._b | 0, this._c = k + this._c | 0, this._d = w + this._d | 0, this._e = F + this._e | 0;
        }, g.prototype._hash = function() {
          var d = f.allocUnsafe(20);
          return d.writeInt32BE(0 | this._a, 0), d.writeInt32BE(0 | this._b, 4), d.writeInt32BE(0 | this._c, 8), d.writeInt32BE(0 | this._d, 12), d.writeInt32BE(0 | this._e, 16), d;
        }, t.exports = g;
      }, 7938: (t, o, s) => {
        function c(r) {
          return c = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(m) {
            return typeof m;
          } : function(m) {
            return m && typeof Symbol == "function" && m.constructor === Symbol && m !== Symbol.prototype ? "symbol" : typeof m;
          }, c(r);
        }
        function h(r) {
          if (typeof WeakMap != "function") return null;
          var m = /* @__PURE__ */ new WeakMap(), g = /* @__PURE__ */ new WeakMap();
          return (h = function(a) {
            return a ? g : m;
          })(r);
        }
        Object.defineProperty(o, "__esModule", { value: true }), o.default = void 0;
        var f = function(r, m) {
          if (r && r.__esModule) return r;
          if (r === null || c(r) != "object" && typeof r != "function") return { default: r };
          var g = h(m);
          if (g && g.has(r)) return g.get(r);
          var a = { __proto__: null }, l = Object.defineProperty && Object.getOwnPropertyDescriptor;
          for (var d in r) if (d !== "default" && {}.hasOwnProperty.call(r, d)) {
            var b = l ? Object.getOwnPropertyDescriptor(r, d) : null;
            b && (b.get || b.set) ? Object.defineProperty(a, d, b) : a[d] = r[d];
          }
          return a.default = r, g && g.set(r, a), a;
        }(s(3740)).config(function(r) {
          var m = 1024;
          r.typedef("Value", r.varOpaque()), r.struct("ScpBallot", [["counter", r.lookup("Uint32")], ["value", r.lookup("Value")]]), r.enum("ScpStatementType", { scpStPrepare: 0, scpStConfirm: 1, scpStExternalize: 2, scpStNominate: 3 }), r.struct("ScpNomination", [["quorumSetHash", r.lookup("Hash")], ["votes", r.varArray(r.lookup("Value"), 2147483647)], ["accepted", r.varArray(r.lookup("Value"), 2147483647)]]), r.struct("ScpStatementPrepare", [["quorumSetHash", r.lookup("Hash")], ["ballot", r.lookup("ScpBallot")], ["prepared", r.option(r.lookup("ScpBallot"))], ["preparedPrime", r.option(r.lookup("ScpBallot"))], ["nC", r.lookup("Uint32")], ["nH", r.lookup("Uint32")]]), r.struct("ScpStatementConfirm", [["ballot", r.lookup("ScpBallot")], ["nPrepared", r.lookup("Uint32")], ["nCommit", r.lookup("Uint32")], ["nH", r.lookup("Uint32")], ["quorumSetHash", r.lookup("Hash")]]), r.struct("ScpStatementExternalize", [["commit", r.lookup("ScpBallot")], ["nH", r.lookup("Uint32")], ["commitQuorumSetHash", r.lookup("Hash")]]), r.union("ScpStatementPledges", { switchOn: r.lookup("ScpStatementType"), switchName: "type", switches: [["scpStPrepare", "prepare"], ["scpStConfirm", "confirm"], ["scpStExternalize", "externalize"], ["scpStNominate", "nominate"]], arms: { prepare: r.lookup("ScpStatementPrepare"), confirm: r.lookup("ScpStatementConfirm"), externalize: r.lookup("ScpStatementExternalize"), nominate: r.lookup("ScpNomination") } }), r.struct("ScpStatement", [["nodeId", r.lookup("NodeId")], ["slotIndex", r.lookup("Uint64")], ["pledges", r.lookup("ScpStatementPledges")]]), r.struct("ScpEnvelope", [["statement", r.lookup("ScpStatement")], ["signature", r.lookup("Signature")]]), r.struct("ScpQuorumSet", [["threshold", r.lookup("Uint32")], ["validators", r.varArray(r.lookup("NodeId"), 2147483647)], ["innerSets", r.varArray(r.lookup("ScpQuorumSet"), 2147483647)]]), r.typedef("Thresholds", r.opaque(4)), r.typedef("String32", r.string(32)), r.typedef("String64", r.string(64)), r.typedef("SequenceNumber", r.lookup("Int64")), r.typedef("DataValue", r.varOpaque(64)), r.typedef("PoolId", r.lookup("Hash")), r.typedef("AssetCode4", r.opaque(4)), r.typedef("AssetCode12", r.opaque(12)), r.enum("AssetType", { assetTypeNative: 0, assetTypeCreditAlphanum4: 1, assetTypeCreditAlphanum12: 2, assetTypePoolShare: 3 }), r.union("AssetCode", { switchOn: r.lookup("AssetType"), switchName: "type", switches: [["assetTypeCreditAlphanum4", "assetCode4"], ["assetTypeCreditAlphanum12", "assetCode12"]], arms: { assetCode4: r.lookup("AssetCode4"), assetCode12: r.lookup("AssetCode12") } }), r.struct("AlphaNum4", [["assetCode", r.lookup("AssetCode4")], ["issuer", r.lookup("AccountId")]]), r.struct("AlphaNum12", [["assetCode", r.lookup("AssetCode12")], ["issuer", r.lookup("AccountId")]]), r.union("Asset", { switchOn: r.lookup("AssetType"), switchName: "type", switches: [["assetTypeNative", r.void()], ["assetTypeCreditAlphanum4", "alphaNum4"], ["assetTypeCreditAlphanum12", "alphaNum12"]], arms: { alphaNum4: r.lookup("AlphaNum4"), alphaNum12: r.lookup("AlphaNum12") } }), r.struct("Price", [["n", r.lookup("Int32")], ["d", r.lookup("Int32")]]), r.struct("Liabilities", [["buying", r.lookup("Int64")], ["selling", r.lookup("Int64")]]), r.enum("ThresholdIndices", { thresholdMasterWeight: 0, thresholdLow: 1, thresholdMed: 2, thresholdHigh: 3 }), r.enum("LedgerEntryType", { account: 0, trustline: 1, offer: 2, data: 3, claimableBalance: 4, liquidityPool: 5, contractData: 6, contractCode: 7, configSetting: 8, ttl: 9 }), r.struct("Signer", [["key", r.lookup("SignerKey")], ["weight", r.lookup("Uint32")]]), r.enum("AccountFlags", { authRequiredFlag: 1, authRevocableFlag: 2, authImmutableFlag: 4, authClawbackEnabledFlag: 8 }), r.const("MASK_ACCOUNT_FLAGS", 7), r.const("MASK_ACCOUNT_FLAGS_V17", 15), r.const("MAX_SIGNERS", 20), r.typedef("SponsorshipDescriptor", r.option(r.lookup("AccountId"))), r.struct("AccountEntryExtensionV3", [["ext", r.lookup("ExtensionPoint")], ["seqLedger", r.lookup("Uint32")], ["seqTime", r.lookup("TimePoint")]]), r.union("AccountEntryExtensionV2Ext", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()], [3, "v3"]], arms: { v3: r.lookup("AccountEntryExtensionV3") } }), r.struct("AccountEntryExtensionV2", [["numSponsored", r.lookup("Uint32")], ["numSponsoring", r.lookup("Uint32")], ["signerSponsoringIDs", r.varArray(r.lookup("SponsorshipDescriptor"), r.lookup("MAX_SIGNERS"))], ["ext", r.lookup("AccountEntryExtensionV2Ext")]]), r.union("AccountEntryExtensionV1Ext", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()], [2, "v2"]], arms: { v2: r.lookup("AccountEntryExtensionV2") } }), r.struct("AccountEntryExtensionV1", [["liabilities", r.lookup("Liabilities")], ["ext", r.lookup("AccountEntryExtensionV1Ext")]]), r.union("AccountEntryExt", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()], [1, "v1"]], arms: { v1: r.lookup("AccountEntryExtensionV1") } }), r.struct("AccountEntry", [["accountId", r.lookup("AccountId")], ["balance", r.lookup("Int64")], ["seqNum", r.lookup("SequenceNumber")], ["numSubEntries", r.lookup("Uint32")], ["inflationDest", r.option(r.lookup("AccountId"))], ["flags", r.lookup("Uint32")], ["homeDomain", r.lookup("String32")], ["thresholds", r.lookup("Thresholds")], ["signers", r.varArray(r.lookup("Signer"), r.lookup("MAX_SIGNERS"))], ["ext", r.lookup("AccountEntryExt")]]), r.enum("TrustLineFlags", { authorizedFlag: 1, authorizedToMaintainLiabilitiesFlag: 2, trustlineClawbackEnabledFlag: 4 }), r.const("MASK_TRUSTLINE_FLAGS", 1), r.const("MASK_TRUSTLINE_FLAGS_V13", 3), r.const("MASK_TRUSTLINE_FLAGS_V17", 7), r.enum("LiquidityPoolType", { liquidityPoolConstantProduct: 0 }), r.union("TrustLineAsset", { switchOn: r.lookup("AssetType"), switchName: "type", switches: [["assetTypeNative", r.void()], ["assetTypeCreditAlphanum4", "alphaNum4"], ["assetTypeCreditAlphanum12", "alphaNum12"], ["assetTypePoolShare", "liquidityPoolId"]], arms: { alphaNum4: r.lookup("AlphaNum4"), alphaNum12: r.lookup("AlphaNum12"), liquidityPoolId: r.lookup("PoolId") } }), r.union("TrustLineEntryExtensionV2Ext", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()]], arms: {} }), r.struct("TrustLineEntryExtensionV2", [["liquidityPoolUseCount", r.lookup("Int32")], ["ext", r.lookup("TrustLineEntryExtensionV2Ext")]]), r.union("TrustLineEntryV1Ext", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()], [2, "v2"]], arms: { v2: r.lookup("TrustLineEntryExtensionV2") } }), r.struct("TrustLineEntryV1", [["liabilities", r.lookup("Liabilities")], ["ext", r.lookup("TrustLineEntryV1Ext")]]), r.union("TrustLineEntryExt", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()], [1, "v1"]], arms: { v1: r.lookup("TrustLineEntryV1") } }), r.struct("TrustLineEntry", [["accountId", r.lookup("AccountId")], ["asset", r.lookup("TrustLineAsset")], ["balance", r.lookup("Int64")], ["limit", r.lookup("Int64")], ["flags", r.lookup("Uint32")], ["ext", r.lookup("TrustLineEntryExt")]]), r.enum("OfferEntryFlags", { passiveFlag: 1 }), r.const("MASK_OFFERENTRY_FLAGS", 1), r.union("OfferEntryExt", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()]], arms: {} }), r.struct("OfferEntry", [["sellerId", r.lookup("AccountId")], ["offerId", r.lookup("Int64")], ["selling", r.lookup("Asset")], ["buying", r.lookup("Asset")], ["amount", r.lookup("Int64")], ["price", r.lookup("Price")], ["flags", r.lookup("Uint32")], ["ext", r.lookup("OfferEntryExt")]]), r.union("DataEntryExt", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()]], arms: {} }), r.struct("DataEntry", [["accountId", r.lookup("AccountId")], ["dataName", r.lookup("String64")], ["dataValue", r.lookup("DataValue")], ["ext", r.lookup("DataEntryExt")]]), r.enum("ClaimPredicateType", { claimPredicateUnconditional: 0, claimPredicateAnd: 1, claimPredicateOr: 2, claimPredicateNot: 3, claimPredicateBeforeAbsoluteTime: 4, claimPredicateBeforeRelativeTime: 5 }), r.union("ClaimPredicate", { switchOn: r.lookup("ClaimPredicateType"), switchName: "type", switches: [["claimPredicateUnconditional", r.void()], ["claimPredicateAnd", "andPredicates"], ["claimPredicateOr", "orPredicates"], ["claimPredicateNot", "notPredicate"], ["claimPredicateBeforeAbsoluteTime", "absBefore"], ["claimPredicateBeforeRelativeTime", "relBefore"]], arms: { andPredicates: r.varArray(r.lookup("ClaimPredicate"), 2), orPredicates: r.varArray(r.lookup("ClaimPredicate"), 2), notPredicate: r.option(r.lookup("ClaimPredicate")), absBefore: r.lookup("Int64"), relBefore: r.lookup("Int64") } }), r.enum("ClaimantType", { claimantTypeV0: 0 }), r.struct("ClaimantV0", [["destination", r.lookup("AccountId")], ["predicate", r.lookup("ClaimPredicate")]]), r.union("Claimant", { switchOn: r.lookup("ClaimantType"), switchName: "type", switches: [["claimantTypeV0", "v0"]], arms: { v0: r.lookup("ClaimantV0") } }), r.enum("ClaimableBalanceIdType", { claimableBalanceIdTypeV0: 0 }), r.union("ClaimableBalanceId", { switchOn: r.lookup("ClaimableBalanceIdType"), switchName: "type", switches: [["claimableBalanceIdTypeV0", "v0"]], arms: { v0: r.lookup("Hash") } }), r.enum("ClaimableBalanceFlags", { claimableBalanceClawbackEnabledFlag: 1 }), r.const("MASK_CLAIMABLE_BALANCE_FLAGS", 1), r.union("ClaimableBalanceEntryExtensionV1Ext", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()]], arms: {} }), r.struct("ClaimableBalanceEntryExtensionV1", [["ext", r.lookup("ClaimableBalanceEntryExtensionV1Ext")], ["flags", r.lookup("Uint32")]]), r.union("ClaimableBalanceEntryExt", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()], [1, "v1"]], arms: { v1: r.lookup("ClaimableBalanceEntryExtensionV1") } }), r.struct("ClaimableBalanceEntry", [["balanceId", r.lookup("ClaimableBalanceId")], ["claimants", r.varArray(r.lookup("Claimant"), 10)], ["asset", r.lookup("Asset")], ["amount", r.lookup("Int64")], ["ext", r.lookup("ClaimableBalanceEntryExt")]]), r.struct("LiquidityPoolConstantProductParameters", [["assetA", r.lookup("Asset")], ["assetB", r.lookup("Asset")], ["fee", r.lookup("Int32")]]), r.struct("LiquidityPoolEntryConstantProduct", [["params", r.lookup("LiquidityPoolConstantProductParameters")], ["reserveA", r.lookup("Int64")], ["reserveB", r.lookup("Int64")], ["totalPoolShares", r.lookup("Int64")], ["poolSharesTrustLineCount", r.lookup("Int64")]]), r.union("LiquidityPoolEntryBody", { switchOn: r.lookup("LiquidityPoolType"), switchName: "type", switches: [["liquidityPoolConstantProduct", "constantProduct"]], arms: { constantProduct: r.lookup("LiquidityPoolEntryConstantProduct") } }), r.struct("LiquidityPoolEntry", [["liquidityPoolId", r.lookup("PoolId")], ["body", r.lookup("LiquidityPoolEntryBody")]]), r.enum("ContractDataDurability", { temporary: 0, persistent: 1 }), r.struct("ContractDataEntry", [["ext", r.lookup("ExtensionPoint")], ["contract", r.lookup("ScAddress")], ["key", r.lookup("ScVal")], ["durability", r.lookup("ContractDataDurability")], ["val", r.lookup("ScVal")]]), r.struct("ContractCodeCostInputs", [["ext", r.lookup("ExtensionPoint")], ["nInstructions", r.lookup("Uint32")], ["nFunctions", r.lookup("Uint32")], ["nGlobals", r.lookup("Uint32")], ["nTableEntries", r.lookup("Uint32")], ["nTypes", r.lookup("Uint32")], ["nDataSegments", r.lookup("Uint32")], ["nElemSegments", r.lookup("Uint32")], ["nImports", r.lookup("Uint32")], ["nExports", r.lookup("Uint32")], ["nDataSegmentBytes", r.lookup("Uint32")]]), r.struct("ContractCodeEntryV1", [["ext", r.lookup("ExtensionPoint")], ["costInputs", r.lookup("ContractCodeCostInputs")]]), r.union("ContractCodeEntryExt", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()], [1, "v1"]], arms: { v1: r.lookup("ContractCodeEntryV1") } }), r.struct("ContractCodeEntry", [["ext", r.lookup("ContractCodeEntryExt")], ["hash", r.lookup("Hash")], ["code", r.varOpaque()]]), r.struct("TtlEntry", [["keyHash", r.lookup("Hash")], ["liveUntilLedgerSeq", r.lookup("Uint32")]]), r.union("LedgerEntryExtensionV1Ext", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()]], arms: {} }), r.struct("LedgerEntryExtensionV1", [["sponsoringId", r.lookup("SponsorshipDescriptor")], ["ext", r.lookup("LedgerEntryExtensionV1Ext")]]), r.union("LedgerEntryData", { switchOn: r.lookup("LedgerEntryType"), switchName: "type", switches: [["account", "account"], ["trustline", "trustLine"], ["offer", "offer"], ["data", "data"], ["claimableBalance", "claimableBalance"], ["liquidityPool", "liquidityPool"], ["contractData", "contractData"], ["contractCode", "contractCode"], ["configSetting", "configSetting"], ["ttl", "ttl"]], arms: { account: r.lookup("AccountEntry"), trustLine: r.lookup("TrustLineEntry"), offer: r.lookup("OfferEntry"), data: r.lookup("DataEntry"), claimableBalance: r.lookup("ClaimableBalanceEntry"), liquidityPool: r.lookup("LiquidityPoolEntry"), contractData: r.lookup("ContractDataEntry"), contractCode: r.lookup("ContractCodeEntry"), configSetting: r.lookup("ConfigSettingEntry"), ttl: r.lookup("TtlEntry") } }), r.union("LedgerEntryExt", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()], [1, "v1"]], arms: { v1: r.lookup("LedgerEntryExtensionV1") } }), r.struct("LedgerEntry", [["lastModifiedLedgerSeq", r.lookup("Uint32")], ["data", r.lookup("LedgerEntryData")], ["ext", r.lookup("LedgerEntryExt")]]), r.struct("LedgerKeyAccount", [["accountId", r.lookup("AccountId")]]), r.struct("LedgerKeyTrustLine", [["accountId", r.lookup("AccountId")], ["asset", r.lookup("TrustLineAsset")]]), r.struct("LedgerKeyOffer", [["sellerId", r.lookup("AccountId")], ["offerId", r.lookup("Int64")]]), r.struct("LedgerKeyData", [["accountId", r.lookup("AccountId")], ["dataName", r.lookup("String64")]]), r.struct("LedgerKeyClaimableBalance", [["balanceId", r.lookup("ClaimableBalanceId")]]), r.struct("LedgerKeyLiquidityPool", [["liquidityPoolId", r.lookup("PoolId")]]), r.struct("LedgerKeyContractData", [["contract", r.lookup("ScAddress")], ["key", r.lookup("ScVal")], ["durability", r.lookup("ContractDataDurability")]]), r.struct("LedgerKeyContractCode", [["hash", r.lookup("Hash")]]), r.struct("LedgerKeyConfigSetting", [["configSettingId", r.lookup("ConfigSettingId")]]), r.struct("LedgerKeyTtl", [["keyHash", r.lookup("Hash")]]), r.union("LedgerKey", { switchOn: r.lookup("LedgerEntryType"), switchName: "type", switches: [["account", "account"], ["trustline", "trustLine"], ["offer", "offer"], ["data", "data"], ["claimableBalance", "claimableBalance"], ["liquidityPool", "liquidityPool"], ["contractData", "contractData"], ["contractCode", "contractCode"], ["configSetting", "configSetting"], ["ttl", "ttl"]], arms: { account: r.lookup("LedgerKeyAccount"), trustLine: r.lookup("LedgerKeyTrustLine"), offer: r.lookup("LedgerKeyOffer"), data: r.lookup("LedgerKeyData"), claimableBalance: r.lookup("LedgerKeyClaimableBalance"), liquidityPool: r.lookup("LedgerKeyLiquidityPool"), contractData: r.lookup("LedgerKeyContractData"), contractCode: r.lookup("LedgerKeyContractCode"), configSetting: r.lookup("LedgerKeyConfigSetting"), ttl: r.lookup("LedgerKeyTtl") } }), r.enum("EnvelopeType", { envelopeTypeTxV0: 0, envelopeTypeScp: 1, envelopeTypeTx: 2, envelopeTypeAuth: 3, envelopeTypeScpvalue: 4, envelopeTypeTxFeeBump: 5, envelopeTypeOpId: 6, envelopeTypePoolRevokeOpId: 7, envelopeTypeContractId: 8, envelopeTypeSorobanAuthorization: 9 }), r.enum("BucketListType", { live: 0, hotArchive: 1, coldArchive: 2 }), r.enum("BucketEntryType", { metaentry: -1, liveentry: 0, deadentry: 1, initentry: 2 }), r.enum("HotArchiveBucketEntryType", { hotArchiveMetaentry: -1, hotArchiveArchived: 0, hotArchiveLive: 1, hotArchiveDeleted: 2 }), r.enum("ColdArchiveBucketEntryType", { coldArchiveMetaentry: -1, coldArchiveArchivedLeaf: 0, coldArchiveDeletedLeaf: 1, coldArchiveBoundaryLeaf: 2, coldArchiveHash: 3 }), r.union("BucketMetadataExt", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()], [1, "bucketListType"]], arms: { bucketListType: r.lookup("BucketListType") } }), r.struct("BucketMetadata", [["ledgerVersion", r.lookup("Uint32")], ["ext", r.lookup("BucketMetadataExt")]]), r.union("BucketEntry", { switchOn: r.lookup("BucketEntryType"), switchName: "type", switches: [["liveentry", "liveEntry"], ["initentry", "liveEntry"], ["deadentry", "deadEntry"], ["metaentry", "metaEntry"]], arms: { liveEntry: r.lookup("LedgerEntry"), deadEntry: r.lookup("LedgerKey"), metaEntry: r.lookup("BucketMetadata") } }), r.union("HotArchiveBucketEntry", { switchOn: r.lookup("HotArchiveBucketEntryType"), switchName: "type", switches: [["hotArchiveArchived", "archivedEntry"], ["hotArchiveLive", "key"], ["hotArchiveDeleted", "key"], ["hotArchiveMetaentry", "metaEntry"]], arms: { archivedEntry: r.lookup("LedgerEntry"), key: r.lookup("LedgerKey"), metaEntry: r.lookup("BucketMetadata") } }), r.struct("ColdArchiveArchivedLeaf", [["index", r.lookup("Uint32")], ["archivedEntry", r.lookup("LedgerEntry")]]), r.struct("ColdArchiveDeletedLeaf", [["index", r.lookup("Uint32")], ["deletedKey", r.lookup("LedgerKey")]]), r.struct("ColdArchiveBoundaryLeaf", [["index", r.lookup("Uint32")], ["isLowerBound", r.bool()]]), r.struct("ColdArchiveHashEntry", [["index", r.lookup("Uint32")], ["level", r.lookup("Uint32")], ["hash", r.lookup("Hash")]]), r.union("ColdArchiveBucketEntry", { switchOn: r.lookup("ColdArchiveBucketEntryType"), switchName: "type", switches: [["coldArchiveMetaentry", "metaEntry"], ["coldArchiveArchivedLeaf", "archivedLeaf"], ["coldArchiveDeletedLeaf", "deletedLeaf"], ["coldArchiveBoundaryLeaf", "boundaryLeaf"], ["coldArchiveHash", "hashEntry"]], arms: { metaEntry: r.lookup("BucketMetadata"), archivedLeaf: r.lookup("ColdArchiveArchivedLeaf"), deletedLeaf: r.lookup("ColdArchiveDeletedLeaf"), boundaryLeaf: r.lookup("ColdArchiveBoundaryLeaf"), hashEntry: r.lookup("ColdArchiveHashEntry") } }), r.typedef("UpgradeType", r.varOpaque(128)), r.enum("StellarValueType", { stellarValueBasic: 0, stellarValueSigned: 1 }), r.struct("LedgerCloseValueSignature", [["nodeId", r.lookup("NodeId")], ["signature", r.lookup("Signature")]]), r.union("StellarValueExt", { switchOn: r.lookup("StellarValueType"), switchName: "v", switches: [["stellarValueBasic", r.void()], ["stellarValueSigned", "lcValueSignature"]], arms: { lcValueSignature: r.lookup("LedgerCloseValueSignature") } }), r.struct("StellarValue", [["txSetHash", r.lookup("Hash")], ["closeTime", r.lookup("TimePoint")], ["upgrades", r.varArray(r.lookup("UpgradeType"), 6)], ["ext", r.lookup("StellarValueExt")]]), r.const("MASK_LEDGER_HEADER_FLAGS", 7), r.enum("LedgerHeaderFlags", { disableLiquidityPoolTradingFlag: 1, disableLiquidityPoolDepositFlag: 2, disableLiquidityPoolWithdrawalFlag: 4 }), r.union("LedgerHeaderExtensionV1Ext", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()]], arms: {} }), r.struct("LedgerHeaderExtensionV1", [["flags", r.lookup("Uint32")], ["ext", r.lookup("LedgerHeaderExtensionV1Ext")]]), r.union("LedgerHeaderExt", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()], [1, "v1"]], arms: { v1: r.lookup("LedgerHeaderExtensionV1") } }), r.struct("LedgerHeader", [["ledgerVersion", r.lookup("Uint32")], ["previousLedgerHash", r.lookup("Hash")], ["scpValue", r.lookup("StellarValue")], ["txSetResultHash", r.lookup("Hash")], ["bucketListHash", r.lookup("Hash")], ["ledgerSeq", r.lookup("Uint32")], ["totalCoins", r.lookup("Int64")], ["feePool", r.lookup("Int64")], ["inflationSeq", r.lookup("Uint32")], ["idPool", r.lookup("Uint64")], ["baseFee", r.lookup("Uint32")], ["baseReserve", r.lookup("Uint32")], ["maxTxSetSize", r.lookup("Uint32")], ["skipList", r.array(r.lookup("Hash"), 4)], ["ext", r.lookup("LedgerHeaderExt")]]), r.enum("LedgerUpgradeType", { ledgerUpgradeVersion: 1, ledgerUpgradeBaseFee: 2, ledgerUpgradeMaxTxSetSize: 3, ledgerUpgradeBaseReserve: 4, ledgerUpgradeFlags: 5, ledgerUpgradeConfig: 6, ledgerUpgradeMaxSorobanTxSetSize: 7 }), r.struct("ConfigUpgradeSetKey", [["contractId", r.lookup("Hash")], ["contentHash", r.lookup("Hash")]]), r.union("LedgerUpgrade", { switchOn: r.lookup("LedgerUpgradeType"), switchName: "type", switches: [["ledgerUpgradeVersion", "newLedgerVersion"], ["ledgerUpgradeBaseFee", "newBaseFee"], ["ledgerUpgradeMaxTxSetSize", "newMaxTxSetSize"], ["ledgerUpgradeBaseReserve", "newBaseReserve"], ["ledgerUpgradeFlags", "newFlags"], ["ledgerUpgradeConfig", "newConfig"], ["ledgerUpgradeMaxSorobanTxSetSize", "newMaxSorobanTxSetSize"]], arms: { newLedgerVersion: r.lookup("Uint32"), newBaseFee: r.lookup("Uint32"), newMaxTxSetSize: r.lookup("Uint32"), newBaseReserve: r.lookup("Uint32"), newFlags: r.lookup("Uint32"), newConfig: r.lookup("ConfigUpgradeSetKey"), newMaxSorobanTxSetSize: r.lookup("Uint32") } }), r.struct("ConfigUpgradeSet", [["updatedEntry", r.varArray(r.lookup("ConfigSettingEntry"), 2147483647)]]), r.enum("TxSetComponentType", { txsetCompTxsMaybeDiscountedFee: 0 }), r.struct("TxSetComponentTxsMaybeDiscountedFee", [["baseFee", r.option(r.lookup("Int64"))], ["txes", r.varArray(r.lookup("TransactionEnvelope"), 2147483647)]]), r.union("TxSetComponent", { switchOn: r.lookup("TxSetComponentType"), switchName: "type", switches: [["txsetCompTxsMaybeDiscountedFee", "txsMaybeDiscountedFee"]], arms: { txsMaybeDiscountedFee: r.lookup("TxSetComponentTxsMaybeDiscountedFee") } }), r.union("TransactionPhase", { switchOn: r.int(), switchName: "v", switches: [[0, "v0Components"]], arms: { v0Components: r.varArray(r.lookup("TxSetComponent"), 2147483647) } }), r.struct("TransactionSet", [["previousLedgerHash", r.lookup("Hash")], ["txes", r.varArray(r.lookup("TransactionEnvelope"), 2147483647)]]), r.struct("TransactionSetV1", [["previousLedgerHash", r.lookup("Hash")], ["phases", r.varArray(r.lookup("TransactionPhase"), 2147483647)]]), r.union("GeneralizedTransactionSet", { switchOn: r.int(), switchName: "v", switches: [[1, "v1TxSet"]], arms: { v1TxSet: r.lookup("TransactionSetV1") } }), r.struct("TransactionResultPair", [["transactionHash", r.lookup("Hash")], ["result", r.lookup("TransactionResult")]]), r.struct("TransactionResultSet", [["results", r.varArray(r.lookup("TransactionResultPair"), 2147483647)]]), r.union("TransactionHistoryEntryExt", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()], [1, "generalizedTxSet"]], arms: { generalizedTxSet: r.lookup("GeneralizedTransactionSet") } }), r.struct("TransactionHistoryEntry", [["ledgerSeq", r.lookup("Uint32")], ["txSet", r.lookup("TransactionSet")], ["ext", r.lookup("TransactionHistoryEntryExt")]]), r.union("TransactionHistoryResultEntryExt", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()]], arms: {} }), r.struct("TransactionHistoryResultEntry", [["ledgerSeq", r.lookup("Uint32")], ["txResultSet", r.lookup("TransactionResultSet")], ["ext", r.lookup("TransactionHistoryResultEntryExt")]]), r.union("LedgerHeaderHistoryEntryExt", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()]], arms: {} }), r.struct("LedgerHeaderHistoryEntry", [["hash", r.lookup("Hash")], ["header", r.lookup("LedgerHeader")], ["ext", r.lookup("LedgerHeaderHistoryEntryExt")]]), r.struct("LedgerScpMessages", [["ledgerSeq", r.lookup("Uint32")], ["messages", r.varArray(r.lookup("ScpEnvelope"), 2147483647)]]), r.struct("ScpHistoryEntryV0", [["quorumSets", r.varArray(r.lookup("ScpQuorumSet"), 2147483647)], ["ledgerMessages", r.lookup("LedgerScpMessages")]]), r.union("ScpHistoryEntry", { switchOn: r.int(), switchName: "v", switches: [[0, "v0"]], arms: { v0: r.lookup("ScpHistoryEntryV0") } }), r.enum("LedgerEntryChangeType", { ledgerEntryCreated: 0, ledgerEntryUpdated: 1, ledgerEntryRemoved: 2, ledgerEntryState: 3 }), r.union("LedgerEntryChange", { switchOn: r.lookup("LedgerEntryChangeType"), switchName: "type", switches: [["ledgerEntryCreated", "created"], ["ledgerEntryUpdated", "updated"], ["ledgerEntryRemoved", "removed"], ["ledgerEntryState", "state"]], arms: { created: r.lookup("LedgerEntry"), updated: r.lookup("LedgerEntry"), removed: r.lookup("LedgerKey"), state: r.lookup("LedgerEntry") } }), r.typedef("LedgerEntryChanges", r.varArray(r.lookup("LedgerEntryChange"), 2147483647)), r.struct("OperationMeta", [["changes", r.lookup("LedgerEntryChanges")]]), r.struct("TransactionMetaV1", [["txChanges", r.lookup("LedgerEntryChanges")], ["operations", r.varArray(r.lookup("OperationMeta"), 2147483647)]]), r.struct("TransactionMetaV2", [["txChangesBefore", r.lookup("LedgerEntryChanges")], ["operations", r.varArray(r.lookup("OperationMeta"), 2147483647)], ["txChangesAfter", r.lookup("LedgerEntryChanges")]]), r.enum("ContractEventType", { system: 0, contract: 1, diagnostic: 2 }), r.struct("ContractEventV0", [["topics", r.varArray(r.lookup("ScVal"), 2147483647)], ["data", r.lookup("ScVal")]]), r.union("ContractEventBody", { switchOn: r.int(), switchName: "v", switches: [[0, "v0"]], arms: { v0: r.lookup("ContractEventV0") } }), r.struct("ContractEvent", [["ext", r.lookup("ExtensionPoint")], ["contractId", r.option(r.lookup("Hash"))], ["type", r.lookup("ContractEventType")], ["body", r.lookup("ContractEventBody")]]), r.struct("DiagnosticEvent", [["inSuccessfulContractCall", r.bool()], ["event", r.lookup("ContractEvent")]]), r.typedef("DiagnosticEvents", r.varArray(r.lookup("DiagnosticEvent"), 2147483647)), r.struct("SorobanTransactionMetaExtV1", [["ext", r.lookup("ExtensionPoint")], ["totalNonRefundableResourceFeeCharged", r.lookup("Int64")], ["totalRefundableResourceFeeCharged", r.lookup("Int64")], ["rentFeeCharged", r.lookup("Int64")]]), r.union("SorobanTransactionMetaExt", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()], [1, "v1"]], arms: { v1: r.lookup("SorobanTransactionMetaExtV1") } }), r.struct("SorobanTransactionMeta", [["ext", r.lookup("SorobanTransactionMetaExt")], ["events", r.varArray(r.lookup("ContractEvent"), 2147483647)], ["returnValue", r.lookup("ScVal")], ["diagnosticEvents", r.varArray(r.lookup("DiagnosticEvent"), 2147483647)]]), r.struct("TransactionMetaV3", [["ext", r.lookup("ExtensionPoint")], ["txChangesBefore", r.lookup("LedgerEntryChanges")], ["operations", r.varArray(r.lookup("OperationMeta"), 2147483647)], ["txChangesAfter", r.lookup("LedgerEntryChanges")], ["sorobanMeta", r.option(r.lookup("SorobanTransactionMeta"))]]), r.struct("InvokeHostFunctionSuccessPreImage", [["returnValue", r.lookup("ScVal")], ["events", r.varArray(r.lookup("ContractEvent"), 2147483647)]]), r.union("TransactionMeta", { switchOn: r.int(), switchName: "v", switches: [[0, "operations"], [1, "v1"], [2, "v2"], [3, "v3"]], arms: { operations: r.varArray(r.lookup("OperationMeta"), 2147483647), v1: r.lookup("TransactionMetaV1"), v2: r.lookup("TransactionMetaV2"), v3: r.lookup("TransactionMetaV3") } }), r.struct("TransactionResultMeta", [["result", r.lookup("TransactionResultPair")], ["feeProcessing", r.lookup("LedgerEntryChanges")], ["txApplyProcessing", r.lookup("TransactionMeta")]]), r.struct("UpgradeEntryMeta", [["upgrade", r.lookup("LedgerUpgrade")], ["changes", r.lookup("LedgerEntryChanges")]]), r.struct("LedgerCloseMetaV0", [["ledgerHeader", r.lookup("LedgerHeaderHistoryEntry")], ["txSet", r.lookup("TransactionSet")], ["txProcessing", r.varArray(r.lookup("TransactionResultMeta"), 2147483647)], ["upgradesProcessing", r.varArray(r.lookup("UpgradeEntryMeta"), 2147483647)], ["scpInfo", r.varArray(r.lookup("ScpHistoryEntry"), 2147483647)]]), r.struct("LedgerCloseMetaExtV1", [["ext", r.lookup("ExtensionPoint")], ["sorobanFeeWrite1Kb", r.lookup("Int64")]]), r.union("LedgerCloseMetaExt", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()], [1, "v1"]], arms: { v1: r.lookup("LedgerCloseMetaExtV1") } }), r.struct("LedgerCloseMetaV1", [["ext", r.lookup("LedgerCloseMetaExt")], ["ledgerHeader", r.lookup("LedgerHeaderHistoryEntry")], ["txSet", r.lookup("GeneralizedTransactionSet")], ["txProcessing", r.varArray(r.lookup("TransactionResultMeta"), 2147483647)], ["upgradesProcessing", r.varArray(r.lookup("UpgradeEntryMeta"), 2147483647)], ["scpInfo", r.varArray(r.lookup("ScpHistoryEntry"), 2147483647)], ["totalByteSizeOfBucketList", r.lookup("Uint64")], ["evictedTemporaryLedgerKeys", r.varArray(r.lookup("LedgerKey"), 2147483647)], ["evictedPersistentLedgerEntries", r.varArray(r.lookup("LedgerEntry"), 2147483647)]]), r.union("LedgerCloseMeta", { switchOn: r.int(), switchName: "v", switches: [[0, "v0"], [1, "v1"]], arms: { v0: r.lookup("LedgerCloseMetaV0"), v1: r.lookup("LedgerCloseMetaV1") } }), r.enum("ErrorCode", { errMisc: 0, errData: 1, errConf: 2, errAuth: 3, errLoad: 4 }), r.struct("Error", [["code", r.lookup("ErrorCode")], ["msg", r.string(100)]]), r.struct("SendMore", [["numMessages", r.lookup("Uint32")]]), r.struct("SendMoreExtended", [["numMessages", r.lookup("Uint32")], ["numBytes", r.lookup("Uint32")]]), r.struct("AuthCert", [["pubkey", r.lookup("Curve25519Public")], ["expiration", r.lookup("Uint64")], ["sig", r.lookup("Signature")]]), r.struct("Hello", [["ledgerVersion", r.lookup("Uint32")], ["overlayVersion", r.lookup("Uint32")], ["overlayMinVersion", r.lookup("Uint32")], ["networkId", r.lookup("Hash")], ["versionStr", r.string(100)], ["listeningPort", r.int()], ["peerId", r.lookup("NodeId")], ["cert", r.lookup("AuthCert")], ["nonce", r.lookup("Uint256")]]), r.const("AUTH_MSG_FLAG_FLOW_CONTROL_BYTES_REQUESTED", 200), r.struct("Auth", [["flags", r.int()]]), r.enum("IpAddrType", { iPv4: 0, iPv6: 1 }), r.union("PeerAddressIp", { switchOn: r.lookup("IpAddrType"), switchName: "type", switches: [["iPv4", "ipv4"], ["iPv6", "ipv6"]], arms: { ipv4: r.opaque(4), ipv6: r.opaque(16) } }), r.struct("PeerAddress", [["ip", r.lookup("PeerAddressIp")], ["port", r.lookup("Uint32")], ["numFailures", r.lookup("Uint32")]]), r.enum("MessageType", { errorMsg: 0, auth: 2, dontHave: 3, getPeers: 4, peers: 5, getTxSet: 6, txSet: 7, generalizedTxSet: 17, transaction: 8, getScpQuorumset: 9, scpQuorumset: 10, scpMessage: 11, getScpState: 12, hello: 13, surveyRequest: 14, surveyResponse: 15, sendMore: 16, sendMoreExtended: 20, floodAdvert: 18, floodDemand: 19, timeSlicedSurveyRequest: 21, timeSlicedSurveyResponse: 22, timeSlicedSurveyStartCollecting: 23, timeSlicedSurveyStopCollecting: 24 }), r.struct("DontHave", [["type", r.lookup("MessageType")], ["reqHash", r.lookup("Uint256")]]), r.enum("SurveyMessageCommandType", { surveyTopology: 0, timeSlicedSurveyTopology: 1 }), r.enum("SurveyMessageResponseType", { surveyTopologyResponseV0: 0, surveyTopologyResponseV1: 1, surveyTopologyResponseV2: 2 }), r.struct("TimeSlicedSurveyStartCollectingMessage", [["surveyorId", r.lookup("NodeId")], ["nonce", r.lookup("Uint32")], ["ledgerNum", r.lookup("Uint32")]]), r.struct("SignedTimeSlicedSurveyStartCollectingMessage", [["signature", r.lookup("Signature")], ["startCollecting", r.lookup("TimeSlicedSurveyStartCollectingMessage")]]), r.struct("TimeSlicedSurveyStopCollectingMessage", [["surveyorId", r.lookup("NodeId")], ["nonce", r.lookup("Uint32")], ["ledgerNum", r.lookup("Uint32")]]), r.struct("SignedTimeSlicedSurveyStopCollectingMessage", [["signature", r.lookup("Signature")], ["stopCollecting", r.lookup("TimeSlicedSurveyStopCollectingMessage")]]), r.struct("SurveyRequestMessage", [["surveyorPeerId", r.lookup("NodeId")], ["surveyedPeerId", r.lookup("NodeId")], ["ledgerNum", r.lookup("Uint32")], ["encryptionKey", r.lookup("Curve25519Public")], ["commandType", r.lookup("SurveyMessageCommandType")]]), r.struct("TimeSlicedSurveyRequestMessage", [["request", r.lookup("SurveyRequestMessage")], ["nonce", r.lookup("Uint32")], ["inboundPeersIndex", r.lookup("Uint32")], ["outboundPeersIndex", r.lookup("Uint32")]]), r.struct("SignedSurveyRequestMessage", [["requestSignature", r.lookup("Signature")], ["request", r.lookup("SurveyRequestMessage")]]), r.struct("SignedTimeSlicedSurveyRequestMessage", [["requestSignature", r.lookup("Signature")], ["request", r.lookup("TimeSlicedSurveyRequestMessage")]]), r.typedef("EncryptedBody", r.varOpaque(64e3)), r.struct("SurveyResponseMessage", [["surveyorPeerId", r.lookup("NodeId")], ["surveyedPeerId", r.lookup("NodeId")], ["ledgerNum", r.lookup("Uint32")], ["commandType", r.lookup("SurveyMessageCommandType")], ["encryptedBody", r.lookup("EncryptedBody")]]), r.struct("TimeSlicedSurveyResponseMessage", [["response", r.lookup("SurveyResponseMessage")], ["nonce", r.lookup("Uint32")]]), r.struct("SignedSurveyResponseMessage", [["responseSignature", r.lookup("Signature")], ["response", r.lookup("SurveyResponseMessage")]]), r.struct("SignedTimeSlicedSurveyResponseMessage", [["responseSignature", r.lookup("Signature")], ["response", r.lookup("TimeSlicedSurveyResponseMessage")]]), r.struct("PeerStats", [["id", r.lookup("NodeId")], ["versionStr", r.string(100)], ["messagesRead", r.lookup("Uint64")], ["messagesWritten", r.lookup("Uint64")], ["bytesRead", r.lookup("Uint64")], ["bytesWritten", r.lookup("Uint64")], ["secondsConnected", r.lookup("Uint64")], ["uniqueFloodBytesRecv", r.lookup("Uint64")], ["duplicateFloodBytesRecv", r.lookup("Uint64")], ["uniqueFetchBytesRecv", r.lookup("Uint64")], ["duplicateFetchBytesRecv", r.lookup("Uint64")], ["uniqueFloodMessageRecv", r.lookup("Uint64")], ["duplicateFloodMessageRecv", r.lookup("Uint64")], ["uniqueFetchMessageRecv", r.lookup("Uint64")], ["duplicateFetchMessageRecv", r.lookup("Uint64")]]), r.typedef("PeerStatList", r.varArray(r.lookup("PeerStats"), 25)), r.struct("TimeSlicedNodeData", [["addedAuthenticatedPeers", r.lookup("Uint32")], ["droppedAuthenticatedPeers", r.lookup("Uint32")], ["totalInboundPeerCount", r.lookup("Uint32")], ["totalOutboundPeerCount", r.lookup("Uint32")], ["p75ScpFirstToSelfLatencyMs", r.lookup("Uint32")], ["p75ScpSelfToOtherLatencyMs", r.lookup("Uint32")], ["lostSyncCount", r.lookup("Uint32")], ["isValidator", r.bool()], ["maxInboundPeerCount", r.lookup("Uint32")], ["maxOutboundPeerCount", r.lookup("Uint32")]]), r.struct("TimeSlicedPeerData", [["peerStats", r.lookup("PeerStats")], ["averageLatencyMs", r.lookup("Uint32")]]), r.typedef("TimeSlicedPeerDataList", r.varArray(r.lookup("TimeSlicedPeerData"), 25)), r.struct("TopologyResponseBodyV0", [["inboundPeers", r.lookup("PeerStatList")], ["outboundPeers", r.lookup("PeerStatList")], ["totalInboundPeerCount", r.lookup("Uint32")], ["totalOutboundPeerCount", r.lookup("Uint32")]]), r.struct("TopologyResponseBodyV1", [["inboundPeers", r.lookup("PeerStatList")], ["outboundPeers", r.lookup("PeerStatList")], ["totalInboundPeerCount", r.lookup("Uint32")], ["totalOutboundPeerCount", r.lookup("Uint32")], ["maxInboundPeerCount", r.lookup("Uint32")], ["maxOutboundPeerCount", r.lookup("Uint32")]]), r.struct("TopologyResponseBodyV2", [["inboundPeers", r.lookup("TimeSlicedPeerDataList")], ["outboundPeers", r.lookup("TimeSlicedPeerDataList")], ["nodeData", r.lookup("TimeSlicedNodeData")]]), r.union("SurveyResponseBody", { switchOn: r.lookup("SurveyMessageResponseType"), switchName: "type", switches: [["surveyTopologyResponseV0", "topologyResponseBodyV0"], ["surveyTopologyResponseV1", "topologyResponseBodyV1"], ["surveyTopologyResponseV2", "topologyResponseBodyV2"]], arms: { topologyResponseBodyV0: r.lookup("TopologyResponseBodyV0"), topologyResponseBodyV1: r.lookup("TopologyResponseBodyV1"), topologyResponseBodyV2: r.lookup("TopologyResponseBodyV2") } }), r.const("TX_ADVERT_VECTOR_MAX_SIZE", 1e3), r.typedef("TxAdvertVector", r.varArray(r.lookup("Hash"), r.lookup("TX_ADVERT_VECTOR_MAX_SIZE"))), r.struct("FloodAdvert", [["txHashes", r.lookup("TxAdvertVector")]]), r.const("TX_DEMAND_VECTOR_MAX_SIZE", 1e3), r.typedef("TxDemandVector", r.varArray(r.lookup("Hash"), r.lookup("TX_DEMAND_VECTOR_MAX_SIZE"))), r.struct("FloodDemand", [["txHashes", r.lookup("TxDemandVector")]]), r.union("StellarMessage", { switchOn: r.lookup("MessageType"), switchName: "type", switches: [["errorMsg", "error"], ["hello", "hello"], ["auth", "auth"], ["dontHave", "dontHave"], ["getPeers", r.void()], ["peers", "peers"], ["getTxSet", "txSetHash"], ["txSet", "txSet"], ["generalizedTxSet", "generalizedTxSet"], ["transaction", "transaction"], ["surveyRequest", "signedSurveyRequestMessage"], ["surveyResponse", "signedSurveyResponseMessage"], ["timeSlicedSurveyRequest", "signedTimeSlicedSurveyRequestMessage"], ["timeSlicedSurveyResponse", "signedTimeSlicedSurveyResponseMessage"], ["timeSlicedSurveyStartCollecting", "signedTimeSlicedSurveyStartCollectingMessage"], ["timeSlicedSurveyStopCollecting", "signedTimeSlicedSurveyStopCollectingMessage"], ["getScpQuorumset", "qSetHash"], ["scpQuorumset", "qSet"], ["scpMessage", "envelope"], ["getScpState", "getScpLedgerSeq"], ["sendMore", "sendMoreMessage"], ["sendMoreExtended", "sendMoreExtendedMessage"], ["floodAdvert", "floodAdvert"], ["floodDemand", "floodDemand"]], arms: { error: r.lookup("Error"), hello: r.lookup("Hello"), auth: r.lookup("Auth"), dontHave: r.lookup("DontHave"), peers: r.varArray(r.lookup("PeerAddress"), 100), txSetHash: r.lookup("Uint256"), txSet: r.lookup("TransactionSet"), generalizedTxSet: r.lookup("GeneralizedTransactionSet"), transaction: r.lookup("TransactionEnvelope"), signedSurveyRequestMessage: r.lookup("SignedSurveyRequestMessage"), signedSurveyResponseMessage: r.lookup("SignedSurveyResponseMessage"), signedTimeSlicedSurveyRequestMessage: r.lookup("SignedTimeSlicedSurveyRequestMessage"), signedTimeSlicedSurveyResponseMessage: r.lookup("SignedTimeSlicedSurveyResponseMessage"), signedTimeSlicedSurveyStartCollectingMessage: r.lookup("SignedTimeSlicedSurveyStartCollectingMessage"), signedTimeSlicedSurveyStopCollectingMessage: r.lookup("SignedTimeSlicedSurveyStopCollectingMessage"), qSetHash: r.lookup("Uint256"), qSet: r.lookup("ScpQuorumSet"), envelope: r.lookup("ScpEnvelope"), getScpLedgerSeq: r.lookup("Uint32"), sendMoreMessage: r.lookup("SendMore"), sendMoreExtendedMessage: r.lookup("SendMoreExtended"), floodAdvert: r.lookup("FloodAdvert"), floodDemand: r.lookup("FloodDemand") } }), r.struct("AuthenticatedMessageV0", [["sequence", r.lookup("Uint64")], ["message", r.lookup("StellarMessage")], ["mac", r.lookup("HmacSha256Mac")]]), r.union("AuthenticatedMessage", { switchOn: r.lookup("Uint32"), switchName: "v", switches: [[0, "v0"]], arms: { v0: r.lookup("AuthenticatedMessageV0") } }), r.const("MAX_OPS_PER_TX", 100), r.union("LiquidityPoolParameters", { switchOn: r.lookup("LiquidityPoolType"), switchName: "type", switches: [["liquidityPoolConstantProduct", "constantProduct"]], arms: { constantProduct: r.lookup("LiquidityPoolConstantProductParameters") } }), r.struct("MuxedAccountMed25519", [["id", r.lookup("Uint64")], ["ed25519", r.lookup("Uint256")]]), r.union("MuxedAccount", { switchOn: r.lookup("CryptoKeyType"), switchName: "type", switches: [["keyTypeEd25519", "ed25519"], ["keyTypeMuxedEd25519", "med25519"]], arms: { ed25519: r.lookup("Uint256"), med25519: r.lookup("MuxedAccountMed25519") } }), r.struct("DecoratedSignature", [["hint", r.lookup("SignatureHint")], ["signature", r.lookup("Signature")]]), r.enum("OperationType", { createAccount: 0, payment: 1, pathPaymentStrictReceive: 2, manageSellOffer: 3, createPassiveSellOffer: 4, setOptions: 5, changeTrust: 6, allowTrust: 7, accountMerge: 8, inflation: 9, manageData: 10, bumpSequence: 11, manageBuyOffer: 12, pathPaymentStrictSend: 13, createClaimableBalance: 14, claimClaimableBalance: 15, beginSponsoringFutureReserves: 16, endSponsoringFutureReserves: 17, revokeSponsorship: 18, clawback: 19, clawbackClaimableBalance: 20, setTrustLineFlags: 21, liquidityPoolDeposit: 22, liquidityPoolWithdraw: 23, invokeHostFunction: 24, extendFootprintTtl: 25, restoreFootprint: 26 }), r.struct("CreateAccountOp", [["destination", r.lookup("AccountId")], ["startingBalance", r.lookup("Int64")]]), r.struct("PaymentOp", [["destination", r.lookup("MuxedAccount")], ["asset", r.lookup("Asset")], ["amount", r.lookup("Int64")]]), r.struct("PathPaymentStrictReceiveOp", [["sendAsset", r.lookup("Asset")], ["sendMax", r.lookup("Int64")], ["destination", r.lookup("MuxedAccount")], ["destAsset", r.lookup("Asset")], ["destAmount", r.lookup("Int64")], ["path", r.varArray(r.lookup("Asset"), 5)]]), r.struct("PathPaymentStrictSendOp", [["sendAsset", r.lookup("Asset")], ["sendAmount", r.lookup("Int64")], ["destination", r.lookup("MuxedAccount")], ["destAsset", r.lookup("Asset")], ["destMin", r.lookup("Int64")], ["path", r.varArray(r.lookup("Asset"), 5)]]), r.struct("ManageSellOfferOp", [["selling", r.lookup("Asset")], ["buying", r.lookup("Asset")], ["amount", r.lookup("Int64")], ["price", r.lookup("Price")], ["offerId", r.lookup("Int64")]]), r.struct("ManageBuyOfferOp", [["selling", r.lookup("Asset")], ["buying", r.lookup("Asset")], ["buyAmount", r.lookup("Int64")], ["price", r.lookup("Price")], ["offerId", r.lookup("Int64")]]), r.struct("CreatePassiveSellOfferOp", [["selling", r.lookup("Asset")], ["buying", r.lookup("Asset")], ["amount", r.lookup("Int64")], ["price", r.lookup("Price")]]), r.struct("SetOptionsOp", [["inflationDest", r.option(r.lookup("AccountId"))], ["clearFlags", r.option(r.lookup("Uint32"))], ["setFlags", r.option(r.lookup("Uint32"))], ["masterWeight", r.option(r.lookup("Uint32"))], ["lowThreshold", r.option(r.lookup("Uint32"))], ["medThreshold", r.option(r.lookup("Uint32"))], ["highThreshold", r.option(r.lookup("Uint32"))], ["homeDomain", r.option(r.lookup("String32"))], ["signer", r.option(r.lookup("Signer"))]]), r.union("ChangeTrustAsset", { switchOn: r.lookup("AssetType"), switchName: "type", switches: [["assetTypeNative", r.void()], ["assetTypeCreditAlphanum4", "alphaNum4"], ["assetTypeCreditAlphanum12", "alphaNum12"], ["assetTypePoolShare", "liquidityPool"]], arms: { alphaNum4: r.lookup("AlphaNum4"), alphaNum12: r.lookup("AlphaNum12"), liquidityPool: r.lookup("LiquidityPoolParameters") } }), r.struct("ChangeTrustOp", [["line", r.lookup("ChangeTrustAsset")], ["limit", r.lookup("Int64")]]), r.struct("AllowTrustOp", [["trustor", r.lookup("AccountId")], ["asset", r.lookup("AssetCode")], ["authorize", r.lookup("Uint32")]]), r.struct("ManageDataOp", [["dataName", r.lookup("String64")], ["dataValue", r.option(r.lookup("DataValue"))]]), r.struct("BumpSequenceOp", [["bumpTo", r.lookup("SequenceNumber")]]), r.struct("CreateClaimableBalanceOp", [["asset", r.lookup("Asset")], ["amount", r.lookup("Int64")], ["claimants", r.varArray(r.lookup("Claimant"), 10)]]), r.struct("ClaimClaimableBalanceOp", [["balanceId", r.lookup("ClaimableBalanceId")]]), r.struct("BeginSponsoringFutureReservesOp", [["sponsoredId", r.lookup("AccountId")]]), r.enum("RevokeSponsorshipType", { revokeSponsorshipLedgerEntry: 0, revokeSponsorshipSigner: 1 }), r.struct("RevokeSponsorshipOpSigner", [["accountId", r.lookup("AccountId")], ["signerKey", r.lookup("SignerKey")]]), r.union("RevokeSponsorshipOp", { switchOn: r.lookup("RevokeSponsorshipType"), switchName: "type", switches: [["revokeSponsorshipLedgerEntry", "ledgerKey"], ["revokeSponsorshipSigner", "signer"]], arms: { ledgerKey: r.lookup("LedgerKey"), signer: r.lookup("RevokeSponsorshipOpSigner") } }), r.struct("ClawbackOp", [["asset", r.lookup("Asset")], ["from", r.lookup("MuxedAccount")], ["amount", r.lookup("Int64")]]), r.struct("ClawbackClaimableBalanceOp", [["balanceId", r.lookup("ClaimableBalanceId")]]), r.struct("SetTrustLineFlagsOp", [["trustor", r.lookup("AccountId")], ["asset", r.lookup("Asset")], ["clearFlags", r.lookup("Uint32")], ["setFlags", r.lookup("Uint32")]]), r.const("LIQUIDITY_POOL_FEE_V18", 30), r.struct("LiquidityPoolDepositOp", [["liquidityPoolId", r.lookup("PoolId")], ["maxAmountA", r.lookup("Int64")], ["maxAmountB", r.lookup("Int64")], ["minPrice", r.lookup("Price")], ["maxPrice", r.lookup("Price")]]), r.struct("LiquidityPoolWithdrawOp", [["liquidityPoolId", r.lookup("PoolId")], ["amount", r.lookup("Int64")], ["minAmountA", r.lookup("Int64")], ["minAmountB", r.lookup("Int64")]]), r.enum("HostFunctionType", { hostFunctionTypeInvokeContract: 0, hostFunctionTypeCreateContract: 1, hostFunctionTypeUploadContractWasm: 2, hostFunctionTypeCreateContractV2: 3 }), r.enum("ContractIdPreimageType", { contractIdPreimageFromAddress: 0, contractIdPreimageFromAsset: 1 }), r.struct("ContractIdPreimageFromAddress", [["address", r.lookup("ScAddress")], ["salt", r.lookup("Uint256")]]), r.union("ContractIdPreimage", { switchOn: r.lookup("ContractIdPreimageType"), switchName: "type", switches: [["contractIdPreimageFromAddress", "fromAddress"], ["contractIdPreimageFromAsset", "fromAsset"]], arms: { fromAddress: r.lookup("ContractIdPreimageFromAddress"), fromAsset: r.lookup("Asset") } }), r.struct("CreateContractArgs", [["contractIdPreimage", r.lookup("ContractIdPreimage")], ["executable", r.lookup("ContractExecutable")]]), r.struct("CreateContractArgsV2", [["contractIdPreimage", r.lookup("ContractIdPreimage")], ["executable", r.lookup("ContractExecutable")], ["constructorArgs", r.varArray(r.lookup("ScVal"), 2147483647)]]), r.struct("InvokeContractArgs", [["contractAddress", r.lookup("ScAddress")], ["functionName", r.lookup("ScSymbol")], ["args", r.varArray(r.lookup("ScVal"), 2147483647)]]), r.union("HostFunction", { switchOn: r.lookup("HostFunctionType"), switchName: "type", switches: [["hostFunctionTypeInvokeContract", "invokeContract"], ["hostFunctionTypeCreateContract", "createContract"], ["hostFunctionTypeUploadContractWasm", "wasm"], ["hostFunctionTypeCreateContractV2", "createContractV2"]], arms: { invokeContract: r.lookup("InvokeContractArgs"), createContract: r.lookup("CreateContractArgs"), wasm: r.varOpaque(), createContractV2: r.lookup("CreateContractArgsV2") } }), r.enum("SorobanAuthorizedFunctionType", { sorobanAuthorizedFunctionTypeContractFn: 0, sorobanAuthorizedFunctionTypeCreateContractHostFn: 1, sorobanAuthorizedFunctionTypeCreateContractV2HostFn: 2 }), r.union("SorobanAuthorizedFunction", { switchOn: r.lookup("SorobanAuthorizedFunctionType"), switchName: "type", switches: [["sorobanAuthorizedFunctionTypeContractFn", "contractFn"], ["sorobanAuthorizedFunctionTypeCreateContractHostFn", "createContractHostFn"], ["sorobanAuthorizedFunctionTypeCreateContractV2HostFn", "createContractV2HostFn"]], arms: { contractFn: r.lookup("InvokeContractArgs"), createContractHostFn: r.lookup("CreateContractArgs"), createContractV2HostFn: r.lookup("CreateContractArgsV2") } }), r.struct("SorobanAuthorizedInvocation", [["function", r.lookup("SorobanAuthorizedFunction")], ["subInvocations", r.varArray(r.lookup("SorobanAuthorizedInvocation"), 2147483647)]]), r.struct("SorobanAddressCredentials", [["address", r.lookup("ScAddress")], ["nonce", r.lookup("Int64")], ["signatureExpirationLedger", r.lookup("Uint32")], ["signature", r.lookup("ScVal")]]), r.enum("SorobanCredentialsType", { sorobanCredentialsSourceAccount: 0, sorobanCredentialsAddress: 1 }), r.union("SorobanCredentials", { switchOn: r.lookup("SorobanCredentialsType"), switchName: "type", switches: [["sorobanCredentialsSourceAccount", r.void()], ["sorobanCredentialsAddress", "address"]], arms: { address: r.lookup("SorobanAddressCredentials") } }), r.struct("SorobanAuthorizationEntry", [["credentials", r.lookup("SorobanCredentials")], ["rootInvocation", r.lookup("SorobanAuthorizedInvocation")]]), r.struct("InvokeHostFunctionOp", [["hostFunction", r.lookup("HostFunction")], ["auth", r.varArray(r.lookup("SorobanAuthorizationEntry"), 2147483647)]]), r.struct("ExtendFootprintTtlOp", [["ext", r.lookup("ExtensionPoint")], ["extendTo", r.lookup("Uint32")]]), r.struct("RestoreFootprintOp", [["ext", r.lookup("ExtensionPoint")]]), r.union("OperationBody", { switchOn: r.lookup("OperationType"), switchName: "type", switches: [["createAccount", "createAccountOp"], ["payment", "paymentOp"], ["pathPaymentStrictReceive", "pathPaymentStrictReceiveOp"], ["manageSellOffer", "manageSellOfferOp"], ["createPassiveSellOffer", "createPassiveSellOfferOp"], ["setOptions", "setOptionsOp"], ["changeTrust", "changeTrustOp"], ["allowTrust", "allowTrustOp"], ["accountMerge", "destination"], ["inflation", r.void()], ["manageData", "manageDataOp"], ["bumpSequence", "bumpSequenceOp"], ["manageBuyOffer", "manageBuyOfferOp"], ["pathPaymentStrictSend", "pathPaymentStrictSendOp"], ["createClaimableBalance", "createClaimableBalanceOp"], ["claimClaimableBalance", "claimClaimableBalanceOp"], ["beginSponsoringFutureReserves", "beginSponsoringFutureReservesOp"], ["endSponsoringFutureReserves", r.void()], ["revokeSponsorship", "revokeSponsorshipOp"], ["clawback", "clawbackOp"], ["clawbackClaimableBalance", "clawbackClaimableBalanceOp"], ["setTrustLineFlags", "setTrustLineFlagsOp"], ["liquidityPoolDeposit", "liquidityPoolDepositOp"], ["liquidityPoolWithdraw", "liquidityPoolWithdrawOp"], ["invokeHostFunction", "invokeHostFunctionOp"], ["extendFootprintTtl", "extendFootprintTtlOp"], ["restoreFootprint", "restoreFootprintOp"]], arms: { createAccountOp: r.lookup("CreateAccountOp"), paymentOp: r.lookup("PaymentOp"), pathPaymentStrictReceiveOp: r.lookup("PathPaymentStrictReceiveOp"), manageSellOfferOp: r.lookup("ManageSellOfferOp"), createPassiveSellOfferOp: r.lookup("CreatePassiveSellOfferOp"), setOptionsOp: r.lookup("SetOptionsOp"), changeTrustOp: r.lookup("ChangeTrustOp"), allowTrustOp: r.lookup("AllowTrustOp"), destination: r.lookup("MuxedAccount"), manageDataOp: r.lookup("ManageDataOp"), bumpSequenceOp: r.lookup("BumpSequenceOp"), manageBuyOfferOp: r.lookup("ManageBuyOfferOp"), pathPaymentStrictSendOp: r.lookup("PathPaymentStrictSendOp"), createClaimableBalanceOp: r.lookup("CreateClaimableBalanceOp"), claimClaimableBalanceOp: r.lookup("ClaimClaimableBalanceOp"), beginSponsoringFutureReservesOp: r.lookup("BeginSponsoringFutureReservesOp"), revokeSponsorshipOp: r.lookup("RevokeSponsorshipOp"), clawbackOp: r.lookup("ClawbackOp"), clawbackClaimableBalanceOp: r.lookup("ClawbackClaimableBalanceOp"), setTrustLineFlagsOp: r.lookup("SetTrustLineFlagsOp"), liquidityPoolDepositOp: r.lookup("LiquidityPoolDepositOp"), liquidityPoolWithdrawOp: r.lookup("LiquidityPoolWithdrawOp"), invokeHostFunctionOp: r.lookup("InvokeHostFunctionOp"), extendFootprintTtlOp: r.lookup("ExtendFootprintTtlOp"), restoreFootprintOp: r.lookup("RestoreFootprintOp") } }), r.struct("Operation", [["sourceAccount", r.option(r.lookup("MuxedAccount"))], ["body", r.lookup("OperationBody")]]), r.struct("HashIdPreimageOperationId", [["sourceAccount", r.lookup("AccountId")], ["seqNum", r.lookup("SequenceNumber")], ["opNum", r.lookup("Uint32")]]), r.struct("HashIdPreimageRevokeId", [["sourceAccount", r.lookup("AccountId")], ["seqNum", r.lookup("SequenceNumber")], ["opNum", r.lookup("Uint32")], ["liquidityPoolId", r.lookup("PoolId")], ["asset", r.lookup("Asset")]]), r.struct("HashIdPreimageContractId", [["networkId", r.lookup("Hash")], ["contractIdPreimage", r.lookup("ContractIdPreimage")]]), r.struct("HashIdPreimageSorobanAuthorization", [["networkId", r.lookup("Hash")], ["nonce", r.lookup("Int64")], ["signatureExpirationLedger", r.lookup("Uint32")], ["invocation", r.lookup("SorobanAuthorizedInvocation")]]), r.union("HashIdPreimage", { switchOn: r.lookup("EnvelopeType"), switchName: "type", switches: [["envelopeTypeOpId", "operationId"], ["envelopeTypePoolRevokeOpId", "revokeId"], ["envelopeTypeContractId", "contractId"], ["envelopeTypeSorobanAuthorization", "sorobanAuthorization"]], arms: { operationId: r.lookup("HashIdPreimageOperationId"), revokeId: r.lookup("HashIdPreimageRevokeId"), contractId: r.lookup("HashIdPreimageContractId"), sorobanAuthorization: r.lookup("HashIdPreimageSorobanAuthorization") } }), r.enum("MemoType", { memoNone: 0, memoText: 1, memoId: 2, memoHash: 3, memoReturn: 4 }), r.union("Memo", { switchOn: r.lookup("MemoType"), switchName: "type", switches: [["memoNone", r.void()], ["memoText", "text"], ["memoId", "id"], ["memoHash", "hash"], ["memoReturn", "retHash"]], arms: { text: r.string(28), id: r.lookup("Uint64"), hash: r.lookup("Hash"), retHash: r.lookup("Hash") } }), r.struct("TimeBounds", [["minTime", r.lookup("TimePoint")], ["maxTime", r.lookup("TimePoint")]]), r.struct("LedgerBounds", [["minLedger", r.lookup("Uint32")], ["maxLedger", r.lookup("Uint32")]]), r.struct("PreconditionsV2", [["timeBounds", r.option(r.lookup("TimeBounds"))], ["ledgerBounds", r.option(r.lookup("LedgerBounds"))], ["minSeqNum", r.option(r.lookup("SequenceNumber"))], ["minSeqAge", r.lookup("Duration")], ["minSeqLedgerGap", r.lookup("Uint32")], ["extraSigners", r.varArray(r.lookup("SignerKey"), 2)]]), r.enum("PreconditionType", { precondNone: 0, precondTime: 1, precondV2: 2 }), r.union("Preconditions", { switchOn: r.lookup("PreconditionType"), switchName: "type", switches: [["precondNone", r.void()], ["precondTime", "timeBounds"], ["precondV2", "v2"]], arms: { timeBounds: r.lookup("TimeBounds"), v2: r.lookup("PreconditionsV2") } }), r.struct("LedgerFootprint", [["readOnly", r.varArray(r.lookup("LedgerKey"), 2147483647)], ["readWrite", r.varArray(r.lookup("LedgerKey"), 2147483647)]]), r.enum("ArchivalProofType", { existence: 0, nonexistence: 1 }), r.struct("ArchivalProofNode", [["index", r.lookup("Uint32")], ["hash", r.lookup("Hash")]]), r.typedef("ProofLevel", r.varArray(r.lookup("ArchivalProofNode"), 2147483647)), r.struct("NonexistenceProofBody", [["entriesToProve", r.varArray(r.lookup("ColdArchiveBucketEntry"), 2147483647)], ["proofLevels", r.varArray(r.lookup("ProofLevel"), 2147483647)]]), r.struct("ExistenceProofBody", [["keysToProve", r.varArray(r.lookup("LedgerKey"), 2147483647)], ["lowBoundEntries", r.varArray(r.lookup("ColdArchiveBucketEntry"), 2147483647)], ["highBoundEntries", r.varArray(r.lookup("ColdArchiveBucketEntry"), 2147483647)], ["proofLevels", r.varArray(r.lookup("ProofLevel"), 2147483647)]]), r.union("ArchivalProofBody", { switchOn: r.lookup("ArchivalProofType"), switchName: "t", switches: [["existence", "nonexistenceProof"], ["nonexistence", "existenceProof"]], arms: { nonexistenceProof: r.lookup("NonexistenceProofBody"), existenceProof: r.lookup("ExistenceProofBody") } }), r.struct("ArchivalProof", [["epoch", r.lookup("Uint32")], ["body", r.lookup("ArchivalProofBody")]]), r.struct("SorobanResources", [["footprint", r.lookup("LedgerFootprint")], ["instructions", r.lookup("Uint32")], ["readBytes", r.lookup("Uint32")], ["writeBytes", r.lookup("Uint32")]]), r.struct("SorobanTransactionData", [["ext", r.lookup("ExtensionPoint")], ["resources", r.lookup("SorobanResources")], ["resourceFee", r.lookup("Int64")]]), r.union("TransactionV0Ext", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()]], arms: {} }), r.struct("TransactionV0", [["sourceAccountEd25519", r.lookup("Uint256")], ["fee", r.lookup("Uint32")], ["seqNum", r.lookup("SequenceNumber")], ["timeBounds", r.option(r.lookup("TimeBounds"))], ["memo", r.lookup("Memo")], ["operations", r.varArray(r.lookup("Operation"), r.lookup("MAX_OPS_PER_TX"))], ["ext", r.lookup("TransactionV0Ext")]]), r.struct("TransactionV0Envelope", [["tx", r.lookup("TransactionV0")], ["signatures", r.varArray(r.lookup("DecoratedSignature"), 20)]]), r.union("TransactionExt", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()], [1, "sorobanData"]], arms: { sorobanData: r.lookup("SorobanTransactionData") } }), r.struct("Transaction", [["sourceAccount", r.lookup("MuxedAccount")], ["fee", r.lookup("Uint32")], ["seqNum", r.lookup("SequenceNumber")], ["cond", r.lookup("Preconditions")], ["memo", r.lookup("Memo")], ["operations", r.varArray(r.lookup("Operation"), r.lookup("MAX_OPS_PER_TX"))], ["ext", r.lookup("TransactionExt")]]), r.struct("TransactionV1Envelope", [["tx", r.lookup("Transaction")], ["signatures", r.varArray(r.lookup("DecoratedSignature"), 20)]]), r.union("FeeBumpTransactionInnerTx", { switchOn: r.lookup("EnvelopeType"), switchName: "type", switches: [["envelopeTypeTx", "v1"]], arms: { v1: r.lookup("TransactionV1Envelope") } }), r.union("FeeBumpTransactionExt", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()]], arms: {} }), r.struct("FeeBumpTransaction", [["feeSource", r.lookup("MuxedAccount")], ["fee", r.lookup("Int64")], ["innerTx", r.lookup("FeeBumpTransactionInnerTx")], ["ext", r.lookup("FeeBumpTransactionExt")]]), r.struct("FeeBumpTransactionEnvelope", [["tx", r.lookup("FeeBumpTransaction")], ["signatures", r.varArray(r.lookup("DecoratedSignature"), 20)]]), r.union("TransactionEnvelope", { switchOn: r.lookup("EnvelopeType"), switchName: "type", switches: [["envelopeTypeTxV0", "v0"], ["envelopeTypeTx", "v1"], ["envelopeTypeTxFeeBump", "feeBump"]], arms: { v0: r.lookup("TransactionV0Envelope"), v1: r.lookup("TransactionV1Envelope"), feeBump: r.lookup("FeeBumpTransactionEnvelope") } }), r.union("TransactionSignaturePayloadTaggedTransaction", { switchOn: r.lookup("EnvelopeType"), switchName: "type", switches: [["envelopeTypeTx", "tx"], ["envelopeTypeTxFeeBump", "feeBump"]], arms: { tx: r.lookup("Transaction"), feeBump: r.lookup("FeeBumpTransaction") } }), r.struct("TransactionSignaturePayload", [["networkId", r.lookup("Hash")], ["taggedTransaction", r.lookup("TransactionSignaturePayloadTaggedTransaction")]]), r.enum("ClaimAtomType", { claimAtomTypeV0: 0, claimAtomTypeOrderBook: 1, claimAtomTypeLiquidityPool: 2 }), r.struct("ClaimOfferAtomV0", [["sellerEd25519", r.lookup("Uint256")], ["offerId", r.lookup("Int64")], ["assetSold", r.lookup("Asset")], ["amountSold", r.lookup("Int64")], ["assetBought", r.lookup("Asset")], ["amountBought", r.lookup("Int64")]]), r.struct("ClaimOfferAtom", [["sellerId", r.lookup("AccountId")], ["offerId", r.lookup("Int64")], ["assetSold", r.lookup("Asset")], ["amountSold", r.lookup("Int64")], ["assetBought", r.lookup("Asset")], ["amountBought", r.lookup("Int64")]]), r.struct("ClaimLiquidityAtom", [["liquidityPoolId", r.lookup("PoolId")], ["assetSold", r.lookup("Asset")], ["amountSold", r.lookup("Int64")], ["assetBought", r.lookup("Asset")], ["amountBought", r.lookup("Int64")]]), r.union("ClaimAtom", { switchOn: r.lookup("ClaimAtomType"), switchName: "type", switches: [["claimAtomTypeV0", "v0"], ["claimAtomTypeOrderBook", "orderBook"], ["claimAtomTypeLiquidityPool", "liquidityPool"]], arms: { v0: r.lookup("ClaimOfferAtomV0"), orderBook: r.lookup("ClaimOfferAtom"), liquidityPool: r.lookup("ClaimLiquidityAtom") } }), r.enum("CreateAccountResultCode", { createAccountSuccess: 0, createAccountMalformed: -1, createAccountUnderfunded: -2, createAccountLowReserve: -3, createAccountAlreadyExist: -4 }), r.union("CreateAccountResult", { switchOn: r.lookup("CreateAccountResultCode"), switchName: "code", switches: [["createAccountSuccess", r.void()], ["createAccountMalformed", r.void()], ["createAccountUnderfunded", r.void()], ["createAccountLowReserve", r.void()], ["createAccountAlreadyExist", r.void()]], arms: {} }), r.enum("PaymentResultCode", { paymentSuccess: 0, paymentMalformed: -1, paymentUnderfunded: -2, paymentSrcNoTrust: -3, paymentSrcNotAuthorized: -4, paymentNoDestination: -5, paymentNoTrust: -6, paymentNotAuthorized: -7, paymentLineFull: -8, paymentNoIssuer: -9 }), r.union("PaymentResult", { switchOn: r.lookup("PaymentResultCode"), switchName: "code", switches: [["paymentSuccess", r.void()], ["paymentMalformed", r.void()], ["paymentUnderfunded", r.void()], ["paymentSrcNoTrust", r.void()], ["paymentSrcNotAuthorized", r.void()], ["paymentNoDestination", r.void()], ["paymentNoTrust", r.void()], ["paymentNotAuthorized", r.void()], ["paymentLineFull", r.void()], ["paymentNoIssuer", r.void()]], arms: {} }), r.enum("PathPaymentStrictReceiveResultCode", { pathPaymentStrictReceiveSuccess: 0, pathPaymentStrictReceiveMalformed: -1, pathPaymentStrictReceiveUnderfunded: -2, pathPaymentStrictReceiveSrcNoTrust: -3, pathPaymentStrictReceiveSrcNotAuthorized: -4, pathPaymentStrictReceiveNoDestination: -5, pathPaymentStrictReceiveNoTrust: -6, pathPaymentStrictReceiveNotAuthorized: -7, pathPaymentStrictReceiveLineFull: -8, pathPaymentStrictReceiveNoIssuer: -9, pathPaymentStrictReceiveTooFewOffers: -10, pathPaymentStrictReceiveOfferCrossSelf: -11, pathPaymentStrictReceiveOverSendmax: -12 }), r.struct("SimplePaymentResult", [["destination", r.lookup("AccountId")], ["asset", r.lookup("Asset")], ["amount", r.lookup("Int64")]]), r.struct("PathPaymentStrictReceiveResultSuccess", [["offers", r.varArray(r.lookup("ClaimAtom"), 2147483647)], ["last", r.lookup("SimplePaymentResult")]]), r.union("PathPaymentStrictReceiveResult", { switchOn: r.lookup("PathPaymentStrictReceiveResultCode"), switchName: "code", switches: [["pathPaymentStrictReceiveSuccess", "success"], ["pathPaymentStrictReceiveMalformed", r.void()], ["pathPaymentStrictReceiveUnderfunded", r.void()], ["pathPaymentStrictReceiveSrcNoTrust", r.void()], ["pathPaymentStrictReceiveSrcNotAuthorized", r.void()], ["pathPaymentStrictReceiveNoDestination", r.void()], ["pathPaymentStrictReceiveNoTrust", r.void()], ["pathPaymentStrictReceiveNotAuthorized", r.void()], ["pathPaymentStrictReceiveLineFull", r.void()], ["pathPaymentStrictReceiveNoIssuer", "noIssuer"], ["pathPaymentStrictReceiveTooFewOffers", r.void()], ["pathPaymentStrictReceiveOfferCrossSelf", r.void()], ["pathPaymentStrictReceiveOverSendmax", r.void()]], arms: { success: r.lookup("PathPaymentStrictReceiveResultSuccess"), noIssuer: r.lookup("Asset") } }), r.enum("PathPaymentStrictSendResultCode", { pathPaymentStrictSendSuccess: 0, pathPaymentStrictSendMalformed: -1, pathPaymentStrictSendUnderfunded: -2, pathPaymentStrictSendSrcNoTrust: -3, pathPaymentStrictSendSrcNotAuthorized: -4, pathPaymentStrictSendNoDestination: -5, pathPaymentStrictSendNoTrust: -6, pathPaymentStrictSendNotAuthorized: -7, pathPaymentStrictSendLineFull: -8, pathPaymentStrictSendNoIssuer: -9, pathPaymentStrictSendTooFewOffers: -10, pathPaymentStrictSendOfferCrossSelf: -11, pathPaymentStrictSendUnderDestmin: -12 }), r.struct("PathPaymentStrictSendResultSuccess", [["offers", r.varArray(r.lookup("ClaimAtom"), 2147483647)], ["last", r.lookup("SimplePaymentResult")]]), r.union("PathPaymentStrictSendResult", { switchOn: r.lookup("PathPaymentStrictSendResultCode"), switchName: "code", switches: [["pathPaymentStrictSendSuccess", "success"], ["pathPaymentStrictSendMalformed", r.void()], ["pathPaymentStrictSendUnderfunded", r.void()], ["pathPaymentStrictSendSrcNoTrust", r.void()], ["pathPaymentStrictSendSrcNotAuthorized", r.void()], ["pathPaymentStrictSendNoDestination", r.void()], ["pathPaymentStrictSendNoTrust", r.void()], ["pathPaymentStrictSendNotAuthorized", r.void()], ["pathPaymentStrictSendLineFull", r.void()], ["pathPaymentStrictSendNoIssuer", "noIssuer"], ["pathPaymentStrictSendTooFewOffers", r.void()], ["pathPaymentStrictSendOfferCrossSelf", r.void()], ["pathPaymentStrictSendUnderDestmin", r.void()]], arms: { success: r.lookup("PathPaymentStrictSendResultSuccess"), noIssuer: r.lookup("Asset") } }), r.enum("ManageSellOfferResultCode", { manageSellOfferSuccess: 0, manageSellOfferMalformed: -1, manageSellOfferSellNoTrust: -2, manageSellOfferBuyNoTrust: -3, manageSellOfferSellNotAuthorized: -4, manageSellOfferBuyNotAuthorized: -5, manageSellOfferLineFull: -6, manageSellOfferUnderfunded: -7, manageSellOfferCrossSelf: -8, manageSellOfferSellNoIssuer: -9, manageSellOfferBuyNoIssuer: -10, manageSellOfferNotFound: -11, manageSellOfferLowReserve: -12 }), r.enum("ManageOfferEffect", { manageOfferCreated: 0, manageOfferUpdated: 1, manageOfferDeleted: 2 }), r.union("ManageOfferSuccessResultOffer", { switchOn: r.lookup("ManageOfferEffect"), switchName: "effect", switches: [["manageOfferCreated", "offer"], ["manageOfferUpdated", "offer"], ["manageOfferDeleted", r.void()]], arms: { offer: r.lookup("OfferEntry") } }), r.struct("ManageOfferSuccessResult", [["offersClaimed", r.varArray(r.lookup("ClaimAtom"), 2147483647)], ["offer", r.lookup("ManageOfferSuccessResultOffer")]]), r.union("ManageSellOfferResult", { switchOn: r.lookup("ManageSellOfferResultCode"), switchName: "code", switches: [["manageSellOfferSuccess", "success"], ["manageSellOfferMalformed", r.void()], ["manageSellOfferSellNoTrust", r.void()], ["manageSellOfferBuyNoTrust", r.void()], ["manageSellOfferSellNotAuthorized", r.void()], ["manageSellOfferBuyNotAuthorized", r.void()], ["manageSellOfferLineFull", r.void()], ["manageSellOfferUnderfunded", r.void()], ["manageSellOfferCrossSelf", r.void()], ["manageSellOfferSellNoIssuer", r.void()], ["manageSellOfferBuyNoIssuer", r.void()], ["manageSellOfferNotFound", r.void()], ["manageSellOfferLowReserve", r.void()]], arms: { success: r.lookup("ManageOfferSuccessResult") } }), r.enum("ManageBuyOfferResultCode", { manageBuyOfferSuccess: 0, manageBuyOfferMalformed: -1, manageBuyOfferSellNoTrust: -2, manageBuyOfferBuyNoTrust: -3, manageBuyOfferSellNotAuthorized: -4, manageBuyOfferBuyNotAuthorized: -5, manageBuyOfferLineFull: -6, manageBuyOfferUnderfunded: -7, manageBuyOfferCrossSelf: -8, manageBuyOfferSellNoIssuer: -9, manageBuyOfferBuyNoIssuer: -10, manageBuyOfferNotFound: -11, manageBuyOfferLowReserve: -12 }), r.union("ManageBuyOfferResult", { switchOn: r.lookup("ManageBuyOfferResultCode"), switchName: "code", switches: [["manageBuyOfferSuccess", "success"], ["manageBuyOfferMalformed", r.void()], ["manageBuyOfferSellNoTrust", r.void()], ["manageBuyOfferBuyNoTrust", r.void()], ["manageBuyOfferSellNotAuthorized", r.void()], ["manageBuyOfferBuyNotAuthorized", r.void()], ["manageBuyOfferLineFull", r.void()], ["manageBuyOfferUnderfunded", r.void()], ["manageBuyOfferCrossSelf", r.void()], ["manageBuyOfferSellNoIssuer", r.void()], ["manageBuyOfferBuyNoIssuer", r.void()], ["manageBuyOfferNotFound", r.void()], ["manageBuyOfferLowReserve", r.void()]], arms: { success: r.lookup("ManageOfferSuccessResult") } }), r.enum("SetOptionsResultCode", { setOptionsSuccess: 0, setOptionsLowReserve: -1, setOptionsTooManySigners: -2, setOptionsBadFlags: -3, setOptionsInvalidInflation: -4, setOptionsCantChange: -5, setOptionsUnknownFlag: -6, setOptionsThresholdOutOfRange: -7, setOptionsBadSigner: -8, setOptionsInvalidHomeDomain: -9, setOptionsAuthRevocableRequired: -10 }), r.union("SetOptionsResult", { switchOn: r.lookup("SetOptionsResultCode"), switchName: "code", switches: [["setOptionsSuccess", r.void()], ["setOptionsLowReserve", r.void()], ["setOptionsTooManySigners", r.void()], ["setOptionsBadFlags", r.void()], ["setOptionsInvalidInflation", r.void()], ["setOptionsCantChange", r.void()], ["setOptionsUnknownFlag", r.void()], ["setOptionsThresholdOutOfRange", r.void()], ["setOptionsBadSigner", r.void()], ["setOptionsInvalidHomeDomain", r.void()], ["setOptionsAuthRevocableRequired", r.void()]], arms: {} }), r.enum("ChangeTrustResultCode", { changeTrustSuccess: 0, changeTrustMalformed: -1, changeTrustNoIssuer: -2, changeTrustInvalidLimit: -3, changeTrustLowReserve: -4, changeTrustSelfNotAllowed: -5, changeTrustTrustLineMissing: -6, changeTrustCannotDelete: -7, changeTrustNotAuthMaintainLiabilities: -8 }), r.union("ChangeTrustResult", { switchOn: r.lookup("ChangeTrustResultCode"), switchName: "code", switches: [["changeTrustSuccess", r.void()], ["changeTrustMalformed", r.void()], ["changeTrustNoIssuer", r.void()], ["changeTrustInvalidLimit", r.void()], ["changeTrustLowReserve", r.void()], ["changeTrustSelfNotAllowed", r.void()], ["changeTrustTrustLineMissing", r.void()], ["changeTrustCannotDelete", r.void()], ["changeTrustNotAuthMaintainLiabilities", r.void()]], arms: {} }), r.enum("AllowTrustResultCode", { allowTrustSuccess: 0, allowTrustMalformed: -1, allowTrustNoTrustLine: -2, allowTrustTrustNotRequired: -3, allowTrustCantRevoke: -4, allowTrustSelfNotAllowed: -5, allowTrustLowReserve: -6 }), r.union("AllowTrustResult", { switchOn: r.lookup("AllowTrustResultCode"), switchName: "code", switches: [["allowTrustSuccess", r.void()], ["allowTrustMalformed", r.void()], ["allowTrustNoTrustLine", r.void()], ["allowTrustTrustNotRequired", r.void()], ["allowTrustCantRevoke", r.void()], ["allowTrustSelfNotAllowed", r.void()], ["allowTrustLowReserve", r.void()]], arms: {} }), r.enum("AccountMergeResultCode", { accountMergeSuccess: 0, accountMergeMalformed: -1, accountMergeNoAccount: -2, accountMergeImmutableSet: -3, accountMergeHasSubEntries: -4, accountMergeSeqnumTooFar: -5, accountMergeDestFull: -6, accountMergeIsSponsor: -7 }), r.union("AccountMergeResult", { switchOn: r.lookup("AccountMergeResultCode"), switchName: "code", switches: [["accountMergeSuccess", "sourceAccountBalance"], ["accountMergeMalformed", r.void()], ["accountMergeNoAccount", r.void()], ["accountMergeImmutableSet", r.void()], ["accountMergeHasSubEntries", r.void()], ["accountMergeSeqnumTooFar", r.void()], ["accountMergeDestFull", r.void()], ["accountMergeIsSponsor", r.void()]], arms: { sourceAccountBalance: r.lookup("Int64") } }), r.enum("InflationResultCode", { inflationSuccess: 0, inflationNotTime: -1 }), r.struct("InflationPayout", [["destination", r.lookup("AccountId")], ["amount", r.lookup("Int64")]]), r.union("InflationResult", { switchOn: r.lookup("InflationResultCode"), switchName: "code", switches: [["inflationSuccess", "payouts"], ["inflationNotTime", r.void()]], arms: { payouts: r.varArray(r.lookup("InflationPayout"), 2147483647) } }), r.enum("ManageDataResultCode", { manageDataSuccess: 0, manageDataNotSupportedYet: -1, manageDataNameNotFound: -2, manageDataLowReserve: -3, manageDataInvalidName: -4 }), r.union("ManageDataResult", { switchOn: r.lookup("ManageDataResultCode"), switchName: "code", switches: [["manageDataSuccess", r.void()], ["manageDataNotSupportedYet", r.void()], ["manageDataNameNotFound", r.void()], ["manageDataLowReserve", r.void()], ["manageDataInvalidName", r.void()]], arms: {} }), r.enum("BumpSequenceResultCode", { bumpSequenceSuccess: 0, bumpSequenceBadSeq: -1 }), r.union("BumpSequenceResult", { switchOn: r.lookup("BumpSequenceResultCode"), switchName: "code", switches: [["bumpSequenceSuccess", r.void()], ["bumpSequenceBadSeq", r.void()]], arms: {} }), r.enum("CreateClaimableBalanceResultCode", { createClaimableBalanceSuccess: 0, createClaimableBalanceMalformed: -1, createClaimableBalanceLowReserve: -2, createClaimableBalanceNoTrust: -3, createClaimableBalanceNotAuthorized: -4, createClaimableBalanceUnderfunded: -5 }), r.union("CreateClaimableBalanceResult", { switchOn: r.lookup("CreateClaimableBalanceResultCode"), switchName: "code", switches: [["createClaimableBalanceSuccess", "balanceId"], ["createClaimableBalanceMalformed", r.void()], ["createClaimableBalanceLowReserve", r.void()], ["createClaimableBalanceNoTrust", r.void()], ["createClaimableBalanceNotAuthorized", r.void()], ["createClaimableBalanceUnderfunded", r.void()]], arms: { balanceId: r.lookup("ClaimableBalanceId") } }), r.enum("ClaimClaimableBalanceResultCode", { claimClaimableBalanceSuccess: 0, claimClaimableBalanceDoesNotExist: -1, claimClaimableBalanceCannotClaim: -2, claimClaimableBalanceLineFull: -3, claimClaimableBalanceNoTrust: -4, claimClaimableBalanceNotAuthorized: -5 }), r.union("ClaimClaimableBalanceResult", { switchOn: r.lookup("ClaimClaimableBalanceResultCode"), switchName: "code", switches: [["claimClaimableBalanceSuccess", r.void()], ["claimClaimableBalanceDoesNotExist", r.void()], ["claimClaimableBalanceCannotClaim", r.void()], ["claimClaimableBalanceLineFull", r.void()], ["claimClaimableBalanceNoTrust", r.void()], ["claimClaimableBalanceNotAuthorized", r.void()]], arms: {} }), r.enum("BeginSponsoringFutureReservesResultCode", { beginSponsoringFutureReservesSuccess: 0, beginSponsoringFutureReservesMalformed: -1, beginSponsoringFutureReservesAlreadySponsored: -2, beginSponsoringFutureReservesRecursive: -3 }), r.union("BeginSponsoringFutureReservesResult", { switchOn: r.lookup("BeginSponsoringFutureReservesResultCode"), switchName: "code", switches: [["beginSponsoringFutureReservesSuccess", r.void()], ["beginSponsoringFutureReservesMalformed", r.void()], ["beginSponsoringFutureReservesAlreadySponsored", r.void()], ["beginSponsoringFutureReservesRecursive", r.void()]], arms: {} }), r.enum("EndSponsoringFutureReservesResultCode", { endSponsoringFutureReservesSuccess: 0, endSponsoringFutureReservesNotSponsored: -1 }), r.union("EndSponsoringFutureReservesResult", { switchOn: r.lookup("EndSponsoringFutureReservesResultCode"), switchName: "code", switches: [["endSponsoringFutureReservesSuccess", r.void()], ["endSponsoringFutureReservesNotSponsored", r.void()]], arms: {} }), r.enum("RevokeSponsorshipResultCode", { revokeSponsorshipSuccess: 0, revokeSponsorshipDoesNotExist: -1, revokeSponsorshipNotSponsor: -2, revokeSponsorshipLowReserve: -3, revokeSponsorshipOnlyTransferable: -4, revokeSponsorshipMalformed: -5 }), r.union("RevokeSponsorshipResult", { switchOn: r.lookup("RevokeSponsorshipResultCode"), switchName: "code", switches: [["revokeSponsorshipSuccess", r.void()], ["revokeSponsorshipDoesNotExist", r.void()], ["revokeSponsorshipNotSponsor", r.void()], ["revokeSponsorshipLowReserve", r.void()], ["revokeSponsorshipOnlyTransferable", r.void()], ["revokeSponsorshipMalformed", r.void()]], arms: {} }), r.enum("ClawbackResultCode", { clawbackSuccess: 0, clawbackMalformed: -1, clawbackNotClawbackEnabled: -2, clawbackNoTrust: -3, clawbackUnderfunded: -4 }), r.union("ClawbackResult", { switchOn: r.lookup("ClawbackResultCode"), switchName: "code", switches: [["clawbackSuccess", r.void()], ["clawbackMalformed", r.void()], ["clawbackNotClawbackEnabled", r.void()], ["clawbackNoTrust", r.void()], ["clawbackUnderfunded", r.void()]], arms: {} }), r.enum("ClawbackClaimableBalanceResultCode", { clawbackClaimableBalanceSuccess: 0, clawbackClaimableBalanceDoesNotExist: -1, clawbackClaimableBalanceNotIssuer: -2, clawbackClaimableBalanceNotClawbackEnabled: -3 }), r.union("ClawbackClaimableBalanceResult", { switchOn: r.lookup("ClawbackClaimableBalanceResultCode"), switchName: "code", switches: [["clawbackClaimableBalanceSuccess", r.void()], ["clawbackClaimableBalanceDoesNotExist", r.void()], ["clawbackClaimableBalanceNotIssuer", r.void()], ["clawbackClaimableBalanceNotClawbackEnabled", r.void()]], arms: {} }), r.enum("SetTrustLineFlagsResultCode", { setTrustLineFlagsSuccess: 0, setTrustLineFlagsMalformed: -1, setTrustLineFlagsNoTrustLine: -2, setTrustLineFlagsCantRevoke: -3, setTrustLineFlagsInvalidState: -4, setTrustLineFlagsLowReserve: -5 }), r.union("SetTrustLineFlagsResult", { switchOn: r.lookup("SetTrustLineFlagsResultCode"), switchName: "code", switches: [["setTrustLineFlagsSuccess", r.void()], ["setTrustLineFlagsMalformed", r.void()], ["setTrustLineFlagsNoTrustLine", r.void()], ["setTrustLineFlagsCantRevoke", r.void()], ["setTrustLineFlagsInvalidState", r.void()], ["setTrustLineFlagsLowReserve", r.void()]], arms: {} }), r.enum("LiquidityPoolDepositResultCode", { liquidityPoolDepositSuccess: 0, liquidityPoolDepositMalformed: -1, liquidityPoolDepositNoTrust: -2, liquidityPoolDepositNotAuthorized: -3, liquidityPoolDepositUnderfunded: -4, liquidityPoolDepositLineFull: -5, liquidityPoolDepositBadPrice: -6, liquidityPoolDepositPoolFull: -7 }), r.union("LiquidityPoolDepositResult", { switchOn: r.lookup("LiquidityPoolDepositResultCode"), switchName: "code", switches: [["liquidityPoolDepositSuccess", r.void()], ["liquidityPoolDepositMalformed", r.void()], ["liquidityPoolDepositNoTrust", r.void()], ["liquidityPoolDepositNotAuthorized", r.void()], ["liquidityPoolDepositUnderfunded", r.void()], ["liquidityPoolDepositLineFull", r.void()], ["liquidityPoolDepositBadPrice", r.void()], ["liquidityPoolDepositPoolFull", r.void()]], arms: {} }), r.enum("LiquidityPoolWithdrawResultCode", { liquidityPoolWithdrawSuccess: 0, liquidityPoolWithdrawMalformed: -1, liquidityPoolWithdrawNoTrust: -2, liquidityPoolWithdrawUnderfunded: -3, liquidityPoolWithdrawLineFull: -4, liquidityPoolWithdrawUnderMinimum: -5 }), r.union("LiquidityPoolWithdrawResult", { switchOn: r.lookup("LiquidityPoolWithdrawResultCode"), switchName: "code", switches: [["liquidityPoolWithdrawSuccess", r.void()], ["liquidityPoolWithdrawMalformed", r.void()], ["liquidityPoolWithdrawNoTrust", r.void()], ["liquidityPoolWithdrawUnderfunded", r.void()], ["liquidityPoolWithdrawLineFull", r.void()], ["liquidityPoolWithdrawUnderMinimum", r.void()]], arms: {} }), r.enum("InvokeHostFunctionResultCode", { invokeHostFunctionSuccess: 0, invokeHostFunctionMalformed: -1, invokeHostFunctionTrapped: -2, invokeHostFunctionResourceLimitExceeded: -3, invokeHostFunctionEntryArchived: -4, invokeHostFunctionInsufficientRefundableFee: -5 }), r.union("InvokeHostFunctionResult", { switchOn: r.lookup("InvokeHostFunctionResultCode"), switchName: "code", switches: [["invokeHostFunctionSuccess", "success"], ["invokeHostFunctionMalformed", r.void()], ["invokeHostFunctionTrapped", r.void()], ["invokeHostFunctionResourceLimitExceeded", r.void()], ["invokeHostFunctionEntryArchived", r.void()], ["invokeHostFunctionInsufficientRefundableFee", r.void()]], arms: { success: r.lookup("Hash") } }), r.enum("ExtendFootprintTtlResultCode", { extendFootprintTtlSuccess: 0, extendFootprintTtlMalformed: -1, extendFootprintTtlResourceLimitExceeded: -2, extendFootprintTtlInsufficientRefundableFee: -3 }), r.union("ExtendFootprintTtlResult", { switchOn: r.lookup("ExtendFootprintTtlResultCode"), switchName: "code", switches: [["extendFootprintTtlSuccess", r.void()], ["extendFootprintTtlMalformed", r.void()], ["extendFootprintTtlResourceLimitExceeded", r.void()], ["extendFootprintTtlInsufficientRefundableFee", r.void()]], arms: {} }), r.enum("RestoreFootprintResultCode", { restoreFootprintSuccess: 0, restoreFootprintMalformed: -1, restoreFootprintResourceLimitExceeded: -2, restoreFootprintInsufficientRefundableFee: -3 }), r.union("RestoreFootprintResult", { switchOn: r.lookup("RestoreFootprintResultCode"), switchName: "code", switches: [["restoreFootprintSuccess", r.void()], ["restoreFootprintMalformed", r.void()], ["restoreFootprintResourceLimitExceeded", r.void()], ["restoreFootprintInsufficientRefundableFee", r.void()]], arms: {} }), r.enum("OperationResultCode", { opInner: 0, opBadAuth: -1, opNoAccount: -2, opNotSupported: -3, opTooManySubentries: -4, opExceededWorkLimit: -5, opTooManySponsoring: -6 }), r.union("OperationResultTr", { switchOn: r.lookup("OperationType"), switchName: "type", switches: [["createAccount", "createAccountResult"], ["payment", "paymentResult"], ["pathPaymentStrictReceive", "pathPaymentStrictReceiveResult"], ["manageSellOffer", "manageSellOfferResult"], ["createPassiveSellOffer", "createPassiveSellOfferResult"], ["setOptions", "setOptionsResult"], ["changeTrust", "changeTrustResult"], ["allowTrust", "allowTrustResult"], ["accountMerge", "accountMergeResult"], ["inflation", "inflationResult"], ["manageData", "manageDataResult"], ["bumpSequence", "bumpSeqResult"], ["manageBuyOffer", "manageBuyOfferResult"], ["pathPaymentStrictSend", "pathPaymentStrictSendResult"], ["createClaimableBalance", "createClaimableBalanceResult"], ["claimClaimableBalance", "claimClaimableBalanceResult"], ["beginSponsoringFutureReserves", "beginSponsoringFutureReservesResult"], ["endSponsoringFutureReserves", "endSponsoringFutureReservesResult"], ["revokeSponsorship", "revokeSponsorshipResult"], ["clawback", "clawbackResult"], ["clawbackClaimableBalance", "clawbackClaimableBalanceResult"], ["setTrustLineFlags", "setTrustLineFlagsResult"], ["liquidityPoolDeposit", "liquidityPoolDepositResult"], ["liquidityPoolWithdraw", "liquidityPoolWithdrawResult"], ["invokeHostFunction", "invokeHostFunctionResult"], ["extendFootprintTtl", "extendFootprintTtlResult"], ["restoreFootprint", "restoreFootprintResult"]], arms: { createAccountResult: r.lookup("CreateAccountResult"), paymentResult: r.lookup("PaymentResult"), pathPaymentStrictReceiveResult: r.lookup("PathPaymentStrictReceiveResult"), manageSellOfferResult: r.lookup("ManageSellOfferResult"), createPassiveSellOfferResult: r.lookup("ManageSellOfferResult"), setOptionsResult: r.lookup("SetOptionsResult"), changeTrustResult: r.lookup("ChangeTrustResult"), allowTrustResult: r.lookup("AllowTrustResult"), accountMergeResult: r.lookup("AccountMergeResult"), inflationResult: r.lookup("InflationResult"), manageDataResult: r.lookup("ManageDataResult"), bumpSeqResult: r.lookup("BumpSequenceResult"), manageBuyOfferResult: r.lookup("ManageBuyOfferResult"), pathPaymentStrictSendResult: r.lookup("PathPaymentStrictSendResult"), createClaimableBalanceResult: r.lookup("CreateClaimableBalanceResult"), claimClaimableBalanceResult: r.lookup("ClaimClaimableBalanceResult"), beginSponsoringFutureReservesResult: r.lookup("BeginSponsoringFutureReservesResult"), endSponsoringFutureReservesResult: r.lookup("EndSponsoringFutureReservesResult"), revokeSponsorshipResult: r.lookup("RevokeSponsorshipResult"), clawbackResult: r.lookup("ClawbackResult"), clawbackClaimableBalanceResult: r.lookup("ClawbackClaimableBalanceResult"), setTrustLineFlagsResult: r.lookup("SetTrustLineFlagsResult"), liquidityPoolDepositResult: r.lookup("LiquidityPoolDepositResult"), liquidityPoolWithdrawResult: r.lookup("LiquidityPoolWithdrawResult"), invokeHostFunctionResult: r.lookup("InvokeHostFunctionResult"), extendFootprintTtlResult: r.lookup("ExtendFootprintTtlResult"), restoreFootprintResult: r.lookup("RestoreFootprintResult") } }), r.union("OperationResult", { switchOn: r.lookup("OperationResultCode"), switchName: "code", switches: [["opInner", "tr"], ["opBadAuth", r.void()], ["opNoAccount", r.void()], ["opNotSupported", r.void()], ["opTooManySubentries", r.void()], ["opExceededWorkLimit", r.void()], ["opTooManySponsoring", r.void()]], arms: { tr: r.lookup("OperationResultTr") } }), r.enum("TransactionResultCode", { txFeeBumpInnerSuccess: 1, txSuccess: 0, txFailed: -1, txTooEarly: -2, txTooLate: -3, txMissingOperation: -4, txBadSeq: -5, txBadAuth: -6, txInsufficientBalance: -7, txNoAccount: -8, txInsufficientFee: -9, txBadAuthExtra: -10, txInternalError: -11, txNotSupported: -12, txFeeBumpInnerFailed: -13, txBadSponsorship: -14, txBadMinSeqAgeOrGap: -15, txMalformed: -16, txSorobanInvalid: -17 }), r.union("InnerTransactionResultResult", { switchOn: r.lookup("TransactionResultCode"), switchName: "code", switches: [["txSuccess", "results"], ["txFailed", "results"], ["txTooEarly", r.void()], ["txTooLate", r.void()], ["txMissingOperation", r.void()], ["txBadSeq", r.void()], ["txBadAuth", r.void()], ["txInsufficientBalance", r.void()], ["txNoAccount", r.void()], ["txInsufficientFee", r.void()], ["txBadAuthExtra", r.void()], ["txInternalError", r.void()], ["txNotSupported", r.void()], ["txBadSponsorship", r.void()], ["txBadMinSeqAgeOrGap", r.void()], ["txMalformed", r.void()], ["txSorobanInvalid", r.void()]], arms: { results: r.varArray(r.lookup("OperationResult"), 2147483647) } }), r.union("InnerTransactionResultExt", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()]], arms: {} }), r.struct("InnerTransactionResult", [["feeCharged", r.lookup("Int64")], ["result", r.lookup("InnerTransactionResultResult")], ["ext", r.lookup("InnerTransactionResultExt")]]), r.struct("InnerTransactionResultPair", [["transactionHash", r.lookup("Hash")], ["result", r.lookup("InnerTransactionResult")]]), r.union("TransactionResultResult", { switchOn: r.lookup("TransactionResultCode"), switchName: "code", switches: [["txFeeBumpInnerSuccess", "innerResultPair"], ["txFeeBumpInnerFailed", "innerResultPair"], ["txSuccess", "results"], ["txFailed", "results"], ["txTooEarly", r.void()], ["txTooLate", r.void()], ["txMissingOperation", r.void()], ["txBadSeq", r.void()], ["txBadAuth", r.void()], ["txInsufficientBalance", r.void()], ["txNoAccount", r.void()], ["txInsufficientFee", r.void()], ["txBadAuthExtra", r.void()], ["txInternalError", r.void()], ["txNotSupported", r.void()], ["txBadSponsorship", r.void()], ["txBadMinSeqAgeOrGap", r.void()], ["txMalformed", r.void()], ["txSorobanInvalid", r.void()]], arms: { innerResultPair: r.lookup("InnerTransactionResultPair"), results: r.varArray(r.lookup("OperationResult"), 2147483647) } }), r.union("TransactionResultExt", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()]], arms: {} }), r.struct("TransactionResult", [["feeCharged", r.lookup("Int64")], ["result", r.lookup("TransactionResultResult")], ["ext", r.lookup("TransactionResultExt")]]), r.typedef("Hash", r.opaque(32)), r.typedef("Uint256", r.opaque(32)), r.typedef("Uint32", r.uint()), r.typedef("Int32", r.int()), r.typedef("Uint64", r.uhyper()), r.typedef("Int64", r.hyper()), r.typedef("TimePoint", r.lookup("Uint64")), r.typedef("Duration", r.lookup("Uint64")), r.union("ExtensionPoint", { switchOn: r.int(), switchName: "v", switches: [[0, r.void()]], arms: {} }), r.enum("CryptoKeyType", { keyTypeEd25519: 0, keyTypePreAuthTx: 1, keyTypeHashX: 2, keyTypeEd25519SignedPayload: 3, keyTypeMuxedEd25519: 256 }), r.enum("PublicKeyType", { publicKeyTypeEd25519: 0 }), r.enum("SignerKeyType", { signerKeyTypeEd25519: 0, signerKeyTypePreAuthTx: 1, signerKeyTypeHashX: 2, signerKeyTypeEd25519SignedPayload: 3 }), r.union("PublicKey", { switchOn: r.lookup("PublicKeyType"), switchName: "type", switches: [["publicKeyTypeEd25519", "ed25519"]], arms: { ed25519: r.lookup("Uint256") } }), r.struct("SignerKeyEd25519SignedPayload", [["ed25519", r.lookup("Uint256")], ["payload", r.varOpaque(64)]]), r.union("SignerKey", { switchOn: r.lookup("SignerKeyType"), switchName: "type", switches: [["signerKeyTypeEd25519", "ed25519"], ["signerKeyTypePreAuthTx", "preAuthTx"], ["signerKeyTypeHashX", "hashX"], ["signerKeyTypeEd25519SignedPayload", "ed25519SignedPayload"]], arms: { ed25519: r.lookup("Uint256"), preAuthTx: r.lookup("Uint256"), hashX: r.lookup("Uint256"), ed25519SignedPayload: r.lookup("SignerKeyEd25519SignedPayload") } }), r.typedef("Signature", r.varOpaque(64)), r.typedef("SignatureHint", r.opaque(4)), r.typedef("NodeId", r.lookup("PublicKey")), r.typedef("AccountId", r.lookup("PublicKey")), r.struct("Curve25519Secret", [["key", r.opaque(32)]]), r.struct("Curve25519Public", [["key", r.opaque(32)]]), r.struct("HmacSha256Key", [["key", r.opaque(32)]]), r.struct("HmacSha256Mac", [["mac", r.opaque(32)]]), r.struct("ShortHashSeed", [["seed", r.opaque(16)]]), r.enum("BinaryFuseFilterType", { binaryFuseFilter8Bit: 0, binaryFuseFilter16Bit: 1, binaryFuseFilter32Bit: 2 }), r.struct("SerializedBinaryFuseFilter", [["type", r.lookup("BinaryFuseFilterType")], ["inputHashSeed", r.lookup("ShortHashSeed")], ["filterSeed", r.lookup("ShortHashSeed")], ["segmentLength", r.lookup("Uint32")], ["segementLengthMask", r.lookup("Uint32")], ["segmentCount", r.lookup("Uint32")], ["segmentCountLength", r.lookup("Uint32")], ["fingerprintLength", r.lookup("Uint32")], ["fingerprints", r.varOpaque()]]), r.enum("ScValType", { scvBool: 0, scvVoid: 1, scvError: 2, scvU32: 3, scvI32: 4, scvU64: 5, scvI64: 6, scvTimepoint: 7, scvDuration: 8, scvU128: 9, scvI128: 10, scvU256: 11, scvI256: 12, scvBytes: 13, scvString: 14, scvSymbol: 15, scvVec: 16, scvMap: 17, scvAddress: 18, scvContractInstance: 19, scvLedgerKeyContractInstance: 20, scvLedgerKeyNonce: 21 }), r.enum("ScErrorType", { sceContract: 0, sceWasmVm: 1, sceContext: 2, sceStorage: 3, sceObject: 4, sceCrypto: 5, sceEvents: 6, sceBudget: 7, sceValue: 8, sceAuth: 9 }), r.enum("ScErrorCode", { scecArithDomain: 0, scecIndexBounds: 1, scecInvalidInput: 2, scecMissingValue: 3, scecExistingValue: 4, scecExceededLimit: 5, scecInvalidAction: 6, scecInternalError: 7, scecUnexpectedType: 8, scecUnexpectedSize: 9 }), r.union("ScError", { switchOn: r.lookup("ScErrorType"), switchName: "type", switches: [["sceContract", "contractCode"], ["sceWasmVm", "code"], ["sceContext", "code"], ["sceStorage", "code"], ["sceObject", "code"], ["sceCrypto", "code"], ["sceEvents", "code"], ["sceBudget", "code"], ["sceValue", "code"], ["sceAuth", "code"]], arms: { contractCode: r.lookup("Uint32"), code: r.lookup("ScErrorCode") } }), r.struct("UInt128Parts", [["hi", r.lookup("Uint64")], ["lo", r.lookup("Uint64")]]), r.struct("Int128Parts", [["hi", r.lookup("Int64")], ["lo", r.lookup("Uint64")]]), r.struct("UInt256Parts", [["hiHi", r.lookup("Uint64")], ["hiLo", r.lookup("Uint64")], ["loHi", r.lookup("Uint64")], ["loLo", r.lookup("Uint64")]]), r.struct("Int256Parts", [["hiHi", r.lookup("Int64")], ["hiLo", r.lookup("Uint64")], ["loHi", r.lookup("Uint64")], ["loLo", r.lookup("Uint64")]]), r.enum("ContractExecutableType", { contractExecutableWasm: 0, contractExecutableStellarAsset: 1 }), r.union("ContractExecutable", { switchOn: r.lookup("ContractExecutableType"), switchName: "type", switches: [["contractExecutableWasm", "wasmHash"], ["contractExecutableStellarAsset", r.void()]], arms: { wasmHash: r.lookup("Hash") } }), r.enum("ScAddressType", { scAddressTypeAccount: 0, scAddressTypeContract: 1 }), r.union("ScAddress", { switchOn: r.lookup("ScAddressType"), switchName: "type", switches: [["scAddressTypeAccount", "accountId"], ["scAddressTypeContract", "contractId"]], arms: { accountId: r.lookup("AccountId"), contractId: r.lookup("Hash") } }), r.const("SCSYMBOL_LIMIT", 32), r.typedef("ScVec", r.varArray(r.lookup("ScVal"), 2147483647)), r.typedef("ScMap", r.varArray(r.lookup("ScMapEntry"), 2147483647)), r.typedef("ScBytes", r.varOpaque()), r.typedef("ScString", r.string()), r.typedef("ScSymbol", r.string(32)), r.struct("ScNonceKey", [["nonce", r.lookup("Int64")]]), r.struct("ScContractInstance", [["executable", r.lookup("ContractExecutable")], ["storage", r.option(r.lookup("ScMap"))]]), r.union("ScVal", { switchOn: r.lookup("ScValType"), switchName: "type", switches: [["scvBool", "b"], ["scvVoid", r.void()], ["scvError", "error"], ["scvU32", "u32"], ["scvI32", "i32"], ["scvU64", "u64"], ["scvI64", "i64"], ["scvTimepoint", "timepoint"], ["scvDuration", "duration"], ["scvU128", "u128"], ["scvI128", "i128"], ["scvU256", "u256"], ["scvI256", "i256"], ["scvBytes", "bytes"], ["scvString", "str"], ["scvSymbol", "sym"], ["scvVec", "vec"], ["scvMap", "map"], ["scvAddress", "address"], ["scvLedgerKeyContractInstance", r.void()], ["scvLedgerKeyNonce", "nonceKey"], ["scvContractInstance", "instance"]], arms: { b: r.bool(), error: r.lookup("ScError"), u32: r.lookup("Uint32"), i32: r.lookup("Int32"), u64: r.lookup("Uint64"), i64: r.lookup("Int64"), timepoint: r.lookup("TimePoint"), duration: r.lookup("Duration"), u128: r.lookup("UInt128Parts"), i128: r.lookup("Int128Parts"), u256: r.lookup("UInt256Parts"), i256: r.lookup("Int256Parts"), bytes: r.lookup("ScBytes"), str: r.lookup("ScString"), sym: r.lookup("ScSymbol"), vec: r.option(r.lookup("ScVec")), map: r.option(r.lookup("ScMap")), address: r.lookup("ScAddress"), nonceKey: r.lookup("ScNonceKey"), instance: r.lookup("ScContractInstance") } }), r.struct("ScMapEntry", [["key", r.lookup("ScVal")], ["val", r.lookup("ScVal")]]), r.enum("ScEnvMetaKind", { scEnvMetaKindInterfaceVersion: 0 }), r.struct("ScEnvMetaEntryInterfaceVersion", [["protocol", r.lookup("Uint32")], ["preRelease", r.lookup("Uint32")]]), r.union("ScEnvMetaEntry", { switchOn: r.lookup("ScEnvMetaKind"), switchName: "kind", switches: [["scEnvMetaKindInterfaceVersion", "interfaceVersion"]], arms: { interfaceVersion: r.lookup("ScEnvMetaEntryInterfaceVersion") } }), r.struct("ScMetaV0", [["key", r.string()], ["val", r.string()]]), r.enum("ScMetaKind", { scMetaV0: 0 }), r.union("ScMetaEntry", { switchOn: r.lookup("ScMetaKind"), switchName: "kind", switches: [["scMetaV0", "v0"]], arms: { v0: r.lookup("ScMetaV0") } }), r.const("SC_SPEC_DOC_LIMIT", 1024), r.enum("ScSpecType", { scSpecTypeVal: 0, scSpecTypeBool: 1, scSpecTypeVoid: 2, scSpecTypeError: 3, scSpecTypeU32: 4, scSpecTypeI32: 5, scSpecTypeU64: 6, scSpecTypeI64: 7, scSpecTypeTimepoint: 8, scSpecTypeDuration: 9, scSpecTypeU128: 10, scSpecTypeI128: 11, scSpecTypeU256: 12, scSpecTypeI256: 13, scSpecTypeBytes: 14, scSpecTypeString: 16, scSpecTypeSymbol: 17, scSpecTypeAddress: 19, scSpecTypeOption: 1e3, scSpecTypeResult: 1001, scSpecTypeVec: 1002, scSpecTypeMap: 1004, scSpecTypeTuple: 1005, scSpecTypeBytesN: 1006, scSpecTypeUdt: 2e3 }), r.struct("ScSpecTypeOption", [["valueType", r.lookup("ScSpecTypeDef")]]), r.struct("ScSpecTypeResult", [["okType", r.lookup("ScSpecTypeDef")], ["errorType", r.lookup("ScSpecTypeDef")]]), r.struct("ScSpecTypeVec", [["elementType", r.lookup("ScSpecTypeDef")]]), r.struct("ScSpecTypeMap", [["keyType", r.lookup("ScSpecTypeDef")], ["valueType", r.lookup("ScSpecTypeDef")]]), r.struct("ScSpecTypeTuple", [["valueTypes", r.varArray(r.lookup("ScSpecTypeDef"), 12)]]), r.struct("ScSpecTypeBytesN", [["n", r.lookup("Uint32")]]), r.struct("ScSpecTypeUdt", [["name", r.string(60)]]), r.union("ScSpecTypeDef", { switchOn: r.lookup("ScSpecType"), switchName: "type", switches: [["scSpecTypeVal", r.void()], ["scSpecTypeBool", r.void()], ["scSpecTypeVoid", r.void()], ["scSpecTypeError", r.void()], ["scSpecTypeU32", r.void()], ["scSpecTypeI32", r.void()], ["scSpecTypeU64", r.void()], ["scSpecTypeI64", r.void()], ["scSpecTypeTimepoint", r.void()], ["scSpecTypeDuration", r.void()], ["scSpecTypeU128", r.void()], ["scSpecTypeI128", r.void()], ["scSpecTypeU256", r.void()], ["scSpecTypeI256", r.void()], ["scSpecTypeBytes", r.void()], ["scSpecTypeString", r.void()], ["scSpecTypeSymbol", r.void()], ["scSpecTypeAddress", r.void()], ["scSpecTypeOption", "option"], ["scSpecTypeResult", "result"], ["scSpecTypeVec", "vec"], ["scSpecTypeMap", "map"], ["scSpecTypeTuple", "tuple"], ["scSpecTypeBytesN", "bytesN"], ["scSpecTypeUdt", "udt"]], arms: { option: r.lookup("ScSpecTypeOption"), result: r.lookup("ScSpecTypeResult"), vec: r.lookup("ScSpecTypeVec"), map: r.lookup("ScSpecTypeMap"), tuple: r.lookup("ScSpecTypeTuple"), bytesN: r.lookup("ScSpecTypeBytesN"), udt: r.lookup("ScSpecTypeUdt") } }), r.struct("ScSpecUdtStructFieldV0", [["doc", r.string(m)], ["name", r.string(30)], ["type", r.lookup("ScSpecTypeDef")]]), r.struct("ScSpecUdtStructV0", [["doc", r.string(m)], ["lib", r.string(80)], ["name", r.string(60)], ["fields", r.varArray(r.lookup("ScSpecUdtStructFieldV0"), 40)]]), r.struct("ScSpecUdtUnionCaseVoidV0", [["doc", r.string(m)], ["name", r.string(60)]]), r.struct("ScSpecUdtUnionCaseTupleV0", [["doc", r.string(m)], ["name", r.string(60)], ["type", r.varArray(r.lookup("ScSpecTypeDef"), 12)]]), r.enum("ScSpecUdtUnionCaseV0Kind", { scSpecUdtUnionCaseVoidV0: 0, scSpecUdtUnionCaseTupleV0: 1 }), r.union("ScSpecUdtUnionCaseV0", { switchOn: r.lookup("ScSpecUdtUnionCaseV0Kind"), switchName: "kind", switches: [["scSpecUdtUnionCaseVoidV0", "voidCase"], ["scSpecUdtUnionCaseTupleV0", "tupleCase"]], arms: { voidCase: r.lookup("ScSpecUdtUnionCaseVoidV0"), tupleCase: r.lookup("ScSpecUdtUnionCaseTupleV0") } }), r.struct("ScSpecUdtUnionV0", [["doc", r.string(m)], ["lib", r.string(80)], ["name", r.string(60)], ["cases", r.varArray(r.lookup("ScSpecUdtUnionCaseV0"), 50)]]), r.struct("ScSpecUdtEnumCaseV0", [["doc", r.string(m)], ["name", r.string(60)], ["value", r.lookup("Uint32")]]), r.struct("ScSpecUdtEnumV0", [["doc", r.string(m)], ["lib", r.string(80)], ["name", r.string(60)], ["cases", r.varArray(r.lookup("ScSpecUdtEnumCaseV0"), 50)]]), r.struct("ScSpecUdtErrorEnumCaseV0", [["doc", r.string(m)], ["name", r.string(60)], ["value", r.lookup("Uint32")]]), r.struct("ScSpecUdtErrorEnumV0", [["doc", r.string(m)], ["lib", r.string(80)], ["name", r.string(60)], ["cases", r.varArray(r.lookup("ScSpecUdtErrorEnumCaseV0"), 50)]]), r.struct("ScSpecFunctionInputV0", [["doc", r.string(m)], ["name", r.string(30)], ["type", r.lookup("ScSpecTypeDef")]]), r.struct("ScSpecFunctionV0", [["doc", r.string(m)], ["name", r.lookup("ScSymbol")], ["inputs", r.varArray(r.lookup("ScSpecFunctionInputV0"), 10)], ["outputs", r.varArray(r.lookup("ScSpecTypeDef"), 1)]]), r.enum("ScSpecEntryKind", { scSpecEntryFunctionV0: 0, scSpecEntryUdtStructV0: 1, scSpecEntryUdtUnionV0: 2, scSpecEntryUdtEnumV0: 3, scSpecEntryUdtErrorEnumV0: 4 }), r.union("ScSpecEntry", { switchOn: r.lookup("ScSpecEntryKind"), switchName: "kind", switches: [["scSpecEntryFunctionV0", "functionV0"], ["scSpecEntryUdtStructV0", "udtStructV0"], ["scSpecEntryUdtUnionV0", "udtUnionV0"], ["scSpecEntryUdtEnumV0", "udtEnumV0"], ["scSpecEntryUdtErrorEnumV0", "udtErrorEnumV0"]], arms: { functionV0: r.lookup("ScSpecFunctionV0"), udtStructV0: r.lookup("ScSpecUdtStructV0"), udtUnionV0: r.lookup("ScSpecUdtUnionV0"), udtEnumV0: r.lookup("ScSpecUdtEnumV0"), udtErrorEnumV0: r.lookup("ScSpecUdtErrorEnumV0") } }), r.struct("ConfigSettingContractExecutionLanesV0", [["ledgerMaxTxCount", r.lookup("Uint32")]]), r.struct("ConfigSettingContractComputeV0", [["ledgerMaxInstructions", r.lookup("Int64")], ["txMaxInstructions", r.lookup("Int64")], ["feeRatePerInstructionsIncrement", r.lookup("Int64")], ["txMemoryLimit", r.lookup("Uint32")]]), r.struct("ConfigSettingContractLedgerCostV0", [["ledgerMaxReadLedgerEntries", r.lookup("Uint32")], ["ledgerMaxReadBytes", r.lookup("Uint32")], ["ledgerMaxWriteLedgerEntries", r.lookup("Uint32")], ["ledgerMaxWriteBytes", r.lookup("Uint32")], ["txMaxReadLedgerEntries", r.lookup("Uint32")], ["txMaxReadBytes", r.lookup("Uint32")], ["txMaxWriteLedgerEntries", r.lookup("Uint32")], ["txMaxWriteBytes", r.lookup("Uint32")], ["feeReadLedgerEntry", r.lookup("Int64")], ["feeWriteLedgerEntry", r.lookup("Int64")], ["feeRead1Kb", r.lookup("Int64")], ["bucketListTargetSizeBytes", r.lookup("Int64")], ["writeFee1KbBucketListLow", r.lookup("Int64")], ["writeFee1KbBucketListHigh", r.lookup("Int64")], ["bucketListWriteFeeGrowthFactor", r.lookup("Uint32")]]), r.struct("ConfigSettingContractHistoricalDataV0", [["feeHistorical1Kb", r.lookup("Int64")]]), r.struct("ConfigSettingContractEventsV0", [["txMaxContractEventsSizeBytes", r.lookup("Uint32")], ["feeContractEvents1Kb", r.lookup("Int64")]]), r.struct("ConfigSettingContractBandwidthV0", [["ledgerMaxTxsSizeBytes", r.lookup("Uint32")], ["txMaxSizeBytes", r.lookup("Uint32")], ["feeTxSize1Kb", r.lookup("Int64")]]), r.enum("ContractCostType", { wasmInsnExec: 0, memAlloc: 1, memCpy: 2, memCmp: 3, dispatchHostFunction: 4, visitObject: 5, valSer: 6, valDeser: 7, computeSha256Hash: 8, computeEd25519PubKey: 9, verifyEd25519Sig: 10, vmInstantiation: 11, vmCachedInstantiation: 12, invokeVmFunction: 13, computeKeccak256Hash: 14, decodeEcdsaCurve256Sig: 15, recoverEcdsaSecp256k1Key: 16, int256AddSub: 17, int256Mul: 18, int256Div: 19, int256Pow: 20, int256Shift: 21, chaCha20DrawBytes: 22, parseWasmInstructions: 23, parseWasmFunctions: 24, parseWasmGlobals: 25, parseWasmTableEntries: 26, parseWasmTypes: 27, parseWasmDataSegments: 28, parseWasmElemSegments: 29, parseWasmImports: 30, parseWasmExports: 31, parseWasmDataSegmentBytes: 32, instantiateWasmInstructions: 33, instantiateWasmFunctions: 34, instantiateWasmGlobals: 35, instantiateWasmTableEntries: 36, instantiateWasmTypes: 37, instantiateWasmDataSegments: 38, instantiateWasmElemSegments: 39, instantiateWasmImports: 40, instantiateWasmExports: 41, instantiateWasmDataSegmentBytes: 42, sec1DecodePointUncompressed: 43, verifyEcdsaSecp256r1Sig: 44, bls12381EncodeFp: 45, bls12381DecodeFp: 46, bls12381G1CheckPointOnCurve: 47, bls12381G1CheckPointInSubgroup: 48, bls12381G2CheckPointOnCurve: 49, bls12381G2CheckPointInSubgroup: 50, bls12381G1ProjectiveToAffine: 51, bls12381G2ProjectiveToAffine: 52, bls12381G1Add: 53, bls12381G1Mul: 54, bls12381G1Msm: 55, bls12381MapFpToG1: 56, bls12381HashToG1: 57, bls12381G2Add: 58, bls12381G2Mul: 59, bls12381G2Msm: 60, bls12381MapFp2ToG2: 61, bls12381HashToG2: 62, bls12381Pairing: 63, bls12381FrFromU256: 64, bls12381FrToU256: 65, bls12381FrAddSub: 66, bls12381FrMul: 67, bls12381FrPow: 68, bls12381FrInv: 69 }), r.struct("ContractCostParamEntry", [["ext", r.lookup("ExtensionPoint")], ["constTerm", r.lookup("Int64")], ["linearTerm", r.lookup("Int64")]]), r.struct("StateArchivalSettings", [["maxEntryTtl", r.lookup("Uint32")], ["minTemporaryTtl", r.lookup("Uint32")], ["minPersistentTtl", r.lookup("Uint32")], ["persistentRentRateDenominator", r.lookup("Int64")], ["tempRentRateDenominator", r.lookup("Int64")], ["maxEntriesToArchive", r.lookup("Uint32")], ["bucketListSizeWindowSampleSize", r.lookup("Uint32")], ["bucketListWindowSamplePeriod", r.lookup("Uint32")], ["evictionScanSize", r.lookup("Uint32")], ["startingEvictionScanLevel", r.lookup("Uint32")]]), r.struct("EvictionIterator", [["bucketListLevel", r.lookup("Uint32")], ["isCurrBucket", r.bool()], ["bucketFileOffset", r.lookup("Uint64")]]), r.const("CONTRACT_COST_COUNT_LIMIT", 1024), r.typedef("ContractCostParams", r.varArray(r.lookup("ContractCostParamEntry"), r.lookup("CONTRACT_COST_COUNT_LIMIT"))), r.enum("ConfigSettingId", { configSettingContractMaxSizeBytes: 0, configSettingContractComputeV0: 1, configSettingContractLedgerCostV0: 2, configSettingContractHistoricalDataV0: 3, configSettingContractEventsV0: 4, configSettingContractBandwidthV0: 5, configSettingContractCostParamsCpuInstructions: 6, configSettingContractCostParamsMemoryBytes: 7, configSettingContractDataKeySizeBytes: 8, configSettingContractDataEntrySizeBytes: 9, configSettingStateArchival: 10, configSettingContractExecutionLanes: 11, configSettingBucketlistSizeWindow: 12, configSettingEvictionIterator: 13 }), r.union("ConfigSettingEntry", { switchOn: r.lookup("ConfigSettingId"), switchName: "configSettingId", switches: [["configSettingContractMaxSizeBytes", "contractMaxSizeBytes"], ["configSettingContractComputeV0", "contractCompute"], ["configSettingContractLedgerCostV0", "contractLedgerCost"], ["configSettingContractHistoricalDataV0", "contractHistoricalData"], ["configSettingContractEventsV0", "contractEvents"], ["configSettingContractBandwidthV0", "contractBandwidth"], ["configSettingContractCostParamsCpuInstructions", "contractCostParamsCpuInsns"], ["configSettingContractCostParamsMemoryBytes", "contractCostParamsMemBytes"], ["configSettingContractDataKeySizeBytes", "contractDataKeySizeBytes"], ["configSettingContractDataEntrySizeBytes", "contractDataEntrySizeBytes"], ["configSettingStateArchival", "stateArchivalSettings"], ["configSettingContractExecutionLanes", "contractExecutionLanes"], ["configSettingBucketlistSizeWindow", "bucketListSizeWindow"], ["configSettingEvictionIterator", "evictionIterator"]], arms: { contractMaxSizeBytes: r.lookup("Uint32"), contractCompute: r.lookup("ConfigSettingContractComputeV0"), contractLedgerCost: r.lookup("ConfigSettingContractLedgerCostV0"), contractHistoricalData: r.lookup("ConfigSettingContractHistoricalDataV0"), contractEvents: r.lookup("ConfigSettingContractEventsV0"), contractBandwidth: r.lookup("ConfigSettingContractBandwidthV0"), contractCostParamsCpuInsns: r.lookup("ContractCostParams"), contractCostParamsMemBytes: r.lookup("ContractCostParams"), contractDataKeySizeBytes: r.lookup("Uint32"), contractDataEntrySizeBytes: r.lookup("Uint32"), stateArchivalSettings: r.lookup("StateArchivalSettings"), contractExecutionLanes: r.lookup("ConfigSettingContractExecutionLanesV0"), bucketListSizeWindow: r.varArray(r.lookup("Uint64"), 2147483647), evictionIterator: r.lookup("EvictionIterator") } });
        });
        o.default = f;
      }, 8002: (t) => {
        t.exports = Math.min;
      }, 8068: (t) => {
        t.exports = SyntaxError;
      }, 8184: (t, o, s) => {
        var c, h = s(6556), f = s(9721)(/^\s*(?:function)?\*/), r = s(9092)(), m = s(3628), g = h("Object.prototype.toString"), a = h("Function.prototype.toString");
        t.exports = function(l) {
          if (typeof l != "function") return false;
          if (f(a(l))) return true;
          if (!r) return g(l) === "[object GeneratorFunction]";
          if (!m) return false;
          if (c === void 0) {
            var d = function() {
              if (!r) return false;
              try {
                return Function("return function*() {}")();
              } catch {
              }
            }();
            c = !!d && m(d);
          }
          return m(l) === c;
        };
      }, 8242: (t, o, s) => {
        s.r(o), s.d(o, { Api: () => {
        } });
      }, 8287: (t, o, s) => {
        const c = s(7526), h = s(251), f = typeof Symbol == "function" && typeof Symbol.for == "function" ? Symbol.for("nodejs.util.inspect.custom") : null;
        o.Buffer = g, o.SlowBuffer = function(T) {
          return +T != T && (T = 0), g.alloc(+T);
        }, o.INSPECT_MAX_BYTES = 50;
        const r = 2147483647;
        function m(T) {
          if (T > r) throw new RangeError('The value "' + T + '" is invalid for option "size"');
          const O = new Uint8Array(T);
          return Object.setPrototypeOf(O, g.prototype), O;
        }
        function g(T, O, V) {
          if (typeof T == "number") {
            if (typeof O == "string") throw new TypeError('The "string" argument must be of type string. Received type number');
            return d(T);
          }
          return a(T, O, V);
        }
        function a(T, O, V) {
          if (typeof T == "string") return function(p, A) {
            if (typeof A == "string" && A !== "" || (A = "utf8"), !g.isEncoding(A)) throw new TypeError("Unknown encoding: " + A);
            const U = 0 | R(p, A);
            let Y = m(U);
            const ae = Y.write(p, A);
            return ae !== U && (Y = Y.slice(0, ae)), Y;
          }(T, O);
          if (ArrayBuffer.isView(T)) return function(p) {
            if (_e(p, Uint8Array)) {
              const A = new Uint8Array(p);
              return S(A.buffer, A.byteOffset, A.byteLength);
            }
            return b(p);
          }(T);
          if (T == null) throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof T);
          if (_e(T, ArrayBuffer) || T && _e(T.buffer, ArrayBuffer) || typeof SharedArrayBuffer < "u" && (_e(T, SharedArrayBuffer) || T && _e(T.buffer, SharedArrayBuffer))) return S(T, O, V);
          if (typeof T == "number") throw new TypeError('The "value" argument must not be of type number. Received type number');
          const D = T.valueOf && T.valueOf();
          if (D != null && D !== T) return g.from(D, O, V);
          const C = function(p) {
            if (g.isBuffer(p)) {
              const A = 0 | E(p.length), U = m(A);
              return U.length === 0 || p.copy(U, 0, 0, A), U;
            }
            if (p.length !== void 0) return typeof p.length != "number" || Be(p.length) ? m(0) : b(p);
            if (p.type === "Buffer" && Array.isArray(p.data)) return b(p.data);
          }(T);
          if (C) return C;
          if (typeof Symbol < "u" && Symbol.toPrimitive != null && typeof T[Symbol.toPrimitive] == "function") return g.from(T[Symbol.toPrimitive]("string"), O, V);
          throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof T);
        }
        function l(T) {
          if (typeof T != "number") throw new TypeError('"size" argument must be of type number');
          if (T < 0) throw new RangeError('The value "' + T + '" is invalid for option "size"');
        }
        function d(T) {
          return l(T), m(T < 0 ? 0 : 0 | E(T));
        }
        function b(T) {
          const O = T.length < 0 ? 0 : 0 | E(T.length), V = m(O);
          for (let D = 0; D < O; D += 1) V[D] = 255 & T[D];
          return V;
        }
        function S(T, O, V) {
          if (O < 0 || T.byteLength < O) throw new RangeError('"offset" is outside of buffer bounds');
          if (T.byteLength < O + (V || 0)) throw new RangeError('"length" is outside of buffer bounds');
          let D;
          return D = O === void 0 && V === void 0 ? new Uint8Array(T) : V === void 0 ? new Uint8Array(T, O) : new Uint8Array(T, O, V), Object.setPrototypeOf(D, g.prototype), D;
        }
        function E(T) {
          if (T >= r) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + r.toString(16) + " bytes");
          return 0 | T;
        }
        function R(T, O) {
          if (g.isBuffer(T)) return T.length;
          if (ArrayBuffer.isView(T) || _e(T, ArrayBuffer)) return T.byteLength;
          if (typeof T != "string") throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof T);
          const V = T.length, D = arguments.length > 2 && arguments[2] === true;
          if (!D && V === 0) return 0;
          let C = false;
          for (; ; ) switch (O) {
            case "ascii":
            case "latin1":
            case "binary":
              return V;
            case "utf8":
            case "utf-8":
              return Oe(T).length;
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return 2 * V;
            case "hex":
              return V >>> 1;
            case "base64":
              return xe(T).length;
            default:
              if (C) return D ? -1 : Oe(T).length;
              O = ("" + O).toLowerCase(), C = true;
          }
        }
        function k(T, O, V) {
          let D = false;
          if ((O === void 0 || O < 0) && (O = 0), O > this.length || ((V === void 0 || V > this.length) && (V = this.length), V <= 0) || (V >>>= 0) <= (O >>>= 0)) return "";
          for (T || (T = "utf8"); ; ) switch (T) {
            case "hex":
              return $(this, O, V);
            case "utf8":
            case "utf-8":
              return j(this, O, V);
            case "ascii":
              return Z(this, O, V);
            case "latin1":
            case "binary":
              return ue(this, O, V);
            case "base64":
              return L(this, O, V);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return X(this, O, V);
            default:
              if (D) throw new TypeError("Unknown encoding: " + T);
              T = (T + "").toLowerCase(), D = true;
          }
        }
        function w(T, O, V) {
          const D = T[O];
          T[O] = T[V], T[V] = D;
        }
        function F(T, O, V, D, C) {
          if (T.length === 0) return -1;
          if (typeof V == "string" ? (D = V, V = 0) : V > 2147483647 ? V = 2147483647 : V < -2147483648 && (V = -2147483648), Be(V = +V) && (V = C ? 0 : T.length - 1), V < 0 && (V = T.length + V), V >= T.length) {
            if (C) return -1;
            V = T.length - 1;
          } else if (V < 0) {
            if (!C) return -1;
            V = 0;
          }
          if (typeof O == "string" && (O = g.from(O, D)), g.isBuffer(O)) return O.length === 0 ? -1 : I(T, O, V, D, C);
          if (typeof O == "number") return O &= 255, typeof Uint8Array.prototype.indexOf == "function" ? C ? Uint8Array.prototype.indexOf.call(T, O, V) : Uint8Array.prototype.lastIndexOf.call(T, O, V) : I(T, [O], V, D, C);
          throw new TypeError("val must be string, number or Buffer");
        }
        function I(T, O, V, D, C) {
          let p, A = 1, U = T.length, Y = O.length;
          if (D !== void 0 && ((D = String(D).toLowerCase()) === "ucs2" || D === "ucs-2" || D === "utf16le" || D === "utf-16le")) {
            if (T.length < 2 || O.length < 2) return -1;
            A = 2, U /= 2, Y /= 2, V /= 2;
          }
          function ae(W, de) {
            return A === 1 ? W[de] : W.readUInt16BE(de * A);
          }
          if (C) {
            let W = -1;
            for (p = V; p < U; p++) if (ae(T, p) === ae(O, W === -1 ? 0 : p - W)) {
              if (W === -1 && (W = p), p - W + 1 === Y) return W * A;
            } else W !== -1 && (p -= p - W), W = -1;
          } else for (V + Y > U && (V = U - Y), p = V; p >= 0; p--) {
            let W = true;
            for (let de = 0; de < Y; de++) if (ae(T, p + de) !== ae(O, de)) {
              W = false;
              break;
            }
            if (W) return p;
          }
          return -1;
        }
        function q(T, O, V, D) {
          V = Number(V) || 0;
          const C = T.length - V;
          D ? (D = Number(D)) > C && (D = C) : D = C;
          const p = O.length;
          let A;
          for (D > p / 2 && (D = p / 2), A = 0; A < D; ++A) {
            const U = parseInt(O.substr(2 * A, 2), 16);
            if (Be(U)) return A;
            T[V + A] = U;
          }
          return A;
        }
        function N(T, O, V, D) {
          return Ve(Oe(O, T.length - V), T, V, D);
        }
        function H(T, O, V, D) {
          return Ve(function(C) {
            const p = [];
            for (let A = 0; A < C.length; ++A) p.push(255 & C.charCodeAt(A));
            return p;
          }(O), T, V, D);
        }
        function _(T, O, V, D) {
          return Ve(xe(O), T, V, D);
        }
        function x(T, O, V, D) {
          return Ve(function(C, p) {
            let A, U, Y;
            const ae = [];
            for (let W = 0; W < C.length && !((p -= 2) < 0); ++W) A = C.charCodeAt(W), U = A >> 8, Y = A % 256, ae.push(Y), ae.push(U);
            return ae;
          }(O, T.length - V), T, V, D);
        }
        function L(T, O, V) {
          return O === 0 && V === T.length ? c.fromByteArray(T) : c.fromByteArray(T.slice(O, V));
        }
        function j(T, O, V) {
          V = Math.min(T.length, V);
          const D = [];
          let C = O;
          for (; C < V; ) {
            const p = T[C];
            let A = null, U = p > 239 ? 4 : p > 223 ? 3 : p > 191 ? 2 : 1;
            if (C + U <= V) {
              let Y, ae, W, de;
              switch (U) {
                case 1:
                  p < 128 && (A = p);
                  break;
                case 2:
                  Y = T[C + 1], (192 & Y) == 128 && (de = (31 & p) << 6 | 63 & Y, de > 127 && (A = de));
                  break;
                case 3:
                  Y = T[C + 1], ae = T[C + 2], (192 & Y) == 128 && (192 & ae) == 128 && (de = (15 & p) << 12 | (63 & Y) << 6 | 63 & ae, de > 2047 && (de < 55296 || de > 57343) && (A = de));
                  break;
                case 4:
                  Y = T[C + 1], ae = T[C + 2], W = T[C + 3], (192 & Y) == 128 && (192 & ae) == 128 && (192 & W) == 128 && (de = (15 & p) << 18 | (63 & Y) << 12 | (63 & ae) << 6 | 63 & W, de > 65535 && de < 1114112 && (A = de));
              }
            }
            A === null ? (A = 65533, U = 1) : A > 65535 && (A -= 65536, D.push(A >>> 10 & 1023 | 55296), A = 56320 | 1023 & A), D.push(A), C += U;
          }
          return function(p) {
            const A = p.length;
            if (A <= z) return String.fromCharCode.apply(String, p);
            let U = "", Y = 0;
            for (; Y < A; ) U += String.fromCharCode.apply(String, p.slice(Y, Y += z));
            return U;
          }(D);
        }
        o.kMaxLength = r, g.TYPED_ARRAY_SUPPORT = function() {
          try {
            const T = new Uint8Array(1), O = { foo: function() {
              return 42;
            } };
            return Object.setPrototypeOf(O, Uint8Array.prototype), Object.setPrototypeOf(T, O), T.foo() === 42;
          } catch {
            return false;
          }
        }(), g.TYPED_ARRAY_SUPPORT || typeof console > "u" || typeof console.error != "function" || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."), Object.defineProperty(g.prototype, "parent", { enumerable: true, get: function() {
          if (g.isBuffer(this)) return this.buffer;
        } }), Object.defineProperty(g.prototype, "offset", { enumerable: true, get: function() {
          if (g.isBuffer(this)) return this.byteOffset;
        } }), g.poolSize = 8192, g.from = function(T, O, V) {
          return a(T, O, V);
        }, Object.setPrototypeOf(g.prototype, Uint8Array.prototype), Object.setPrototypeOf(g, Uint8Array), g.alloc = function(T, O, V) {
          return function(D, C, p) {
            return l(D), D <= 0 ? m(D) : C !== void 0 ? typeof p == "string" ? m(D).fill(C, p) : m(D).fill(C) : m(D);
          }(T, O, V);
        }, g.allocUnsafe = function(T) {
          return d(T);
        }, g.allocUnsafeSlow = function(T) {
          return d(T);
        }, g.isBuffer = function(T) {
          return T != null && T._isBuffer === true && T !== g.prototype;
        }, g.compare = function(T, O) {
          if (_e(T, Uint8Array) && (T = g.from(T, T.offset, T.byteLength)), _e(O, Uint8Array) && (O = g.from(O, O.offset, O.byteLength)), !g.isBuffer(T) || !g.isBuffer(O)) throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
          if (T === O) return 0;
          let V = T.length, D = O.length;
          for (let C = 0, p = Math.min(V, D); C < p; ++C) if (T[C] !== O[C]) {
            V = T[C], D = O[C];
            break;
          }
          return V < D ? -1 : D < V ? 1 : 0;
        }, g.isEncoding = function(T) {
          switch (String(T).toLowerCase()) {
            case "hex":
            case "utf8":
            case "utf-8":
            case "ascii":
            case "latin1":
            case "binary":
            case "base64":
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return true;
            default:
              return false;
          }
        }, g.concat = function(T, O) {
          if (!Array.isArray(T)) throw new TypeError('"list" argument must be an Array of Buffers');
          if (T.length === 0) return g.alloc(0);
          let V;
          if (O === void 0) for (O = 0, V = 0; V < T.length; ++V) O += T[V].length;
          const D = g.allocUnsafe(O);
          let C = 0;
          for (V = 0; V < T.length; ++V) {
            let p = T[V];
            if (_e(p, Uint8Array)) C + p.length > D.length ? (g.isBuffer(p) || (p = g.from(p)), p.copy(D, C)) : Uint8Array.prototype.set.call(D, p, C);
            else {
              if (!g.isBuffer(p)) throw new TypeError('"list" argument must be an Array of Buffers');
              p.copy(D, C);
            }
            C += p.length;
          }
          return D;
        }, g.byteLength = R, g.prototype._isBuffer = true, g.prototype.swap16 = function() {
          const T = this.length;
          if (T % 2 != 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
          for (let O = 0; O < T; O += 2) w(this, O, O + 1);
          return this;
        }, g.prototype.swap32 = function() {
          const T = this.length;
          if (T % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
          for (let O = 0; O < T; O += 4) w(this, O, O + 3), w(this, O + 1, O + 2);
          return this;
        }, g.prototype.swap64 = function() {
          const T = this.length;
          if (T % 8 != 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
          for (let O = 0; O < T; O += 8) w(this, O, O + 7), w(this, O + 1, O + 6), w(this, O + 2, O + 5), w(this, O + 3, O + 4);
          return this;
        }, g.prototype.toString = function() {
          const T = this.length;
          return T === 0 ? "" : arguments.length === 0 ? j(this, 0, T) : k.apply(this, arguments);
        }, g.prototype.toLocaleString = g.prototype.toString, g.prototype.equals = function(T) {
          if (!g.isBuffer(T)) throw new TypeError("Argument must be a Buffer");
          return this === T || g.compare(this, T) === 0;
        }, g.prototype.inspect = function() {
          let T = "";
          const O = o.INSPECT_MAX_BYTES;
          return T = this.toString("hex", 0, O).replace(/(.{2})/g, "$1 ").trim(), this.length > O && (T += " ... "), "<Buffer " + T + ">";
        }, f && (g.prototype[f] = g.prototype.inspect), g.prototype.compare = function(T, O, V, D, C) {
          if (_e(T, Uint8Array) && (T = g.from(T, T.offset, T.byteLength)), !g.isBuffer(T)) throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof T);
          if (O === void 0 && (O = 0), V === void 0 && (V = T ? T.length : 0), D === void 0 && (D = 0), C === void 0 && (C = this.length), O < 0 || V > T.length || D < 0 || C > this.length) throw new RangeError("out of range index");
          if (D >= C && O >= V) return 0;
          if (D >= C) return -1;
          if (O >= V) return 1;
          if (this === T) return 0;
          let p = (C >>>= 0) - (D >>>= 0), A = (V >>>= 0) - (O >>>= 0);
          const U = Math.min(p, A), Y = this.slice(D, C), ae = T.slice(O, V);
          for (let W = 0; W < U; ++W) if (Y[W] !== ae[W]) {
            p = Y[W], A = ae[W];
            break;
          }
          return p < A ? -1 : A < p ? 1 : 0;
        }, g.prototype.includes = function(T, O, V) {
          return this.indexOf(T, O, V) !== -1;
        }, g.prototype.indexOf = function(T, O, V) {
          return F(this, T, O, V, true);
        }, g.prototype.lastIndexOf = function(T, O, V) {
          return F(this, T, O, V, false);
        }, g.prototype.write = function(T, O, V, D) {
          if (O === void 0) D = "utf8", V = this.length, O = 0;
          else if (V === void 0 && typeof O == "string") D = O, V = this.length, O = 0;
          else {
            if (!isFinite(O)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
            O >>>= 0, isFinite(V) ? (V >>>= 0, D === void 0 && (D = "utf8")) : (D = V, V = void 0);
          }
          const C = this.length - O;
          if ((V === void 0 || V > C) && (V = C), T.length > 0 && (V < 0 || O < 0) || O > this.length) throw new RangeError("Attempt to write outside buffer bounds");
          D || (D = "utf8");
          let p = false;
          for (; ; ) switch (D) {
            case "hex":
              return q(this, T, O, V);
            case "utf8":
            case "utf-8":
              return N(this, T, O, V);
            case "ascii":
            case "latin1":
            case "binary":
              return H(this, T, O, V);
            case "base64":
              return _(this, T, O, V);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return x(this, T, O, V);
            default:
              if (p) throw new TypeError("Unknown encoding: " + D);
              D = ("" + D).toLowerCase(), p = true;
          }
        }, g.prototype.toJSON = function() {
          return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
        };
        const z = 4096;
        function Z(T, O, V) {
          let D = "";
          V = Math.min(T.length, V);
          for (let C = O; C < V; ++C) D += String.fromCharCode(127 & T[C]);
          return D;
        }
        function ue(T, O, V) {
          let D = "";
          V = Math.min(T.length, V);
          for (let C = O; C < V; ++C) D += String.fromCharCode(T[C]);
          return D;
        }
        function $(T, O, V) {
          const D = T.length;
          (!O || O < 0) && (O = 0), (!V || V < 0 || V > D) && (V = D);
          let C = "";
          for (let p = O; p < V; ++p) C += Qe[T[p]];
          return C;
        }
        function X(T, O, V) {
          const D = T.slice(O, V);
          let C = "";
          for (let p = 0; p < D.length - 1; p += 2) C += String.fromCharCode(D[p] + 256 * D[p + 1]);
          return C;
        }
        function J(T, O, V) {
          if (T % 1 != 0 || T < 0) throw new RangeError("offset is not uint");
          if (T + O > V) throw new RangeError("Trying to access beyond buffer length");
        }
        function B(T, O, V, D, C, p) {
          if (!g.isBuffer(T)) throw new TypeError('"buffer" argument must be a Buffer instance');
          if (O > C || O < p) throw new RangeError('"value" argument is out of bounds');
          if (V + D > T.length) throw new RangeError("Index out of range");
        }
        function Q(T, O, V, D, C) {
          re(O, D, C, T, V, 7);
          let p = Number(O & BigInt(4294967295));
          T[V++] = p, p >>= 8, T[V++] = p, p >>= 8, T[V++] = p, p >>= 8, T[V++] = p;
          let A = Number(O >> BigInt(32) & BigInt(4294967295));
          return T[V++] = A, A >>= 8, T[V++] = A, A >>= 8, T[V++] = A, A >>= 8, T[V++] = A, V;
        }
        function ne(T, O, V, D, C) {
          re(O, D, C, T, V, 7);
          let p = Number(O & BigInt(4294967295));
          T[V + 7] = p, p >>= 8, T[V + 6] = p, p >>= 8, T[V + 5] = p, p >>= 8, T[V + 4] = p;
          let A = Number(O >> BigInt(32) & BigInt(4294967295));
          return T[V + 3] = A, A >>= 8, T[V + 2] = A, A >>= 8, T[V + 1] = A, A >>= 8, T[V] = A, V + 8;
        }
        function K(T, O, V, D, C, p) {
          if (V + D > T.length) throw new RangeError("Index out of range");
          if (V < 0) throw new RangeError("Index out of range");
        }
        function ie(T, O, V, D, C) {
          return O = +O, V >>>= 0, C || K(T, 0, V, 4), h.write(T, O, V, D, 23, 4), V + 4;
        }
        function ce(T, O, V, D, C) {
          return O = +O, V >>>= 0, C || K(T, 0, V, 8), h.write(T, O, V, D, 52, 8), V + 8;
        }
        g.prototype.slice = function(T, O) {
          const V = this.length;
          (T = ~~T) < 0 ? (T += V) < 0 && (T = 0) : T > V && (T = V), (O = O === void 0 ? V : ~~O) < 0 ? (O += V) < 0 && (O = 0) : O > V && (O = V), O < T && (O = T);
          const D = this.subarray(T, O);
          return Object.setPrototypeOf(D, g.prototype), D;
        }, g.prototype.readUintLE = g.prototype.readUIntLE = function(T, O, V) {
          T >>>= 0, O >>>= 0, V || J(T, O, this.length);
          let D = this[T], C = 1, p = 0;
          for (; ++p < O && (C *= 256); ) D += this[T + p] * C;
          return D;
        }, g.prototype.readUintBE = g.prototype.readUIntBE = function(T, O, V) {
          T >>>= 0, O >>>= 0, V || J(T, O, this.length);
          let D = this[T + --O], C = 1;
          for (; O > 0 && (C *= 256); ) D += this[T + --O] * C;
          return D;
        }, g.prototype.readUint8 = g.prototype.readUInt8 = function(T, O) {
          return T >>>= 0, O || J(T, 1, this.length), this[T];
        }, g.prototype.readUint16LE = g.prototype.readUInt16LE = function(T, O) {
          return T >>>= 0, O || J(T, 2, this.length), this[T] | this[T + 1] << 8;
        }, g.prototype.readUint16BE = g.prototype.readUInt16BE = function(T, O) {
          return T >>>= 0, O || J(T, 2, this.length), this[T] << 8 | this[T + 1];
        }, g.prototype.readUint32LE = g.prototype.readUInt32LE = function(T, O) {
          return T >>>= 0, O || J(T, 4, this.length), (this[T] | this[T + 1] << 8 | this[T + 2] << 16) + 16777216 * this[T + 3];
        }, g.prototype.readUint32BE = g.prototype.readUInt32BE = function(T, O) {
          return T >>>= 0, O || J(T, 4, this.length), 16777216 * this[T] + (this[T + 1] << 16 | this[T + 2] << 8 | this[T + 3]);
        }, g.prototype.readBigUInt64LE = ee(function(T) {
          ge(T >>>= 0, "offset");
          const O = this[T], V = this[T + 7];
          O !== void 0 && V !== void 0 || Te(T, this.length - 8);
          const D = O + 256 * this[++T] + 65536 * this[++T] + this[++T] * 2 ** 24, C = this[++T] + 256 * this[++T] + 65536 * this[++T] + V * 2 ** 24;
          return BigInt(D) + (BigInt(C) << BigInt(32));
        }), g.prototype.readBigUInt64BE = ee(function(T) {
          ge(T >>>= 0, "offset");
          const O = this[T], V = this[T + 7];
          O !== void 0 && V !== void 0 || Te(T, this.length - 8);
          const D = O * 2 ** 24 + 65536 * this[++T] + 256 * this[++T] + this[++T], C = this[++T] * 2 ** 24 + 65536 * this[++T] + 256 * this[++T] + V;
          return (BigInt(D) << BigInt(32)) + BigInt(C);
        }), g.prototype.readIntLE = function(T, O, V) {
          T >>>= 0, O >>>= 0, V || J(T, O, this.length);
          let D = this[T], C = 1, p = 0;
          for (; ++p < O && (C *= 256); ) D += this[T + p] * C;
          return C *= 128, D >= C && (D -= Math.pow(2, 8 * O)), D;
        }, g.prototype.readIntBE = function(T, O, V) {
          T >>>= 0, O >>>= 0, V || J(T, O, this.length);
          let D = O, C = 1, p = this[T + --D];
          for (; D > 0 && (C *= 256); ) p += this[T + --D] * C;
          return C *= 128, p >= C && (p -= Math.pow(2, 8 * O)), p;
        }, g.prototype.readInt8 = function(T, O) {
          return T >>>= 0, O || J(T, 1, this.length), 128 & this[T] ? -1 * (255 - this[T] + 1) : this[T];
        }, g.prototype.readInt16LE = function(T, O) {
          T >>>= 0, O || J(T, 2, this.length);
          const V = this[T] | this[T + 1] << 8;
          return 32768 & V ? 4294901760 | V : V;
        }, g.prototype.readInt16BE = function(T, O) {
          T >>>= 0, O || J(T, 2, this.length);
          const V = this[T + 1] | this[T] << 8;
          return 32768 & V ? 4294901760 | V : V;
        }, g.prototype.readInt32LE = function(T, O) {
          return T >>>= 0, O || J(T, 4, this.length), this[T] | this[T + 1] << 8 | this[T + 2] << 16 | this[T + 3] << 24;
        }, g.prototype.readInt32BE = function(T, O) {
          return T >>>= 0, O || J(T, 4, this.length), this[T] << 24 | this[T + 1] << 16 | this[T + 2] << 8 | this[T + 3];
        }, g.prototype.readBigInt64LE = ee(function(T) {
          ge(T >>>= 0, "offset");
          const O = this[T], V = this[T + 7];
          O !== void 0 && V !== void 0 || Te(T, this.length - 8);
          const D = this[T + 4] + 256 * this[T + 5] + 65536 * this[T + 6] + (V << 24);
          return (BigInt(D) << BigInt(32)) + BigInt(O + 256 * this[++T] + 65536 * this[++T] + this[++T] * 16777216);
        }), g.prototype.readBigInt64BE = ee(function(T) {
          ge(T >>>= 0, "offset");
          const O = this[T], V = this[T + 7];
          O !== void 0 && V !== void 0 || Te(T, this.length - 8);
          const D = (O << 24) + 65536 * this[++T] + 256 * this[++T] + this[++T];
          return (BigInt(D) << BigInt(32)) + BigInt(this[++T] * 16777216 + 65536 * this[++T] + 256 * this[++T] + V);
        }), g.prototype.readFloatLE = function(T, O) {
          return T >>>= 0, O || J(T, 4, this.length), h.read(this, T, true, 23, 4);
        }, g.prototype.readFloatBE = function(T, O) {
          return T >>>= 0, O || J(T, 4, this.length), h.read(this, T, false, 23, 4);
        }, g.prototype.readDoubleLE = function(T, O) {
          return T >>>= 0, O || J(T, 8, this.length), h.read(this, T, true, 52, 8);
        }, g.prototype.readDoubleBE = function(T, O) {
          return T >>>= 0, O || J(T, 8, this.length), h.read(this, T, false, 52, 8);
        }, g.prototype.writeUintLE = g.prototype.writeUIntLE = function(T, O, V, D) {
          T = +T, O >>>= 0, V >>>= 0, !D && B(this, T, O, V, Math.pow(2, 8 * V) - 1, 0);
          let C = 1, p = 0;
          for (this[O] = 255 & T; ++p < V && (C *= 256); ) this[O + p] = T / C & 255;
          return O + V;
        }, g.prototype.writeUintBE = g.prototype.writeUIntBE = function(T, O, V, D) {
          T = +T, O >>>= 0, V >>>= 0, !D && B(this, T, O, V, Math.pow(2, 8 * V) - 1, 0);
          let C = V - 1, p = 1;
          for (this[O + C] = 255 & T; --C >= 0 && (p *= 256); ) this[O + C] = T / p & 255;
          return O + V;
        }, g.prototype.writeUint8 = g.prototype.writeUInt8 = function(T, O, V) {
          return T = +T, O >>>= 0, V || B(this, T, O, 1, 255, 0), this[O] = 255 & T, O + 1;
        }, g.prototype.writeUint16LE = g.prototype.writeUInt16LE = function(T, O, V) {
          return T = +T, O >>>= 0, V || B(this, T, O, 2, 65535, 0), this[O] = 255 & T, this[O + 1] = T >>> 8, O + 2;
        }, g.prototype.writeUint16BE = g.prototype.writeUInt16BE = function(T, O, V) {
          return T = +T, O >>>= 0, V || B(this, T, O, 2, 65535, 0), this[O] = T >>> 8, this[O + 1] = 255 & T, O + 2;
        }, g.prototype.writeUint32LE = g.prototype.writeUInt32LE = function(T, O, V) {
          return T = +T, O >>>= 0, V || B(this, T, O, 4, 4294967295, 0), this[O + 3] = T >>> 24, this[O + 2] = T >>> 16, this[O + 1] = T >>> 8, this[O] = 255 & T, O + 4;
        }, g.prototype.writeUint32BE = g.prototype.writeUInt32BE = function(T, O, V) {
          return T = +T, O >>>= 0, V || B(this, T, O, 4, 4294967295, 0), this[O] = T >>> 24, this[O + 1] = T >>> 16, this[O + 2] = T >>> 8, this[O + 3] = 255 & T, O + 4;
        }, g.prototype.writeBigUInt64LE = ee(function(T, O = 0) {
          return Q(this, T, O, BigInt(0), BigInt("0xffffffffffffffff"));
        }), g.prototype.writeBigUInt64BE = ee(function(T, O = 0) {
          return ne(this, T, O, BigInt(0), BigInt("0xffffffffffffffff"));
        }), g.prototype.writeIntLE = function(T, O, V, D) {
          if (T = +T, O >>>= 0, !D) {
            const U = Math.pow(2, 8 * V - 1);
            B(this, T, O, V, U - 1, -U);
          }
          let C = 0, p = 1, A = 0;
          for (this[O] = 255 & T; ++C < V && (p *= 256); ) T < 0 && A === 0 && this[O + C - 1] !== 0 && (A = 1), this[O + C] = (T / p | 0) - A & 255;
          return O + V;
        }, g.prototype.writeIntBE = function(T, O, V, D) {
          if (T = +T, O >>>= 0, !D) {
            const U = Math.pow(2, 8 * V - 1);
            B(this, T, O, V, U - 1, -U);
          }
          let C = V - 1, p = 1, A = 0;
          for (this[O + C] = 255 & T; --C >= 0 && (p *= 256); ) T < 0 && A === 0 && this[O + C + 1] !== 0 && (A = 1), this[O + C] = (T / p | 0) - A & 255;
          return O + V;
        }, g.prototype.writeInt8 = function(T, O, V) {
          return T = +T, O >>>= 0, V || B(this, T, O, 1, 127, -128), T < 0 && (T = 255 + T + 1), this[O] = 255 & T, O + 1;
        }, g.prototype.writeInt16LE = function(T, O, V) {
          return T = +T, O >>>= 0, V || B(this, T, O, 2, 32767, -32768), this[O] = 255 & T, this[O + 1] = T >>> 8, O + 2;
        }, g.prototype.writeInt16BE = function(T, O, V) {
          return T = +T, O >>>= 0, V || B(this, T, O, 2, 32767, -32768), this[O] = T >>> 8, this[O + 1] = 255 & T, O + 2;
        }, g.prototype.writeInt32LE = function(T, O, V) {
          return T = +T, O >>>= 0, V || B(this, T, O, 4, 2147483647, -2147483648), this[O] = 255 & T, this[O + 1] = T >>> 8, this[O + 2] = T >>> 16, this[O + 3] = T >>> 24, O + 4;
        }, g.prototype.writeInt32BE = function(T, O, V) {
          return T = +T, O >>>= 0, V || B(this, T, O, 4, 2147483647, -2147483648), T < 0 && (T = 4294967295 + T + 1), this[O] = T >>> 24, this[O + 1] = T >>> 16, this[O + 2] = T >>> 8, this[O + 3] = 255 & T, O + 4;
        }, g.prototype.writeBigInt64LE = ee(function(T, O = 0) {
          return Q(this, T, O, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
        }), g.prototype.writeBigInt64BE = ee(function(T, O = 0) {
          return ne(this, T, O, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
        }), g.prototype.writeFloatLE = function(T, O, V) {
          return ie(this, T, O, true, V);
        }, g.prototype.writeFloatBE = function(T, O, V) {
          return ie(this, T, O, false, V);
        }, g.prototype.writeDoubleLE = function(T, O, V) {
          return ce(this, T, O, true, V);
        }, g.prototype.writeDoubleBE = function(T, O, V) {
          return ce(this, T, O, false, V);
        }, g.prototype.copy = function(T, O, V, D) {
          if (!g.isBuffer(T)) throw new TypeError("argument should be a Buffer");
          if (V || (V = 0), D || D === 0 || (D = this.length), O >= T.length && (O = T.length), O || (O = 0), D > 0 && D < V && (D = V), D === V || T.length === 0 || this.length === 0) return 0;
          if (O < 0) throw new RangeError("targetStart out of bounds");
          if (V < 0 || V >= this.length) throw new RangeError("Index out of range");
          if (D < 0) throw new RangeError("sourceEnd out of bounds");
          D > this.length && (D = this.length), T.length - O < D - V && (D = T.length - O + V);
          const C = D - V;
          return this === T && typeof Uint8Array.prototype.copyWithin == "function" ? this.copyWithin(O, V, D) : Uint8Array.prototype.set.call(T, this.subarray(V, D), O), C;
        }, g.prototype.fill = function(T, O, V, D) {
          if (typeof T == "string") {
            if (typeof O == "string" ? (D = O, O = 0, V = this.length) : typeof V == "string" && (D = V, V = this.length), D !== void 0 && typeof D != "string") throw new TypeError("encoding must be a string");
            if (typeof D == "string" && !g.isEncoding(D)) throw new TypeError("Unknown encoding: " + D);
            if (T.length === 1) {
              const p = T.charCodeAt(0);
              (D === "utf8" && p < 128 || D === "latin1") && (T = p);
            }
          } else typeof T == "number" ? T &= 255 : typeof T == "boolean" && (T = Number(T));
          if (O < 0 || this.length < O || this.length < V) throw new RangeError("Out of range index");
          if (V <= O) return this;
          let C;
          if (O >>>= 0, V = V === void 0 ? this.length : V >>> 0, T || (T = 0), typeof T == "number") for (C = O; C < V; ++C) this[C] = T;
          else {
            const p = g.isBuffer(T) ? T : g.from(T, D), A = p.length;
            if (A === 0) throw new TypeError('The value "' + T + '" is invalid for argument "value"');
            for (C = 0; C < V - O; ++C) this[C + O] = p[C % A];
          }
          return this;
        };
        const ye = {};
        function oe(T, O, V) {
          ye[T] = class extends V {
            constructor() {
              super(), Object.defineProperty(this, "message", { value: O.apply(this, arguments), writable: true, configurable: true }), this.name = `${this.name} [${T}]`, this.stack, delete this.name;
            }
            get code() {
              return T;
            }
            set code(D) {
              Object.defineProperty(this, "code", { configurable: true, enumerable: true, value: D, writable: true });
            }
            toString() {
              return `${this.name} [${T}]: ${this.message}`;
            }
          };
        }
        function se(T) {
          let O = "", V = T.length;
          const D = T[0] === "-" ? 1 : 0;
          for (; V >= D + 4; V -= 3) O = `_${T.slice(V - 3, V)}${O}`;
          return `${T.slice(0, V)}${O}`;
        }
        function re(T, O, V, D, C, p) {
          if (T > V || T < O) {
            const A = typeof O == "bigint" ? "n" : "";
            let U;
            throw U = O === 0 || O === BigInt(0) ? `>= 0${A} and < 2${A} ** ${8 * (p + 1)}${A}` : `>= -(2${A} ** ${8 * (p + 1) - 1}${A}) and < 2 ** ${8 * (p + 1) - 1}${A}`, new ye.ERR_OUT_OF_RANGE("value", U, T);
          }
          (function(A, U, Y) {
            ge(U, "offset"), A[U] !== void 0 && A[U + Y] !== void 0 || Te(U, A.length - (Y + 1));
          })(D, C, p);
        }
        function ge(T, O) {
          if (typeof T != "number") throw new ye.ERR_INVALID_ARG_TYPE(O, "number", T);
        }
        function Te(T, O, V) {
          throw Math.floor(T) !== T ? (ge(T, V), new ye.ERR_OUT_OF_RANGE("offset", "an integer", T)) : O < 0 ? new ye.ERR_BUFFER_OUT_OF_BOUNDS() : new ye.ERR_OUT_OF_RANGE("offset", `>= 0 and <= ${O}`, T);
        }
        oe("ERR_BUFFER_OUT_OF_BOUNDS", function(T) {
          return T ? `${T} is outside of buffer bounds` : "Attempt to access memory outside buffer bounds";
        }, RangeError), oe("ERR_INVALID_ARG_TYPE", function(T, O) {
          return `The "${T}" argument must be of type number. Received type ${typeof O}`;
        }, TypeError), oe("ERR_OUT_OF_RANGE", function(T, O, V) {
          let D = `The value of "${T}" is out of range.`, C = V;
          return Number.isInteger(V) && Math.abs(V) > 4294967296 ? C = se(String(V)) : typeof V == "bigint" && (C = String(V), (V > BigInt(2) ** BigInt(32) || V < -(BigInt(2) ** BigInt(32))) && (C = se(C)), C += "n"), D += ` It must be ${O}. Received ${C}`, D;
        }, RangeError);
        const pe = /[^+/0-9A-Za-z-_]/g;
        function Oe(T, O) {
          let V;
          O = O || 1 / 0;
          const D = T.length;
          let C = null;
          const p = [];
          for (let A = 0; A < D; ++A) {
            if (V = T.charCodeAt(A), V > 55295 && V < 57344) {
              if (!C) {
                if (V > 56319) {
                  (O -= 3) > -1 && p.push(239, 191, 189);
                  continue;
                }
                if (A + 1 === D) {
                  (O -= 3) > -1 && p.push(239, 191, 189);
                  continue;
                }
                C = V;
                continue;
              }
              if (V < 56320) {
                (O -= 3) > -1 && p.push(239, 191, 189), C = V;
                continue;
              }
              V = 65536 + (C - 55296 << 10 | V - 56320);
            } else C && (O -= 3) > -1 && p.push(239, 191, 189);
            if (C = null, V < 128) {
              if ((O -= 1) < 0) break;
              p.push(V);
            } else if (V < 2048) {
              if ((O -= 2) < 0) break;
              p.push(V >> 6 | 192, 63 & V | 128);
            } else if (V < 65536) {
              if ((O -= 3) < 0) break;
              p.push(V >> 12 | 224, V >> 6 & 63 | 128, 63 & V | 128);
            } else {
              if (!(V < 1114112)) throw new Error("Invalid code point");
              if ((O -= 4) < 0) break;
              p.push(V >> 18 | 240, V >> 12 & 63 | 128, V >> 6 & 63 | 128, 63 & V | 128);
            }
          }
          return p;
        }
        function xe(T) {
          return c.toByteArray(function(O) {
            if ((O = (O = O.split("=")[0]).trim().replace(pe, "")).length < 2) return "";
            for (; O.length % 4 != 0; ) O += "=";
            return O;
          }(T));
        }
        function Ve(T, O, V, D) {
          let C;
          for (C = 0; C < D && !(C + V >= O.length || C >= T.length); ++C) O[C + V] = T[C];
          return C;
        }
        function _e(T, O) {
          return T instanceof O || T != null && T.constructor != null && T.constructor.name != null && T.constructor.name === O.name;
        }
        function Be(T) {
          return T != T;
        }
        const Qe = function() {
          const T = "0123456789abcdef", O = new Array(256);
          for (let V = 0; V < 16; ++V) {
            const D = 16 * V;
            for (let C = 0; C < 16; ++C) O[D + C] = T[V] + T[C];
          }
          return O;
        }();
        function ee(T) {
          return typeof BigInt > "u" ? P : T;
        }
        function P() {
          throw new Error("BigInt not supported");
        }
      }, 8399: (t, o, s) => {
        (o = t.exports = s(5412)).Stream = o, o.Readable = o, o.Writable = s(6708), o.Duplex = s(5382), o.Transform = s(4610), o.PassThrough = s(3600), o.finished = s(6238), o.pipeline = s(7758);
      }, 8549: (t, o, s) => {
        Object.defineProperty(o, "__esModule", { value: true }), Object.defineProperty(o, "Int128", { enumerable: true, get: function() {
          return r.Int128;
        } }), Object.defineProperty(o, "Int256", { enumerable: true, get: function() {
          return m.Int256;
        } }), Object.defineProperty(o, "ScInt", { enumerable: true, get: function() {
          return g.ScInt;
        } }), Object.defineProperty(o, "Uint128", { enumerable: true, get: function() {
          return h.Uint128;
        } }), Object.defineProperty(o, "Uint256", { enumerable: true, get: function() {
          return f.Uint256;
        } }), Object.defineProperty(o, "XdrLargeInt", { enumerable: true, get: function() {
          return c.XdrLargeInt;
        } }), o.scValToBigInt = function(a) {
          var l = c.XdrLargeInt.getType(a.switch().name);
          switch (a.switch().name) {
            case "scvU32":
            case "scvI32":
              return BigInt(a.value());
            case "scvU64":
            case "scvI64":
              return new c.XdrLargeInt(l, a.value()).toBigInt();
            case "scvU128":
            case "scvI128":
              return new c.XdrLargeInt(l, [a.value().lo(), a.value().hi()]).toBigInt();
            case "scvU256":
            case "scvI256":
              return new c.XdrLargeInt(l, [a.value().loLo(), a.value().loHi(), a.value().hiLo(), a.value().hiHi()]).toBigInt();
            default:
              throw TypeError("expected integer type, got ".concat(a.switch()));
          }
        };
        var c = s(7429), h = s(6272), f = s(8672), r = s(5487), m = s(4063), g = s(3317);
      }, 8636: (t, o, s) => {
        var c = s(920), h = s(7720), f = s(4765), r = Object.prototype.hasOwnProperty, m = { brackets: function(k) {
          return k + "[]";
        }, comma: "comma", indices: function(k, w) {
          return k + "[" + w + "]";
        }, repeat: function(k) {
          return k;
        } }, g = Array.isArray, a = Array.prototype.push, l = function(k, w) {
          a.apply(k, g(w) ? w : [w]);
        }, d = Date.prototype.toISOString, b = f.default, S = { addQueryPrefix: false, allowDots: false, allowEmptyArrays: false, arrayFormat: "indices", charset: "utf-8", charsetSentinel: false, commaRoundTrip: false, delimiter: "&", encode: true, encodeDotInKeys: false, encoder: h.encode, encodeValuesOnly: false, filter: void 0, format: b, formatter: f.formatters[b], indices: false, serializeDate: function(k) {
          return d.call(k);
        }, skipNulls: false, strictNullHandling: false }, E = {}, R = function k(w, F, I, q, N, H, _, x, L, j, z, Z, ue, $, X, J, B, Q) {
          for (var ne, K = w, ie = Q, ce = 0, ye = false; (ie = ie.get(E)) !== void 0 && !ye; ) {
            var oe = ie.get(w);
            if (ce += 1, oe !== void 0) {
              if (oe === ce) throw new RangeError("Cyclic object value");
              ye = true;
            }
            ie.get(E) === void 0 && (ce = 0);
          }
          if (typeof j == "function" ? K = j(F, K) : K instanceof Date ? K = ue(K) : I === "comma" && g(K) && (K = h.maybeMap(K, function(ee) {
            return ee instanceof Date ? ue(ee) : ee;
          })), K === null) {
            if (H) return L && !J ? L(F, S.encoder, B, "key", $) : F;
            K = "";
          }
          if (typeof (ne = K) == "string" || typeof ne == "number" || typeof ne == "boolean" || typeof ne == "symbol" || typeof ne == "bigint" || h.isBuffer(K)) return L ? [X(J ? F : L(F, S.encoder, B, "key", $)) + "=" + X(L(K, S.encoder, B, "value", $))] : [X(F) + "=" + X(String(K))];
          var se, re = [];
          if (K === void 0) return re;
          if (I === "comma" && g(K)) J && L && (K = h.maybeMap(K, L)), se = [{ value: K.length > 0 ? K.join(",") || null : void 0 }];
          else if (g(j)) se = j;
          else {
            var ge = Object.keys(K);
            se = z ? ge.sort(z) : ge;
          }
          var Te = x ? String(F).replace(/\./g, "%2E") : String(F), pe = q && g(K) && K.length === 1 ? Te + "[]" : Te;
          if (N && g(K) && K.length === 0) return pe + "[]";
          for (var Oe = 0; Oe < se.length; ++Oe) {
            var xe = se[Oe], Ve = typeof xe == "object" && xe && xe.value !== void 0 ? xe.value : K[xe];
            if (!_ || Ve !== null) {
              var _e = Z && x ? String(xe).replace(/\./g, "%2E") : String(xe), Be = g(K) ? typeof I == "function" ? I(pe, _e) : pe : pe + (Z ? "." + _e : "[" + _e + "]");
              Q.set(w, ce);
              var Qe = c();
              Qe.set(E, Q), l(re, k(Ve, Be, I, q, N, H, _, x, I === "comma" && J && g(K) ? null : L, j, z, Z, ue, $, X, J, B, Qe));
            }
          }
          return re;
        };
        t.exports = function(k, w) {
          var F, I = k, q = function($) {
            if (!$) return S;
            if ($.allowEmptyArrays !== void 0 && typeof $.allowEmptyArrays != "boolean") throw new TypeError("`allowEmptyArrays` option can only be `true` or `false`, when provided");
            if ($.encodeDotInKeys !== void 0 && typeof $.encodeDotInKeys != "boolean") throw new TypeError("`encodeDotInKeys` option can only be `true` or `false`, when provided");
            if ($.encoder !== null && $.encoder !== void 0 && typeof $.encoder != "function") throw new TypeError("Encoder has to be a function.");
            var X = $.charset || S.charset;
            if ($.charset !== void 0 && $.charset !== "utf-8" && $.charset !== "iso-8859-1") throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
            var J = f.default;
            if ($.format !== void 0) {
              if (!r.call(f.formatters, $.format)) throw new TypeError("Unknown format option provided.");
              J = $.format;
            }
            var B, Q = f.formatters[J], ne = S.filter;
            if ((typeof $.filter == "function" || g($.filter)) && (ne = $.filter), B = $.arrayFormat in m ? $.arrayFormat : "indices" in $ ? $.indices ? "indices" : "repeat" : S.arrayFormat, "commaRoundTrip" in $ && typeof $.commaRoundTrip != "boolean") throw new TypeError("`commaRoundTrip` must be a boolean, or absent");
            var K = $.allowDots === void 0 ? $.encodeDotInKeys === true || S.allowDots : !!$.allowDots;
            return { addQueryPrefix: typeof $.addQueryPrefix == "boolean" ? $.addQueryPrefix : S.addQueryPrefix, allowDots: K, allowEmptyArrays: typeof $.allowEmptyArrays == "boolean" ? !!$.allowEmptyArrays : S.allowEmptyArrays, arrayFormat: B, charset: X, charsetSentinel: typeof $.charsetSentinel == "boolean" ? $.charsetSentinel : S.charsetSentinel, commaRoundTrip: !!$.commaRoundTrip, delimiter: $.delimiter === void 0 ? S.delimiter : $.delimiter, encode: typeof $.encode == "boolean" ? $.encode : S.encode, encodeDotInKeys: typeof $.encodeDotInKeys == "boolean" ? $.encodeDotInKeys : S.encodeDotInKeys, encoder: typeof $.encoder == "function" ? $.encoder : S.encoder, encodeValuesOnly: typeof $.encodeValuesOnly == "boolean" ? $.encodeValuesOnly : S.encodeValuesOnly, filter: ne, format: J, formatter: Q, serializeDate: typeof $.serializeDate == "function" ? $.serializeDate : S.serializeDate, skipNulls: typeof $.skipNulls == "boolean" ? $.skipNulls : S.skipNulls, sort: typeof $.sort == "function" ? $.sort : null, strictNullHandling: typeof $.strictNullHandling == "boolean" ? $.strictNullHandling : S.strictNullHandling };
          }(w);
          typeof q.filter == "function" ? I = (0, q.filter)("", I) : g(q.filter) && (F = q.filter);
          var N = [];
          if (typeof I != "object" || I === null) return "";
          var H = m[q.arrayFormat], _ = H === "comma" && q.commaRoundTrip;
          F || (F = Object.keys(I)), q.sort && F.sort(q.sort);
          for (var x = c(), L = 0; L < F.length; ++L) {
            var j = F[L], z = I[j];
            q.skipNulls && z === null || l(N, R(z, j, H, _, q.allowEmptyArrays, q.strictNullHandling, q.skipNulls, q.encodeDotInKeys, q.encode ? q.encoder : null, q.filter, q.sort, q.allowDots, q.serializeDate, q.format, q.formatter, q.encodeValuesOnly, q.charset, x));
          }
          var Z = N.join(q.delimiter), ue = q.addQueryPrefix === true ? "?" : "";
          return q.charsetSentinel && (q.charset === "iso-8859-1" ? ue += "utf8=%26%2310003%3B&" : ue += "utf8=%E2%9C%93&"), Z.length > 0 ? ue + Z : "";
        };
      }, 8648: (t) => {
        t.exports = typeof Reflect < "u" && Reflect.getPrototypeOf || null;
      }, 8672: (t, o, s) => {
        function c(d) {
          return c = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(b) {
            return typeof b;
          } : function(b) {
            return b && typeof Symbol == "function" && b.constructor === Symbol && b !== Symbol.prototype ? "symbol" : typeof b;
          }, c(d);
        }
        Object.defineProperty(o, "__esModule", { value: true }), o.Uint256 = void 0;
        var h = s(3740);
        function f(d, b) {
          for (var S = 0; S < b.length; S++) {
            var E = b[S];
            E.enumerable = E.enumerable || false, E.configurable = true, "value" in E && (E.writable = true), Object.defineProperty(d, r(E.key), E);
          }
        }
        function r(d) {
          var b = function(S, E) {
            if (c(S) != "object" || !S) return S;
            var R = S[Symbol.toPrimitive];
            if (R !== void 0) {
              var k = R.call(S, E);
              if (c(k) != "object") return k;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(S);
          }(d, "string");
          return c(b) == "symbol" ? b : b + "";
        }
        function m(d, b, S) {
          return b = a(b), function(E, R) {
            if (R && (c(R) == "object" || typeof R == "function")) return R;
            if (R !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(k) {
              if (k === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return k;
            }(E);
          }(d, g() ? Reflect.construct(b, S || [], a(d).constructor) : b.apply(d, S));
        }
        function g() {
          try {
            var d = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (g = function() {
            return !!d;
          })();
        }
        function a(d) {
          return a = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(b) {
            return b.__proto__ || Object.getPrototypeOf(b);
          }, a(d);
        }
        function l(d, b) {
          return l = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(S, E) {
            return S.__proto__ = E, S;
          }, l(d, b);
        }
        (o.Uint256 = function(d) {
          function b() {
            (function(I, q) {
              if (!(I instanceof q)) throw new TypeError("Cannot call a class as a function");
            })(this, b);
            for (var k = arguments.length, w = new Array(k), F = 0; F < k; F++) w[F] = arguments[F];
            return m(this, b, [w]);
          }
          return function(k, w) {
            if (typeof w != "function" && w !== null) throw new TypeError("Super expression must either be null or a function");
            k.prototype = Object.create(w && w.prototype, { constructor: { value: k, writable: true, configurable: true } }), Object.defineProperty(k, "prototype", { writable: false }), w && l(k, w);
          }(b, d), S = b, (E = [{ key: "unsigned", get: function() {
            return true;
          } }, { key: "size", get: function() {
            return 256;
          } }]) && f(S.prototype, E), R && f(S, R), Object.defineProperty(S, "prototype", { writable: false }), S;
          var S, E, R;
        }(h.LargeInt)).defineIntBoundaries();
      }, 8680: (t, o, s) => {
        s.d(o, { X: () => r });
        var c = s(356), h = s(4076), f = s(784);
        function r(m, g) {
          if ("innerTransaction" in m) return r(m.innerTransaction, g);
          if (!function(k) {
            if (k.operations.length !== 1) return false;
            switch (k.operations[0].type) {
              case "invokeHostFunction":
              case "extendFootprintTtl":
              case "restoreFootprint":
                return true;
              default:
                return false;
            }
          }(m)) throw new TypeError("unsupported transaction: must contain exactly one invokeHostFunction, extendFootprintTtl, or restoreFootprint operation");
          var a = (0, f.jr)(g);
          if (!h.j.isSimulationSuccess(a)) throw new Error("simulation incorrect: ".concat(JSON.stringify(a)));
          var l = parseInt(m.fee) || 0, d = parseInt(a.minResourceFee) || 0, b = c.TransactionBuilder.cloneFrom(m, { fee: (l + d).toString(), sorobanData: a.transactionData.build(), networkPassphrase: m.networkPassphrase });
          if (m.operations[0].type === "invokeHostFunction") {
            var S;
            b.clearOperations();
            var E = m.operations[0], R = (S = E.auth) !== null && S !== void 0 ? S : [];
            b.addOperation(c.Operation.invokeHostFunction({ source: E.source, func: E.func, auth: R.length > 0 ? R : a.result.auth }));
          }
          return b;
        }
      }, 8732: (t, o, s) => {
        function c(R) {
          return c = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(k) {
            return typeof k;
          } : function(k) {
            return k && typeof Symbol == "function" && k.constructor === Symbol && k !== Symbol.prototype ? "symbol" : typeof k;
          }, c(R);
        }
        function h(R, k) {
          for (var w = 0; w < k.length; w++) {
            var F = k[w];
            F.enumerable = F.enumerable || false, F.configurable = true, "value" in F && (F.writable = true), Object.defineProperty(R, g(F.key), F);
          }
        }
        function f(R, k) {
          var w = Object.keys(R);
          if (Object.getOwnPropertySymbols) {
            var F = Object.getOwnPropertySymbols(R);
            k && (F = F.filter(function(I) {
              return Object.getOwnPropertyDescriptor(R, I).enumerable;
            })), w.push.apply(w, F);
          }
          return w;
        }
        function r(R) {
          for (var k = 1; k < arguments.length; k++) {
            var w = arguments[k] != null ? arguments[k] : {};
            k % 2 ? f(Object(w), true).forEach(function(F) {
              m(R, F, w[F]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(R, Object.getOwnPropertyDescriptors(w)) : f(Object(w)).forEach(function(F) {
              Object.defineProperty(R, F, Object.getOwnPropertyDescriptor(w, F));
            });
          }
          return R;
        }
        function m(R, k, w) {
          return (k = g(k)) in R ? Object.defineProperty(R, k, { value: w, enumerable: true, configurable: true, writable: true }) : R[k] = w, R;
        }
        function g(R) {
          var k = function(w, F) {
            if (c(w) != "object" || !w) return w;
            var I = w[Symbol.toPrimitive];
            if (I !== void 0) {
              var q = I.call(w, F);
              if (c(q) != "object") return q;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return (F === "string" ? String : Number)(w);
          }(R, "string");
          return c(k) == "symbol" ? k : k + "";
        }
        s.d(o, { T: () => E });
        var a, l, d, b = { allowHttp: false, timeout: 0 }, S = r({}, b), E = (a = function R() {
          (function(k, w) {
            if (!(k instanceof w)) throw new TypeError("Cannot call a class as a function");
          })(this, R);
        }, d = [{ key: "setAllowHttp", value: function(R) {
          S.allowHttp = R;
        } }, { key: "setTimeout", value: function(R) {
          S.timeout = R;
        } }, { key: "isAllowHttp", value: function() {
          return S.allowHttp;
        } }, { key: "getTimeout", value: function() {
          return S.timeout;
        } }, { key: "setDefault", value: function() {
          S = r({}, b);
        } }], (l = null) && h(a.prototype, l), d && h(a, d), Object.defineProperty(a, "prototype", { writable: false }), a);
      }, 8733: (t, o, s) => {
        var c;
        s.r(o), s.d(o, { AccountResponse: () => R, AxiosClient: () => xe, HorizonApi: () => c, SERVER_TIME_MAP: () => Te, Server: () => ca, ServerApi: () => f, default: () => Rn, getCurrentServerTime: () => Ve }), function(Ie) {
          var ve = function(pt) {
            return pt.constantProduct = "constant_product", pt;
          }({});
          Ie.LiquidityPoolType = ve;
          var he = function(pt) {
            return pt.createAccount = "create_account", pt.payment = "payment", pt.pathPayment = "path_payment_strict_receive", pt.createPassiveOffer = "create_passive_sell_offer", pt.manageOffer = "manage_sell_offer", pt.setOptions = "set_options", pt.changeTrust = "change_trust", pt.allowTrust = "allow_trust", pt.accountMerge = "account_merge", pt.inflation = "inflation", pt.manageData = "manage_data", pt.bumpSequence = "bump_sequence", pt.manageBuyOffer = "manage_buy_offer", pt.pathPaymentStrictSend = "path_payment_strict_send", pt.createClaimableBalance = "create_claimable_balance", pt.claimClaimableBalance = "claim_claimable_balance", pt.beginSponsoringFutureReserves = "begin_sponsoring_future_reserves", pt.endSponsoringFutureReserves = "end_sponsoring_future_reserves", pt.revokeSponsorship = "revoke_sponsorship", pt.clawback = "clawback", pt.clawbackClaimableBalance = "clawback_claimable_balance", pt.setTrustLineFlags = "set_trust_line_flags", pt.liquidityPoolDeposit = "liquidity_pool_deposit", pt.liquidityPoolWithdraw = "liquidity_pool_withdraw", pt.invokeHostFunction = "invoke_host_function", pt.bumpFootprintExpiration = "bump_footprint_expiration", pt.restoreFootprint = "restore_footprint", pt;
          }({});
          Ie.OperationResponseType = he;
          var ke = function(pt) {
            return pt[pt.createAccount = 0] = "createAccount", pt[pt.payment = 1] = "payment", pt[pt.pathPayment = 2] = "pathPayment", pt[pt.createPassiveOffer = 3] = "createPassiveOffer", pt[pt.manageOffer = 4] = "manageOffer", pt[pt.setOptions = 5] = "setOptions", pt[pt.changeTrust = 6] = "changeTrust", pt[pt.allowTrust = 7] = "allowTrust", pt[pt.accountMerge = 8] = "accountMerge", pt[pt.inflation = 9] = "inflation", pt[pt.manageData = 10] = "manageData", pt[pt.bumpSequence = 11] = "bumpSequence", pt[pt.manageBuyOffer = 12] = "manageBuyOffer", pt[pt.pathPaymentStrictSend = 13] = "pathPaymentStrictSend", pt[pt.createClaimableBalance = 14] = "createClaimableBalance", pt[pt.claimClaimableBalance = 15] = "claimClaimableBalance", pt[pt.beginSponsoringFutureReserves = 16] = "beginSponsoringFutureReserves", pt[pt.endSponsoringFutureReserves = 17] = "endSponsoringFutureReserves", pt[pt.revokeSponsorship = 18] = "revokeSponsorship", pt[pt.clawback = 19] = "clawback", pt[pt.clawbackClaimableBalance = 20] = "clawbackClaimableBalance", pt[pt.setTrustLineFlags = 21] = "setTrustLineFlags", pt[pt.liquidityPoolDeposit = 22] = "liquidityPoolDeposit", pt[pt.liquidityPoolWithdraw = 23] = "liquidityPoolWithdraw", pt[pt.invokeHostFunction = 24] = "invokeHostFunction", pt[pt.bumpFootprintExpiration = 25] = "bumpFootprintExpiration", pt[pt.restoreFootprint = 26] = "restoreFootprint", pt;
          }({});
          Ie.OperationResponseTypeI = ke;
          var ht = function(pt) {
            return pt.TX_FAILED = "tx_failed", pt.TX_BAD_SEQ = "tx_bad_seq", pt.TX_BAD_AUTH = "tx_bad_auth", pt.TX_BAD_AUTH_EXTRA = "tx_bad_auth_extra", pt.TX_FEE_BUMP_INNER_SUCCESS = "tx_fee_bump_inner_success", pt.TX_FEE_BUMP_INNER_FAILED = "tx_fee_bump_inner_failed", pt.TX_NOT_SUPPORTED = "tx_not_supported", pt.TX_SUCCESS = "tx_success", pt.TX_TOO_EARLY = "tx_too_early", pt.TX_TOO_LATE = "tx_too_late", pt.TX_MISSING_OPERATION = "tx_missing_operation", pt.TX_INSUFFICIENT_BALANCE = "tx_insufficient_balance", pt.TX_NO_SOURCE_ACCOUNT = "tx_no_source_account", pt.TX_INSUFFICIENT_FEE = "tx_insufficient_fee", pt.TX_INTERNAL_ERROR = "tx_internal_error", pt;
          }({});
          Ie.TransactionFailedResultCodes = ht;
        }(c || (c = {}));
        var h, f, r = ((h = {})[h.account_created = 0] = "account_created", h[h.account_removed = 1] = "account_removed", h[h.account_credited = 2] = "account_credited", h[h.account_debited = 3] = "account_debited", h[h.account_thresholds_updated = 4] = "account_thresholds_updated", h[h.account_home_domain_updated = 5] = "account_home_domain_updated", h[h.account_flags_updated = 6] = "account_flags_updated", h[h.account_inflation_destination_updated = 7] = "account_inflation_destination_updated", h[h.signer_created = 10] = "signer_created", h[h.signer_removed = 11] = "signer_removed", h[h.signer_updated = 12] = "signer_updated", h[h.trustline_created = 20] = "trustline_created", h[h.trustline_removed = 21] = "trustline_removed", h[h.trustline_updated = 22] = "trustline_updated", h[h.trustline_authorized = 23] = "trustline_authorized", h[h.trustline_deauthorized = 24] = "trustline_deauthorized", h[h.trustline_authorized_to_maintain_liabilities = 25] = "trustline_authorized_to_maintain_liabilities", h[h.trustline_flags_updated = 26] = "trustline_flags_updated", h[h.offer_created = 30] = "offer_created", h[h.offer_removed = 31] = "offer_removed", h[h.offer_updated = 32] = "offer_updated", h[h.trade = 33] = "trade", h[h.data_created = 40] = "data_created", h[h.data_removed = 41] = "data_removed", h[h.data_updated = 42] = "data_updated", h[h.sequence_bumped = 43] = "sequence_bumped", h[h.claimable_balance_created = 50] = "claimable_balance_created", h[h.claimable_balance_claimant_created = 51] = "claimable_balance_claimant_created", h[h.claimable_balance_claimed = 52] = "claimable_balance_claimed", h[h.account_sponsorship_created = 60] = "account_sponsorship_created", h[h.account_sponsorship_updated = 61] = "account_sponsorship_updated", h[h.account_sponsorship_removed = 62] = "account_sponsorship_removed", h[h.trustline_sponsorship_created = 63] = "trustline_sponsorship_created", h[h.trustline_sponsorship_updated = 64] = "trustline_sponsorship_updated", h[h.trustline_sponsorship_removed = 65] = "trustline_sponsorship_removed", h[h.data_sponsorship_created = 66] = "data_sponsorship_created", h[h.data_sponsorship_updated = 67] = "data_sponsorship_updated", h[h.data_sponsorship_removed = 68] = "data_sponsorship_removed", h[h.claimable_balance_sponsorship_created = 69] = "claimable_balance_sponsorship_created", h[h.claimable_balance_sponsorship_updated = 70] = "claimable_balance_sponsorship_updated", h[h.claimable_balance_sponsorship_removed = 71] = "claimable_balance_sponsorship_removed", h[h.signer_sponsorship_created = 72] = "signer_sponsorship_created", h[h.signer_sponsorship_updated = 73] = "signer_sponsorship_updated", h[h.signer_sponsorship_removed = 74] = "signer_sponsorship_removed", h[h.claimable_balance_clawed_back = 80] = "claimable_balance_clawed_back", h[h.liquidity_pool_deposited = 90] = "liquidity_pool_deposited", h[h.liquidity_pool_withdrew = 91] = "liquidity_pool_withdrew", h[h.liquidity_pool_trade = 92] = "liquidity_pool_trade", h[h.liquidity_pool_created = 93] = "liquidity_pool_created", h[h.liquidity_pool_removed = 94] = "liquidity_pool_removed", h[h.liquidity_pool_revoked = 95] = "liquidity_pool_revoked", h[h.contract_credited = 96] = "contract_credited", h[h.contract_debited = 97] = "contract_debited", h);
        (function(Ie) {
          Ie.EffectType = r;
          var ve = function(he) {
            return he.all = "all", he.liquidityPools = "liquidity_pool", he.orderbook = "orderbook", he;
          }({});
          Ie.TradeType = ve, c.OperationResponseType, c.OperationResponseTypeI;
        })(f || (f = {}));
        var m = s(356);
        function g(Ie) {
          return g = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(ve) {
            return typeof ve;
          } : function(ve) {
            return ve && typeof Symbol == "function" && ve.constructor === Symbol && ve !== Symbol.prototype ? "symbol" : typeof ve;
          }, g(Ie);
        }
        function a(Ie, ve) {
          return function(he) {
            if (Array.isArray(he)) return he;
          }(Ie) || function(he, ke) {
            var ht = he == null ? null : typeof Symbol < "u" && he[Symbol.iterator] || he["@@iterator"];
            if (ht != null) {
              var pt, Pr, cn, on, sn = [], Nn = true, Vn = false;
              try {
                if (cn = (ht = ht.call(he)).next, ke !== 0) for (; !(Nn = (pt = cn.call(ht)).done) && (sn.push(pt.value), sn.length !== ke); Nn = true) ;
              } catch (ln) {
                Vn = true, Pr = ln;
              } finally {
                try {
                  if (!Nn && ht.return != null && (on = ht.return(), Object(on) !== on)) return;
                } finally {
                  if (Vn) throw Pr;
                }
              }
              return sn;
            }
          }(Ie, ve) || function(he, ke) {
            if (he) {
              if (typeof he == "string") return l(he, ke);
              var ht = {}.toString.call(he).slice(8, -1);
              return ht === "Object" && he.constructor && (ht = he.constructor.name), ht === "Map" || ht === "Set" ? Array.from(he) : ht === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(ht) ? l(he, ke) : void 0;
            }
          }(Ie, ve) || function() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
          }();
        }
        function l(Ie, ve) {
          (ve == null || ve > Ie.length) && (ve = Ie.length);
          for (var he = 0, ke = Array(ve); he < ve; he++) ke[he] = Ie[he];
          return ke;
        }
        function d(Ie, ve) {
          for (var he = 0; he < ve.length; he++) {
            var ke = ve[he];
            ke.enumerable = ke.enumerable || false, ke.configurable = true, "value" in ke && (ke.writable = true), Object.defineProperty(Ie, b(ke.key), ke);
          }
        }
        function b(Ie) {
          var ve = function(he, ke) {
            if (g(he) != "object" || !he) return he;
            var ht = he[Symbol.toPrimitive];
            if (ht !== void 0) {
              var pt = ht.call(he, ke);
              if (g(pt) != "object") return pt;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(he);
          }(Ie, "string");
          return g(ve) == "symbol" ? ve : ve + "";
        }
        var S, E, R = (S = function Ie(ve) {
          var he = this;
          (function(ke, ht) {
            if (!(ke instanceof ht)) throw new TypeError("Cannot call a class as a function");
          })(this, Ie), this._baseAccount = new m.Account(ve.account_id, ve.sequence), Object.entries(ve).forEach(function(ke) {
            var ht = a(ke, 2), pt = ht[0], Pr = ht[1];
            he[pt] = Pr;
          });
        }, (E = [{ key: "accountId", value: function() {
          return this._baseAccount.accountId();
        } }, { key: "sequenceNumber", value: function() {
          return this._baseAccount.sequenceNumber();
        } }, { key: "incrementSequenceNumber", value: function() {
          this._baseAccount.incrementSequenceNumber(), this.sequence = this._baseAccount.sequenceNumber();
        } }]) && d(S.prototype, E), Object.defineProperty(S, "prototype", { writable: false }), S), k = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i, w = Math.ceil, F = Math.floor, I = "[BigNumber Error] ", q = I + "Number primitive has more than 15 significant digits: ", N = 1e14, H = 14, _ = 9007199254740991, x = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13], L = 1e7, j = 1e9;
        function z(Ie) {
          var ve = 0 | Ie;
          return Ie > 0 || Ie === ve ? ve : ve - 1;
        }
        function Z(Ie) {
          for (var ve, he, ke = 1, ht = Ie.length, pt = Ie[0] + ""; ke < ht; ) {
            for (ve = Ie[ke++] + "", he = H - ve.length; he--; ve = "0" + ve) ;
            pt += ve;
          }
          for (ht = pt.length; pt.charCodeAt(--ht) === 48; ) ;
          return pt.slice(0, ht + 1 || 1);
        }
        function ue(Ie, ve) {
          var he, ke, ht = Ie.c, pt = ve.c, Pr = Ie.s, cn = ve.s, on = Ie.e, sn = ve.e;
          if (!Pr || !cn) return null;
          if (he = ht && !ht[0], ke = pt && !pt[0], he || ke) return he ? ke ? 0 : -cn : Pr;
          if (Pr != cn) return Pr;
          if (he = Pr < 0, ke = on == sn, !ht || !pt) return ke ? 0 : !ht ^ he ? 1 : -1;
          if (!ke) return on > sn ^ he ? 1 : -1;
          for (cn = (on = ht.length) < (sn = pt.length) ? on : sn, Pr = 0; Pr < cn; Pr++) if (ht[Pr] != pt[Pr]) return ht[Pr] > pt[Pr] ^ he ? 1 : -1;
          return on == sn ? 0 : on > sn ^ he ? 1 : -1;
        }
        function $(Ie, ve, he, ke) {
          if (Ie < ve || Ie > he || Ie !== F(Ie)) throw Error(I + (ke || "Argument") + (typeof Ie == "number" ? Ie < ve || Ie > he ? " out of range: " : " not an integer: " : " not a primitive number: ") + String(Ie));
        }
        function X(Ie) {
          var ve = Ie.c.length - 1;
          return z(Ie.e / H) == ve && Ie.c[ve] % 2 != 0;
        }
        function J(Ie, ve) {
          return (Ie.length > 1 ? Ie.charAt(0) + "." + Ie.slice(1) : Ie) + (ve < 0 ? "e" : "e+") + ve;
        }
        function B(Ie, ve, he) {
          var ke, ht;
          if (ve < 0) {
            for (ht = he + "."; ++ve; ht += he) ;
            Ie = ht + Ie;
          } else if (++ve > (ke = Ie.length)) {
            for (ht = he, ve -= ke; --ve; ht += he) ;
            Ie += ht;
          } else ve < ke && (Ie = Ie.slice(0, ve) + "." + Ie.slice(ve));
          return Ie;
        }
        var Q = function Ie(ve) {
          var he, ke, ht, pt, Pr, cn, on, sn, Nn, Vn, ln = pr.prototype = { constructor: pr, toString: null, valueOf: null }, oi = new pr(1), Hn = 20, Tn = 4, xn = -7, Gn = 21, Kn = -1e7, Pn = 1e7, Xn = false, kt = 1, Kt = 0, lr = { prefix: "", groupSize: 3, secondaryGroupSize: 0, groupSeparator: ",", decimalSeparator: ".", fractionGroupSize: 0, fractionGroupSeparator: "\xA0", suffix: "" }, Er = "0123456789abcdefghijklmnopqrstuvwxyz", Rr = true;
          function pr(Fe, He) {
            var et, jt, At, qt, Jt, er, mr, Ar, xr = this;
            if (!(xr instanceof pr)) return new pr(Fe, He);
            if (He == null) {
              if (Fe && Fe._isBigNumber === true) return xr.s = Fe.s, void (!Fe.c || Fe.e > Pn ? xr.c = xr.e = null : Fe.e < Kn ? xr.c = [xr.e = 0] : (xr.e = Fe.e, xr.c = Fe.c.slice()));
              if ((er = typeof Fe == "number") && 0 * Fe == 0) {
                if (xr.s = 1 / Fe < 0 ? (Fe = -Fe, -1) : 1, Fe === ~~Fe) {
                  for (qt = 0, Jt = Fe; Jt >= 10; Jt /= 10, qt++) ;
                  return void (qt > Pn ? xr.c = xr.e = null : (xr.e = qt, xr.c = [Fe]));
                }
                Ar = String(Fe);
              } else {
                if (!k.test(Ar = String(Fe))) return ht(xr, Ar, er);
                xr.s = Ar.charCodeAt(0) == 45 ? (Ar = Ar.slice(1), -1) : 1;
              }
              (qt = Ar.indexOf(".")) > -1 && (Ar = Ar.replace(".", "")), (Jt = Ar.search(/e/i)) > 0 ? (qt < 0 && (qt = Jt), qt += +Ar.slice(Jt + 1), Ar = Ar.substring(0, Jt)) : qt < 0 && (qt = Ar.length);
            } else {
              if ($(He, 2, Er.length, "Base"), He == 10 && Rr) return mn(xr = new pr(Fe), Hn + xr.e + 1, Tn);
              if (Ar = String(Fe), er = typeof Fe == "number") {
                if (0 * Fe != 0) return ht(xr, Ar, er, He);
                if (xr.s = 1 / Fe < 0 ? (Ar = Ar.slice(1), -1) : 1, pr.DEBUG && Ar.replace(/^0\.0*|\./, "").length > 15) throw Error(q + Fe);
              } else xr.s = Ar.charCodeAt(0) === 45 ? (Ar = Ar.slice(1), -1) : 1;
              for (et = Er.slice(0, He), qt = Jt = 0, mr = Ar.length; Jt < mr; Jt++) if (et.indexOf(jt = Ar.charAt(Jt)) < 0) {
                if (jt == ".") {
                  if (Jt > qt) {
                    qt = mr;
                    continue;
                  }
                } else if (!At && (Ar == Ar.toUpperCase() && (Ar = Ar.toLowerCase()) || Ar == Ar.toLowerCase() && (Ar = Ar.toUpperCase()))) {
                  At = true, Jt = -1, qt = 0;
                  continue;
                }
                return ht(xr, String(Fe), er, He);
              }
              er = false, (qt = (Ar = ke(Ar, He, 10, xr.s)).indexOf(".")) > -1 ? Ar = Ar.replace(".", "") : qt = Ar.length;
            }
            for (Jt = 0; Ar.charCodeAt(Jt) === 48; Jt++) ;
            for (mr = Ar.length; Ar.charCodeAt(--mr) === 48; ) ;
            if (Ar = Ar.slice(Jt, ++mr)) {
              if (mr -= Jt, er && pr.DEBUG && mr > 15 && (Fe > _ || Fe !== F(Fe))) throw Error(q + xr.s * Fe);
              if ((qt = qt - Jt - 1) > Pn) xr.c = xr.e = null;
              else if (qt < Kn) xr.c = [xr.e = 0];
              else {
                if (xr.e = qt, xr.c = [], Jt = (qt + 1) % H, qt < 0 && (Jt += H), Jt < mr) {
                  for (Jt && xr.c.push(+Ar.slice(0, Jt)), mr -= H; Jt < mr; ) xr.c.push(+Ar.slice(Jt, Jt += H));
                  Jt = H - (Ar = Ar.slice(Jt)).length;
                } else Jt -= mr;
                for (; Jt--; Ar += "0") ;
                xr.c.push(+Ar);
              }
            } else xr.c = [xr.e = 0];
          }
          function tn(Fe, He, et, jt) {
            var At, qt, Jt, er, mr;
            if (et == null ? et = Tn : $(et, 0, 8), !Fe.c) return Fe.toString();
            if (At = Fe.c[0], Jt = Fe.e, He == null) mr = Z(Fe.c), mr = jt == 1 || jt == 2 && (Jt <= xn || Jt >= Gn) ? J(mr, Jt) : B(mr, Jt, "0");
            else if (qt = (Fe = mn(new pr(Fe), He, et)).e, er = (mr = Z(Fe.c)).length, jt == 1 || jt == 2 && (He <= qt || qt <= xn)) {
              for (; er < He; mr += "0", er++) ;
              mr = J(mr, qt);
            } else if (He -= Jt, mr = B(mr, qt, "0"), qt + 1 > er) {
              if (--He > 0) for (mr += "."; He--; mr += "0") ;
            } else if ((He += qt - er) > 0) for (qt + 1 == er && (mr += "."); He--; mr += "0") ;
            return Fe.s < 0 && At ? "-" + mr : mr;
          }
          function fn(Fe, He) {
            for (var et, jt, At = 1, qt = new pr(Fe[0]); At < Fe.length; At++) (!(jt = new pr(Fe[At])).s || (et = ue(qt, jt)) === He || et === 0 && qt.s === He) && (qt = jt);
            return qt;
          }
          function rn(Fe, He, et) {
            for (var jt = 1, At = He.length; !He[--At]; He.pop()) ;
            for (At = He[0]; At >= 10; At /= 10, jt++) ;
            return (et = jt + et * H - 1) > Pn ? Fe.c = Fe.e = null : et < Kn ? Fe.c = [Fe.e = 0] : (Fe.e = et, Fe.c = He), Fe;
          }
          function mn(Fe, He, et, jt) {
            var At, qt, Jt, er, mr, Ar, xr, Zr = Fe.c, vn = x;
            if (Zr) {
              e: {
                for (At = 1, er = Zr[0]; er >= 10; er /= 10, At++) ;
                if ((qt = He - At) < 0) qt += H, Jt = He, mr = Zr[Ar = 0], xr = F(mr / vn[At - Jt - 1] % 10);
                else if ((Ar = w((qt + 1) / H)) >= Zr.length) {
                  if (!jt) break e;
                  for (; Zr.length <= Ar; Zr.push(0)) ;
                  mr = xr = 0, At = 1, Jt = (qt %= H) - H + 1;
                } else {
                  for (mr = er = Zr[Ar], At = 1; er >= 10; er /= 10, At++) ;
                  xr = (Jt = (qt %= H) - H + At) < 0 ? 0 : F(mr / vn[At - Jt - 1] % 10);
                }
                if (jt = jt || He < 0 || Zr[Ar + 1] != null || (Jt < 0 ? mr : mr % vn[At - Jt - 1]), jt = et < 4 ? (xr || jt) && (et == 0 || et == (Fe.s < 0 ? 3 : 2)) : xr > 5 || xr == 5 && (et == 4 || jt || et == 6 && (qt > 0 ? Jt > 0 ? mr / vn[At - Jt] : 0 : Zr[Ar - 1]) % 10 & 1 || et == (Fe.s < 0 ? 8 : 7)), He < 1 || !Zr[0]) return Zr.length = 0, jt ? (He -= Fe.e + 1, Zr[0] = vn[(H - He % H) % H], Fe.e = -He || 0) : Zr[0] = Fe.e = 0, Fe;
                if (qt == 0 ? (Zr.length = Ar, er = 1, Ar--) : (Zr.length = Ar + 1, er = vn[H - qt], Zr[Ar] = Jt > 0 ? F(mr / vn[At - Jt] % vn[Jt]) * er : 0), jt) for (; ; ) {
                  if (Ar == 0) {
                    for (qt = 1, Jt = Zr[0]; Jt >= 10; Jt /= 10, qt++) ;
                    for (Jt = Zr[0] += er, er = 1; Jt >= 10; Jt /= 10, er++) ;
                    qt != er && (Fe.e++, Zr[0] == N && (Zr[0] = 1));
                    break;
                  }
                  if (Zr[Ar] += er, Zr[Ar] != N) break;
                  Zr[Ar--] = 0, er = 1;
                }
                for (qt = Zr.length; Zr[--qt] === 0; Zr.pop()) ;
              }
              Fe.e > Pn ? Fe.c = Fe.e = null : Fe.e < Kn && (Fe.c = [Fe.e = 0]);
            }
            return Fe;
          }
          function pn(Fe) {
            var He, et = Fe.e;
            return et === null ? Fe.toString() : (He = Z(Fe.c), He = et <= xn || et >= Gn ? J(He, et) : B(He, et, "0"), Fe.s < 0 ? "-" + He : He);
          }
          return pr.clone = Ie, pr.ROUND_UP = 0, pr.ROUND_DOWN = 1, pr.ROUND_CEIL = 2, pr.ROUND_FLOOR = 3, pr.ROUND_HALF_UP = 4, pr.ROUND_HALF_DOWN = 5, pr.ROUND_HALF_EVEN = 6, pr.ROUND_HALF_CEIL = 7, pr.ROUND_HALF_FLOOR = 8, pr.EUCLID = 9, pr.config = pr.set = function(Fe) {
            var He, et;
            if (Fe != null) {
              if (typeof Fe != "object") throw Error(I + "Object expected: " + Fe);
              if (Fe.hasOwnProperty(He = "DECIMAL_PLACES") && ($(et = Fe[He], 0, j, He), Hn = et), Fe.hasOwnProperty(He = "ROUNDING_MODE") && ($(et = Fe[He], 0, 8, He), Tn = et), Fe.hasOwnProperty(He = "EXPONENTIAL_AT") && ((et = Fe[He]) && et.pop ? ($(et[0], -1e9, 0, He), $(et[1], 0, j, He), xn = et[0], Gn = et[1]) : ($(et, -1e9, j, He), xn = -(Gn = et < 0 ? -et : et))), Fe.hasOwnProperty(He = "RANGE")) if ((et = Fe[He]) && et.pop) $(et[0], -1e9, -1, He), $(et[1], 1, j, He), Kn = et[0], Pn = et[1];
              else {
                if ($(et, -1e9, j, He), !et) throw Error(I + He + " cannot be zero: " + et);
                Kn = -(Pn = et < 0 ? -et : et);
              }
              if (Fe.hasOwnProperty(He = "CRYPTO")) {
                if ((et = Fe[He]) !== !!et) throw Error(I + He + " not true or false: " + et);
                if (et) {
                  if (typeof crypto > "u" || !crypto || !crypto.getRandomValues && !crypto.randomBytes) throw Xn = !et, Error(I + "crypto unavailable");
                  Xn = et;
                } else Xn = et;
              }
              if (Fe.hasOwnProperty(He = "MODULO_MODE") && ($(et = Fe[He], 0, 9, He), kt = et), Fe.hasOwnProperty(He = "POW_PRECISION") && ($(et = Fe[He], 0, j, He), Kt = et), Fe.hasOwnProperty(He = "FORMAT")) {
                if (typeof (et = Fe[He]) != "object") throw Error(I + He + " not an object: " + et);
                lr = et;
              }
              if (Fe.hasOwnProperty(He = "ALPHABET")) {
                if (typeof (et = Fe[He]) != "string" || /^.?$|[+\-.\s]|(.).*\1/.test(et)) throw Error(I + He + " invalid: " + et);
                Rr = et.slice(0, 10) == "0123456789", Er = et;
              }
            }
            return { DECIMAL_PLACES: Hn, ROUNDING_MODE: Tn, EXPONENTIAL_AT: [xn, Gn], RANGE: [Kn, Pn], CRYPTO: Xn, MODULO_MODE: kt, POW_PRECISION: Kt, FORMAT: lr, ALPHABET: Er };
          }, pr.isBigNumber = function(Fe) {
            if (!Fe || Fe._isBigNumber !== true) return false;
            if (!pr.DEBUG) return true;
            var He, et, jt = Fe.c, At = Fe.e, qt = Fe.s;
            e: if ({}.toString.call(jt) == "[object Array]") {
              if ((qt === 1 || qt === -1) && At >= -1e9 && At <= j && At === F(At)) {
                if (jt[0] === 0) {
                  if (At === 0 && jt.length === 1) return true;
                  break e;
                }
                if ((He = (At + 1) % H) < 1 && (He += H), String(jt[0]).length == He) {
                  for (He = 0; He < jt.length; He++) if ((et = jt[He]) < 0 || et >= N || et !== F(et)) break e;
                  if (et !== 0) return true;
                }
              }
            } else if (jt === null && At === null && (qt === null || qt === 1 || qt === -1)) return true;
            throw Error(I + "Invalid BigNumber: " + Fe);
          }, pr.maximum = pr.max = function() {
            return fn(arguments, -1);
          }, pr.minimum = pr.min = function() {
            return fn(arguments, 1);
          }, pr.random = (pt = 9007199254740992, Pr = Math.random() * pt & 2097151 ? function() {
            return F(Math.random() * pt);
          } : function() {
            return 8388608 * (1073741824 * Math.random() | 0) + (8388608 * Math.random() | 0);
          }, function(Fe) {
            var He, et, jt, At, qt, Jt = 0, er = [], mr = new pr(oi);
            if (Fe == null ? Fe = Hn : $(Fe, 0, j), At = w(Fe / H), Xn) if (crypto.getRandomValues) {
              for (He = crypto.getRandomValues(new Uint32Array(At *= 2)); Jt < At; ) (qt = 131072 * He[Jt] + (He[Jt + 1] >>> 11)) >= 9e15 ? (et = crypto.getRandomValues(new Uint32Array(2)), He[Jt] = et[0], He[Jt + 1] = et[1]) : (er.push(qt % 1e14), Jt += 2);
              Jt = At / 2;
            } else {
              if (!crypto.randomBytes) throw Xn = false, Error(I + "crypto unavailable");
              for (He = crypto.randomBytes(At *= 7); Jt < At; ) (qt = 281474976710656 * (31 & He[Jt]) + 1099511627776 * He[Jt + 1] + 4294967296 * He[Jt + 2] + 16777216 * He[Jt + 3] + (He[Jt + 4] << 16) + (He[Jt + 5] << 8) + He[Jt + 6]) >= 9e15 ? crypto.randomBytes(7).copy(He, Jt) : (er.push(qt % 1e14), Jt += 7);
              Jt = At / 7;
            }
            if (!Xn) for (; Jt < At; ) (qt = Pr()) < 9e15 && (er[Jt++] = qt % 1e14);
            for (At = er[--Jt], Fe %= H, At && Fe && (qt = x[H - Fe], er[Jt] = F(At / qt) * qt); er[Jt] === 0; er.pop(), Jt--) ;
            if (Jt < 0) er = [jt = 0];
            else {
              for (jt = -1; er[0] === 0; er.splice(0, 1), jt -= H) ;
              for (Jt = 1, qt = er[0]; qt >= 10; qt /= 10, Jt++) ;
              Jt < H && (jt -= H - Jt);
            }
            return mr.e = jt, mr.c = er, mr;
          }), pr.sum = function() {
            for (var Fe = 1, He = arguments, et = new pr(He[0]); Fe < He.length; ) et = et.plus(He[Fe++]);
            return et;
          }, ke = /* @__PURE__ */ function() {
            var Fe = "0123456789";
            function He(et, jt, At, qt) {
              for (var Jt, er, mr = [0], Ar = 0, xr = et.length; Ar < xr; ) {
                for (er = mr.length; er--; mr[er] *= jt) ;
                for (mr[0] += qt.indexOf(et.charAt(Ar++)), Jt = 0; Jt < mr.length; Jt++) mr[Jt] > At - 1 && (mr[Jt + 1] == null && (mr[Jt + 1] = 0), mr[Jt + 1] += mr[Jt] / At | 0, mr[Jt] %= At);
              }
              return mr.reverse();
            }
            return function(et, jt, At, qt, Jt) {
              var er, mr, Ar, xr, Zr, vn, _n, Dn, Zn = et.indexOf("."), ai = Hn, Ln = Tn;
              for (Zn >= 0 && (xr = Kt, Kt = 0, et = et.replace(".", ""), vn = (Dn = new pr(jt)).pow(et.length - Zn), Kt = xr, Dn.c = He(B(Z(vn.c), vn.e, "0"), 10, At, Fe), Dn.e = Dn.c.length), Ar = xr = (_n = He(et, jt, At, Jt ? (er = Er, Fe) : (er = Fe, Er))).length; _n[--xr] == 0; _n.pop()) ;
              if (!_n[0]) return er.charAt(0);
              if (Zn < 0 ? --Ar : (vn.c = _n, vn.e = Ar, vn.s = qt, _n = (vn = he(vn, Dn, ai, Ln, At)).c, Zr = vn.r, Ar = vn.e), Zn = _n[mr = Ar + ai + 1], xr = At / 2, Zr = Zr || mr < 0 || _n[mr + 1] != null, Zr = Ln < 4 ? (Zn != null || Zr) && (Ln == 0 || Ln == (vn.s < 0 ? 3 : 2)) : Zn > xr || Zn == xr && (Ln == 4 || Zr || Ln == 6 && 1 & _n[mr - 1] || Ln == (vn.s < 0 ? 8 : 7)), mr < 1 || !_n[0]) et = Zr ? B(er.charAt(1), -ai, er.charAt(0)) : er.charAt(0);
              else {
                if (_n.length = mr, Zr) for (--At; ++_n[--mr] > At; ) _n[mr] = 0, mr || (++Ar, _n = [1].concat(_n));
                for (xr = _n.length; !_n[--xr]; ) ;
                for (Zn = 0, et = ""; Zn <= xr; et += er.charAt(_n[Zn++])) ;
                et = B(et, Ar, er.charAt(0));
              }
              return et;
            };
          }(), he = /* @__PURE__ */ function() {
            function Fe(jt, At, qt) {
              var Jt, er, mr, Ar, xr = 0, Zr = jt.length, vn = At % L, _n = At / L | 0;
              for (jt = jt.slice(); Zr--; ) xr = ((er = vn * (mr = jt[Zr] % L) + (Jt = _n * mr + (Ar = jt[Zr] / L | 0) * vn) % L * L + xr) / qt | 0) + (Jt / L | 0) + _n * Ar, jt[Zr] = er % qt;
              return xr && (jt = [xr].concat(jt)), jt;
            }
            function He(jt, At, qt, Jt) {
              var er, mr;
              if (qt != Jt) mr = qt > Jt ? 1 : -1;
              else for (er = mr = 0; er < qt; er++) if (jt[er] != At[er]) {
                mr = jt[er] > At[er] ? 1 : -1;
                break;
              }
              return mr;
            }
            function et(jt, At, qt, Jt) {
              for (var er = 0; qt--; ) jt[qt] -= er, er = jt[qt] < At[qt] ? 1 : 0, jt[qt] = er * Jt + jt[qt] - At[qt];
              for (; !jt[0] && jt.length > 1; jt.splice(0, 1)) ;
            }
            return function(jt, At, qt, Jt, er) {
              var mr, Ar, xr, Zr, vn, _n, Dn, Zn, ai, Ln, zn, hi, zs, Cc, Rc, Yi, Fa, Di = jt.s == At.s ? 1 : -1, vi = jt.c, $n = At.c;
              if (!(vi && vi[0] && $n && $n[0])) return new pr(jt.s && At.s && (vi ? !$n || vi[0] != $n[0] : $n) ? vi && vi[0] == 0 || !$n ? 0 * Di : Di / 0 : NaN);
              for (ai = (Zn = new pr(Di)).c = [], Di = qt + (Ar = jt.e - At.e) + 1, er || (er = N, Ar = z(jt.e / H) - z(At.e / H), Di = Di / H | 0), xr = 0; $n[xr] == (vi[xr] || 0); xr++) ;
              if ($n[xr] > (vi[xr] || 0) && Ar--, Di < 0) ai.push(1), Zr = true;
              else {
                for (Cc = vi.length, Yi = $n.length, xr = 0, Di += 2, (vn = F(er / ($n[0] + 1))) > 1 && ($n = Fe($n, vn, er), vi = Fe(vi, vn, er), Yi = $n.length, Cc = vi.length), zs = Yi, zn = (Ln = vi.slice(0, Yi)).length; zn < Yi; Ln[zn++] = 0) ;
                Fa = $n.slice(), Fa = [0].concat(Fa), Rc = $n[0], $n[1] >= er / 2 && Rc++;
                do {
                  if (vn = 0, (mr = He($n, Ln, Yi, zn)) < 0) {
                    if (hi = Ln[0], Yi != zn && (hi = hi * er + (Ln[1] || 0)), (vn = F(hi / Rc)) > 1) for (vn >= er && (vn = er - 1), Dn = (_n = Fe($n, vn, er)).length, zn = Ln.length; He(_n, Ln, Dn, zn) == 1; ) vn--, et(_n, Yi < Dn ? Fa : $n, Dn, er), Dn = _n.length, mr = 1;
                    else vn == 0 && (mr = vn = 1), Dn = (_n = $n.slice()).length;
                    if (Dn < zn && (_n = [0].concat(_n)), et(Ln, _n, zn, er), zn = Ln.length, mr == -1) for (; He($n, Ln, Yi, zn) < 1; ) vn++, et(Ln, Yi < zn ? Fa : $n, zn, er), zn = Ln.length;
                  } else mr === 0 && (vn++, Ln = [0]);
                  ai[xr++] = vn, Ln[0] ? Ln[zn++] = vi[zs] || 0 : (Ln = [vi[zs]], zn = 1);
                } while ((zs++ < Cc || Ln[0] != null) && Di--);
                Zr = Ln[0] != null, ai[0] || ai.splice(0, 1);
              }
              if (er == N) {
                for (xr = 1, Di = ai[0]; Di >= 10; Di /= 10, xr++) ;
                mn(Zn, qt + (Zn.e = xr + Ar * H - 1) + 1, Jt, Zr);
              } else Zn.e = Ar, Zn.r = +Zr;
              return Zn;
            };
          }(), cn = /^(-?)0([xbo])(?=\w[\w.]*$)/i, on = /^([^.]+)\.$/, sn = /^\.([^.]+)$/, Nn = /^-?(Infinity|NaN)$/, Vn = /^\s*\+(?=[\w.])|^\s+|\s+$/g, ht = function(Fe, He, et, jt) {
            var At, qt = et ? He : He.replace(Vn, "");
            if (Nn.test(qt)) Fe.s = isNaN(qt) ? null : qt < 0 ? -1 : 1;
            else {
              if (!et && (qt = qt.replace(cn, function(Jt, er, mr) {
                return At = (mr = mr.toLowerCase()) == "x" ? 16 : mr == "b" ? 2 : 8, jt && jt != At ? Jt : er;
              }), jt && (At = jt, qt = qt.replace(on, "$1").replace(sn, "0.$1")), He != qt)) return new pr(qt, At);
              if (pr.DEBUG) throw Error(I + "Not a" + (jt ? " base " + jt : "") + " number: " + He);
              Fe.s = null;
            }
            Fe.c = Fe.e = null;
          }, ln.absoluteValue = ln.abs = function() {
            var Fe = new pr(this);
            return Fe.s < 0 && (Fe.s = 1), Fe;
          }, ln.comparedTo = function(Fe, He) {
            return ue(this, new pr(Fe, He));
          }, ln.decimalPlaces = ln.dp = function(Fe, He) {
            var et, jt, At, qt = this;
            if (Fe != null) return $(Fe, 0, j), He == null ? He = Tn : $(He, 0, 8), mn(new pr(qt), Fe + qt.e + 1, He);
            if (!(et = qt.c)) return null;
            if (jt = ((At = et.length - 1) - z(this.e / H)) * H, At = et[At]) for (; At % 10 == 0; At /= 10, jt--) ;
            return jt < 0 && (jt = 0), jt;
          }, ln.dividedBy = ln.div = function(Fe, He) {
            return he(this, new pr(Fe, He), Hn, Tn);
          }, ln.dividedToIntegerBy = ln.idiv = function(Fe, He) {
            return he(this, new pr(Fe, He), 0, 1);
          }, ln.exponentiatedBy = ln.pow = function(Fe, He) {
            var et, jt, At, qt, Jt, er, mr, Ar, xr = this;
            if ((Fe = new pr(Fe)).c && !Fe.isInteger()) throw Error(I + "Exponent not an integer: " + pn(Fe));
            if (He != null && (He = new pr(He)), Jt = Fe.e > 14, !xr.c || !xr.c[0] || xr.c[0] == 1 && !xr.e && xr.c.length == 1 || !Fe.c || !Fe.c[0]) return Ar = new pr(Math.pow(+pn(xr), Jt ? Fe.s * (2 - X(Fe)) : +pn(Fe))), He ? Ar.mod(He) : Ar;
            if (er = Fe.s < 0, He) {
              if (He.c ? !He.c[0] : !He.s) return new pr(NaN);
              (jt = !er && xr.isInteger() && He.isInteger()) && (xr = xr.mod(He));
            } else {
              if (Fe.e > 9 && (xr.e > 0 || xr.e < -1 || (xr.e == 0 ? xr.c[0] > 1 || Jt && xr.c[1] >= 24e7 : xr.c[0] < 8e13 || Jt && xr.c[0] <= 9999975e7))) return qt = xr.s < 0 && X(Fe) ? -0 : 0, xr.e > -1 && (qt = 1 / qt), new pr(er ? 1 / qt : qt);
              Kt && (qt = w(Kt / H + 2));
            }
            for (Jt ? (et = new pr(0.5), er && (Fe.s = 1), mr = X(Fe)) : mr = (At = Math.abs(+pn(Fe))) % 2, Ar = new pr(oi); ; ) {
              if (mr) {
                if (!(Ar = Ar.times(xr)).c) break;
                qt ? Ar.c.length > qt && (Ar.c.length = qt) : jt && (Ar = Ar.mod(He));
              }
              if (At) {
                if ((At = F(At / 2)) === 0) break;
                mr = At % 2;
              } else if (mn(Fe = Fe.times(et), Fe.e + 1, 1), Fe.e > 14) mr = X(Fe);
              else {
                if ((At = +pn(Fe)) == 0) break;
                mr = At % 2;
              }
              xr = xr.times(xr), qt ? xr.c && xr.c.length > qt && (xr.c.length = qt) : jt && (xr = xr.mod(He));
            }
            return jt ? Ar : (er && (Ar = oi.div(Ar)), He ? Ar.mod(He) : qt ? mn(Ar, Kt, Tn, void 0) : Ar);
          }, ln.integerValue = function(Fe) {
            var He = new pr(this);
            return Fe == null ? Fe = Tn : $(Fe, 0, 8), mn(He, He.e + 1, Fe);
          }, ln.isEqualTo = ln.eq = function(Fe, He) {
            return ue(this, new pr(Fe, He)) === 0;
          }, ln.isFinite = function() {
            return !!this.c;
          }, ln.isGreaterThan = ln.gt = function(Fe, He) {
            return ue(this, new pr(Fe, He)) > 0;
          }, ln.isGreaterThanOrEqualTo = ln.gte = function(Fe, He) {
            return (He = ue(this, new pr(Fe, He))) === 1 || He === 0;
          }, ln.isInteger = function() {
            return !!this.c && z(this.e / H) > this.c.length - 2;
          }, ln.isLessThan = ln.lt = function(Fe, He) {
            return ue(this, new pr(Fe, He)) < 0;
          }, ln.isLessThanOrEqualTo = ln.lte = function(Fe, He) {
            return (He = ue(this, new pr(Fe, He))) === -1 || He === 0;
          }, ln.isNaN = function() {
            return !this.s;
          }, ln.isNegative = function() {
            return this.s < 0;
          }, ln.isPositive = function() {
            return this.s > 0;
          }, ln.isZero = function() {
            return !!this.c && this.c[0] == 0;
          }, ln.minus = function(Fe, He) {
            var et, jt, At, qt, Jt = this, er = Jt.s;
            if (He = (Fe = new pr(Fe, He)).s, !er || !He) return new pr(NaN);
            if (er != He) return Fe.s = -He, Jt.plus(Fe);
            var mr = Jt.e / H, Ar = Fe.e / H, xr = Jt.c, Zr = Fe.c;
            if (!mr || !Ar) {
              if (!xr || !Zr) return xr ? (Fe.s = -He, Fe) : new pr(Zr ? Jt : NaN);
              if (!xr[0] || !Zr[0]) return Zr[0] ? (Fe.s = -He, Fe) : new pr(xr[0] ? Jt : Tn == 3 ? -0 : 0);
            }
            if (mr = z(mr), Ar = z(Ar), xr = xr.slice(), er = mr - Ar) {
              for ((qt = er < 0) ? (er = -er, At = xr) : (Ar = mr, At = Zr), At.reverse(), He = er; He--; At.push(0)) ;
              At.reverse();
            } else for (jt = (qt = (er = xr.length) < (He = Zr.length)) ? er : He, er = He = 0; He < jt; He++) if (xr[He] != Zr[He]) {
              qt = xr[He] < Zr[He];
              break;
            }
            if (qt && (At = xr, xr = Zr, Zr = At, Fe.s = -Fe.s), (He = (jt = Zr.length) - (et = xr.length)) > 0) for (; He--; xr[et++] = 0) ;
            for (He = N - 1; jt > er; ) {
              if (xr[--jt] < Zr[jt]) {
                for (et = jt; et && !xr[--et]; xr[et] = He) ;
                --xr[et], xr[jt] += N;
              }
              xr[jt] -= Zr[jt];
            }
            for (; xr[0] == 0; xr.splice(0, 1), --Ar) ;
            return xr[0] ? rn(Fe, xr, Ar) : (Fe.s = Tn == 3 ? -1 : 1, Fe.c = [Fe.e = 0], Fe);
          }, ln.modulo = ln.mod = function(Fe, He) {
            var et, jt, At = this;
            return Fe = new pr(Fe, He), !At.c || !Fe.s || Fe.c && !Fe.c[0] ? new pr(NaN) : !Fe.c || At.c && !At.c[0] ? new pr(At) : (kt == 9 ? (jt = Fe.s, Fe.s = 1, et = he(At, Fe, 0, 3), Fe.s = jt, et.s *= jt) : et = he(At, Fe, 0, kt), (Fe = At.minus(et.times(Fe))).c[0] || kt != 1 || (Fe.s = At.s), Fe);
          }, ln.multipliedBy = ln.times = function(Fe, He) {
            var et, jt, At, qt, Jt, er, mr, Ar, xr, Zr, vn, _n, Dn, Zn, ai, Ln = this, zn = Ln.c, hi = (Fe = new pr(Fe, He)).c;
            if (!(zn && hi && zn[0] && hi[0])) return !Ln.s || !Fe.s || zn && !zn[0] && !hi || hi && !hi[0] && !zn ? Fe.c = Fe.e = Fe.s = null : (Fe.s *= Ln.s, zn && hi ? (Fe.c = [0], Fe.e = 0) : Fe.c = Fe.e = null), Fe;
            for (jt = z(Ln.e / H) + z(Fe.e / H), Fe.s *= Ln.s, (mr = zn.length) < (Zr = hi.length) && (Dn = zn, zn = hi, hi = Dn, At = mr, mr = Zr, Zr = At), At = mr + Zr, Dn = []; At--; Dn.push(0)) ;
            for (Zn = N, ai = L, At = Zr; --At >= 0; ) {
              for (et = 0, vn = hi[At] % ai, _n = hi[At] / ai | 0, qt = At + (Jt = mr); qt > At; ) et = ((Ar = vn * (Ar = zn[--Jt] % ai) + (er = _n * Ar + (xr = zn[Jt] / ai | 0) * vn) % ai * ai + Dn[qt] + et) / Zn | 0) + (er / ai | 0) + _n * xr, Dn[qt--] = Ar % Zn;
              Dn[qt] = et;
            }
            return et ? ++jt : Dn.splice(0, 1), rn(Fe, Dn, jt);
          }, ln.negated = function() {
            var Fe = new pr(this);
            return Fe.s = -Fe.s || null, Fe;
          }, ln.plus = function(Fe, He) {
            var et, jt = this, At = jt.s;
            if (He = (Fe = new pr(Fe, He)).s, !At || !He) return new pr(NaN);
            if (At != He) return Fe.s = -He, jt.minus(Fe);
            var qt = jt.e / H, Jt = Fe.e / H, er = jt.c, mr = Fe.c;
            if (!qt || !Jt) {
              if (!er || !mr) return new pr(At / 0);
              if (!er[0] || !mr[0]) return mr[0] ? Fe : new pr(er[0] ? jt : 0 * At);
            }
            if (qt = z(qt), Jt = z(Jt), er = er.slice(), At = qt - Jt) {
              for (At > 0 ? (Jt = qt, et = mr) : (At = -At, et = er), et.reverse(); At--; et.push(0)) ;
              et.reverse();
            }
            for ((At = er.length) - (He = mr.length) < 0 && (et = mr, mr = er, er = et, He = At), At = 0; He; ) At = (er[--He] = er[He] + mr[He] + At) / N | 0, er[He] = N === er[He] ? 0 : er[He] % N;
            return At && (er = [At].concat(er), ++Jt), rn(Fe, er, Jt);
          }, ln.precision = ln.sd = function(Fe, He) {
            var et, jt, At, qt = this;
            if (Fe != null && Fe !== !!Fe) return $(Fe, 1, j), He == null ? He = Tn : $(He, 0, 8), mn(new pr(qt), Fe, He);
            if (!(et = qt.c)) return null;
            if (jt = (At = et.length - 1) * H + 1, At = et[At]) {
              for (; At % 10 == 0; At /= 10, jt--) ;
              for (At = et[0]; At >= 10; At /= 10, jt++) ;
            }
            return Fe && qt.e + 1 > jt && (jt = qt.e + 1), jt;
          }, ln.shiftedBy = function(Fe) {
            return $(Fe, -9007199254740991, _), this.times("1e" + Fe);
          }, ln.squareRoot = ln.sqrt = function() {
            var Fe, He, et, jt, At, qt = this, Jt = qt.c, er = qt.s, mr = qt.e, Ar = Hn + 4, xr = new pr("0.5");
            if (er !== 1 || !Jt || !Jt[0]) return new pr(!er || er < 0 && (!Jt || Jt[0]) ? NaN : Jt ? qt : 1 / 0);
            if ((er = Math.sqrt(+pn(qt))) == 0 || er == 1 / 0 ? (((He = Z(Jt)).length + mr) % 2 == 0 && (He += "0"), er = Math.sqrt(+He), mr = z((mr + 1) / 2) - (mr < 0 || mr % 2), et = new pr(He = er == 1 / 0 ? "5e" + mr : (He = er.toExponential()).slice(0, He.indexOf("e") + 1) + mr)) : et = new pr(er + ""), et.c[0]) {
              for ((er = (mr = et.e) + Ar) < 3 && (er = 0); ; ) if (At = et, et = xr.times(At.plus(he(qt, At, Ar, 1))), Z(At.c).slice(0, er) === (He = Z(et.c)).slice(0, er)) {
                if (et.e < mr && --er, (He = He.slice(er - 3, er + 1)) != "9999" && (jt || He != "4999")) {
                  +He && (+He.slice(1) || He.charAt(0) != "5") || (mn(et, et.e + Hn + 2, 1), Fe = !et.times(et).eq(qt));
                  break;
                }
                if (!jt && (mn(At, At.e + Hn + 2, 0), At.times(At).eq(qt))) {
                  et = At;
                  break;
                }
                Ar += 4, er += 4, jt = 1;
              }
            }
            return mn(et, et.e + Hn + 1, Tn, Fe);
          }, ln.toExponential = function(Fe, He) {
            return Fe != null && ($(Fe, 0, j), Fe++), tn(this, Fe, He, 1);
          }, ln.toFixed = function(Fe, He) {
            return Fe != null && ($(Fe, 0, j), Fe = Fe + this.e + 1), tn(this, Fe, He);
          }, ln.toFormat = function(Fe, He, et) {
            var jt, At = this;
            if (et == null) Fe != null && He && typeof He == "object" ? (et = He, He = null) : Fe && typeof Fe == "object" ? (et = Fe, Fe = He = null) : et = lr;
            else if (typeof et != "object") throw Error(I + "Argument not an object: " + et);
            if (jt = At.toFixed(Fe, He), At.c) {
              var qt, Jt = jt.split("."), er = +et.groupSize, mr = +et.secondaryGroupSize, Ar = et.groupSeparator || "", xr = Jt[0], Zr = Jt[1], vn = At.s < 0, _n = vn ? xr.slice(1) : xr, Dn = _n.length;
              if (mr && (qt = er, er = mr, mr = qt, Dn -= qt), er > 0 && Dn > 0) {
                for (qt = Dn % er || er, xr = _n.substr(0, qt); qt < Dn; qt += er) xr += Ar + _n.substr(qt, er);
                mr > 0 && (xr += Ar + _n.slice(qt)), vn && (xr = "-" + xr);
              }
              jt = Zr ? xr + (et.decimalSeparator || "") + ((mr = +et.fractionGroupSize) ? Zr.replace(new RegExp("\\d{" + mr + "}\\B", "g"), "$&" + (et.fractionGroupSeparator || "")) : Zr) : xr;
            }
            return (et.prefix || "") + jt + (et.suffix || "");
          }, ln.toFraction = function(Fe) {
            var He, et, jt, At, qt, Jt, er, mr, Ar, xr, Zr, vn, _n = this, Dn = _n.c;
            if (Fe != null && (!(er = new pr(Fe)).isInteger() && (er.c || er.s !== 1) || er.lt(oi))) throw Error(I + "Argument " + (er.isInteger() ? "out of range: " : "not an integer: ") + pn(er));
            if (!Dn) return new pr(_n);
            for (He = new pr(oi), Ar = et = new pr(oi), jt = mr = new pr(oi), vn = Z(Dn), qt = He.e = vn.length - _n.e - 1, He.c[0] = x[(Jt = qt % H) < 0 ? H + Jt : Jt], Fe = !Fe || er.comparedTo(He) > 0 ? qt > 0 ? He : Ar : er, Jt = Pn, Pn = 1 / 0, er = new pr(vn), mr.c[0] = 0; xr = he(er, He, 0, 1), (At = et.plus(xr.times(jt))).comparedTo(Fe) != 1; ) et = jt, jt = At, Ar = mr.plus(xr.times(At = Ar)), mr = At, He = er.minus(xr.times(At = He)), er = At;
            return At = he(Fe.minus(et), jt, 0, 1), mr = mr.plus(At.times(Ar)), et = et.plus(At.times(jt)), mr.s = Ar.s = _n.s, Zr = he(Ar, jt, qt *= 2, Tn).minus(_n).abs().comparedTo(he(mr, et, qt, Tn).minus(_n).abs()) < 1 ? [Ar, jt] : [mr, et], Pn = Jt, Zr;
          }, ln.toNumber = function() {
            return +pn(this);
          }, ln.toPrecision = function(Fe, He) {
            return Fe != null && $(Fe, 1, j), tn(this, Fe, He, 2);
          }, ln.toString = function(Fe) {
            var He, et = this, jt = et.s, At = et.e;
            return At === null ? jt ? (He = "Infinity", jt < 0 && (He = "-" + He)) : He = "NaN" : (Fe == null ? He = At <= xn || At >= Gn ? J(Z(et.c), At) : B(Z(et.c), At, "0") : Fe === 10 && Rr ? He = B(Z((et = mn(new pr(et), Hn + At + 1, Tn)).c), et.e, "0") : ($(Fe, 2, Er.length, "Base"), He = ke(B(Z(et.c), At, "0"), 10, Fe, jt, true)), jt < 0 && et.c[0] && (He = "-" + He)), He;
          }, ln.valueOf = ln.toJSON = function() {
            return pn(this);
          }, ln._isBigNumber = true, ln[Symbol.toStringTag] = "BigNumber", ln[Symbol.for("nodejs.util.inspect.custom")] = ln.valueOf, ve != null && pr.set(ve), pr;
        }();
        const ne = Q;
        var K = s(4193), ie = s.n(K), ce = s(9127), ye = s.n(ce), oe = s(5976), se = s(9983);
        function re(Ie) {
          return re = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(ve) {
            return typeof ve;
          } : function(ve) {
            return ve && typeof Symbol == "function" && ve.constructor === Symbol && ve !== Symbol.prototype ? "symbol" : typeof ve;
          }, re(Ie);
        }
        var ge = "13.2.0", Te = {}, pe = (0, se.vt)({ headers: { "X-Client-Name": "js-stellar-sdk", "X-Client-Version": ge } });
        function Oe(Ie) {
          return Math.floor(Ie / 1e3);
        }
        pe.interceptors.response.use(function(Ie) {
          var ve = ie()(Ie.config.url).hostname(), he = 0;
          if (Ie.headers instanceof Headers) {
            var ke = Ie.headers.get("date");
            ke && (he = Oe(Date.parse(ke)));
          } else if (re(Ie.headers) === "object" && "date" in Ie.headers) {
            var ht = Ie.headers;
            typeof ht.date == "string" && (he = Oe(Date.parse(ht.date)));
          }
          var pt = Oe((/* @__PURE__ */ new Date()).getTime());
          return Number.isNaN(he) || (Te[ve] = { serverTime: he, localTimeRecorded: pt }), Ie;
        });
        const xe = pe;
        function Ve(Ie) {
          var ve = Te[Ie];
          if (!ve || !ve.localTimeRecorded || !ve.serverTime) return null;
          var he = ve.serverTime, ke = ve.localTimeRecorded, ht = Oe((/* @__PURE__ */ new Date()).getTime());
          return ht - ke > 300 ? null : ht - ke + he;
        }
        function _e(Ie) {
          return _e = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(ve) {
            return typeof ve;
          } : function(ve) {
            return ve && typeof Symbol == "function" && ve.constructor === Symbol && ve !== Symbol.prototype ? "symbol" : typeof ve;
          }, _e(Ie);
        }
        function Be() {
          Be = function() {
            return ve;
          };
          var Ie, ve = {}, he = Object.prototype, ke = he.hasOwnProperty, ht = Object.defineProperty || function(Fe, He, et) {
            Fe[He] = et.value;
          }, pt = typeof Symbol == "function" ? Symbol : {}, Pr = pt.iterator || "@@iterator", cn = pt.asyncIterator || "@@asyncIterator", on = pt.toStringTag || "@@toStringTag";
          function sn(Fe, He, et) {
            return Object.defineProperty(Fe, He, { value: et, enumerable: true, configurable: true, writable: true }), Fe[He];
          }
          try {
            sn({}, "");
          } catch {
            sn = function(He, et, jt) {
              return He[et] = jt;
            };
          }
          function Nn(Fe, He, et, jt) {
            var At = He && He.prototype instanceof Gn ? He : Gn, qt = Object.create(At.prototype), Jt = new mn(jt || []);
            return ht(qt, "_invoke", { value: pr(Fe, et, Jt) }), qt;
          }
          function Vn(Fe, He, et) {
            try {
              return { type: "normal", arg: Fe.call(He, et) };
            } catch (jt) {
              return { type: "throw", arg: jt };
            }
          }
          ve.wrap = Nn;
          var ln = "suspendedStart", oi = "suspendedYield", Hn = "executing", Tn = "completed", xn = {};
          function Gn() {
          }
          function Kn() {
          }
          function Pn() {
          }
          var Xn = {};
          sn(Xn, Pr, function() {
            return this;
          });
          var kt = Object.getPrototypeOf, Kt = kt && kt(kt(pn([])));
          Kt && Kt !== he && ke.call(Kt, Pr) && (Xn = Kt);
          var lr = Pn.prototype = Gn.prototype = Object.create(Xn);
          function Er(Fe) {
            ["next", "throw", "return"].forEach(function(He) {
              sn(Fe, He, function(et) {
                return this._invoke(He, et);
              });
            });
          }
          function Rr(Fe, He) {
            function et(At, qt, Jt, er) {
              var mr = Vn(Fe[At], Fe, qt);
              if (mr.type !== "throw") {
                var Ar = mr.arg, xr = Ar.value;
                return xr && _e(xr) == "object" && ke.call(xr, "__await") ? He.resolve(xr.__await).then(function(Zr) {
                  et("next", Zr, Jt, er);
                }, function(Zr) {
                  et("throw", Zr, Jt, er);
                }) : He.resolve(xr).then(function(Zr) {
                  Ar.value = Zr, Jt(Ar);
                }, function(Zr) {
                  return et("throw", Zr, Jt, er);
                });
              }
              er(mr.arg);
            }
            var jt;
            ht(this, "_invoke", { value: function(At, qt) {
              function Jt() {
                return new He(function(er, mr) {
                  et(At, qt, er, mr);
                });
              }
              return jt = jt ? jt.then(Jt, Jt) : Jt();
            } });
          }
          function pr(Fe, He, et) {
            var jt = ln;
            return function(At, qt) {
              if (jt === Hn) throw Error("Generator is already running");
              if (jt === Tn) {
                if (At === "throw") throw qt;
                return { value: Ie, done: true };
              }
              for (et.method = At, et.arg = qt; ; ) {
                var Jt = et.delegate;
                if (Jt) {
                  var er = tn(Jt, et);
                  if (er) {
                    if (er === xn) continue;
                    return er;
                  }
                }
                if (et.method === "next") et.sent = et._sent = et.arg;
                else if (et.method === "throw") {
                  if (jt === ln) throw jt = Tn, et.arg;
                  et.dispatchException(et.arg);
                } else et.method === "return" && et.abrupt("return", et.arg);
                jt = Hn;
                var mr = Vn(Fe, He, et);
                if (mr.type === "normal") {
                  if (jt = et.done ? Tn : oi, mr.arg === xn) continue;
                  return { value: mr.arg, done: et.done };
                }
                mr.type === "throw" && (jt = Tn, et.method = "throw", et.arg = mr.arg);
              }
            };
          }
          function tn(Fe, He) {
            var et = He.method, jt = Fe.iterator[et];
            if (jt === Ie) return He.delegate = null, et === "throw" && Fe.iterator.return && (He.method = "return", He.arg = Ie, tn(Fe, He), He.method === "throw") || et !== "return" && (He.method = "throw", He.arg = new TypeError("The iterator does not provide a '" + et + "' method")), xn;
            var At = Vn(jt, Fe.iterator, He.arg);
            if (At.type === "throw") return He.method = "throw", He.arg = At.arg, He.delegate = null, xn;
            var qt = At.arg;
            return qt ? qt.done ? (He[Fe.resultName] = qt.value, He.next = Fe.nextLoc, He.method !== "return" && (He.method = "next", He.arg = Ie), He.delegate = null, xn) : qt : (He.method = "throw", He.arg = new TypeError("iterator result is not an object"), He.delegate = null, xn);
          }
          function fn(Fe) {
            var He = { tryLoc: Fe[0] };
            1 in Fe && (He.catchLoc = Fe[1]), 2 in Fe && (He.finallyLoc = Fe[2], He.afterLoc = Fe[3]), this.tryEntries.push(He);
          }
          function rn(Fe) {
            var He = Fe.completion || {};
            He.type = "normal", delete He.arg, Fe.completion = He;
          }
          function mn(Fe) {
            this.tryEntries = [{ tryLoc: "root" }], Fe.forEach(fn, this), this.reset(true);
          }
          function pn(Fe) {
            if (Fe || Fe === "") {
              var He = Fe[Pr];
              if (He) return He.call(Fe);
              if (typeof Fe.next == "function") return Fe;
              if (!isNaN(Fe.length)) {
                var et = -1, jt = function At() {
                  for (; ++et < Fe.length; ) if (ke.call(Fe, et)) return At.value = Fe[et], At.done = false, At;
                  return At.value = Ie, At.done = true, At;
                };
                return jt.next = jt;
              }
            }
            throw new TypeError(_e(Fe) + " is not iterable");
          }
          return Kn.prototype = Pn, ht(lr, "constructor", { value: Pn, configurable: true }), ht(Pn, "constructor", { value: Kn, configurable: true }), Kn.displayName = sn(Pn, on, "GeneratorFunction"), ve.isGeneratorFunction = function(Fe) {
            var He = typeof Fe == "function" && Fe.constructor;
            return !!He && (He === Kn || (He.displayName || He.name) === "GeneratorFunction");
          }, ve.mark = function(Fe) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(Fe, Pn) : (Fe.__proto__ = Pn, sn(Fe, on, "GeneratorFunction")), Fe.prototype = Object.create(lr), Fe;
          }, ve.awrap = function(Fe) {
            return { __await: Fe };
          }, Er(Rr.prototype), sn(Rr.prototype, cn, function() {
            return this;
          }), ve.AsyncIterator = Rr, ve.async = function(Fe, He, et, jt, At) {
            At === void 0 && (At = Promise);
            var qt = new Rr(Nn(Fe, He, et, jt), At);
            return ve.isGeneratorFunction(He) ? qt : qt.next().then(function(Jt) {
              return Jt.done ? Jt.value : qt.next();
            });
          }, Er(lr), sn(lr, on, "Generator"), sn(lr, Pr, function() {
            return this;
          }), sn(lr, "toString", function() {
            return "[object Generator]";
          }), ve.keys = function(Fe) {
            var He = Object(Fe), et = [];
            for (var jt in He) et.push(jt);
            return et.reverse(), function At() {
              for (; et.length; ) {
                var qt = et.pop();
                if (qt in He) return At.value = qt, At.done = false, At;
              }
              return At.done = true, At;
            };
          }, ve.values = pn, mn.prototype = { constructor: mn, reset: function(Fe) {
            if (this.prev = 0, this.next = 0, this.sent = this._sent = Ie, this.done = false, this.delegate = null, this.method = "next", this.arg = Ie, this.tryEntries.forEach(rn), !Fe) for (var He in this) He.charAt(0) === "t" && ke.call(this, He) && !isNaN(+He.slice(1)) && (this[He] = Ie);
          }, stop: function() {
            this.done = true;
            var Fe = this.tryEntries[0].completion;
            if (Fe.type === "throw") throw Fe.arg;
            return this.rval;
          }, dispatchException: function(Fe) {
            if (this.done) throw Fe;
            var He = this;
            function et(mr, Ar) {
              return qt.type = "throw", qt.arg = Fe, He.next = mr, Ar && (He.method = "next", He.arg = Ie), !!Ar;
            }
            for (var jt = this.tryEntries.length - 1; jt >= 0; --jt) {
              var At = this.tryEntries[jt], qt = At.completion;
              if (At.tryLoc === "root") return et("end");
              if (At.tryLoc <= this.prev) {
                var Jt = ke.call(At, "catchLoc"), er = ke.call(At, "finallyLoc");
                if (Jt && er) {
                  if (this.prev < At.catchLoc) return et(At.catchLoc, true);
                  if (this.prev < At.finallyLoc) return et(At.finallyLoc);
                } else if (Jt) {
                  if (this.prev < At.catchLoc) return et(At.catchLoc, true);
                } else {
                  if (!er) throw Error("try statement without catch or finally");
                  if (this.prev < At.finallyLoc) return et(At.finallyLoc);
                }
              }
            }
          }, abrupt: function(Fe, He) {
            for (var et = this.tryEntries.length - 1; et >= 0; --et) {
              var jt = this.tryEntries[et];
              if (jt.tryLoc <= this.prev && ke.call(jt, "finallyLoc") && this.prev < jt.finallyLoc) {
                var At = jt;
                break;
              }
            }
            At && (Fe === "break" || Fe === "continue") && At.tryLoc <= He && He <= At.finallyLoc && (At = null);
            var qt = At ? At.completion : {};
            return qt.type = Fe, qt.arg = He, At ? (this.method = "next", this.next = At.finallyLoc, xn) : this.complete(qt);
          }, complete: function(Fe, He) {
            if (Fe.type === "throw") throw Fe.arg;
            return Fe.type === "break" || Fe.type === "continue" ? this.next = Fe.arg : Fe.type === "return" ? (this.rval = this.arg = Fe.arg, this.method = "return", this.next = "end") : Fe.type === "normal" && He && (this.next = He), xn;
          }, finish: function(Fe) {
            for (var He = this.tryEntries.length - 1; He >= 0; --He) {
              var et = this.tryEntries[He];
              if (et.finallyLoc === Fe) return this.complete(et.completion, et.afterLoc), rn(et), xn;
            }
          }, catch: function(Fe) {
            for (var He = this.tryEntries.length - 1; He >= 0; --He) {
              var et = this.tryEntries[He];
              if (et.tryLoc === Fe) {
                var jt = et.completion;
                if (jt.type === "throw") {
                  var At = jt.arg;
                  rn(et);
                }
                return At;
              }
            }
            throw Error("illegal catch attempt");
          }, delegateYield: function(Fe, He, et) {
            return this.delegate = { iterator: pn(Fe), resultName: He, nextLoc: et }, this.method === "next" && (this.arg = Ie), xn;
          } }, ve;
        }
        function Qe(Ie, ve, he, ke, ht, pt, Pr) {
          try {
            var cn = Ie[pt](Pr), on = cn.value;
          } catch (sn) {
            return void he(sn);
          }
          cn.done ? ve(on) : Promise.resolve(on).then(ke, ht);
        }
        function ee(Ie) {
          return function() {
            var ve = this, he = arguments;
            return new Promise(function(ke, ht) {
              var pt = Ie.apply(ve, he);
              function Pr(on) {
                Qe(pt, ke, ht, Pr, cn, "next", on);
              }
              function cn(on) {
                Qe(pt, ke, ht, Pr, cn, "throw", on);
              }
              Pr(void 0);
            });
          };
        }
        function P(Ie, ve) {
          for (var he = 0; he < ve.length; he++) {
            var ke = ve[he];
            ke.enumerable = ke.enumerable || false, ke.configurable = true, "value" in ke && (ke.writable = true), Object.defineProperty(Ie, T(ke.key), ke);
          }
        }
        function T(Ie) {
          var ve = function(he, ke) {
            if (_e(he) != "object" || !he) return he;
            var ht = he[Symbol.toPrimitive];
            if (ht !== void 0) {
              var pt = ht.call(he, ke);
              if (_e(pt) != "object") return pt;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(he);
          }(Ie, "string");
          return _e(ve) == "symbol" ? ve : ve + "";
        }
        var O, V, D, C, p = ["transaction"], A = s.g;
        O = (V = (D = A.EventSource) !== null && D !== void 0 ? D : (C = A.window) === null || C === void 0 ? void 0 : C.EventSource) !== null && V !== void 0 ? V : s(1731);
        var U, Y, ae = function(Ie, ve, he) {
          return ve && P(Ie.prototype, ve), Object.defineProperty(Ie, "prototype", { writable: false }), Ie;
        }(function Ie(ve) {
          var he = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
          (function(ke, ht) {
            if (!(ke instanceof ht)) throw new TypeError("Cannot call a class as a function");
          })(this, Ie), this.url = ve.clone(), this.filter = [], this.originalSegments = this.url.segment() || [], this.neighborRoot = he;
        }, [{ key: "call", value: function() {
          var Ie = this;
          return this.checkFilter(), this._sendNormalRequest(this.url).then(function(ve) {
            return Ie._parseResponse(ve);
          });
        } }, { key: "stream", value: function() {
          var Ie, ve, he = this, ke = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          if (O === void 0) throw new Error("Streaming requires eventsource to be enabled. If you need this functionality, compile with USE_EVENTSOURCE=true.");
          this.checkFilter(), this.url.setQuery("X-Client-Name", "js-stellar-sdk"), this.url.setQuery("X-Client-Version", ge);
          var ht = function() {
            ve = setTimeout(function() {
              var Pr;
              (Pr = Ie) === null || Pr === void 0 || Pr.close(), Ie = pt();
            }, ke.reconnectTimeout || 15e3);
          }, pt = function() {
            try {
              Ie = new O(he.url.toString());
            } catch (Nn) {
              ke.onerror && ke.onerror(Nn);
            }
            if (ht(), !Ie) return Ie;
            var Pr = false, cn = function() {
              Pr || (clearTimeout(ve), Ie.close(), pt(), Pr = true);
            }, on = function(Nn) {
              if (Nn.type !== "close") {
                var Vn = Nn.data ? he._parseRecord(JSON.parse(Nn.data)) : Nn;
                Vn.paging_token && he.url.setQuery("cursor", Vn.paging_token), clearTimeout(ve), ht(), ke.onmessage !== void 0 && ke.onmessage(Vn);
              } else cn();
            }, sn = function(Nn) {
              ke.onerror && ke.onerror(Nn);
            };
            return Ie.addEventListener ? (Ie.addEventListener("message", on.bind(he)), Ie.addEventListener("error", sn.bind(he)), Ie.addEventListener("close", cn.bind(he))) : (Ie.onmessage = on.bind(he), Ie.onerror = sn.bind(he)), Ie;
          };
          return pt(), function() {
            var Pr;
            clearTimeout(ve), (Pr = Ie) === null || Pr === void 0 || Pr.close();
          };
        } }, { key: "cursor", value: function(Ie) {
          return this.url.setQuery("cursor", Ie), this;
        } }, { key: "limit", value: function(Ie) {
          return this.url.setQuery("limit", Ie.toString()), this;
        } }, { key: "order", value: function(Ie) {
          return this.url.setQuery("order", Ie), this;
        } }, { key: "join", value: function(Ie) {
          return this.url.setQuery("join", Ie), this;
        } }, { key: "forEndpoint", value: function(Ie, ve) {
          if (this.neighborRoot === "") throw new Error("Invalid usage: neighborRoot not set in constructor");
          return this.filter.push([Ie, ve, this.neighborRoot]), this;
        } }, { key: "checkFilter", value: function() {
          if (this.filter.length >= 2) throw new oe.v7("Too many filters specified", this.filter);
          if (this.filter.length === 1) {
            var Ie = this.originalSegments.concat(this.filter[0]);
            this.url.segment(Ie);
          }
        } }, { key: "_requestFnForLink", value: function(Ie) {
          var ve = this;
          return ee(Be().mark(function he() {
            var ke, ht, pt, Pr, cn = arguments;
            return Be().wrap(function(on) {
              for (; ; ) switch (on.prev = on.next) {
                case 0:
                  return ke = cn.length > 0 && cn[0] !== void 0 ? cn[0] : {}, Ie.templated ? (pt = ye()(Ie.href), ht = ie()(pt.expand(ke))) : ht = ie()(Ie.href), on.next = 4, ve._sendNormalRequest(ht);
                case 4:
                  return Pr = on.sent, on.abrupt("return", ve._parseResponse(Pr));
                case 6:
                case "end":
                  return on.stop();
              }
            }, he);
          }));
        } }, { key: "_parseRecord", value: function(Ie) {
          var ve = this;
          return Ie._links && Object.keys(Ie._links).forEach(function(he) {
            var ke = Ie._links[he], ht = false;
            if (Ie[he] !== void 0 && (Ie["".concat(he, "_attr")] = Ie[he], ht = true), ht && p.indexOf(he) >= 0) {
              var pt = ve._parseRecord(Ie[he]);
              Ie[he] = ee(Be().mark(function Pr() {
                return Be().wrap(function(cn) {
                  for (; ; ) switch (cn.prev = cn.next) {
                    case 0:
                      return cn.abrupt("return", pt);
                    case 1:
                    case "end":
                      return cn.stop();
                  }
                }, Pr);
              }));
            } else Ie[he] = ve._requestFnForLink(ke);
          }), Ie;
        } }, { key: "_sendNormalRequest", value: (Y = ee(Be().mark(function Ie(ve) {
          var he;
          return Be().wrap(function(ke) {
            for (; ; ) switch (ke.prev = ke.next) {
              case 0:
                return (he = ve).authority() === "" && (he = he.authority(this.url.authority())), he.protocol() === "" && (he = he.protocol(this.url.protocol())), ke.abrupt("return", pe.get(he.toString()).then(function(ht) {
                  return ht.data;
                }).catch(this._handleNetworkError));
              case 4:
              case "end":
                return ke.stop();
            }
          }, Ie, this);
        })), function(Ie) {
          return Y.apply(this, arguments);
        }) }, { key: "_parseResponse", value: function(Ie) {
          return Ie._embedded && Ie._embedded.records ? this._toCollectionPage(Ie) : this._parseRecord(Ie);
        } }, { key: "_toCollectionPage", value: function(Ie) {
          for (var ve, he, ke = this, ht = 0; ht < Ie._embedded.records.length; ht += 1) Ie._embedded.records[ht] = this._parseRecord(Ie._embedded.records[ht]);
          return { records: Ie._embedded.records, next: (he = ee(Be().mark(function pt() {
            var Pr;
            return Be().wrap(function(cn) {
              for (; ; ) switch (cn.prev = cn.next) {
                case 0:
                  return cn.next = 2, ke._sendNormalRequest(ie()(Ie._links.next.href));
                case 2:
                  return Pr = cn.sent, cn.abrupt("return", ke._toCollectionPage(Pr));
                case 4:
                case "end":
                  return cn.stop();
              }
            }, pt);
          })), function() {
            return he.apply(this, arguments);
          }), prev: (ve = ee(Be().mark(function pt() {
            var Pr;
            return Be().wrap(function(cn) {
              for (; ; ) switch (cn.prev = cn.next) {
                case 0:
                  return cn.next = 2, ke._sendNormalRequest(ie()(Ie._links.prev.href));
                case 2:
                  return Pr = cn.sent, cn.abrupt("return", ke._toCollectionPage(Pr));
                case 4:
                case "end":
                  return cn.stop();
              }
            }, pt);
          })), function() {
            return ve.apply(this, arguments);
          }) };
        } }, { key: "_handleNetworkError", value: (U = ee(Be().mark(function Ie(ve) {
          var he, ke;
          return Be().wrap(function(ht) {
            for (; ; ) switch (ht.prev = ht.next) {
              case 0:
                if (!ve.response || !ve.response.status) {
                  ht.next = 8;
                  break;
                }
                ht.t0 = ve.response.status, ht.next = ht.t0 === 404 ? 4 : 5;
                break;
              case 4:
                return ht.abrupt("return", Promise.reject(new oe.m_((he = ve.response.statusText) !== null && he !== void 0 ? he : "Not Found", ve.response.data)));
              case 5:
                return ht.abrupt("return", Promise.reject(new oe.Dr((ke = ve.response.statusText) !== null && ke !== void 0 ? ke : "Unknown", ve.response.data)));
              case 6:
                ht.next = 9;
                break;
              case 8:
                return ht.abrupt("return", Promise.reject(new Error(ve.message)));
              case 9:
              case "end":
                return ht.stop();
            }
          }, Ie);
        })), function(Ie) {
          return U.apply(this, arguments);
        }) }]), W = s(8732);
        function de(Ie) {
          return de = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(ve) {
            return typeof ve;
          } : function(ve) {
            return ve && typeof Symbol == "function" && ve.constructor === Symbol && ve !== Symbol.prototype ? "symbol" : typeof ve;
          }, de(Ie);
        }
        function tt(Ie, ve) {
          for (var he = 0; he < ve.length; he++) {
            var ke = ve[he];
            ke.enumerable = ke.enumerable || false, ke.configurable = true, "value" in ke && (ke.writable = true), Object.defineProperty(Ie, Ne(ke.key), ke);
          }
        }
        function Ne(Ie) {
          var ve = function(he, ke) {
            if (de(he) != "object" || !he) return he;
            var ht = he[Symbol.toPrimitive];
            if (ht !== void 0) {
              var pt = ht.call(he, ke);
              if (de(pt) != "object") return pt;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(he);
          }(Ie, "string");
          return de(ve) == "symbol" ? ve : ve + "";
        }
        function ut(Ie, ve, he) {
          return ve = Et(ve), function(ke, ht) {
            if (ht && (de(ht) == "object" || typeof ht == "function")) return ht;
            if (ht !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(pt) {
              if (pt === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return pt;
            }(ke);
          }(Ie, Ze() ? Reflect.construct(ve, he || [], Et(Ie).constructor) : ve.apply(Ie, he));
        }
        function Ze() {
          try {
            var Ie = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (Ze = function() {
            return !!Ie;
          })();
        }
        function Et(Ie) {
          return Et = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(ve) {
            return ve.__proto__ || Object.getPrototypeOf(ve);
          }, Et(Ie);
        }
        function rr(Ie, ve) {
          return rr = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(he, ke) {
            return he.__proto__ = ke, he;
          }, rr(Ie, ve);
        }
        var je = function(Ie) {
          function ve(he) {
            var ke;
            return function(ht, pt) {
              if (!(ht instanceof pt)) throw new TypeError("Cannot call a class as a function");
            }(this, ve), (ke = ut(this, ve, [he])).url.segment("accounts"), ke;
          }
          return function(he, ke) {
            if (typeof ke != "function" && ke !== null) throw new TypeError("Super expression must either be null or a function");
            he.prototype = Object.create(ke && ke.prototype, { constructor: { value: he, writable: true, configurable: true } }), Object.defineProperty(he, "prototype", { writable: false }), ke && rr(he, ke);
          }(ve, Ie), function(he, ke, ht) {
            return ke && tt(he.prototype, ke), Object.defineProperty(he, "prototype", { writable: false }), he;
          }(ve, [{ key: "accountId", value: function(he) {
            var ke = new ae(this.url.clone());
            return ke.filter.push([he]), ke;
          } }, { key: "forSigner", value: function(he) {
            return this.url.setQuery("signer", he), this;
          } }, { key: "forAsset", value: function(he) {
            return this.url.setQuery("asset", "".concat(he)), this;
          } }, { key: "sponsor", value: function(he) {
            return this.url.setQuery("sponsor", he), this;
          } }, { key: "forLiquidityPool", value: function(he) {
            return this.url.setQuery("liquidity_pool", he), this;
          } }]);
        }(ae);
        function Ge(Ie) {
          return Ge = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(ve) {
            return typeof ve;
          } : function(ve) {
            return ve && typeof Symbol == "function" && ve.constructor === Symbol && ve !== Symbol.prototype ? "symbol" : typeof ve;
          }, Ge(Ie);
        }
        function at(Ie, ve) {
          for (var he = 0; he < ve.length; he++) {
            var ke = ve[he];
            ke.enumerable = ke.enumerable || false, ke.configurable = true, "value" in ke && (ke.writable = true), Object.defineProperty(Ie, Ae(ke.key), ke);
          }
        }
        function Ae(Ie) {
          var ve = function(he, ke) {
            if (Ge(he) != "object" || !he) return he;
            var ht = he[Symbol.toPrimitive];
            if (ht !== void 0) {
              var pt = ht.call(he, ke);
              if (Ge(pt) != "object") return pt;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(he);
          }(Ie, "string");
          return Ge(ve) == "symbol" ? ve : ve + "";
        }
        function qe(Ie, ve, he) {
          return ve = Dt(ve), function(ke, ht) {
            if (ht && (Ge(ht) == "object" || typeof ht == "function")) return ht;
            if (ht !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(pt) {
              if (pt === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return pt;
            }(ke);
          }(Ie, Ft() ? Reflect.construct(ve, he || [], Dt(Ie).constructor) : ve.apply(Ie, he));
        }
        function Ft() {
          try {
            var Ie = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (Ft = function() {
            return !!Ie;
          })();
        }
        function Dt(Ie) {
          return Dt = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(ve) {
            return ve.__proto__ || Object.getPrototypeOf(ve);
          }, Dt(Ie);
        }
        function wr(Ie, ve) {
          return wr = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(he, ke) {
            return he.__proto__ = ke, he;
          }, wr(Ie, ve);
        }
        var Nt = function(Ie) {
          function ve(he) {
            var ke;
            return function(ht, pt) {
              if (!(ht instanceof pt)) throw new TypeError("Cannot call a class as a function");
            }(this, ve), (ke = qe(this, ve, [he])).url.segment("assets"), ke;
          }
          return function(he, ke) {
            if (typeof ke != "function" && ke !== null) throw new TypeError("Super expression must either be null or a function");
            he.prototype = Object.create(ke && ke.prototype, { constructor: { value: he, writable: true, configurable: true } }), Object.defineProperty(he, "prototype", { writable: false }), ke && wr(he, ke);
          }(ve, Ie), function(he, ke, ht) {
            return ke && at(he.prototype, ke), Object.defineProperty(he, "prototype", { writable: false }), he;
          }(ve, [{ key: "forCode", value: function(he) {
            return this.url.setQuery("asset_code", he), this;
          } }, { key: "forIssuer", value: function(he) {
            return this.url.setQuery("asset_issuer", he), this;
          } }]);
        }(ae);
        function yr(Ie) {
          return yr = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(ve) {
            return typeof ve;
          } : function(ve) {
            return ve && typeof Symbol == "function" && ve.constructor === Symbol && ve !== Symbol.prototype ? "symbol" : typeof ve;
          }, yr(Ie);
        }
        function Ur(Ie, ve) {
          for (var he = 0; he < ve.length; he++) {
            var ke = ve[he];
            ke.enumerable = ke.enumerable || false, ke.configurable = true, "value" in ke && (ke.writable = true), Object.defineProperty(Ie, Pe(ke.key), ke);
          }
        }
        function Pe(Ie) {
          var ve = function(he, ke) {
            if (yr(he) != "object" || !he) return he;
            var ht = he[Symbol.toPrimitive];
            if (ht !== void 0) {
              var pt = ht.call(he, ke);
              if (yr(pt) != "object") return pt;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(he);
          }(Ie, "string");
          return yr(ve) == "symbol" ? ve : ve + "";
        }
        function $e(Ie, ve, he) {
          return ve = te(ve), function(ke, ht) {
            if (ht && (yr(ht) == "object" || typeof ht == "function")) return ht;
            if (ht !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(pt) {
              if (pt === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return pt;
            }(ke);
          }(Ie, le() ? Reflect.construct(ve, he || [], te(Ie).constructor) : ve.apply(Ie, he));
        }
        function le() {
          try {
            var Ie = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (le = function() {
            return !!Ie;
          })();
        }
        function te(Ie) {
          return te = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(ve) {
            return ve.__proto__ || Object.getPrototypeOf(ve);
          }, te(Ie);
        }
        function Le(Ie, ve) {
          return Le = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(he, ke) {
            return he.__proto__ = ke, he;
          }, Le(Ie, ve);
        }
        var nt = function(Ie) {
          function ve(he) {
            var ke;
            return function(ht, pt) {
              if (!(ht instanceof pt)) throw new TypeError("Cannot call a class as a function");
            }(this, ve), (ke = $e(this, ve, [he])).url.segment("claimable_balances"), ke;
          }
          return function(he, ke) {
            if (typeof ke != "function" && ke !== null) throw new TypeError("Super expression must either be null or a function");
            he.prototype = Object.create(ke && ke.prototype, { constructor: { value: he, writable: true, configurable: true } }), Object.defineProperty(he, "prototype", { writable: false }), ke && Le(he, ke);
          }(ve, Ie), function(he, ke, ht) {
            return ke && Ur(he.prototype, ke), Object.defineProperty(he, "prototype", { writable: false }), he;
          }(ve, [{ key: "claimableBalance", value: function(he) {
            var ke = new ae(this.url.clone());
            return ke.filter.push([he]), ke;
          } }, { key: "sponsor", value: function(he) {
            return this.url.setQuery("sponsor", he), this;
          } }, { key: "claimant", value: function(he) {
            return this.url.setQuery("claimant", he), this;
          } }, { key: "asset", value: function(he) {
            return this.url.setQuery("asset", he.toString()), this;
          } }]);
        }(ae);
        function ft(Ie) {
          return ft = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(ve) {
            return typeof ve;
          } : function(ve) {
            return ve && typeof Symbol == "function" && ve.constructor === Symbol && ve !== Symbol.prototype ? "symbol" : typeof ve;
          }, ft(Ie);
        }
        function zt(Ie, ve) {
          for (var he = 0; he < ve.length; he++) {
            var ke = ve[he];
            ke.enumerable = ke.enumerable || false, ke.configurable = true, "value" in ke && (ke.writable = true), Object.defineProperty(Ie, st(ke.key), ke);
          }
        }
        function st(Ie) {
          var ve = function(he, ke) {
            if (ft(he) != "object" || !he) return he;
            var ht = he[Symbol.toPrimitive];
            if (ht !== void 0) {
              var pt = ht.call(he, ke);
              if (ft(pt) != "object") return pt;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(he);
          }(Ie, "string");
          return ft(ve) == "symbol" ? ve : ve + "";
        }
        function ct(Ie, ve, he) {
          return ve = Zt(ve), function(ke, ht) {
            if (ht && (ft(ht) == "object" || typeof ht == "function")) return ht;
            if (ht !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(pt) {
              if (pt === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return pt;
            }(ke);
          }(Ie, yt() ? Reflect.construct(ve, he || [], Zt(Ie).constructor) : ve.apply(Ie, he));
        }
        function yt() {
          try {
            var Ie = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (yt = function() {
            return !!Ie;
          })();
        }
        function Zt(Ie) {
          return Zt = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(ve) {
            return ve.__proto__ || Object.getPrototypeOf(ve);
          }, Zt(Ie);
        }
        function Ct(Ie, ve) {
          return Ct = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(he, ke) {
            return he.__proto__ = ke, he;
          }, Ct(Ie, ve);
        }
        var Lt = function(Ie) {
          function ve(he) {
            var ke;
            return function(ht, pt) {
              if (!(ht instanceof pt)) throw new TypeError("Cannot call a class as a function");
            }(this, ve), (ke = ct(this, ve, [he, "effects"])).url.segment("effects"), ke;
          }
          return function(he, ke) {
            if (typeof ke != "function" && ke !== null) throw new TypeError("Super expression must either be null or a function");
            he.prototype = Object.create(ke && ke.prototype, { constructor: { value: he, writable: true, configurable: true } }), Object.defineProperty(he, "prototype", { writable: false }), ke && Ct(he, ke);
          }(ve, Ie), function(he, ke, ht) {
            return ke && zt(he.prototype, ke), Object.defineProperty(he, "prototype", { writable: false }), he;
          }(ve, [{ key: "forAccount", value: function(he) {
            return this.forEndpoint("accounts", he);
          } }, { key: "forLedger", value: function(he) {
            return this.forEndpoint("ledgers", he.toString());
          } }, { key: "forTransaction", value: function(he) {
            return this.forEndpoint("transactions", he);
          } }, { key: "forOperation", value: function(he) {
            return this.forEndpoint("operations", he);
          } }, { key: "forLiquidityPool", value: function(he) {
            return this.forEndpoint("liquidity_pools", he);
          } }]);
        }(ae);
        function Wt(Ie) {
          return Wt = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(ve) {
            return typeof ve;
          } : function(ve) {
            return ve && typeof Symbol == "function" && ve.constructor === Symbol && ve !== Symbol.prototype ? "symbol" : typeof ve;
          }, Wt(Ie);
        }
        function vr(Ie, ve, he) {
          return ve = sr(ve), function(ke, ht) {
            if (ht && (Wt(ht) == "object" || typeof ht == "function")) return ht;
            if (ht !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(pt) {
              if (pt === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return pt;
            }(ke);
          }(Ie, ar() ? Reflect.construct(ve, he || [], sr(Ie).constructor) : ve.apply(Ie, he));
        }
        function ar() {
          try {
            var Ie = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (ar = function() {
            return !!Ie;
          })();
        }
        function sr(Ie) {
          return sr = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(ve) {
            return ve.__proto__ || Object.getPrototypeOf(ve);
          }, sr(Ie);
        }
        function gr(Ie, ve) {
          return gr = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(he, ke) {
            return he.__proto__ = ke, he;
          }, gr(Ie, ve);
        }
        var Tr = function(Ie) {
          function ve(he, ke) {
            var ht;
            return function(pt, Pr) {
              if (!(pt instanceof Pr)) throw new TypeError("Cannot call a class as a function");
            }(this, ve), (ht = vr(this, ve, [he])).url.segment("friendbot"), ht.url.setQuery("addr", ke), ht;
          }
          return function(he, ke) {
            if (typeof ke != "function" && ke !== null) throw new TypeError("Super expression must either be null or a function");
            he.prototype = Object.create(ke && ke.prototype, { constructor: { value: he, writable: true, configurable: true } }), Object.defineProperty(he, "prototype", { writable: false }), ke && gr(he, ke);
          }(ve, Ie), function(he, ke, ht) {
            return Object.defineProperty(he, "prototype", { writable: false }), he;
          }(ve);
        }(ae);
        function Mr(Ie) {
          return Mr = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(ve) {
            return typeof ve;
          } : function(ve) {
            return ve && typeof Symbol == "function" && ve.constructor === Symbol && ve !== Symbol.prototype ? "symbol" : typeof ve;
          }, Mr(Ie);
        }
        function Nr(Ie, ve) {
          for (var he = 0; he < ve.length; he++) {
            var ke = ve[he];
            ke.enumerable = ke.enumerable || false, ke.configurable = true, "value" in ke && (ke.writable = true), Object.defineProperty(Ie, Lr(ke.key), ke);
          }
        }
        function Lr(Ie) {
          var ve = function(he, ke) {
            if (Mr(he) != "object" || !he) return he;
            var ht = he[Symbol.toPrimitive];
            if (ht !== void 0) {
              var pt = ht.call(he, ke);
              if (Mr(pt) != "object") return pt;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(he);
          }(Ie, "string");
          return Mr(ve) == "symbol" ? ve : ve + "";
        }
        function jr(Ie, ve, he) {
          return ve = kr(ve), function(ke, ht) {
            if (ht && (Mr(ht) == "object" || typeof ht == "function")) return ht;
            if (ht !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(pt) {
              if (pt === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return pt;
            }(ke);
          }(Ie, Hr() ? Reflect.construct(ve, he || [], kr(Ie).constructor) : ve.apply(Ie, he));
        }
        function Hr() {
          try {
            var Ie = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (Hr = function() {
            return !!Ie;
          })();
        }
        function kr(Ie) {
          return kr = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(ve) {
            return ve.__proto__ || Object.getPrototypeOf(ve);
          }, kr(Ie);
        }
        function Xt(Ie, ve) {
          return Xt = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(he, ke) {
            return he.__proto__ = ke, he;
          }, Xt(Ie, ve);
        }
        var Qt = function(Ie) {
          function ve(he) {
            var ke;
            return function(ht, pt) {
              if (!(ht instanceof pt)) throw new TypeError("Cannot call a class as a function");
            }(this, ve), (ke = jr(this, ve, [he])).url.segment("ledgers"), ke;
          }
          return function(he, ke) {
            if (typeof ke != "function" && ke !== null) throw new TypeError("Super expression must either be null or a function");
            he.prototype = Object.create(ke && ke.prototype, { constructor: { value: he, writable: true, configurable: true } }), Object.defineProperty(he, "prototype", { writable: false }), ke && Xt(he, ke);
          }(ve, Ie), function(he, ke, ht) {
            return ke && Nr(he.prototype, ke), Object.defineProperty(he, "prototype", { writable: false }), he;
          }(ve, [{ key: "ledger", value: function(he) {
            return this.filter.push(["ledgers", he.toString()]), this;
          } }]);
        }(ae);
        function br(Ie) {
          return br = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(ve) {
            return typeof ve;
          } : function(ve) {
            return ve && typeof Symbol == "function" && ve.constructor === Symbol && ve !== Symbol.prototype ? "symbol" : typeof ve;
          }, br(Ie);
        }
        function we(Ie, ve) {
          for (var he = 0; he < ve.length; he++) {
            var ke = ve[he];
            ke.enumerable = ke.enumerable || false, ke.configurable = true, "value" in ke && (ke.writable = true), Object.defineProperty(Ie, me(ke.key), ke);
          }
        }
        function me(Ie) {
          var ve = function(he, ke) {
            if (br(he) != "object" || !he) return he;
            var ht = he[Symbol.toPrimitive];
            if (ht !== void 0) {
              var pt = ht.call(he, ke);
              if (br(pt) != "object") return pt;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(he);
          }(Ie, "string");
          return br(ve) == "symbol" ? ve : ve + "";
        }
        function ze(Ie, ve, he) {
          return ve = Tt(ve), function(ke, ht) {
            if (ht && (br(ht) == "object" || typeof ht == "function")) return ht;
            if (ht !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(pt) {
              if (pt === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return pt;
            }(ke);
          }(Ie, rt() ? Reflect.construct(ve, he || [], Tt(Ie).constructor) : ve.apply(Ie, he));
        }
        function rt() {
          try {
            var Ie = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (rt = function() {
            return !!Ie;
          })();
        }
        function Tt(Ie) {
          return Tt = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(ve) {
            return ve.__proto__ || Object.getPrototypeOf(ve);
          }, Tt(Ie);
        }
        function Ot(Ie, ve) {
          return Ot = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(he, ke) {
            return he.__proto__ = ke, he;
          }, Ot(Ie, ve);
        }
        var It = function(Ie) {
          function ve(he) {
            var ke;
            return function(ht, pt) {
              if (!(ht instanceof pt)) throw new TypeError("Cannot call a class as a function");
            }(this, ve), (ke = ze(this, ve, [he])).url.segment("liquidity_pools"), ke;
          }
          return function(he, ke) {
            if (typeof ke != "function" && ke !== null) throw new TypeError("Super expression must either be null or a function");
            he.prototype = Object.create(ke && ke.prototype, { constructor: { value: he, writable: true, configurable: true } }), Object.defineProperty(he, "prototype", { writable: false }), ke && Ot(he, ke);
          }(ve, Ie), function(he, ke, ht) {
            return ke && we(he.prototype, ke), Object.defineProperty(he, "prototype", { writable: false }), he;
          }(ve, [{ key: "forAssets", value: function() {
            for (var he = arguments.length, ke = new Array(he), ht = 0; ht < he; ht++) ke[ht] = arguments[ht];
            var pt = ke.map(function(Pr) {
              return Pr.toString();
            }).join(",");
            return this.url.setQuery("reserves", pt), this;
          } }, { key: "forAccount", value: function(he) {
            return this.url.setQuery("account", he), this;
          } }, { key: "liquidityPoolId", value: function(he) {
            if (!he.match(/[a-fA-F0-9]{64}/)) throw new TypeError("".concat(he, " does not look like a liquidity pool ID"));
            var ke = new ae(this.url.clone());
            return ke.filter.push([he.toLowerCase()]), ke;
          } }]);
        }(ae);
        function We(Ie) {
          return We = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(ve) {
            return typeof ve;
          } : function(ve) {
            return ve && typeof Symbol == "function" && ve.constructor === Symbol && ve !== Symbol.prototype ? "symbol" : typeof ve;
          }, We(Ie);
        }
        function mt(Ie, ve) {
          for (var he = 0; he < ve.length; he++) {
            var ke = ve[he];
            ke.enumerable = ke.enumerable || false, ke.configurable = true, "value" in ke && (ke.writable = true), Object.defineProperty(Ie, Gt(ke.key), ke);
          }
        }
        function Gt(Ie) {
          var ve = function(he, ke) {
            if (We(he) != "object" || !he) return he;
            var ht = he[Symbol.toPrimitive];
            if (ht !== void 0) {
              var pt = ht.call(he, ke);
              if (We(pt) != "object") return pt;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(he);
          }(Ie, "string");
          return We(ve) == "symbol" ? ve : ve + "";
        }
        function ir(Ie, ve, he) {
          return ve = hr(ve), function(ke, ht) {
            if (ht && (We(ht) == "object" || typeof ht == "function")) return ht;
            if (ht !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(pt) {
              if (pt === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return pt;
            }(ke);
          }(Ie, dr() ? Reflect.construct(ve, he || [], hr(Ie).constructor) : ve.apply(Ie, he));
        }
        function dr() {
          try {
            var Ie = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (dr = function() {
            return !!Ie;
          })();
        }
        function hr(Ie) {
          return hr = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(ve) {
            return ve.__proto__ || Object.getPrototypeOf(ve);
          }, hr(Ie);
        }
        function Fr(Ie, ve) {
          return Fr = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(he, ke) {
            return he.__proto__ = ke, he;
          }, Fr(Ie, ve);
        }
        var Gr = function(Ie) {
          function ve(he) {
            var ke;
            return function(ht, pt) {
              if (!(ht instanceof pt)) throw new TypeError("Cannot call a class as a function");
            }(this, ve), (ke = ir(this, ve, [he, "offers"])).url.segment("offers"), ke;
          }
          return function(he, ke) {
            if (typeof ke != "function" && ke !== null) throw new TypeError("Super expression must either be null or a function");
            he.prototype = Object.create(ke && ke.prototype, { constructor: { value: he, writable: true, configurable: true } }), Object.defineProperty(he, "prototype", { writable: false }), ke && Fr(he, ke);
          }(ve, Ie), function(he, ke, ht) {
            return ke && mt(he.prototype, ke), Object.defineProperty(he, "prototype", { writable: false }), he;
          }(ve, [{ key: "offer", value: function(he) {
            var ke = new ae(this.url.clone());
            return ke.filter.push([he]), ke;
          } }, { key: "forAccount", value: function(he) {
            return this.forEndpoint("accounts", he);
          } }, { key: "buying", value: function(he) {
            return he.isNative() ? this.url.setQuery("buying_asset_type", "native") : (this.url.setQuery("buying_asset_type", he.getAssetType()), this.url.setQuery("buying_asset_code", he.getCode()), this.url.setQuery("buying_asset_issuer", he.getIssuer())), this;
          } }, { key: "selling", value: function(he) {
            return he.isNative() ? this.url.setQuery("selling_asset_type", "native") : (this.url.setQuery("selling_asset_type", he.getAssetType()), this.url.setQuery("selling_asset_code", he.getCode()), this.url.setQuery("selling_asset_issuer", he.getIssuer())), this;
          } }, { key: "sponsor", value: function(he) {
            return this.url.setQuery("sponsor", he), this;
          } }, { key: "seller", value: function(he) {
            return this.url.setQuery("seller", he), this;
          } }]);
        }(ae);
        function Br(Ie) {
          return Br = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(ve) {
            return typeof ve;
          } : function(ve) {
            return ve && typeof Symbol == "function" && ve.constructor === Symbol && ve !== Symbol.prototype ? "symbol" : typeof ve;
          }, Br(Ie);
        }
        function Dr(Ie, ve) {
          for (var he = 0; he < ve.length; he++) {
            var ke = ve[he];
            ke.enumerable = ke.enumerable || false, ke.configurable = true, "value" in ke && (ke.writable = true), Object.defineProperty(Ie, Vr(ke.key), ke);
          }
        }
        function Vr(Ie) {
          var ve = function(he, ke) {
            if (Br(he) != "object" || !he) return he;
            var ht = he[Symbol.toPrimitive];
            if (ht !== void 0) {
              var pt = ht.call(he, ke);
              if (Br(pt) != "object") return pt;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(he);
          }(Ie, "string");
          return Br(ve) == "symbol" ? ve : ve + "";
        }
        function be(Ie, ve, he) {
          return ve = Ue(ve), function(ke, ht) {
            if (ht && (Br(ht) == "object" || typeof ht == "function")) return ht;
            if (ht !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(pt) {
              if (pt === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return pt;
            }(ke);
          }(Ie, Or() ? Reflect.construct(ve, he || [], Ue(Ie).constructor) : ve.apply(Ie, he));
        }
        function Or() {
          try {
            var Ie = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (Or = function() {
            return !!Ie;
          })();
        }
        function Ue(Ie) {
          return Ue = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(ve) {
            return ve.__proto__ || Object.getPrototypeOf(ve);
          }, Ue(Ie);
        }
        function it(Ie, ve) {
          return it = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(he, ke) {
            return he.__proto__ = ke, he;
          }, it(Ie, ve);
        }
        var dt = function(Ie) {
          function ve(he) {
            var ke;
            return function(ht, pt) {
              if (!(ht instanceof pt)) throw new TypeError("Cannot call a class as a function");
            }(this, ve), (ke = be(this, ve, [he, "operations"])).url.segment("operations"), ke;
          }
          return function(he, ke) {
            if (typeof ke != "function" && ke !== null) throw new TypeError("Super expression must either be null or a function");
            he.prototype = Object.create(ke && ke.prototype, { constructor: { value: he, writable: true, configurable: true } }), Object.defineProperty(he, "prototype", { writable: false }), ke && it(he, ke);
          }(ve, Ie), function(he, ke, ht) {
            return ke && Dr(he.prototype, ke), Object.defineProperty(he, "prototype", { writable: false }), he;
          }(ve, [{ key: "operation", value: function(he) {
            var ke = new ae(this.url.clone());
            return ke.filter.push([he]), ke;
          } }, { key: "forAccount", value: function(he) {
            return this.forEndpoint("accounts", he);
          } }, { key: "forClaimableBalance", value: function(he) {
            return this.forEndpoint("claimable_balances", he);
          } }, { key: "forLedger", value: function(he) {
            return this.forEndpoint("ledgers", he.toString());
          } }, { key: "forTransaction", value: function(he) {
            return this.forEndpoint("transactions", he);
          } }, { key: "forLiquidityPool", value: function(he) {
            return this.forEndpoint("liquidity_pools", he);
          } }, { key: "includeFailed", value: function(he) {
            return this.url.setQuery("include_failed", he.toString()), this;
          } }]);
        }(ae);
        function vt(Ie) {
          return vt = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(ve) {
            return typeof ve;
          } : function(ve) {
            return ve && typeof Symbol == "function" && ve.constructor === Symbol && ve !== Symbol.prototype ? "symbol" : typeof ve;
          }, vt(Ie);
        }
        function wt(Ie, ve, he) {
          return ve = Yt(ve), function(ke, ht) {
            if (ht && (vt(ht) == "object" || typeof ht == "function")) return ht;
            if (ht !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(pt) {
              if (pt === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return pt;
            }(ke);
          }(Ie, Pt() ? Reflect.construct(ve, he || [], Yt(Ie).constructor) : ve.apply(Ie, he));
        }
        function Pt() {
          try {
            var Ie = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (Pt = function() {
            return !!Ie;
          })();
        }
        function Yt(Ie) {
          return Yt = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(ve) {
            return ve.__proto__ || Object.getPrototypeOf(ve);
          }, Yt(Ie);
        }
        function cr(Ie, ve) {
          return cr = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(he, ke) {
            return he.__proto__ = ke, he;
          }, cr(Ie, ve);
        }
        var qr = function(Ie) {
          function ve(he, ke, ht) {
            var pt;
            return function(Pr, cn) {
              if (!(Pr instanceof cn)) throw new TypeError("Cannot call a class as a function");
            }(this, ve), (pt = wt(this, ve, [he])).url.segment("order_book"), ke.isNative() ? pt.url.setQuery("selling_asset_type", "native") : (pt.url.setQuery("selling_asset_type", ke.getAssetType()), pt.url.setQuery("selling_asset_code", ke.getCode()), pt.url.setQuery("selling_asset_issuer", ke.getIssuer())), ht.isNative() ? pt.url.setQuery("buying_asset_type", "native") : (pt.url.setQuery("buying_asset_type", ht.getAssetType()), pt.url.setQuery("buying_asset_code", ht.getCode()), pt.url.setQuery("buying_asset_issuer", ht.getIssuer())), pt;
          }
          return function(he, ke) {
            if (typeof ke != "function" && ke !== null) throw new TypeError("Super expression must either be null or a function");
            he.prototype = Object.create(ke && ke.prototype, { constructor: { value: he, writable: true, configurable: true } }), Object.defineProperty(he, "prototype", { writable: false }), ke && cr(he, ke);
          }(ve, Ie), function(he, ke, ht) {
            return Object.defineProperty(he, "prototype", { writable: false }), he;
          }(ve);
        }(ae);
        function Vt(Ie) {
          return Vt = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(ve) {
            return typeof ve;
          } : function(ve) {
            return ve && typeof Symbol == "function" && ve.constructor === Symbol && ve !== Symbol.prototype ? "symbol" : typeof ve;
          }, Vt(Ie);
        }
        function zr(Ie, ve) {
          for (var he = 0; he < ve.length; he++) {
            var ke = ve[he];
            ke.enumerable = ke.enumerable || false, ke.configurable = true, "value" in ke && (ke.writable = true), Object.defineProperty(Ie, en(ke.key), ke);
          }
        }
        function en(Ie) {
          var ve = function(he, ke) {
            if (Vt(he) != "object" || !he) return he;
            var ht = he[Symbol.toPrimitive];
            if (ht !== void 0) {
              var pt = ht.call(he, ke);
              if (Vt(pt) != "object") return pt;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(he);
          }(Ie, "string");
          return Vt(ve) == "symbol" ? ve : ve + "";
        }
        function Me(Ie, ve, he) {
          return ve = Ke(ve), function(ke, ht) {
            if (ht && (Vt(ht) == "object" || typeof ht == "function")) return ht;
            if (ht !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(pt) {
              if (pt === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return pt;
            }(ke);
          }(Ie, De() ? Reflect.construct(ve, he || [], Ke(Ie).constructor) : ve.apply(Ie, he));
        }
        function De() {
          try {
            var Ie = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (De = function() {
            return !!Ie;
          })();
        }
        function Ke(Ie) {
          return Ke = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(ve) {
            return ve.__proto__ || Object.getPrototypeOf(ve);
          }, Ke(Ie);
        }
        function Bt(Ie, ve) {
          return Bt = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(he, ke) {
            return he.__proto__ = ke, he;
          }, Bt(Ie, ve);
        }
        var St = function(Ie) {
          function ve(he) {
            var ke;
            return function(ht, pt) {
              if (!(ht instanceof pt)) throw new TypeError("Cannot call a class as a function");
            }(this, ve), (ke = Me(this, ve, [he, "payments"])).url.segment("payments"), ke;
          }
          return function(he, ke) {
            if (typeof ke != "function" && ke !== null) throw new TypeError("Super expression must either be null or a function");
            he.prototype = Object.create(ke && ke.prototype, { constructor: { value: he, writable: true, configurable: true } }), Object.defineProperty(he, "prototype", { writable: false }), ke && Bt(he, ke);
          }(ve, Ie), function(he, ke, ht) {
            return ke && zr(he.prototype, ke), Object.defineProperty(he, "prototype", { writable: false }), he;
          }(ve, [{ key: "forAccount", value: function(he) {
            return this.forEndpoint("accounts", he);
          } }, { key: "forLedger", value: function(he) {
            return this.forEndpoint("ledgers", he.toString());
          } }, { key: "forTransaction", value: function(he) {
            return this.forEndpoint("transactions", he);
          } }]);
        }(ae);
        function ur(Ie) {
          return ur = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(ve) {
            return typeof ve;
          } : function(ve) {
            return ve && typeof Symbol == "function" && ve.constructor === Symbol && ve !== Symbol.prototype ? "symbol" : typeof ve;
          }, ur(Ie);
        }
        function Cr(Ie, ve, he) {
          return ve = Qr(ve), function(ke, ht) {
            if (ht && (ur(ht) == "object" || typeof ht == "function")) return ht;
            if (ht !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(pt) {
              if (pt === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return pt;
            }(ke);
          }(Ie, Wr() ? Reflect.construct(ve, he || [], Qr(Ie).constructor) : ve.apply(Ie, he));
        }
        function Wr() {
          try {
            var Ie = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (Wr = function() {
            return !!Ie;
          })();
        }
        function Qr(Ie) {
          return Qr = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(ve) {
            return ve.__proto__ || Object.getPrototypeOf(ve);
          }, Qr(Ie);
        }
        function dn(Ie, ve) {
          return dn = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(he, ke) {
            return he.__proto__ = ke, he;
          }, dn(Ie, ve);
        }
        var wn = function(Ie) {
          function ve(he, ke, ht, pt) {
            var Pr;
            if (function(on, sn) {
              if (!(on instanceof sn)) throw new TypeError("Cannot call a class as a function");
            }(this, ve), (Pr = Cr(this, ve, [he])).url.segment("paths/strict-receive"), typeof ke == "string") Pr.url.setQuery("source_account", ke);
            else {
              var cn = ke.map(function(on) {
                return on.isNative() ? "native" : "".concat(on.getCode(), ":").concat(on.getIssuer());
              }).join(",");
              Pr.url.setQuery("source_assets", cn);
            }
            return Pr.url.setQuery("destination_amount", pt), ht.isNative() ? Pr.url.setQuery("destination_asset_type", "native") : (Pr.url.setQuery("destination_asset_type", ht.getAssetType()), Pr.url.setQuery("destination_asset_code", ht.getCode()), Pr.url.setQuery("destination_asset_issuer", ht.getIssuer())), Pr;
          }
          return function(he, ke) {
            if (typeof ke != "function" && ke !== null) throw new TypeError("Super expression must either be null or a function");
            he.prototype = Object.create(ke && ke.prototype, { constructor: { value: he, writable: true, configurable: true } }), Object.defineProperty(he, "prototype", { writable: false }), ke && dn(he, ke);
          }(ve, Ie), function(he, ke, ht) {
            return Object.defineProperty(he, "prototype", { writable: false }), he;
          }(ve);
        }(ae);
        function yn(Ie) {
          return yn = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(ve) {
            return typeof ve;
          } : function(ve) {
            return ve && typeof Symbol == "function" && ve.constructor === Symbol && ve !== Symbol.prototype ? "symbol" : typeof ve;
          }, yn(Ie);
        }
        function pi(Ie, ve, he) {
          return ve = Ni(ve), function(ke, ht) {
            if (ht && (yn(ht) == "object" || typeof ht == "function")) return ht;
            if (ht !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(pt) {
              if (pt === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return pt;
            }(ke);
          }(Ie, Bi() ? Reflect.construct(ve, he || [], Ni(Ie).constructor) : ve.apply(Ie, he));
        }
        function Bi() {
          try {
            var Ie = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (Bi = function() {
            return !!Ie;
          })();
        }
        function Ni(Ie) {
          return Ni = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(ve) {
            return ve.__proto__ || Object.getPrototypeOf(ve);
          }, Ni(Ie);
        }
        function Un(Ie, ve) {
          return Un = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(he, ke) {
            return he.__proto__ = ke, he;
          }, Un(Ie, ve);
        }
        var Xe = function(Ie) {
          function ve(he, ke, ht, pt) {
            var Pr;
            if (function(on, sn) {
              if (!(on instanceof sn)) throw new TypeError("Cannot call a class as a function");
            }(this, ve), (Pr = pi(this, ve, [he])).url.segment("paths/strict-send"), ke.isNative() ? Pr.url.setQuery("source_asset_type", "native") : (Pr.url.setQuery("source_asset_type", ke.getAssetType()), Pr.url.setQuery("source_asset_code", ke.getCode()), Pr.url.setQuery("source_asset_issuer", ke.getIssuer())), Pr.url.setQuery("source_amount", ht), typeof pt == "string") Pr.url.setQuery("destination_account", pt);
            else {
              var cn = pt.map(function(on) {
                return on.isNative() ? "native" : "".concat(on.getCode(), ":").concat(on.getIssuer());
              }).join(",");
              Pr.url.setQuery("destination_assets", cn);
            }
            return Pr;
          }
          return function(he, ke) {
            if (typeof ke != "function" && ke !== null) throw new TypeError("Super expression must either be null or a function");
            he.prototype = Object.create(ke && ke.prototype, { constructor: { value: he, writable: true, configurable: true } }), Object.defineProperty(he, "prototype", { writable: false }), ke && Un(he, ke);
          }(ve, Ie), function(he, ke, ht) {
            return Object.defineProperty(he, "prototype", { writable: false }), he;
          }(ve);
        }(ae);
        function Ye(Ie) {
          return Ye = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(ve) {
            return typeof ve;
          } : function(ve) {
            return ve && typeof Symbol == "function" && ve.constructor === Symbol && ve !== Symbol.prototype ? "symbol" : typeof ve;
          }, Ye(Ie);
        }
        function bt(Ie, ve) {
          for (var he = 0; he < ve.length; he++) {
            var ke = ve[he];
            ke.enumerable = ke.enumerable || false, ke.configurable = true, "value" in ke && (ke.writable = true), Object.defineProperty(Ie, xt(ke.key), ke);
          }
        }
        function xt(Ie) {
          var ve = function(he, ke) {
            if (Ye(he) != "object" || !he) return he;
            var ht = he[Symbol.toPrimitive];
            if (ht !== void 0) {
              var pt = ht.call(he, ke);
              if (Ye(pt) != "object") return pt;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(he);
          }(Ie, "string");
          return Ye(ve) == "symbol" ? ve : ve + "";
        }
        function $t(Ie, ve, he) {
          return ve = M(ve), function(ke, ht) {
            if (ht && (Ye(ht) == "object" || typeof ht == "function")) return ht;
            if (ht !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(pt) {
              if (pt === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return pt;
            }(ke);
          }(Ie, fr() ? Reflect.construct(ve, he || [], M(Ie).constructor) : ve.apply(Ie, he));
        }
        function fr() {
          try {
            var Ie = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (fr = function() {
            return !!Ie;
          })();
        }
        function M(Ie) {
          return M = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(ve) {
            return ve.__proto__ || Object.getPrototypeOf(ve);
          }, M(Ie);
        }
        function G(Ie, ve) {
          return G = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(he, ke) {
            return he.__proto__ = ke, he;
          }, G(Ie, ve);
        }
        var fe = [6e4, 3e5, 9e5, 36e5, 864e5, 6048e5], Se = function(Ie) {
          function ve(he, ke, ht, pt, Pr, cn, on) {
            var sn;
            if (function(Nn, Vn) {
              if (!(Nn instanceof Vn)) throw new TypeError("Cannot call a class as a function");
            }(this, ve), (sn = $t(this, ve, [he])).url.segment("trade_aggregations"), ke.isNative() ? sn.url.setQuery("base_asset_type", "native") : (sn.url.setQuery("base_asset_type", ke.getAssetType()), sn.url.setQuery("base_asset_code", ke.getCode()), sn.url.setQuery("base_asset_issuer", ke.getIssuer())), ht.isNative() ? sn.url.setQuery("counter_asset_type", "native") : (sn.url.setQuery("counter_asset_type", ht.getAssetType()), sn.url.setQuery("counter_asset_code", ht.getCode()), sn.url.setQuery("counter_asset_issuer", ht.getIssuer())), typeof pt != "number" || typeof Pr != "number") throw new oe.v7("Invalid time bounds", [pt, Pr]);
            if (sn.url.setQuery("start_time", pt.toString()), sn.url.setQuery("end_time", Pr.toString()), !sn.isValidResolution(cn)) throw new oe.v7("Invalid resolution", cn);
            if (sn.url.setQuery("resolution", cn.toString()), !sn.isValidOffset(on, cn)) throw new oe.v7("Invalid offset", on);
            return sn.url.setQuery("offset", on.toString()), sn;
          }
          return function(he, ke) {
            if (typeof ke != "function" && ke !== null) throw new TypeError("Super expression must either be null or a function");
            he.prototype = Object.create(ke && ke.prototype, { constructor: { value: he, writable: true, configurable: true } }), Object.defineProperty(he, "prototype", { writable: false }), ke && G(he, ke);
          }(ve, Ie), function(he, ke, ht) {
            return ke && bt(he.prototype, ke), Object.defineProperty(he, "prototype", { writable: false }), he;
          }(ve, [{ key: "isValidResolution", value: function(he) {
            return fe.some(function(ke) {
              return ke === he;
            });
          } }, { key: "isValidOffset", value: function(he, ke) {
            var ht = 36e5;
            return !(he > ke || he >= 24 * ht || he % ht != 0);
          } }]);
        }(ae);
        function Ce(Ie) {
          return Ce = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(ve) {
            return typeof ve;
          } : function(ve) {
            return ve && typeof Symbol == "function" && ve.constructor === Symbol && ve !== Symbol.prototype ? "symbol" : typeof ve;
          }, Ce(Ie);
        }
        function Re(Ie, ve) {
          for (var he = 0; he < ve.length; he++) {
            var ke = ve[he];
            ke.enumerable = ke.enumerable || false, ke.configurable = true, "value" in ke && (ke.writable = true), Object.defineProperty(Ie, Je(ke.key), ke);
          }
        }
        function Je(Ie) {
          var ve = function(he, ke) {
            if (Ce(he) != "object" || !he) return he;
            var ht = he[Symbol.toPrimitive];
            if (ht !== void 0) {
              var pt = ht.call(he, ke);
              if (Ce(pt) != "object") return pt;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(he);
          }(Ie, "string");
          return Ce(ve) == "symbol" ? ve : ve + "";
        }
        function Ut(Ie, ve, he) {
          return ve = Ht(ve), function(ke, ht) {
            if (ht && (Ce(ht) == "object" || typeof ht == "function")) return ht;
            if (ht !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(pt) {
              if (pt === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return pt;
            }(ke);
          }(Ie, _t() ? Reflect.construct(ve, he || [], Ht(Ie).constructor) : ve.apply(Ie, he));
        }
        function _t() {
          try {
            var Ie = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (_t = function() {
            return !!Ie;
          })();
        }
        function Ht(Ie) {
          return Ht = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(ve) {
            return ve.__proto__ || Object.getPrototypeOf(ve);
          }, Ht(Ie);
        }
        function tr(Ie, ve) {
          return tr = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(he, ke) {
            return he.__proto__ = ke, he;
          }, tr(Ie, ve);
        }
        var Sr = function(Ie) {
          function ve(he) {
            var ke;
            return function(ht, pt) {
              if (!(ht instanceof pt)) throw new TypeError("Cannot call a class as a function");
            }(this, ve), (ke = Ut(this, ve, [he, "trades"])).url.segment("trades"), ke;
          }
          return function(he, ke) {
            if (typeof ke != "function" && ke !== null) throw new TypeError("Super expression must either be null or a function");
            he.prototype = Object.create(ke && ke.prototype, { constructor: { value: he, writable: true, configurable: true } }), Object.defineProperty(he, "prototype", { writable: false }), ke && tr(he, ke);
          }(ve, Ie), function(he, ke, ht) {
            return ke && Re(he.prototype, ke), Object.defineProperty(he, "prototype", { writable: false }), he;
          }(ve, [{ key: "forAssetPair", value: function(he, ke) {
            return he.isNative() ? this.url.setQuery("base_asset_type", "native") : (this.url.setQuery("base_asset_type", he.getAssetType()), this.url.setQuery("base_asset_code", he.getCode()), this.url.setQuery("base_asset_issuer", he.getIssuer())), ke.isNative() ? this.url.setQuery("counter_asset_type", "native") : (this.url.setQuery("counter_asset_type", ke.getAssetType()), this.url.setQuery("counter_asset_code", ke.getCode()), this.url.setQuery("counter_asset_issuer", ke.getIssuer())), this;
          } }, { key: "forOffer", value: function(he) {
            return this.url.setQuery("offer_id", he), this;
          } }, { key: "forType", value: function(he) {
            return this.url.setQuery("trade_type", he), this;
          } }, { key: "forAccount", value: function(he) {
            return this.forEndpoint("accounts", he);
          } }, { key: "forLiquidityPool", value: function(he) {
            return this.forEndpoint("liquidity_pools", he);
          } }]);
        }(ae);
        function Ee(Ie) {
          return Ee = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(ve) {
            return typeof ve;
          } : function(ve) {
            return ve && typeof Symbol == "function" && ve.constructor === Symbol && ve !== Symbol.prototype ? "symbol" : typeof ve;
          }, Ee(Ie);
        }
        function ot(Ie, ve) {
          for (var he = 0; he < ve.length; he++) {
            var ke = ve[he];
            ke.enumerable = ke.enumerable || false, ke.configurable = true, "value" in ke && (ke.writable = true), Object.defineProperty(Ie, Mt(ke.key), ke);
          }
        }
        function Mt(Ie) {
          var ve = function(he, ke) {
            if (Ee(he) != "object" || !he) return he;
            var ht = he[Symbol.toPrimitive];
            if (ht !== void 0) {
              var pt = ht.call(he, ke);
              if (Ee(pt) != "object") return pt;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(he);
          }(Ie, "string");
          return Ee(ve) == "symbol" ? ve : ve + "";
        }
        function gt(Ie, ve, he) {
          return ve = or(ve), function(ke, ht) {
            if (ht && (Ee(ht) == "object" || typeof ht == "function")) return ht;
            if (ht !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(pt) {
              if (pt === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return pt;
            }(ke);
          }(Ie, Rt() ? Reflect.construct(ve, he || [], or(Ie).constructor) : ve.apply(Ie, he));
        }
        function Rt() {
          try {
            var Ie = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (Rt = function() {
            return !!Ie;
          })();
        }
        function or(Ie) {
          return or = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(ve) {
            return ve.__proto__ || Object.getPrototypeOf(ve);
          }, or(Ie);
        }
        function nr(Ie, ve) {
          return nr = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(he, ke) {
            return he.__proto__ = ke, he;
          }, nr(Ie, ve);
        }
        var Yr = function(Ie) {
          function ve(he) {
            var ke;
            return function(ht, pt) {
              if (!(ht instanceof pt)) throw new TypeError("Cannot call a class as a function");
            }(this, ve), (ke = gt(this, ve, [he, "transactions"])).url.segment("transactions"), ke;
          }
          return function(he, ke) {
            if (typeof ke != "function" && ke !== null) throw new TypeError("Super expression must either be null or a function");
            he.prototype = Object.create(ke && ke.prototype, { constructor: { value: he, writable: true, configurable: true } }), Object.defineProperty(he, "prototype", { writable: false }), ke && nr(he, ke);
          }(ve, Ie), function(he, ke, ht) {
            return ke && ot(he.prototype, ke), Object.defineProperty(he, "prototype", { writable: false }), he;
          }(ve, [{ key: "transaction", value: function(he) {
            var ke = new ae(this.url.clone());
            return ke.filter.push([he]), ke;
          } }, { key: "forAccount", value: function(he) {
            return this.forEndpoint("accounts", he);
          } }, { key: "forClaimableBalance", value: function(he) {
            return this.forEndpoint("claimable_balances", he);
          } }, { key: "forLedger", value: function(he) {
            return this.forEndpoint("ledgers", he.toString());
          } }, { key: "forLiquidityPool", value: function(he) {
            return this.forEndpoint("liquidity_pools", he);
          } }, { key: "includeFailed", value: function(he) {
            return this.url.setQuery("include_failed", he.toString()), this;
          } }]);
        }(ae);
        function Xr(Ie) {
          return Xr = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(ve) {
            return typeof ve;
          } : function(ve) {
            return ve && typeof Symbol == "function" && ve.constructor === Symbol && ve !== Symbol.prototype ? "symbol" : typeof ve;
          }, Xr(Ie);
        }
        function $r(Ie, ve) {
          var he = Object.keys(Ie);
          if (Object.getOwnPropertySymbols) {
            var ke = Object.getOwnPropertySymbols(Ie);
            ve && (ke = ke.filter(function(ht) {
              return Object.getOwnPropertyDescriptor(Ie, ht).enumerable;
            })), he.push.apply(he, ke);
          }
          return he;
        }
        function un(Ie) {
          for (var ve = 1; ve < arguments.length; ve++) {
            var he = arguments[ve] != null ? arguments[ve] : {};
            ve % 2 ? $r(Object(he), true).forEach(function(ke) {
              Kr(Ie, ke, he[ke]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(Ie, Object.getOwnPropertyDescriptors(he)) : $r(Object(he)).forEach(function(ke) {
              Object.defineProperty(Ie, ke, Object.getOwnPropertyDescriptor(he, ke));
            });
          }
          return Ie;
        }
        function Kr(Ie, ve, he) {
          return (ve = On(ve)) in Ie ? Object.defineProperty(Ie, ve, { value: he, enumerable: true, configurable: true, writable: true }) : Ie[ve] = he, Ie;
        }
        function Ir() {
          Ir = function() {
            return ve;
          };
          var Ie, ve = {}, he = Object.prototype, ke = he.hasOwnProperty, ht = Object.defineProperty || function(Fe, He, et) {
            Fe[He] = et.value;
          }, pt = typeof Symbol == "function" ? Symbol : {}, Pr = pt.iterator || "@@iterator", cn = pt.asyncIterator || "@@asyncIterator", on = pt.toStringTag || "@@toStringTag";
          function sn(Fe, He, et) {
            return Object.defineProperty(Fe, He, { value: et, enumerable: true, configurable: true, writable: true }), Fe[He];
          }
          try {
            sn({}, "");
          } catch {
            sn = function(He, et, jt) {
              return He[et] = jt;
            };
          }
          function Nn(Fe, He, et, jt) {
            var At = He && He.prototype instanceof Gn ? He : Gn, qt = Object.create(At.prototype), Jt = new mn(jt || []);
            return ht(qt, "_invoke", { value: pr(Fe, et, Jt) }), qt;
          }
          function Vn(Fe, He, et) {
            try {
              return { type: "normal", arg: Fe.call(He, et) };
            } catch (jt) {
              return { type: "throw", arg: jt };
            }
          }
          ve.wrap = Nn;
          var ln = "suspendedStart", oi = "suspendedYield", Hn = "executing", Tn = "completed", xn = {};
          function Gn() {
          }
          function Kn() {
          }
          function Pn() {
          }
          var Xn = {};
          sn(Xn, Pr, function() {
            return this;
          });
          var kt = Object.getPrototypeOf, Kt = kt && kt(kt(pn([])));
          Kt && Kt !== he && ke.call(Kt, Pr) && (Xn = Kt);
          var lr = Pn.prototype = Gn.prototype = Object.create(Xn);
          function Er(Fe) {
            ["next", "throw", "return"].forEach(function(He) {
              sn(Fe, He, function(et) {
                return this._invoke(He, et);
              });
            });
          }
          function Rr(Fe, He) {
            function et(At, qt, Jt, er) {
              var mr = Vn(Fe[At], Fe, qt);
              if (mr.type !== "throw") {
                var Ar = mr.arg, xr = Ar.value;
                return xr && Xr(xr) == "object" && ke.call(xr, "__await") ? He.resolve(xr.__await).then(function(Zr) {
                  et("next", Zr, Jt, er);
                }, function(Zr) {
                  et("throw", Zr, Jt, er);
                }) : He.resolve(xr).then(function(Zr) {
                  Ar.value = Zr, Jt(Ar);
                }, function(Zr) {
                  return et("throw", Zr, Jt, er);
                });
              }
              er(mr.arg);
            }
            var jt;
            ht(this, "_invoke", { value: function(At, qt) {
              function Jt() {
                return new He(function(er, mr) {
                  et(At, qt, er, mr);
                });
              }
              return jt = jt ? jt.then(Jt, Jt) : Jt();
            } });
          }
          function pr(Fe, He, et) {
            var jt = ln;
            return function(At, qt) {
              if (jt === Hn) throw Error("Generator is already running");
              if (jt === Tn) {
                if (At === "throw") throw qt;
                return { value: Ie, done: true };
              }
              for (et.method = At, et.arg = qt; ; ) {
                var Jt = et.delegate;
                if (Jt) {
                  var er = tn(Jt, et);
                  if (er) {
                    if (er === xn) continue;
                    return er;
                  }
                }
                if (et.method === "next") et.sent = et._sent = et.arg;
                else if (et.method === "throw") {
                  if (jt === ln) throw jt = Tn, et.arg;
                  et.dispatchException(et.arg);
                } else et.method === "return" && et.abrupt("return", et.arg);
                jt = Hn;
                var mr = Vn(Fe, He, et);
                if (mr.type === "normal") {
                  if (jt = et.done ? Tn : oi, mr.arg === xn) continue;
                  return { value: mr.arg, done: et.done };
                }
                mr.type === "throw" && (jt = Tn, et.method = "throw", et.arg = mr.arg);
              }
            };
          }
          function tn(Fe, He) {
            var et = He.method, jt = Fe.iterator[et];
            if (jt === Ie) return He.delegate = null, et === "throw" && Fe.iterator.return && (He.method = "return", He.arg = Ie, tn(Fe, He), He.method === "throw") || et !== "return" && (He.method = "throw", He.arg = new TypeError("The iterator does not provide a '" + et + "' method")), xn;
            var At = Vn(jt, Fe.iterator, He.arg);
            if (At.type === "throw") return He.method = "throw", He.arg = At.arg, He.delegate = null, xn;
            var qt = At.arg;
            return qt ? qt.done ? (He[Fe.resultName] = qt.value, He.next = Fe.nextLoc, He.method !== "return" && (He.method = "next", He.arg = Ie), He.delegate = null, xn) : qt : (He.method = "throw", He.arg = new TypeError("iterator result is not an object"), He.delegate = null, xn);
          }
          function fn(Fe) {
            var He = { tryLoc: Fe[0] };
            1 in Fe && (He.catchLoc = Fe[1]), 2 in Fe && (He.finallyLoc = Fe[2], He.afterLoc = Fe[3]), this.tryEntries.push(He);
          }
          function rn(Fe) {
            var He = Fe.completion || {};
            He.type = "normal", delete He.arg, Fe.completion = He;
          }
          function mn(Fe) {
            this.tryEntries = [{ tryLoc: "root" }], Fe.forEach(fn, this), this.reset(true);
          }
          function pn(Fe) {
            if (Fe || Fe === "") {
              var He = Fe[Pr];
              if (He) return He.call(Fe);
              if (typeof Fe.next == "function") return Fe;
              if (!isNaN(Fe.length)) {
                var et = -1, jt = function At() {
                  for (; ++et < Fe.length; ) if (ke.call(Fe, et)) return At.value = Fe[et], At.done = false, At;
                  return At.value = Ie, At.done = true, At;
                };
                return jt.next = jt;
              }
            }
            throw new TypeError(Xr(Fe) + " is not iterable");
          }
          return Kn.prototype = Pn, ht(lr, "constructor", { value: Pn, configurable: true }), ht(Pn, "constructor", { value: Kn, configurable: true }), Kn.displayName = sn(Pn, on, "GeneratorFunction"), ve.isGeneratorFunction = function(Fe) {
            var He = typeof Fe == "function" && Fe.constructor;
            return !!He && (He === Kn || (He.displayName || He.name) === "GeneratorFunction");
          }, ve.mark = function(Fe) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(Fe, Pn) : (Fe.__proto__ = Pn, sn(Fe, on, "GeneratorFunction")), Fe.prototype = Object.create(lr), Fe;
          }, ve.awrap = function(Fe) {
            return { __await: Fe };
          }, Er(Rr.prototype), sn(Rr.prototype, cn, function() {
            return this;
          }), ve.AsyncIterator = Rr, ve.async = function(Fe, He, et, jt, At) {
            At === void 0 && (At = Promise);
            var qt = new Rr(Nn(Fe, He, et, jt), At);
            return ve.isGeneratorFunction(He) ? qt : qt.next().then(function(Jt) {
              return Jt.done ? Jt.value : qt.next();
            });
          }, Er(lr), sn(lr, on, "Generator"), sn(lr, Pr, function() {
            return this;
          }), sn(lr, "toString", function() {
            return "[object Generator]";
          }), ve.keys = function(Fe) {
            var He = Object(Fe), et = [];
            for (var jt in He) et.push(jt);
            return et.reverse(), function At() {
              for (; et.length; ) {
                var qt = et.pop();
                if (qt in He) return At.value = qt, At.done = false, At;
              }
              return At.done = true, At;
            };
          }, ve.values = pn, mn.prototype = { constructor: mn, reset: function(Fe) {
            if (this.prev = 0, this.next = 0, this.sent = this._sent = Ie, this.done = false, this.delegate = null, this.method = "next", this.arg = Ie, this.tryEntries.forEach(rn), !Fe) for (var He in this) He.charAt(0) === "t" && ke.call(this, He) && !isNaN(+He.slice(1)) && (this[He] = Ie);
          }, stop: function() {
            this.done = true;
            var Fe = this.tryEntries[0].completion;
            if (Fe.type === "throw") throw Fe.arg;
            return this.rval;
          }, dispatchException: function(Fe) {
            if (this.done) throw Fe;
            var He = this;
            function et(mr, Ar) {
              return qt.type = "throw", qt.arg = Fe, He.next = mr, Ar && (He.method = "next", He.arg = Ie), !!Ar;
            }
            for (var jt = this.tryEntries.length - 1; jt >= 0; --jt) {
              var At = this.tryEntries[jt], qt = At.completion;
              if (At.tryLoc === "root") return et("end");
              if (At.tryLoc <= this.prev) {
                var Jt = ke.call(At, "catchLoc"), er = ke.call(At, "finallyLoc");
                if (Jt && er) {
                  if (this.prev < At.catchLoc) return et(At.catchLoc, true);
                  if (this.prev < At.finallyLoc) return et(At.finallyLoc);
                } else if (Jt) {
                  if (this.prev < At.catchLoc) return et(At.catchLoc, true);
                } else {
                  if (!er) throw Error("try statement without catch or finally");
                  if (this.prev < At.finallyLoc) return et(At.finallyLoc);
                }
              }
            }
          }, abrupt: function(Fe, He) {
            for (var et = this.tryEntries.length - 1; et >= 0; --et) {
              var jt = this.tryEntries[et];
              if (jt.tryLoc <= this.prev && ke.call(jt, "finallyLoc") && this.prev < jt.finallyLoc) {
                var At = jt;
                break;
              }
            }
            At && (Fe === "break" || Fe === "continue") && At.tryLoc <= He && He <= At.finallyLoc && (At = null);
            var qt = At ? At.completion : {};
            return qt.type = Fe, qt.arg = He, At ? (this.method = "next", this.next = At.finallyLoc, xn) : this.complete(qt);
          }, complete: function(Fe, He) {
            if (Fe.type === "throw") throw Fe.arg;
            return Fe.type === "break" || Fe.type === "continue" ? this.next = Fe.arg : Fe.type === "return" ? (this.rval = this.arg = Fe.arg, this.method = "return", this.next = "end") : Fe.type === "normal" && He && (this.next = He), xn;
          }, finish: function(Fe) {
            for (var He = this.tryEntries.length - 1; He >= 0; --He) {
              var et = this.tryEntries[He];
              if (et.finallyLoc === Fe) return this.complete(et.completion, et.afterLoc), rn(et), xn;
            }
          }, catch: function(Fe) {
            for (var He = this.tryEntries.length - 1; He >= 0; --He) {
              var et = this.tryEntries[He];
              if (et.tryLoc === Fe) {
                var jt = et.completion;
                if (jt.type === "throw") {
                  var At = jt.arg;
                  rn(et);
                }
                return At;
              }
            }
            throw Error("illegal catch attempt");
          }, delegateYield: function(Fe, He, et) {
            return this.delegate = { iterator: pn(Fe), resultName: He, nextLoc: et }, this.method === "next" && (this.arg = Ie), xn;
          } }, ve;
        }
        function An(Ie, ve, he, ke, ht, pt, Pr) {
          try {
            var cn = Ie[pt](Pr), on = cn.value;
          } catch (sn) {
            return void he(sn);
          }
          cn.done ? ve(on) : Promise.resolve(on).then(ke, ht);
        }
        function En(Ie) {
          return function() {
            var ve = this, he = arguments;
            return new Promise(function(ke, ht) {
              var pt = Ie.apply(ve, he);
              function Pr(on) {
                An(pt, ke, ht, Pr, cn, "next", on);
              }
              function cn(on) {
                An(pt, ke, ht, Pr, cn, "throw", on);
              }
              Pr(void 0);
            });
          };
        }
        function Sn(Ie, ve) {
          for (var he = 0; he < ve.length; he++) {
            var ke = ve[he];
            ke.enumerable = ke.enumerable || false, ke.configurable = true, "value" in ke && (ke.writable = true), Object.defineProperty(Ie, On(ke.key), ke);
          }
        }
        function On(Ie) {
          var ve = function(he, ke) {
            if (Xr(he) != "object" || !he) return he;
            var ht = he[Symbol.toPrimitive];
            if (ht !== void 0) {
              var pt = ht.call(he, ke);
              if (Xr(pt) != "object") return pt;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(he);
          }(Ie, "string");
          return Xr(ve) == "symbol" ? ve : ve + "";
        }
        function gn(Ie) {
          return new ne(Ie).div(1e7).toString();
        }
        var Bn, jn, qn, Qn, ii, gi, so, Uo, ca = function(Ie, ve, he) {
          return ve && Sn(Ie.prototype, ve), Object.defineProperty(Ie, "prototype", { writable: false }), Ie;
        }(function Ie(ve) {
          var he = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          (function(pt, Pr) {
            if (!(pt instanceof Pr)) throw new TypeError("Cannot call a class as a function");
          })(this, Ie), this.serverURL = ie()(ve);
          var ke = he.allowHttp === void 0 ? W.T.isAllowHttp() : he.allowHttp, ht = {};
          if (he.appName && (ht["X-App-Name"] = he.appName), he.appVersion && (ht["X-App-Version"] = he.appVersion), he.authToken && (ht["X-Auth-Token"] = he.authToken), he.headers && Object.assign(ht, he.headers), Object.keys(ht).length > 0 && xe.interceptors.request.use(function(pt) {
            return pt.headers = pt.headers || {}, pt.headers = Object.assign(pt.headers, ht), pt;
          }), this.serverURL.protocol() !== "https" && !ke) throw new Error("Cannot connect to insecure horizon server");
        }, [{ key: "fetchTimebounds", value: (Uo = En(Ir().mark(function Ie(ve) {
          var he, ke, ht = arguments;
          return Ir().wrap(function(pt) {
            for (; ; ) switch (pt.prev = pt.next) {
              case 0:
                if (he = ht.length > 1 && ht[1] !== void 0 && ht[1], !(ke = Ve(this.serverURL.hostname()))) {
                  pt.next = 4;
                  break;
                }
                return pt.abrupt("return", { minTime: 0, maxTime: ke + ve });
              case 4:
                if (!he) {
                  pt.next = 6;
                  break;
                }
                return pt.abrupt("return", { minTime: 0, maxTime: Math.floor((/* @__PURE__ */ new Date()).getTime() / 1e3) + ve });
              case 6:
                return pt.next = 8, xe.get(ie()(this.serverURL).toString());
              case 8:
                return pt.abrupt("return", this.fetchTimebounds(ve, true));
              case 9:
              case "end":
                return pt.stop();
            }
          }, Ie, this);
        })), function(Ie) {
          return Uo.apply(this, arguments);
        }) }, { key: "fetchBaseFee", value: (so = En(Ir().mark(function Ie() {
          var ve;
          return Ir().wrap(function(he) {
            for (; ; ) switch (he.prev = he.next) {
              case 0:
                return he.next = 2, this.feeStats();
              case 2:
                return ve = he.sent, he.abrupt("return", parseInt(ve.last_ledger_base_fee, 10) || 100);
              case 4:
              case "end":
                return he.stop();
            }
          }, Ie, this);
        })), function() {
          return so.apply(this, arguments);
        }) }, { key: "feeStats", value: (gi = En(Ir().mark(function Ie() {
          var ve;
          return Ir().wrap(function(he) {
            for (; ; ) switch (he.prev = he.next) {
              case 0:
                return (ve = new ae(ie()(this.serverURL))).filter.push(["fee_stats"]), he.abrupt("return", ve.call());
              case 3:
              case "end":
                return he.stop();
            }
          }, Ie, this);
        })), function() {
          return gi.apply(this, arguments);
        }) }, { key: "root", value: (ii = En(Ir().mark(function Ie() {
          var ve;
          return Ir().wrap(function(he) {
            for (; ; ) switch (he.prev = he.next) {
              case 0:
                return ve = new ae(ie()(this.serverURL)), he.abrupt("return", ve.call());
              case 2:
              case "end":
                return he.stop();
            }
          }, Ie, this);
        })), function() {
          return ii.apply(this, arguments);
        }) }, { key: "submitTransaction", value: (Qn = En(Ir().mark(function Ie(ve) {
          var he, ke = arguments;
          return Ir().wrap(function(ht) {
            for (; ; ) switch (ht.prev = ht.next) {
              case 0:
                if ((ke.length > 1 && ke[1] !== void 0 ? ke[1] : { skipMemoRequiredCheck: false }).skipMemoRequiredCheck) {
                  ht.next = 4;
                  break;
                }
                return ht.next = 4, this.checkMemoRequired(ve);
              case 4:
                return he = encodeURIComponent(ve.toEnvelope().toXDR().toString("base64")), ht.abrupt("return", xe.post(ie()(this.serverURL).segment("transactions").toString(), "tx=".concat(he), { timeout: 6e4 }).then(function(pt) {
                  if (!pt.data.result_xdr) return pt.data;
                  var Pr, cn, on = m.xdr.TransactionResult.fromXDR(pt.data.result_xdr, "base64").result().value();
                  return on.length && (Pr = on.map(function(sn, Nn) {
                    if (sn.value().switch().name !== "manageBuyOffer" && sn.value().switch().name !== "manageSellOffer") return null;
                    cn = true;
                    var Vn, ln = new ne(0), oi = new ne(0), Hn = sn.value().value().success(), Tn = Hn.offersClaimed().map(function(Xn) {
                      var kt = Xn.value(), Kt = "";
                      switch (Xn.switch()) {
                        case m.xdr.ClaimAtomType.claimAtomTypeV0():
                          Kt = m.StrKey.encodeEd25519PublicKey(kt.sellerEd25519());
                          break;
                        case m.xdr.ClaimAtomType.claimAtomTypeOrderBook():
                          Kt = m.StrKey.encodeEd25519PublicKey(kt.sellerId().ed25519());
                          break;
                        default:
                          throw new Error("Invalid offer result type: ".concat(Xn.switch()));
                      }
                      var lr = new ne(kt.amountBought().toString()), Er = new ne(kt.amountSold().toString());
                      ln = ln.plus(Er), oi = oi.plus(lr);
                      var Rr = m.Asset.fromOperation(kt.assetSold()), pr = m.Asset.fromOperation(kt.assetBought()), tn = { type: Rr.getAssetType(), assetCode: Rr.getCode(), issuer: Rr.getIssuer() }, fn = { type: pr.getAssetType(), assetCode: pr.getCode(), issuer: pr.getIssuer() };
                      return { sellerId: Kt, offerId: kt.offerId().toString(), assetSold: tn, amountSold: gn(Er), assetBought: fn, amountBought: gn(lr) };
                    }), xn = Hn.offer().switch().name;
                    if (typeof Hn.offer().value == "function" && Hn.offer().value()) {
                      var Gn = Hn.offer().value();
                      Vn = { offerId: Gn.offerId().toString(), selling: {}, buying: {}, amount: gn(Gn.amount().toString()), price: { n: Gn.price().n(), d: Gn.price().d() } };
                      var Kn = m.Asset.fromOperation(Gn.selling());
                      Vn.selling = { type: Kn.getAssetType(), assetCode: Kn.getCode(), issuer: Kn.getIssuer() };
                      var Pn = m.Asset.fromOperation(Gn.buying());
                      Vn.buying = { type: Pn.getAssetType(), assetCode: Pn.getCode(), issuer: Pn.getIssuer() };
                    }
                    return { offersClaimed: Tn, effect: xn, operationIndex: Nn, currentOffer: Vn, amountBought: gn(ln), amountSold: gn(oi), isFullyOpen: !Tn.length && xn !== "manageOfferDeleted", wasPartiallyFilled: !!Tn.length && xn !== "manageOfferDeleted", wasImmediatelyFilled: !!Tn.length && xn === "manageOfferDeleted", wasImmediatelyDeleted: !Tn.length && xn === "manageOfferDeleted" };
                  }).filter(function(sn) {
                    return !!sn;
                  })), un(un({}, pt.data), {}, { offerResults: cn ? Pr : void 0 });
                }).catch(function(pt) {
                  return pt instanceof Error ? Promise.reject(pt) : Promise.reject(new oe.nS("Transaction submission failed. Server responded: ".concat(pt.status, " ").concat(pt.statusText), pt.data));
                }));
              case 6:
              case "end":
                return ht.stop();
            }
          }, Ie, this);
        })), function(Ie) {
          return Qn.apply(this, arguments);
        }) }, { key: "submitAsyncTransaction", value: (qn = En(Ir().mark(function Ie(ve) {
          var he, ke = arguments;
          return Ir().wrap(function(ht) {
            for (; ; ) switch (ht.prev = ht.next) {
              case 0:
                if ((ke.length > 1 && ke[1] !== void 0 ? ke[1] : { skipMemoRequiredCheck: false }).skipMemoRequiredCheck) {
                  ht.next = 4;
                  break;
                }
                return ht.next = 4, this.checkMemoRequired(ve);
              case 4:
                return he = encodeURIComponent(ve.toEnvelope().toXDR().toString("base64")), ht.abrupt("return", xe.post(ie()(this.serverURL).segment("transactions_async").toString(), "tx=".concat(he)).then(function(pt) {
                  return pt.data;
                }).catch(function(pt) {
                  return pt instanceof Error ? Promise.reject(pt) : Promise.reject(new oe.nS("Transaction submission failed. Server responded: ".concat(pt.status, " ").concat(pt.statusText), pt.data));
                }));
              case 6:
              case "end":
                return ht.stop();
            }
          }, Ie, this);
        })), function(Ie) {
          return qn.apply(this, arguments);
        }) }, { key: "accounts", value: function() {
          return new je(ie()(this.serverURL));
        } }, { key: "claimableBalances", value: function() {
          return new nt(ie()(this.serverURL));
        } }, { key: "ledgers", value: function() {
          return new Qt(ie()(this.serverURL));
        } }, { key: "transactions", value: function() {
          return new Yr(ie()(this.serverURL));
        } }, { key: "offers", value: function() {
          return new Gr(ie()(this.serverURL));
        } }, { key: "orderbook", value: function(Ie, ve) {
          return new qr(ie()(this.serverURL), Ie, ve);
        } }, { key: "trades", value: function() {
          return new Sr(ie()(this.serverURL));
        } }, { key: "operations", value: function() {
          return new dt(ie()(this.serverURL));
        } }, { key: "liquidityPools", value: function() {
          return new It(ie()(this.serverURL));
        } }, { key: "strictReceivePaths", value: function(Ie, ve, he) {
          return new wn(ie()(this.serverURL), Ie, ve, he);
        } }, { key: "strictSendPaths", value: function(Ie, ve, he) {
          return new Xe(ie()(this.serverURL), Ie, ve, he);
        } }, { key: "payments", value: function() {
          return new St(ie()(this.serverURL));
        } }, { key: "effects", value: function() {
          return new Lt(ie()(this.serverURL));
        } }, { key: "friendbot", value: function(Ie) {
          return new Tr(ie()(this.serverURL), Ie);
        } }, { key: "assets", value: function() {
          return new Nt(ie()(this.serverURL));
        } }, { key: "loadAccount", value: (jn = En(Ir().mark(function Ie(ve) {
          var he;
          return Ir().wrap(function(ke) {
            for (; ; ) switch (ke.prev = ke.next) {
              case 0:
                return ke.next = 2, this.accounts().accountId(ve).call();
              case 2:
                return he = ke.sent, ke.abrupt("return", new R(he));
              case 4:
              case "end":
                return ke.stop();
            }
          }, Ie, this);
        })), function(Ie) {
          return jn.apply(this, arguments);
        }) }, { key: "tradeAggregation", value: function(Ie, ve, he, ke, ht, pt) {
          return new Se(ie()(this.serverURL), Ie, ve, he, ke, ht, pt);
        } }, { key: "checkMemoRequired", value: (Bn = En(Ir().mark(function Ie(ve) {
          var he, ke, ht, pt;
          return Ir().wrap(function(Pr) {
            for (; ; ) switch (Pr.prev = Pr.next) {
              case 0:
                if (ve instanceof m.FeeBumpTransaction && (ve = ve.innerTransaction), ve.memo.type === "none") {
                  Pr.next = 3;
                  break;
                }
                return Pr.abrupt("return");
              case 3:
                he = /* @__PURE__ */ new Set(), ke = 0;
              case 5:
                if (!(ke < ve.operations.length)) {
                  Pr.next = 36;
                  break;
                }
                ht = ve.operations[ke], Pr.t0 = ht.type, Pr.next = Pr.t0 === "payment" || Pr.t0 === "pathPaymentStrictReceive" || Pr.t0 === "pathPaymentStrictSend" || Pr.t0 === "accountMerge" ? 10 : 11;
                break;
              case 10:
                return Pr.abrupt("break", 12);
              case 11:
                return Pr.abrupt("continue", 33);
              case 12:
                if (pt = ht.destination, !he.has(pt)) {
                  Pr.next = 15;
                  break;
                }
                return Pr.abrupt("continue", 33);
              case 15:
                if (he.add(pt), !pt.startsWith("M")) {
                  Pr.next = 18;
                  break;
                }
                return Pr.abrupt("continue", 33);
              case 18:
                return Pr.prev = 18, Pr.next = 21, this.loadAccount(pt);
              case 21:
                if (Pr.sent.data_attr["config.memo_required"] !== "MQ==") {
                  Pr.next = 24;
                  break;
                }
                throw new oe.Cu("account requires memo", pt, ke);
              case 24:
                Pr.next = 33;
                break;
              case 26:
                if (Pr.prev = 26, Pr.t1 = Pr.catch(18), !(Pr.t1 instanceof oe.Cu)) {
                  Pr.next = 30;
                  break;
                }
                throw Pr.t1;
              case 30:
                if (Pr.t1 instanceof oe.m_) {
                  Pr.next = 32;
                  break;
                }
                throw Pr.t1;
              case 32:
                return Pr.abrupt("continue", 33);
              case 33:
                ke += 1, Pr.next = 5;
                break;
              case 36:
              case "end":
                return Pr.stop();
            }
          }, Ie, this, [[18, 26]]);
        })), function(Ie) {
          return Bn.apply(this, arguments);
        }) }]);
        const Rn = (t = s.hmd(t)).exports;
      }, 8752: (t, o, s) => {
        Object.defineProperty(o, "__esModule", { value: true }), o.extendFootprintTtl = function(f) {
          var r;
          if (((r = f.extendTo) !== null && r !== void 0 ? r : -1) <= 0) throw new RangeError("extendTo has to be positive");
          var m = new h.default.ExtendFootprintTtlOp({ ext: new h.default.ExtensionPoint(0), extendTo: f.extendTo }), g = { body: h.default.OperationBody.extendFootprintTtl(m) };
          return this.setSourceAccount(g, f), new h.default.Operation(g);
        };
        var c, h = (c = s(1918)) && c.__esModule ? c : { default: c };
      }, 8835: (t, o, s) => {
        var c = s(1270);
        function h() {
          this.protocol = null, this.slashes = null, this.auth = null, this.host = null, this.port = null, this.hostname = null, this.hash = null, this.search = null, this.query = null, this.pathname = null, this.path = null, this.href = null;
        }
        var f = /^([a-z0-9.+-]+:)/i, r = /:[0-9]*$/, m = /^(\/\/?(?!\/)[^?\s]*)(\?[^\s]*)?$/, g = ["{", "}", "|", "\\", "^", "`"].concat(["<", ">", '"', "`", " ", "\r", `
`, "	"]), a = ["'"].concat(g), l = ["%", "/", "?", ";", "#"].concat(a), d = ["/", "?", "#"], b = /^[+a-z0-9A-Z_-]{0,63}$/, S = /^([+a-z0-9A-Z_-]{0,63})(.*)$/, E = { javascript: true, "javascript:": true }, R = { javascript: true, "javascript:": true }, k = { http: true, https: true, ftp: true, gopher: true, file: true, "http:": true, "https:": true, "ftp:": true, "gopher:": true, "file:": true }, w = s(5373);
        function F(I, q, N) {
          if (I && typeof I == "object" && I instanceof h) return I;
          var H = new h();
          return H.parse(I, q, N), H;
        }
        h.prototype.parse = function(I, q, N) {
          if (typeof I != "string") throw new TypeError("Parameter 'url' must be a string, not " + typeof I);
          var H = I.indexOf("?"), _ = H !== -1 && H < I.indexOf("#") ? "?" : "#", x = I.split(_);
          x[0] = x[0].replace(/\\/g, "/");
          var L = I = x.join(_);
          if (L = L.trim(), !N && I.split("#").length === 1) {
            var j = m.exec(L);
            if (j) return this.path = L, this.href = L, this.pathname = j[1], j[2] ? (this.search = j[2], this.query = q ? w.parse(this.search.substr(1)) : this.search.substr(1)) : q && (this.search = "", this.query = {}), this;
          }
          var z = f.exec(L);
          if (z) {
            var Z = (z = z[0]).toLowerCase();
            this.protocol = Z, L = L.substr(z.length);
          }
          if (N || z || L.match(/^\/\/[^@/]+@[^@/]+/)) {
            var ue = L.substr(0, 2) === "//";
            !ue || z && R[z] || (L = L.substr(2), this.slashes = true);
          }
          if (!R[z] && (ue || z && !k[z])) {
            for (var $, X, J = -1, B = 0; B < d.length; B++) (Q = L.indexOf(d[B])) !== -1 && (J === -1 || Q < J) && (J = Q);
            for ((X = J === -1 ? L.lastIndexOf("@") : L.lastIndexOf("@", J)) !== -1 && ($ = L.slice(0, X), L = L.slice(X + 1), this.auth = decodeURIComponent($)), J = -1, B = 0; B < l.length; B++) {
              var Q;
              (Q = L.indexOf(l[B])) !== -1 && (J === -1 || Q < J) && (J = Q);
            }
            J === -1 && (J = L.length), this.host = L.slice(0, J), L = L.slice(J), this.parseHost(), this.hostname = this.hostname || "";
            var ne = this.hostname[0] === "[" && this.hostname[this.hostname.length - 1] === "]";
            if (!ne) for (var K = this.hostname.split(/\./), ie = (B = 0, K.length); B < ie; B++) {
              var ce = K[B];
              if (ce && !ce.match(b)) {
                for (var ye = "", oe = 0, se = ce.length; oe < se; oe++) ce.charCodeAt(oe) > 127 ? ye += "x" : ye += ce[oe];
                if (!ye.match(b)) {
                  var re = K.slice(0, B), ge = K.slice(B + 1), Te = ce.match(S);
                  Te && (re.push(Te[1]), ge.unshift(Te[2])), ge.length && (L = "/" + ge.join(".") + L), this.hostname = re.join(".");
                  break;
                }
              }
            }
            this.hostname.length > 255 ? this.hostname = "" : this.hostname = this.hostname.toLowerCase(), ne || (this.hostname = c.toASCII(this.hostname));
            var pe = this.port ? ":" + this.port : "", Oe = this.hostname || "";
            this.host = Oe + pe, this.href += this.host, ne && (this.hostname = this.hostname.substr(1, this.hostname.length - 2), L[0] !== "/" && (L = "/" + L));
          }
          if (!E[Z]) for (B = 0, ie = a.length; B < ie; B++) {
            var xe = a[B];
            if (L.indexOf(xe) !== -1) {
              var Ve = encodeURIComponent(xe);
              Ve === xe && (Ve = escape(xe)), L = L.split(xe).join(Ve);
            }
          }
          var _e = L.indexOf("#");
          _e !== -1 && (this.hash = L.substr(_e), L = L.slice(0, _e));
          var Be = L.indexOf("?");
          if (Be !== -1 ? (this.search = L.substr(Be), this.query = L.substr(Be + 1), q && (this.query = w.parse(this.query)), L = L.slice(0, Be)) : q && (this.search = "", this.query = {}), L && (this.pathname = L), k[Z] && this.hostname && !this.pathname && (this.pathname = "/"), this.pathname || this.search) {
            pe = this.pathname || "";
            var Qe = this.search || "";
            this.path = pe + Qe;
          }
          return this.href = this.format(), this;
        }, h.prototype.format = function() {
          var I = this.auth || "";
          I && (I = (I = encodeURIComponent(I)).replace(/%3A/i, ":"), I += "@");
          var q = this.protocol || "", N = this.pathname || "", H = this.hash || "", _ = false, x = "";
          this.host ? _ = I + this.host : this.hostname && (_ = I + (this.hostname.indexOf(":") === -1 ? this.hostname : "[" + this.hostname + "]"), this.port && (_ += ":" + this.port)), this.query && typeof this.query == "object" && Object.keys(this.query).length && (x = w.stringify(this.query, { arrayFormat: "repeat", addQueryPrefix: false }));
          var L = this.search || x && "?" + x || "";
          return q && q.substr(-1) !== ":" && (q += ":"), this.slashes || (!q || k[q]) && _ !== false ? (_ = "//" + (_ || ""), N && N.charAt(0) !== "/" && (N = "/" + N)) : _ || (_ = ""), H && H.charAt(0) !== "#" && (H = "#" + H), L && L.charAt(0) !== "?" && (L = "?" + L), q + _ + (N = N.replace(/[?#]/g, function(j) {
            return encodeURIComponent(j);
          })) + (L = L.replace("#", "%23")) + H;
        }, h.prototype.resolve = function(I) {
          return this.resolveObject(F(I, false, true)).format();
        }, h.prototype.resolveObject = function(I) {
          if (typeof I == "string") {
            var q = new h();
            q.parse(I, false, true), I = q;
          }
          for (var N = new h(), H = Object.keys(this), _ = 0; _ < H.length; _++) {
            var x = H[_];
            N[x] = this[x];
          }
          if (N.hash = I.hash, I.href === "") return N.href = N.format(), N;
          if (I.slashes && !I.protocol) {
            for (var L = Object.keys(I), j = 0; j < L.length; j++) {
              var z = L[j];
              z !== "protocol" && (N[z] = I[z]);
            }
            return k[N.protocol] && N.hostname && !N.pathname && (N.pathname = "/", N.path = N.pathname), N.href = N.format(), N;
          }
          if (I.protocol && I.protocol !== N.protocol) {
            if (!k[I.protocol]) {
              for (var Z = Object.keys(I), ue = 0; ue < Z.length; ue++) {
                var $ = Z[ue];
                N[$] = I[$];
              }
              return N.href = N.format(), N;
            }
            if (N.protocol = I.protocol, I.host || R[I.protocol]) N.pathname = I.pathname;
            else {
              for (var X = (I.pathname || "").split("/"); X.length && !(I.host = X.shift()); ) ;
              I.host || (I.host = ""), I.hostname || (I.hostname = ""), X[0] !== "" && X.unshift(""), X.length < 2 && X.unshift(""), N.pathname = X.join("/");
            }
            if (N.search = I.search, N.query = I.query, N.host = I.host || "", N.auth = I.auth, N.hostname = I.hostname || I.host, N.port = I.port, N.pathname || N.search) {
              var J = N.pathname || "", B = N.search || "";
              N.path = J + B;
            }
            return N.slashes = N.slashes || I.slashes, N.href = N.format(), N;
          }
          var Q = N.pathname && N.pathname.charAt(0) === "/", ne = I.host || I.pathname && I.pathname.charAt(0) === "/", K = ne || Q || N.host && I.pathname, ie = K, ce = N.pathname && N.pathname.split("/") || [], ye = (X = I.pathname && I.pathname.split("/") || [], N.protocol && !k[N.protocol]);
          if (ye && (N.hostname = "", N.port = null, N.host && (ce[0] === "" ? ce[0] = N.host : ce.unshift(N.host)), N.host = "", I.protocol && (I.hostname = null, I.port = null, I.host && (X[0] === "" ? X[0] = I.host : X.unshift(I.host)), I.host = null), K = K && (X[0] === "" || ce[0] === "")), ne) N.host = I.host || I.host === "" ? I.host : N.host, N.hostname = I.hostname || I.hostname === "" ? I.hostname : N.hostname, N.search = I.search, N.query = I.query, ce = X;
          else if (X.length) ce || (ce = []), ce.pop(), ce = ce.concat(X), N.search = I.search, N.query = I.query;
          else if (I.search != null) return ye && (N.host = ce.shift(), N.hostname = N.host, (Te = !!(N.host && N.host.indexOf("@") > 0) && N.host.split("@")) && (N.auth = Te.shift(), N.hostname = Te.shift(), N.host = N.hostname)), N.search = I.search, N.query = I.query, N.pathname === null && N.search === null || (N.path = (N.pathname ? N.pathname : "") + (N.search ? N.search : "")), N.href = N.format(), N;
          if (!ce.length) return N.pathname = null, N.search ? N.path = "/" + N.search : N.path = null, N.href = N.format(), N;
          for (var oe = ce.slice(-1)[0], se = (N.host || I.host || ce.length > 1) && (oe === "." || oe === "..") || oe === "", re = 0, ge = ce.length; ge >= 0; ge--) (oe = ce[ge]) === "." ? ce.splice(ge, 1) : oe === ".." ? (ce.splice(ge, 1), re++) : re && (ce.splice(ge, 1), re--);
          if (!K && !ie) for (; re--; re) ce.unshift("..");
          !K || ce[0] === "" || ce[0] && ce[0].charAt(0) === "/" || ce.unshift(""), se && ce.join("/").substr(-1) !== "/" && ce.push("");
          var Te, pe = ce[0] === "" || ce[0] && ce[0].charAt(0) === "/";
          return ye && (N.hostname = pe ? "" : ce.length ? ce.shift() : "", N.host = N.hostname, (Te = !!(N.host && N.host.indexOf("@") > 0) && N.host.split("@")) && (N.auth = Te.shift(), N.hostname = Te.shift(), N.host = N.hostname)), (K = K || N.host && ce.length) && !pe && ce.unshift(""), ce.length > 0 ? N.pathname = ce.join("/") : (N.pathname = null, N.path = null), N.pathname === null && N.search === null || (N.path = (N.pathname ? N.pathname : "") + (N.search ? N.search : "")), N.auth = I.auth || N.auth, N.slashes = N.slashes || I.slashes, N.href = N.format(), N;
        }, h.prototype.parseHost = function() {
          var I = this.host, q = r.exec(I);
          q && ((q = q[0]) !== ":" && (this.port = q.substr(1)), I = I.substr(0, I.length - q.length)), I && (this.hostname = I);
        }, o.parse = F, o.resolve = function(I, q) {
          return F(I, false, true).resolve(q);
        }, o.resolveObject = function(I, q) {
          return I ? F(I, false, true).resolveObject(q) : q;
        }, o.format = function(I) {
          return typeof I == "string" && (I = F(I)), I instanceof h ? I.format() : h.prototype.format.call(I);
        }, o.Url = h;
      }, 8859: (t, o, s) => {
        var c = typeof Map == "function" && Map.prototype, h = Object.getOwnPropertyDescriptor && c ? Object.getOwnPropertyDescriptor(Map.prototype, "size") : null, f = c && h && typeof h.get == "function" ? h.get : null, r = c && Map.prototype.forEach, m = typeof Set == "function" && Set.prototype, g = Object.getOwnPropertyDescriptor && m ? Object.getOwnPropertyDescriptor(Set.prototype, "size") : null, a = m && g && typeof g.get == "function" ? g.get : null, l = m && Set.prototype.forEach, d = typeof WeakMap == "function" && WeakMap.prototype ? WeakMap.prototype.has : null, b = typeof WeakSet == "function" && WeakSet.prototype ? WeakSet.prototype.has : null, S = typeof WeakRef == "function" && WeakRef.prototype ? WeakRef.prototype.deref : null, E = Boolean.prototype.valueOf, R = Object.prototype.toString, k = Function.prototype.toString, w = String.prototype.match, F = String.prototype.slice, I = String.prototype.replace, q = String.prototype.toUpperCase, N = String.prototype.toLowerCase, H = RegExp.prototype.test, _ = Array.prototype.concat, x = Array.prototype.join, L = Array.prototype.slice, j = Math.floor, z = typeof BigInt == "function" ? BigInt.prototype.valueOf : null, Z = Object.getOwnPropertySymbols, ue = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? Symbol.prototype.toString : null, $ = typeof Symbol == "function" && typeof Symbol.iterator == "object", X = typeof Symbol == "function" && Symbol.toStringTag && (typeof Symbol.toStringTag === $ || true) ? Symbol.toStringTag : null, J = Object.prototype.propertyIsEnumerable, B = (typeof Reflect == "function" ? Reflect.getPrototypeOf : Object.getPrototypeOf) || ([].__proto__ === Array.prototype ? function(D) {
          return D.__proto__;
        } : null);
        function Q(D, C) {
          if (D === 1 / 0 || D === -1 / 0 || D != D || D && D > -1e3 && D < 1e3 || H.call(/e/, C)) return C;
          var p = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;
          if (typeof D == "number") {
            var A = D < 0 ? -j(-D) : j(D);
            if (A !== D) {
              var U = String(A), Y = F.call(C, U.length + 1);
              return I.call(U, p, "$&_") + "." + I.call(I.call(Y, /([0-9]{3})/g, "$&_"), /_$/, "");
            }
          }
          return I.call(C, p, "$&_");
        }
        var ne = s(2634), K = ne.custom, ie = pe(K) ? K : null, ce = { __proto__: null, double: '"', single: "'" }, ye = { __proto__: null, double: /(["\\])/g, single: /(['\\])/g };
        function oe(D, C, p) {
          var A = p.quoteStyle || C, U = ce[A];
          return U + D + U;
        }
        function se(D) {
          return I.call(String(D), /"/g, "&quot;");
        }
        function re(D) {
          return !X || !(typeof D == "object" && (X in D || D[X] !== void 0));
        }
        function ge(D) {
          return Ve(D) === "[object Array]" && re(D);
        }
        function Te(D) {
          return Ve(D) === "[object RegExp]" && re(D);
        }
        function pe(D) {
          if ($) return D && typeof D == "object" && D instanceof Symbol;
          if (typeof D == "symbol") return true;
          if (!D || typeof D != "object" || !ue) return false;
          try {
            return ue.call(D), true;
          } catch {
          }
          return false;
        }
        t.exports = function D(C, p, A, U) {
          var Y = p || {};
          if (xe(Y, "quoteStyle") && !xe(ce, Y.quoteStyle)) throw new TypeError('option "quoteStyle" must be "single" or "double"');
          if (xe(Y, "maxStringLength") && (typeof Y.maxStringLength == "number" ? Y.maxStringLength < 0 && Y.maxStringLength !== 1 / 0 : Y.maxStringLength !== null)) throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');
          var ae = !xe(Y, "customInspect") || Y.customInspect;
          if (typeof ae != "boolean" && ae !== "symbol") throw new TypeError("option \"customInspect\", if provided, must be `true`, `false`, or `'symbol'`");
          if (xe(Y, "indent") && Y.indent !== null && Y.indent !== "	" && !(parseInt(Y.indent, 10) === Y.indent && Y.indent > 0)) throw new TypeError('option "indent" must be "\\t", an integer > 0, or `null`');
          if (xe(Y, "numericSeparator") && typeof Y.numericSeparator != "boolean") throw new TypeError('option "numericSeparator", if provided, must be `true` or `false`');
          var W = Y.numericSeparator;
          if (C === void 0) return "undefined";
          if (C === null) return "null";
          if (typeof C == "boolean") return C ? "true" : "false";
          if (typeof C == "string") return Be(C, Y);
          if (typeof C == "number") {
            if (C === 0) return 1 / 0 / C > 0 ? "0" : "-0";
            var de = String(C);
            return W ? Q(C, de) : de;
          }
          if (typeof C == "bigint") {
            var tt = String(C) + "n";
            return W ? Q(C, tt) : tt;
          }
          var Ne = Y.depth === void 0 ? 5 : Y.depth;
          if (A === void 0 && (A = 0), A >= Ne && Ne > 0 && typeof C == "object") return ge(C) ? "[Array]" : "[Object]";
          var ut = function(le, te) {
            var Le;
            if (le.indent === "	") Le = "	";
            else {
              if (!(typeof le.indent == "number" && le.indent > 0)) return null;
              Le = x.call(Array(le.indent + 1), " ");
            }
            return { base: Le, prev: x.call(Array(te + 1), Le) };
          }(Y, A);
          if (U === void 0) U = [];
          else if (_e(U, C) >= 0) return "[Circular]";
          function Ze(le, te, Le) {
            if (te && (U = L.call(U)).push(te), Le) {
              var nt = { depth: Y.depth };
              return xe(Y, "quoteStyle") && (nt.quoteStyle = Y.quoteStyle), D(le, nt, A + 1, U);
            }
            return D(le, Y, A + 1, U);
          }
          if (typeof C == "function" && !Te(C)) {
            var Et = function(le) {
              if (le.name) return le.name;
              var te = w.call(k.call(le), /^function\s*([\w$]+)/);
              return te ? te[1] : null;
            }(C), rr = V(C, Ze);
            return "[Function" + (Et ? ": " + Et : " (anonymous)") + "]" + (rr.length > 0 ? " { " + x.call(rr, ", ") + " }" : "");
          }
          if (pe(C)) {
            var je = $ ? I.call(String(C), /^(Symbol\(.*\))_[^)]*$/, "$1") : ue.call(C);
            return typeof C != "object" || $ ? je : ee(je);
          }
          if (function(le) {
            return !le || typeof le != "object" ? false : typeof HTMLElement < "u" && le instanceof HTMLElement ? true : typeof le.nodeName == "string" && typeof le.getAttribute == "function";
          }(C)) {
            for (var Ge = "<" + N.call(String(C.nodeName)), at = C.attributes || [], Ae = 0; Ae < at.length; Ae++) Ge += " " + at[Ae].name + "=" + oe(se(at[Ae].value), "double", Y);
            return Ge += ">", C.childNodes && C.childNodes.length && (Ge += "..."), Ge += "</" + N.call(String(C.nodeName)) + ">";
          }
          if (ge(C)) {
            if (C.length === 0) return "[]";
            var qe = V(C, Ze);
            return ut && !function(le) {
              for (var te = 0; te < le.length; te++) if (_e(le[te], `
`) >= 0) return false;
              return true;
            }(qe) ? "[" + O(qe, ut) + "]" : "[ " + x.call(qe, ", ") + " ]";
          }
          if (function(le) {
            return Ve(le) === "[object Error]" && re(le);
          }(C)) {
            var Ft = V(C, Ze);
            return "cause" in Error.prototype || !("cause" in C) || J.call(C, "cause") ? Ft.length === 0 ? "[" + String(C) + "]" : "{ [" + String(C) + "] " + x.call(Ft, ", ") + " }" : "{ [" + String(C) + "] " + x.call(_.call("[cause]: " + Ze(C.cause), Ft), ", ") + " }";
          }
          if (typeof C == "object" && ae) {
            if (ie && typeof C[ie] == "function" && ne) return ne(C, { depth: Ne - A });
            if (ae !== "symbol" && typeof C.inspect == "function") return C.inspect();
          }
          if (function(le) {
            if (!f || !le || typeof le != "object") return false;
            try {
              f.call(le);
              try {
                a.call(le);
              } catch {
                return true;
              }
              return le instanceof Map;
            } catch {
            }
            return false;
          }(C)) {
            var Dt = [];
            return r && r.call(C, function(le, te) {
              Dt.push(Ze(te, C, true) + " => " + Ze(le, C));
            }), T("Map", f.call(C), Dt, ut);
          }
          if (function(le) {
            if (!a || !le || typeof le != "object") return false;
            try {
              a.call(le);
              try {
                f.call(le);
              } catch {
                return true;
              }
              return le instanceof Set;
            } catch {
            }
            return false;
          }(C)) {
            var wr = [];
            return l && l.call(C, function(le) {
              wr.push(Ze(le, C));
            }), T("Set", a.call(C), wr, ut);
          }
          if (function(le) {
            if (!d || !le || typeof le != "object") return false;
            try {
              d.call(le, d);
              try {
                b.call(le, b);
              } catch {
                return true;
              }
              return le instanceof WeakMap;
            } catch {
            }
            return false;
          }(C)) return P("WeakMap");
          if (function(le) {
            if (!b || !le || typeof le != "object") return false;
            try {
              b.call(le, b);
              try {
                d.call(le, d);
              } catch {
                return true;
              }
              return le instanceof WeakSet;
            } catch {
            }
            return false;
          }(C)) return P("WeakSet");
          if (function(le) {
            if (!S || !le || typeof le != "object") return false;
            try {
              return S.call(le), true;
            } catch {
            }
            return false;
          }(C)) return P("WeakRef");
          if (function(le) {
            return Ve(le) === "[object Number]" && re(le);
          }(C)) return ee(Ze(Number(C)));
          if (function(le) {
            if (!le || typeof le != "object" || !z) return false;
            try {
              return z.call(le), true;
            } catch {
            }
            return false;
          }(C)) return ee(Ze(z.call(C)));
          if (function(le) {
            return Ve(le) === "[object Boolean]" && re(le);
          }(C)) return ee(E.call(C));
          if (function(le) {
            return Ve(le) === "[object String]" && re(le);
          }(C)) return ee(Ze(String(C)));
          if (typeof window < "u" && C === window) return "{ [object Window] }";
          if (typeof globalThis < "u" && C === globalThis || s.g !== void 0 && C === s.g) return "{ [object globalThis] }";
          if (!function(le) {
            return Ve(le) === "[object Date]" && re(le);
          }(C) && !Te(C)) {
            var Nt = V(C, Ze), yr = B ? B(C) === Object.prototype : C instanceof Object || C.constructor === Object, Ur = C instanceof Object ? "" : "null prototype", Pe = !yr && X && Object(C) === C && X in C ? F.call(Ve(C), 8, -1) : Ur ? "Object" : "", $e = (yr || typeof C.constructor != "function" ? "" : C.constructor.name ? C.constructor.name + " " : "") + (Pe || Ur ? "[" + x.call(_.call([], Pe || [], Ur || []), ": ") + "] " : "");
            return Nt.length === 0 ? $e + "{}" : ut ? $e + "{" + O(Nt, ut) + "}" : $e + "{ " + x.call(Nt, ", ") + " }";
          }
          return String(C);
        };
        var Oe = Object.prototype.hasOwnProperty || function(D) {
          return D in this;
        };
        function xe(D, C) {
          return Oe.call(D, C);
        }
        function Ve(D) {
          return R.call(D);
        }
        function _e(D, C) {
          if (D.indexOf) return D.indexOf(C);
          for (var p = 0, A = D.length; p < A; p++) if (D[p] === C) return p;
          return -1;
        }
        function Be(D, C) {
          if (D.length > C.maxStringLength) {
            var p = D.length - C.maxStringLength, A = "... " + p + " more character" + (p > 1 ? "s" : "");
            return Be(F.call(D, 0, C.maxStringLength), C) + A;
          }
          var U = ye[C.quoteStyle || "single"];
          return U.lastIndex = 0, oe(I.call(I.call(D, U, "\\$1"), /[\x00-\x1f]/g, Qe), "single", C);
        }
        function Qe(D) {
          var C = D.charCodeAt(0), p = { 8: "b", 9: "t", 10: "n", 12: "f", 13: "r" }[C];
          return p ? "\\" + p : "\\x" + (C < 16 ? "0" : "") + q.call(C.toString(16));
        }
        function ee(D) {
          return "Object(" + D + ")";
        }
        function P(D) {
          return D + " { ? }";
        }
        function T(D, C, p, A) {
          return D + " (" + C + ") {" + (A ? O(p, A) : x.call(p, ", ")) + "}";
        }
        function O(D, C) {
          if (D.length === 0) return "";
          var p = `
` + C.prev + C.base;
          return p + x.call(D, "," + p) + `
` + C.prev;
        }
        function V(D, C) {
          var p = ge(D), A = [];
          if (p) {
            A.length = D.length;
            for (var U = 0; U < D.length; U++) A[U] = xe(D, U) ? C(D[U], D) : "";
          }
          var Y, ae = typeof Z == "function" ? Z(D) : [];
          if ($) {
            Y = {};
            for (var W = 0; W < ae.length; W++) Y["$" + ae[W]] = ae[W];
          }
          for (var de in D) xe(D, de) && (p && String(Number(de)) === de && de < D.length || $ && Y["$" + de] instanceof Symbol || (H.call(/[^\w$]/, de) ? A.push(C(de, D) + ": " + C(D[de], D)) : A.push(de + ": " + C(D[de], D))));
          if (typeof Z == "function") for (var tt = 0; tt < ae.length; tt++) J.call(D, ae[tt]) && A.push("[" + C(ae[tt]) + "]: " + C(D[ae[tt]], D));
          return A;
        }
      }, 8968: (t) => {
        t.exports = Math.floor;
      }, 9032: (t, o, s) => {
        var c = s(7244), h = s(8184), f = s(5767), r = s(5680);
        function m(B) {
          return B.call.bind(B);
        }
        var g = typeof BigInt < "u", a = typeof Symbol < "u", l = m(Object.prototype.toString), d = m(Number.prototype.valueOf), b = m(String.prototype.valueOf), S = m(Boolean.prototype.valueOf);
        if (g) var E = m(BigInt.prototype.valueOf);
        if (a) var R = m(Symbol.prototype.valueOf);
        function k(B, Q) {
          if (typeof B != "object") return false;
          try {
            return Q(B), true;
          } catch {
            return false;
          }
        }
        function w(B) {
          return l(B) === "[object Map]";
        }
        function F(B) {
          return l(B) === "[object Set]";
        }
        function I(B) {
          return l(B) === "[object WeakMap]";
        }
        function q(B) {
          return l(B) === "[object WeakSet]";
        }
        function N(B) {
          return l(B) === "[object ArrayBuffer]";
        }
        function H(B) {
          return typeof ArrayBuffer < "u" && (N.working ? N(B) : B instanceof ArrayBuffer);
        }
        function _(B) {
          return l(B) === "[object DataView]";
        }
        function x(B) {
          return typeof DataView < "u" && (_.working ? _(B) : B instanceof DataView);
        }
        o.isArgumentsObject = c, o.isGeneratorFunction = h, o.isTypedArray = r, o.isPromise = function(B) {
          return typeof Promise < "u" && B instanceof Promise || B !== null && typeof B == "object" && typeof B.then == "function" && typeof B.catch == "function";
        }, o.isArrayBufferView = function(B) {
          return typeof ArrayBuffer < "u" && ArrayBuffer.isView ? ArrayBuffer.isView(B) : r(B) || x(B);
        }, o.isUint8Array = function(B) {
          return f(B) === "Uint8Array";
        }, o.isUint8ClampedArray = function(B) {
          return f(B) === "Uint8ClampedArray";
        }, o.isUint16Array = function(B) {
          return f(B) === "Uint16Array";
        }, o.isUint32Array = function(B) {
          return f(B) === "Uint32Array";
        }, o.isInt8Array = function(B) {
          return f(B) === "Int8Array";
        }, o.isInt16Array = function(B) {
          return f(B) === "Int16Array";
        }, o.isInt32Array = function(B) {
          return f(B) === "Int32Array";
        }, o.isFloat32Array = function(B) {
          return f(B) === "Float32Array";
        }, o.isFloat64Array = function(B) {
          return f(B) === "Float64Array";
        }, o.isBigInt64Array = function(B) {
          return f(B) === "BigInt64Array";
        }, o.isBigUint64Array = function(B) {
          return f(B) === "BigUint64Array";
        }, w.working = typeof Map < "u" && w(/* @__PURE__ */ new Map()), o.isMap = function(B) {
          return typeof Map < "u" && (w.working ? w(B) : B instanceof Map);
        }, F.working = typeof Set < "u" && F(/* @__PURE__ */ new Set()), o.isSet = function(B) {
          return typeof Set < "u" && (F.working ? F(B) : B instanceof Set);
        }, I.working = typeof WeakMap < "u" && I(/* @__PURE__ */ new WeakMap()), o.isWeakMap = function(B) {
          return typeof WeakMap < "u" && (I.working ? I(B) : B instanceof WeakMap);
        }, q.working = typeof WeakSet < "u" && q(/* @__PURE__ */ new WeakSet()), o.isWeakSet = function(B) {
          return q(B);
        }, N.working = typeof ArrayBuffer < "u" && N(new ArrayBuffer()), o.isArrayBuffer = H, _.working = typeof ArrayBuffer < "u" && typeof DataView < "u" && _(new DataView(new ArrayBuffer(1), 0, 1)), o.isDataView = x;
        var L = typeof SharedArrayBuffer < "u" ? SharedArrayBuffer : void 0;
        function j(B) {
          return l(B) === "[object SharedArrayBuffer]";
        }
        function z(B) {
          return L !== void 0 && (j.working === void 0 && (j.working = j(new L())), j.working ? j(B) : B instanceof L);
        }
        function Z(B) {
          return k(B, d);
        }
        function ue(B) {
          return k(B, b);
        }
        function $(B) {
          return k(B, S);
        }
        function X(B) {
          return g && k(B, E);
        }
        function J(B) {
          return a && k(B, R);
        }
        o.isSharedArrayBuffer = z, o.isAsyncFunction = function(B) {
          return l(B) === "[object AsyncFunction]";
        }, o.isMapIterator = function(B) {
          return l(B) === "[object Map Iterator]";
        }, o.isSetIterator = function(B) {
          return l(B) === "[object Set Iterator]";
        }, o.isGeneratorObject = function(B) {
          return l(B) === "[object Generator]";
        }, o.isWebAssemblyCompiledModule = function(B) {
          return l(B) === "[object WebAssembly.Module]";
        }, o.isNumberObject = Z, o.isStringObject = ue, o.isBooleanObject = $, o.isBigIntObject = X, o.isSymbolObject = J, o.isBoxedPrimitive = function(B) {
          return Z(B) || ue(B) || $(B) || X(B) || J(B);
        }, o.isAnyArrayBuffer = function(B) {
          return typeof Uint8Array < "u" && (H(B) || z(B));
        }, ["isProxy", "isExternal", "isModuleNamespaceObject"].forEach(function(B) {
          Object.defineProperty(o, B, { enumerable: false, value: function() {
            throw new Error(B + " is not supported in userland");
          } });
        });
      }, 9073: (t, o, s) => {
        Object.defineProperty(o, "__esModule", { value: true }), o.createPassiveSellOffer = function(f) {
          var r = {};
          if (r.selling = f.selling.toXDRObject(), r.buying = f.buying.toXDRObject(), !this.isValidAmount(f.amount)) throw new TypeError(this.constructAmountRequirementsError("amount"));
          if (r.amount = this._toXDRAmount(f.amount), f.price === void 0) throw new TypeError("price argument is required");
          r.price = this._toXDRPrice(f.price);
          var m = new h.default.CreatePassiveSellOfferOp(r), g = {};
          return g.body = h.default.OperationBody.createPassiveSellOffer(m), this.setSourceAccount(g, f), new h.default.Operation(g);
        };
        var c, h = (c = s(1918)) && c.__esModule ? c : { default: c };
      }, 9092: (t, o, s) => {
        var c = s(1333);
        t.exports = function() {
          return c() && !!Symbol.toStringTag;
        };
      }, 9127: function(t, o, s) {
        var c, h, f;
        (function(r, m) {
          t.exports ? t.exports = m(s(4193)) : (h = [s(4193)], (f = typeof (c = m) == "function" ? c.apply(o, h) : c) === void 0 || (t.exports = f));
        })(0, function(r, m) {
          var g = m && m.URITemplate, a = Object.prototype.hasOwnProperty;
          function l(E) {
            return l._cache[E] ? l._cache[E] : this instanceof l ? (this.expression = E, l._cache[E] = this, this) : new l(E);
          }
          function d(E) {
            this.data = E, this.cache = {};
          }
          var b = l.prototype, S = { "": { prefix: "", separator: ",", named: false, empty_name_separator: false, encode: "encode" }, "+": { prefix: "", separator: ",", named: false, empty_name_separator: false, encode: "encodeReserved" }, "#": { prefix: "#", separator: ",", named: false, empty_name_separator: false, encode: "encodeReserved" }, ".": { prefix: ".", separator: ".", named: false, empty_name_separator: false, encode: "encode" }, "/": { prefix: "/", separator: "/", named: false, empty_name_separator: false, encode: "encode" }, ";": { prefix: ";", separator: ";", named: true, empty_name_separator: false, encode: "encode" }, "?": { prefix: "?", separator: "&", named: true, empty_name_separator: true, encode: "encode" }, "&": { prefix: "&", separator: "&", named: true, empty_name_separator: true, encode: "encode" } };
          return l._cache = {}, l.EXPRESSION_PATTERN = /\{([^a-zA-Z0-9%_]?)([^\}]+)(\}|$)/g, l.VARIABLE_PATTERN = /^([^*:.](?:\.?[^*:.])*)((\*)|:(\d+))?$/, l.VARIABLE_NAME_PATTERN = /[^a-zA-Z0-9%_.]/, l.LITERAL_PATTERN = /[<>{}"`^| \\]/, l.expand = function(E, R, k) {
            var w, F, I, q = S[E.operator], N = q.named ? "Named" : "Unnamed", H = E.variables, _ = [];
            for (I = 0; F = H[I]; I++) {
              if ((w = R.get(F.name)).type === 0 && k && k.strict) throw new Error('Missing expansion value for variable "' + F.name + '"');
              if (w.val.length) {
                if (w.type > 1 && F.maxlength) throw new Error('Invalid expression: Prefix modifier not applicable to variable "' + F.name + '"');
                _.push(l["expand" + N](w, q, F.explode, F.explode && q.separator || ",", F.maxlength, F.name));
              } else w.type && _.push("");
            }
            return _.length ? q.prefix + _.join(q.separator) : "";
          }, l.expandNamed = function(E, R, k, w, F, I) {
            var q, N, H, _ = "", x = R.encode, L = R.empty_name_separator, j = !E[x].length, z = E.type === 2 ? "" : r[x](I);
            for (N = 0, H = E.val.length; N < H; N++) F ? (q = r[x](E.val[N][1].substring(0, F)), E.type === 2 && (z = r[x](E.val[N][0].substring(0, F)))) : j ? (q = r[x](E.val[N][1]), E.type === 2 ? (z = r[x](E.val[N][0]), E[x].push([z, q])) : E[x].push([void 0, q])) : (q = E[x][N][1], E.type === 2 && (z = E[x][N][0])), _ && (_ += w), k ? _ += z + (L || q ? "=" : "") + q : (N || (_ += r[x](I) + (L || q ? "=" : "")), E.type === 2 && (_ += z + ","), _ += q);
            return _;
          }, l.expandUnnamed = function(E, R, k, w, F) {
            var I, q, N, H = "", _ = R.encode, x = R.empty_name_separator, L = !E[_].length;
            for (q = 0, N = E.val.length; q < N; q++) F ? I = r[_](E.val[q][1].substring(0, F)) : L ? (I = r[_](E.val[q][1]), E[_].push([E.type === 2 ? r[_](E.val[q][0]) : void 0, I])) : I = E[_][q][1], H && (H += w), E.type === 2 && (H += F ? r[_](E.val[q][0].substring(0, F)) : E[_][q][0], H += k ? x || I ? "=" : "" : ","), H += I;
            return H;
          }, l.noConflict = function() {
            return m.URITemplate === l && (m.URITemplate = g), l;
          }, b.expand = function(E, R) {
            var k = "";
            this.parts && this.parts.length || this.parse(), E instanceof d || (E = new d(E));
            for (var w = 0, F = this.parts.length; w < F; w++) k += typeof this.parts[w] == "string" ? this.parts[w] : l.expand(this.parts[w], E, R);
            return k;
          }, b.parse = function() {
            var E, R, k, w = this.expression, F = l.EXPRESSION_PATTERN, I = l.VARIABLE_PATTERN, q = l.VARIABLE_NAME_PATTERN, N = l.LITERAL_PATTERN, H = [], _ = 0, x = function(z) {
              if (z.match(N)) throw new Error('Invalid Literal "' + z + '"');
              return z;
            };
            for (F.lastIndex = 0; ; ) {
              if ((R = F.exec(w)) === null) {
                H.push(x(w.substring(_)));
                break;
              }
              if (H.push(x(w.substring(_, R.index))), _ = R.index + R[0].length, !S[R[1]]) throw new Error('Unknown Operator "' + R[1] + '" in "' + R[0] + '"');
              if (!R[3]) throw new Error('Unclosed Expression "' + R[0] + '"');
              for (var L = 0, j = (E = R[2].split(",")).length; L < j; L++) {
                if ((k = E[L].match(I)) === null) throw new Error('Invalid Variable "' + E[L] + '" in "' + R[0] + '"');
                if (k[1].match(q)) throw new Error('Invalid Variable Name "' + k[1] + '" in "' + R[0] + '"');
                E[L] = { name: k[1], explode: !!k[3], maxlength: k[4] && parseInt(k[4], 10) };
              }
              if (!E.length) throw new Error('Expression Missing Variable(s) "' + R[0] + '"');
              H.push({ expression: R[0], operator: R[1], variables: E });
            }
            return H.length || H.push(x(w)), this.parts = H, this;
          }, d.prototype.get = function(E) {
            var R, k, w, F = this.data, I = { type: 0, val: [], encode: [], encodeReserved: [] };
            if (this.cache[E] !== void 0) return this.cache[E];
            if (this.cache[E] = I, (w = String(Object.prototype.toString.call(F)) === "[object Function]" ? F(E) : String(Object.prototype.toString.call(F[E])) === "[object Function]" ? F[E](E) : F[E]) == null) return I;
            if (String(Object.prototype.toString.call(w)) === "[object Array]") {
              for (R = 0, k = w.length; R < k; R++) w[R] !== void 0 && w[R] !== null && I.val.push([void 0, String(w[R])]);
              I.val.length && (I.type = 3);
            } else if (String(Object.prototype.toString.call(w)) === "[object Object]") {
              for (R in w) a.call(w, R) && w[R] !== void 0 && w[R] !== null && I.val.push([R, String(w[R])]);
              I.val.length && (I.type = 2);
            } else I.type = 1, I.val.push([void 0, String(w)]);
            return I;
          }, r.expand = function(E, R) {
            var k = new l(E).expand(R);
            return new r(k);
          }, l;
        });
      }, 9152: (t, o, s) => {
        Object.defineProperty(o, "__esModule", { value: true }), o.hash = function(h) {
          var f = new c.sha256();
          return f.update(h, "utf8"), f.digest();
        };
        var c = s(2802);
      }, 9209: (t, o, s) => {
        var c = s(6578), h = typeof globalThis > "u" ? s.g : globalThis;
        t.exports = function() {
          for (var f = [], r = 0; r < c.length; r++) typeof h[c[r]] == "function" && (f[f.length] = c[r]);
          return f;
        };
      }, 9260: (t, o, s) => {
        var c = s(8287).Buffer;
        function h(w) {
          return h = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(F) {
            return typeof F;
          } : function(F) {
            return F && typeof Symbol == "function" && F.constructor === Symbol && F !== Symbol.prototype ? "symbol" : typeof F;
          }, h(w);
        }
        Object.defineProperty(o, "__esModule", { value: true }), o.FeeBumpTransaction = void 0;
        var f, r = (f = s(1918)) && f.__esModule ? f : { default: f }, m = s(9152), g = s(380), a = s(3758), l = s(6160);
        function d(w, F) {
          for (var I = 0; I < F.length; I++) {
            var q = F[I];
            q.enumerable = q.enumerable || false, q.configurable = true, "value" in q && (q.writable = true), Object.defineProperty(w, b(q.key), q);
          }
        }
        function b(w) {
          var F = function(I, q) {
            if (h(I) != "object" || !I) return I;
            var N = I[Symbol.toPrimitive];
            if (N !== void 0) {
              var H = N.call(I, q);
              if (h(H) != "object") return H;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(I);
          }(w, "string");
          return h(F) == "symbol" ? F : F + "";
        }
        function S(w, F, I) {
          return F = R(F), function(q, N) {
            if (N && (h(N) == "object" || typeof N == "function")) return N;
            if (N !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
            return function(H) {
              if (H === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return H;
            }(q);
          }(w, E() ? Reflect.construct(F, I || [], R(w).constructor) : F.apply(w, I));
        }
        function E() {
          try {
            var w = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            }));
          } catch {
          }
          return (E = function() {
            return !!w;
          })();
        }
        function R(w) {
          return R = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(F) {
            return F.__proto__ || Object.getPrototypeOf(F);
          }, R(w);
        }
        function k(w, F) {
          return k = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(I, q) {
            return I.__proto__ = q, I;
          }, k(w, F);
        }
        o.FeeBumpTransaction = function(w) {
          function F(I, q) {
            var N;
            if (function(Z, ue) {
              if (!(Z instanceof ue)) throw new TypeError("Cannot call a class as a function");
            }(this, F), typeof I == "string") {
              var H = c.from(I, "base64");
              I = r.default.TransactionEnvelope.fromXDR(H);
            }
            var _ = I.switch();
            if (_ !== r.default.EnvelopeType.envelopeTypeTxFeeBump()) throw new Error("Invalid TransactionEnvelope: expected an envelopeTypeTxFeeBump but received an ".concat(_.name, "."));
            var x = I.value(), L = x.tx(), j = L.fee().toString();
            N = S(this, F, [L, (x.signatures() || []).slice(), j, q]);
            var z = r.default.TransactionEnvelope.envelopeTypeTx(L.innerTx().v1());
            return N._feeSource = (0, l.encodeMuxedAccountToAddress)(N.tx.feeSource()), N._innerTransaction = new g.Transaction(z, q), N;
          }
          return function(I, q) {
            if (typeof q != "function" && q !== null) throw new TypeError("Super expression must either be null or a function");
            I.prototype = Object.create(q && q.prototype, { constructor: { value: I, writable: true, configurable: true } }), Object.defineProperty(I, "prototype", { writable: false }), q && k(I, q);
          }(F, w), function(I, q, N) {
            return q && d(I.prototype, q), Object.defineProperty(I, "prototype", { writable: false }), I;
          }(F, [{ key: "innerTransaction", get: function() {
            return this._innerTransaction;
          } }, { key: "operations", get: function() {
            return this._innerTransaction.operations;
          } }, { key: "feeSource", get: function() {
            return this._feeSource;
          } }, { key: "signatureBase", value: function() {
            var I = new r.default.TransactionSignaturePayloadTaggedTransaction.envelopeTypeTxFeeBump(this.tx);
            return new r.default.TransactionSignaturePayload({ networkId: r.default.Hash.fromXDR((0, m.hash)(this.networkPassphrase)), taggedTransaction: I }).toXDR();
          } }, { key: "toEnvelope", value: function() {
            var I = new r.default.FeeBumpTransactionEnvelope({ tx: r.default.FeeBumpTransaction.fromXDR(this.tx.toXDR()), signatures: this.signatures.slice() });
            return new r.default.TransactionEnvelope.envelopeTypeTxFeeBump(I);
          } }]);
        }(a.TransactionBase);
      }, 9290: (t) => {
        t.exports = RangeError;
      }, 9340: function(t, o, s) {
        var c;
        t = s.nmd(t), function() {
          o && o.nodeType, t && t.nodeType;
          var h = typeof s.g == "object" && s.g;
          h.global !== h && h.window !== h && h.self;
          var f, r = 2147483647, m = 36, g = /^xn--/, a = /[^\x20-\x7E]/, l = /[\x2E\u3002\uFF0E\uFF61]/g, d = { overflow: "Overflow: input needs wider integers to process", "not-basic": "Illegal input >= 0x80 (not a basic code point)", "invalid-input": "Invalid input" }, b = Math.floor, S = String.fromCharCode;
          function E(_) {
            throw new RangeError(d[_]);
          }
          function R(_, x) {
            for (var L = _.length, j = []; L--; ) j[L] = x(_[L]);
            return j;
          }
          function k(_, x) {
            var L = _.split("@"), j = "";
            return L.length > 1 && (j = L[0] + "@", _ = L[1]), j + R((_ = _.replace(l, ".")).split("."), x).join(".");
          }
          function w(_) {
            for (var x, L, j = [], z = 0, Z = _.length; z < Z; ) (x = _.charCodeAt(z++)) >= 55296 && x <= 56319 && z < Z ? (64512 & (L = _.charCodeAt(z++))) == 56320 ? j.push(((1023 & x) << 10) + (1023 & L) + 65536) : (j.push(x), z--) : j.push(x);
            return j;
          }
          function F(_) {
            return R(_, function(x) {
              var L = "";
              return x > 65535 && (L += S((x -= 65536) >>> 10 & 1023 | 55296), x = 56320 | 1023 & x), L += S(x);
            }).join("");
          }
          function I(_, x) {
            return _ + 22 + 75 * (_ < 26) - ((x != 0) << 5);
          }
          function q(_, x, L) {
            var j = 0;
            for (_ = L ? b(_ / 700) : _ >> 1, _ += b(_ / x); _ > 455; j += m) _ = b(_ / 35);
            return b(j + 36 * _ / (_ + 38));
          }
          function N(_) {
            var x, L, j, z, Z, ue, $, X, J, B, Q, ne = [], K = _.length, ie = 0, ce = 128, ye = 72;
            for ((L = _.lastIndexOf("-")) < 0 && (L = 0), j = 0; j < L; ++j) _.charCodeAt(j) >= 128 && E("not-basic"), ne.push(_.charCodeAt(j));
            for (z = L > 0 ? L + 1 : 0; z < K; ) {
              for (Z = ie, ue = 1, $ = m; z >= K && E("invalid-input"), ((X = (Q = _.charCodeAt(z++)) - 48 < 10 ? Q - 22 : Q - 65 < 26 ? Q - 65 : Q - 97 < 26 ? Q - 97 : m) >= m || X > b((r - ie) / ue)) && E("overflow"), ie += X * ue, !(X < (J = $ <= ye ? 1 : $ >= ye + 26 ? 26 : $ - ye)); $ += m) ue > b(r / (B = m - J)) && E("overflow"), ue *= B;
              ye = q(ie - Z, x = ne.length + 1, Z == 0), b(ie / x) > r - ce && E("overflow"), ce += b(ie / x), ie %= x, ne.splice(ie++, 0, ce);
            }
            return F(ne);
          }
          function H(_) {
            var x, L, j, z, Z, ue, $, X, J, B, Q, ne, K, ie, ce, ye = [];
            for (ne = (_ = w(_)).length, x = 128, L = 0, Z = 72, ue = 0; ue < ne; ++ue) (Q = _[ue]) < 128 && ye.push(S(Q));
            for (j = z = ye.length, z && ye.push("-"); j < ne; ) {
              for ($ = r, ue = 0; ue < ne; ++ue) (Q = _[ue]) >= x && Q < $ && ($ = Q);
              for ($ - x > b((r - L) / (K = j + 1)) && E("overflow"), L += ($ - x) * K, x = $, ue = 0; ue < ne; ++ue) if ((Q = _[ue]) < x && ++L > r && E("overflow"), Q == x) {
                for (X = L, J = m; !(X < (B = J <= Z ? 1 : J >= Z + 26 ? 26 : J - Z)); J += m) ce = X - B, ie = m - B, ye.push(S(I(B + ce % ie, 0))), X = b(ce / ie);
                ye.push(S(I(X, 0))), Z = q(L, K, j == z), L = 0, ++j;
              }
              ++L, ++x;
            }
            return ye.join("");
          }
          f = { version: "1.3.2", ucs2: { decode: w, encode: F }, decode: N, encode: H, toASCII: function(_) {
            return k(_, function(x) {
              return a.test(x) ? "xn--" + H(x) : x;
            });
          }, toUnicode: function(_) {
            return k(_, function(x) {
              return g.test(x) ? N(x.slice(4).toLowerCase()) : x;
            });
          } }, (c = (function() {
            return f;
          }).call(o, s, o, t)) === void 0 || (t.exports = c);
        }();
      }, 9353: (t, o, s) => {
        Object.defineProperty(o, "__esModule", { value: true }), o.LiquidityPoolId = void 0;
        var c, h = (c = s(1918)) && c.__esModule ? c : { default: c };
        function f(g) {
          return f = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(a) {
            return typeof a;
          } : function(a) {
            return a && typeof Symbol == "function" && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a;
          }, f(g);
        }
        function r(g, a) {
          for (var l = 0; l < a.length; l++) {
            var d = a[l];
            d.enumerable = d.enumerable || false, d.configurable = true, "value" in d && (d.writable = true), Object.defineProperty(g, m(d.key), d);
          }
        }
        function m(g) {
          var a = function(l, d) {
            if (f(l) != "object" || !l) return l;
            var b = l[Symbol.toPrimitive];
            if (b !== void 0) {
              var S = b.call(l, d);
              if (f(S) != "object") return S;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(l);
          }(g, "string");
          return f(a) == "symbol" ? a : a + "";
        }
        o.LiquidityPoolId = function() {
          return function(g, a, l) {
            return a && r(g.prototype, a), l && r(g, l), Object.defineProperty(g, "prototype", { writable: false }), g;
          }(function g(a) {
            if (function(l, d) {
              if (!(l instanceof d)) throw new TypeError("Cannot call a class as a function");
            }(this, g), !a) throw new Error("liquidityPoolId cannot be empty");
            if (!/^[a-f0-9]{64}$/.test(a)) throw new Error("Liquidity pool ID is not a valid hash");
            this.liquidityPoolId = a;
          }, [{ key: "toXDRObject", value: function() {
            var g = h.default.PoolId.fromXDR(this.liquidityPoolId, "hex");
            return new h.default.TrustLineAsset("assetTypePoolShare", g);
          } }, { key: "getLiquidityPoolId", value: function() {
            return String(this.liquidityPoolId);
          } }, { key: "getAssetType", value: function() {
            return "liquidity_pool_shares";
          } }, { key: "equals", value: function(g) {
            return this.liquidityPoolId === g.getLiquidityPoolId();
          } }, { key: "toString", value: function() {
            return "liquidity_pool:".concat(this.liquidityPoolId);
          } }], [{ key: "fromOperation", value: function(g) {
            var a = g.switch();
            if (a === h.default.AssetType.assetTypePoolShare()) return new this(g.liquidityPoolId().toString("hex"));
            throw new Error("Invalid asset type: ".concat(a.name));
          } }]);
        }();
      }, 9383: (t) => {
        t.exports = Error;
      }, 9538: (t) => {
        t.exports = ReferenceError;
      }, 9600: (t) => {
        var o, s, c = Function.prototype.toString, h = typeof Reflect == "object" && Reflect !== null && Reflect.apply;
        if (typeof h == "function" && typeof Object.defineProperty == "function") try {
          o = Object.defineProperty({}, "length", { get: function() {
            throw s;
          } }), s = {}, h(function() {
            throw 42;
          }, null, o);
        } catch (S) {
          S !== s && (h = null);
        }
        else h = null;
        var f = /^\s*class\b/, r = function(S) {
          try {
            var E = c.call(S);
            return f.test(E);
          } catch {
            return false;
          }
        }, m = function(S) {
          try {
            return !r(S) && (c.call(S), true);
          } catch {
            return false;
          }
        }, g = Object.prototype.toString, a = typeof Symbol == "function" && !!Symbol.toStringTag, l = !(0 in [,]), d = function() {
          return false;
        };
        if (typeof document == "object") {
          var b = document.all;
          g.call(b) === g.call(document.all) && (d = function(S) {
            if ((l || !S) && (S === void 0 || typeof S == "object")) try {
              var E = g.call(S);
              return (E === "[object HTMLAllCollection]" || E === "[object HTML document.all class]" || E === "[object HTMLCollection]" || E === "[object Object]") && S("") == null;
            } catch {
            }
            return false;
          });
        }
        t.exports = h ? function(S) {
          if (d(S)) return true;
          if (!S || typeof S != "function" && typeof S != "object") return false;
          try {
            h(S, null, o);
          } catch (E) {
            if (E !== s) return false;
          }
          return !r(S) && m(S);
        } : function(S) {
          if (d(S)) return true;
          if (!S || typeof S != "function" && typeof S != "object") return false;
          if (a) return m(S);
          if (r(S)) return false;
          var E = g.call(S);
          return !(E !== "[object Function]" && E !== "[object GeneratorFunction]" && !/^\[object HTML/.test(E)) && m(S);
        };
      }, 9612: (t) => {
        t.exports = Object;
      }, 9675: (t) => {
        t.exports = TypeError;
      }, 9721: (t, o, s) => {
        var c = s(6556), h = s(4035), f = c("RegExp.prototype.exec"), r = s(9675);
        t.exports = function(m) {
          if (!h(m)) throw new r("`regex` must be a RegExp");
          return function(g) {
            return f(m, g) !== null;
          };
        };
      }, 9838: () => {
      }, 9845: (t, o, s) => {
        Object.defineProperty(o, "__esModule", { value: true }), o.liquidityPoolDeposit = function() {
          var f = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, r = f.liquidityPoolId, m = f.maxAmountA, g = f.maxAmountB, a = f.minPrice, l = f.maxPrice, d = {};
          if (!r) throw new TypeError("liquidityPoolId argument is required");
          if (d.liquidityPoolId = h.default.PoolId.fromXDR(r, "hex"), !this.isValidAmount(m, true)) throw new TypeError(this.constructAmountRequirementsError("maxAmountA"));
          if (d.maxAmountA = this._toXDRAmount(m), !this.isValidAmount(g, true)) throw new TypeError(this.constructAmountRequirementsError("maxAmountB"));
          if (d.maxAmountB = this._toXDRAmount(g), a === void 0) throw new TypeError("minPrice argument is required");
          if (d.minPrice = this._toXDRPrice(a), l === void 0) throw new TypeError("maxPrice argument is required");
          d.maxPrice = this._toXDRPrice(l);
          var b = new h.default.LiquidityPoolDepositOp(d), S = { body: h.default.OperationBody.liquidityPoolDeposit(b) };
          return this.setSourceAccount(S, f), new h.default.Operation(S);
        };
        var c, h = (c = s(1918)) && c.__esModule ? c : { default: c };
      }, 9957: (t, o, s) => {
        var c = Function.prototype.call, h = Object.prototype.hasOwnProperty, f = s(6743);
        t.exports = f.call(c, h);
      }, 9983: (t, o, s) => {
        function c(b) {
          return c = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(S) {
            return typeof S;
          } : function(S) {
            return S && typeof Symbol == "function" && S.constructor === Symbol && S !== Symbol.prototype ? "symbol" : typeof S;
          }, c(b);
        }
        function h(b, S) {
          for (var E = 0; E < S.length; E++) {
            var R = S[E];
            R.enumerable = R.enumerable || false, R.configurable = true, "value" in R && (R.writable = true), Object.defineProperty(b, f(R.key), R);
          }
        }
        function f(b) {
          var S = function(E, R) {
            if (c(E) != "object" || !E) return E;
            var k = E[Symbol.toPrimitive];
            if (k !== void 0) {
              var w = k.call(E, R);
              if (c(w) != "object") return w;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(E);
          }(b, "string");
          return c(S) == "symbol" ? S : S + "";
        }
        s.d(o, { vt: () => l, ok: () => a }), r = function b(S) {
          var E, R = this;
          (function(k, w) {
            if (!(k instanceof w)) throw new TypeError("Cannot call a class as a function");
          })(this, b), this.promise = new Promise(function(k) {
            E = k;
          }), S(function(k) {
            R.reason = k, E();
          });
        }, (m = [{ key: "throwIfRequested", value: function() {
          if (this.reason) throw new Error(this.reason);
        } }]) && h(r.prototype, m), g && h(r, g), Object.defineProperty(r, "prototype", { writable: false });
        var r, m, g, a, l, d = s(6121);
        a = d.axiosClient, l = d.create;
      } }, u = {};
      function y(t) {
        var o = u[t];
        if (o !== void 0) return o.exports;
        var s = u[t] = { id: t, loaded: false, exports: {} };
        return i[t].call(s.exports, s, s.exports, y), s.loaded = true, s.exports;
      }
      return y.n = (t) => {
        var o = t && t.__esModule ? () => t.default : () => t;
        return y.d(o, { a: o }), o;
      }, y.d = (t, o) => {
        for (var s in o) y.o(o, s) && !y.o(t, s) && Object.defineProperty(t, s, { enumerable: true, get: o[s] });
      }, y.g = function() {
        if (typeof globalThis == "object") return globalThis;
        try {
          return this || new Function("return this")();
        } catch {
          if (typeof window == "object") return window;
        }
      }(), y.hmd = (t) => ((t = Object.create(t)).children || (t.children = []), Object.defineProperty(t, "exports", { enumerable: true, set: () => {
        throw new Error("ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: " + t.id);
      } }), t), y.o = (t, o) => Object.prototype.hasOwnProperty.call(t, o), y.r = (t) => {
        typeof Symbol < "u" && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(t, "__esModule", { value: true });
      }, y.nmd = (t) => (t.paths = [], t.children || (t.children = []), t), y(1924);
    })());
  }(Mc)), Mc.exports;
}
var Yn = uy(), rc = { exports: {} };
/*!
* jQuery JavaScript Library v3.7.1
* https://jquery.com/
*
* Copyright OpenJS Foundation and other contributors
* Released under the MIT license
* https://jquery.org/license
*
* Date: 2023-08-28T13:37Z
*/
var cy = rc.exports, Af;
function ly() {
  return Af || (Af = 1, function(v) {
    (function(e, n) {
      v.exports = e.document ? n(e, true) : function(i) {
        if (!i.document) throw new Error("jQuery requires a window with a document");
        return n(i);
      };
    })(typeof window < "u" ? window : cy, function(e, n) {
      var i = [], u = Object.getPrototypeOf, y = i.slice, t = i.flat ? function(M) {
        return i.flat.call(M);
      } : function(M) {
        return i.concat.apply([], M);
      }, o = i.push, s = i.indexOf, c = {}, h = c.toString, f = c.hasOwnProperty, r = f.toString, m = r.call(Object), g = {}, a = function(G) {
        return typeof G == "function" && typeof G.nodeType != "number" && typeof G.item != "function";
      }, l = function(G) {
        return G != null && G === G.window;
      }, d = e.document, b = { type: true, src: true, nonce: true, noModule: true };
      function S(M, G, fe) {
        fe = fe || d;
        var Se, Ce, Re = fe.createElement("script");
        if (Re.text = M, G) for (Se in b) Ce = G[Se] || G.getAttribute && G.getAttribute(Se), Ce && Re.setAttribute(Se, Ce);
        fe.head.appendChild(Re).parentNode.removeChild(Re);
      }
      function E(M) {
        return M == null ? M + "" : typeof M == "object" || typeof M == "function" ? c[h.call(M)] || "object" : typeof M;
      }
      var R = "3.7.1", k = /HTML$/i, w = function(M, G) {
        return new w.fn.init(M, G);
      };
      w.fn = w.prototype = { jquery: R, constructor: w, length: 0, toArray: function() {
        return y.call(this);
      }, get: function(M) {
        return M == null ? y.call(this) : M < 0 ? this[M + this.length] : this[M];
      }, pushStack: function(M) {
        var G = w.merge(this.constructor(), M);
        return G.prevObject = this, G;
      }, each: function(M) {
        return w.each(this, M);
      }, map: function(M) {
        return this.pushStack(w.map(this, function(G, fe) {
          return M.call(G, fe, G);
        }));
      }, slice: function() {
        return this.pushStack(y.apply(this, arguments));
      }, first: function() {
        return this.eq(0);
      }, last: function() {
        return this.eq(-1);
      }, even: function() {
        return this.pushStack(w.grep(this, function(M, G) {
          return (G + 1) % 2;
        }));
      }, odd: function() {
        return this.pushStack(w.grep(this, function(M, G) {
          return G % 2;
        }));
      }, eq: function(M) {
        var G = this.length, fe = +M + (M < 0 ? G : 0);
        return this.pushStack(fe >= 0 && fe < G ? [this[fe]] : []);
      }, end: function() {
        return this.prevObject || this.constructor();
      }, push: o, sort: i.sort, splice: i.splice }, w.extend = w.fn.extend = function() {
        var M, G, fe, Se, Ce, Re, Je = arguments[0] || {}, Ut = 1, _t = arguments.length, Ht = false;
        for (typeof Je == "boolean" && (Ht = Je, Je = arguments[Ut] || {}, Ut++), typeof Je != "object" && !a(Je) && (Je = {}), Ut === _t && (Je = this, Ut--); Ut < _t; Ut++) if ((M = arguments[Ut]) != null) for (G in M) Se = M[G], !(G === "__proto__" || Je === Se) && (Ht && Se && (w.isPlainObject(Se) || (Ce = Array.isArray(Se))) ? (fe = Je[G], Ce && !Array.isArray(fe) ? Re = [] : !Ce && !w.isPlainObject(fe) ? Re = {} : Re = fe, Ce = false, Je[G] = w.extend(Ht, Re, Se)) : Se !== void 0 && (Je[G] = Se));
        return Je;
      }, w.extend({ expando: "jQuery" + (R + Math.random()).replace(/\D/g, ""), isReady: true, error: function(M) {
        throw new Error(M);
      }, noop: function() {
      }, isPlainObject: function(M) {
        var G, fe;
        return !M || h.call(M) !== "[object Object]" ? false : (G = u(M), G ? (fe = f.call(G, "constructor") && G.constructor, typeof fe == "function" && r.call(fe) === m) : true);
      }, isEmptyObject: function(M) {
        var G;
        for (G in M) return false;
        return true;
      }, globalEval: function(M, G, fe) {
        S(M, { nonce: G && G.nonce }, fe);
      }, each: function(M, G) {
        var fe, Se = 0;
        if (F(M)) for (fe = M.length; Se < fe && G.call(M[Se], Se, M[Se]) !== false; Se++) ;
        else for (Se in M) if (G.call(M[Se], Se, M[Se]) === false) break;
        return M;
      }, text: function(M) {
        var G, fe = "", Se = 0, Ce = M.nodeType;
        if (!Ce) for (; G = M[Se++]; ) fe += w.text(G);
        return Ce === 1 || Ce === 11 ? M.textContent : Ce === 9 ? M.documentElement.textContent : Ce === 3 || Ce === 4 ? M.nodeValue : fe;
      }, makeArray: function(M, G) {
        var fe = G || [];
        return M != null && (F(Object(M)) ? w.merge(fe, typeof M == "string" ? [M] : M) : o.call(fe, M)), fe;
      }, inArray: function(M, G, fe) {
        return G == null ? -1 : s.call(G, M, fe);
      }, isXMLDoc: function(M) {
        var G = M && M.namespaceURI, fe = M && (M.ownerDocument || M).documentElement;
        return !k.test(G || fe && fe.nodeName || "HTML");
      }, merge: function(M, G) {
        for (var fe = +G.length, Se = 0, Ce = M.length; Se < fe; Se++) M[Ce++] = G[Se];
        return M.length = Ce, M;
      }, grep: function(M, G, fe) {
        for (var Se, Ce = [], Re = 0, Je = M.length, Ut = !fe; Re < Je; Re++) Se = !G(M[Re], Re), Se !== Ut && Ce.push(M[Re]);
        return Ce;
      }, map: function(M, G, fe) {
        var Se, Ce, Re = 0, Je = [];
        if (F(M)) for (Se = M.length; Re < Se; Re++) Ce = G(M[Re], Re, fe), Ce != null && Je.push(Ce);
        else for (Re in M) Ce = G(M[Re], Re, fe), Ce != null && Je.push(Ce);
        return t(Je);
      }, guid: 1, support: g }), typeof Symbol == "function" && (w.fn[Symbol.iterator] = i[Symbol.iterator]), w.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function(M, G) {
        c["[object " + G + "]"] = G.toLowerCase();
      });
      function F(M) {
        var G = !!M && "length" in M && M.length, fe = E(M);
        return a(M) || l(M) ? false : fe === "array" || G === 0 || typeof G == "number" && G > 0 && G - 1 in M;
      }
      function I(M, G) {
        return M.nodeName && M.nodeName.toLowerCase() === G.toLowerCase();
      }
      var q = i.pop, N = i.sort, H = i.splice, _ = "[\\x20\\t\\r\\n\\f]", x = new RegExp("^" + _ + "+|((?:^|[^\\\\])(?:\\\\.)*)" + _ + "+$", "g");
      w.contains = function(M, G) {
        var fe = G && G.parentNode;
        return M === fe || !!(fe && fe.nodeType === 1 && (M.contains ? M.contains(fe) : M.compareDocumentPosition && M.compareDocumentPosition(fe) & 16));
      };
      var L = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g;
      function j(M, G) {
        return G ? M === "\0" ? "\uFFFD" : M.slice(0, -1) + "\\" + M.charCodeAt(M.length - 1).toString(16) + " " : "\\" + M;
      }
      w.escapeSelector = function(M) {
        return (M + "").replace(L, j);
      };
      var z = d, Z = o;
      (function() {
        var M, G, fe, Se, Ce, Re = Z, Je, Ut, _t, Ht, tr, Sr = w.expando, Ee = 0, ot = 0, Mt = Ie(), gt = Ie(), Rt = Ie(), or = Ie(), nr = function(kt, Kt) {
          return kt === Kt && (Ce = true), 0;
        }, Yr = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped", Xr = "(?:\\\\[\\da-fA-F]{1,6}" + _ + "?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+", $r = "\\[" + _ + "*(" + Xr + ")(?:" + _ + "*([*^$|!~]?=)" + _ + `*(?:'((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)"|(` + Xr + "))|)" + _ + "*\\]", un = ":(" + Xr + `)(?:\\((('((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)")|((?:\\\\.|[^\\\\()[\\]]|` + $r + ")*)|.*)\\)|)", Kr = new RegExp(_ + "+", "g"), Ir = new RegExp("^" + _ + "*," + _ + "*"), An = new RegExp("^" + _ + "*([>+~]|" + _ + ")" + _ + "*"), En = new RegExp(_ + "|>"), Sn = new RegExp(un), On = new RegExp("^" + Xr + "$"), gn = { ID: new RegExp("^#(" + Xr + ")"), CLASS: new RegExp("^\\.(" + Xr + ")"), TAG: new RegExp("^(" + Xr + "|[*])"), ATTR: new RegExp("^" + $r), PSEUDO: new RegExp("^" + un), CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + _ + "*(even|odd|(([+-]|)(\\d*)n|)" + _ + "*(?:([+-]|)" + _ + "*(\\d+)|))" + _ + "*\\)|)", "i"), bool: new RegExp("^(?:" + Yr + ")$", "i"), needsContext: new RegExp("^" + _ + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + _ + "*((?:-\\d)?\\d*)" + _ + "*\\)|)(?=[^-]|$)", "i") }, Bn = /^(?:input|select|textarea|button)$/i, jn = /^h\d$/i, qn = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, Qn = /[+~]/, ii = new RegExp("\\\\[\\da-fA-F]{1,6}" + _ + "?|\\\\([^\\r\\n\\f])", "g"), gi = function(kt, Kt) {
          var lr = "0x" + kt.slice(1) - 65536;
          return Kt || (lr < 0 ? String.fromCharCode(lr + 65536) : String.fromCharCode(lr >> 10 | 55296, lr & 1023 | 56320));
        }, so = function() {
          on();
        }, Uo = ln(function(kt) {
          return kt.disabled === true && I(kt, "fieldset");
        }, { dir: "parentNode", next: "legend" });
        function ca() {
          try {
            return Je.activeElement;
          } catch {
          }
        }
        try {
          Re.apply(i = y.call(z.childNodes), z.childNodes), i[z.childNodes.length].nodeType;
        } catch {
          Re = { apply: function(Kt, lr) {
            Z.apply(Kt, y.call(lr));
          }, call: function(Kt) {
            Z.apply(Kt, y.call(arguments, 1));
          } };
        }
        function Rn(kt, Kt, lr, Er) {
          var Rr, pr, tn, fn, rn, mn, pn, Fe = Kt && Kt.ownerDocument, He = Kt ? Kt.nodeType : 9;
          if (lr = lr || [], typeof kt != "string" || !kt || He !== 1 && He !== 9 && He !== 11) return lr;
          if (!Er && (on(Kt), Kt = Kt || Je, _t)) {
            if (He !== 11 && (rn = qn.exec(kt))) if (Rr = rn[1]) {
              if (He === 9) if (tn = Kt.getElementById(Rr)) {
                if (tn.id === Rr) return Re.call(lr, tn), lr;
              } else return lr;
              else if (Fe && (tn = Fe.getElementById(Rr)) && Rn.contains(Kt, tn) && tn.id === Rr) return Re.call(lr, tn), lr;
            } else {
              if (rn[2]) return Re.apply(lr, Kt.getElementsByTagName(kt)), lr;
              if ((Rr = rn[3]) && Kt.getElementsByClassName) return Re.apply(lr, Kt.getElementsByClassName(Rr)), lr;
            }
            if (!or[kt + " "] && (!Ht || !Ht.test(kt))) {
              if (pn = kt, Fe = Kt, He === 1 && (En.test(kt) || An.test(kt))) {
                for (Fe = Qn.test(kt) && cn(Kt.parentNode) || Kt, (Fe != Kt || !g.scope) && ((fn = Kt.getAttribute("id")) ? fn = w.escapeSelector(fn) : Kt.setAttribute("id", fn = Sr)), mn = Nn(kt), pr = mn.length; pr--; ) mn[pr] = (fn ? "#" + fn : ":scope") + " " + Vn(mn[pr]);
                pn = mn.join(",");
              }
              try {
                return Re.apply(lr, Fe.querySelectorAll(pn)), lr;
              } catch {
                or(kt, true);
              } finally {
                fn === Sr && Kt.removeAttribute("id");
              }
            }
          }
          return Xn(kt.replace(x, "$1"), Kt, lr, Er);
        }
        function Ie() {
          var kt = [];
          function Kt(lr, Er) {
            return kt.push(lr + " ") > G.cacheLength && delete Kt[kt.shift()], Kt[lr + " "] = Er;
          }
          return Kt;
        }
        function ve(kt) {
          return kt[Sr] = true, kt;
        }
        function he(kt) {
          var Kt = Je.createElement("fieldset");
          try {
            return !!kt(Kt);
          } catch {
            return false;
          } finally {
            Kt.parentNode && Kt.parentNode.removeChild(Kt), Kt = null;
          }
        }
        function ke(kt) {
          return function(Kt) {
            return I(Kt, "input") && Kt.type === kt;
          };
        }
        function ht(kt) {
          return function(Kt) {
            return (I(Kt, "input") || I(Kt, "button")) && Kt.type === kt;
          };
        }
        function pt(kt) {
          return function(Kt) {
            return "form" in Kt ? Kt.parentNode && Kt.disabled === false ? "label" in Kt ? "label" in Kt.parentNode ? Kt.parentNode.disabled === kt : Kt.disabled === kt : Kt.isDisabled === kt || Kt.isDisabled !== !kt && Uo(Kt) === kt : Kt.disabled === kt : "label" in Kt ? Kt.disabled === kt : false;
          };
        }
        function Pr(kt) {
          return ve(function(Kt) {
            return Kt = +Kt, ve(function(lr, Er) {
              for (var Rr, pr = kt([], lr.length, Kt), tn = pr.length; tn--; ) lr[Rr = pr[tn]] && (lr[Rr] = !(Er[Rr] = lr[Rr]));
            });
          });
        }
        function cn(kt) {
          return kt && typeof kt.getElementsByTagName < "u" && kt;
        }
        function on(kt) {
          var Kt, lr = kt ? kt.ownerDocument || kt : z;
          return lr == Je || lr.nodeType !== 9 || !lr.documentElement || (Je = lr, Ut = Je.documentElement, _t = !w.isXMLDoc(Je), tr = Ut.matches || Ut.webkitMatchesSelector || Ut.msMatchesSelector, Ut.msMatchesSelector && z != Je && (Kt = Je.defaultView) && Kt.top !== Kt && Kt.addEventListener("unload", so), g.getById = he(function(Er) {
            return Ut.appendChild(Er).id = w.expando, !Je.getElementsByName || !Je.getElementsByName(w.expando).length;
          }), g.disconnectedMatch = he(function(Er) {
            return tr.call(Er, "*");
          }), g.scope = he(function() {
            return Je.querySelectorAll(":scope");
          }), g.cssHas = he(function() {
            try {
              return Je.querySelector(":has(*,:jqfake)"), false;
            } catch {
              return true;
            }
          }), g.getById ? (G.filter.ID = function(Er) {
            var Rr = Er.replace(ii, gi);
            return function(pr) {
              return pr.getAttribute("id") === Rr;
            };
          }, G.find.ID = function(Er, Rr) {
            if (typeof Rr.getElementById < "u" && _t) {
              var pr = Rr.getElementById(Er);
              return pr ? [pr] : [];
            }
          }) : (G.filter.ID = function(Er) {
            var Rr = Er.replace(ii, gi);
            return function(pr) {
              var tn = typeof pr.getAttributeNode < "u" && pr.getAttributeNode("id");
              return tn && tn.value === Rr;
            };
          }, G.find.ID = function(Er, Rr) {
            if (typeof Rr.getElementById < "u" && _t) {
              var pr, tn, fn, rn = Rr.getElementById(Er);
              if (rn) {
                if (pr = rn.getAttributeNode("id"), pr && pr.value === Er) return [rn];
                for (fn = Rr.getElementsByName(Er), tn = 0; rn = fn[tn++]; ) if (pr = rn.getAttributeNode("id"), pr && pr.value === Er) return [rn];
              }
              return [];
            }
          }), G.find.TAG = function(Er, Rr) {
            return typeof Rr.getElementsByTagName < "u" ? Rr.getElementsByTagName(Er) : Rr.querySelectorAll(Er);
          }, G.find.CLASS = function(Er, Rr) {
            if (typeof Rr.getElementsByClassName < "u" && _t) return Rr.getElementsByClassName(Er);
          }, Ht = [], he(function(Er) {
            var Rr;
            Ut.appendChild(Er).innerHTML = "<a id='" + Sr + "' href='' disabled='disabled'></a><select id='" + Sr + "-\r\\' disabled='disabled'><option selected=''></option></select>", Er.querySelectorAll("[selected]").length || Ht.push("\\[" + _ + "*(?:value|" + Yr + ")"), Er.querySelectorAll("[id~=" + Sr + "-]").length || Ht.push("~="), Er.querySelectorAll("a#" + Sr + "+*").length || Ht.push(".#.+[+~]"), Er.querySelectorAll(":checked").length || Ht.push(":checked"), Rr = Je.createElement("input"), Rr.setAttribute("type", "hidden"), Er.appendChild(Rr).setAttribute("name", "D"), Ut.appendChild(Er).disabled = true, Er.querySelectorAll(":disabled").length !== 2 && Ht.push(":enabled", ":disabled"), Rr = Je.createElement("input"), Rr.setAttribute("name", ""), Er.appendChild(Rr), Er.querySelectorAll("[name='']").length || Ht.push("\\[" + _ + "*name" + _ + "*=" + _ + `*(?:''|"")`);
          }), g.cssHas || Ht.push(":has"), Ht = Ht.length && new RegExp(Ht.join("|")), nr = function(Er, Rr) {
            if (Er === Rr) return Ce = true, 0;
            var pr = !Er.compareDocumentPosition - !Rr.compareDocumentPosition;
            return pr || (pr = (Er.ownerDocument || Er) == (Rr.ownerDocument || Rr) ? Er.compareDocumentPosition(Rr) : 1, pr & 1 || !g.sortDetached && Rr.compareDocumentPosition(Er) === pr ? Er === Je || Er.ownerDocument == z && Rn.contains(z, Er) ? -1 : Rr === Je || Rr.ownerDocument == z && Rn.contains(z, Rr) ? 1 : Se ? s.call(Se, Er) - s.call(Se, Rr) : 0 : pr & 4 ? -1 : 1);
          }), Je;
        }
        Rn.matches = function(kt, Kt) {
          return Rn(kt, null, null, Kt);
        }, Rn.matchesSelector = function(kt, Kt) {
          if (on(kt), _t && !or[Kt + " "] && (!Ht || !Ht.test(Kt))) try {
            var lr = tr.call(kt, Kt);
            if (lr || g.disconnectedMatch || kt.document && kt.document.nodeType !== 11) return lr;
          } catch {
            or(Kt, true);
          }
          return Rn(Kt, Je, null, [kt]).length > 0;
        }, Rn.contains = function(kt, Kt) {
          return (kt.ownerDocument || kt) != Je && on(kt), w.contains(kt, Kt);
        }, Rn.attr = function(kt, Kt) {
          (kt.ownerDocument || kt) != Je && on(kt);
          var lr = G.attrHandle[Kt.toLowerCase()], Er = lr && f.call(G.attrHandle, Kt.toLowerCase()) ? lr(kt, Kt, !_t) : void 0;
          return Er !== void 0 ? Er : kt.getAttribute(Kt);
        }, Rn.error = function(kt) {
          throw new Error("Syntax error, unrecognized expression: " + kt);
        }, w.uniqueSort = function(kt) {
          var Kt, lr = [], Er = 0, Rr = 0;
          if (Ce = !g.sortStable, Se = !g.sortStable && y.call(kt, 0), N.call(kt, nr), Ce) {
            for (; Kt = kt[Rr++]; ) Kt === kt[Rr] && (Er = lr.push(Rr));
            for (; Er--; ) H.call(kt, lr[Er], 1);
          }
          return Se = null, kt;
        }, w.fn.uniqueSort = function() {
          return this.pushStack(w.uniqueSort(y.apply(this)));
        }, G = w.expr = { cacheLength: 50, createPseudo: ve, match: gn, attrHandle: {}, find: {}, relative: { ">": { dir: "parentNode", first: true }, " ": { dir: "parentNode" }, "+": { dir: "previousSibling", first: true }, "~": { dir: "previousSibling" } }, preFilter: { ATTR: function(kt) {
          return kt[1] = kt[1].replace(ii, gi), kt[3] = (kt[3] || kt[4] || kt[5] || "").replace(ii, gi), kt[2] === "~=" && (kt[3] = " " + kt[3] + " "), kt.slice(0, 4);
        }, CHILD: function(kt) {
          return kt[1] = kt[1].toLowerCase(), kt[1].slice(0, 3) === "nth" ? (kt[3] || Rn.error(kt[0]), kt[4] = +(kt[4] ? kt[5] + (kt[6] || 1) : 2 * (kt[3] === "even" || kt[3] === "odd")), kt[5] = +(kt[7] + kt[8] || kt[3] === "odd")) : kt[3] && Rn.error(kt[0]), kt;
        }, PSEUDO: function(kt) {
          var Kt, lr = !kt[6] && kt[2];
          return gn.CHILD.test(kt[0]) ? null : (kt[3] ? kt[2] = kt[4] || kt[5] || "" : lr && Sn.test(lr) && (Kt = Nn(lr, true)) && (Kt = lr.indexOf(")", lr.length - Kt) - lr.length) && (kt[0] = kt[0].slice(0, Kt), kt[2] = lr.slice(0, Kt)), kt.slice(0, 3));
        } }, filter: { TAG: function(kt) {
          var Kt = kt.replace(ii, gi).toLowerCase();
          return kt === "*" ? function() {
            return true;
          } : function(lr) {
            return I(lr, Kt);
          };
        }, CLASS: function(kt) {
          var Kt = Mt[kt + " "];
          return Kt || (Kt = new RegExp("(^|" + _ + ")" + kt + "(" + _ + "|$)")) && Mt(kt, function(lr) {
            return Kt.test(typeof lr.className == "string" && lr.className || typeof lr.getAttribute < "u" && lr.getAttribute("class") || "");
          });
        }, ATTR: function(kt, Kt, lr) {
          return function(Er) {
            var Rr = Rn.attr(Er, kt);
            return Rr == null ? Kt === "!=" : Kt ? (Rr += "", Kt === "=" ? Rr === lr : Kt === "!=" ? Rr !== lr : Kt === "^=" ? lr && Rr.indexOf(lr) === 0 : Kt === "*=" ? lr && Rr.indexOf(lr) > -1 : Kt === "$=" ? lr && Rr.slice(-lr.length) === lr : Kt === "~=" ? (" " + Rr.replace(Kr, " ") + " ").indexOf(lr) > -1 : Kt === "|=" ? Rr === lr || Rr.slice(0, lr.length + 1) === lr + "-" : false) : true;
          };
        }, CHILD: function(kt, Kt, lr, Er, Rr) {
          var pr = kt.slice(0, 3) !== "nth", tn = kt.slice(-4) !== "last", fn = Kt === "of-type";
          return Er === 1 && Rr === 0 ? function(rn) {
            return !!rn.parentNode;
          } : function(rn, mn, pn) {
            var Fe, He, et, jt, At, qt = pr !== tn ? "nextSibling" : "previousSibling", Jt = rn.parentNode, er = fn && rn.nodeName.toLowerCase(), mr = !pn && !fn, Ar = false;
            if (Jt) {
              if (pr) {
                for (; qt; ) {
                  for (et = rn; et = et[qt]; ) if (fn ? I(et, er) : et.nodeType === 1) return false;
                  At = qt = kt === "only" && !At && "nextSibling";
                }
                return true;
              }
              if (At = [tn ? Jt.firstChild : Jt.lastChild], tn && mr) {
                for (He = Jt[Sr] || (Jt[Sr] = {}), Fe = He[kt] || [], jt = Fe[0] === Ee && Fe[1], Ar = jt && Fe[2], et = jt && Jt.childNodes[jt]; et = ++jt && et && et[qt] || (Ar = jt = 0) || At.pop(); ) if (et.nodeType === 1 && ++Ar && et === rn) {
                  He[kt] = [Ee, jt, Ar];
                  break;
                }
              } else if (mr && (He = rn[Sr] || (rn[Sr] = {}), Fe = He[kt] || [], jt = Fe[0] === Ee && Fe[1], Ar = jt), Ar === false) for (; (et = ++jt && et && et[qt] || (Ar = jt = 0) || At.pop()) && !((fn ? I(et, er) : et.nodeType === 1) && ++Ar && (mr && (He = et[Sr] || (et[Sr] = {}), He[kt] = [Ee, Ar]), et === rn)); ) ;
              return Ar -= Rr, Ar === Er || Ar % Er === 0 && Ar / Er >= 0;
            }
          };
        }, PSEUDO: function(kt, Kt) {
          var lr, Er = G.pseudos[kt] || G.setFilters[kt.toLowerCase()] || Rn.error("unsupported pseudo: " + kt);
          return Er[Sr] ? Er(Kt) : Er.length > 1 ? (lr = [kt, kt, "", Kt], G.setFilters.hasOwnProperty(kt.toLowerCase()) ? ve(function(Rr, pr) {
            for (var tn, fn = Er(Rr, Kt), rn = fn.length; rn--; ) tn = s.call(Rr, fn[rn]), Rr[tn] = !(pr[tn] = fn[rn]);
          }) : function(Rr) {
            return Er(Rr, 0, lr);
          }) : Er;
        } }, pseudos: { not: ve(function(kt) {
          var Kt = [], lr = [], Er = Pn(kt.replace(x, "$1"));
          return Er[Sr] ? ve(function(Rr, pr, tn, fn) {
            for (var rn, mn = Er(Rr, null, fn, []), pn = Rr.length; pn--; ) (rn = mn[pn]) && (Rr[pn] = !(pr[pn] = rn));
          }) : function(Rr, pr, tn) {
            return Kt[0] = Rr, Er(Kt, null, tn, lr), Kt[0] = null, !lr.pop();
          };
        }), has: ve(function(kt) {
          return function(Kt) {
            return Rn(kt, Kt).length > 0;
          };
        }), contains: ve(function(kt) {
          return kt = kt.replace(ii, gi), function(Kt) {
            return (Kt.textContent || w.text(Kt)).indexOf(kt) > -1;
          };
        }), lang: ve(function(kt) {
          return On.test(kt || "") || Rn.error("unsupported lang: " + kt), kt = kt.replace(ii, gi).toLowerCase(), function(Kt) {
            var lr;
            do
              if (lr = _t ? Kt.lang : Kt.getAttribute("xml:lang") || Kt.getAttribute("lang")) return lr = lr.toLowerCase(), lr === kt || lr.indexOf(kt + "-") === 0;
            while ((Kt = Kt.parentNode) && Kt.nodeType === 1);
            return false;
          };
        }), target: function(kt) {
          var Kt = e.location && e.location.hash;
          return Kt && Kt.slice(1) === kt.id;
        }, root: function(kt) {
          return kt === Ut;
        }, focus: function(kt) {
          return kt === ca() && Je.hasFocus() && !!(kt.type || kt.href || ~kt.tabIndex);
        }, enabled: pt(false), disabled: pt(true), checked: function(kt) {
          return I(kt, "input") && !!kt.checked || I(kt, "option") && !!kt.selected;
        }, selected: function(kt) {
          return kt.parentNode && kt.parentNode.selectedIndex, kt.selected === true;
        }, empty: function(kt) {
          for (kt = kt.firstChild; kt; kt = kt.nextSibling) if (kt.nodeType < 6) return false;
          return true;
        }, parent: function(kt) {
          return !G.pseudos.empty(kt);
        }, header: function(kt) {
          return jn.test(kt.nodeName);
        }, input: function(kt) {
          return Bn.test(kt.nodeName);
        }, button: function(kt) {
          return I(kt, "input") && kt.type === "button" || I(kt, "button");
        }, text: function(kt) {
          var Kt;
          return I(kt, "input") && kt.type === "text" && ((Kt = kt.getAttribute("type")) == null || Kt.toLowerCase() === "text");
        }, first: Pr(function() {
          return [0];
        }), last: Pr(function(kt, Kt) {
          return [Kt - 1];
        }), eq: Pr(function(kt, Kt, lr) {
          return [lr < 0 ? lr + Kt : lr];
        }), even: Pr(function(kt, Kt) {
          for (var lr = 0; lr < Kt; lr += 2) kt.push(lr);
          return kt;
        }), odd: Pr(function(kt, Kt) {
          for (var lr = 1; lr < Kt; lr += 2) kt.push(lr);
          return kt;
        }), lt: Pr(function(kt, Kt, lr) {
          var Er;
          for (lr < 0 ? Er = lr + Kt : lr > Kt ? Er = Kt : Er = lr; --Er >= 0; ) kt.push(Er);
          return kt;
        }), gt: Pr(function(kt, Kt, lr) {
          for (var Er = lr < 0 ? lr + Kt : lr; ++Er < Kt; ) kt.push(Er);
          return kt;
        }) } }, G.pseudos.nth = G.pseudos.eq;
        for (M in { radio: true, checkbox: true, file: true, password: true, image: true }) G.pseudos[M] = ke(M);
        for (M in { submit: true, reset: true }) G.pseudos[M] = ht(M);
        function sn() {
        }
        sn.prototype = G.filters = G.pseudos, G.setFilters = new sn();
        function Nn(kt, Kt) {
          var lr, Er, Rr, pr, tn, fn, rn, mn = gt[kt + " "];
          if (mn) return Kt ? 0 : mn.slice(0);
          for (tn = kt, fn = [], rn = G.preFilter; tn; ) {
            (!lr || (Er = Ir.exec(tn))) && (Er && (tn = tn.slice(Er[0].length) || tn), fn.push(Rr = [])), lr = false, (Er = An.exec(tn)) && (lr = Er.shift(), Rr.push({ value: lr, type: Er[0].replace(x, " ") }), tn = tn.slice(lr.length));
            for (pr in G.filter) (Er = gn[pr].exec(tn)) && (!rn[pr] || (Er = rn[pr](Er))) && (lr = Er.shift(), Rr.push({ value: lr, type: pr, matches: Er }), tn = tn.slice(lr.length));
            if (!lr) break;
          }
          return Kt ? tn.length : tn ? Rn.error(kt) : gt(kt, fn).slice(0);
        }
        function Vn(kt) {
          for (var Kt = 0, lr = kt.length, Er = ""; Kt < lr; Kt++) Er += kt[Kt].value;
          return Er;
        }
        function ln(kt, Kt, lr) {
          var Er = Kt.dir, Rr = Kt.next, pr = Rr || Er, tn = lr && pr === "parentNode", fn = ot++;
          return Kt.first ? function(rn, mn, pn) {
            for (; rn = rn[Er]; ) if (rn.nodeType === 1 || tn) return kt(rn, mn, pn);
            return false;
          } : function(rn, mn, pn) {
            var Fe, He, et = [Ee, fn];
            if (pn) {
              for (; rn = rn[Er]; ) if ((rn.nodeType === 1 || tn) && kt(rn, mn, pn)) return true;
            } else for (; rn = rn[Er]; ) if (rn.nodeType === 1 || tn) if (He = rn[Sr] || (rn[Sr] = {}), Rr && I(rn, Rr)) rn = rn[Er] || rn;
            else {
              if ((Fe = He[pr]) && Fe[0] === Ee && Fe[1] === fn) return et[2] = Fe[2];
              if (He[pr] = et, et[2] = kt(rn, mn, pn)) return true;
            }
            return false;
          };
        }
        function oi(kt) {
          return kt.length > 1 ? function(Kt, lr, Er) {
            for (var Rr = kt.length; Rr--; ) if (!kt[Rr](Kt, lr, Er)) return false;
            return true;
          } : kt[0];
        }
        function Hn(kt, Kt, lr) {
          for (var Er = 0, Rr = Kt.length; Er < Rr; Er++) Rn(kt, Kt[Er], lr);
          return lr;
        }
        function Tn(kt, Kt, lr, Er, Rr) {
          for (var pr, tn = [], fn = 0, rn = kt.length, mn = Kt != null; fn < rn; fn++) (pr = kt[fn]) && (!lr || lr(pr, Er, Rr)) && (tn.push(pr), mn && Kt.push(fn));
          return tn;
        }
        function xn(kt, Kt, lr, Er, Rr, pr) {
          return Er && !Er[Sr] && (Er = xn(Er)), Rr && !Rr[Sr] && (Rr = xn(Rr, pr)), ve(function(tn, fn, rn, mn) {
            var pn, Fe, He, et, jt = [], At = [], qt = fn.length, Jt = tn || Hn(Kt || "*", rn.nodeType ? [rn] : rn, []), er = kt && (tn || !Kt) ? Tn(Jt, jt, kt, rn, mn) : Jt;
            if (lr ? (et = Rr || (tn ? kt : qt || Er) ? [] : fn, lr(er, et, rn, mn)) : et = er, Er) for (pn = Tn(et, At), Er(pn, [], rn, mn), Fe = pn.length; Fe--; ) (He = pn[Fe]) && (et[At[Fe]] = !(er[At[Fe]] = He));
            if (tn) {
              if (Rr || kt) {
                if (Rr) {
                  for (pn = [], Fe = et.length; Fe--; ) (He = et[Fe]) && pn.push(er[Fe] = He);
                  Rr(null, et = [], pn, mn);
                }
                for (Fe = et.length; Fe--; ) (He = et[Fe]) && (pn = Rr ? s.call(tn, He) : jt[Fe]) > -1 && (tn[pn] = !(fn[pn] = He));
              }
            } else et = Tn(et === fn ? et.splice(qt, et.length) : et), Rr ? Rr(null, fn, et, mn) : Re.apply(fn, et);
          });
        }
        function Gn(kt) {
          for (var Kt, lr, Er, Rr = kt.length, pr = G.relative[kt[0].type], tn = pr || G.relative[" "], fn = pr ? 1 : 0, rn = ln(function(Fe) {
            return Fe === Kt;
          }, tn, true), mn = ln(function(Fe) {
            return s.call(Kt, Fe) > -1;
          }, tn, true), pn = [function(Fe, He, et) {
            var jt = !pr && (et || He != fe) || ((Kt = He).nodeType ? rn(Fe, He, et) : mn(Fe, He, et));
            return Kt = null, jt;
          }]; fn < Rr; fn++) if (lr = G.relative[kt[fn].type]) pn = [ln(oi(pn), lr)];
          else {
            if (lr = G.filter[kt[fn].type].apply(null, kt[fn].matches), lr[Sr]) {
              for (Er = ++fn; Er < Rr && !G.relative[kt[Er].type]; Er++) ;
              return xn(fn > 1 && oi(pn), fn > 1 && Vn(kt.slice(0, fn - 1).concat({ value: kt[fn - 2].type === " " ? "*" : "" })).replace(x, "$1"), lr, fn < Er && Gn(kt.slice(fn, Er)), Er < Rr && Gn(kt = kt.slice(Er)), Er < Rr && Vn(kt));
            }
            pn.push(lr);
          }
          return oi(pn);
        }
        function Kn(kt, Kt) {
          var lr = Kt.length > 0, Er = kt.length > 0, Rr = function(pr, tn, fn, rn, mn) {
            var pn, Fe, He, et = 0, jt = "0", At = pr && [], qt = [], Jt = fe, er = pr || Er && G.find.TAG("*", mn), mr = Ee += Jt == null ? 1 : Math.random() || 0.1, Ar = er.length;
            for (mn && (fe = tn == Je || tn || mn); jt !== Ar && (pn = er[jt]) != null; jt++) {
              if (Er && pn) {
                for (Fe = 0, !tn && pn.ownerDocument != Je && (on(pn), fn = !_t); He = kt[Fe++]; ) if (He(pn, tn || Je, fn)) {
                  Re.call(rn, pn);
                  break;
                }
                mn && (Ee = mr);
              }
              lr && ((pn = !He && pn) && et--, pr && At.push(pn));
            }
            if (et += jt, lr && jt !== et) {
              for (Fe = 0; He = Kt[Fe++]; ) He(At, qt, tn, fn);
              if (pr) {
                if (et > 0) for (; jt--; ) At[jt] || qt[jt] || (qt[jt] = q.call(rn));
                qt = Tn(qt);
              }
              Re.apply(rn, qt), mn && !pr && qt.length > 0 && et + Kt.length > 1 && w.uniqueSort(rn);
            }
            return mn && (Ee = mr, fe = Jt), At;
          };
          return lr ? ve(Rr) : Rr;
        }
        function Pn(kt, Kt) {
          var lr, Er = [], Rr = [], pr = Rt[kt + " "];
          if (!pr) {
            for (Kt || (Kt = Nn(kt)), lr = Kt.length; lr--; ) pr = Gn(Kt[lr]), pr[Sr] ? Er.push(pr) : Rr.push(pr);
            pr = Rt(kt, Kn(Rr, Er)), pr.selector = kt;
          }
          return pr;
        }
        function Xn(kt, Kt, lr, Er) {
          var Rr, pr, tn, fn, rn, mn = typeof kt == "function" && kt, pn = !Er && Nn(kt = mn.selector || kt);
          if (lr = lr || [], pn.length === 1) {
            if (pr = pn[0] = pn[0].slice(0), pr.length > 2 && (tn = pr[0]).type === "ID" && Kt.nodeType === 9 && _t && G.relative[pr[1].type]) {
              if (Kt = (G.find.ID(tn.matches[0].replace(ii, gi), Kt) || [])[0], Kt) mn && (Kt = Kt.parentNode);
              else return lr;
              kt = kt.slice(pr.shift().value.length);
            }
            for (Rr = gn.needsContext.test(kt) ? 0 : pr.length; Rr-- && (tn = pr[Rr], !G.relative[fn = tn.type]); ) if ((rn = G.find[fn]) && (Er = rn(tn.matches[0].replace(ii, gi), Qn.test(pr[0].type) && cn(Kt.parentNode) || Kt))) {
              if (pr.splice(Rr, 1), kt = Er.length && Vn(pr), !kt) return Re.apply(lr, Er), lr;
              break;
            }
          }
          return (mn || Pn(kt, pn))(Er, Kt, !_t, lr, !Kt || Qn.test(kt) && cn(Kt.parentNode) || Kt), lr;
        }
        g.sortStable = Sr.split("").sort(nr).join("") === Sr, on(), g.sortDetached = he(function(kt) {
          return kt.compareDocumentPosition(Je.createElement("fieldset")) & 1;
        }), w.find = Rn, w.expr[":"] = w.expr.pseudos, w.unique = w.uniqueSort, Rn.compile = Pn, Rn.select = Xn, Rn.setDocument = on, Rn.tokenize = Nn, Rn.escape = w.escapeSelector, Rn.getText = w.text, Rn.isXML = w.isXMLDoc, Rn.selectors = w.expr, Rn.support = w.support, Rn.uniqueSort = w.uniqueSort;
      })();
      var ue = function(M, G, fe) {
        for (var Se = [], Ce = fe !== void 0; (M = M[G]) && M.nodeType !== 9; ) if (M.nodeType === 1) {
          if (Ce && w(M).is(fe)) break;
          Se.push(M);
        }
        return Se;
      }, $ = function(M, G) {
        for (var fe = []; M; M = M.nextSibling) M.nodeType === 1 && M !== G && fe.push(M);
        return fe;
      }, X = w.expr.match.needsContext, J = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;
      function B(M, G, fe) {
        return a(G) ? w.grep(M, function(Se, Ce) {
          return !!G.call(Se, Ce, Se) !== fe;
        }) : G.nodeType ? w.grep(M, function(Se) {
          return Se === G !== fe;
        }) : typeof G != "string" ? w.grep(M, function(Se) {
          return s.call(G, Se) > -1 !== fe;
        }) : w.filter(G, M, fe);
      }
      w.filter = function(M, G, fe) {
        var Se = G[0];
        return fe && (M = ":not(" + M + ")"), G.length === 1 && Se.nodeType === 1 ? w.find.matchesSelector(Se, M) ? [Se] : [] : w.find.matches(M, w.grep(G, function(Ce) {
          return Ce.nodeType === 1;
        }));
      }, w.fn.extend({ find: function(M) {
        var G, fe, Se = this.length, Ce = this;
        if (typeof M != "string") return this.pushStack(w(M).filter(function() {
          for (G = 0; G < Se; G++) if (w.contains(Ce[G], this)) return true;
        }));
        for (fe = this.pushStack([]), G = 0; G < Se; G++) w.find(M, Ce[G], fe);
        return Se > 1 ? w.uniqueSort(fe) : fe;
      }, filter: function(M) {
        return this.pushStack(B(this, M || [], false));
      }, not: function(M) {
        return this.pushStack(B(this, M || [], true));
      }, is: function(M) {
        return !!B(this, typeof M == "string" && X.test(M) ? w(M) : M || [], false).length;
      } });
      var Q, ne = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/, K = w.fn.init = function(M, G, fe) {
        var Se, Ce;
        if (!M) return this;
        if (fe = fe || Q, typeof M == "string") if (M[0] === "<" && M[M.length - 1] === ">" && M.length >= 3 ? Se = [null, M, null] : Se = ne.exec(M), Se && (Se[1] || !G)) if (Se[1]) {
          if (G = G instanceof w ? G[0] : G, w.merge(this, w.parseHTML(Se[1], G && G.nodeType ? G.ownerDocument || G : d, true)), J.test(Se[1]) && w.isPlainObject(G)) for (Se in G) a(this[Se]) ? this[Se](G[Se]) : this.attr(Se, G[Se]);
          return this;
        } else return Ce = d.getElementById(Se[2]), Ce && (this[0] = Ce, this.length = 1), this;
        else return !G || G.jquery ? (G || fe).find(M) : this.constructor(G).find(M);
        else {
          if (M.nodeType) return this[0] = M, this.length = 1, this;
          if (a(M)) return fe.ready !== void 0 ? fe.ready(M) : M(w);
        }
        return w.makeArray(M, this);
      };
      K.prototype = w.fn, Q = w(d);
      var ie = /^(?:parents|prev(?:Until|All))/, ce = { children: true, contents: true, next: true, prev: true };
      w.fn.extend({ has: function(M) {
        var G = w(M, this), fe = G.length;
        return this.filter(function() {
          for (var Se = 0; Se < fe; Se++) if (w.contains(this, G[Se])) return true;
        });
      }, closest: function(M, G) {
        var fe, Se = 0, Ce = this.length, Re = [], Je = typeof M != "string" && w(M);
        if (!X.test(M)) {
          for (; Se < Ce; Se++) for (fe = this[Se]; fe && fe !== G; fe = fe.parentNode) if (fe.nodeType < 11 && (Je ? Je.index(fe) > -1 : fe.nodeType === 1 && w.find.matchesSelector(fe, M))) {
            Re.push(fe);
            break;
          }
        }
        return this.pushStack(Re.length > 1 ? w.uniqueSort(Re) : Re);
      }, index: function(M) {
        return M ? typeof M == "string" ? s.call(w(M), this[0]) : s.call(this, M.jquery ? M[0] : M) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1;
      }, add: function(M, G) {
        return this.pushStack(w.uniqueSort(w.merge(this.get(), w(M, G))));
      }, addBack: function(M) {
        return this.add(M == null ? this.prevObject : this.prevObject.filter(M));
      } });
      function ye(M, G) {
        for (; (M = M[G]) && M.nodeType !== 1; ) ;
        return M;
      }
      w.each({ parent: function(M) {
        var G = M.parentNode;
        return G && G.nodeType !== 11 ? G : null;
      }, parents: function(M) {
        return ue(M, "parentNode");
      }, parentsUntil: function(M, G, fe) {
        return ue(M, "parentNode", fe);
      }, next: function(M) {
        return ye(M, "nextSibling");
      }, prev: function(M) {
        return ye(M, "previousSibling");
      }, nextAll: function(M) {
        return ue(M, "nextSibling");
      }, prevAll: function(M) {
        return ue(M, "previousSibling");
      }, nextUntil: function(M, G, fe) {
        return ue(M, "nextSibling", fe);
      }, prevUntil: function(M, G, fe) {
        return ue(M, "previousSibling", fe);
      }, siblings: function(M) {
        return $((M.parentNode || {}).firstChild, M);
      }, children: function(M) {
        return $(M.firstChild);
      }, contents: function(M) {
        return M.contentDocument != null && u(M.contentDocument) ? M.contentDocument : (I(M, "template") && (M = M.content || M), w.merge([], M.childNodes));
      } }, function(M, G) {
        w.fn[M] = function(fe, Se) {
          var Ce = w.map(this, G, fe);
          return M.slice(-5) !== "Until" && (Se = fe), Se && typeof Se == "string" && (Ce = w.filter(Se, Ce)), this.length > 1 && (ce[M] || w.uniqueSort(Ce), ie.test(M) && Ce.reverse()), this.pushStack(Ce);
        };
      });
      var oe = /[^\x20\t\r\n\f]+/g;
      function se(M) {
        var G = {};
        return w.each(M.match(oe) || [], function(fe, Se) {
          G[Se] = true;
        }), G;
      }
      w.Callbacks = function(M) {
        M = typeof M == "string" ? se(M) : w.extend({}, M);
        var G, fe, Se, Ce, Re = [], Je = [], Ut = -1, _t = function() {
          for (Ce = Ce || M.once, Se = G = true; Je.length; Ut = -1) for (fe = Je.shift(); ++Ut < Re.length; ) Re[Ut].apply(fe[0], fe[1]) === false && M.stopOnFalse && (Ut = Re.length, fe = false);
          M.memory || (fe = false), G = false, Ce && (fe ? Re = [] : Re = "");
        }, Ht = { add: function() {
          return Re && (fe && !G && (Ut = Re.length - 1, Je.push(fe)), function tr(Sr) {
            w.each(Sr, function(Ee, ot) {
              a(ot) ? (!M.unique || !Ht.has(ot)) && Re.push(ot) : ot && ot.length && E(ot) !== "string" && tr(ot);
            });
          }(arguments), fe && !G && _t()), this;
        }, remove: function() {
          return w.each(arguments, function(tr, Sr) {
            for (var Ee; (Ee = w.inArray(Sr, Re, Ee)) > -1; ) Re.splice(Ee, 1), Ee <= Ut && Ut--;
          }), this;
        }, has: function(tr) {
          return tr ? w.inArray(tr, Re) > -1 : Re.length > 0;
        }, empty: function() {
          return Re && (Re = []), this;
        }, disable: function() {
          return Ce = Je = [], Re = fe = "", this;
        }, disabled: function() {
          return !Re;
        }, lock: function() {
          return Ce = Je = [], !fe && !G && (Re = fe = ""), this;
        }, locked: function() {
          return !!Ce;
        }, fireWith: function(tr, Sr) {
          return Ce || (Sr = Sr || [], Sr = [tr, Sr.slice ? Sr.slice() : Sr], Je.push(Sr), G || _t()), this;
        }, fire: function() {
          return Ht.fireWith(this, arguments), this;
        }, fired: function() {
          return !!Se;
        } };
        return Ht;
      };
      function re(M) {
        return M;
      }
      function ge(M) {
        throw M;
      }
      function Te(M, G, fe, Se) {
        var Ce;
        try {
          M && a(Ce = M.promise) ? Ce.call(M).done(G).fail(fe) : M && a(Ce = M.then) ? Ce.call(M, G, fe) : G.apply(void 0, [M].slice(Se));
        } catch (Re) {
          fe.apply(void 0, [Re]);
        }
      }
      w.extend({ Deferred: function(M) {
        var G = [["notify", "progress", w.Callbacks("memory"), w.Callbacks("memory"), 2], ["resolve", "done", w.Callbacks("once memory"), w.Callbacks("once memory"), 0, "resolved"], ["reject", "fail", w.Callbacks("once memory"), w.Callbacks("once memory"), 1, "rejected"]], fe = "pending", Se = { state: function() {
          return fe;
        }, always: function() {
          return Ce.done(arguments).fail(arguments), this;
        }, catch: function(Re) {
          return Se.then(null, Re);
        }, pipe: function() {
          var Re = arguments;
          return w.Deferred(function(Je) {
            w.each(G, function(Ut, _t) {
              var Ht = a(Re[_t[4]]) && Re[_t[4]];
              Ce[_t[1]](function() {
                var tr = Ht && Ht.apply(this, arguments);
                tr && a(tr.promise) ? tr.promise().progress(Je.notify).done(Je.resolve).fail(Je.reject) : Je[_t[0] + "With"](this, Ht ? [tr] : arguments);
              });
            }), Re = null;
          }).promise();
        }, then: function(Re, Je, Ut) {
          var _t = 0;
          function Ht(tr, Sr, Ee, ot) {
            return function() {
              var Mt = this, gt = arguments, Rt = function() {
                var nr, Yr;
                if (!(tr < _t)) {
                  if (nr = Ee.apply(Mt, gt), nr === Sr.promise()) throw new TypeError("Thenable self-resolution");
                  Yr = nr && (typeof nr == "object" || typeof nr == "function") && nr.then, a(Yr) ? ot ? Yr.call(nr, Ht(_t, Sr, re, ot), Ht(_t, Sr, ge, ot)) : (_t++, Yr.call(nr, Ht(_t, Sr, re, ot), Ht(_t, Sr, ge, ot), Ht(_t, Sr, re, Sr.notifyWith))) : (Ee !== re && (Mt = void 0, gt = [nr]), (ot || Sr.resolveWith)(Mt, gt));
                }
              }, or = ot ? Rt : function() {
                try {
                  Rt();
                } catch (nr) {
                  w.Deferred.exceptionHook && w.Deferred.exceptionHook(nr, or.error), tr + 1 >= _t && (Ee !== ge && (Mt = void 0, gt = [nr]), Sr.rejectWith(Mt, gt));
                }
              };
              tr ? or() : (w.Deferred.getErrorHook ? or.error = w.Deferred.getErrorHook() : w.Deferred.getStackHook && (or.error = w.Deferred.getStackHook()), e.setTimeout(or));
            };
          }
          return w.Deferred(function(tr) {
            G[0][3].add(Ht(0, tr, a(Ut) ? Ut : re, tr.notifyWith)), G[1][3].add(Ht(0, tr, a(Re) ? Re : re)), G[2][3].add(Ht(0, tr, a(Je) ? Je : ge));
          }).promise();
        }, promise: function(Re) {
          return Re != null ? w.extend(Re, Se) : Se;
        } }, Ce = {};
        return w.each(G, function(Re, Je) {
          var Ut = Je[2], _t = Je[5];
          Se[Je[1]] = Ut.add, _t && Ut.add(function() {
            fe = _t;
          }, G[3 - Re][2].disable, G[3 - Re][3].disable, G[0][2].lock, G[0][3].lock), Ut.add(Je[3].fire), Ce[Je[0]] = function() {
            return Ce[Je[0] + "With"](this === Ce ? void 0 : this, arguments), this;
          }, Ce[Je[0] + "With"] = Ut.fireWith;
        }), Se.promise(Ce), M && M.call(Ce, Ce), Ce;
      }, when: function(M) {
        var G = arguments.length, fe = G, Se = Array(fe), Ce = y.call(arguments), Re = w.Deferred(), Je = function(Ut) {
          return function(_t) {
            Se[Ut] = this, Ce[Ut] = arguments.length > 1 ? y.call(arguments) : _t, --G || Re.resolveWith(Se, Ce);
          };
        };
        if (G <= 1 && (Te(M, Re.done(Je(fe)).resolve, Re.reject, !G), Re.state() === "pending" || a(Ce[fe] && Ce[fe].then))) return Re.then();
        for (; fe--; ) Te(Ce[fe], Je(fe), Re.reject);
        return Re.promise();
      } });
      var pe = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
      w.Deferred.exceptionHook = function(M, G) {
        e.console && e.console.warn && M && pe.test(M.name) && e.console.warn("jQuery.Deferred exception: " + M.message, M.stack, G);
      }, w.readyException = function(M) {
        e.setTimeout(function() {
          throw M;
        });
      };
      var Oe = w.Deferred();
      w.fn.ready = function(M) {
        return Oe.then(M).catch(function(G) {
          w.readyException(G);
        }), this;
      }, w.extend({ isReady: false, readyWait: 1, ready: function(M) {
        (M === true ? --w.readyWait : w.isReady) || (w.isReady = true, !(M !== true && --w.readyWait > 0) && Oe.resolveWith(d, [w]));
      } }), w.ready.then = Oe.then;
      function xe() {
        d.removeEventListener("DOMContentLoaded", xe), e.removeEventListener("load", xe), w.ready();
      }
      d.readyState === "complete" || d.readyState !== "loading" && !d.documentElement.doScroll ? e.setTimeout(w.ready) : (d.addEventListener("DOMContentLoaded", xe), e.addEventListener("load", xe));
      var Ve = function(M, G, fe, Se, Ce, Re, Je) {
        var Ut = 0, _t = M.length, Ht = fe == null;
        if (E(fe) === "object") {
          Ce = true;
          for (Ut in fe) Ve(M, G, Ut, fe[Ut], true, Re, Je);
        } else if (Se !== void 0 && (Ce = true, a(Se) || (Je = true), Ht && (Je ? (G.call(M, Se), G = null) : (Ht = G, G = function(tr, Sr, Ee) {
          return Ht.call(w(tr), Ee);
        })), G)) for (; Ut < _t; Ut++) G(M[Ut], fe, Je ? Se : Se.call(M[Ut], Ut, G(M[Ut], fe)));
        return Ce ? M : Ht ? G.call(M) : _t ? G(M[0], fe) : Re;
      }, _e = /^-ms-/, Be = /-([a-z])/g;
      function Qe(M, G) {
        return G.toUpperCase();
      }
      function ee(M) {
        return M.replace(_e, "ms-").replace(Be, Qe);
      }
      var P = function(M) {
        return M.nodeType === 1 || M.nodeType === 9 || !+M.nodeType;
      };
      function T() {
        this.expando = w.expando + T.uid++;
      }
      T.uid = 1, T.prototype = { cache: function(M) {
        var G = M[this.expando];
        return G || (G = {}, P(M) && (M.nodeType ? M[this.expando] = G : Object.defineProperty(M, this.expando, { value: G, configurable: true }))), G;
      }, set: function(M, G, fe) {
        var Se, Ce = this.cache(M);
        if (typeof G == "string") Ce[ee(G)] = fe;
        else for (Se in G) Ce[ee(Se)] = G[Se];
        return Ce;
      }, get: function(M, G) {
        return G === void 0 ? this.cache(M) : M[this.expando] && M[this.expando][ee(G)];
      }, access: function(M, G, fe) {
        return G === void 0 || G && typeof G == "string" && fe === void 0 ? this.get(M, G) : (this.set(M, G, fe), fe !== void 0 ? fe : G);
      }, remove: function(M, G) {
        var fe, Se = M[this.expando];
        if (Se !== void 0) {
          if (G !== void 0) for (Array.isArray(G) ? G = G.map(ee) : (G = ee(G), G = G in Se ? [G] : G.match(oe) || []), fe = G.length; fe--; ) delete Se[G[fe]];
          (G === void 0 || w.isEmptyObject(Se)) && (M.nodeType ? M[this.expando] = void 0 : delete M[this.expando]);
        }
      }, hasData: function(M) {
        var G = M[this.expando];
        return G !== void 0 && !w.isEmptyObject(G);
      } };
      var O = new T(), V = new T(), D = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/, C = /[A-Z]/g;
      function p(M) {
        return M === "true" ? true : M === "false" ? false : M === "null" ? null : M === +M + "" ? +M : D.test(M) ? JSON.parse(M) : M;
      }
      function A(M, G, fe) {
        var Se;
        if (fe === void 0 && M.nodeType === 1) if (Se = "data-" + G.replace(C, "-$&").toLowerCase(), fe = M.getAttribute(Se), typeof fe == "string") {
          try {
            fe = p(fe);
          } catch {
          }
          V.set(M, G, fe);
        } else fe = void 0;
        return fe;
      }
      w.extend({ hasData: function(M) {
        return V.hasData(M) || O.hasData(M);
      }, data: function(M, G, fe) {
        return V.access(M, G, fe);
      }, removeData: function(M, G) {
        V.remove(M, G);
      }, _data: function(M, G, fe) {
        return O.access(M, G, fe);
      }, _removeData: function(M, G) {
        O.remove(M, G);
      } }), w.fn.extend({ data: function(M, G) {
        var fe, Se, Ce, Re = this[0], Je = Re && Re.attributes;
        if (M === void 0) {
          if (this.length && (Ce = V.get(Re), Re.nodeType === 1 && !O.get(Re, "hasDataAttrs"))) {
            for (fe = Je.length; fe--; ) Je[fe] && (Se = Je[fe].name, Se.indexOf("data-") === 0 && (Se = ee(Se.slice(5)), A(Re, Se, Ce[Se])));
            O.set(Re, "hasDataAttrs", true);
          }
          return Ce;
        }
        return typeof M == "object" ? this.each(function() {
          V.set(this, M);
        }) : Ve(this, function(Ut) {
          var _t;
          if (Re && Ut === void 0) return _t = V.get(Re, M), _t !== void 0 || (_t = A(Re, M), _t !== void 0) ? _t : void 0;
          this.each(function() {
            V.set(this, M, Ut);
          });
        }, null, G, arguments.length > 1, null, true);
      }, removeData: function(M) {
        return this.each(function() {
          V.remove(this, M);
        });
      } }), w.extend({ queue: function(M, G, fe) {
        var Se;
        if (M) return G = (G || "fx") + "queue", Se = O.get(M, G), fe && (!Se || Array.isArray(fe) ? Se = O.access(M, G, w.makeArray(fe)) : Se.push(fe)), Se || [];
      }, dequeue: function(M, G) {
        G = G || "fx";
        var fe = w.queue(M, G), Se = fe.length, Ce = fe.shift(), Re = w._queueHooks(M, G), Je = function() {
          w.dequeue(M, G);
        };
        Ce === "inprogress" && (Ce = fe.shift(), Se--), Ce && (G === "fx" && fe.unshift("inprogress"), delete Re.stop, Ce.call(M, Je, Re)), !Se && Re && Re.empty.fire();
      }, _queueHooks: function(M, G) {
        var fe = G + "queueHooks";
        return O.get(M, fe) || O.access(M, fe, { empty: w.Callbacks("once memory").add(function() {
          O.remove(M, [G + "queue", fe]);
        }) });
      } }), w.fn.extend({ queue: function(M, G) {
        var fe = 2;
        return typeof M != "string" && (G = M, M = "fx", fe--), arguments.length < fe ? w.queue(this[0], M) : G === void 0 ? this : this.each(function() {
          var Se = w.queue(this, M, G);
          w._queueHooks(this, M), M === "fx" && Se[0] !== "inprogress" && w.dequeue(this, M);
        });
      }, dequeue: function(M) {
        return this.each(function() {
          w.dequeue(this, M);
        });
      }, clearQueue: function(M) {
        return this.queue(M || "fx", []);
      }, promise: function(M, G) {
        var fe, Se = 1, Ce = w.Deferred(), Re = this, Je = this.length, Ut = function() {
          --Se || Ce.resolveWith(Re, [Re]);
        };
        for (typeof M != "string" && (G = M, M = void 0), M = M || "fx"; Je--; ) fe = O.get(Re[Je], M + "queueHooks"), fe && fe.empty && (Se++, fe.empty.add(Ut));
        return Ut(), Ce.promise(G);
      } });
      var U = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source, Y = new RegExp("^(?:([+-])=|)(" + U + ")([a-z%]*)$", "i"), ae = ["Top", "Right", "Bottom", "Left"], W = d.documentElement, de = function(M) {
        return w.contains(M.ownerDocument, M);
      }, tt = { composed: true };
      W.getRootNode && (de = function(M) {
        return w.contains(M.ownerDocument, M) || M.getRootNode(tt) === M.ownerDocument;
      });
      var Ne = function(M, G) {
        return M = G || M, M.style.display === "none" || M.style.display === "" && de(M) && w.css(M, "display") === "none";
      };
      function ut(M, G, fe, Se) {
        var Ce, Re, Je = 20, Ut = Se ? function() {
          return Se.cur();
        } : function() {
          return w.css(M, G, "");
        }, _t = Ut(), Ht = fe && fe[3] || (w.cssNumber[G] ? "" : "px"), tr = M.nodeType && (w.cssNumber[G] || Ht !== "px" && +_t) && Y.exec(w.css(M, G));
        if (tr && tr[3] !== Ht) {
          for (_t = _t / 2, Ht = Ht || tr[3], tr = +_t || 1; Je--; ) w.style(M, G, tr + Ht), (1 - Re) * (1 - (Re = Ut() / _t || 0.5)) <= 0 && (Je = 0), tr = tr / Re;
          tr = tr * 2, w.style(M, G, tr + Ht), fe = fe || [];
        }
        return fe && (tr = +tr || +_t || 0, Ce = fe[1] ? tr + (fe[1] + 1) * fe[2] : +fe[2], Se && (Se.unit = Ht, Se.start = tr, Se.end = Ce)), Ce;
      }
      var Ze = {};
      function Et(M) {
        var G, fe = M.ownerDocument, Se = M.nodeName, Ce = Ze[Se];
        return Ce || (G = fe.body.appendChild(fe.createElement(Se)), Ce = w.css(G, "display"), G.parentNode.removeChild(G), Ce === "none" && (Ce = "block"), Ze[Se] = Ce, Ce);
      }
      function rr(M, G) {
        for (var fe, Se, Ce = [], Re = 0, Je = M.length; Re < Je; Re++) Se = M[Re], Se.style && (fe = Se.style.display, G ? (fe === "none" && (Ce[Re] = O.get(Se, "display") || null, Ce[Re] || (Se.style.display = "")), Se.style.display === "" && Ne(Se) && (Ce[Re] = Et(Se))) : fe !== "none" && (Ce[Re] = "none", O.set(Se, "display", fe)));
        for (Re = 0; Re < Je; Re++) Ce[Re] != null && (M[Re].style.display = Ce[Re]);
        return M;
      }
      w.fn.extend({ show: function() {
        return rr(this, true);
      }, hide: function() {
        return rr(this);
      }, toggle: function(M) {
        return typeof M == "boolean" ? M ? this.show() : this.hide() : this.each(function() {
          Ne(this) ? w(this).show() : w(this).hide();
        });
      } });
      var je = /^(?:checkbox|radio)$/i, Ge = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i, at = /^$|^module$|\/(?:java|ecma)script/i;
      (function() {
        var M = d.createDocumentFragment(), G = M.appendChild(d.createElement("div")), fe = d.createElement("input");
        fe.setAttribute("type", "radio"), fe.setAttribute("checked", "checked"), fe.setAttribute("name", "t"), G.appendChild(fe), g.checkClone = G.cloneNode(true).cloneNode(true).lastChild.checked, G.innerHTML = "<textarea>x</textarea>", g.noCloneChecked = !!G.cloneNode(true).lastChild.defaultValue, G.innerHTML = "<option></option>", g.option = !!G.lastChild;
      })();
      var Ae = { thead: [1, "<table>", "</table>"], col: [2, "<table><colgroup>", "</colgroup></table>"], tr: [2, "<table><tbody>", "</tbody></table>"], td: [3, "<table><tbody><tr>", "</tr></tbody></table>"], _default: [0, "", ""] };
      Ae.tbody = Ae.tfoot = Ae.colgroup = Ae.caption = Ae.thead, Ae.th = Ae.td, g.option || (Ae.optgroup = Ae.option = [1, "<select multiple='multiple'>", "</select>"]);
      function qe(M, G) {
        var fe;
        return typeof M.getElementsByTagName < "u" ? fe = M.getElementsByTagName(G || "*") : typeof M.querySelectorAll < "u" ? fe = M.querySelectorAll(G || "*") : fe = [], G === void 0 || G && I(M, G) ? w.merge([M], fe) : fe;
      }
      function Ft(M, G) {
        for (var fe = 0, Se = M.length; fe < Se; fe++) O.set(M[fe], "globalEval", !G || O.get(G[fe], "globalEval"));
      }
      var Dt = /<|&#?\w+;/;
      function wr(M, G, fe, Se, Ce) {
        for (var Re, Je, Ut, _t, Ht, tr, Sr = G.createDocumentFragment(), Ee = [], ot = 0, Mt = M.length; ot < Mt; ot++) if (Re = M[ot], Re || Re === 0) if (E(Re) === "object") w.merge(Ee, Re.nodeType ? [Re] : Re);
        else if (!Dt.test(Re)) Ee.push(G.createTextNode(Re));
        else {
          for (Je = Je || Sr.appendChild(G.createElement("div")), Ut = (Ge.exec(Re) || ["", ""])[1].toLowerCase(), _t = Ae[Ut] || Ae._default, Je.innerHTML = _t[1] + w.htmlPrefilter(Re) + _t[2], tr = _t[0]; tr--; ) Je = Je.lastChild;
          w.merge(Ee, Je.childNodes), Je = Sr.firstChild, Je.textContent = "";
        }
        for (Sr.textContent = "", ot = 0; Re = Ee[ot++]; ) {
          if (Se && w.inArray(Re, Se) > -1) {
            Ce && Ce.push(Re);
            continue;
          }
          if (Ht = de(Re), Je = qe(Sr.appendChild(Re), "script"), Ht && Ft(Je), fe) for (tr = 0; Re = Je[tr++]; ) at.test(Re.type || "") && fe.push(Re);
        }
        return Sr;
      }
      var Nt = /^([^.]*)(?:\.(.+)|)/;
      function yr() {
        return true;
      }
      function Ur() {
        return false;
      }
      function Pe(M, G, fe, Se, Ce, Re) {
        var Je, Ut;
        if (typeof G == "object") {
          typeof fe != "string" && (Se = Se || fe, fe = void 0);
          for (Ut in G) Pe(M, Ut, fe, Se, G[Ut], Re);
          return M;
        }
        if (Se == null && Ce == null ? (Ce = fe, Se = fe = void 0) : Ce == null && (typeof fe == "string" ? (Ce = Se, Se = void 0) : (Ce = Se, Se = fe, fe = void 0)), Ce === false) Ce = Ur;
        else if (!Ce) return M;
        return Re === 1 && (Je = Ce, Ce = function(_t) {
          return w().off(_t), Je.apply(this, arguments);
        }, Ce.guid = Je.guid || (Je.guid = w.guid++)), M.each(function() {
          w.event.add(this, G, Ce, Se, fe);
        });
      }
      w.event = { global: {}, add: function(M, G, fe, Se, Ce) {
        var Re, Je, Ut, _t, Ht, tr, Sr, Ee, ot, Mt, gt, Rt = O.get(M);
        if (P(M)) for (fe.handler && (Re = fe, fe = Re.handler, Ce = Re.selector), Ce && w.find.matchesSelector(W, Ce), fe.guid || (fe.guid = w.guid++), (_t = Rt.events) || (_t = Rt.events = /* @__PURE__ */ Object.create(null)), (Je = Rt.handle) || (Je = Rt.handle = function(or) {
          return typeof w < "u" && w.event.triggered !== or.type ? w.event.dispatch.apply(M, arguments) : void 0;
        }), G = (G || "").match(oe) || [""], Ht = G.length; Ht--; ) Ut = Nt.exec(G[Ht]) || [], ot = gt = Ut[1], Mt = (Ut[2] || "").split(".").sort(), ot && (Sr = w.event.special[ot] || {}, ot = (Ce ? Sr.delegateType : Sr.bindType) || ot, Sr = w.event.special[ot] || {}, tr = w.extend({ type: ot, origType: gt, data: Se, handler: fe, guid: fe.guid, selector: Ce, needsContext: Ce && w.expr.match.needsContext.test(Ce), namespace: Mt.join(".") }, Re), (Ee = _t[ot]) || (Ee = _t[ot] = [], Ee.delegateCount = 0, (!Sr.setup || Sr.setup.call(M, Se, Mt, Je) === false) && M.addEventListener && M.addEventListener(ot, Je)), Sr.add && (Sr.add.call(M, tr), tr.handler.guid || (tr.handler.guid = fe.guid)), Ce ? Ee.splice(Ee.delegateCount++, 0, tr) : Ee.push(tr), w.event.global[ot] = true);
      }, remove: function(M, G, fe, Se, Ce) {
        var Re, Je, Ut, _t, Ht, tr, Sr, Ee, ot, Mt, gt, Rt = O.hasData(M) && O.get(M);
        if (!(!Rt || !(_t = Rt.events))) {
          for (G = (G || "").match(oe) || [""], Ht = G.length; Ht--; ) {
            if (Ut = Nt.exec(G[Ht]) || [], ot = gt = Ut[1], Mt = (Ut[2] || "").split(".").sort(), !ot) {
              for (ot in _t) w.event.remove(M, ot + G[Ht], fe, Se, true);
              continue;
            }
            for (Sr = w.event.special[ot] || {}, ot = (Se ? Sr.delegateType : Sr.bindType) || ot, Ee = _t[ot] || [], Ut = Ut[2] && new RegExp("(^|\\.)" + Mt.join("\\.(?:.*\\.|)") + "(\\.|$)"), Je = Re = Ee.length; Re--; ) tr = Ee[Re], (Ce || gt === tr.origType) && (!fe || fe.guid === tr.guid) && (!Ut || Ut.test(tr.namespace)) && (!Se || Se === tr.selector || Se === "**" && tr.selector) && (Ee.splice(Re, 1), tr.selector && Ee.delegateCount--, Sr.remove && Sr.remove.call(M, tr));
            Je && !Ee.length && ((!Sr.teardown || Sr.teardown.call(M, Mt, Rt.handle) === false) && w.removeEvent(M, ot, Rt.handle), delete _t[ot]);
          }
          w.isEmptyObject(_t) && O.remove(M, "handle events");
        }
      }, dispatch: function(M) {
        var G, fe, Se, Ce, Re, Je, Ut = new Array(arguments.length), _t = w.event.fix(M), Ht = (O.get(this, "events") || /* @__PURE__ */ Object.create(null))[_t.type] || [], tr = w.event.special[_t.type] || {};
        for (Ut[0] = _t, G = 1; G < arguments.length; G++) Ut[G] = arguments[G];
        if (_t.delegateTarget = this, !(tr.preDispatch && tr.preDispatch.call(this, _t) === false)) {
          for (Je = w.event.handlers.call(this, _t, Ht), G = 0; (Ce = Je[G++]) && !_t.isPropagationStopped(); ) for (_t.currentTarget = Ce.elem, fe = 0; (Re = Ce.handlers[fe++]) && !_t.isImmediatePropagationStopped(); ) (!_t.rnamespace || Re.namespace === false || _t.rnamespace.test(Re.namespace)) && (_t.handleObj = Re, _t.data = Re.data, Se = ((w.event.special[Re.origType] || {}).handle || Re.handler).apply(Ce.elem, Ut), Se !== void 0 && (_t.result = Se) === false && (_t.preventDefault(), _t.stopPropagation()));
          return tr.postDispatch && tr.postDispatch.call(this, _t), _t.result;
        }
      }, handlers: function(M, G) {
        var fe, Se, Ce, Re, Je, Ut = [], _t = G.delegateCount, Ht = M.target;
        if (_t && Ht.nodeType && !(M.type === "click" && M.button >= 1)) {
          for (; Ht !== this; Ht = Ht.parentNode || this) if (Ht.nodeType === 1 && !(M.type === "click" && Ht.disabled === true)) {
            for (Re = [], Je = {}, fe = 0; fe < _t; fe++) Se = G[fe], Ce = Se.selector + " ", Je[Ce] === void 0 && (Je[Ce] = Se.needsContext ? w(Ce, this).index(Ht) > -1 : w.find(Ce, this, null, [Ht]).length), Je[Ce] && Re.push(Se);
            Re.length && Ut.push({ elem: Ht, handlers: Re });
          }
        }
        return Ht = this, _t < G.length && Ut.push({ elem: Ht, handlers: G.slice(_t) }), Ut;
      }, addProp: function(M, G) {
        Object.defineProperty(w.Event.prototype, M, { enumerable: true, configurable: true, get: a(G) ? function() {
          if (this.originalEvent) return G(this.originalEvent);
        } : function() {
          if (this.originalEvent) return this.originalEvent[M];
        }, set: function(fe) {
          Object.defineProperty(this, M, { enumerable: true, configurable: true, writable: true, value: fe });
        } });
      }, fix: function(M) {
        return M[w.expando] ? M : new w.Event(M);
      }, special: { load: { noBubble: true }, click: { setup: function(M) {
        var G = this || M;
        return je.test(G.type) && G.click && I(G, "input") && $e(G, "click", true), false;
      }, trigger: function(M) {
        var G = this || M;
        return je.test(G.type) && G.click && I(G, "input") && $e(G, "click"), true;
      }, _default: function(M) {
        var G = M.target;
        return je.test(G.type) && G.click && I(G, "input") && O.get(G, "click") || I(G, "a");
      } }, beforeunload: { postDispatch: function(M) {
        M.result !== void 0 && M.originalEvent && (M.originalEvent.returnValue = M.result);
      } } } };
      function $e(M, G, fe) {
        if (!fe) {
          O.get(M, G) === void 0 && w.event.add(M, G, yr);
          return;
        }
        O.set(M, G, false), w.event.add(M, G, { namespace: false, handler: function(Se) {
          var Ce, Re = O.get(this, G);
          if (Se.isTrigger & 1 && this[G]) {
            if (Re) (w.event.special[G] || {}).delegateType && Se.stopPropagation();
            else if (Re = y.call(arguments), O.set(this, G, Re), this[G](), Ce = O.get(this, G), O.set(this, G, false), Re !== Ce) return Se.stopImmediatePropagation(), Se.preventDefault(), Ce;
          } else Re && (O.set(this, G, w.event.trigger(Re[0], Re.slice(1), this)), Se.stopPropagation(), Se.isImmediatePropagationStopped = yr);
        } });
      }
      w.removeEvent = function(M, G, fe) {
        M.removeEventListener && M.removeEventListener(G, fe);
      }, w.Event = function(M, G) {
        if (!(this instanceof w.Event)) return new w.Event(M, G);
        M && M.type ? (this.originalEvent = M, this.type = M.type, this.isDefaultPrevented = M.defaultPrevented || M.defaultPrevented === void 0 && M.returnValue === false ? yr : Ur, this.target = M.target && M.target.nodeType === 3 ? M.target.parentNode : M.target, this.currentTarget = M.currentTarget, this.relatedTarget = M.relatedTarget) : this.type = M, G && w.extend(this, G), this.timeStamp = M && M.timeStamp || Date.now(), this[w.expando] = true;
      }, w.Event.prototype = { constructor: w.Event, isDefaultPrevented: Ur, isPropagationStopped: Ur, isImmediatePropagationStopped: Ur, isSimulated: false, preventDefault: function() {
        var M = this.originalEvent;
        this.isDefaultPrevented = yr, M && !this.isSimulated && M.preventDefault();
      }, stopPropagation: function() {
        var M = this.originalEvent;
        this.isPropagationStopped = yr, M && !this.isSimulated && M.stopPropagation();
      }, stopImmediatePropagation: function() {
        var M = this.originalEvent;
        this.isImmediatePropagationStopped = yr, M && !this.isSimulated && M.stopImmediatePropagation(), this.stopPropagation();
      } }, w.each({ altKey: true, bubbles: true, cancelable: true, changedTouches: true, ctrlKey: true, detail: true, eventPhase: true, metaKey: true, pageX: true, pageY: true, shiftKey: true, view: true, char: true, code: true, charCode: true, key: true, keyCode: true, button: true, buttons: true, clientX: true, clientY: true, offsetX: true, offsetY: true, pointerId: true, pointerType: true, screenX: true, screenY: true, targetTouches: true, toElement: true, touches: true, which: true }, w.event.addProp), w.each({ focus: "focusin", blur: "focusout" }, function(M, G) {
        function fe(Se) {
          if (d.documentMode) {
            var Ce = O.get(this, "handle"), Re = w.event.fix(Se);
            Re.type = Se.type === "focusin" ? "focus" : "blur", Re.isSimulated = true, Ce(Se), Re.target === Re.currentTarget && Ce(Re);
          } else w.event.simulate(G, Se.target, w.event.fix(Se));
        }
        w.event.special[M] = { setup: function() {
          var Se;
          if ($e(this, M, true), d.documentMode) Se = O.get(this, G), Se || this.addEventListener(G, fe), O.set(this, G, (Se || 0) + 1);
          else return false;
        }, trigger: function() {
          return $e(this, M), true;
        }, teardown: function() {
          var Se;
          if (d.documentMode) Se = O.get(this, G) - 1, Se ? O.set(this, G, Se) : (this.removeEventListener(G, fe), O.remove(this, G));
          else return false;
        }, _default: function(Se) {
          return O.get(Se.target, M);
        }, delegateType: G }, w.event.special[G] = { setup: function() {
          var Se = this.ownerDocument || this.document || this, Ce = d.documentMode ? this : Se, Re = O.get(Ce, G);
          Re || (d.documentMode ? this.addEventListener(G, fe) : Se.addEventListener(M, fe, true)), O.set(Ce, G, (Re || 0) + 1);
        }, teardown: function() {
          var Se = this.ownerDocument || this.document || this, Ce = d.documentMode ? this : Se, Re = O.get(Ce, G) - 1;
          Re ? O.set(Ce, G, Re) : (d.documentMode ? this.removeEventListener(G, fe) : Se.removeEventListener(M, fe, true), O.remove(Ce, G));
        } };
      }), w.each({ mouseenter: "mouseover", mouseleave: "mouseout", pointerenter: "pointerover", pointerleave: "pointerout" }, function(M, G) {
        w.event.special[M] = { delegateType: G, bindType: G, handle: function(fe) {
          var Se, Ce = this, Re = fe.relatedTarget, Je = fe.handleObj;
          return (!Re || Re !== Ce && !w.contains(Ce, Re)) && (fe.type = Je.origType, Se = Je.handler.apply(this, arguments), fe.type = G), Se;
        } };
      }), w.fn.extend({ on: function(M, G, fe, Se) {
        return Pe(this, M, G, fe, Se);
      }, one: function(M, G, fe, Se) {
        return Pe(this, M, G, fe, Se, 1);
      }, off: function(M, G, fe) {
        var Se, Ce;
        if (M && M.preventDefault && M.handleObj) return Se = M.handleObj, w(M.delegateTarget).off(Se.namespace ? Se.origType + "." + Se.namespace : Se.origType, Se.selector, Se.handler), this;
        if (typeof M == "object") {
          for (Ce in M) this.off(Ce, G, M[Ce]);
          return this;
        }
        return (G === false || typeof G == "function") && (fe = G, G = void 0), fe === false && (fe = Ur), this.each(function() {
          w.event.remove(this, M, fe, G);
        });
      } });
      var le = /<script|<style|<link/i, te = /checked\s*(?:[^=]|=\s*.checked.)/i, Le = /^\s*<!\[CDATA\[|\]\]>\s*$/g;
      function nt(M, G) {
        return I(M, "table") && I(G.nodeType !== 11 ? G : G.firstChild, "tr") && w(M).children("tbody")[0] || M;
      }
      function ft(M) {
        return M.type = (M.getAttribute("type") !== null) + "/" + M.type, M;
      }
      function zt(M) {
        return (M.type || "").slice(0, 5) === "true/" ? M.type = M.type.slice(5) : M.removeAttribute("type"), M;
      }
      function st(M, G) {
        var fe, Se, Ce, Re, Je, Ut, _t;
        if (G.nodeType === 1) {
          if (O.hasData(M) && (Re = O.get(M), _t = Re.events, _t)) {
            O.remove(G, "handle events");
            for (Ce in _t) for (fe = 0, Se = _t[Ce].length; fe < Se; fe++) w.event.add(G, Ce, _t[Ce][fe]);
          }
          V.hasData(M) && (Je = V.access(M), Ut = w.extend({}, Je), V.set(G, Ut));
        }
      }
      function ct(M, G) {
        var fe = G.nodeName.toLowerCase();
        fe === "input" && je.test(M.type) ? G.checked = M.checked : (fe === "input" || fe === "textarea") && (G.defaultValue = M.defaultValue);
      }
      function yt(M, G, fe, Se) {
        G = t(G);
        var Ce, Re, Je, Ut, _t, Ht, tr = 0, Sr = M.length, Ee = Sr - 1, ot = G[0], Mt = a(ot);
        if (Mt || Sr > 1 && typeof ot == "string" && !g.checkClone && te.test(ot)) return M.each(function(gt) {
          var Rt = M.eq(gt);
          Mt && (G[0] = ot.call(this, gt, Rt.html())), yt(Rt, G, fe, Se);
        });
        if (Sr && (Ce = wr(G, M[0].ownerDocument, false, M, Se), Re = Ce.firstChild, Ce.childNodes.length === 1 && (Ce = Re), Re || Se)) {
          for (Je = w.map(qe(Ce, "script"), ft), Ut = Je.length; tr < Sr; tr++) _t = Ce, tr !== Ee && (_t = w.clone(_t, true, true), Ut && w.merge(Je, qe(_t, "script"))), fe.call(M[tr], _t, tr);
          if (Ut) for (Ht = Je[Je.length - 1].ownerDocument, w.map(Je, zt), tr = 0; tr < Ut; tr++) _t = Je[tr], at.test(_t.type || "") && !O.access(_t, "globalEval") && w.contains(Ht, _t) && (_t.src && (_t.type || "").toLowerCase() !== "module" ? w._evalUrl && !_t.noModule && w._evalUrl(_t.src, { nonce: _t.nonce || _t.getAttribute("nonce") }, Ht) : S(_t.textContent.replace(Le, ""), _t, Ht));
        }
        return M;
      }
      function Zt(M, G, fe) {
        for (var Se, Ce = G ? w.filter(G, M) : M, Re = 0; (Se = Ce[Re]) != null; Re++) !fe && Se.nodeType === 1 && w.cleanData(qe(Se)), Se.parentNode && (fe && de(Se) && Ft(qe(Se, "script")), Se.parentNode.removeChild(Se));
        return M;
      }
      w.extend({ htmlPrefilter: function(M) {
        return M;
      }, clone: function(M, G, fe) {
        var Se, Ce, Re, Je, Ut = M.cloneNode(true), _t = de(M);
        if (!g.noCloneChecked && (M.nodeType === 1 || M.nodeType === 11) && !w.isXMLDoc(M)) for (Je = qe(Ut), Re = qe(M), Se = 0, Ce = Re.length; Se < Ce; Se++) ct(Re[Se], Je[Se]);
        if (G) if (fe) for (Re = Re || qe(M), Je = Je || qe(Ut), Se = 0, Ce = Re.length; Se < Ce; Se++) st(Re[Se], Je[Se]);
        else st(M, Ut);
        return Je = qe(Ut, "script"), Je.length > 0 && Ft(Je, !_t && qe(M, "script")), Ut;
      }, cleanData: function(M) {
        for (var G, fe, Se, Ce = w.event.special, Re = 0; (fe = M[Re]) !== void 0; Re++) if (P(fe)) {
          if (G = fe[O.expando]) {
            if (G.events) for (Se in G.events) Ce[Se] ? w.event.remove(fe, Se) : w.removeEvent(fe, Se, G.handle);
            fe[O.expando] = void 0;
          }
          fe[V.expando] && (fe[V.expando] = void 0);
        }
      } }), w.fn.extend({ detach: function(M) {
        return Zt(this, M, true);
      }, remove: function(M) {
        return Zt(this, M);
      }, text: function(M) {
        return Ve(this, function(G) {
          return G === void 0 ? w.text(this) : this.empty().each(function() {
            (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) && (this.textContent = G);
          });
        }, null, M, arguments.length);
      }, append: function() {
        return yt(this, arguments, function(M) {
          if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
            var G = nt(this, M);
            G.appendChild(M);
          }
        });
      }, prepend: function() {
        return yt(this, arguments, function(M) {
          if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
            var G = nt(this, M);
            G.insertBefore(M, G.firstChild);
          }
        });
      }, before: function() {
        return yt(this, arguments, function(M) {
          this.parentNode && this.parentNode.insertBefore(M, this);
        });
      }, after: function() {
        return yt(this, arguments, function(M) {
          this.parentNode && this.parentNode.insertBefore(M, this.nextSibling);
        });
      }, empty: function() {
        for (var M, G = 0; (M = this[G]) != null; G++) M.nodeType === 1 && (w.cleanData(qe(M, false)), M.textContent = "");
        return this;
      }, clone: function(M, G) {
        return M = M ?? false, G = G ?? M, this.map(function() {
          return w.clone(this, M, G);
        });
      }, html: function(M) {
        return Ve(this, function(G) {
          var fe = this[0] || {}, Se = 0, Ce = this.length;
          if (G === void 0 && fe.nodeType === 1) return fe.innerHTML;
          if (typeof G == "string" && !le.test(G) && !Ae[(Ge.exec(G) || ["", ""])[1].toLowerCase()]) {
            G = w.htmlPrefilter(G);
            try {
              for (; Se < Ce; Se++) fe = this[Se] || {}, fe.nodeType === 1 && (w.cleanData(qe(fe, false)), fe.innerHTML = G);
              fe = 0;
            } catch {
            }
          }
          fe && this.empty().append(G);
        }, null, M, arguments.length);
      }, replaceWith: function() {
        var M = [];
        return yt(this, arguments, function(G) {
          var fe = this.parentNode;
          w.inArray(this, M) < 0 && (w.cleanData(qe(this)), fe && fe.replaceChild(G, this));
        }, M);
      } }), w.each({ appendTo: "append", prependTo: "prepend", insertBefore: "before", insertAfter: "after", replaceAll: "replaceWith" }, function(M, G) {
        w.fn[M] = function(fe) {
          for (var Se, Ce = [], Re = w(fe), Je = Re.length - 1, Ut = 0; Ut <= Je; Ut++) Se = Ut === Je ? this : this.clone(true), w(Re[Ut])[G](Se), o.apply(Ce, Se.get());
          return this.pushStack(Ce);
        };
      });
      var Ct = new RegExp("^(" + U + ")(?!px)[a-z%]+$", "i"), Lt = /^--/, Wt = function(M) {
        var G = M.ownerDocument.defaultView;
        return (!G || !G.opener) && (G = e), G.getComputedStyle(M);
      }, vr = function(M, G, fe) {
        var Se, Ce, Re = {};
        for (Ce in G) Re[Ce] = M.style[Ce], M.style[Ce] = G[Ce];
        Se = fe.call(M);
        for (Ce in G) M.style[Ce] = Re[Ce];
        return Se;
      }, ar = new RegExp(ae.join("|"), "i");
      (function() {
        function M() {
          if (Ht) {
            _t.style.cssText = "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0", Ht.style.cssText = "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%", W.appendChild(_t).appendChild(Ht);
            var tr = e.getComputedStyle(Ht);
            fe = tr.top !== "1%", Ut = G(tr.marginLeft) === 12, Ht.style.right = "60%", Re = G(tr.right) === 36, Se = G(tr.width) === 36, Ht.style.position = "absolute", Ce = G(Ht.offsetWidth / 3) === 12, W.removeChild(_t), Ht = null;
          }
        }
        function G(tr) {
          return Math.round(parseFloat(tr));
        }
        var fe, Se, Ce, Re, Je, Ut, _t = d.createElement("div"), Ht = d.createElement("div");
        Ht.style && (Ht.style.backgroundClip = "content-box", Ht.cloneNode(true).style.backgroundClip = "", g.clearCloneStyle = Ht.style.backgroundClip === "content-box", w.extend(g, { boxSizingReliable: function() {
          return M(), Se;
        }, pixelBoxStyles: function() {
          return M(), Re;
        }, pixelPosition: function() {
          return M(), fe;
        }, reliableMarginLeft: function() {
          return M(), Ut;
        }, scrollboxSize: function() {
          return M(), Ce;
        }, reliableTrDimensions: function() {
          var tr, Sr, Ee, ot;
          return Je == null && (tr = d.createElement("table"), Sr = d.createElement("tr"), Ee = d.createElement("div"), tr.style.cssText = "position:absolute;left:-11111px;border-collapse:separate", Sr.style.cssText = "box-sizing:content-box;border:1px solid", Sr.style.height = "1px", Ee.style.height = "9px", Ee.style.display = "block", W.appendChild(tr).appendChild(Sr).appendChild(Ee), ot = e.getComputedStyle(Sr), Je = parseInt(ot.height, 10) + parseInt(ot.borderTopWidth, 10) + parseInt(ot.borderBottomWidth, 10) === Sr.offsetHeight, W.removeChild(tr)), Je;
        } }));
      })();
      function sr(M, G, fe) {
        var Se, Ce, Re, Je, Ut = Lt.test(G), _t = M.style;
        return fe = fe || Wt(M), fe && (Je = fe.getPropertyValue(G) || fe[G], Ut && Je && (Je = Je.replace(x, "$1") || void 0), Je === "" && !de(M) && (Je = w.style(M, G)), !g.pixelBoxStyles() && Ct.test(Je) && ar.test(G) && (Se = _t.width, Ce = _t.minWidth, Re = _t.maxWidth, _t.minWidth = _t.maxWidth = _t.width = Je, Je = fe.width, _t.width = Se, _t.minWidth = Ce, _t.maxWidth = Re)), Je !== void 0 ? Je + "" : Je;
      }
      function gr(M, G) {
        return { get: function() {
          if (M()) {
            delete this.get;
            return;
          }
          return (this.get = G).apply(this, arguments);
        } };
      }
      var Tr = ["Webkit", "Moz", "ms"], Mr = d.createElement("div").style, Nr = {};
      function Lr(M) {
        for (var G = M[0].toUpperCase() + M.slice(1), fe = Tr.length; fe--; ) if (M = Tr[fe] + G, M in Mr) return M;
      }
      function jr(M) {
        var G = w.cssProps[M] || Nr[M];
        return G || (M in Mr ? M : Nr[M] = Lr(M) || M);
      }
      var Hr = /^(none|table(?!-c[ea]).+)/, kr = { position: "absolute", visibility: "hidden", display: "block" }, Xt = { letterSpacing: "0", fontWeight: "400" };
      function Qt(M, G, fe) {
        var Se = Y.exec(G);
        return Se ? Math.max(0, Se[2] - (fe || 0)) + (Se[3] || "px") : G;
      }
      function br(M, G, fe, Se, Ce, Re) {
        var Je = G === "width" ? 1 : 0, Ut = 0, _t = 0, Ht = 0;
        if (fe === (Se ? "border" : "content")) return 0;
        for (; Je < 4; Je += 2) fe === "margin" && (Ht += w.css(M, fe + ae[Je], true, Ce)), Se ? (fe === "content" && (_t -= w.css(M, "padding" + ae[Je], true, Ce)), fe !== "margin" && (_t -= w.css(M, "border" + ae[Je] + "Width", true, Ce))) : (_t += w.css(M, "padding" + ae[Je], true, Ce), fe !== "padding" ? _t += w.css(M, "border" + ae[Je] + "Width", true, Ce) : Ut += w.css(M, "border" + ae[Je] + "Width", true, Ce));
        return !Se && Re >= 0 && (_t += Math.max(0, Math.ceil(M["offset" + G[0].toUpperCase() + G.slice(1)] - Re - _t - Ut - 0.5)) || 0), _t + Ht;
      }
      function we(M, G, fe) {
        var Se = Wt(M), Ce = !g.boxSizingReliable() || fe, Re = Ce && w.css(M, "boxSizing", false, Se) === "border-box", Je = Re, Ut = sr(M, G, Se), _t = "offset" + G[0].toUpperCase() + G.slice(1);
        if (Ct.test(Ut)) {
          if (!fe) return Ut;
          Ut = "auto";
        }
        return (!g.boxSizingReliable() && Re || !g.reliableTrDimensions() && I(M, "tr") || Ut === "auto" || !parseFloat(Ut) && w.css(M, "display", false, Se) === "inline") && M.getClientRects().length && (Re = w.css(M, "boxSizing", false, Se) === "border-box", Je = _t in M, Je && (Ut = M[_t])), Ut = parseFloat(Ut) || 0, Ut + br(M, G, fe || (Re ? "border" : "content"), Je, Se, Ut) + "px";
      }
      w.extend({ cssHooks: { opacity: { get: function(M, G) {
        if (G) {
          var fe = sr(M, "opacity");
          return fe === "" ? "1" : fe;
        }
      } } }, cssNumber: { animationIterationCount: true, aspectRatio: true, borderImageSlice: true, columnCount: true, flexGrow: true, flexShrink: true, fontWeight: true, gridArea: true, gridColumn: true, gridColumnEnd: true, gridColumnStart: true, gridRow: true, gridRowEnd: true, gridRowStart: true, lineHeight: true, opacity: true, order: true, orphans: true, scale: true, widows: true, zIndex: true, zoom: true, fillOpacity: true, floodOpacity: true, stopOpacity: true, strokeMiterlimit: true, strokeOpacity: true }, cssProps: {}, style: function(M, G, fe, Se) {
        if (!(!M || M.nodeType === 3 || M.nodeType === 8 || !M.style)) {
          var Ce, Re, Je, Ut = ee(G), _t = Lt.test(G), Ht = M.style;
          if (_t || (G = jr(Ut)), Je = w.cssHooks[G] || w.cssHooks[Ut], fe !== void 0) {
            if (Re = typeof fe, Re === "string" && (Ce = Y.exec(fe)) && Ce[1] && (fe = ut(M, G, Ce), Re = "number"), fe == null || fe !== fe) return;
            Re === "number" && !_t && (fe += Ce && Ce[3] || (w.cssNumber[Ut] ? "" : "px")), !g.clearCloneStyle && fe === "" && G.indexOf("background") === 0 && (Ht[G] = "inherit"), (!Je || !("set" in Je) || (fe = Je.set(M, fe, Se)) !== void 0) && (_t ? Ht.setProperty(G, fe) : Ht[G] = fe);
          } else return Je && "get" in Je && (Ce = Je.get(M, false, Se)) !== void 0 ? Ce : Ht[G];
        }
      }, css: function(M, G, fe, Se) {
        var Ce, Re, Je, Ut = ee(G), _t = Lt.test(G);
        return _t || (G = jr(Ut)), Je = w.cssHooks[G] || w.cssHooks[Ut], Je && "get" in Je && (Ce = Je.get(M, true, fe)), Ce === void 0 && (Ce = sr(M, G, Se)), Ce === "normal" && G in Xt && (Ce = Xt[G]), fe === "" || fe ? (Re = parseFloat(Ce), fe === true || isFinite(Re) ? Re || 0 : Ce) : Ce;
      } }), w.each(["height", "width"], function(M, G) {
        w.cssHooks[G] = { get: function(fe, Se, Ce) {
          if (Se) return Hr.test(w.css(fe, "display")) && (!fe.getClientRects().length || !fe.getBoundingClientRect().width) ? vr(fe, kr, function() {
            return we(fe, G, Ce);
          }) : we(fe, G, Ce);
        }, set: function(fe, Se, Ce) {
          var Re, Je = Wt(fe), Ut = !g.scrollboxSize() && Je.position === "absolute", _t = Ut || Ce, Ht = _t && w.css(fe, "boxSizing", false, Je) === "border-box", tr = Ce ? br(fe, G, Ce, Ht, Je) : 0;
          return Ht && Ut && (tr -= Math.ceil(fe["offset" + G[0].toUpperCase() + G.slice(1)] - parseFloat(Je[G]) - br(fe, G, "border", false, Je) - 0.5)), tr && (Re = Y.exec(Se)) && (Re[3] || "px") !== "px" && (fe.style[G] = Se, Se = w.css(fe, G)), Qt(fe, Se, tr);
        } };
      }), w.cssHooks.marginLeft = gr(g.reliableMarginLeft, function(M, G) {
        if (G) return (parseFloat(sr(M, "marginLeft")) || M.getBoundingClientRect().left - vr(M, { marginLeft: 0 }, function() {
          return M.getBoundingClientRect().left;
        })) + "px";
      }), w.each({ margin: "", padding: "", border: "Width" }, function(M, G) {
        w.cssHooks[M + G] = { expand: function(fe) {
          for (var Se = 0, Ce = {}, Re = typeof fe == "string" ? fe.split(" ") : [fe]; Se < 4; Se++) Ce[M + ae[Se] + G] = Re[Se] || Re[Se - 2] || Re[0];
          return Ce;
        } }, M !== "margin" && (w.cssHooks[M + G].set = Qt);
      }), w.fn.extend({ css: function(M, G) {
        return Ve(this, function(fe, Se, Ce) {
          var Re, Je, Ut = {}, _t = 0;
          if (Array.isArray(Se)) {
            for (Re = Wt(fe), Je = Se.length; _t < Je; _t++) Ut[Se[_t]] = w.css(fe, Se[_t], false, Re);
            return Ut;
          }
          return Ce !== void 0 ? w.style(fe, Se, Ce) : w.css(fe, Se);
        }, M, G, arguments.length > 1);
      } });
      function me(M, G, fe, Se, Ce) {
        return new me.prototype.init(M, G, fe, Se, Ce);
      }
      w.Tween = me, me.prototype = { constructor: me, init: function(M, G, fe, Se, Ce, Re) {
        this.elem = M, this.prop = fe, this.easing = Ce || w.easing._default, this.options = G, this.start = this.now = this.cur(), this.end = Se, this.unit = Re || (w.cssNumber[fe] ? "" : "px");
      }, cur: function() {
        var M = me.propHooks[this.prop];
        return M && M.get ? M.get(this) : me.propHooks._default.get(this);
      }, run: function(M) {
        var G, fe = me.propHooks[this.prop];
        return this.options.duration ? this.pos = G = w.easing[this.easing](M, this.options.duration * M, 0, 1, this.options.duration) : this.pos = G = M, this.now = (this.end - this.start) * G + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), fe && fe.set ? fe.set(this) : me.propHooks._default.set(this), this;
      } }, me.prototype.init.prototype = me.prototype, me.propHooks = { _default: { get: function(M) {
        var G;
        return M.elem.nodeType !== 1 || M.elem[M.prop] != null && M.elem.style[M.prop] == null ? M.elem[M.prop] : (G = w.css(M.elem, M.prop, ""), !G || G === "auto" ? 0 : G);
      }, set: function(M) {
        w.fx.step[M.prop] ? w.fx.step[M.prop](M) : M.elem.nodeType === 1 && (w.cssHooks[M.prop] || M.elem.style[jr(M.prop)] != null) ? w.style(M.elem, M.prop, M.now + M.unit) : M.elem[M.prop] = M.now;
      } } }, me.propHooks.scrollTop = me.propHooks.scrollLeft = { set: function(M) {
        M.elem.nodeType && M.elem.parentNode && (M.elem[M.prop] = M.now);
      } }, w.easing = { linear: function(M) {
        return M;
      }, swing: function(M) {
        return 0.5 - Math.cos(M * Math.PI) / 2;
      }, _default: "swing" }, w.fx = me.prototype.init, w.fx.step = {};
      var ze, rt, Tt = /^(?:toggle|show|hide)$/, Ot = /queueHooks$/;
      function It() {
        rt && (d.hidden === false && e.requestAnimationFrame ? e.requestAnimationFrame(It) : e.setTimeout(It, w.fx.interval), w.fx.tick());
      }
      function We() {
        return e.setTimeout(function() {
          ze = void 0;
        }), ze = Date.now();
      }
      function mt(M, G) {
        var fe, Se = 0, Ce = { height: M };
        for (G = G ? 1 : 0; Se < 4; Se += 2 - G) fe = ae[Se], Ce["margin" + fe] = Ce["padding" + fe] = M;
        return G && (Ce.opacity = Ce.width = M), Ce;
      }
      function Gt(M, G, fe) {
        for (var Se, Ce = (hr.tweeners[G] || []).concat(hr.tweeners["*"]), Re = 0, Je = Ce.length; Re < Je; Re++) if (Se = Ce[Re].call(fe, G, M)) return Se;
      }
      function ir(M, G, fe) {
        var Se, Ce, Re, Je, Ut, _t, Ht, tr, Sr = "width" in G || "height" in G, Ee = this, ot = {}, Mt = M.style, gt = M.nodeType && Ne(M), Rt = O.get(M, "fxshow");
        fe.queue || (Je = w._queueHooks(M, "fx"), Je.unqueued == null && (Je.unqueued = 0, Ut = Je.empty.fire, Je.empty.fire = function() {
          Je.unqueued || Ut();
        }), Je.unqueued++, Ee.always(function() {
          Ee.always(function() {
            Je.unqueued--, w.queue(M, "fx").length || Je.empty.fire();
          });
        }));
        for (Se in G) if (Ce = G[Se], Tt.test(Ce)) {
          if (delete G[Se], Re = Re || Ce === "toggle", Ce === (gt ? "hide" : "show")) if (Ce === "show" && Rt && Rt[Se] !== void 0) gt = true;
          else continue;
          ot[Se] = Rt && Rt[Se] || w.style(M, Se);
        }
        if (_t = !w.isEmptyObject(G), !(!_t && w.isEmptyObject(ot))) {
          Sr && M.nodeType === 1 && (fe.overflow = [Mt.overflow, Mt.overflowX, Mt.overflowY], Ht = Rt && Rt.display, Ht == null && (Ht = O.get(M, "display")), tr = w.css(M, "display"), tr === "none" && (Ht ? tr = Ht : (rr([M], true), Ht = M.style.display || Ht, tr = w.css(M, "display"), rr([M]))), (tr === "inline" || tr === "inline-block" && Ht != null) && w.css(M, "float") === "none" && (_t || (Ee.done(function() {
            Mt.display = Ht;
          }), Ht == null && (tr = Mt.display, Ht = tr === "none" ? "" : tr)), Mt.display = "inline-block")), fe.overflow && (Mt.overflow = "hidden", Ee.always(function() {
            Mt.overflow = fe.overflow[0], Mt.overflowX = fe.overflow[1], Mt.overflowY = fe.overflow[2];
          })), _t = false;
          for (Se in ot) _t || (Rt ? "hidden" in Rt && (gt = Rt.hidden) : Rt = O.access(M, "fxshow", { display: Ht }), Re && (Rt.hidden = !gt), gt && rr([M], true), Ee.done(function() {
            gt || rr([M]), O.remove(M, "fxshow");
            for (Se in ot) w.style(M, Se, ot[Se]);
          })), _t = Gt(gt ? Rt[Se] : 0, Se, Ee), Se in Rt || (Rt[Se] = _t.start, gt && (_t.end = _t.start, _t.start = 0));
        }
      }
      function dr(M, G) {
        var fe, Se, Ce, Re, Je;
        for (fe in M) if (Se = ee(fe), Ce = G[Se], Re = M[fe], Array.isArray(Re) && (Ce = Re[1], Re = M[fe] = Re[0]), fe !== Se && (M[Se] = Re, delete M[fe]), Je = w.cssHooks[Se], Je && "expand" in Je) {
          Re = Je.expand(Re), delete M[Se];
          for (fe in Re) fe in M || (M[fe] = Re[fe], G[fe] = Ce);
        } else G[Se] = Ce;
      }
      function hr(M, G, fe) {
        var Se, Ce, Re = 0, Je = hr.prefilters.length, Ut = w.Deferred().always(function() {
          delete _t.elem;
        }), _t = function() {
          if (Ce) return false;
          for (var Sr = ze || We(), Ee = Math.max(0, Ht.startTime + Ht.duration - Sr), ot = Ee / Ht.duration || 0, Mt = 1 - ot, gt = 0, Rt = Ht.tweens.length; gt < Rt; gt++) Ht.tweens[gt].run(Mt);
          return Ut.notifyWith(M, [Ht, Mt, Ee]), Mt < 1 && Rt ? Ee : (Rt || Ut.notifyWith(M, [Ht, 1, 0]), Ut.resolveWith(M, [Ht]), false);
        }, Ht = Ut.promise({ elem: M, props: w.extend({}, G), opts: w.extend(true, { specialEasing: {}, easing: w.easing._default }, fe), originalProperties: G, originalOptions: fe, startTime: ze || We(), duration: fe.duration, tweens: [], createTween: function(Sr, Ee) {
          var ot = w.Tween(M, Ht.opts, Sr, Ee, Ht.opts.specialEasing[Sr] || Ht.opts.easing);
          return Ht.tweens.push(ot), ot;
        }, stop: function(Sr) {
          var Ee = 0, ot = Sr ? Ht.tweens.length : 0;
          if (Ce) return this;
          for (Ce = true; Ee < ot; Ee++) Ht.tweens[Ee].run(1);
          return Sr ? (Ut.notifyWith(M, [Ht, 1, 0]), Ut.resolveWith(M, [Ht, Sr])) : Ut.rejectWith(M, [Ht, Sr]), this;
        } }), tr = Ht.props;
        for (dr(tr, Ht.opts.specialEasing); Re < Je; Re++) if (Se = hr.prefilters[Re].call(Ht, M, tr, Ht.opts), Se) return a(Se.stop) && (w._queueHooks(Ht.elem, Ht.opts.queue).stop = Se.stop.bind(Se)), Se;
        return w.map(tr, Gt, Ht), a(Ht.opts.start) && Ht.opts.start.call(M, Ht), Ht.progress(Ht.opts.progress).done(Ht.opts.done, Ht.opts.complete).fail(Ht.opts.fail).always(Ht.opts.always), w.fx.timer(w.extend(_t, { elem: M, anim: Ht, queue: Ht.opts.queue })), Ht;
      }
      w.Animation = w.extend(hr, { tweeners: { "*": [function(M, G) {
        var fe = this.createTween(M, G);
        return ut(fe.elem, M, Y.exec(G), fe), fe;
      }] }, tweener: function(M, G) {
        a(M) ? (G = M, M = ["*"]) : M = M.match(oe);
        for (var fe, Se = 0, Ce = M.length; Se < Ce; Se++) fe = M[Se], hr.tweeners[fe] = hr.tweeners[fe] || [], hr.tweeners[fe].unshift(G);
      }, prefilters: [ir], prefilter: function(M, G) {
        G ? hr.prefilters.unshift(M) : hr.prefilters.push(M);
      } }), w.speed = function(M, G, fe) {
        var Se = M && typeof M == "object" ? w.extend({}, M) : { complete: fe || !fe && G || a(M) && M, duration: M, easing: fe && G || G && !a(G) && G };
        return w.fx.off ? Se.duration = 0 : typeof Se.duration != "number" && (Se.duration in w.fx.speeds ? Se.duration = w.fx.speeds[Se.duration] : Se.duration = w.fx.speeds._default), (Se.queue == null || Se.queue === true) && (Se.queue = "fx"), Se.old = Se.complete, Se.complete = function() {
          a(Se.old) && Se.old.call(this), Se.queue && w.dequeue(this, Se.queue);
        }, Se;
      }, w.fn.extend({ fadeTo: function(M, G, fe, Se) {
        return this.filter(Ne).css("opacity", 0).show().end().animate({ opacity: G }, M, fe, Se);
      }, animate: function(M, G, fe, Se) {
        var Ce = w.isEmptyObject(M), Re = w.speed(G, fe, Se), Je = function() {
          var Ut = hr(this, w.extend({}, M), Re);
          (Ce || O.get(this, "finish")) && Ut.stop(true);
        };
        return Je.finish = Je, Ce || Re.queue === false ? this.each(Je) : this.queue(Re.queue, Je);
      }, stop: function(M, G, fe) {
        var Se = function(Ce) {
          var Re = Ce.stop;
          delete Ce.stop, Re(fe);
        };
        return typeof M != "string" && (fe = G, G = M, M = void 0), G && this.queue(M || "fx", []), this.each(function() {
          var Ce = true, Re = M != null && M + "queueHooks", Je = w.timers, Ut = O.get(this);
          if (Re) Ut[Re] && Ut[Re].stop && Se(Ut[Re]);
          else for (Re in Ut) Ut[Re] && Ut[Re].stop && Ot.test(Re) && Se(Ut[Re]);
          for (Re = Je.length; Re--; ) Je[Re].elem === this && (M == null || Je[Re].queue === M) && (Je[Re].anim.stop(fe), Ce = false, Je.splice(Re, 1));
          (Ce || !fe) && w.dequeue(this, M);
        });
      }, finish: function(M) {
        return M !== false && (M = M || "fx"), this.each(function() {
          var G, fe = O.get(this), Se = fe[M + "queue"], Ce = fe[M + "queueHooks"], Re = w.timers, Je = Se ? Se.length : 0;
          for (fe.finish = true, w.queue(this, M, []), Ce && Ce.stop && Ce.stop.call(this, true), G = Re.length; G--; ) Re[G].elem === this && Re[G].queue === M && (Re[G].anim.stop(true), Re.splice(G, 1));
          for (G = 0; G < Je; G++) Se[G] && Se[G].finish && Se[G].finish.call(this);
          delete fe.finish;
        });
      } }), w.each(["toggle", "show", "hide"], function(M, G) {
        var fe = w.fn[G];
        w.fn[G] = function(Se, Ce, Re) {
          return Se == null || typeof Se == "boolean" ? fe.apply(this, arguments) : this.animate(mt(G, true), Se, Ce, Re);
        };
      }), w.each({ slideDown: mt("show"), slideUp: mt("hide"), slideToggle: mt("toggle"), fadeIn: { opacity: "show" }, fadeOut: { opacity: "hide" }, fadeToggle: { opacity: "toggle" } }, function(M, G) {
        w.fn[M] = function(fe, Se, Ce) {
          return this.animate(G, fe, Se, Ce);
        };
      }), w.timers = [], w.fx.tick = function() {
        var M, G = 0, fe = w.timers;
        for (ze = Date.now(); G < fe.length; G++) M = fe[G], !M() && fe[G] === M && fe.splice(G--, 1);
        fe.length || w.fx.stop(), ze = void 0;
      }, w.fx.timer = function(M) {
        w.timers.push(M), w.fx.start();
      }, w.fx.interval = 13, w.fx.start = function() {
        rt || (rt = true, It());
      }, w.fx.stop = function() {
        rt = null;
      }, w.fx.speeds = { slow: 600, fast: 200, _default: 400 }, w.fn.delay = function(M, G) {
        return M = w.fx && w.fx.speeds[M] || M, G = G || "fx", this.queue(G, function(fe, Se) {
          var Ce = e.setTimeout(fe, M);
          Se.stop = function() {
            e.clearTimeout(Ce);
          };
        });
      }, function() {
        var M = d.createElement("input"), G = d.createElement("select"), fe = G.appendChild(d.createElement("option"));
        M.type = "checkbox", g.checkOn = M.value !== "", g.optSelected = fe.selected, M = d.createElement("input"), M.value = "t", M.type = "radio", g.radioValue = M.value === "t";
      }();
      var Fr, Gr = w.expr.attrHandle;
      w.fn.extend({ attr: function(M, G) {
        return Ve(this, w.attr, M, G, arguments.length > 1);
      }, removeAttr: function(M) {
        return this.each(function() {
          w.removeAttr(this, M);
        });
      } }), w.extend({ attr: function(M, G, fe) {
        var Se, Ce, Re = M.nodeType;
        if (!(Re === 3 || Re === 8 || Re === 2)) {
          if (typeof M.getAttribute > "u") return w.prop(M, G, fe);
          if ((Re !== 1 || !w.isXMLDoc(M)) && (Ce = w.attrHooks[G.toLowerCase()] || (w.expr.match.bool.test(G) ? Fr : void 0)), fe !== void 0) {
            if (fe === null) {
              w.removeAttr(M, G);
              return;
            }
            return Ce && "set" in Ce && (Se = Ce.set(M, fe, G)) !== void 0 ? Se : (M.setAttribute(G, fe + ""), fe);
          }
          return Ce && "get" in Ce && (Se = Ce.get(M, G)) !== null ? Se : (Se = w.find.attr(M, G), Se ?? void 0);
        }
      }, attrHooks: { type: { set: function(M, G) {
        if (!g.radioValue && G === "radio" && I(M, "input")) {
          var fe = M.value;
          return M.setAttribute("type", G), fe && (M.value = fe), G;
        }
      } } }, removeAttr: function(M, G) {
        var fe, Se = 0, Ce = G && G.match(oe);
        if (Ce && M.nodeType === 1) for (; fe = Ce[Se++]; ) M.removeAttribute(fe);
      } }), Fr = { set: function(M, G, fe) {
        return G === false ? w.removeAttr(M, fe) : M.setAttribute(fe, fe), fe;
      } }, w.each(w.expr.match.bool.source.match(/\w+/g), function(M, G) {
        var fe = Gr[G] || w.find.attr;
        Gr[G] = function(Se, Ce, Re) {
          var Je, Ut, _t = Ce.toLowerCase();
          return Re || (Ut = Gr[_t], Gr[_t] = Je, Je = fe(Se, Ce, Re) != null ? _t : null, Gr[_t] = Ut), Je;
        };
      });
      var Br = /^(?:input|select|textarea|button)$/i, Dr = /^(?:a|area)$/i;
      w.fn.extend({ prop: function(M, G) {
        return Ve(this, w.prop, M, G, arguments.length > 1);
      }, removeProp: function(M) {
        return this.each(function() {
          delete this[w.propFix[M] || M];
        });
      } }), w.extend({ prop: function(M, G, fe) {
        var Se, Ce, Re = M.nodeType;
        if (!(Re === 3 || Re === 8 || Re === 2)) return (Re !== 1 || !w.isXMLDoc(M)) && (G = w.propFix[G] || G, Ce = w.propHooks[G]), fe !== void 0 ? Ce && "set" in Ce && (Se = Ce.set(M, fe, G)) !== void 0 ? Se : M[G] = fe : Ce && "get" in Ce && (Se = Ce.get(M, G)) !== null ? Se : M[G];
      }, propHooks: { tabIndex: { get: function(M) {
        var G = w.find.attr(M, "tabindex");
        return G ? parseInt(G, 10) : Br.test(M.nodeName) || Dr.test(M.nodeName) && M.href ? 0 : -1;
      } } }, propFix: { for: "htmlFor", class: "className" } }), g.optSelected || (w.propHooks.selected = { get: function(M) {
        var G = M.parentNode;
        return G && G.parentNode && G.parentNode.selectedIndex, null;
      }, set: function(M) {
        var G = M.parentNode;
        G && (G.selectedIndex, G.parentNode && G.parentNode.selectedIndex);
      } }), w.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function() {
        w.propFix[this.toLowerCase()] = this;
      });
      function Vr(M) {
        var G = M.match(oe) || [];
        return G.join(" ");
      }
      function be(M) {
        return M.getAttribute && M.getAttribute("class") || "";
      }
      function Or(M) {
        return Array.isArray(M) ? M : typeof M == "string" ? M.match(oe) || [] : [];
      }
      w.fn.extend({ addClass: function(M) {
        var G, fe, Se, Ce, Re, Je;
        return a(M) ? this.each(function(Ut) {
          w(this).addClass(M.call(this, Ut, be(this)));
        }) : (G = Or(M), G.length ? this.each(function() {
          if (Se = be(this), fe = this.nodeType === 1 && " " + Vr(Se) + " ", fe) {
            for (Re = 0; Re < G.length; Re++) Ce = G[Re], fe.indexOf(" " + Ce + " ") < 0 && (fe += Ce + " ");
            Je = Vr(fe), Se !== Je && this.setAttribute("class", Je);
          }
        }) : this);
      }, removeClass: function(M) {
        var G, fe, Se, Ce, Re, Je;
        return a(M) ? this.each(function(Ut) {
          w(this).removeClass(M.call(this, Ut, be(this)));
        }) : arguments.length ? (G = Or(M), G.length ? this.each(function() {
          if (Se = be(this), fe = this.nodeType === 1 && " " + Vr(Se) + " ", fe) {
            for (Re = 0; Re < G.length; Re++) for (Ce = G[Re]; fe.indexOf(" " + Ce + " ") > -1; ) fe = fe.replace(" " + Ce + " ", " ");
            Je = Vr(fe), Se !== Je && this.setAttribute("class", Je);
          }
        }) : this) : this.attr("class", "");
      }, toggleClass: function(M, G) {
        var fe, Se, Ce, Re, Je = typeof M, Ut = Je === "string" || Array.isArray(M);
        return a(M) ? this.each(function(_t) {
          w(this).toggleClass(M.call(this, _t, be(this), G), G);
        }) : typeof G == "boolean" && Ut ? G ? this.addClass(M) : this.removeClass(M) : (fe = Or(M), this.each(function() {
          if (Ut) for (Re = w(this), Ce = 0; Ce < fe.length; Ce++) Se = fe[Ce], Re.hasClass(Se) ? Re.removeClass(Se) : Re.addClass(Se);
          else (M === void 0 || Je === "boolean") && (Se = be(this), Se && O.set(this, "__className__", Se), this.setAttribute && this.setAttribute("class", Se || M === false ? "" : O.get(this, "__className__") || ""));
        }));
      }, hasClass: function(M) {
        var G, fe, Se = 0;
        for (G = " " + M + " "; fe = this[Se++]; ) if (fe.nodeType === 1 && (" " + Vr(be(fe)) + " ").indexOf(G) > -1) return true;
        return false;
      } });
      var Ue = /\r/g;
      w.fn.extend({ val: function(M) {
        var G, fe, Se, Ce = this[0];
        return arguments.length ? (Se = a(M), this.each(function(Re) {
          var Je;
          this.nodeType === 1 && (Se ? Je = M.call(this, Re, w(this).val()) : Je = M, Je == null ? Je = "" : typeof Je == "number" ? Je += "" : Array.isArray(Je) && (Je = w.map(Je, function(Ut) {
            return Ut == null ? "" : Ut + "";
          })), G = w.valHooks[this.type] || w.valHooks[this.nodeName.toLowerCase()], (!G || !("set" in G) || G.set(this, Je, "value") === void 0) && (this.value = Je));
        })) : Ce ? (G = w.valHooks[Ce.type] || w.valHooks[Ce.nodeName.toLowerCase()], G && "get" in G && (fe = G.get(Ce, "value")) !== void 0 ? fe : (fe = Ce.value, typeof fe == "string" ? fe.replace(Ue, "") : fe ?? "")) : void 0;
      } }), w.extend({ valHooks: { option: { get: function(M) {
        var G = w.find.attr(M, "value");
        return G ?? Vr(w.text(M));
      } }, select: { get: function(M) {
        var G, fe, Se, Ce = M.options, Re = M.selectedIndex, Je = M.type === "select-one", Ut = Je ? null : [], _t = Je ? Re + 1 : Ce.length;
        for (Re < 0 ? Se = _t : Se = Je ? Re : 0; Se < _t; Se++) if (fe = Ce[Se], (fe.selected || Se === Re) && !fe.disabled && (!fe.parentNode.disabled || !I(fe.parentNode, "optgroup"))) {
          if (G = w(fe).val(), Je) return G;
          Ut.push(G);
        }
        return Ut;
      }, set: function(M, G) {
        for (var fe, Se, Ce = M.options, Re = w.makeArray(G), Je = Ce.length; Je--; ) Se = Ce[Je], (Se.selected = w.inArray(w.valHooks.option.get(Se), Re) > -1) && (fe = true);
        return fe || (M.selectedIndex = -1), Re;
      } } } }), w.each(["radio", "checkbox"], function() {
        w.valHooks[this] = { set: function(M, G) {
          if (Array.isArray(G)) return M.checked = w.inArray(w(M).val(), G) > -1;
        } }, g.checkOn || (w.valHooks[this].get = function(M) {
          return M.getAttribute("value") === null ? "on" : M.value;
        });
      });
      var it = e.location, dt = { guid: Date.now() }, vt = /\?/;
      w.parseXML = function(M) {
        var G, fe;
        if (!M || typeof M != "string") return null;
        try {
          G = new e.DOMParser().parseFromString(M, "text/xml");
        } catch {
        }
        return fe = G && G.getElementsByTagName("parsererror")[0], (!G || fe) && w.error("Invalid XML: " + (fe ? w.map(fe.childNodes, function(Se) {
          return Se.textContent;
        }).join(`
`) : M)), G;
      };
      var wt = /^(?:focusinfocus|focusoutblur)$/, Pt = function(M) {
        M.stopPropagation();
      };
      w.extend(w.event, { trigger: function(M, G, fe, Se) {
        var Ce, Re, Je, Ut, _t, Ht, tr, Sr, Ee = [fe || d], ot = f.call(M, "type") ? M.type : M, Mt = f.call(M, "namespace") ? M.namespace.split(".") : [];
        if (Re = Sr = Je = fe = fe || d, !(fe.nodeType === 3 || fe.nodeType === 8) && !wt.test(ot + w.event.triggered) && (ot.indexOf(".") > -1 && (Mt = ot.split("."), ot = Mt.shift(), Mt.sort()), _t = ot.indexOf(":") < 0 && "on" + ot, M = M[w.expando] ? M : new w.Event(ot, typeof M == "object" && M), M.isTrigger = Se ? 2 : 3, M.namespace = Mt.join("."), M.rnamespace = M.namespace ? new RegExp("(^|\\.)" + Mt.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, M.result = void 0, M.target || (M.target = fe), G = G == null ? [M] : w.makeArray(G, [M]), tr = w.event.special[ot] || {}, !(!Se && tr.trigger && tr.trigger.apply(fe, G) === false))) {
          if (!Se && !tr.noBubble && !l(fe)) {
            for (Ut = tr.delegateType || ot, wt.test(Ut + ot) || (Re = Re.parentNode); Re; Re = Re.parentNode) Ee.push(Re), Je = Re;
            Je === (fe.ownerDocument || d) && Ee.push(Je.defaultView || Je.parentWindow || e);
          }
          for (Ce = 0; (Re = Ee[Ce++]) && !M.isPropagationStopped(); ) Sr = Re, M.type = Ce > 1 ? Ut : tr.bindType || ot, Ht = (O.get(Re, "events") || /* @__PURE__ */ Object.create(null))[M.type] && O.get(Re, "handle"), Ht && Ht.apply(Re, G), Ht = _t && Re[_t], Ht && Ht.apply && P(Re) && (M.result = Ht.apply(Re, G), M.result === false && M.preventDefault());
          return M.type = ot, !Se && !M.isDefaultPrevented() && (!tr._default || tr._default.apply(Ee.pop(), G) === false) && P(fe) && _t && a(fe[ot]) && !l(fe) && (Je = fe[_t], Je && (fe[_t] = null), w.event.triggered = ot, M.isPropagationStopped() && Sr.addEventListener(ot, Pt), fe[ot](), M.isPropagationStopped() && Sr.removeEventListener(ot, Pt), w.event.triggered = void 0, Je && (fe[_t] = Je)), M.result;
        }
      }, simulate: function(M, G, fe) {
        var Se = w.extend(new w.Event(), fe, { type: M, isSimulated: true });
        w.event.trigger(Se, null, G);
      } }), w.fn.extend({ trigger: function(M, G) {
        return this.each(function() {
          w.event.trigger(M, G, this);
        });
      }, triggerHandler: function(M, G) {
        var fe = this[0];
        if (fe) return w.event.trigger(M, G, fe, true);
      } });
      var Yt = /\[\]$/, cr = /\r?\n/g, qr = /^(?:submit|button|image|reset|file)$/i, Vt = /^(?:input|select|textarea|keygen)/i;
      function zr(M, G, fe, Se) {
        var Ce;
        if (Array.isArray(G)) w.each(G, function(Re, Je) {
          fe || Yt.test(M) ? Se(M, Je) : zr(M + "[" + (typeof Je == "object" && Je != null ? Re : "") + "]", Je, fe, Se);
        });
        else if (!fe && E(G) === "object") for (Ce in G) zr(M + "[" + Ce + "]", G[Ce], fe, Se);
        else Se(M, G);
      }
      w.param = function(M, G) {
        var fe, Se = [], Ce = function(Re, Je) {
          var Ut = a(Je) ? Je() : Je;
          Se[Se.length] = encodeURIComponent(Re) + "=" + encodeURIComponent(Ut ?? "");
        };
        if (M == null) return "";
        if (Array.isArray(M) || M.jquery && !w.isPlainObject(M)) w.each(M, function() {
          Ce(this.name, this.value);
        });
        else for (fe in M) zr(fe, M[fe], G, Ce);
        return Se.join("&");
      }, w.fn.extend({ serialize: function() {
        return w.param(this.serializeArray());
      }, serializeArray: function() {
        return this.map(function() {
          var M = w.prop(this, "elements");
          return M ? w.makeArray(M) : this;
        }).filter(function() {
          var M = this.type;
          return this.name && !w(this).is(":disabled") && Vt.test(this.nodeName) && !qr.test(M) && (this.checked || !je.test(M));
        }).map(function(M, G) {
          var fe = w(this).val();
          return fe == null ? null : Array.isArray(fe) ? w.map(fe, function(Se) {
            return { name: G.name, value: Se.replace(cr, `\r
`) };
          }) : { name: G.name, value: fe.replace(cr, `\r
`) };
        }).get();
      } });
      var en = /%20/g, Me = /#.*$/, De = /([?&])_=[^&]*/, Ke = /^(.*?):[ \t]*([^\r\n]*)$/mg, Bt = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/, St = /^(?:GET|HEAD)$/, ur = /^\/\//, Cr = {}, Wr = {}, Qr = "*/".concat("*"), dn = d.createElement("a");
      dn.href = it.href;
      function wn(M) {
        return function(G, fe) {
          typeof G != "string" && (fe = G, G = "*");
          var Se, Ce = 0, Re = G.toLowerCase().match(oe) || [];
          if (a(fe)) for (; Se = Re[Ce++]; ) Se[0] === "+" ? (Se = Se.slice(1) || "*", (M[Se] = M[Se] || []).unshift(fe)) : (M[Se] = M[Se] || []).push(fe);
        };
      }
      function yn(M, G, fe, Se) {
        var Ce = {}, Re = M === Wr;
        function Je(Ut) {
          var _t;
          return Ce[Ut] = true, w.each(M[Ut] || [], function(Ht, tr) {
            var Sr = tr(G, fe, Se);
            if (typeof Sr == "string" && !Re && !Ce[Sr]) return G.dataTypes.unshift(Sr), Je(Sr), false;
            if (Re) return !(_t = Sr);
          }), _t;
        }
        return Je(G.dataTypes[0]) || !Ce["*"] && Je("*");
      }
      function pi(M, G) {
        var fe, Se, Ce = w.ajaxSettings.flatOptions || {};
        for (fe in G) G[fe] !== void 0 && ((Ce[fe] ? M : Se || (Se = {}))[fe] = G[fe]);
        return Se && w.extend(true, M, Se), M;
      }
      function Bi(M, G, fe) {
        for (var Se, Ce, Re, Je, Ut = M.contents, _t = M.dataTypes; _t[0] === "*"; ) _t.shift(), Se === void 0 && (Se = M.mimeType || G.getResponseHeader("Content-Type"));
        if (Se) {
          for (Ce in Ut) if (Ut[Ce] && Ut[Ce].test(Se)) {
            _t.unshift(Ce);
            break;
          }
        }
        if (_t[0] in fe) Re = _t[0];
        else {
          for (Ce in fe) {
            if (!_t[0] || M.converters[Ce + " " + _t[0]]) {
              Re = Ce;
              break;
            }
            Je || (Je = Ce);
          }
          Re = Re || Je;
        }
        if (Re) return Re !== _t[0] && _t.unshift(Re), fe[Re];
      }
      function Ni(M, G, fe, Se) {
        var Ce, Re, Je, Ut, _t, Ht = {}, tr = M.dataTypes.slice();
        if (tr[1]) for (Je in M.converters) Ht[Je.toLowerCase()] = M.converters[Je];
        for (Re = tr.shift(); Re; ) if (M.responseFields[Re] && (fe[M.responseFields[Re]] = G), !_t && Se && M.dataFilter && (G = M.dataFilter(G, M.dataType)), _t = Re, Re = tr.shift(), Re) {
          if (Re === "*") Re = _t;
          else if (_t !== "*" && _t !== Re) {
            if (Je = Ht[_t + " " + Re] || Ht["* " + Re], !Je) {
              for (Ce in Ht) if (Ut = Ce.split(" "), Ut[1] === Re && (Je = Ht[_t + " " + Ut[0]] || Ht["* " + Ut[0]], Je)) {
                Je === true ? Je = Ht[Ce] : Ht[Ce] !== true && (Re = Ut[0], tr.unshift(Ut[1]));
                break;
              }
            }
            if (Je !== true) if (Je && M.throws) G = Je(G);
            else try {
              G = Je(G);
            } catch (Sr) {
              return { state: "parsererror", error: Je ? Sr : "No conversion from " + _t + " to " + Re };
            }
          }
        }
        return { state: "success", data: G };
      }
      w.extend({ active: 0, lastModified: {}, etag: {}, ajaxSettings: { url: it.href, type: "GET", isLocal: Bt.test(it.protocol), global: true, processData: true, async: true, contentType: "application/x-www-form-urlencoded; charset=UTF-8", accepts: { "*": Qr, text: "text/plain", html: "text/html", xml: "application/xml, text/xml", json: "application/json, text/javascript" }, contents: { xml: /\bxml\b/, html: /\bhtml/, json: /\bjson\b/ }, responseFields: { xml: "responseXML", text: "responseText", json: "responseJSON" }, converters: { "* text": String, "text html": true, "text json": JSON.parse, "text xml": w.parseXML }, flatOptions: { url: true, context: true } }, ajaxSetup: function(M, G) {
        return G ? pi(pi(M, w.ajaxSettings), G) : pi(w.ajaxSettings, M);
      }, ajaxPrefilter: wn(Cr), ajaxTransport: wn(Wr), ajax: function(M, G) {
        typeof M == "object" && (G = M, M = void 0), G = G || {};
        var fe, Se, Ce, Re, Je, Ut, _t, Ht, tr, Sr, Ee = w.ajaxSetup({}, G), ot = Ee.context || Ee, Mt = Ee.context && (ot.nodeType || ot.jquery) ? w(ot) : w.event, gt = w.Deferred(), Rt = w.Callbacks("once memory"), or = Ee.statusCode || {}, nr = {}, Yr = {}, Xr = "canceled", $r = { readyState: 0, getResponseHeader: function(Kr) {
          var Ir;
          if (_t) {
            if (!Re) for (Re = {}; Ir = Ke.exec(Ce); ) Re[Ir[1].toLowerCase() + " "] = (Re[Ir[1].toLowerCase() + " "] || []).concat(Ir[2]);
            Ir = Re[Kr.toLowerCase() + " "];
          }
          return Ir == null ? null : Ir.join(", ");
        }, getAllResponseHeaders: function() {
          return _t ? Ce : null;
        }, setRequestHeader: function(Kr, Ir) {
          return _t == null && (Kr = Yr[Kr.toLowerCase()] = Yr[Kr.toLowerCase()] || Kr, nr[Kr] = Ir), this;
        }, overrideMimeType: function(Kr) {
          return _t == null && (Ee.mimeType = Kr), this;
        }, statusCode: function(Kr) {
          var Ir;
          if (Kr) if (_t) $r.always(Kr[$r.status]);
          else for (Ir in Kr) or[Ir] = [or[Ir], Kr[Ir]];
          return this;
        }, abort: function(Kr) {
          var Ir = Kr || Xr;
          return fe && fe.abort(Ir), un(0, Ir), this;
        } };
        if (gt.promise($r), Ee.url = ((M || Ee.url || it.href) + "").replace(ur, it.protocol + "//"), Ee.type = G.method || G.type || Ee.method || Ee.type, Ee.dataTypes = (Ee.dataType || "*").toLowerCase().match(oe) || [""], Ee.crossDomain == null) {
          Ut = d.createElement("a");
          try {
            Ut.href = Ee.url, Ut.href = Ut.href, Ee.crossDomain = dn.protocol + "//" + dn.host != Ut.protocol + "//" + Ut.host;
          } catch {
            Ee.crossDomain = true;
          }
        }
        if (Ee.data && Ee.processData && typeof Ee.data != "string" && (Ee.data = w.param(Ee.data, Ee.traditional)), yn(Cr, Ee, G, $r), _t) return $r;
        Ht = w.event && Ee.global, Ht && w.active++ === 0 && w.event.trigger("ajaxStart"), Ee.type = Ee.type.toUpperCase(), Ee.hasContent = !St.test(Ee.type), Se = Ee.url.replace(Me, ""), Ee.hasContent ? Ee.data && Ee.processData && (Ee.contentType || "").indexOf("application/x-www-form-urlencoded") === 0 && (Ee.data = Ee.data.replace(en, "+")) : (Sr = Ee.url.slice(Se.length), Ee.data && (Ee.processData || typeof Ee.data == "string") && (Se += (vt.test(Se) ? "&" : "?") + Ee.data, delete Ee.data), Ee.cache === false && (Se = Se.replace(De, "$1"), Sr = (vt.test(Se) ? "&" : "?") + "_=" + dt.guid++ + Sr), Ee.url = Se + Sr), Ee.ifModified && (w.lastModified[Se] && $r.setRequestHeader("If-Modified-Since", w.lastModified[Se]), w.etag[Se] && $r.setRequestHeader("If-None-Match", w.etag[Se])), (Ee.data && Ee.hasContent && Ee.contentType !== false || G.contentType) && $r.setRequestHeader("Content-Type", Ee.contentType), $r.setRequestHeader("Accept", Ee.dataTypes[0] && Ee.accepts[Ee.dataTypes[0]] ? Ee.accepts[Ee.dataTypes[0]] + (Ee.dataTypes[0] !== "*" ? ", " + Qr + "; q=0.01" : "") : Ee.accepts["*"]);
        for (tr in Ee.headers) $r.setRequestHeader(tr, Ee.headers[tr]);
        if (Ee.beforeSend && (Ee.beforeSend.call(ot, $r, Ee) === false || _t)) return $r.abort();
        if (Xr = "abort", Rt.add(Ee.complete), $r.done(Ee.success), $r.fail(Ee.error), fe = yn(Wr, Ee, G, $r), !fe) un(-1, "No Transport");
        else {
          if ($r.readyState = 1, Ht && Mt.trigger("ajaxSend", [$r, Ee]), _t) return $r;
          Ee.async && Ee.timeout > 0 && (Je = e.setTimeout(function() {
            $r.abort("timeout");
          }, Ee.timeout));
          try {
            _t = false, fe.send(nr, un);
          } catch (Kr) {
            if (_t) throw Kr;
            un(-1, Kr);
          }
        }
        function un(Kr, Ir, An, En) {
          var Sn, On, gn, Bn, jn, qn = Ir;
          _t || (_t = true, Je && e.clearTimeout(Je), fe = void 0, Ce = En || "", $r.readyState = Kr > 0 ? 4 : 0, Sn = Kr >= 200 && Kr < 300 || Kr === 304, An && (Bn = Bi(Ee, $r, An)), !Sn && w.inArray("script", Ee.dataTypes) > -1 && w.inArray("json", Ee.dataTypes) < 0 && (Ee.converters["text script"] = function() {
          }), Bn = Ni(Ee, Bn, $r, Sn), Sn ? (Ee.ifModified && (jn = $r.getResponseHeader("Last-Modified"), jn && (w.lastModified[Se] = jn), jn = $r.getResponseHeader("etag"), jn && (w.etag[Se] = jn)), Kr === 204 || Ee.type === "HEAD" ? qn = "nocontent" : Kr === 304 ? qn = "notmodified" : (qn = Bn.state, On = Bn.data, gn = Bn.error, Sn = !gn)) : (gn = qn, (Kr || !qn) && (qn = "error", Kr < 0 && (Kr = 0))), $r.status = Kr, $r.statusText = (Ir || qn) + "", Sn ? gt.resolveWith(ot, [On, qn, $r]) : gt.rejectWith(ot, [$r, qn, gn]), $r.statusCode(or), or = void 0, Ht && Mt.trigger(Sn ? "ajaxSuccess" : "ajaxError", [$r, Ee, Sn ? On : gn]), Rt.fireWith(ot, [$r, qn]), Ht && (Mt.trigger("ajaxComplete", [$r, Ee]), --w.active || w.event.trigger("ajaxStop")));
        }
        return $r;
      }, getJSON: function(M, G, fe) {
        return w.get(M, G, fe, "json");
      }, getScript: function(M, G) {
        return w.get(M, void 0, G, "script");
      } }), w.each(["get", "post"], function(M, G) {
        w[G] = function(fe, Se, Ce, Re) {
          return a(Se) && (Re = Re || Ce, Ce = Se, Se = void 0), w.ajax(w.extend({ url: fe, type: G, dataType: Re, data: Se, success: Ce }, w.isPlainObject(fe) && fe));
        };
      }), w.ajaxPrefilter(function(M) {
        var G;
        for (G in M.headers) G.toLowerCase() === "content-type" && (M.contentType = M.headers[G] || "");
      }), w._evalUrl = function(M, G, fe) {
        return w.ajax({ url: M, type: "GET", dataType: "script", cache: true, async: false, global: false, converters: { "text script": function() {
        } }, dataFilter: function(Se) {
          w.globalEval(Se, G, fe);
        } });
      }, w.fn.extend({ wrapAll: function(M) {
        var G;
        return this[0] && (a(M) && (M = M.call(this[0])), G = w(M, this[0].ownerDocument).eq(0).clone(true), this[0].parentNode && G.insertBefore(this[0]), G.map(function() {
          for (var fe = this; fe.firstElementChild; ) fe = fe.firstElementChild;
          return fe;
        }).append(this)), this;
      }, wrapInner: function(M) {
        return a(M) ? this.each(function(G) {
          w(this).wrapInner(M.call(this, G));
        }) : this.each(function() {
          var G = w(this), fe = G.contents();
          fe.length ? fe.wrapAll(M) : G.append(M);
        });
      }, wrap: function(M) {
        var G = a(M);
        return this.each(function(fe) {
          w(this).wrapAll(G ? M.call(this, fe) : M);
        });
      }, unwrap: function(M) {
        return this.parent(M).not("body").each(function() {
          w(this).replaceWith(this.childNodes);
        }), this;
      } }), w.expr.pseudos.hidden = function(M) {
        return !w.expr.pseudos.visible(M);
      }, w.expr.pseudos.visible = function(M) {
        return !!(M.offsetWidth || M.offsetHeight || M.getClientRects().length);
      }, w.ajaxSettings.xhr = function() {
        try {
          return new e.XMLHttpRequest();
        } catch {
        }
      };
      var Un = { 0: 200, 1223: 204 }, Xe = w.ajaxSettings.xhr();
      g.cors = !!Xe && "withCredentials" in Xe, g.ajax = Xe = !!Xe, w.ajaxTransport(function(M) {
        var G, fe;
        if (g.cors || Xe && !M.crossDomain) return { send: function(Se, Ce) {
          var Re, Je = M.xhr();
          if (Je.open(M.type, M.url, M.async, M.username, M.password), M.xhrFields) for (Re in M.xhrFields) Je[Re] = M.xhrFields[Re];
          M.mimeType && Je.overrideMimeType && Je.overrideMimeType(M.mimeType), !M.crossDomain && !Se["X-Requested-With"] && (Se["X-Requested-With"] = "XMLHttpRequest");
          for (Re in Se) Je.setRequestHeader(Re, Se[Re]);
          G = function(Ut) {
            return function() {
              G && (G = fe = Je.onload = Je.onerror = Je.onabort = Je.ontimeout = Je.onreadystatechange = null, Ut === "abort" ? Je.abort() : Ut === "error" ? typeof Je.status != "number" ? Ce(0, "error") : Ce(Je.status, Je.statusText) : Ce(Un[Je.status] || Je.status, Je.statusText, (Je.responseType || "text") !== "text" || typeof Je.responseText != "string" ? { binary: Je.response } : { text: Je.responseText }, Je.getAllResponseHeaders()));
            };
          }, Je.onload = G(), fe = Je.onerror = Je.ontimeout = G("error"), Je.onabort !== void 0 ? Je.onabort = fe : Je.onreadystatechange = function() {
            Je.readyState === 4 && e.setTimeout(function() {
              G && fe();
            });
          }, G = G("abort");
          try {
            Je.send(M.hasContent && M.data || null);
          } catch (Ut) {
            if (G) throw Ut;
          }
        }, abort: function() {
          G && G();
        } };
      }), w.ajaxPrefilter(function(M) {
        M.crossDomain && (M.contents.script = false);
      }), w.ajaxSetup({ accepts: { script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript" }, contents: { script: /\b(?:java|ecma)script\b/ }, converters: { "text script": function(M) {
        return w.globalEval(M), M;
      } } }), w.ajaxPrefilter("script", function(M) {
        M.cache === void 0 && (M.cache = false), M.crossDomain && (M.type = "GET");
      }), w.ajaxTransport("script", function(M) {
        if (M.crossDomain || M.scriptAttrs) {
          var G, fe;
          return { send: function(Se, Ce) {
            G = w("<script>").attr(M.scriptAttrs || {}).prop({ charset: M.scriptCharset, src: M.url }).on("load error", fe = function(Re) {
              G.remove(), fe = null, Re && Ce(Re.type === "error" ? 404 : 200, Re.type);
            }), d.head.appendChild(G[0]);
          }, abort: function() {
            fe && fe();
          } };
        }
      });
      var Ye = [], bt = /(=)\?(?=&|$)|\?\?/;
      w.ajaxSetup({ jsonp: "callback", jsonpCallback: function() {
        var M = Ye.pop() || w.expando + "_" + dt.guid++;
        return this[M] = true, M;
      } }), w.ajaxPrefilter("json jsonp", function(M, G, fe) {
        var Se, Ce, Re, Je = M.jsonp !== false && (bt.test(M.url) ? "url" : typeof M.data == "string" && (M.contentType || "").indexOf("application/x-www-form-urlencoded") === 0 && bt.test(M.data) && "data");
        if (Je || M.dataTypes[0] === "jsonp") return Se = M.jsonpCallback = a(M.jsonpCallback) ? M.jsonpCallback() : M.jsonpCallback, Je ? M[Je] = M[Je].replace(bt, "$1" + Se) : M.jsonp !== false && (M.url += (vt.test(M.url) ? "&" : "?") + M.jsonp + "=" + Se), M.converters["script json"] = function() {
          return Re || w.error(Se + " was not called"), Re[0];
        }, M.dataTypes[0] = "json", Ce = e[Se], e[Se] = function() {
          Re = arguments;
        }, fe.always(function() {
          Ce === void 0 ? w(e).removeProp(Se) : e[Se] = Ce, M[Se] && (M.jsonpCallback = G.jsonpCallback, Ye.push(Se)), Re && a(Ce) && Ce(Re[0]), Re = Ce = void 0;
        }), "script";
      }), g.createHTMLDocument = function() {
        var M = d.implementation.createHTMLDocument("").body;
        return M.innerHTML = "<form></form><form></form>", M.childNodes.length === 2;
      }(), w.parseHTML = function(M, G, fe) {
        if (typeof M != "string") return [];
        typeof G == "boolean" && (fe = G, G = false);
        var Se, Ce, Re;
        return G || (g.createHTMLDocument ? (G = d.implementation.createHTMLDocument(""), Se = G.createElement("base"), Se.href = d.location.href, G.head.appendChild(Se)) : G = d), Ce = J.exec(M), Re = !fe && [], Ce ? [G.createElement(Ce[1])] : (Ce = wr([M], G, Re), Re && Re.length && w(Re).remove(), w.merge([], Ce.childNodes));
      }, w.fn.load = function(M, G, fe) {
        var Se, Ce, Re, Je = this, Ut = M.indexOf(" ");
        return Ut > -1 && (Se = Vr(M.slice(Ut)), M = M.slice(0, Ut)), a(G) ? (fe = G, G = void 0) : G && typeof G == "object" && (Ce = "POST"), Je.length > 0 && w.ajax({ url: M, type: Ce || "GET", dataType: "html", data: G }).done(function(_t) {
          Re = arguments, Je.html(Se ? w("<div>").append(w.parseHTML(_t)).find(Se) : _t);
        }).always(fe && function(_t, Ht) {
          Je.each(function() {
            fe.apply(this, Re || [_t.responseText, Ht, _t]);
          });
        }), this;
      }, w.expr.pseudos.animated = function(M) {
        return w.grep(w.timers, function(G) {
          return M === G.elem;
        }).length;
      }, w.offset = { setOffset: function(M, G, fe) {
        var Se, Ce, Re, Je, Ut, _t, Ht, tr = w.css(M, "position"), Sr = w(M), Ee = {};
        tr === "static" && (M.style.position = "relative"), Ut = Sr.offset(), Re = w.css(M, "top"), _t = w.css(M, "left"), Ht = (tr === "absolute" || tr === "fixed") && (Re + _t).indexOf("auto") > -1, Ht ? (Se = Sr.position(), Je = Se.top, Ce = Se.left) : (Je = parseFloat(Re) || 0, Ce = parseFloat(_t) || 0), a(G) && (G = G.call(M, fe, w.extend({}, Ut))), G.top != null && (Ee.top = G.top - Ut.top + Je), G.left != null && (Ee.left = G.left - Ut.left + Ce), "using" in G ? G.using.call(M, Ee) : Sr.css(Ee);
      } }, w.fn.extend({ offset: function(M) {
        if (arguments.length) return M === void 0 ? this : this.each(function(Ce) {
          w.offset.setOffset(this, M, Ce);
        });
        var G, fe, Se = this[0];
        if (Se) return Se.getClientRects().length ? (G = Se.getBoundingClientRect(), fe = Se.ownerDocument.defaultView, { top: G.top + fe.pageYOffset, left: G.left + fe.pageXOffset }) : { top: 0, left: 0 };
      }, position: function() {
        if (this[0]) {
          var M, G, fe, Se = this[0], Ce = { top: 0, left: 0 };
          if (w.css(Se, "position") === "fixed") G = Se.getBoundingClientRect();
          else {
            for (G = this.offset(), fe = Se.ownerDocument, M = Se.offsetParent || fe.documentElement; M && (M === fe.body || M === fe.documentElement) && w.css(M, "position") === "static"; ) M = M.parentNode;
            M && M !== Se && M.nodeType === 1 && (Ce = w(M).offset(), Ce.top += w.css(M, "borderTopWidth", true), Ce.left += w.css(M, "borderLeftWidth", true));
          }
          return { top: G.top - Ce.top - w.css(Se, "marginTop", true), left: G.left - Ce.left - w.css(Se, "marginLeft", true) };
        }
      }, offsetParent: function() {
        return this.map(function() {
          for (var M = this.offsetParent; M && w.css(M, "position") === "static"; ) M = M.offsetParent;
          return M || W;
        });
      } }), w.each({ scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function(M, G) {
        var fe = G === "pageYOffset";
        w.fn[M] = function(Se) {
          return Ve(this, function(Ce, Re, Je) {
            var Ut;
            if (l(Ce) ? Ut = Ce : Ce.nodeType === 9 && (Ut = Ce.defaultView), Je === void 0) return Ut ? Ut[G] : Ce[Re];
            Ut ? Ut.scrollTo(fe ? Ut.pageXOffset : Je, fe ? Je : Ut.pageYOffset) : Ce[Re] = Je;
          }, M, Se, arguments.length);
        };
      }), w.each(["top", "left"], function(M, G) {
        w.cssHooks[G] = gr(g.pixelPosition, function(fe, Se) {
          if (Se) return Se = sr(fe, G), Ct.test(Se) ? w(fe).position()[G] + "px" : Se;
        });
      }), w.each({ Height: "height", Width: "width" }, function(M, G) {
        w.each({ padding: "inner" + M, content: G, "": "outer" + M }, function(fe, Se) {
          w.fn[Se] = function(Ce, Re) {
            var Je = arguments.length && (fe || typeof Ce != "boolean"), Ut = fe || (Ce === true || Re === true ? "margin" : "border");
            return Ve(this, function(_t, Ht, tr) {
              var Sr;
              return l(_t) ? Se.indexOf("outer") === 0 ? _t["inner" + M] : _t.document.documentElement["client" + M] : _t.nodeType === 9 ? (Sr = _t.documentElement, Math.max(_t.body["scroll" + M], Sr["scroll" + M], _t.body["offset" + M], Sr["offset" + M], Sr["client" + M])) : tr === void 0 ? w.css(_t, Ht, Ut) : w.style(_t, Ht, tr, Ut);
            }, G, Je ? Ce : void 0, Je);
          };
        });
      }), w.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function(M, G) {
        w.fn[G] = function(fe) {
          return this.on(G, fe);
        };
      }), w.fn.extend({ bind: function(M, G, fe) {
        return this.on(M, null, G, fe);
      }, unbind: function(M, G) {
        return this.off(M, null, G);
      }, delegate: function(M, G, fe, Se) {
        return this.on(G, M, fe, Se);
      }, undelegate: function(M, G, fe) {
        return arguments.length === 1 ? this.off(M, "**") : this.off(G, M || "**", fe);
      }, hover: function(M, G) {
        return this.on("mouseenter", M).on("mouseleave", G || M);
      } }), w.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "), function(M, G) {
        w.fn[G] = function(fe, Se) {
          return arguments.length > 0 ? this.on(G, null, fe, Se) : this.trigger(G);
        };
      });
      var xt = /^[\s\uFEFF\xA0]+|([^\s\uFEFF\xA0])[\s\uFEFF\xA0]+$/g;
      w.proxy = function(M, G) {
        var fe, Se, Ce;
        if (typeof G == "string" && (fe = M[G], G = M, M = fe), !!a(M)) return Se = y.call(arguments, 2), Ce = function() {
          return M.apply(G || this, Se.concat(y.call(arguments)));
        }, Ce.guid = M.guid = M.guid || w.guid++, Ce;
      }, w.holdReady = function(M) {
        M ? w.readyWait++ : w.ready(true);
      }, w.isArray = Array.isArray, w.parseJSON = JSON.parse, w.nodeName = I, w.isFunction = a, w.isWindow = l, w.camelCase = ee, w.type = E, w.now = Date.now, w.isNumeric = function(M) {
        var G = w.type(M);
        return (G === "number" || G === "string") && !isNaN(M - parseFloat(M));
      }, w.trim = function(M) {
        return M == null ? "" : (M + "").replace(xt, "$1");
      };
      var $t = e.jQuery, fr = e.$;
      return w.noConflict = function(M) {
        return e.$ === w && (e.$ = fr), M && e.jQuery === w && (e.jQuery = $t), w;
      }, typeof n > "u" && (e.jQuery = e.$ = w), w;
    });
  }(rc)), rc.exports;
}
var fy = ly();
const Jr = Kd(fy);
var Ic = {}, Ua = {}, xf;
function py() {
  if (xf) return Ua;
  xf = 1, Ua.byteLength = o, Ua.toByteArray = c, Ua.fromByteArray = r;
  for (var v = [], e = [], n = typeof Uint8Array < "u" ? Uint8Array : Array, i = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", u = 0, y = i.length; u < y; ++u) v[u] = i[u], e[i.charCodeAt(u)] = u;
  e[45] = 62, e[95] = 63;
  function t(m) {
    var g = m.length;
    if (g % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
    var a = m.indexOf("=");
    a === -1 && (a = g);
    var l = a === g ? 0 : 4 - a % 4;
    return [a, l];
  }
  function o(m) {
    var g = t(m), a = g[0], l = g[1];
    return (a + l) * 3 / 4 - l;
  }
  function s(m, g, a) {
    return (g + a) * 3 / 4 - a;
  }
  function c(m) {
    var g, a = t(m), l = a[0], d = a[1], b = new n(s(m, l, d)), S = 0, E = d > 0 ? l - 4 : l, R;
    for (R = 0; R < E; R += 4) g = e[m.charCodeAt(R)] << 18 | e[m.charCodeAt(R + 1)] << 12 | e[m.charCodeAt(R + 2)] << 6 | e[m.charCodeAt(R + 3)], b[S++] = g >> 16 & 255, b[S++] = g >> 8 & 255, b[S++] = g & 255;
    return d === 2 && (g = e[m.charCodeAt(R)] << 2 | e[m.charCodeAt(R + 1)] >> 4, b[S++] = g & 255), d === 1 && (g = e[m.charCodeAt(R)] << 10 | e[m.charCodeAt(R + 1)] << 4 | e[m.charCodeAt(R + 2)] >> 2, b[S++] = g >> 8 & 255, b[S++] = g & 255), b;
  }
  function h(m) {
    return v[m >> 18 & 63] + v[m >> 12 & 63] + v[m >> 6 & 63] + v[m & 63];
  }
  function f(m, g, a) {
    for (var l, d = [], b = g; b < a; b += 3) l = (m[b] << 16 & 16711680) + (m[b + 1] << 8 & 65280) + (m[b + 2] & 255), d.push(h(l));
    return d.join("");
  }
  function r(m) {
    for (var g, a = m.length, l = a % 3, d = [], b = 16383, S = 0, E = a - l; S < E; S += b) d.push(f(m, S, S + b > E ? E : S + b));
    return l === 1 ? (g = m[a - 1], d.push(v[g >> 2] + v[g << 4 & 63] + "==")) : l === 2 && (g = (m[a - 2] << 8) + m[a - 1], d.push(v[g >> 10] + v[g >> 4 & 63] + v[g << 2 & 63] + "=")), d.join("");
  }
  return Ua;
}
var Hs = {};
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
var Tf;
function hy() {
  return Tf || (Tf = 1, Hs.read = function(v, e, n, i, u) {
    var y, t, o = u * 8 - i - 1, s = (1 << o) - 1, c = s >> 1, h = -7, f = n ? u - 1 : 0, r = n ? -1 : 1, m = v[e + f];
    for (f += r, y = m & (1 << -h) - 1, m >>= -h, h += o; h > 0; y = y * 256 + v[e + f], f += r, h -= 8) ;
    for (t = y & (1 << -h) - 1, y >>= -h, h += i; h > 0; t = t * 256 + v[e + f], f += r, h -= 8) ;
    if (y === 0) y = 1 - c;
    else {
      if (y === s) return t ? NaN : (m ? -1 : 1) * (1 / 0);
      t = t + Math.pow(2, i), y = y - c;
    }
    return (m ? -1 : 1) * t * Math.pow(2, y - i);
  }, Hs.write = function(v, e, n, i, u, y) {
    var t, o, s, c = y * 8 - u - 1, h = (1 << c) - 1, f = h >> 1, r = u === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, m = i ? 0 : y - 1, g = i ? 1 : -1, a = e < 0 || e === 0 && 1 / e < 0 ? 1 : 0;
    for (e = Math.abs(e), isNaN(e) || e === 1 / 0 ? (o = isNaN(e) ? 1 : 0, t = h) : (t = Math.floor(Math.log(e) / Math.LN2), e * (s = Math.pow(2, -t)) < 1 && (t--, s *= 2), t + f >= 1 ? e += r / s : e += r * Math.pow(2, 1 - f), e * s >= 2 && (t++, s /= 2), t + f >= h ? (o = 0, t = h) : t + f >= 1 ? (o = (e * s - 1) * Math.pow(2, u), t = t + f) : (o = e * Math.pow(2, f - 1) * Math.pow(2, u), t = 0)); u >= 8; v[n + m] = o & 255, m += g, o /= 256, u -= 8) ;
    for (t = t << u | o, c += u; c > 0; v[n + m] = t & 255, m += g, t /= 256, c -= 8) ;
    v[n + m - g] |= a * 128;
  }), Hs;
}
/*!
* The buffer module from node.js, for the browser.
*
* @author   Feross Aboukhadijeh <https://feross.org>
* @license  MIT
*/
var kf;
function Xd() {
  return kf || (kf = 1, function(v) {
    const e = py(), n = hy(), i = typeof Symbol == "function" && typeof Symbol.for == "function" ? Symbol.for("nodejs.util.inspect.custom") : null;
    v.Buffer = o, v.SlowBuffer = b, v.INSPECT_MAX_BYTES = 50;
    const u = 2147483647;
    v.kMaxLength = u, o.TYPED_ARRAY_SUPPORT = y(), !o.TYPED_ARRAY_SUPPORT && typeof console < "u" && typeof console.error == "function" && console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");
    function y() {
      try {
        const D = new Uint8Array(1), C = { foo: function() {
          return 42;
        } };
        return Object.setPrototypeOf(C, Uint8Array.prototype), Object.setPrototypeOf(D, C), D.foo() === 42;
      } catch {
        return false;
      }
    }
    Object.defineProperty(o.prototype, "parent", { enumerable: true, get: function() {
      if (o.isBuffer(this)) return this.buffer;
    } }), Object.defineProperty(o.prototype, "offset", { enumerable: true, get: function() {
      if (o.isBuffer(this)) return this.byteOffset;
    } });
    function t(D) {
      if (D > u) throw new RangeError('The value "' + D + '" is invalid for option "size"');
      const C = new Uint8Array(D);
      return Object.setPrototypeOf(C, o.prototype), C;
    }
    function o(D, C, p) {
      if (typeof D == "number") {
        if (typeof C == "string") throw new TypeError('The "string" argument must be of type string. Received type number');
        return f(D);
      }
      return s(D, C, p);
    }
    o.poolSize = 8192;
    function s(D, C, p) {
      if (typeof D == "string") return r(D, C);
      if (ArrayBuffer.isView(D)) return g(D);
      if (D == null) throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof D);
      if (ee(D, ArrayBuffer) || D && ee(D.buffer, ArrayBuffer) || typeof SharedArrayBuffer < "u" && (ee(D, SharedArrayBuffer) || D && ee(D.buffer, SharedArrayBuffer))) return a(D, C, p);
      if (typeof D == "number") throw new TypeError('The "value" argument must not be of type number. Received type number');
      const A = D.valueOf && D.valueOf();
      if (A != null && A !== D) return o.from(A, C, p);
      const U = l(D);
      if (U) return U;
      if (typeof Symbol < "u" && Symbol.toPrimitive != null && typeof D[Symbol.toPrimitive] == "function") return o.from(D[Symbol.toPrimitive]("string"), C, p);
      throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof D);
    }
    o.from = function(D, C, p) {
      return s(D, C, p);
    }, Object.setPrototypeOf(o.prototype, Uint8Array.prototype), Object.setPrototypeOf(o, Uint8Array);
    function c(D) {
      if (typeof D != "number") throw new TypeError('"size" argument must be of type number');
      if (D < 0) throw new RangeError('The value "' + D + '" is invalid for option "size"');
    }
    function h(D, C, p) {
      return c(D), D <= 0 ? t(D) : C !== void 0 ? typeof p == "string" ? t(D).fill(C, p) : t(D).fill(C) : t(D);
    }
    o.alloc = function(D, C, p) {
      return h(D, C, p);
    };
    function f(D) {
      return c(D), t(D < 0 ? 0 : d(D) | 0);
    }
    o.allocUnsafe = function(D) {
      return f(D);
    }, o.allocUnsafeSlow = function(D) {
      return f(D);
    };
    function r(D, C) {
      if ((typeof C != "string" || C === "") && (C = "utf8"), !o.isEncoding(C)) throw new TypeError("Unknown encoding: " + C);
      const p = S(D, C) | 0;
      let A = t(p);
      const U = A.write(D, C);
      return U !== p && (A = A.slice(0, U)), A;
    }
    function m(D) {
      const C = D.length < 0 ? 0 : d(D.length) | 0, p = t(C);
      for (let A = 0; A < C; A += 1) p[A] = D[A] & 255;
      return p;
    }
    function g(D) {
      if (ee(D, Uint8Array)) {
        const C = new Uint8Array(D);
        return a(C.buffer, C.byteOffset, C.byteLength);
      }
      return m(D);
    }
    function a(D, C, p) {
      if (C < 0 || D.byteLength < C) throw new RangeError('"offset" is outside of buffer bounds');
      if (D.byteLength < C + (p || 0)) throw new RangeError('"length" is outside of buffer bounds');
      let A;
      return C === void 0 && p === void 0 ? A = new Uint8Array(D) : p === void 0 ? A = new Uint8Array(D, C) : A = new Uint8Array(D, C, p), Object.setPrototypeOf(A, o.prototype), A;
    }
    function l(D) {
      if (o.isBuffer(D)) {
        const C = d(D.length) | 0, p = t(C);
        return p.length === 0 || D.copy(p, 0, 0, C), p;
      }
      if (D.length !== void 0) return typeof D.length != "number" || P(D.length) ? t(0) : m(D);
      if (D.type === "Buffer" && Array.isArray(D.data)) return m(D.data);
    }
    function d(D) {
      if (D >= u) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + u.toString(16) + " bytes");
      return D | 0;
    }
    function b(D) {
      return +D != D && (D = 0), o.alloc(+D);
    }
    o.isBuffer = function(C) {
      return C != null && C._isBuffer === true && C !== o.prototype;
    }, o.compare = function(C, p) {
      if (ee(C, Uint8Array) && (C = o.from(C, C.offset, C.byteLength)), ee(p, Uint8Array) && (p = o.from(p, p.offset, p.byteLength)), !o.isBuffer(C) || !o.isBuffer(p)) throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
      if (C === p) return 0;
      let A = C.length, U = p.length;
      for (let Y = 0, ae = Math.min(A, U); Y < ae; ++Y) if (C[Y] !== p[Y]) {
        A = C[Y], U = p[Y];
        break;
      }
      return A < U ? -1 : U < A ? 1 : 0;
    }, o.isEncoding = function(C) {
      switch (String(C).toLowerCase()) {
        case "hex":
        case "utf8":
        case "utf-8":
        case "ascii":
        case "latin1":
        case "binary":
        case "base64":
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return true;
        default:
          return false;
      }
    }, o.concat = function(C, p) {
      if (!Array.isArray(C)) throw new TypeError('"list" argument must be an Array of Buffers');
      if (C.length === 0) return o.alloc(0);
      let A;
      if (p === void 0) for (p = 0, A = 0; A < C.length; ++A) p += C[A].length;
      const U = o.allocUnsafe(p);
      let Y = 0;
      for (A = 0; A < C.length; ++A) {
        let ae = C[A];
        if (ee(ae, Uint8Array)) Y + ae.length > U.length ? (o.isBuffer(ae) || (ae = o.from(ae)), ae.copy(U, Y)) : Uint8Array.prototype.set.call(U, ae, Y);
        else if (o.isBuffer(ae)) ae.copy(U, Y);
        else throw new TypeError('"list" argument must be an Array of Buffers');
        Y += ae.length;
      }
      return U;
    };
    function S(D, C) {
      if (o.isBuffer(D)) return D.length;
      if (ArrayBuffer.isView(D) || ee(D, ArrayBuffer)) return D.byteLength;
      if (typeof D != "string") throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof D);
      const p = D.length, A = arguments.length > 2 && arguments[2] === true;
      if (!A && p === 0) return 0;
      let U = false;
      for (; ; ) switch (C) {
        case "ascii":
        case "latin1":
        case "binary":
          return p;
        case "utf8":
        case "utf-8":
          return xe(D).length;
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return p * 2;
        case "hex":
          return p >>> 1;
        case "base64":
          return Be(D).length;
        default:
          if (U) return A ? -1 : xe(D).length;
          C = ("" + C).toLowerCase(), U = true;
      }
    }
    o.byteLength = S;
    function E(D, C, p) {
      let A = false;
      if ((C === void 0 || C < 0) && (C = 0), C > this.length || ((p === void 0 || p > this.length) && (p = this.length), p <= 0) || (p >>>= 0, C >>>= 0, p <= C)) return "";
      for (D || (D = "utf8"); ; ) switch (D) {
        case "hex":
          return ue(this, C, p);
        case "utf8":
        case "utf-8":
          return x(this, C, p);
        case "ascii":
          return z(this, C, p);
        case "latin1":
        case "binary":
          return Z(this, C, p);
        case "base64":
          return _(this, C, p);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return $(this, C, p);
        default:
          if (A) throw new TypeError("Unknown encoding: " + D);
          D = (D + "").toLowerCase(), A = true;
      }
    }
    o.prototype._isBuffer = true;
    function R(D, C, p) {
      const A = D[C];
      D[C] = D[p], D[p] = A;
    }
    o.prototype.swap16 = function() {
      const C = this.length;
      if (C % 2 !== 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
      for (let p = 0; p < C; p += 2) R(this, p, p + 1);
      return this;
    }, o.prototype.swap32 = function() {
      const C = this.length;
      if (C % 4 !== 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
      for (let p = 0; p < C; p += 4) R(this, p, p + 3), R(this, p + 1, p + 2);
      return this;
    }, o.prototype.swap64 = function() {
      const C = this.length;
      if (C % 8 !== 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
      for (let p = 0; p < C; p += 8) R(this, p, p + 7), R(this, p + 1, p + 6), R(this, p + 2, p + 5), R(this, p + 3, p + 4);
      return this;
    }, o.prototype.toString = function() {
      const C = this.length;
      return C === 0 ? "" : arguments.length === 0 ? x(this, 0, C) : E.apply(this, arguments);
    }, o.prototype.toLocaleString = o.prototype.toString, o.prototype.equals = function(C) {
      if (!o.isBuffer(C)) throw new TypeError("Argument must be a Buffer");
      return this === C ? true : o.compare(this, C) === 0;
    }, o.prototype.inspect = function() {
      let C = "";
      const p = v.INSPECT_MAX_BYTES;
      return C = this.toString("hex", 0, p).replace(/(.{2})/g, "$1 ").trim(), this.length > p && (C += " ... "), "<Buffer " + C + ">";
    }, i && (o.prototype[i] = o.prototype.inspect), o.prototype.compare = function(C, p, A, U, Y) {
      if (ee(C, Uint8Array) && (C = o.from(C, C.offset, C.byteLength)), !o.isBuffer(C)) throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof C);
      if (p === void 0 && (p = 0), A === void 0 && (A = C ? C.length : 0), U === void 0 && (U = 0), Y === void 0 && (Y = this.length), p < 0 || A > C.length || U < 0 || Y > this.length) throw new RangeError("out of range index");
      if (U >= Y && p >= A) return 0;
      if (U >= Y) return -1;
      if (p >= A) return 1;
      if (p >>>= 0, A >>>= 0, U >>>= 0, Y >>>= 0, this === C) return 0;
      let ae = Y - U, W = A - p;
      const de = Math.min(ae, W), tt = this.slice(U, Y), Ne = C.slice(p, A);
      for (let ut = 0; ut < de; ++ut) if (tt[ut] !== Ne[ut]) {
        ae = tt[ut], W = Ne[ut];
        break;
      }
      return ae < W ? -1 : W < ae ? 1 : 0;
    };
    function k(D, C, p, A, U) {
      if (D.length === 0) return -1;
      if (typeof p == "string" ? (A = p, p = 0) : p > 2147483647 ? p = 2147483647 : p < -2147483648 && (p = -2147483648), p = +p, P(p) && (p = U ? 0 : D.length - 1), p < 0 && (p = D.length + p), p >= D.length) {
        if (U) return -1;
        p = D.length - 1;
      } else if (p < 0) if (U) p = 0;
      else return -1;
      if (typeof C == "string" && (C = o.from(C, A)), o.isBuffer(C)) return C.length === 0 ? -1 : w(D, C, p, A, U);
      if (typeof C == "number") return C = C & 255, typeof Uint8Array.prototype.indexOf == "function" ? U ? Uint8Array.prototype.indexOf.call(D, C, p) : Uint8Array.prototype.lastIndexOf.call(D, C, p) : w(D, [C], p, A, U);
      throw new TypeError("val must be string, number or Buffer");
    }
    function w(D, C, p, A, U) {
      let Y = 1, ae = D.length, W = C.length;
      if (A !== void 0 && (A = String(A).toLowerCase(), A === "ucs2" || A === "ucs-2" || A === "utf16le" || A === "utf-16le")) {
        if (D.length < 2 || C.length < 2) return -1;
        Y = 2, ae /= 2, W /= 2, p /= 2;
      }
      function de(Ne, ut) {
        return Y === 1 ? Ne[ut] : Ne.readUInt16BE(ut * Y);
      }
      let tt;
      if (U) {
        let Ne = -1;
        for (tt = p; tt < ae; tt++) if (de(D, tt) === de(C, Ne === -1 ? 0 : tt - Ne)) {
          if (Ne === -1 && (Ne = tt), tt - Ne + 1 === W) return Ne * Y;
        } else Ne !== -1 && (tt -= tt - Ne), Ne = -1;
      } else for (p + W > ae && (p = ae - W), tt = p; tt >= 0; tt--) {
        let Ne = true;
        for (let ut = 0; ut < W; ut++) if (de(D, tt + ut) !== de(C, ut)) {
          Ne = false;
          break;
        }
        if (Ne) return tt;
      }
      return -1;
    }
    o.prototype.includes = function(C, p, A) {
      return this.indexOf(C, p, A) !== -1;
    }, o.prototype.indexOf = function(C, p, A) {
      return k(this, C, p, A, true);
    }, o.prototype.lastIndexOf = function(C, p, A) {
      return k(this, C, p, A, false);
    };
    function F(D, C, p, A) {
      p = Number(p) || 0;
      const U = D.length - p;
      A ? (A = Number(A), A > U && (A = U)) : A = U;
      const Y = C.length;
      A > Y / 2 && (A = Y / 2);
      let ae;
      for (ae = 0; ae < A; ++ae) {
        const W = parseInt(C.substr(ae * 2, 2), 16);
        if (P(W)) return ae;
        D[p + ae] = W;
      }
      return ae;
    }
    function I(D, C, p, A) {
      return Qe(xe(C, D.length - p), D, p, A);
    }
    function q(D, C, p, A) {
      return Qe(Ve(C), D, p, A);
    }
    function N(D, C, p, A) {
      return Qe(Be(C), D, p, A);
    }
    function H(D, C, p, A) {
      return Qe(_e(C, D.length - p), D, p, A);
    }
    o.prototype.write = function(C, p, A, U) {
      if (p === void 0) U = "utf8", A = this.length, p = 0;
      else if (A === void 0 && typeof p == "string") U = p, A = this.length, p = 0;
      else if (isFinite(p)) p = p >>> 0, isFinite(A) ? (A = A >>> 0, U === void 0 && (U = "utf8")) : (U = A, A = void 0);
      else throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
      const Y = this.length - p;
      if ((A === void 0 || A > Y) && (A = Y), C.length > 0 && (A < 0 || p < 0) || p > this.length) throw new RangeError("Attempt to write outside buffer bounds");
      U || (U = "utf8");
      let ae = false;
      for (; ; ) switch (U) {
        case "hex":
          return F(this, C, p, A);
        case "utf8":
        case "utf-8":
          return I(this, C, p, A);
        case "ascii":
        case "latin1":
        case "binary":
          return q(this, C, p, A);
        case "base64":
          return N(this, C, p, A);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return H(this, C, p, A);
        default:
          if (ae) throw new TypeError("Unknown encoding: " + U);
          U = ("" + U).toLowerCase(), ae = true;
      }
    }, o.prototype.toJSON = function() {
      return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
    };
    function _(D, C, p) {
      return C === 0 && p === D.length ? e.fromByteArray(D) : e.fromByteArray(D.slice(C, p));
    }
    function x(D, C, p) {
      p = Math.min(D.length, p);
      const A = [];
      let U = C;
      for (; U < p; ) {
        const Y = D[U];
        let ae = null, W = Y > 239 ? 4 : Y > 223 ? 3 : Y > 191 ? 2 : 1;
        if (U + W <= p) {
          let de, tt, Ne, ut;
          switch (W) {
            case 1:
              Y < 128 && (ae = Y);
              break;
            case 2:
              de = D[U + 1], (de & 192) === 128 && (ut = (Y & 31) << 6 | de & 63, ut > 127 && (ae = ut));
              break;
            case 3:
              de = D[U + 1], tt = D[U + 2], (de & 192) === 128 && (tt & 192) === 128 && (ut = (Y & 15) << 12 | (de & 63) << 6 | tt & 63, ut > 2047 && (ut < 55296 || ut > 57343) && (ae = ut));
              break;
            case 4:
              de = D[U + 1], tt = D[U + 2], Ne = D[U + 3], (de & 192) === 128 && (tt & 192) === 128 && (Ne & 192) === 128 && (ut = (Y & 15) << 18 | (de & 63) << 12 | (tt & 63) << 6 | Ne & 63, ut > 65535 && ut < 1114112 && (ae = ut));
          }
        }
        ae === null ? (ae = 65533, W = 1) : ae > 65535 && (ae -= 65536, A.push(ae >>> 10 & 1023 | 55296), ae = 56320 | ae & 1023), A.push(ae), U += W;
      }
      return j(A);
    }
    const L = 4096;
    function j(D) {
      const C = D.length;
      if (C <= L) return String.fromCharCode.apply(String, D);
      let p = "", A = 0;
      for (; A < C; ) p += String.fromCharCode.apply(String, D.slice(A, A += L));
      return p;
    }
    function z(D, C, p) {
      let A = "";
      p = Math.min(D.length, p);
      for (let U = C; U < p; ++U) A += String.fromCharCode(D[U] & 127);
      return A;
    }
    function Z(D, C, p) {
      let A = "";
      p = Math.min(D.length, p);
      for (let U = C; U < p; ++U) A += String.fromCharCode(D[U]);
      return A;
    }
    function ue(D, C, p) {
      const A = D.length;
      (!C || C < 0) && (C = 0), (!p || p < 0 || p > A) && (p = A);
      let U = "";
      for (let Y = C; Y < p; ++Y) U += T[D[Y]];
      return U;
    }
    function $(D, C, p) {
      const A = D.slice(C, p);
      let U = "";
      for (let Y = 0; Y < A.length - 1; Y += 2) U += String.fromCharCode(A[Y] + A[Y + 1] * 256);
      return U;
    }
    o.prototype.slice = function(C, p) {
      const A = this.length;
      C = ~~C, p = p === void 0 ? A : ~~p, C < 0 ? (C += A, C < 0 && (C = 0)) : C > A && (C = A), p < 0 ? (p += A, p < 0 && (p = 0)) : p > A && (p = A), p < C && (p = C);
      const U = this.subarray(C, p);
      return Object.setPrototypeOf(U, o.prototype), U;
    };
    function X(D, C, p) {
      if (D % 1 !== 0 || D < 0) throw new RangeError("offset is not uint");
      if (D + C > p) throw new RangeError("Trying to access beyond buffer length");
    }
    o.prototype.readUintLE = o.prototype.readUIntLE = function(C, p, A) {
      C = C >>> 0, p = p >>> 0, A || X(C, p, this.length);
      let U = this[C], Y = 1, ae = 0;
      for (; ++ae < p && (Y *= 256); ) U += this[C + ae] * Y;
      return U;
    }, o.prototype.readUintBE = o.prototype.readUIntBE = function(C, p, A) {
      C = C >>> 0, p = p >>> 0, A || X(C, p, this.length);
      let U = this[C + --p], Y = 1;
      for (; p > 0 && (Y *= 256); ) U += this[C + --p] * Y;
      return U;
    }, o.prototype.readUint8 = o.prototype.readUInt8 = function(C, p) {
      return C = C >>> 0, p || X(C, 1, this.length), this[C];
    }, o.prototype.readUint16LE = o.prototype.readUInt16LE = function(C, p) {
      return C = C >>> 0, p || X(C, 2, this.length), this[C] | this[C + 1] << 8;
    }, o.prototype.readUint16BE = o.prototype.readUInt16BE = function(C, p) {
      return C = C >>> 0, p || X(C, 2, this.length), this[C] << 8 | this[C + 1];
    }, o.prototype.readUint32LE = o.prototype.readUInt32LE = function(C, p) {
      return C = C >>> 0, p || X(C, 4, this.length), (this[C] | this[C + 1] << 8 | this[C + 2] << 16) + this[C + 3] * 16777216;
    }, o.prototype.readUint32BE = o.prototype.readUInt32BE = function(C, p) {
      return C = C >>> 0, p || X(C, 4, this.length), this[C] * 16777216 + (this[C + 1] << 16 | this[C + 2] << 8 | this[C + 3]);
    }, o.prototype.readBigUInt64LE = O(function(C) {
      C = C >>> 0, ge(C, "offset");
      const p = this[C], A = this[C + 7];
      (p === void 0 || A === void 0) && Te(C, this.length - 8);
      const U = p + this[++C] * 2 ** 8 + this[++C] * 2 ** 16 + this[++C] * 2 ** 24, Y = this[++C] + this[++C] * 2 ** 8 + this[++C] * 2 ** 16 + A * 2 ** 24;
      return BigInt(U) + (BigInt(Y) << BigInt(32));
    }), o.prototype.readBigUInt64BE = O(function(C) {
      C = C >>> 0, ge(C, "offset");
      const p = this[C], A = this[C + 7];
      (p === void 0 || A === void 0) && Te(C, this.length - 8);
      const U = p * 2 ** 24 + this[++C] * 2 ** 16 + this[++C] * 2 ** 8 + this[++C], Y = this[++C] * 2 ** 24 + this[++C] * 2 ** 16 + this[++C] * 2 ** 8 + A;
      return (BigInt(U) << BigInt(32)) + BigInt(Y);
    }), o.prototype.readIntLE = function(C, p, A) {
      C = C >>> 0, p = p >>> 0, A || X(C, p, this.length);
      let U = this[C], Y = 1, ae = 0;
      for (; ++ae < p && (Y *= 256); ) U += this[C + ae] * Y;
      return Y *= 128, U >= Y && (U -= Math.pow(2, 8 * p)), U;
    }, o.prototype.readIntBE = function(C, p, A) {
      C = C >>> 0, p = p >>> 0, A || X(C, p, this.length);
      let U = p, Y = 1, ae = this[C + --U];
      for (; U > 0 && (Y *= 256); ) ae += this[C + --U] * Y;
      return Y *= 128, ae >= Y && (ae -= Math.pow(2, 8 * p)), ae;
    }, o.prototype.readInt8 = function(C, p) {
      return C = C >>> 0, p || X(C, 1, this.length), this[C] & 128 ? (255 - this[C] + 1) * -1 : this[C];
    }, o.prototype.readInt16LE = function(C, p) {
      C = C >>> 0, p || X(C, 2, this.length);
      const A = this[C] | this[C + 1] << 8;
      return A & 32768 ? A | 4294901760 : A;
    }, o.prototype.readInt16BE = function(C, p) {
      C = C >>> 0, p || X(C, 2, this.length);
      const A = this[C + 1] | this[C] << 8;
      return A & 32768 ? A | 4294901760 : A;
    }, o.prototype.readInt32LE = function(C, p) {
      return C = C >>> 0, p || X(C, 4, this.length), this[C] | this[C + 1] << 8 | this[C + 2] << 16 | this[C + 3] << 24;
    }, o.prototype.readInt32BE = function(C, p) {
      return C = C >>> 0, p || X(C, 4, this.length), this[C] << 24 | this[C + 1] << 16 | this[C + 2] << 8 | this[C + 3];
    }, o.prototype.readBigInt64LE = O(function(C) {
      C = C >>> 0, ge(C, "offset");
      const p = this[C], A = this[C + 7];
      (p === void 0 || A === void 0) && Te(C, this.length - 8);
      const U = this[C + 4] + this[C + 5] * 2 ** 8 + this[C + 6] * 2 ** 16 + (A << 24);
      return (BigInt(U) << BigInt(32)) + BigInt(p + this[++C] * 2 ** 8 + this[++C] * 2 ** 16 + this[++C] * 2 ** 24);
    }), o.prototype.readBigInt64BE = O(function(C) {
      C = C >>> 0, ge(C, "offset");
      const p = this[C], A = this[C + 7];
      (p === void 0 || A === void 0) && Te(C, this.length - 8);
      const U = (p << 24) + this[++C] * 2 ** 16 + this[++C] * 2 ** 8 + this[++C];
      return (BigInt(U) << BigInt(32)) + BigInt(this[++C] * 2 ** 24 + this[++C] * 2 ** 16 + this[++C] * 2 ** 8 + A);
    }), o.prototype.readFloatLE = function(C, p) {
      return C = C >>> 0, p || X(C, 4, this.length), n.read(this, C, true, 23, 4);
    }, o.prototype.readFloatBE = function(C, p) {
      return C = C >>> 0, p || X(C, 4, this.length), n.read(this, C, false, 23, 4);
    }, o.prototype.readDoubleLE = function(C, p) {
      return C = C >>> 0, p || X(C, 8, this.length), n.read(this, C, true, 52, 8);
    }, o.prototype.readDoubleBE = function(C, p) {
      return C = C >>> 0, p || X(C, 8, this.length), n.read(this, C, false, 52, 8);
    };
    function J(D, C, p, A, U, Y) {
      if (!o.isBuffer(D)) throw new TypeError('"buffer" argument must be a Buffer instance');
      if (C > U || C < Y) throw new RangeError('"value" argument is out of bounds');
      if (p + A > D.length) throw new RangeError("Index out of range");
    }
    o.prototype.writeUintLE = o.prototype.writeUIntLE = function(C, p, A, U) {
      if (C = +C, p = p >>> 0, A = A >>> 0, !U) {
        const W = Math.pow(2, 8 * A) - 1;
        J(this, C, p, A, W, 0);
      }
      let Y = 1, ae = 0;
      for (this[p] = C & 255; ++ae < A && (Y *= 256); ) this[p + ae] = C / Y & 255;
      return p + A;
    }, o.prototype.writeUintBE = o.prototype.writeUIntBE = function(C, p, A, U) {
      if (C = +C, p = p >>> 0, A = A >>> 0, !U) {
        const W = Math.pow(2, 8 * A) - 1;
        J(this, C, p, A, W, 0);
      }
      let Y = A - 1, ae = 1;
      for (this[p + Y] = C & 255; --Y >= 0 && (ae *= 256); ) this[p + Y] = C / ae & 255;
      return p + A;
    }, o.prototype.writeUint8 = o.prototype.writeUInt8 = function(C, p, A) {
      return C = +C, p = p >>> 0, A || J(this, C, p, 1, 255, 0), this[p] = C & 255, p + 1;
    }, o.prototype.writeUint16LE = o.prototype.writeUInt16LE = function(C, p, A) {
      return C = +C, p = p >>> 0, A || J(this, C, p, 2, 65535, 0), this[p] = C & 255, this[p + 1] = C >>> 8, p + 2;
    }, o.prototype.writeUint16BE = o.prototype.writeUInt16BE = function(C, p, A) {
      return C = +C, p = p >>> 0, A || J(this, C, p, 2, 65535, 0), this[p] = C >>> 8, this[p + 1] = C & 255, p + 2;
    }, o.prototype.writeUint32LE = o.prototype.writeUInt32LE = function(C, p, A) {
      return C = +C, p = p >>> 0, A || J(this, C, p, 4, 4294967295, 0), this[p + 3] = C >>> 24, this[p + 2] = C >>> 16, this[p + 1] = C >>> 8, this[p] = C & 255, p + 4;
    }, o.prototype.writeUint32BE = o.prototype.writeUInt32BE = function(C, p, A) {
      return C = +C, p = p >>> 0, A || J(this, C, p, 4, 4294967295, 0), this[p] = C >>> 24, this[p + 1] = C >>> 16, this[p + 2] = C >>> 8, this[p + 3] = C & 255, p + 4;
    };
    function B(D, C, p, A, U) {
      re(C, A, U, D, p, 7);
      let Y = Number(C & BigInt(4294967295));
      D[p++] = Y, Y = Y >> 8, D[p++] = Y, Y = Y >> 8, D[p++] = Y, Y = Y >> 8, D[p++] = Y;
      let ae = Number(C >> BigInt(32) & BigInt(4294967295));
      return D[p++] = ae, ae = ae >> 8, D[p++] = ae, ae = ae >> 8, D[p++] = ae, ae = ae >> 8, D[p++] = ae, p;
    }
    function Q(D, C, p, A, U) {
      re(C, A, U, D, p, 7);
      let Y = Number(C & BigInt(4294967295));
      D[p + 7] = Y, Y = Y >> 8, D[p + 6] = Y, Y = Y >> 8, D[p + 5] = Y, Y = Y >> 8, D[p + 4] = Y;
      let ae = Number(C >> BigInt(32) & BigInt(4294967295));
      return D[p + 3] = ae, ae = ae >> 8, D[p + 2] = ae, ae = ae >> 8, D[p + 1] = ae, ae = ae >> 8, D[p] = ae, p + 8;
    }
    o.prototype.writeBigUInt64LE = O(function(C, p = 0) {
      return B(this, C, p, BigInt(0), BigInt("0xffffffffffffffff"));
    }), o.prototype.writeBigUInt64BE = O(function(C, p = 0) {
      return Q(this, C, p, BigInt(0), BigInt("0xffffffffffffffff"));
    }), o.prototype.writeIntLE = function(C, p, A, U) {
      if (C = +C, p = p >>> 0, !U) {
        const de = Math.pow(2, 8 * A - 1);
        J(this, C, p, A, de - 1, -de);
      }
      let Y = 0, ae = 1, W = 0;
      for (this[p] = C & 255; ++Y < A && (ae *= 256); ) C < 0 && W === 0 && this[p + Y - 1] !== 0 && (W = 1), this[p + Y] = (C / ae >> 0) - W & 255;
      return p + A;
    }, o.prototype.writeIntBE = function(C, p, A, U) {
      if (C = +C, p = p >>> 0, !U) {
        const de = Math.pow(2, 8 * A - 1);
        J(this, C, p, A, de - 1, -de);
      }
      let Y = A - 1, ae = 1, W = 0;
      for (this[p + Y] = C & 255; --Y >= 0 && (ae *= 256); ) C < 0 && W === 0 && this[p + Y + 1] !== 0 && (W = 1), this[p + Y] = (C / ae >> 0) - W & 255;
      return p + A;
    }, o.prototype.writeInt8 = function(C, p, A) {
      return C = +C, p = p >>> 0, A || J(this, C, p, 1, 127, -128), C < 0 && (C = 255 + C + 1), this[p] = C & 255, p + 1;
    }, o.prototype.writeInt16LE = function(C, p, A) {
      return C = +C, p = p >>> 0, A || J(this, C, p, 2, 32767, -32768), this[p] = C & 255, this[p + 1] = C >>> 8, p + 2;
    }, o.prototype.writeInt16BE = function(C, p, A) {
      return C = +C, p = p >>> 0, A || J(this, C, p, 2, 32767, -32768), this[p] = C >>> 8, this[p + 1] = C & 255, p + 2;
    }, o.prototype.writeInt32LE = function(C, p, A) {
      return C = +C, p = p >>> 0, A || J(this, C, p, 4, 2147483647, -2147483648), this[p] = C & 255, this[p + 1] = C >>> 8, this[p + 2] = C >>> 16, this[p + 3] = C >>> 24, p + 4;
    }, o.prototype.writeInt32BE = function(C, p, A) {
      return C = +C, p = p >>> 0, A || J(this, C, p, 4, 2147483647, -2147483648), C < 0 && (C = 4294967295 + C + 1), this[p] = C >>> 24, this[p + 1] = C >>> 16, this[p + 2] = C >>> 8, this[p + 3] = C & 255, p + 4;
    }, o.prototype.writeBigInt64LE = O(function(C, p = 0) {
      return B(this, C, p, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
    }), o.prototype.writeBigInt64BE = O(function(C, p = 0) {
      return Q(this, C, p, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
    });
    function ne(D, C, p, A, U, Y) {
      if (p + A > D.length) throw new RangeError("Index out of range");
      if (p < 0) throw new RangeError("Index out of range");
    }
    function K(D, C, p, A, U) {
      return C = +C, p = p >>> 0, U || ne(D, C, p, 4), n.write(D, C, p, A, 23, 4), p + 4;
    }
    o.prototype.writeFloatLE = function(C, p, A) {
      return K(this, C, p, true, A);
    }, o.prototype.writeFloatBE = function(C, p, A) {
      return K(this, C, p, false, A);
    };
    function ie(D, C, p, A, U) {
      return C = +C, p = p >>> 0, U || ne(D, C, p, 8), n.write(D, C, p, A, 52, 8), p + 8;
    }
    o.prototype.writeDoubleLE = function(C, p, A) {
      return ie(this, C, p, true, A);
    }, o.prototype.writeDoubleBE = function(C, p, A) {
      return ie(this, C, p, false, A);
    }, o.prototype.copy = function(C, p, A, U) {
      if (!o.isBuffer(C)) throw new TypeError("argument should be a Buffer");
      if (A || (A = 0), !U && U !== 0 && (U = this.length), p >= C.length && (p = C.length), p || (p = 0), U > 0 && U < A && (U = A), U === A || C.length === 0 || this.length === 0) return 0;
      if (p < 0) throw new RangeError("targetStart out of bounds");
      if (A < 0 || A >= this.length) throw new RangeError("Index out of range");
      if (U < 0) throw new RangeError("sourceEnd out of bounds");
      U > this.length && (U = this.length), C.length - p < U - A && (U = C.length - p + A);
      const Y = U - A;
      return this === C && typeof Uint8Array.prototype.copyWithin == "function" ? this.copyWithin(p, A, U) : Uint8Array.prototype.set.call(C, this.subarray(A, U), p), Y;
    }, o.prototype.fill = function(C, p, A, U) {
      if (typeof C == "string") {
        if (typeof p == "string" ? (U = p, p = 0, A = this.length) : typeof A == "string" && (U = A, A = this.length), U !== void 0 && typeof U != "string") throw new TypeError("encoding must be a string");
        if (typeof U == "string" && !o.isEncoding(U)) throw new TypeError("Unknown encoding: " + U);
        if (C.length === 1) {
          const ae = C.charCodeAt(0);
          (U === "utf8" && ae < 128 || U === "latin1") && (C = ae);
        }
      } else typeof C == "number" ? C = C & 255 : typeof C == "boolean" && (C = Number(C));
      if (p < 0 || this.length < p || this.length < A) throw new RangeError("Out of range index");
      if (A <= p) return this;
      p = p >>> 0, A = A === void 0 ? this.length : A >>> 0, C || (C = 0);
      let Y;
      if (typeof C == "number") for (Y = p; Y < A; ++Y) this[Y] = C;
      else {
        const ae = o.isBuffer(C) ? C : o.from(C, U), W = ae.length;
        if (W === 0) throw new TypeError('The value "' + C + '" is invalid for argument "value"');
        for (Y = 0; Y < A - p; ++Y) this[Y + p] = ae[Y % W];
      }
      return this;
    };
    const ce = {};
    function ye(D, C, p) {
      ce[D] = class extends p {
        constructor() {
          super(), Object.defineProperty(this, "message", { value: C.apply(this, arguments), writable: true, configurable: true }), this.name = `${this.name} [${D}]`, this.stack, delete this.name;
        }
        get code() {
          return D;
        }
        set code(U) {
          Object.defineProperty(this, "code", { configurable: true, enumerable: true, value: U, writable: true });
        }
        toString() {
          return `${this.name} [${D}]: ${this.message}`;
        }
      };
    }
    ye("ERR_BUFFER_OUT_OF_BOUNDS", function(D) {
      return D ? `${D} is outside of buffer bounds` : "Attempt to access memory outside buffer bounds";
    }, RangeError), ye("ERR_INVALID_ARG_TYPE", function(D, C) {
      return `The "${D}" argument must be of type number. Received type ${typeof C}`;
    }, TypeError), ye("ERR_OUT_OF_RANGE", function(D, C, p) {
      let A = `The value of "${D}" is out of range.`, U = p;
      return Number.isInteger(p) && Math.abs(p) > 2 ** 32 ? U = oe(String(p)) : typeof p == "bigint" && (U = String(p), (p > BigInt(2) ** BigInt(32) || p < -(BigInt(2) ** BigInt(32))) && (U = oe(U)), U += "n"), A += ` It must be ${C}. Received ${U}`, A;
    }, RangeError);
    function oe(D) {
      let C = "", p = D.length;
      const A = D[0] === "-" ? 1 : 0;
      for (; p >= A + 4; p -= 3) C = `_${D.slice(p - 3, p)}${C}`;
      return `${D.slice(0, p)}${C}`;
    }
    function se(D, C, p) {
      ge(C, "offset"), (D[C] === void 0 || D[C + p] === void 0) && Te(C, D.length - (p + 1));
    }
    function re(D, C, p, A, U, Y) {
      if (D > p || D < C) {
        const ae = typeof C == "bigint" ? "n" : "";
        let W;
        throw C === 0 || C === BigInt(0) ? W = `>= 0${ae} and < 2${ae} ** ${(Y + 1) * 8}${ae}` : W = `>= -(2${ae} ** ${(Y + 1) * 8 - 1}${ae}) and < 2 ** ${(Y + 1) * 8 - 1}${ae}`, new ce.ERR_OUT_OF_RANGE("value", W, D);
      }
      se(A, U, Y);
    }
    function ge(D, C) {
      if (typeof D != "number") throw new ce.ERR_INVALID_ARG_TYPE(C, "number", D);
    }
    function Te(D, C, p) {
      throw Math.floor(D) !== D ? (ge(D, p), new ce.ERR_OUT_OF_RANGE("offset", "an integer", D)) : C < 0 ? new ce.ERR_BUFFER_OUT_OF_BOUNDS() : new ce.ERR_OUT_OF_RANGE("offset", `>= 0 and <= ${C}`, D);
    }
    const pe = /[^+/0-9A-Za-z-_]/g;
    function Oe(D) {
      if (D = D.split("=")[0], D = D.trim().replace(pe, ""), D.length < 2) return "";
      for (; D.length % 4 !== 0; ) D = D + "=";
      return D;
    }
    function xe(D, C) {
      C = C || 1 / 0;
      let p;
      const A = D.length;
      let U = null;
      const Y = [];
      for (let ae = 0; ae < A; ++ae) {
        if (p = D.charCodeAt(ae), p > 55295 && p < 57344) {
          if (!U) {
            if (p > 56319) {
              (C -= 3) > -1 && Y.push(239, 191, 189);
              continue;
            } else if (ae + 1 === A) {
              (C -= 3) > -1 && Y.push(239, 191, 189);
              continue;
            }
            U = p;
            continue;
          }
          if (p < 56320) {
            (C -= 3) > -1 && Y.push(239, 191, 189), U = p;
            continue;
          }
          p = (U - 55296 << 10 | p - 56320) + 65536;
        } else U && (C -= 3) > -1 && Y.push(239, 191, 189);
        if (U = null, p < 128) {
          if ((C -= 1) < 0) break;
          Y.push(p);
        } else if (p < 2048) {
          if ((C -= 2) < 0) break;
          Y.push(p >> 6 | 192, p & 63 | 128);
        } else if (p < 65536) {
          if ((C -= 3) < 0) break;
          Y.push(p >> 12 | 224, p >> 6 & 63 | 128, p & 63 | 128);
        } else if (p < 1114112) {
          if ((C -= 4) < 0) break;
          Y.push(p >> 18 | 240, p >> 12 & 63 | 128, p >> 6 & 63 | 128, p & 63 | 128);
        } else throw new Error("Invalid code point");
      }
      return Y;
    }
    function Ve(D) {
      const C = [];
      for (let p = 0; p < D.length; ++p) C.push(D.charCodeAt(p) & 255);
      return C;
    }
    function _e(D, C) {
      let p, A, U;
      const Y = [];
      for (let ae = 0; ae < D.length && !((C -= 2) < 0); ++ae) p = D.charCodeAt(ae), A = p >> 8, U = p % 256, Y.push(U), Y.push(A);
      return Y;
    }
    function Be(D) {
      return e.toByteArray(Oe(D));
    }
    function Qe(D, C, p, A) {
      let U;
      for (U = 0; U < A && !(U + p >= C.length || U >= D.length); ++U) C[U + p] = D[U];
      return U;
    }
    function ee(D, C) {
      return D instanceof C || D != null && D.constructor != null && D.constructor.name != null && D.constructor.name === C.name;
    }
    function P(D) {
      return D !== D;
    }
    const T = function() {
      const D = "0123456789abcdef", C = new Array(256);
      for (let p = 0; p < 16; ++p) {
        const A = p * 16;
        for (let U = 0; U < 16; ++U) C[A + U] = D[p] + D[U];
      }
      return C;
    }();
    function O(D) {
      return typeof BigInt > "u" ? V : D;
    }
    function V() {
      throw new Error("BigInt not supported");
    }
  }(Ic)), Ic;
}
var Xl = Xd(), Gs = { exports: {} }, ja = {}, Of;
function Ra() {
  if (Of) return ja;
  Of = 1, Object.defineProperty(ja, "__esModule", { value: true }), ja.Api = void 0;
  var v;
  return function(e) {
    var n = function(o) {
      return o.SUCCESS = "SUCCESS", o.NOT_FOUND = "NOT_FOUND", o.FAILED = "FAILED", o;
    }({});
    e.GetTransactionStatus = n;
    function i(o) {
      return "error" in o;
    }
    e.isSimulationError = i;
    function u(o) {
      return "transactionData" in o;
    }
    e.isSimulationSuccess = u;
    function y(o) {
      return u(o) && "restorePreamble" in o && !!o.restorePreamble.transactionData;
    }
    e.isSimulationRestore = y;
    function t(o) {
      return !o._parsed;
    }
    e.isSimulationRaw = t;
  }(v || (ja.Api = v = {})), ja;
}
var Ti = {}, nc = { exports: {} }, Rs = { exports: {} };
/*! https://mths.be/punycode v1.4.0 by @mathias */
var dy = Rs.exports, Pf;
function my() {
  return Pf || (Pf = 1, function(v, e) {
    (function(n) {
      var i = e && !e.nodeType && e, u = v && !v.nodeType && v, y = typeof vc == "object" && vc;
      (y.global === y || y.window === y || y.self === y) && (n = y);
      var t, o = 2147483647, s = 36, c = 1, h = 26, f = 38, r = 700, m = 72, g = 128, a = "-", l = /^xn--/, d = /[^\x20-\x7E]/, b = /[\x2E\u3002\uFF0E\uFF61]/g, S = { overflow: "Overflow: input needs wider integers to process", "not-basic": "Illegal input >= 0x80 (not a basic code point)", "invalid-input": "Invalid input" }, E = s - c, R = Math.floor, k = String.fromCharCode, w;
      function F($) {
        throw new RangeError(S[$]);
      }
      function I($, X) {
        for (var J = $.length, B = []; J--; ) B[J] = X($[J]);
        return B;
      }
      function q($, X) {
        var J = $.split("@"), B = "";
        J.length > 1 && (B = J[0] + "@", $ = J[1]), $ = $.replace(b, ".");
        var Q = $.split("."), ne = I(Q, X).join(".");
        return B + ne;
      }
      function N($) {
        for (var X = [], J = 0, B = $.length, Q, ne; J < B; ) Q = $.charCodeAt(J++), Q >= 55296 && Q <= 56319 && J < B ? (ne = $.charCodeAt(J++), (ne & 64512) == 56320 ? X.push(((Q & 1023) << 10) + (ne & 1023) + 65536) : (X.push(Q), J--)) : X.push(Q);
        return X;
      }
      function H($) {
        return I($, function(X) {
          var J = "";
          return X > 65535 && (X -= 65536, J += k(X >>> 10 & 1023 | 55296), X = 56320 | X & 1023), J += k(X), J;
        }).join("");
      }
      function _($) {
        return $ - 48 < 10 ? $ - 22 : $ - 65 < 26 ? $ - 65 : $ - 97 < 26 ? $ - 97 : s;
      }
      function x($, X) {
        return $ + 22 + 75 * ($ < 26) - ((X != 0) << 5);
      }
      function L($, X, J) {
        var B = 0;
        for ($ = J ? R($ / r) : $ >> 1, $ += R($ / X); $ > E * h >> 1; B += s) $ = R($ / E);
        return R(B + (E + 1) * $ / ($ + f));
      }
      function j($) {
        var X = [], J = $.length, B, Q = 0, ne = g, K = m, ie, ce, ye, oe, se, re, ge, Te, pe;
        for (ie = $.lastIndexOf(a), ie < 0 && (ie = 0), ce = 0; ce < ie; ++ce) $.charCodeAt(ce) >= 128 && F("not-basic"), X.push($.charCodeAt(ce));
        for (ye = ie > 0 ? ie + 1 : 0; ye < J; ) {
          for (oe = Q, se = 1, re = s; ye >= J && F("invalid-input"), ge = _($.charCodeAt(ye++)), (ge >= s || ge > R((o - Q) / se)) && F("overflow"), Q += ge * se, Te = re <= K ? c : re >= K + h ? h : re - K, !(ge < Te); re += s) pe = s - Te, se > R(o / pe) && F("overflow"), se *= pe;
          B = X.length + 1, K = L(Q - oe, B, oe == 0), R(Q / B) > o - ne && F("overflow"), ne += R(Q / B), Q %= B, X.splice(Q++, 0, ne);
        }
        return H(X);
      }
      function z($) {
        var X, J, B, Q, ne, K, ie, ce, ye, oe, se, re = [], ge, Te, pe, Oe;
        for ($ = N($), ge = $.length, X = g, J = 0, ne = m, K = 0; K < ge; ++K) se = $[K], se < 128 && re.push(k(se));
        for (B = Q = re.length, Q && re.push(a); B < ge; ) {
          for (ie = o, K = 0; K < ge; ++K) se = $[K], se >= X && se < ie && (ie = se);
          for (Te = B + 1, ie - X > R((o - J) / Te) && F("overflow"), J += (ie - X) * Te, X = ie, K = 0; K < ge; ++K) if (se = $[K], se < X && ++J > o && F("overflow"), se == X) {
            for (ce = J, ye = s; oe = ye <= ne ? c : ye >= ne + h ? h : ye - ne, !(ce < oe); ye += s) Oe = ce - oe, pe = s - oe, re.push(k(x(oe + Oe % pe, 0))), ce = R(Oe / pe);
            re.push(k(x(ce, 0))), ne = L(J, Te, B == Q), J = 0, ++B;
          }
          ++J, ++X;
        }
        return re.join("");
      }
      function Z($) {
        return q($, function(X) {
          return l.test(X) ? j(X.slice(4).toLowerCase()) : X;
        });
      }
      function ue($) {
        return q($, function(X) {
          return d.test(X) ? "xn--" + z(X) : X;
        });
      }
      if (t = { version: "1.3.2", ucs2: { decode: N, encode: H }, decode: j, encode: z, toASCII: ue, toUnicode: Z }, i && u) if (v.exports == i) u.exports = t;
      else for (w in t) t.hasOwnProperty(w) && (i[w] = t[w]);
      else n.punycode = t;
    })(dy);
  }(Rs, Rs.exports)), Rs.exports;
}
var ic = { exports: {} };
/*!
* URI.js - Mutating URLs
* IPv6 Support
*
* Version: 1.19.11
*
* Author: Rodney Rehm
* Web: http://medialize.github.io/URI.js/
*
* Licensed under
*   MIT License http://www.opensource.org/licenses/mit-license
*
*/
var yy = ic.exports, Cf;
function gy() {
  return Cf || (Cf = 1, function(v) {
    (function(e, n) {
      v.exports ? v.exports = n() : e.IPv6 = n(e);
    })(yy, function(e) {
      var n = e && e.IPv6;
      function i(y) {
        var t = y.toLowerCase(), o = t.split(":"), s = o.length, c = 8;
        o[0] === "" && o[1] === "" && o[2] === "" ? (o.shift(), o.shift()) : o[0] === "" && o[1] === "" ? o.shift() : o[s - 1] === "" && o[s - 2] === "" && o.pop(), s = o.length, o[s - 1].indexOf(".") !== -1 && (c = 7);
        var h;
        for (h = 0; h < s && o[h] !== ""; h++) ;
        if (h < c) for (o.splice(h, 1, "0000"); o.length < c; ) o.splice(h, 0, "0000");
        for (var f, r = 0; r < c; r++) {
          f = o[r].split("");
          for (var m = 0; m < 3 && (f[0] === "0" && f.length > 1); m++) f.splice(0, 1);
          o[r] = f.join("");
        }
        var g = -1, a = 0, l = 0, d = -1, b = false;
        for (r = 0; r < c; r++) b ? o[r] === "0" ? l += 1 : (b = false, l > a && (g = d, a = l)) : o[r] === "0" && (b = true, d = r, l = 1);
        l > a && (g = d, a = l), a > 1 && o.splice(g, a, ""), s = o.length;
        var S = "";
        for (o[0] === "" && (S = ":"), r = 0; r < s && (S += o[r], r !== s - 1); r++) S += ":";
        return o[s - 1] === "" && (S += ":"), S;
      }
      function u() {
        return e.IPv6 === this && (e.IPv6 = n), this;
      }
      return { best: i, noConflict: u };
    });
  }(ic)), ic.exports;
}
var oc = { exports: {} };
/*!
* URI.js - Mutating URLs
* Second Level Domain (SLD) Support
*
* Version: 1.19.11
*
* Author: Rodney Rehm
* Web: http://medialize.github.io/URI.js/
*
* Licensed under
*   MIT License http://www.opensource.org/licenses/mit-license
*
*/
var vy = oc.exports, Rf;
function by() {
  return Rf || (Rf = 1, function(v) {
    (function(e, n) {
      v.exports ? v.exports = n() : e.SecondLevelDomains = n(e);
    })(vy, function(e) {
      var n = e && e.SecondLevelDomains, i = { list: { ac: " com gov mil net org ", ae: " ac co gov mil name net org pro sch ", af: " com edu gov net org ", al: " com edu gov mil net org ", ao: " co ed gv it og pb ", ar: " com edu gob gov int mil net org tur ", at: " ac co gv or ", au: " asn com csiro edu gov id net org ", ba: " co com edu gov mil net org rs unbi unmo unsa untz unze ", bb: " biz co com edu gov info net org store tv ", bh: " biz cc com edu gov info net org ", bn: " com edu gov net org ", bo: " com edu gob gov int mil net org tv ", br: " adm adv agr am arq art ato b bio blog bmd cim cng cnt com coop ecn edu eng esp etc eti far flog fm fnd fot fst g12 ggf gov imb ind inf jor jus lel mat med mil mus net nom not ntr odo org ppg pro psc psi qsl rec slg srv tmp trd tur tv vet vlog wiki zlg ", bs: " com edu gov net org ", bz: " du et om ov rg ", ca: " ab bc mb nb nf nl ns nt nu on pe qc sk yk ", ck: " biz co edu gen gov info net org ", cn: " ac ah bj com cq edu fj gd gov gs gx gz ha hb he hi hl hn jl js jx ln mil net nm nx org qh sc sd sh sn sx tj tw xj xz yn zj ", co: " com edu gov mil net nom org ", cr: " ac c co ed fi go or sa ", cy: " ac biz com ekloges gov ltd name net org parliament press pro tm ", do: " art com edu gob gov mil net org sld web ", dz: " art asso com edu gov net org pol ", ec: " com edu fin gov info med mil net org pro ", eg: " com edu eun gov mil name net org sci ", er: " com edu gov ind mil net org rochest w ", es: " com edu gob nom org ", et: " biz com edu gov info name net org ", fj: " ac biz com info mil name net org pro ", fk: " ac co gov net nom org ", fr: " asso com f gouv nom prd presse tm ", gg: " co net org ", gh: " com edu gov mil org ", gn: " ac com gov net org ", gr: " com edu gov mil net org ", gt: " com edu gob ind mil net org ", gu: " com edu gov net org ", hk: " com edu gov idv net org ", hu: " 2000 agrar bolt casino city co erotica erotika film forum games hotel info ingatlan jogasz konyvelo lakas media news org priv reklam sex shop sport suli szex tm tozsde utazas video ", id: " ac co go mil net or sch web ", il: " ac co gov idf k12 muni net org ", in: " ac co edu ernet firm gen gov i ind mil net nic org res ", iq: " com edu gov i mil net org ", ir: " ac co dnssec gov i id net org sch ", it: " edu gov ", je: " co net org ", jo: " com edu gov mil name net org sch ", jp: " ac ad co ed go gr lg ne or ", ke: " ac co go info me mobi ne or sc ", kh: " com edu gov mil net org per ", ki: " biz com de edu gov info mob net org tel ", km: " asso com coop edu gouv k medecin mil nom notaires pharmaciens presse tm veterinaire ", kn: " edu gov net org ", kr: " ac busan chungbuk chungnam co daegu daejeon es gangwon go gwangju gyeongbuk gyeonggi gyeongnam hs incheon jeju jeonbuk jeonnam k kg mil ms ne or pe re sc seoul ulsan ", kw: " com edu gov net org ", ky: " com edu gov net org ", kz: " com edu gov mil net org ", lb: " com edu gov net org ", lk: " assn com edu gov grp hotel int ltd net ngo org sch soc web ", lr: " com edu gov net org ", lv: " asn com conf edu gov id mil net org ", ly: " com edu gov id med net org plc sch ", ma: " ac co gov m net org press ", mc: " asso tm ", me: " ac co edu gov its net org priv ", mg: " com edu gov mil nom org prd tm ", mk: " com edu gov inf name net org pro ", ml: " com edu gov net org presse ", mn: " edu gov org ", mo: " com edu gov net org ", mt: " com edu gov net org ", mv: " aero biz com coop edu gov info int mil museum name net org pro ", mw: " ac co com coop edu gov int museum net org ", mx: " com edu gob net org ", my: " com edu gov mil name net org sch ", nf: " arts com firm info net other per rec store web ", ng: " biz com edu gov mil mobi name net org sch ", ni: " ac co com edu gob mil net nom org ", np: " com edu gov mil net org ", nr: " biz com edu gov info net org ", om: " ac biz co com edu gov med mil museum net org pro sch ", pe: " com edu gob mil net nom org sld ", ph: " com edu gov i mil net ngo org ", pk: " biz com edu fam gob gok gon gop gos gov net org web ", pl: " art bialystok biz com edu gda gdansk gorzow gov info katowice krakow lodz lublin mil net ngo olsztyn org poznan pwr radom slupsk szczecin torun warszawa waw wroc wroclaw zgora ", pr: " ac biz com edu est gov info isla name net org pro prof ", ps: " com edu gov net org plo sec ", pw: " belau co ed go ne or ", ro: " arts com firm info nom nt org rec store tm www ", rs: " ac co edu gov in org ", sb: " com edu gov net org ", sc: " com edu gov net org ", sh: " co com edu gov net nom org ", sl: " com edu gov net org ", st: " co com consulado edu embaixada gov mil net org principe saotome store ", sv: " com edu gob org red ", sz: " ac co org ", tr: " av bbs bel biz com dr edu gen gov info k12 name net org pol tel tsk tv web ", tt: " aero biz cat co com coop edu gov info int jobs mil mobi museum name net org pro tel travel ", tw: " club com ebiz edu game gov idv mil net org ", mu: " ac co com gov net or org ", mz: " ac co edu gov org ", na: " co com ", nz: " ac co cri geek gen govt health iwi maori mil net org parliament school ", pa: " abo ac com edu gob ing med net nom org sld ", pt: " com edu gov int net nome org publ ", py: " com edu gov mil net org ", qa: " com edu gov mil net org ", re: " asso com nom ", ru: " ac adygeya altai amur arkhangelsk astrakhan bashkiria belgorod bir bryansk buryatia cbg chel chelyabinsk chita chukotka chuvashia com dagestan e-burg edu gov grozny int irkutsk ivanovo izhevsk jar joshkar-ola kalmykia kaluga kamchatka karelia kazan kchr kemerovo khabarovsk khakassia khv kirov koenig komi kostroma kranoyarsk kuban kurgan kursk lipetsk magadan mari mari-el marine mil mordovia mosreg msk murmansk nalchik net nnov nov novosibirsk nsk omsk orenburg org oryol penza perm pp pskov ptz rnd ryazan sakhalin samara saratov simbirsk smolensk spb stavropol stv surgut tambov tatarstan tom tomsk tsaritsyn tsk tula tuva tver tyumen udm udmurtia ulan-ude vladikavkaz vladimir vladivostok volgograd vologda voronezh vrn vyatka yakutia yamal yekaterinburg yuzhno-sakhalinsk ", rw: " ac co com edu gouv gov int mil net ", sa: " com edu gov med net org pub sch ", sd: " com edu gov info med net org tv ", se: " a ac b bd c d e f g h i k l m n o org p parti pp press r s t tm u w x y z ", sg: " com edu gov idn net org per ", sn: " art com edu gouv org perso univ ", sy: " com edu gov mil net news org ", th: " ac co go in mi net or ", tj: " ac biz co com edu go gov info int mil name net nic org test web ", tn: " agrinet com defense edunet ens fin gov ind info intl mincom nat net org perso rnrt rns rnu tourism ", tz: " ac co go ne or ", ua: " biz cherkassy chernigov chernovtsy ck cn co com crimea cv dn dnepropetrovsk donetsk dp edu gov if in ivano-frankivsk kh kharkov kherson khmelnitskiy kiev kirovograd km kr ks kv lg lugansk lutsk lviv me mk net nikolaev od odessa org pl poltava pp rovno rv sebastopol sumy te ternopil uzhgorod vinnica vn zaporizhzhe zhitomir zp zt ", ug: " ac co go ne or org sc ", uk: " ac bl british-library co cym gov govt icnet jet lea ltd me mil mod national-library-scotland nel net nhs nic nls org orgn parliament plc police sch scot soc ", us: " dni fed isa kids nsn ", uy: " com edu gub mil net org ", ve: " co com edu gob info mil net org web ", vi: " co com k12 net org ", vn: " ac biz com edu gov health info int name net org pro ", ye: " co com gov ltd me net org plc ", yu: " ac co edu gov org ", za: " ac agric alt bourse city co cybernet db edu gov grondar iaccess imt inca landesign law mil net ngo nis nom olivetti org pix school tm web ", zm: " ac co com edu gov net org sch ", com: "ar br cn de eu gb gr hu jpn kr no qc ru sa se uk us uy za ", net: "gb jp se uk ", org: "ae", de: "com " }, has: function(u) {
        var y = u.lastIndexOf(".");
        if (y <= 0 || y >= u.length - 1) return false;
        var t = u.lastIndexOf(".", y - 1);
        if (t <= 0 || t >= y - 1) return false;
        var o = i.list[u.slice(y + 1)];
        return o ? o.indexOf(" " + u.slice(t + 1, y) + " ") >= 0 : false;
      }, is: function(u) {
        var y = u.lastIndexOf(".");
        if (y <= 0 || y >= u.length - 1) return false;
        var t = u.lastIndexOf(".", y - 1);
        if (t >= 0) return false;
        var o = i.list[u.slice(y + 1)];
        return o ? o.indexOf(" " + u.slice(0, y) + " ") >= 0 : false;
      }, get: function(u) {
        var y = u.lastIndexOf(".");
        if (y <= 0 || y >= u.length - 1) return null;
        var t = u.lastIndexOf(".", y - 1);
        if (t <= 0 || t >= y - 1) return null;
        var o = i.list[u.slice(y + 1)];
        return !o || o.indexOf(" " + u.slice(t + 1, y) + " ") < 0 ? null : u.slice(t + 1);
      }, noConflict: function() {
        return e.SecondLevelDomains === this && (e.SecondLevelDomains = n), this;
      } };
      return i;
    });
  }(oc)), oc.exports;
}
/*!
* URI.js - Mutating URLs
*
* Version: 1.19.11
*
* Author: Rodney Rehm
* Web: http://medialize.github.io/URI.js/
*
* Licensed under
*   MIT License http://www.opensource.org/licenses/mit-license
*
*/
var wy = nc.exports, Mf;
function Sy() {
  return Mf || (Mf = 1, function(v) {
    (function(e, n) {
      v.exports ? v.exports = n(my(), gy(), by()) : e.URI = n(e.punycode, e.IPv6, e.SecondLevelDomains, e);
    })(wy, function(e, n, i, u) {
      var y = u && u.URI;
      function t(_, x) {
        var L = arguments.length >= 1, j = arguments.length >= 2;
        if (!(this instanceof t)) return L ? j ? new t(_, x) : new t(_) : new t();
        if (_ === void 0) {
          if (L) throw new TypeError("undefined is not a valid argument for URI");
          typeof location < "u" ? _ = location.href + "" : _ = "";
        }
        if (_ === null && L) throw new TypeError("null is not a valid argument for URI");
        return this.href(_), x !== void 0 ? this.absoluteTo(x) : this;
      }
      function o(_) {
        return /^[0-9]+$/.test(_);
      }
      t.version = "1.19.11";
      var s = t.prototype, c = Object.prototype.hasOwnProperty;
      function h(_) {
        return _.replace(/([.*+?^=!:${}()|[\]\/\\])/g, "\\$1");
      }
      function f(_) {
        return _ === void 0 ? "Undefined" : String(Object.prototype.toString.call(_)).slice(8, -1);
      }
      function r(_) {
        return f(_) === "Array";
      }
      function m(_, x) {
        var L = {}, j, z;
        if (f(x) === "RegExp") L = null;
        else if (r(x)) for (j = 0, z = x.length; j < z; j++) L[x[j]] = true;
        else L[x] = true;
        for (j = 0, z = _.length; j < z; j++) {
          var Z = L && L[_[j]] !== void 0 || !L && x.test(_[j]);
          Z && (_.splice(j, 1), z--, j--);
        }
        return _;
      }
      function g(_, x) {
        var L, j;
        if (r(x)) {
          for (L = 0, j = x.length; L < j; L++) if (!g(_, x[L])) return false;
          return true;
        }
        var z = f(x);
        for (L = 0, j = _.length; L < j; L++) if (z === "RegExp") {
          if (typeof _[L] == "string" && _[L].match(x)) return true;
        } else if (_[L] === x) return true;
        return false;
      }
      function a(_, x) {
        if (!r(_) || !r(x) || _.length !== x.length) return false;
        _.sort(), x.sort();
        for (var L = 0, j = _.length; L < j; L++) if (_[L] !== x[L]) return false;
        return true;
      }
      function l(_) {
        var x = /^\/+|\/+$/g;
        return _.replace(x, "");
      }
      t._parts = function() {
        return { protocol: null, username: null, password: null, hostname: null, urn: null, port: null, path: null, query: null, fragment: null, preventInvalidHostname: t.preventInvalidHostname, duplicateQueryParameters: t.duplicateQueryParameters, escapeQuerySpace: t.escapeQuerySpace };
      }, t.preventInvalidHostname = false, t.duplicateQueryParameters = false, t.escapeQuerySpace = true, t.protocol_expression = /^[a-z][a-z0-9.+-]*$/i, t.idn_expression = /[^a-z0-9\._-]/i, t.punycode_expression = /(xn--)/i, t.ip4_expression = /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/, t.ip6_expression = /^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$/, t.find_uri_expression = /\b((?:[a-z][\w-]+:(?:\/{1,3}|[a-z0-9%])|www\d{0,3}[.]|[a-z0-9.\-]+[.][a-z]{2,4}\/)(?:[^\s()<>]+|\(([^\s()<>]+|(\([^\s()<>]+\)))*\))+(?:\(([^\s()<>]+|(\([^\s()<>]+\)))*\)|[^\s`!()\[\]{};:'".,<>?«»“”‘’]))/ig, t.findUri = { start: /\b(?:([a-z][a-z0-9.+-]*:\/\/)|www\.)/gi, end: /[\s\r\n]|$/, trim: /[`!()\[\]{};:'".,<>?«»“”„‘’]+$/, parens: /(\([^\)]*\)|\[[^\]]*\]|\{[^}]*\}|<[^>]*>)/g }, t.leading_whitespace_expression = /^[\x00-\x20\u00a0\u1680\u2000-\u200a\u2028\u2029\u202f\u205f\u3000\ufeff]+/, t.ascii_tab_whitespace = /[\u0009\u000A\u000D]+/g, t.defaultPorts = { http: "80", https: "443", ftp: "21", gopher: "70", ws: "80", wss: "443" }, t.hostProtocols = ["http", "https"], t.invalid_hostname_characters = /[^a-zA-Z0-9\.\-:_]/, t.domAttributes = { a: "href", blockquote: "cite", link: "href", base: "href", script: "src", form: "action", img: "src", area: "href", iframe: "src", embed: "src", source: "src", track: "src", input: "src", audio: "src", video: "src" }, t.getDomAttribute = function(_) {
        if (!(!_ || !_.nodeName)) {
          var x = _.nodeName.toLowerCase();
          if (!(x === "input" && _.type !== "image")) return t.domAttributes[x];
        }
      };
      function d(_) {
        return escape(_);
      }
      function b(_) {
        return encodeURIComponent(_).replace(/[!'()*]/g, d).replace(/\*/g, "%2A");
      }
      t.encode = b, t.decode = decodeURIComponent, t.iso8859 = function() {
        t.encode = escape, t.decode = unescape;
      }, t.unicode = function() {
        t.encode = b, t.decode = decodeURIComponent;
      }, t.characters = { pathname: { encode: { expression: /%(24|26|2B|2C|3B|3D|3A|40)/ig, map: { "%24": "$", "%26": "&", "%2B": "+", "%2C": ",", "%3B": ";", "%3D": "=", "%3A": ":", "%40": "@" } }, decode: { expression: /[\/\?#]/g, map: { "/": "%2F", "?": "%3F", "#": "%23" } } }, reserved: { encode: { expression: /%(21|23|24|26|27|28|29|2A|2B|2C|2F|3A|3B|3D|3F|40|5B|5D)/ig, map: { "%3A": ":", "%2F": "/", "%3F": "?", "%23": "#", "%5B": "[", "%5D": "]", "%40": "@", "%21": "!", "%24": "$", "%26": "&", "%27": "'", "%28": "(", "%29": ")", "%2A": "*", "%2B": "+", "%2C": ",", "%3B": ";", "%3D": "=" } } }, urnpath: { encode: { expression: /%(21|24|27|28|29|2A|2B|2C|3B|3D|40)/ig, map: { "%21": "!", "%24": "$", "%27": "'", "%28": "(", "%29": ")", "%2A": "*", "%2B": "+", "%2C": ",", "%3B": ";", "%3D": "=", "%40": "@" } }, decode: { expression: /[\/\?#:]/g, map: { "/": "%2F", "?": "%3F", "#": "%23", ":": "%3A" } } } }, t.encodeQuery = function(_, x) {
        var L = t.encode(_ + "");
        return x === void 0 && (x = t.escapeQuerySpace), x ? L.replace(/%20/g, "+") : L;
      }, t.decodeQuery = function(_, x) {
        _ += "", x === void 0 && (x = t.escapeQuerySpace);
        try {
          return t.decode(x ? _.replace(/\+/g, "%20") : _);
        } catch {
          return _;
        }
      };
      var S = { encode: "encode", decode: "decode" }, E, R = function(_, x) {
        return function(L) {
          try {
            return t[x](L + "").replace(t.characters[_][x].expression, function(j) {
              return t.characters[_][x].map[j];
            });
          } catch {
            return L;
          }
        };
      };
      for (E in S) t[E + "PathSegment"] = R("pathname", S[E]), t[E + "UrnPathSegment"] = R("urnpath", S[E]);
      var k = function(_, x, L) {
        return function(j) {
          var z;
          L ? z = function(X) {
            return t[x](t[L](X));
          } : z = t[x];
          for (var Z = (j + "").split(_), ue = 0, $ = Z.length; ue < $; ue++) Z[ue] = z(Z[ue]);
          return Z.join(_);
        };
      };
      t.decodePath = k("/", "decodePathSegment"), t.decodeUrnPath = k(":", "decodeUrnPathSegment"), t.recodePath = k("/", "encodePathSegment", "decode"), t.recodeUrnPath = k(":", "encodeUrnPathSegment", "decode"), t.encodeReserved = R("reserved", "encode"), t.parse = function(_, x) {
        var L;
        return x || (x = { preventInvalidHostname: t.preventInvalidHostname }), _ = _.replace(t.leading_whitespace_expression, ""), _ = _.replace(t.ascii_tab_whitespace, ""), L = _.indexOf("#"), L > -1 && (x.fragment = _.substring(L + 1) || null, _ = _.substring(0, L)), L = _.indexOf("?"), L > -1 && (x.query = _.substring(L + 1) || null, _ = _.substring(0, L)), _ = _.replace(/^(https?|ftp|wss?)?:+[/\\]*/i, "$1://"), _ = _.replace(/^[/\\]{2,}/i, "//"), _.substring(0, 2) === "//" ? (x.protocol = null, _ = _.substring(2), _ = t.parseAuthority(_, x)) : (L = _.indexOf(":"), L > -1 && (x.protocol = _.substring(0, L) || null, x.protocol && !x.protocol.match(t.protocol_expression) ? x.protocol = void 0 : _.substring(L + 1, L + 3).replace(/\\/g, "/") === "//" ? (_ = _.substring(L + 3), _ = t.parseAuthority(_, x)) : (_ = _.substring(L + 1), x.urn = true))), x.path = _, x;
      }, t.parseHost = function(_, x) {
        _ || (_ = ""), _ = _.replace(/\\/g, "/");
        var L = _.indexOf("/"), j, z;
        if (L === -1 && (L = _.length), _.charAt(0) === "[") j = _.indexOf("]"), x.hostname = _.substring(1, j) || null, x.port = _.substring(j + 2, L) || null, x.port === "/" && (x.port = null);
        else {
          var Z = _.indexOf(":"), ue = _.indexOf("/"), $ = _.indexOf(":", Z + 1);
          $ !== -1 && (ue === -1 || $ < ue) ? (x.hostname = _.substring(0, L) || null, x.port = null) : (z = _.substring(0, L).split(":"), x.hostname = z[0] || null, x.port = z[1] || null);
        }
        return x.hostname && _.substring(L).charAt(0) !== "/" && (L++, _ = "/" + _), x.preventInvalidHostname && t.ensureValidHostname(x.hostname, x.protocol), x.port && t.ensureValidPort(x.port), _.substring(L) || "/";
      }, t.parseAuthority = function(_, x) {
        return _ = t.parseUserinfo(_, x), t.parseHost(_, x);
      }, t.parseUserinfo = function(_, x) {
        var L = _, j = _.indexOf("\\");
        j !== -1 && (_ = _.replace(/\\/g, "/"));
        var z = _.indexOf("/"), Z = _.lastIndexOf("@", z > -1 ? z : _.length - 1), ue;
        return Z > -1 && (z === -1 || Z < z) ? (ue = _.substring(0, Z).split(":"), x.username = ue[0] ? t.decode(ue[0]) : null, ue.shift(), x.password = ue[0] ? t.decode(ue.join(":")) : null, _ = L.substring(Z + 1)) : (x.username = null, x.password = null), _;
      }, t.parseQuery = function(_, x) {
        if (!_) return {};
        if (_ = _.replace(/&+/g, "&").replace(/^\?*&*|&+$/g, ""), !_) return {};
        for (var L = {}, j = _.split("&"), z = j.length, Z, ue, $, X = 0; X < z; X++) Z = j[X].split("="), ue = t.decodeQuery(Z.shift(), x), $ = Z.length ? t.decodeQuery(Z.join("="), x) : null, ue !== "__proto__" && (c.call(L, ue) ? ((typeof L[ue] == "string" || L[ue] === null) && (L[ue] = [L[ue]]), L[ue].push($)) : L[ue] = $);
        return L;
      }, t.build = function(_) {
        var x = "", L = false;
        return _.protocol && (x += _.protocol + ":"), !_.urn && (x || _.hostname) && (x += "//", L = true), x += t.buildAuthority(_) || "", typeof _.path == "string" && (_.path.charAt(0) !== "/" && L && (x += "/"), x += _.path), typeof _.query == "string" && _.query && (x += "?" + _.query), typeof _.fragment == "string" && _.fragment && (x += "#" + _.fragment), x;
      }, t.buildHost = function(_) {
        var x = "";
        if (_.hostname) t.ip6_expression.test(_.hostname) ? x += "[" + _.hostname + "]" : x += _.hostname;
        else return "";
        return _.port && (x += ":" + _.port), x;
      }, t.buildAuthority = function(_) {
        return t.buildUserinfo(_) + t.buildHost(_);
      }, t.buildUserinfo = function(_) {
        var x = "";
        return _.username && (x += t.encode(_.username)), _.password && (x += ":" + t.encode(_.password)), x && (x += "@"), x;
      }, t.buildQuery = function(_, x, L) {
        var j = "", z, Z, ue, $;
        for (Z in _) if (Z !== "__proto__" && c.call(_, Z)) if (r(_[Z])) for (z = {}, ue = 0, $ = _[Z].length; ue < $; ue++) _[Z][ue] !== void 0 && z[_[Z][ue] + ""] === void 0 && (j += "&" + t.buildQueryParameter(Z, _[Z][ue], L), x !== true && (z[_[Z][ue] + ""] = true));
        else _[Z] !== void 0 && (j += "&" + t.buildQueryParameter(Z, _[Z], L));
        return j.substring(1);
      }, t.buildQueryParameter = function(_, x, L) {
        return t.encodeQuery(_, L) + (x !== null ? "=" + t.encodeQuery(x, L) : "");
      }, t.addQuery = function(_, x, L) {
        if (typeof x == "object") for (var j in x) c.call(x, j) && t.addQuery(_, j, x[j]);
        else if (typeof x == "string") {
          if (_[x] === void 0) {
            _[x] = L;
            return;
          } else typeof _[x] == "string" && (_[x] = [_[x]]);
          r(L) || (L = [L]), _[x] = (_[x] || []).concat(L);
        } else throw new TypeError("URI.addQuery() accepts an object, string as the name parameter");
      }, t.setQuery = function(_, x, L) {
        if (typeof x == "object") for (var j in x) c.call(x, j) && t.setQuery(_, j, x[j]);
        else if (typeof x == "string") _[x] = L === void 0 ? null : L;
        else throw new TypeError("URI.setQuery() accepts an object, string as the name parameter");
      }, t.removeQuery = function(_, x, L) {
        var j, z, Z;
        if (r(x)) for (j = 0, z = x.length; j < z; j++) _[x[j]] = void 0;
        else if (f(x) === "RegExp") for (Z in _) x.test(Z) && (_[Z] = void 0);
        else if (typeof x == "object") for (Z in x) c.call(x, Z) && t.removeQuery(_, Z, x[Z]);
        else if (typeof x == "string") L !== void 0 ? f(L) === "RegExp" ? !r(_[x]) && L.test(_[x]) ? _[x] = void 0 : _[x] = m(_[x], L) : _[x] === String(L) && (!r(L) || L.length === 1) ? _[x] = void 0 : r(_[x]) && (_[x] = m(_[x], L)) : _[x] = void 0;
        else throw new TypeError("URI.removeQuery() accepts an object, string, RegExp as the first parameter");
      }, t.hasQuery = function(_, x, L, j) {
        switch (f(x)) {
          case "String":
            break;
          case "RegExp":
            for (var z in _) if (c.call(_, z) && x.test(z) && (L === void 0 || t.hasQuery(_, z, L))) return true;
            return false;
          case "Object":
            for (var Z in x) if (c.call(x, Z) && !t.hasQuery(_, Z, x[Z])) return false;
            return true;
          default:
            throw new TypeError("URI.hasQuery() accepts a string, regular expression or object as the name parameter");
        }
        switch (f(L)) {
          case "Undefined":
            return x in _;
          case "Boolean":
            var ue = !!(r(_[x]) ? _[x].length : _[x]);
            return L === ue;
          case "Function":
            return !!L(_[x], x, _);
          case "Array":
            if (!r(_[x])) return false;
            var $ = j ? g : a;
            return $(_[x], L);
          case "RegExp":
            return r(_[x]) ? j ? g(_[x], L) : false : !!(_[x] && _[x].match(L));
          case "Number":
            L = String(L);
          case "String":
            return r(_[x]) ? j ? g(_[x], L) : false : _[x] === L;
          default:
            throw new TypeError("URI.hasQuery() accepts undefined, boolean, string, number, RegExp, Function as the value parameter");
        }
      }, t.joinPaths = function() {
        for (var _ = [], x = [], L = 0, j = 0; j < arguments.length; j++) {
          var z = new t(arguments[j]);
          _.push(z);
          for (var Z = z.segment(), ue = 0; ue < Z.length; ue++) typeof Z[ue] == "string" && x.push(Z[ue]), Z[ue] && L++;
        }
        if (!x.length || !L) return new t("");
        var $ = new t("").segment(x);
        return (_[0].path() === "" || _[0].path().slice(0, 1) === "/") && $.path("/" + $.path()), $.normalize();
      }, t.commonPath = function(_, x) {
        var L = Math.min(_.length, x.length), j;
        for (j = 0; j < L; j++) if (_.charAt(j) !== x.charAt(j)) {
          j--;
          break;
        }
        return j < 1 ? _.charAt(0) === x.charAt(0) && _.charAt(0) === "/" ? "/" : "" : ((_.charAt(j) !== "/" || x.charAt(j) !== "/") && (j = _.substring(0, j).lastIndexOf("/")), _.substring(0, j + 1));
      }, t.withinString = function(_, x, L) {
        L || (L = {});
        var j = L.start || t.findUri.start, z = L.end || t.findUri.end, Z = L.trim || t.findUri.trim, ue = L.parens || t.findUri.parens, $ = /[a-z0-9-]=["']?$/i;
        for (j.lastIndex = 0; ; ) {
          var X = j.exec(_);
          if (!X) break;
          var J = X.index;
          if (L.ignoreHtml) {
            var B = _.slice(Math.max(J - 3, 0), J);
            if (B && $.test(B)) continue;
          }
          for (var Q = J + _.slice(J).search(z), ne = _.slice(J, Q), K = -1; ; ) {
            var ie = ue.exec(ne);
            if (!ie) break;
            var ce = ie.index + ie[0].length;
            K = Math.max(K, ce);
          }
          if (K > -1 ? ne = ne.slice(0, K) + ne.slice(K).replace(Z, "") : ne = ne.replace(Z, ""), !(ne.length <= X[0].length) && !(L.ignore && L.ignore.test(ne))) {
            Q = J + ne.length;
            var ye = x(ne, J, Q, _);
            if (ye === void 0) {
              j.lastIndex = Q;
              continue;
            }
            ye = String(ye), _ = _.slice(0, J) + ye + _.slice(Q), j.lastIndex = J + ye.length;
          }
        }
        return j.lastIndex = 0, _;
      }, t.ensureValidHostname = function(_, x) {
        var L = !!_, j = !!x, z = false;
        if (j && (z = g(t.hostProtocols, x)), z && !L) throw new TypeError("Hostname cannot be empty, if protocol is " + x);
        if (_ && _.match(t.invalid_hostname_characters)) {
          if (!e) throw new TypeError('Hostname "' + _ + '" contains characters other than [A-Z0-9.-:_] and Punycode.js is not available');
          if (e.toASCII(_).match(t.invalid_hostname_characters)) throw new TypeError('Hostname "' + _ + '" contains characters other than [A-Z0-9.-:_]');
        }
      }, t.ensureValidPort = function(_) {
        if (_) {
          var x = Number(_);
          if (!(o(x) && x > 0 && x < 65536)) throw new TypeError('Port "' + _ + '" is not a valid port');
        }
      }, t.noConflict = function(_) {
        if (_) {
          var x = { URI: this.noConflict() };
          return u.URITemplate && typeof u.URITemplate.noConflict == "function" && (x.URITemplate = u.URITemplate.noConflict()), u.IPv6 && typeof u.IPv6.noConflict == "function" && (x.IPv6 = u.IPv6.noConflict()), u.SecondLevelDomains && typeof u.SecondLevelDomains.noConflict == "function" && (x.SecondLevelDomains = u.SecondLevelDomains.noConflict()), x;
        } else u.URI === this && (u.URI = y);
        return this;
      }, s.build = function(_) {
        return _ === true ? this._deferred_build = true : (_ === void 0 || this._deferred_build) && (this._string = t.build(this._parts), this._deferred_build = false), this;
      }, s.clone = function() {
        return new t(this);
      }, s.valueOf = s.toString = function() {
        return this.build(false)._string;
      };
      function w(_) {
        return function(x, L) {
          return x === void 0 ? this._parts[_] || "" : (this._parts[_] = x || null, this.build(!L), this);
        };
      }
      function F(_, x) {
        return function(L, j) {
          return L === void 0 ? this._parts[_] || "" : (L !== null && (L = L + "", L.charAt(0) === x && (L = L.substring(1))), this._parts[_] = L, this.build(!j), this);
        };
      }
      s.protocol = w("protocol"), s.username = w("username"), s.password = w("password"), s.hostname = w("hostname"), s.port = w("port"), s.query = F("query", "?"), s.fragment = F("fragment", "#"), s.search = function(_, x) {
        var L = this.query(_, x);
        return typeof L == "string" && L.length ? "?" + L : L;
      }, s.hash = function(_, x) {
        var L = this.fragment(_, x);
        return typeof L == "string" && L.length ? "#" + L : L;
      }, s.pathname = function(_, x) {
        if (_ === void 0 || _ === true) {
          var L = this._parts.path || (this._parts.hostname ? "/" : "");
          return _ ? (this._parts.urn ? t.decodeUrnPath : t.decodePath)(L) : L;
        } else return this._parts.urn ? this._parts.path = _ ? t.recodeUrnPath(_) : "" : this._parts.path = _ ? t.recodePath(_) : "/", this.build(!x), this;
      }, s.path = s.pathname, s.href = function(_, x) {
        var L;
        if (_ === void 0) return this.toString();
        this._string = "", this._parts = t._parts();
        var j = _ instanceof t, z = typeof _ == "object" && (_.hostname || _.path || _.pathname);
        if (_.nodeName) {
          var Z = t.getDomAttribute(_);
          _ = _[Z] || "", z = false;
        }
        if (!j && z && _.pathname !== void 0 && (_ = _.toString()), typeof _ == "string" || _ instanceof String) this._parts = t.parse(String(_), this._parts);
        else if (j || z) {
          var ue = j ? _._parts : _;
          for (L in ue) L !== "query" && c.call(this._parts, L) && (this._parts[L] = ue[L]);
          ue.query && this.query(ue.query, false);
        } else throw new TypeError("invalid input");
        return this.build(!x), this;
      }, s.is = function(_) {
        var x = false, L = false, j = false, z = false, Z = false, ue = false, $ = false, X = !this._parts.urn;
        switch (this._parts.hostname && (X = false, L = t.ip4_expression.test(this._parts.hostname), j = t.ip6_expression.test(this._parts.hostname), x = L || j, z = !x, Z = z && i && i.has(this._parts.hostname), ue = z && t.idn_expression.test(this._parts.hostname), $ = z && t.punycode_expression.test(this._parts.hostname)), _.toLowerCase()) {
          case "relative":
            return X;
          case "absolute":
            return !X;
          case "domain":
          case "name":
            return z;
          case "sld":
            return Z;
          case "ip":
            return x;
          case "ip4":
          case "ipv4":
          case "inet4":
            return L;
          case "ip6":
          case "ipv6":
          case "inet6":
            return j;
          case "idn":
            return ue;
          case "url":
            return !this._parts.urn;
          case "urn":
            return !!this._parts.urn;
          case "punycode":
            return $;
        }
        return null;
      };
      var I = s.protocol, q = s.port, N = s.hostname;
      s.protocol = function(_, x) {
        if (_ && (_ = _.replace(/:(\/\/)?$/, ""), !_.match(t.protocol_expression))) throw new TypeError('Protocol "' + _ + `" contains characters other than [A-Z0-9.+-] or doesn't start with [A-Z]`);
        return I.call(this, _, x);
      }, s.scheme = s.protocol, s.port = function(_, x) {
        return this._parts.urn ? _ === void 0 ? "" : this : (_ !== void 0 && (_ === 0 && (_ = null), _ && (_ += "", _.charAt(0) === ":" && (_ = _.substring(1)), t.ensureValidPort(_))), q.call(this, _, x));
      }, s.hostname = function(_, x) {
        if (this._parts.urn) return _ === void 0 ? "" : this;
        if (_ !== void 0) {
          var L = { preventInvalidHostname: this._parts.preventInvalidHostname }, j = t.parseHost(_, L);
          if (j !== "/") throw new TypeError('Hostname "' + _ + '" contains characters other than [A-Z0-9.-]');
          _ = L.hostname, this._parts.preventInvalidHostname && t.ensureValidHostname(_, this._parts.protocol);
        }
        return N.call(this, _, x);
      }, s.origin = function(_, x) {
        if (this._parts.urn) return _ === void 0 ? "" : this;
        if (_ === void 0) {
          var L = this.protocol(), j = this.authority();
          return j ? (L ? L + "://" : "") + this.authority() : "";
        } else {
          var z = t(_);
          return this.protocol(z.protocol()).authority(z.authority()).build(!x), this;
        }
      }, s.host = function(_, x) {
        if (this._parts.urn) return _ === void 0 ? "" : this;
        if (_ === void 0) return this._parts.hostname ? t.buildHost(this._parts) : "";
        var L = t.parseHost(_, this._parts);
        if (L !== "/") throw new TypeError('Hostname "' + _ + '" contains characters other than [A-Z0-9.-]');
        return this.build(!x), this;
      }, s.authority = function(_, x) {
        if (this._parts.urn) return _ === void 0 ? "" : this;
        if (_ === void 0) return this._parts.hostname ? t.buildAuthority(this._parts) : "";
        var L = t.parseAuthority(_, this._parts);
        if (L !== "/") throw new TypeError('Hostname "' + _ + '" contains characters other than [A-Z0-9.-]');
        return this.build(!x), this;
      }, s.userinfo = function(_, x) {
        if (this._parts.urn) return _ === void 0 ? "" : this;
        if (_ === void 0) {
          var L = t.buildUserinfo(this._parts);
          return L && L.substring(0, L.length - 1);
        } else return _[_.length - 1] !== "@" && (_ += "@"), t.parseUserinfo(_, this._parts), this.build(!x), this;
      }, s.resource = function(_, x) {
        var L;
        return _ === void 0 ? this.path() + this.search() + this.hash() : (L = t.parse(_), this._parts.path = L.path, this._parts.query = L.query, this._parts.fragment = L.fragment, this.build(!x), this);
      }, s.subdomain = function(_, x) {
        if (this._parts.urn) return _ === void 0 ? "" : this;
        if (_ === void 0) {
          if (!this._parts.hostname || this.is("IP")) return "";
          var L = this._parts.hostname.length - this.domain().length - 1;
          return this._parts.hostname.substring(0, L) || "";
        } else {
          var j = this._parts.hostname.length - this.domain().length, z = this._parts.hostname.substring(0, j), Z = new RegExp("^" + h(z));
          if (_ && _.charAt(_.length - 1) !== "." && (_ += "."), _.indexOf(":") !== -1) throw new TypeError("Domains cannot contain colons");
          return _ && t.ensureValidHostname(_, this._parts.protocol), this._parts.hostname = this._parts.hostname.replace(Z, _), this.build(!x), this;
        }
      }, s.domain = function(_, x) {
        if (this._parts.urn) return _ === void 0 ? "" : this;
        if (typeof _ == "boolean" && (x = _, _ = void 0), _ === void 0) {
          if (!this._parts.hostname || this.is("IP")) return "";
          var L = this._parts.hostname.match(/\./g);
          if (L && L.length < 2) return this._parts.hostname;
          var j = this._parts.hostname.length - this.tld(x).length - 1;
          return j = this._parts.hostname.lastIndexOf(".", j - 1) + 1, this._parts.hostname.substring(j) || "";
        } else {
          if (!_) throw new TypeError("cannot set domain empty");
          if (_.indexOf(":") !== -1) throw new TypeError("Domains cannot contain colons");
          if (t.ensureValidHostname(_, this._parts.protocol), !this._parts.hostname || this.is("IP")) this._parts.hostname = _;
          else {
            var z = new RegExp(h(this.domain()) + "$");
            this._parts.hostname = this._parts.hostname.replace(z, _);
          }
          return this.build(!x), this;
        }
      }, s.tld = function(_, x) {
        if (this._parts.urn) return _ === void 0 ? "" : this;
        if (typeof _ == "boolean" && (x = _, _ = void 0), _ === void 0) {
          if (!this._parts.hostname || this.is("IP")) return "";
          var L = this._parts.hostname.lastIndexOf("."), j = this._parts.hostname.substring(L + 1);
          return x !== true && i && i.list[j.toLowerCase()] && i.get(this._parts.hostname) || j;
        } else {
          var z;
          if (_) if (_.match(/[^a-zA-Z0-9-]/)) if (i && i.is(_)) z = new RegExp(h(this.tld()) + "$"), this._parts.hostname = this._parts.hostname.replace(z, _);
          else throw new TypeError('TLD "' + _ + '" contains characters other than [A-Z0-9]');
          else {
            if (!this._parts.hostname || this.is("IP")) throw new ReferenceError("cannot set TLD on non-domain host");
            z = new RegExp(h(this.tld()) + "$"), this._parts.hostname = this._parts.hostname.replace(z, _);
          }
          else throw new TypeError("cannot set TLD empty");
          return this.build(!x), this;
        }
      }, s.directory = function(_, x) {
        if (this._parts.urn) return _ === void 0 ? "" : this;
        if (_ === void 0 || _ === true) {
          if (!this._parts.path && !this._parts.hostname) return "";
          if (this._parts.path === "/") return "/";
          var L = this._parts.path.length - this.filename().length - 1, j = this._parts.path.substring(0, L) || (this._parts.hostname ? "/" : "");
          return _ ? t.decodePath(j) : j;
        } else {
          var z = this._parts.path.length - this.filename().length, Z = this._parts.path.substring(0, z), ue = new RegExp("^" + h(Z));
          return this.is("relative") || (_ || (_ = "/"), _.charAt(0) !== "/" && (_ = "/" + _)), _ && _.charAt(_.length - 1) !== "/" && (_ += "/"), _ = t.recodePath(_), this._parts.path = this._parts.path.replace(ue, _), this.build(!x), this;
        }
      }, s.filename = function(_, x) {
        if (this._parts.urn) return _ === void 0 ? "" : this;
        if (typeof _ != "string") {
          if (!this._parts.path || this._parts.path === "/") return "";
          var L = this._parts.path.lastIndexOf("/"), j = this._parts.path.substring(L + 1);
          return _ ? t.decodePathSegment(j) : j;
        } else {
          var z = false;
          _.charAt(0) === "/" && (_ = _.substring(1)), _.match(/\.?\//) && (z = true);
          var Z = new RegExp(h(this.filename()) + "$");
          return _ = t.recodePath(_), this._parts.path = this._parts.path.replace(Z, _), z ? this.normalizePath(x) : this.build(!x), this;
        }
      }, s.suffix = function(_, x) {
        if (this._parts.urn) return _ === void 0 ? "" : this;
        if (_ === void 0 || _ === true) {
          if (!this._parts.path || this._parts.path === "/") return "";
          var L = this.filename(), j = L.lastIndexOf("."), z, Z;
          return j === -1 ? "" : (z = L.substring(j + 1), Z = /^[a-z0-9%]+$/i.test(z) ? z : "", _ ? t.decodePathSegment(Z) : Z);
        } else {
          _.charAt(0) === "." && (_ = _.substring(1));
          var ue = this.suffix(), $;
          if (ue) _ ? $ = new RegExp(h(ue) + "$") : $ = new RegExp(h("." + ue) + "$");
          else {
            if (!_) return this;
            this._parts.path += "." + t.recodePath(_);
          }
          return $ && (_ = t.recodePath(_), this._parts.path = this._parts.path.replace($, _)), this.build(!x), this;
        }
      }, s.segment = function(_, x, L) {
        var j = this._parts.urn ? ":" : "/", z = this.path(), Z = z.substring(0, 1) === "/", ue = z.split(j);
        if (_ !== void 0 && typeof _ != "number" && (L = x, x = _, _ = void 0), _ !== void 0 && typeof _ != "number") throw new Error('Bad segment "' + _ + '", must be 0-based integer');
        if (Z && ue.shift(), _ < 0 && (_ = Math.max(ue.length + _, 0)), x === void 0) return _ === void 0 ? ue : ue[_];
        if (_ === null || ue[_] === void 0) if (r(x)) {
          ue = [];
          for (var $ = 0, X = x.length; $ < X; $++) !x[$].length && (!ue.length || !ue[ue.length - 1].length) || (ue.length && !ue[ue.length - 1].length && ue.pop(), ue.push(l(x[$])));
        } else (x || typeof x == "string") && (x = l(x), ue[ue.length - 1] === "" ? ue[ue.length - 1] = x : ue.push(x));
        else x ? ue[_] = l(x) : ue.splice(_, 1);
        return Z && ue.unshift(""), this.path(ue.join(j), L);
      }, s.segmentCoded = function(_, x, L) {
        var j, z, Z;
        if (typeof _ != "number" && (L = x, x = _, _ = void 0), x === void 0) {
          if (j = this.segment(_, x, L), !r(j)) j = j !== void 0 ? t.decode(j) : void 0;
          else for (z = 0, Z = j.length; z < Z; z++) j[z] = t.decode(j[z]);
          return j;
        }
        if (!r(x)) x = typeof x == "string" || x instanceof String ? t.encode(x) : x;
        else for (z = 0, Z = x.length; z < Z; z++) x[z] = t.encode(x[z]);
        return this.segment(_, x, L);
      };
      var H = s.query;
      return s.query = function(_, x) {
        if (_ === true) return t.parseQuery(this._parts.query, this._parts.escapeQuerySpace);
        if (typeof _ == "function") {
          var L = t.parseQuery(this._parts.query, this._parts.escapeQuerySpace), j = _.call(this, L);
          return this._parts.query = t.buildQuery(j || L, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace), this.build(!x), this;
        } else return _ !== void 0 && typeof _ != "string" ? (this._parts.query = t.buildQuery(_, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace), this.build(!x), this) : H.call(this, _, x);
      }, s.setQuery = function(_, x, L) {
        var j = t.parseQuery(this._parts.query, this._parts.escapeQuerySpace);
        if (typeof _ == "string" || _ instanceof String) j[_] = x !== void 0 ? x : null;
        else if (typeof _ == "object") for (var z in _) c.call(_, z) && (j[z] = _[z]);
        else throw new TypeError("URI.addQuery() accepts an object, string as the name parameter");
        return this._parts.query = t.buildQuery(j, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace), typeof _ != "string" && (L = x), this.build(!L), this;
      }, s.addQuery = function(_, x, L) {
        var j = t.parseQuery(this._parts.query, this._parts.escapeQuerySpace);
        return t.addQuery(j, _, x === void 0 ? null : x), this._parts.query = t.buildQuery(j, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace), typeof _ != "string" && (L = x), this.build(!L), this;
      }, s.removeQuery = function(_, x, L) {
        var j = t.parseQuery(this._parts.query, this._parts.escapeQuerySpace);
        return t.removeQuery(j, _, x), this._parts.query = t.buildQuery(j, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace), typeof _ != "string" && (L = x), this.build(!L), this;
      }, s.hasQuery = function(_, x, L) {
        var j = t.parseQuery(this._parts.query, this._parts.escapeQuerySpace);
        return t.hasQuery(j, _, x, L);
      }, s.setSearch = s.setQuery, s.addSearch = s.addQuery, s.removeSearch = s.removeQuery, s.hasSearch = s.hasQuery, s.normalize = function() {
        return this._parts.urn ? this.normalizeProtocol(false).normalizePath(false).normalizeQuery(false).normalizeFragment(false).build() : this.normalizeProtocol(false).normalizeHostname(false).normalizePort(false).normalizePath(false).normalizeQuery(false).normalizeFragment(false).build();
      }, s.normalizeProtocol = function(_) {
        return typeof this._parts.protocol == "string" && (this._parts.protocol = this._parts.protocol.toLowerCase(), this.build(!_)), this;
      }, s.normalizeHostname = function(_) {
        return this._parts.hostname && (this.is("IDN") && e ? this._parts.hostname = e.toASCII(this._parts.hostname) : this.is("IPv6") && n && (this._parts.hostname = n.best(this._parts.hostname)), this._parts.hostname = this._parts.hostname.toLowerCase(), this.build(!_)), this;
      }, s.normalizePort = function(_) {
        return typeof this._parts.protocol == "string" && this._parts.port === t.defaultPorts[this._parts.protocol] && (this._parts.port = null, this.build(!_)), this;
      }, s.normalizePath = function(_) {
        var x = this._parts.path;
        if (!x) return this;
        if (this._parts.urn) return this._parts.path = t.recodeUrnPath(this._parts.path), this.build(!_), this;
        if (this._parts.path === "/") return this;
        x = t.recodePath(x);
        var L, j = "", z, Z;
        for (x.charAt(0) !== "/" && (L = true, x = "/" + x), (x.slice(-3) === "/.." || x.slice(-2) === "/.") && (x += "/"), x = x.replace(/(\/(\.\/)+)|(\/\.$)/g, "/").replace(/\/{2,}/g, "/"), L && (j = x.substring(1).match(/^(\.\.\/)+/) || "", j && (j = j[0])); z = x.search(/\/\.\.(\/|$)/), z !== -1; ) {
          if (z === 0) {
            x = x.substring(3);
            continue;
          }
          Z = x.substring(0, z).lastIndexOf("/"), Z === -1 && (Z = z), x = x.substring(0, Z) + x.substring(z + 3);
        }
        return L && this.is("relative") && (x = j + x.substring(1)), this._parts.path = x, this.build(!_), this;
      }, s.normalizePathname = s.normalizePath, s.normalizeQuery = function(_) {
        return typeof this._parts.query == "string" && (this._parts.query.length ? this.query(t.parseQuery(this._parts.query, this._parts.escapeQuerySpace)) : this._parts.query = null, this.build(!_)), this;
      }, s.normalizeFragment = function(_) {
        return this._parts.fragment || (this._parts.fragment = null, this.build(!_)), this;
      }, s.normalizeSearch = s.normalizeQuery, s.normalizeHash = s.normalizeFragment, s.iso8859 = function() {
        var _ = t.encode, x = t.decode;
        t.encode = escape, t.decode = decodeURIComponent;
        try {
          this.normalize();
        } finally {
          t.encode = _, t.decode = x;
        }
        return this;
      }, s.unicode = function() {
        var _ = t.encode, x = t.decode;
        t.encode = b, t.decode = unescape;
        try {
          this.normalize();
        } finally {
          t.encode = _, t.decode = x;
        }
        return this;
      }, s.readable = function() {
        var _ = this.clone();
        _.username("").password("").normalize();
        var x = "";
        if (_._parts.protocol && (x += _._parts.protocol + "://"), _._parts.hostname && (_.is("punycode") && e ? (x += e.toUnicode(_._parts.hostname), _._parts.port && (x += ":" + _._parts.port)) : x += _.host()), _._parts.hostname && _._parts.path && _._parts.path.charAt(0) !== "/" && (x += "/"), x += _.path(true), _._parts.query) {
          for (var L = "", j = 0, z = _._parts.query.split("&"), Z = z.length; j < Z; j++) {
            var ue = (z[j] || "").split("=");
            L += "&" + t.decodeQuery(ue[0], this._parts.escapeQuerySpace).replace(/&/g, "%26"), ue[1] !== void 0 && (L += "=" + t.decodeQuery(ue[1], this._parts.escapeQuerySpace).replace(/&/g, "%26"));
          }
          x += "?" + L.substring(1);
        }
        return x += t.decodeQuery(_.hash(), true), x;
      }, s.absoluteTo = function(_) {
        var x = this.clone(), L = ["protocol", "username", "password", "hostname", "port"], j, z, Z;
        if (this._parts.urn) throw new Error("URNs do not have any generally defined hierarchical components");
        if (_ instanceof t || (_ = new t(_)), x._parts.protocol || (x._parts.protocol = _._parts.protocol, this._parts.hostname)) return x;
        for (z = 0; Z = L[z]; z++) x._parts[Z] = _._parts[Z];
        return x._parts.path ? (x._parts.path.substring(-2) === ".." && (x._parts.path += "/"), x.path().charAt(0) !== "/" && (j = _.directory(), j = j || (_.path().indexOf("/") === 0 ? "/" : ""), x._parts.path = (j ? j + "/" : "") + x._parts.path, x.normalizePath())) : (x._parts.path = _._parts.path, x._parts.query || (x._parts.query = _._parts.query)), x.build(), x;
      }, s.relativeTo = function(_) {
        var x = this.clone().normalize(), L, j, z, Z, ue;
        if (x._parts.urn) throw new Error("URNs do not have any generally defined hierarchical components");
        if (_ = new t(_).normalize(), L = x._parts, j = _._parts, Z = x.path(), ue = _.path(), Z.charAt(0) !== "/") throw new Error("URI is already relative");
        if (ue.charAt(0) !== "/") throw new Error("Cannot calculate a URI relative to another relative URI");
        if (L.protocol === j.protocol && (L.protocol = null), L.username !== j.username || L.password !== j.password || L.protocol !== null || L.username !== null || L.password !== null) return x.build();
        if (L.hostname === j.hostname && L.port === j.port) L.hostname = null, L.port = null;
        else return x.build();
        if (Z === ue) return L.path = "", x.build();
        if (z = t.commonPath(Z, ue), !z) return x.build();
        var $ = j.path.substring(z.length).replace(/[^\/]*$/, "").replace(/.*?\//g, "../");
        return L.path = $ + L.path.substring(z.length) || "./", x.build();
      }, s.equals = function(_) {
        var x = this.clone(), L = new t(_), j = {}, z = {}, Z = {}, ue, $, X;
        if (x.normalize(), L.normalize(), x.toString() === L.toString()) return true;
        if (ue = x.query(), $ = L.query(), x.query(""), L.query(""), x.toString() !== L.toString() || ue.length !== $.length) return false;
        j = t.parseQuery(ue, this._parts.escapeQuerySpace), z = t.parseQuery($, this._parts.escapeQuerySpace);
        for (X in j) if (c.call(j, X)) {
          if (r(j[X])) {
            if (!a(j[X], z[X])) return false;
          } else if (j[X] !== z[X]) return false;
          Z[X] = true;
        }
        for (X in z) if (c.call(z, X) && !Z[X]) return false;
        return true;
      }, s.preventInvalidHostname = function(_) {
        return this._parts.preventInvalidHostname = !!_, this;
      }, s.duplicateQueryParameters = function(_) {
        return this._parts.duplicateQueryParameters = !!_, this;
      }, s.escapeQuerySpace = function(_) {
        return this._parts.escapeQuerySpace = !!_, this;
      }, t;
    });
  }(nc)), nc.exports;
}
var Ws = { exports: {} }, Lc = {}, Bc = {}, ac = { exports: {} };
/*! For license information please see xdr.js.LICENSE.txt */
var _y = ac.exports, If;
function Ei() {
  return If || (If = 1, function(v, e) {
    (function(n, i) {
      v.exports = i();
    })(_y, () => (() => {
      var n = { 616: (y, t, o) => {
        o.d(t, { A: () => c });
        var s = o(287);
        s.hp.alloc(1).subarray(0, 1) instanceof s.hp || (s.hp.prototype.subarray = function(h, f) {
          const r = Uint8Array.prototype.subarray.call(this, h, f);
          return Object.setPrototypeOf(r, s.hp.prototype), r;
        });
        const c = s.hp;
      }, 281: (y, t, o) => {
        const s = o(164);
        y.exports = s;
      }, 164: (y, t, o) => {
        o.r(t), o.d(t, { Array: () => oe, Bool: () => B, Double: () => X, Enum: () => Te, Float: () => $, Hyper: () => j, Int: () => H, LargeInt: () => L, Opaque: () => ie, Option: () => re, Quadruple: () => J, Reference: () => pe, String: () => ne, Struct: () => Oe, Union: () => Ve, UnsignedHyper: () => ue, UnsignedInt: () => Z, VarArray: () => se, VarOpaque: () => ye, Void: () => ge, XdrReader: () => m, XdrWriter: () => l, config: () => D });
        class s extends TypeError {
          constructor(p) {
            super(`XDR Write Error: ${p}`);
          }
        }
        class c extends TypeError {
          constructor(p) {
            super(`XDR Read Error: ${p}`);
          }
        }
        class h extends TypeError {
          constructor(p) {
            super(`XDR Type Definition Error: ${p}`);
          }
        }
        class f extends h {
          constructor() {
            super("method not implemented, it should be overloaded in the descendant class.");
          }
        }
        var r = o(616).A;
        class m {
          constructor(p) {
            __publicField(this, "_buffer");
            __publicField(this, "_length");
            __publicField(this, "_index");
            if (!r.isBuffer(p)) {
              if (!(p instanceof Array || Array.isArray(p) || ArrayBuffer.isView(p))) throw new c(`source invalid: ${p}`);
              p = r.from(p);
            }
            this._buffer = p, this._length = p.length, this._index = 0;
          }
          get eof() {
            return this._index === this._length;
          }
          advance(p) {
            const A = this._index;
            if (this._index += p, this._length < this._index) throw new c("attempt to read outside the boundary of the buffer");
            const U = 4 - (p % 4 || 4);
            if (U > 0) {
              for (let Y = 0; Y < U; Y++) if (this._buffer[this._index + Y] !== 0) throw new c("invalid padding");
              this._index += U;
            }
            return A;
          }
          rewind() {
            this._index = 0;
          }
          read(p) {
            const A = this.advance(p);
            return this._buffer.subarray(A, A + p);
          }
          readInt32BE() {
            return this._buffer.readInt32BE(this.advance(4));
          }
          readUInt32BE() {
            return this._buffer.readUInt32BE(this.advance(4));
          }
          readBigInt64BE() {
            return this._buffer.readBigInt64BE(this.advance(8));
          }
          readBigUInt64BE() {
            return this._buffer.readBigUInt64BE(this.advance(8));
          }
          readFloatBE() {
            return this._buffer.readFloatBE(this.advance(4));
          }
          readDoubleBE() {
            return this._buffer.readDoubleBE(this.advance(8));
          }
          ensureInputConsumed() {
            if (this._index !== this._length) throw new c("invalid XDR contract typecast - source buffer not entirely consumed");
          }
        }
        var g = o(616).A;
        const a = 8192;
        class l {
          constructor(p) {
            __publicField(this, "_buffer");
            __publicField(this, "_length");
            __publicField(this, "_index", 0);
            typeof p == "number" ? p = g.allocUnsafe(p) : p instanceof g || (p = g.allocUnsafe(a)), this._buffer = p, this._length = p.length;
          }
          alloc(p) {
            const A = this._index;
            return this._index += p, this._length < this._index && this.resize(this._index), A;
          }
          resize(p) {
            const A = Math.ceil(p / a) * a, U = g.allocUnsafe(A);
            this._buffer.copy(U, 0, 0, this._length), this._buffer = U, this._length = A;
          }
          finalize() {
            return this._buffer.subarray(0, this._index);
          }
          toArray() {
            return [...this.finalize()];
          }
          write(p, A) {
            if (typeof p == "string") {
              const Y = this.alloc(A);
              this._buffer.write(p, Y, "utf8");
            } else {
              p instanceof g || (p = g.from(p));
              const Y = this.alloc(A);
              p.copy(this._buffer, Y, 0, A);
            }
            const U = 4 - (A % 4 || 4);
            if (U > 0) {
              const Y = this.alloc(U);
              this._buffer.fill(0, Y, this._index);
            }
          }
          writeInt32BE(p) {
            const A = this.alloc(4);
            this._buffer.writeInt32BE(p, A);
          }
          writeUInt32BE(p) {
            const A = this.alloc(4);
            this._buffer.writeUInt32BE(p, A);
          }
          writeBigInt64BE(p) {
            const A = this.alloc(8);
            this._buffer.writeBigInt64BE(p, A);
          }
          writeBigUInt64BE(p) {
            const A = this.alloc(8);
            this._buffer.writeBigUInt64BE(p, A);
          }
          writeFloatBE(p) {
            const A = this.alloc(4);
            this._buffer.writeFloatBE(p, A);
          }
          writeDoubleBE(p) {
            const A = this.alloc(8);
            this._buffer.writeDoubleBE(p, A);
          }
        }
        __publicField(l, "bufferChunkSize", a);
        var d = o(616).A;
        class b {
          toXDR(p = "raw") {
            if (!this.write) return this.constructor.toXDR(this, p);
            const A = new l();
            return this.write(this, A), k(A.finalize(), p);
          }
          fromXDR(p, A = "raw") {
            if (!this.read) return this.constructor.fromXDR(p, A);
            const U = new m(w(p, A)), Y = this.read(U);
            return U.ensureInputConsumed(), Y;
          }
          validateXDR(p, A = "raw") {
            try {
              return this.fromXDR(p, A), true;
            } catch {
              return false;
            }
          }
          static toXDR(p, A = "raw") {
            const U = new l();
            return this.write(p, U), k(U.finalize(), A);
          }
          static fromXDR(p, A = "raw") {
            const U = new m(w(p, A)), Y = this.read(U);
            return U.ensureInputConsumed(), Y;
          }
          static validateXDR(p, A = "raw") {
            try {
              return this.fromXDR(p, A), true;
            } catch {
              return false;
            }
          }
        }
        class S extends b {
          static read(p) {
            throw new f();
          }
          static write(p, A) {
            throw new f();
          }
          static isValid(p) {
            return false;
          }
        }
        class E extends b {
          isValid(p) {
            return false;
          }
        }
        class R extends TypeError {
          constructor(p) {
            super(`Invalid format ${p}, must be one of "raw", "hex", "base64"`);
          }
        }
        function k(C, p) {
          switch (p) {
            case "raw":
              return C;
            case "hex":
              return C.toString("hex");
            case "base64":
              return C.toString("base64");
            default:
              throw new R(p);
          }
        }
        function w(C, p) {
          switch (p) {
            case "raw":
              return C;
            case "hex":
              return d.from(C, "hex");
            case "base64":
              return d.from(C, "base64");
            default:
              throw new R(p);
          }
        }
        function F(C, p) {
          return C != null && (C instanceof p || I(C, p) && typeof C.constructor.read == "function" && typeof C.constructor.write == "function" && I(C, "XdrType"));
        }
        function I(C, p) {
          do
            if (C.constructor.name === p) return true;
          while (C = Object.getPrototypeOf(C));
          return false;
        }
        const q = 2147483647, N = -2147483648;
        class H extends S {
          static read(p) {
            return p.readInt32BE();
          }
          static write(p, A) {
            if (typeof p != "number") throw new s("not a number");
            if ((0 | p) !== p) throw new s("invalid i32 value");
            A.writeInt32BE(p);
          }
          static isValid(p) {
            return typeof p == "number" && (0 | p) === p && p >= N && p <= q;
          }
        }
        function _(C, p, A) {
          if (typeof C != "bigint") throw new TypeError("Expected bigint 'value', got " + typeof C);
          const U = p / A;
          if (U === 1) return [C];
          if (A < 32 || A > 128 || U !== 2 && U !== 4 && U !== 8) throw new TypeError(`invalid bigint (${C}) and slice size (${p} -> ${A}) combination`);
          const Y = BigInt(A), ae = new Array(U);
          for (let W = 0; W < U; W++) ae[W] = BigInt.asIntN(A, C), C >>= Y;
          return ae;
        }
        function x(C, p) {
          if (p) return [0n, (1n << BigInt(C)) - 1n];
          const A = 1n << BigInt(C - 1);
          return [0n - A, A - 1n];
        }
        H.MAX_VALUE = q, H.MIN_VALUE = 2147483648;
        class L extends S {
          constructor(p) {
            super(), this._value = function(A, U, Y) {
              A instanceof Array ? A.length && A[0] instanceof Array && (A = A[0]) : A = [A];
              const ae = U / A.length;
              switch (ae) {
                case 32:
                case 64:
                case 128:
                case 256:
                  break;
                default:
                  throw new RangeError(`expected slices to fit in 32/64/128/256 bits, got ${A}`);
              }
              try {
                for (let Ne = 0; Ne < A.length; Ne++) typeof A[Ne] != "bigint" && (A[Ne] = BigInt(A[Ne].valueOf()));
              } catch (Ne) {
                throw new TypeError(`expected bigint-like values, got: ${A} (${Ne})`);
              }
              if (Y && A.length === 1 && A[0] < 0n) throw new RangeError(`expected a positive value, got: ${A}`);
              let W = BigInt.asUintN(ae, A[0]);
              for (let Ne = 1; Ne < A.length; Ne++) W |= BigInt.asUintN(ae, A[Ne]) << BigInt(Ne * ae);
              Y || (W = BigInt.asIntN(U, W));
              const [de, tt] = x(U, Y);
              if (W >= de && W <= tt) return W;
              throw new TypeError(`bigint values [${A}] for ${function(Ne, ut) {
                return `${ut ? "u" : "i"}${Ne}`;
              }(U, Y)} out of range [${de}, ${tt}]: ${W}`);
            }(p, this.size, this.unsigned);
          }
          get unsigned() {
            throw new f();
          }
          get size() {
            throw new f();
          }
          slice(p) {
            return _(this._value, this.size, p);
          }
          toString() {
            return this._value.toString();
          }
          toJSON() {
            return { _value: this._value.toString() };
          }
          toBigInt() {
            return BigInt(this._value);
          }
          static read(p) {
            const { size: A } = this.prototype;
            return A === 64 ? new this(p.readBigUInt64BE()) : new this(...Array.from({ length: A / 64 }, () => p.readBigUInt64BE()).reverse());
          }
          static write(p, A) {
            if (p instanceof this) p = p._value;
            else if (typeof p != "bigint" || p > this.MAX_VALUE || p < this.MIN_VALUE) throw new s(`${p} is not a ${this.name}`);
            const { unsigned: U, size: Y } = this.prototype;
            if (Y === 64) U ? A.writeBigUInt64BE(p) : A.writeBigInt64BE(p);
            else for (const ae of _(p, Y, 64).reverse()) U ? A.writeBigUInt64BE(ae) : A.writeBigInt64BE(ae);
          }
          static isValid(p) {
            return typeof p == "bigint" || p instanceof this;
          }
          static fromString(p) {
            return new this(p);
          }
          static defineIntBoundaries() {
            const [p, A] = x(this.prototype.size, this.prototype.unsigned);
            this.MIN_VALUE = p, this.MAX_VALUE = A;
          }
        }
        __publicField(L, "MAX_VALUE", 0n);
        __publicField(L, "MIN_VALUE", 0n);
        class j extends L {
          constructor(...p) {
            super(p);
          }
          get low() {
            return Number(0xffffffffn & this._value) | 0;
          }
          get high() {
            return Number(this._value >> 32n) | 0;
          }
          get size() {
            return 64;
          }
          get unsigned() {
            return false;
          }
          static fromBits(p, A) {
            return new this(p, A);
          }
        }
        j.defineIntBoundaries();
        const z = 4294967295;
        class Z extends S {
          static read(p) {
            return p.readUInt32BE();
          }
          static write(p, A) {
            if (typeof p != "number" || !(p >= 0 && p <= z) || p % 1 != 0) throw new s("invalid u32 value");
            A.writeUInt32BE(p);
          }
          static isValid(p) {
            return typeof p == "number" && p % 1 == 0 && p >= 0 && p <= z;
          }
        }
        Z.MAX_VALUE = z, Z.MIN_VALUE = 0;
        class ue extends L {
          constructor(...p) {
            super(p);
          }
          get low() {
            return Number(0xffffffffn & this._value) | 0;
          }
          get high() {
            return Number(this._value >> 32n) | 0;
          }
          get size() {
            return 64;
          }
          get unsigned() {
            return true;
          }
          static fromBits(p, A) {
            return new this(p, A);
          }
        }
        ue.defineIntBoundaries();
        class $ extends S {
          static read(p) {
            return p.readFloatBE();
          }
          static write(p, A) {
            if (typeof p != "number") throw new s("not a number");
            A.writeFloatBE(p);
          }
          static isValid(p) {
            return typeof p == "number";
          }
        }
        class X extends S {
          static read(p) {
            return p.readDoubleBE();
          }
          static write(p, A) {
            if (typeof p != "number") throw new s("not a number");
            A.writeDoubleBE(p);
          }
          static isValid(p) {
            return typeof p == "number";
          }
        }
        class J extends S {
          static read() {
            throw new h("quadruple not supported");
          }
          static write() {
            throw new h("quadruple not supported");
          }
          static isValid() {
            return false;
          }
        }
        class B extends S {
          static read(p) {
            const A = H.read(p);
            switch (A) {
              case 0:
                return false;
              case 1:
                return true;
              default:
                throw new c(`got ${A} when trying to read a bool`);
            }
          }
          static write(p, A) {
            const U = p ? 1 : 0;
            H.write(U, A);
          }
          static isValid(p) {
            return typeof p == "boolean";
          }
        }
        var Q = o(616).A;
        class ne extends E {
          constructor(p = Z.MAX_VALUE) {
            super(), this._maxLength = p;
          }
          read(p) {
            const A = Z.read(p);
            if (A > this._maxLength) throw new c(`saw ${A} length String, max allowed is ${this._maxLength}`);
            return p.read(A);
          }
          readString(p) {
            return this.read(p).toString("utf8");
          }
          write(p, A) {
            const U = typeof p == "string" ? Q.byteLength(p, "utf8") : p.length;
            if (U > this._maxLength) throw new s(`got ${p.length} bytes, max allowed is ${this._maxLength}`);
            Z.write(U, A), A.write(p, U);
          }
          isValid(p) {
            return typeof p == "string" ? Q.byteLength(p, "utf8") <= this._maxLength : !!(p instanceof Array || Q.isBuffer(p)) && p.length <= this._maxLength;
          }
        }
        var K = o(616).A;
        class ie extends E {
          constructor(p) {
            super(), this._length = p;
          }
          read(p) {
            return p.read(this._length);
          }
          write(p, A) {
            const { length: U } = p;
            if (U !== this._length) throw new s(`got ${p.length} bytes, expected ${this._length}`);
            A.write(p, U);
          }
          isValid(p) {
            return K.isBuffer(p) && p.length === this._length;
          }
        }
        var ce = o(616).A;
        class ye extends E {
          constructor(p = Z.MAX_VALUE) {
            super(), this._maxLength = p;
          }
          read(p) {
            const A = Z.read(p);
            if (A > this._maxLength) throw new c(`saw ${A} length VarOpaque, max allowed is ${this._maxLength}`);
            return p.read(A);
          }
          write(p, A) {
            const { length: U } = p;
            if (p.length > this._maxLength) throw new s(`got ${p.length} bytes, max allowed is ${this._maxLength}`);
            Z.write(U, A), A.write(p, U);
          }
          isValid(p) {
            return ce.isBuffer(p) && p.length <= this._maxLength;
          }
        }
        class oe extends E {
          constructor(p, A) {
            super(), this._childType = p, this._length = A;
          }
          read(p) {
            const A = new o.g.Array(this._length);
            for (let U = 0; U < this._length; U++) A[U] = this._childType.read(p);
            return A;
          }
          write(p, A) {
            if (!o.g.Array.isArray(p)) throw new s("value is not array");
            if (p.length !== this._length) throw new s(`got array of size ${p.length}, expected ${this._length}`);
            for (const U of p) this._childType.write(U, A);
          }
          isValid(p) {
            if (!(p instanceof o.g.Array) || p.length !== this._length) return false;
            for (const A of p) if (!this._childType.isValid(A)) return false;
            return true;
          }
        }
        class se extends E {
          constructor(p, A = Z.MAX_VALUE) {
            super(), this._childType = p, this._maxLength = A;
          }
          read(p) {
            const A = Z.read(p);
            if (A > this._maxLength) throw new c(`saw ${A} length VarArray, max allowed is ${this._maxLength}`);
            const U = new Array(A);
            for (let Y = 0; Y < A; Y++) U[Y] = this._childType.read(p);
            return U;
          }
          write(p, A) {
            if (!(p instanceof Array)) throw new s("value is not array");
            if (p.length > this._maxLength) throw new s(`got array of size ${p.length}, max allowed is ${this._maxLength}`);
            Z.write(p.length, A);
            for (const U of p) this._childType.write(U, A);
          }
          isValid(p) {
            if (!(p instanceof Array) || p.length > this._maxLength) return false;
            for (const A of p) if (!this._childType.isValid(A)) return false;
            return true;
          }
        }
        class re extends S {
          constructor(p) {
            super(), this._childType = p;
          }
          read(p) {
            if (B.read(p)) return this._childType.read(p);
          }
          write(p, A) {
            const U = p != null;
            B.write(U, A), U && this._childType.write(p, A);
          }
          isValid(p) {
            return p == null || this._childType.isValid(p);
          }
        }
        class ge extends S {
          static read() {
          }
          static write(p) {
            if (p !== void 0) throw new s("trying to write value to a void slot");
          }
          static isValid(p) {
            return p === void 0;
          }
        }
        class Te extends S {
          constructor(p, A) {
            super(), this.name = p, this.value = A;
          }
          static read(p) {
            const A = H.read(p), U = this._byValue[A];
            if (U === void 0) throw new c(`unknown ${this.enumName} member for value ${A}`);
            return U;
          }
          static write(p, A) {
            if (!this.isValid(p)) throw new s(`${p} has enum name ${p == null ? void 0 : p.enumName}, not ${this.enumName}: ${JSON.stringify(p)}`);
            H.write(p.value, A);
          }
          static isValid(p) {
            var _a2;
            return ((_a2 = p == null ? void 0 : p.constructor) == null ? void 0 : _a2.enumName) === this.enumName || F(p, this);
          }
          static members() {
            return this._members;
          }
          static values() {
            return Object.values(this._members);
          }
          static fromName(p) {
            const A = this._members[p];
            if (!A) throw new TypeError(`${p} is not a member of ${this.enumName}`);
            return A;
          }
          static fromValue(p) {
            const A = this._byValue[p];
            if (A === void 0) throw new TypeError(`${p} is not a value of any member of ${this.enumName}`);
            return A;
          }
          static create(p, A, U) {
            const Y = class extends Te {
            };
            Y.enumName = A, p.results[A] = Y, Y._members = {}, Y._byValue = {};
            for (const [ae, W] of Object.entries(U)) {
              const de = new Y(ae, W);
              Y._members[ae] = de, Y._byValue[W] = de, Y[ae] = () => de;
            }
            return Y;
          }
        }
        class pe extends S {
          resolve() {
            throw new h('"resolve" method should be implemented in the descendant class');
          }
        }
        class Oe extends E {
          constructor(p) {
            super(), this._attributes = p || {};
          }
          static read(p) {
            const A = {};
            for (const [U, Y] of this._fields) A[U] = Y.read(p);
            return new this(A);
          }
          static write(p, A) {
            var _a2;
            if (!this.isValid(p)) throw new s(`${p} has struct name ${(_a2 = p == null ? void 0 : p.constructor) == null ? void 0 : _a2.structName}, not ${this.structName}: ${JSON.stringify(p)}`);
            for (const [U, Y] of this._fields) {
              const ae = p._attributes[U];
              Y.write(ae, A);
            }
          }
          static isValid(p) {
            var _a2;
            return ((_a2 = p == null ? void 0 : p.constructor) == null ? void 0 : _a2.structName) === this.structName || F(p, this);
          }
          static create(p, A, U) {
            const Y = class extends Oe {
            };
            Y.structName = A, p.results[A] = Y;
            const ae = new Array(U.length);
            for (let W = 0; W < U.length; W++) {
              const de = U[W], tt = de[0];
              let Ne = de[1];
              Ne instanceof pe && (Ne = Ne.resolve(p)), ae[W] = [tt, Ne], Y.prototype[tt] = xe(tt);
            }
            return Y._fields = ae, Y;
          }
        }
        function xe(C) {
          return function(p) {
            return p !== void 0 && (this._attributes[C] = p), this._attributes[C];
          };
        }
        class Ve extends E {
          constructor(p, A) {
            super(), this.set(p, A);
          }
          set(p, A) {
            typeof p == "string" && (p = this.constructor._switchOn.fromName(p)), this._switch = p;
            const U = this.constructor.armForSwitch(this._switch);
            this._arm = U, this._armType = U === ge ? ge : this.constructor._arms[U], this._value = A;
          }
          get(p = this._arm) {
            if (this._arm !== ge && this._arm !== p) throw new TypeError(`${p} not set`);
            return this._value;
          }
          switch() {
            return this._switch;
          }
          arm() {
            return this._arm;
          }
          armType() {
            return this._armType;
          }
          value() {
            return this._value;
          }
          static armForSwitch(p) {
            const A = this._switches.get(p);
            if (A !== void 0) return A;
            if (this._defaultArm) return this._defaultArm;
            throw new TypeError(`Bad union switch: ${p}`);
          }
          static armTypeForArm(p) {
            return p === ge ? ge : this._arms[p];
          }
          static read(p) {
            const A = this._switchOn.read(p), U = this.armForSwitch(A), Y = U === ge ? ge : this._arms[U];
            let ae;
            return ae = Y !== void 0 ? Y.read(p) : U.read(p), new this(A, ae);
          }
          static write(p, A) {
            if (!this.isValid(p)) throw new s(`${p} has union name ${p == null ? void 0 : p.unionName}, not ${this.unionName}: ${JSON.stringify(p)}`);
            this._switchOn.write(p.switch(), A), p.armType().write(p.value(), A);
          }
          static isValid(p) {
            var _a2;
            return ((_a2 = p == null ? void 0 : p.constructor) == null ? void 0 : _a2.unionName) === this.unionName || F(p, this);
          }
          static create(p, A, U) {
            const Y = class extends Ve {
            };
            Y.unionName = A, p.results[A] = Y, U.switchOn instanceof pe ? Y._switchOn = U.switchOn.resolve(p) : Y._switchOn = U.switchOn, Y._switches = /* @__PURE__ */ new Map(), Y._arms = {};
            let ae = U.defaultArm;
            ae instanceof pe && (ae = ae.resolve(p)), Y._defaultArm = ae;
            for (const [W, de] of U.switches) {
              const tt = typeof W == "string" ? Y._switchOn.fromName(W) : W;
              Y._switches.set(tt, de);
            }
            if (Y._switchOn.values !== void 0) for (const W of Y._switchOn.values()) Y[W.name] = function(de) {
              return new Y(W, de);
            }, Y.prototype[W.name] = function(de) {
              return this.set(W, de);
            };
            if (U.arms) for (const [W, de] of Object.entries(U.arms)) Y._arms[W] = de instanceof pe ? de.resolve(p) : de, de !== ge && (Y.prototype[W] = function() {
              return this.get(W);
            });
            return Y;
          }
        }
        class _e extends pe {
          constructor(p) {
            super(), this.name = p;
          }
          resolve(p) {
            return p.definitions[this.name].resolve(p);
          }
        }
        class Be extends pe {
          constructor(p, A, U = false) {
            super(), this.childReference = p, this.length = A, this.variable = U;
          }
          resolve(p) {
            let A = this.childReference, U = this.length;
            return A instanceof pe && (A = A.resolve(p)), U instanceof pe && (U = U.resolve(p)), this.variable ? new se(A, U) : new oe(A, U);
          }
        }
        class Qe extends pe {
          constructor(p) {
            super(), this.childReference = p, this.name = p.name;
          }
          resolve(p) {
            let A = this.childReference;
            return A instanceof pe && (A = A.resolve(p)), new re(A);
          }
        }
        class ee extends pe {
          constructor(p, A) {
            super(), this.sizedType = p, this.length = A;
          }
          resolve(p) {
            let A = this.length;
            return A instanceof pe && (A = A.resolve(p)), new this.sizedType(A);
          }
        }
        class P {
          constructor(p, A, U) {
            this.constructor = p, this.name = A, this.config = U;
          }
          resolve(p) {
            return this.name in p.results ? p.results[this.name] : this.constructor(p, this.name, this.config);
          }
        }
        function T(C, p, A) {
          return A instanceof pe && (A = A.resolve(C)), C.results[p] = A, A;
        }
        function O(C, p, A) {
          return C.results[p] = A, A;
        }
        class V {
          constructor(p) {
            this._destination = p, this._definitions = {};
          }
          enum(p, A) {
            const U = new P(Te.create, p, A);
            this.define(p, U);
          }
          struct(p, A) {
            const U = new P(Oe.create, p, A);
            this.define(p, U);
          }
          union(p, A) {
            const U = new P(Ve.create, p, A);
            this.define(p, U);
          }
          typedef(p, A) {
            const U = new P(T, p, A);
            this.define(p, U);
          }
          const(p, A) {
            const U = new P(O, p, A);
            this.define(p, U);
          }
          void() {
            return ge;
          }
          bool() {
            return B;
          }
          int() {
            return H;
          }
          hyper() {
            return j;
          }
          uint() {
            return Z;
          }
          uhyper() {
            return ue;
          }
          float() {
            return $;
          }
          double() {
            return X;
          }
          quadruple() {
            return J;
          }
          string(p) {
            return new ee(ne, p);
          }
          opaque(p) {
            return new ee(ie, p);
          }
          varOpaque(p) {
            return new ee(ye, p);
          }
          array(p, A) {
            return new Be(p, A);
          }
          varArray(p, A) {
            return new Be(p, A, true);
          }
          option(p) {
            return new Qe(p);
          }
          define(p, A) {
            if (this._destination[p] !== void 0) throw new h(`${p} is already defined`);
            this._definitions[p] = A;
          }
          lookup(p) {
            return new _e(p);
          }
          resolve() {
            for (const p of Object.values(this._definitions)) p.resolve({ definitions: this._definitions, results: this._destination });
          }
        }
        function D(C, p = {}) {
          if (C) {
            const A = new V(p);
            C(A), A.resolve();
          }
          return p;
        }
      }, 526: (y, t) => {
        t.byteLength = function(g) {
          var a = r(g), l = a[0], d = a[1];
          return 3 * (l + d) / 4 - d;
        }, t.toByteArray = function(g) {
          var a, l, d = r(g), b = d[0], S = d[1], E = new c(function(w, F, I) {
            return 3 * (F + I) / 4 - I;
          }(0, b, S)), R = 0, k = S > 0 ? b - 4 : b;
          for (l = 0; l < k; l += 4) a = s[g.charCodeAt(l)] << 18 | s[g.charCodeAt(l + 1)] << 12 | s[g.charCodeAt(l + 2)] << 6 | s[g.charCodeAt(l + 3)], E[R++] = a >> 16 & 255, E[R++] = a >> 8 & 255, E[R++] = 255 & a;
          return S === 2 && (a = s[g.charCodeAt(l)] << 2 | s[g.charCodeAt(l + 1)] >> 4, E[R++] = 255 & a), S === 1 && (a = s[g.charCodeAt(l)] << 10 | s[g.charCodeAt(l + 1)] << 4 | s[g.charCodeAt(l + 2)] >> 2, E[R++] = a >> 8 & 255, E[R++] = 255 & a), E;
        }, t.fromByteArray = function(g) {
          for (var a, l = g.length, d = l % 3, b = [], S = 16383, E = 0, R = l - d; E < R; E += S) b.push(m(g, E, E + S > R ? R : E + S));
          return d === 1 ? (a = g[l - 1], b.push(o[a >> 2] + o[a << 4 & 63] + "==")) : d === 2 && (a = (g[l - 2] << 8) + g[l - 1], b.push(o[a >> 10] + o[a >> 4 & 63] + o[a << 2 & 63] + "=")), b.join("");
        };
        for (var o = [], s = [], c = typeof Uint8Array < "u" ? Uint8Array : Array, h = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", f = 0; f < 64; ++f) o[f] = h[f], s[h.charCodeAt(f)] = f;
        function r(g) {
          var a = g.length;
          if (a % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
          var l = g.indexOf("=");
          return l === -1 && (l = a), [l, l === a ? 0 : 4 - l % 4];
        }
        function m(g, a, l) {
          for (var d, b, S = [], E = a; E < l; E += 3) d = (g[E] << 16 & 16711680) + (g[E + 1] << 8 & 65280) + (255 & g[E + 2]), S.push(o[(b = d) >> 18 & 63] + o[b >> 12 & 63] + o[b >> 6 & 63] + o[63 & b]);
          return S.join("");
        }
        s[45] = 62, s[95] = 63;
      }, 287: (y, t, o) => {
        const s = o(526), c = o(251), h = typeof Symbol == "function" && typeof Symbol.for == "function" ? Symbol.for("nodejs.util.inspect.custom") : null;
        t.hp = m, t.IS = 50;
        const f = 2147483647;
        function r(P) {
          if (P > f) throw new RangeError('The value "' + P + '" is invalid for option "size"');
          const T = new Uint8Array(P);
          return Object.setPrototypeOf(T, m.prototype), T;
        }
        function m(P, T, O) {
          if (typeof P == "number") {
            if (typeof T == "string") throw new TypeError('The "string" argument must be of type string. Received type number');
            return l(P);
          }
          return g(P, T, O);
        }
        function g(P, T, O) {
          if (typeof P == "string") return function(C, p) {
            if (typeof p == "string" && p !== "" || (p = "utf8"), !m.isEncoding(p)) throw new TypeError("Unknown encoding: " + p);
            const A = 0 | E(C, p);
            let U = r(A);
            const Y = U.write(C, p);
            return Y !== A && (U = U.slice(0, Y)), U;
          }(P, T);
          if (ArrayBuffer.isView(P)) return function(C) {
            if (Ve(C, Uint8Array)) {
              const p = new Uint8Array(C);
              return b(p.buffer, p.byteOffset, p.byteLength);
            }
            return d(C);
          }(P);
          if (P == null) throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof P);
          if (Ve(P, ArrayBuffer) || P && Ve(P.buffer, ArrayBuffer) || typeof SharedArrayBuffer < "u" && (Ve(P, SharedArrayBuffer) || P && Ve(P.buffer, SharedArrayBuffer))) return b(P, T, O);
          if (typeof P == "number") throw new TypeError('The "value" argument must not be of type number. Received type number');
          const V = P.valueOf && P.valueOf();
          if (V != null && V !== P) return m.from(V, T, O);
          const D = function(C) {
            if (m.isBuffer(C)) {
              const p = 0 | S(C.length), A = r(p);
              return A.length === 0 || C.copy(A, 0, 0, p), A;
            }
            if (C.length !== void 0) return typeof C.length != "number" || _e(C.length) ? r(0) : d(C);
            if (C.type === "Buffer" && Array.isArray(C.data)) return d(C.data);
          }(P);
          if (D) return D;
          if (typeof Symbol < "u" && Symbol.toPrimitive != null && typeof P[Symbol.toPrimitive] == "function") return m.from(P[Symbol.toPrimitive]("string"), T, O);
          throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof P);
        }
        function a(P) {
          if (typeof P != "number") throw new TypeError('"size" argument must be of type number');
          if (P < 0) throw new RangeError('The value "' + P + '" is invalid for option "size"');
        }
        function l(P) {
          return a(P), r(P < 0 ? 0 : 0 | S(P));
        }
        function d(P) {
          const T = P.length < 0 ? 0 : 0 | S(P.length), O = r(T);
          for (let V = 0; V < T; V += 1) O[V] = 255 & P[V];
          return O;
        }
        function b(P, T, O) {
          if (T < 0 || P.byteLength < T) throw new RangeError('"offset" is outside of buffer bounds');
          if (P.byteLength < T + (O || 0)) throw new RangeError('"length" is outside of buffer bounds');
          let V;
          return V = T === void 0 && O === void 0 ? new Uint8Array(P) : O === void 0 ? new Uint8Array(P, T) : new Uint8Array(P, T, O), Object.setPrototypeOf(V, m.prototype), V;
        }
        function S(P) {
          if (P >= f) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + f.toString(16) + " bytes");
          return 0 | P;
        }
        function E(P, T) {
          if (m.isBuffer(P)) return P.length;
          if (ArrayBuffer.isView(P) || Ve(P, ArrayBuffer)) return P.byteLength;
          if (typeof P != "string") throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof P);
          const O = P.length, V = arguments.length > 2 && arguments[2] === true;
          if (!V && O === 0) return 0;
          let D = false;
          for (; ; ) switch (T) {
            case "ascii":
            case "latin1":
            case "binary":
              return O;
            case "utf8":
            case "utf-8":
              return pe(P).length;
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return 2 * O;
            case "hex":
              return O >>> 1;
            case "base64":
              return Oe(P).length;
            default:
              if (D) return V ? -1 : pe(P).length;
              T = ("" + T).toLowerCase(), D = true;
          }
        }
        function R(P, T, O) {
          let V = false;
          if ((T === void 0 || T < 0) && (T = 0), T > this.length || ((O === void 0 || O > this.length) && (O = this.length), O <= 0) || (O >>>= 0) <= (T >>>= 0)) return "";
          for (P || (P = "utf8"); ; ) switch (P) {
            case "hex":
              return ue(this, T, O);
            case "utf8":
            case "utf-8":
              return L(this, T, O);
            case "ascii":
              return z(this, T, O);
            case "latin1":
            case "binary":
              return Z(this, T, O);
            case "base64":
              return x(this, T, O);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return $(this, T, O);
            default:
              if (V) throw new TypeError("Unknown encoding: " + P);
              P = (P + "").toLowerCase(), V = true;
          }
        }
        function k(P, T, O) {
          const V = P[T];
          P[T] = P[O], P[O] = V;
        }
        function w(P, T, O, V, D) {
          if (P.length === 0) return -1;
          if (typeof O == "string" ? (V = O, O = 0) : O > 2147483647 ? O = 2147483647 : O < -2147483648 && (O = -2147483648), _e(O = +O) && (O = D ? 0 : P.length - 1), O < 0 && (O = P.length + O), O >= P.length) {
            if (D) return -1;
            O = P.length - 1;
          } else if (O < 0) {
            if (!D) return -1;
            O = 0;
          }
          if (typeof T == "string" && (T = m.from(T, V)), m.isBuffer(T)) return T.length === 0 ? -1 : F(P, T, O, V, D);
          if (typeof T == "number") return T &= 255, typeof Uint8Array.prototype.indexOf == "function" ? D ? Uint8Array.prototype.indexOf.call(P, T, O) : Uint8Array.prototype.lastIndexOf.call(P, T, O) : F(P, [T], O, V, D);
          throw new TypeError("val must be string, number or Buffer");
        }
        function F(P, T, O, V, D) {
          let C, p = 1, A = P.length, U = T.length;
          if (V !== void 0 && ((V = String(V).toLowerCase()) === "ucs2" || V === "ucs-2" || V === "utf16le" || V === "utf-16le")) {
            if (P.length < 2 || T.length < 2) return -1;
            p = 2, A /= 2, U /= 2, O /= 2;
          }
          function Y(ae, W) {
            return p === 1 ? ae[W] : ae.readUInt16BE(W * p);
          }
          if (D) {
            let ae = -1;
            for (C = O; C < A; C++) if (Y(P, C) === Y(T, ae === -1 ? 0 : C - ae)) {
              if (ae === -1 && (ae = C), C - ae + 1 === U) return ae * p;
            } else ae !== -1 && (C -= C - ae), ae = -1;
          } else for (O + U > A && (O = A - U), C = O; C >= 0; C--) {
            let ae = true;
            for (let W = 0; W < U; W++) if (Y(P, C + W) !== Y(T, W)) {
              ae = false;
              break;
            }
            if (ae) return C;
          }
          return -1;
        }
        function I(P, T, O, V) {
          O = Number(O) || 0;
          const D = P.length - O;
          V ? (V = Number(V)) > D && (V = D) : V = D;
          const C = T.length;
          let p;
          for (V > C / 2 && (V = C / 2), p = 0; p < V; ++p) {
            const A = parseInt(T.substr(2 * p, 2), 16);
            if (_e(A)) return p;
            P[O + p] = A;
          }
          return p;
        }
        function q(P, T, O, V) {
          return xe(pe(T, P.length - O), P, O, V);
        }
        function N(P, T, O, V) {
          return xe(function(D) {
            const C = [];
            for (let p = 0; p < D.length; ++p) C.push(255 & D.charCodeAt(p));
            return C;
          }(T), P, O, V);
        }
        function H(P, T, O, V) {
          return xe(Oe(T), P, O, V);
        }
        function _(P, T, O, V) {
          return xe(function(D, C) {
            let p, A, U;
            const Y = [];
            for (let ae = 0; ae < D.length && !((C -= 2) < 0); ++ae) p = D.charCodeAt(ae), A = p >> 8, U = p % 256, Y.push(U), Y.push(A);
            return Y;
          }(T, P.length - O), P, O, V);
        }
        function x(P, T, O) {
          return T === 0 && O === P.length ? s.fromByteArray(P) : s.fromByteArray(P.slice(T, O));
        }
        function L(P, T, O) {
          O = Math.min(P.length, O);
          const V = [];
          let D = T;
          for (; D < O; ) {
            const C = P[D];
            let p = null, A = C > 239 ? 4 : C > 223 ? 3 : C > 191 ? 2 : 1;
            if (D + A <= O) {
              let U, Y, ae, W;
              switch (A) {
                case 1:
                  C < 128 && (p = C);
                  break;
                case 2:
                  U = P[D + 1], (192 & U) == 128 && (W = (31 & C) << 6 | 63 & U, W > 127 && (p = W));
                  break;
                case 3:
                  U = P[D + 1], Y = P[D + 2], (192 & U) == 128 && (192 & Y) == 128 && (W = (15 & C) << 12 | (63 & U) << 6 | 63 & Y, W > 2047 && (W < 55296 || W > 57343) && (p = W));
                  break;
                case 4:
                  U = P[D + 1], Y = P[D + 2], ae = P[D + 3], (192 & U) == 128 && (192 & Y) == 128 && (192 & ae) == 128 && (W = (15 & C) << 18 | (63 & U) << 12 | (63 & Y) << 6 | 63 & ae, W > 65535 && W < 1114112 && (p = W));
              }
            }
            p === null ? (p = 65533, A = 1) : p > 65535 && (p -= 65536, V.push(p >>> 10 & 1023 | 55296), p = 56320 | 1023 & p), V.push(p), D += A;
          }
          return function(C) {
            const p = C.length;
            if (p <= j) return String.fromCharCode.apply(String, C);
            let A = "", U = 0;
            for (; U < p; ) A += String.fromCharCode.apply(String, C.slice(U, U += j));
            return A;
          }(V);
        }
        m.TYPED_ARRAY_SUPPORT = function() {
          try {
            const P = new Uint8Array(1), T = { foo: function() {
              return 42;
            } };
            return Object.setPrototypeOf(T, Uint8Array.prototype), Object.setPrototypeOf(P, T), P.foo() === 42;
          } catch {
            return false;
          }
        }(), m.TYPED_ARRAY_SUPPORT || typeof console > "u" || typeof console.error != "function" || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."), Object.defineProperty(m.prototype, "parent", { enumerable: true, get: function() {
          if (m.isBuffer(this)) return this.buffer;
        } }), Object.defineProperty(m.prototype, "offset", { enumerable: true, get: function() {
          if (m.isBuffer(this)) return this.byteOffset;
        } }), m.poolSize = 8192, m.from = function(P, T, O) {
          return g(P, T, O);
        }, Object.setPrototypeOf(m.prototype, Uint8Array.prototype), Object.setPrototypeOf(m, Uint8Array), m.alloc = function(P, T, O) {
          return function(V, D, C) {
            return a(V), V <= 0 ? r(V) : D !== void 0 ? typeof C == "string" ? r(V).fill(D, C) : r(V).fill(D) : r(V);
          }(P, T, O);
        }, m.allocUnsafe = function(P) {
          return l(P);
        }, m.allocUnsafeSlow = function(P) {
          return l(P);
        }, m.isBuffer = function(P) {
          return P != null && P._isBuffer === true && P !== m.prototype;
        }, m.compare = function(P, T) {
          if (Ve(P, Uint8Array) && (P = m.from(P, P.offset, P.byteLength)), Ve(T, Uint8Array) && (T = m.from(T, T.offset, T.byteLength)), !m.isBuffer(P) || !m.isBuffer(T)) throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
          if (P === T) return 0;
          let O = P.length, V = T.length;
          for (let D = 0, C = Math.min(O, V); D < C; ++D) if (P[D] !== T[D]) {
            O = P[D], V = T[D];
            break;
          }
          return O < V ? -1 : V < O ? 1 : 0;
        }, m.isEncoding = function(P) {
          switch (String(P).toLowerCase()) {
            case "hex":
            case "utf8":
            case "utf-8":
            case "ascii":
            case "latin1":
            case "binary":
            case "base64":
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return true;
            default:
              return false;
          }
        }, m.concat = function(P, T) {
          if (!Array.isArray(P)) throw new TypeError('"list" argument must be an Array of Buffers');
          if (P.length === 0) return m.alloc(0);
          let O;
          if (T === void 0) for (T = 0, O = 0; O < P.length; ++O) T += P[O].length;
          const V = m.allocUnsafe(T);
          let D = 0;
          for (O = 0; O < P.length; ++O) {
            let C = P[O];
            if (Ve(C, Uint8Array)) D + C.length > V.length ? (m.isBuffer(C) || (C = m.from(C)), C.copy(V, D)) : Uint8Array.prototype.set.call(V, C, D);
            else {
              if (!m.isBuffer(C)) throw new TypeError('"list" argument must be an Array of Buffers');
              C.copy(V, D);
            }
            D += C.length;
          }
          return V;
        }, m.byteLength = E, m.prototype._isBuffer = true, m.prototype.swap16 = function() {
          const P = this.length;
          if (P % 2 != 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
          for (let T = 0; T < P; T += 2) k(this, T, T + 1);
          return this;
        }, m.prototype.swap32 = function() {
          const P = this.length;
          if (P % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
          for (let T = 0; T < P; T += 4) k(this, T, T + 3), k(this, T + 1, T + 2);
          return this;
        }, m.prototype.swap64 = function() {
          const P = this.length;
          if (P % 8 != 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
          for (let T = 0; T < P; T += 8) k(this, T, T + 7), k(this, T + 1, T + 6), k(this, T + 2, T + 5), k(this, T + 3, T + 4);
          return this;
        }, m.prototype.toString = function() {
          const P = this.length;
          return P === 0 ? "" : arguments.length === 0 ? L(this, 0, P) : R.apply(this, arguments);
        }, m.prototype.toLocaleString = m.prototype.toString, m.prototype.equals = function(P) {
          if (!m.isBuffer(P)) throw new TypeError("Argument must be a Buffer");
          return this === P || m.compare(this, P) === 0;
        }, m.prototype.inspect = function() {
          let P = "";
          const T = t.IS;
          return P = this.toString("hex", 0, T).replace(/(.{2})/g, "$1 ").trim(), this.length > T && (P += " ... "), "<Buffer " + P + ">";
        }, h && (m.prototype[h] = m.prototype.inspect), m.prototype.compare = function(P, T, O, V, D) {
          if (Ve(P, Uint8Array) && (P = m.from(P, P.offset, P.byteLength)), !m.isBuffer(P)) throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof P);
          if (T === void 0 && (T = 0), O === void 0 && (O = P ? P.length : 0), V === void 0 && (V = 0), D === void 0 && (D = this.length), T < 0 || O > P.length || V < 0 || D > this.length) throw new RangeError("out of range index");
          if (V >= D && T >= O) return 0;
          if (V >= D) return -1;
          if (T >= O) return 1;
          if (this === P) return 0;
          let C = (D >>>= 0) - (V >>>= 0), p = (O >>>= 0) - (T >>>= 0);
          const A = Math.min(C, p), U = this.slice(V, D), Y = P.slice(T, O);
          for (let ae = 0; ae < A; ++ae) if (U[ae] !== Y[ae]) {
            C = U[ae], p = Y[ae];
            break;
          }
          return C < p ? -1 : p < C ? 1 : 0;
        }, m.prototype.includes = function(P, T, O) {
          return this.indexOf(P, T, O) !== -1;
        }, m.prototype.indexOf = function(P, T, O) {
          return w(this, P, T, O, true);
        }, m.prototype.lastIndexOf = function(P, T, O) {
          return w(this, P, T, O, false);
        }, m.prototype.write = function(P, T, O, V) {
          if (T === void 0) V = "utf8", O = this.length, T = 0;
          else if (O === void 0 && typeof T == "string") V = T, O = this.length, T = 0;
          else {
            if (!isFinite(T)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
            T >>>= 0, isFinite(O) ? (O >>>= 0, V === void 0 && (V = "utf8")) : (V = O, O = void 0);
          }
          const D = this.length - T;
          if ((O === void 0 || O > D) && (O = D), P.length > 0 && (O < 0 || T < 0) || T > this.length) throw new RangeError("Attempt to write outside buffer bounds");
          V || (V = "utf8");
          let C = false;
          for (; ; ) switch (V) {
            case "hex":
              return I(this, P, T, O);
            case "utf8":
            case "utf-8":
              return q(this, P, T, O);
            case "ascii":
            case "latin1":
            case "binary":
              return N(this, P, T, O);
            case "base64":
              return H(this, P, T, O);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return _(this, P, T, O);
            default:
              if (C) throw new TypeError("Unknown encoding: " + V);
              V = ("" + V).toLowerCase(), C = true;
          }
        }, m.prototype.toJSON = function() {
          return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
        };
        const j = 4096;
        function z(P, T, O) {
          let V = "";
          O = Math.min(P.length, O);
          for (let D = T; D < O; ++D) V += String.fromCharCode(127 & P[D]);
          return V;
        }
        function Z(P, T, O) {
          let V = "";
          O = Math.min(P.length, O);
          for (let D = T; D < O; ++D) V += String.fromCharCode(P[D]);
          return V;
        }
        function ue(P, T, O) {
          const V = P.length;
          (!T || T < 0) && (T = 0), (!O || O < 0 || O > V) && (O = V);
          let D = "";
          for (let C = T; C < O; ++C) D += Be[P[C]];
          return D;
        }
        function $(P, T, O) {
          const V = P.slice(T, O);
          let D = "";
          for (let C = 0; C < V.length - 1; C += 2) D += String.fromCharCode(V[C] + 256 * V[C + 1]);
          return D;
        }
        function X(P, T, O) {
          if (P % 1 != 0 || P < 0) throw new RangeError("offset is not uint");
          if (P + T > O) throw new RangeError("Trying to access beyond buffer length");
        }
        function J(P, T, O, V, D, C) {
          if (!m.isBuffer(P)) throw new TypeError('"buffer" argument must be a Buffer instance');
          if (T > D || T < C) throw new RangeError('"value" argument is out of bounds');
          if (O + V > P.length) throw new RangeError("Index out of range");
        }
        function B(P, T, O, V, D) {
          se(T, V, D, P, O, 7);
          let C = Number(T & BigInt(4294967295));
          P[O++] = C, C >>= 8, P[O++] = C, C >>= 8, P[O++] = C, C >>= 8, P[O++] = C;
          let p = Number(T >> BigInt(32) & BigInt(4294967295));
          return P[O++] = p, p >>= 8, P[O++] = p, p >>= 8, P[O++] = p, p >>= 8, P[O++] = p, O;
        }
        function Q(P, T, O, V, D) {
          se(T, V, D, P, O, 7);
          let C = Number(T & BigInt(4294967295));
          P[O + 7] = C, C >>= 8, P[O + 6] = C, C >>= 8, P[O + 5] = C, C >>= 8, P[O + 4] = C;
          let p = Number(T >> BigInt(32) & BigInt(4294967295));
          return P[O + 3] = p, p >>= 8, P[O + 2] = p, p >>= 8, P[O + 1] = p, p >>= 8, P[O] = p, O + 8;
        }
        function ne(P, T, O, V, D, C) {
          if (O + V > P.length) throw new RangeError("Index out of range");
          if (O < 0) throw new RangeError("Index out of range");
        }
        function K(P, T, O, V, D) {
          return T = +T, O >>>= 0, D || ne(P, 0, O, 4), c.write(P, T, O, V, 23, 4), O + 4;
        }
        function ie(P, T, O, V, D) {
          return T = +T, O >>>= 0, D || ne(P, 0, O, 8), c.write(P, T, O, V, 52, 8), O + 8;
        }
        m.prototype.slice = function(P, T) {
          const O = this.length;
          (P = ~~P) < 0 ? (P += O) < 0 && (P = 0) : P > O && (P = O), (T = T === void 0 ? O : ~~T) < 0 ? (T += O) < 0 && (T = 0) : T > O && (T = O), T < P && (T = P);
          const V = this.subarray(P, T);
          return Object.setPrototypeOf(V, m.prototype), V;
        }, m.prototype.readUintLE = m.prototype.readUIntLE = function(P, T, O) {
          P >>>= 0, T >>>= 0, O || X(P, T, this.length);
          let V = this[P], D = 1, C = 0;
          for (; ++C < T && (D *= 256); ) V += this[P + C] * D;
          return V;
        }, m.prototype.readUintBE = m.prototype.readUIntBE = function(P, T, O) {
          P >>>= 0, T >>>= 0, O || X(P, T, this.length);
          let V = this[P + --T], D = 1;
          for (; T > 0 && (D *= 256); ) V += this[P + --T] * D;
          return V;
        }, m.prototype.readUint8 = m.prototype.readUInt8 = function(P, T) {
          return P >>>= 0, T || X(P, 1, this.length), this[P];
        }, m.prototype.readUint16LE = m.prototype.readUInt16LE = function(P, T) {
          return P >>>= 0, T || X(P, 2, this.length), this[P] | this[P + 1] << 8;
        }, m.prototype.readUint16BE = m.prototype.readUInt16BE = function(P, T) {
          return P >>>= 0, T || X(P, 2, this.length), this[P] << 8 | this[P + 1];
        }, m.prototype.readUint32LE = m.prototype.readUInt32LE = function(P, T) {
          return P >>>= 0, T || X(P, 4, this.length), (this[P] | this[P + 1] << 8 | this[P + 2] << 16) + 16777216 * this[P + 3];
        }, m.prototype.readUint32BE = m.prototype.readUInt32BE = function(P, T) {
          return P >>>= 0, T || X(P, 4, this.length), 16777216 * this[P] + (this[P + 1] << 16 | this[P + 2] << 8 | this[P + 3]);
        }, m.prototype.readBigUInt64LE = Qe(function(P) {
          re(P >>>= 0, "offset");
          const T = this[P], O = this[P + 7];
          T !== void 0 && O !== void 0 || ge(P, this.length - 8);
          const V = T + 256 * this[++P] + 65536 * this[++P] + this[++P] * 2 ** 24, D = this[++P] + 256 * this[++P] + 65536 * this[++P] + O * 2 ** 24;
          return BigInt(V) + (BigInt(D) << BigInt(32));
        }), m.prototype.readBigUInt64BE = Qe(function(P) {
          re(P >>>= 0, "offset");
          const T = this[P], O = this[P + 7];
          T !== void 0 && O !== void 0 || ge(P, this.length - 8);
          const V = T * 2 ** 24 + 65536 * this[++P] + 256 * this[++P] + this[++P], D = this[++P] * 2 ** 24 + 65536 * this[++P] + 256 * this[++P] + O;
          return (BigInt(V) << BigInt(32)) + BigInt(D);
        }), m.prototype.readIntLE = function(P, T, O) {
          P >>>= 0, T >>>= 0, O || X(P, T, this.length);
          let V = this[P], D = 1, C = 0;
          for (; ++C < T && (D *= 256); ) V += this[P + C] * D;
          return D *= 128, V >= D && (V -= Math.pow(2, 8 * T)), V;
        }, m.prototype.readIntBE = function(P, T, O) {
          P >>>= 0, T >>>= 0, O || X(P, T, this.length);
          let V = T, D = 1, C = this[P + --V];
          for (; V > 0 && (D *= 256); ) C += this[P + --V] * D;
          return D *= 128, C >= D && (C -= Math.pow(2, 8 * T)), C;
        }, m.prototype.readInt8 = function(P, T) {
          return P >>>= 0, T || X(P, 1, this.length), 128 & this[P] ? -1 * (255 - this[P] + 1) : this[P];
        }, m.prototype.readInt16LE = function(P, T) {
          P >>>= 0, T || X(P, 2, this.length);
          const O = this[P] | this[P + 1] << 8;
          return 32768 & O ? 4294901760 | O : O;
        }, m.prototype.readInt16BE = function(P, T) {
          P >>>= 0, T || X(P, 2, this.length);
          const O = this[P + 1] | this[P] << 8;
          return 32768 & O ? 4294901760 | O : O;
        }, m.prototype.readInt32LE = function(P, T) {
          return P >>>= 0, T || X(P, 4, this.length), this[P] | this[P + 1] << 8 | this[P + 2] << 16 | this[P + 3] << 24;
        }, m.prototype.readInt32BE = function(P, T) {
          return P >>>= 0, T || X(P, 4, this.length), this[P] << 24 | this[P + 1] << 16 | this[P + 2] << 8 | this[P + 3];
        }, m.prototype.readBigInt64LE = Qe(function(P) {
          re(P >>>= 0, "offset");
          const T = this[P], O = this[P + 7];
          T !== void 0 && O !== void 0 || ge(P, this.length - 8);
          const V = this[P + 4] + 256 * this[P + 5] + 65536 * this[P + 6] + (O << 24);
          return (BigInt(V) << BigInt(32)) + BigInt(T + 256 * this[++P] + 65536 * this[++P] + this[++P] * 16777216);
        }), m.prototype.readBigInt64BE = Qe(function(P) {
          re(P >>>= 0, "offset");
          const T = this[P], O = this[P + 7];
          T !== void 0 && O !== void 0 || ge(P, this.length - 8);
          const V = (T << 24) + 65536 * this[++P] + 256 * this[++P] + this[++P];
          return (BigInt(V) << BigInt(32)) + BigInt(this[++P] * 16777216 + 65536 * this[++P] + 256 * this[++P] + O);
        }), m.prototype.readFloatLE = function(P, T) {
          return P >>>= 0, T || X(P, 4, this.length), c.read(this, P, true, 23, 4);
        }, m.prototype.readFloatBE = function(P, T) {
          return P >>>= 0, T || X(P, 4, this.length), c.read(this, P, false, 23, 4);
        }, m.prototype.readDoubleLE = function(P, T) {
          return P >>>= 0, T || X(P, 8, this.length), c.read(this, P, true, 52, 8);
        }, m.prototype.readDoubleBE = function(P, T) {
          return P >>>= 0, T || X(P, 8, this.length), c.read(this, P, false, 52, 8);
        }, m.prototype.writeUintLE = m.prototype.writeUIntLE = function(P, T, O, V) {
          P = +P, T >>>= 0, O >>>= 0, !V && J(this, P, T, O, Math.pow(2, 8 * O) - 1, 0);
          let D = 1, C = 0;
          for (this[T] = 255 & P; ++C < O && (D *= 256); ) this[T + C] = P / D & 255;
          return T + O;
        }, m.prototype.writeUintBE = m.prototype.writeUIntBE = function(P, T, O, V) {
          P = +P, T >>>= 0, O >>>= 0, !V && J(this, P, T, O, Math.pow(2, 8 * O) - 1, 0);
          let D = O - 1, C = 1;
          for (this[T + D] = 255 & P; --D >= 0 && (C *= 256); ) this[T + D] = P / C & 255;
          return T + O;
        }, m.prototype.writeUint8 = m.prototype.writeUInt8 = function(P, T, O) {
          return P = +P, T >>>= 0, O || J(this, P, T, 1, 255, 0), this[T] = 255 & P, T + 1;
        }, m.prototype.writeUint16LE = m.prototype.writeUInt16LE = function(P, T, O) {
          return P = +P, T >>>= 0, O || J(this, P, T, 2, 65535, 0), this[T] = 255 & P, this[T + 1] = P >>> 8, T + 2;
        }, m.prototype.writeUint16BE = m.prototype.writeUInt16BE = function(P, T, O) {
          return P = +P, T >>>= 0, O || J(this, P, T, 2, 65535, 0), this[T] = P >>> 8, this[T + 1] = 255 & P, T + 2;
        }, m.prototype.writeUint32LE = m.prototype.writeUInt32LE = function(P, T, O) {
          return P = +P, T >>>= 0, O || J(this, P, T, 4, 4294967295, 0), this[T + 3] = P >>> 24, this[T + 2] = P >>> 16, this[T + 1] = P >>> 8, this[T] = 255 & P, T + 4;
        }, m.prototype.writeUint32BE = m.prototype.writeUInt32BE = function(P, T, O) {
          return P = +P, T >>>= 0, O || J(this, P, T, 4, 4294967295, 0), this[T] = P >>> 24, this[T + 1] = P >>> 16, this[T + 2] = P >>> 8, this[T + 3] = 255 & P, T + 4;
        }, m.prototype.writeBigUInt64LE = Qe(function(P, T = 0) {
          return B(this, P, T, BigInt(0), BigInt("0xffffffffffffffff"));
        }), m.prototype.writeBigUInt64BE = Qe(function(P, T = 0) {
          return Q(this, P, T, BigInt(0), BigInt("0xffffffffffffffff"));
        }), m.prototype.writeIntLE = function(P, T, O, V) {
          if (P = +P, T >>>= 0, !V) {
            const A = Math.pow(2, 8 * O - 1);
            J(this, P, T, O, A - 1, -A);
          }
          let D = 0, C = 1, p = 0;
          for (this[T] = 255 & P; ++D < O && (C *= 256); ) P < 0 && p === 0 && this[T + D - 1] !== 0 && (p = 1), this[T + D] = (P / C | 0) - p & 255;
          return T + O;
        }, m.prototype.writeIntBE = function(P, T, O, V) {
          if (P = +P, T >>>= 0, !V) {
            const A = Math.pow(2, 8 * O - 1);
            J(this, P, T, O, A - 1, -A);
          }
          let D = O - 1, C = 1, p = 0;
          for (this[T + D] = 255 & P; --D >= 0 && (C *= 256); ) P < 0 && p === 0 && this[T + D + 1] !== 0 && (p = 1), this[T + D] = (P / C | 0) - p & 255;
          return T + O;
        }, m.prototype.writeInt8 = function(P, T, O) {
          return P = +P, T >>>= 0, O || J(this, P, T, 1, 127, -128), P < 0 && (P = 255 + P + 1), this[T] = 255 & P, T + 1;
        }, m.prototype.writeInt16LE = function(P, T, O) {
          return P = +P, T >>>= 0, O || J(this, P, T, 2, 32767, -32768), this[T] = 255 & P, this[T + 1] = P >>> 8, T + 2;
        }, m.prototype.writeInt16BE = function(P, T, O) {
          return P = +P, T >>>= 0, O || J(this, P, T, 2, 32767, -32768), this[T] = P >>> 8, this[T + 1] = 255 & P, T + 2;
        }, m.prototype.writeInt32LE = function(P, T, O) {
          return P = +P, T >>>= 0, O || J(this, P, T, 4, 2147483647, -2147483648), this[T] = 255 & P, this[T + 1] = P >>> 8, this[T + 2] = P >>> 16, this[T + 3] = P >>> 24, T + 4;
        }, m.prototype.writeInt32BE = function(P, T, O) {
          return P = +P, T >>>= 0, O || J(this, P, T, 4, 2147483647, -2147483648), P < 0 && (P = 4294967295 + P + 1), this[T] = P >>> 24, this[T + 1] = P >>> 16, this[T + 2] = P >>> 8, this[T + 3] = 255 & P, T + 4;
        }, m.prototype.writeBigInt64LE = Qe(function(P, T = 0) {
          return B(this, P, T, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
        }), m.prototype.writeBigInt64BE = Qe(function(P, T = 0) {
          return Q(this, P, T, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
        }), m.prototype.writeFloatLE = function(P, T, O) {
          return K(this, P, T, true, O);
        }, m.prototype.writeFloatBE = function(P, T, O) {
          return K(this, P, T, false, O);
        }, m.prototype.writeDoubleLE = function(P, T, O) {
          return ie(this, P, T, true, O);
        }, m.prototype.writeDoubleBE = function(P, T, O) {
          return ie(this, P, T, false, O);
        }, m.prototype.copy = function(P, T, O, V) {
          if (!m.isBuffer(P)) throw new TypeError("argument should be a Buffer");
          if (O || (O = 0), V || V === 0 || (V = this.length), T >= P.length && (T = P.length), T || (T = 0), V > 0 && V < O && (V = O), V === O || P.length === 0 || this.length === 0) return 0;
          if (T < 0) throw new RangeError("targetStart out of bounds");
          if (O < 0 || O >= this.length) throw new RangeError("Index out of range");
          if (V < 0) throw new RangeError("sourceEnd out of bounds");
          V > this.length && (V = this.length), P.length - T < V - O && (V = P.length - T + O);
          const D = V - O;
          return this === P && typeof Uint8Array.prototype.copyWithin == "function" ? this.copyWithin(T, O, V) : Uint8Array.prototype.set.call(P, this.subarray(O, V), T), D;
        }, m.prototype.fill = function(P, T, O, V) {
          if (typeof P == "string") {
            if (typeof T == "string" ? (V = T, T = 0, O = this.length) : typeof O == "string" && (V = O, O = this.length), V !== void 0 && typeof V != "string") throw new TypeError("encoding must be a string");
            if (typeof V == "string" && !m.isEncoding(V)) throw new TypeError("Unknown encoding: " + V);
            if (P.length === 1) {
              const C = P.charCodeAt(0);
              (V === "utf8" && C < 128 || V === "latin1") && (P = C);
            }
          } else typeof P == "number" ? P &= 255 : typeof P == "boolean" && (P = Number(P));
          if (T < 0 || this.length < T || this.length < O) throw new RangeError("Out of range index");
          if (O <= T) return this;
          let D;
          if (T >>>= 0, O = O === void 0 ? this.length : O >>> 0, P || (P = 0), typeof P == "number") for (D = T; D < O; ++D) this[D] = P;
          else {
            const C = m.isBuffer(P) ? P : m.from(P, V), p = C.length;
            if (p === 0) throw new TypeError('The value "' + P + '" is invalid for argument "value"');
            for (D = 0; D < O - T; ++D) this[D + T] = C[D % p];
          }
          return this;
        };
        const ce = {};
        function ye(P, T, O) {
          ce[P] = class extends O {
            constructor() {
              super(), Object.defineProperty(this, "message", { value: T.apply(this, arguments), writable: true, configurable: true }), this.name = `${this.name} [${P}]`, this.stack, delete this.name;
            }
            get code() {
              return P;
            }
            set code(V) {
              Object.defineProperty(this, "code", { configurable: true, enumerable: true, value: V, writable: true });
            }
            toString() {
              return `${this.name} [${P}]: ${this.message}`;
            }
          };
        }
        function oe(P) {
          let T = "", O = P.length;
          const V = P[0] === "-" ? 1 : 0;
          for (; O >= V + 4; O -= 3) T = `_${P.slice(O - 3, O)}${T}`;
          return `${P.slice(0, O)}${T}`;
        }
        function se(P, T, O, V, D, C) {
          if (P > O || P < T) {
            const p = typeof T == "bigint" ? "n" : "";
            let A;
            throw A = T === 0 || T === BigInt(0) ? `>= 0${p} and < 2${p} ** ${8 * (C + 1)}${p}` : `>= -(2${p} ** ${8 * (C + 1) - 1}${p}) and < 2 ** ${8 * (C + 1) - 1}${p}`, new ce.ERR_OUT_OF_RANGE("value", A, P);
          }
          (function(p, A, U) {
            re(A, "offset"), p[A] !== void 0 && p[A + U] !== void 0 || ge(A, p.length - (U + 1));
          })(V, D, C);
        }
        function re(P, T) {
          if (typeof P != "number") throw new ce.ERR_INVALID_ARG_TYPE(T, "number", P);
        }
        function ge(P, T, O) {
          throw Math.floor(P) !== P ? (re(P, O), new ce.ERR_OUT_OF_RANGE("offset", "an integer", P)) : T < 0 ? new ce.ERR_BUFFER_OUT_OF_BOUNDS() : new ce.ERR_OUT_OF_RANGE("offset", `>= 0 and <= ${T}`, P);
        }
        ye("ERR_BUFFER_OUT_OF_BOUNDS", function(P) {
          return P ? `${P} is outside of buffer bounds` : "Attempt to access memory outside buffer bounds";
        }, RangeError), ye("ERR_INVALID_ARG_TYPE", function(P, T) {
          return `The "${P}" argument must be of type number. Received type ${typeof T}`;
        }, TypeError), ye("ERR_OUT_OF_RANGE", function(P, T, O) {
          let V = `The value of "${P}" is out of range.`, D = O;
          return Number.isInteger(O) && Math.abs(O) > 4294967296 ? D = oe(String(O)) : typeof O == "bigint" && (D = String(O), (O > BigInt(2) ** BigInt(32) || O < -(BigInt(2) ** BigInt(32))) && (D = oe(D)), D += "n"), V += ` It must be ${T}. Received ${D}`, V;
        }, RangeError);
        const Te = /[^+/0-9A-Za-z-_]/g;
        function pe(P, T) {
          let O;
          T = T || 1 / 0;
          const V = P.length;
          let D = null;
          const C = [];
          for (let p = 0; p < V; ++p) {
            if (O = P.charCodeAt(p), O > 55295 && O < 57344) {
              if (!D) {
                if (O > 56319) {
                  (T -= 3) > -1 && C.push(239, 191, 189);
                  continue;
                }
                if (p + 1 === V) {
                  (T -= 3) > -1 && C.push(239, 191, 189);
                  continue;
                }
                D = O;
                continue;
              }
              if (O < 56320) {
                (T -= 3) > -1 && C.push(239, 191, 189), D = O;
                continue;
              }
              O = 65536 + (D - 55296 << 10 | O - 56320);
            } else D && (T -= 3) > -1 && C.push(239, 191, 189);
            if (D = null, O < 128) {
              if ((T -= 1) < 0) break;
              C.push(O);
            } else if (O < 2048) {
              if ((T -= 2) < 0) break;
              C.push(O >> 6 | 192, 63 & O | 128);
            } else if (O < 65536) {
              if ((T -= 3) < 0) break;
              C.push(O >> 12 | 224, O >> 6 & 63 | 128, 63 & O | 128);
            } else {
              if (!(O < 1114112)) throw new Error("Invalid code point");
              if ((T -= 4) < 0) break;
              C.push(O >> 18 | 240, O >> 12 & 63 | 128, O >> 6 & 63 | 128, 63 & O | 128);
            }
          }
          return C;
        }
        function Oe(P) {
          return s.toByteArray(function(T) {
            if ((T = (T = T.split("=")[0]).trim().replace(Te, "")).length < 2) return "";
            for (; T.length % 4 != 0; ) T += "=";
            return T;
          }(P));
        }
        function xe(P, T, O, V) {
          let D;
          for (D = 0; D < V && !(D + O >= T.length || D >= P.length); ++D) T[D + O] = P[D];
          return D;
        }
        function Ve(P, T) {
          return P instanceof T || P != null && P.constructor != null && P.constructor.name != null && P.constructor.name === T.name;
        }
        function _e(P) {
          return P != P;
        }
        const Be = function() {
          const P = "0123456789abcdef", T = new Array(256);
          for (let O = 0; O < 16; ++O) {
            const V = 16 * O;
            for (let D = 0; D < 16; ++D) T[V + D] = P[O] + P[D];
          }
          return T;
        }();
        function Qe(P) {
          return typeof BigInt > "u" ? ee : P;
        }
        function ee() {
          throw new Error("BigInt not supported");
        }
      }, 251: (y, t) => {
        t.read = function(o, s, c, h, f) {
          var r, m, g = 8 * f - h - 1, a = (1 << g) - 1, l = a >> 1, d = -7, b = c ? f - 1 : 0, S = c ? -1 : 1, E = o[s + b];
          for (b += S, r = E & (1 << -d) - 1, E >>= -d, d += g; d > 0; r = 256 * r + o[s + b], b += S, d -= 8) ;
          for (m = r & (1 << -d) - 1, r >>= -d, d += h; d > 0; m = 256 * m + o[s + b], b += S, d -= 8) ;
          if (r === 0) r = 1 - l;
          else {
            if (r === a) return m ? NaN : 1 / 0 * (E ? -1 : 1);
            m += Math.pow(2, h), r -= l;
          }
          return (E ? -1 : 1) * m * Math.pow(2, r - h);
        }, t.write = function(o, s, c, h, f, r) {
          var m, g, a, l = 8 * r - f - 1, d = (1 << l) - 1, b = d >> 1, S = f === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, E = h ? 0 : r - 1, R = h ? 1 : -1, k = s < 0 || s === 0 && 1 / s < 0 ? 1 : 0;
          for (s = Math.abs(s), isNaN(s) || s === 1 / 0 ? (g = isNaN(s) ? 1 : 0, m = d) : (m = Math.floor(Math.log(s) / Math.LN2), s * (a = Math.pow(2, -m)) < 1 && (m--, a *= 2), (s += m + b >= 1 ? S / a : S * Math.pow(2, 1 - b)) * a >= 2 && (m++, a /= 2), m + b >= d ? (g = 0, m = d) : m + b >= 1 ? (g = (s * a - 1) * Math.pow(2, f), m += b) : (g = s * Math.pow(2, b - 1) * Math.pow(2, f), m = 0)); f >= 8; o[c + E] = 255 & g, E += R, g /= 256, f -= 8) ;
          for (m = m << f | g, l += f; l > 0; o[c + E] = 255 & m, E += R, m /= 256, l -= 8) ;
          o[c + E - R] |= 128 * k;
        };
      } }, i = {};
      function u(y) {
        var t = i[y];
        if (t !== void 0) return t.exports;
        var o = i[y] = { exports: {} };
        return n[y](o, o.exports, u), o.exports;
      }
      return u.d = (y, t) => {
        for (var o in t) u.o(t, o) && !u.o(y, o) && Object.defineProperty(y, o, { enumerable: true, get: t[o] });
      }, u.g = function() {
        if (typeof globalThis == "object") return globalThis;
        try {
          return this || new Function("return this")();
        } catch {
          if (typeof window == "object") return window;
        }
      }(), u.o = (y, t) => Object.prototype.hasOwnProperty.call(y, t), u.r = (y) => {
        typeof Symbol < "u" && Symbol.toStringTag && Object.defineProperty(y, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(y, "__esModule", { value: true });
      }, u(281);
    })());
  }(ac)), ac.exports;
}
var Lf;
function Ey() {
  return Lf || (Lf = 1, function(v) {
    function e(t) {
      "@babel/helpers - typeof";
      return e = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(o) {
        return typeof o;
      } : function(o) {
        return o && typeof Symbol == "function" && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
      }, e(t);
    }
    Object.defineProperty(v, "__esModule", { value: true }), v.default = void 0;
    var n = u(Ei());
    function i(t) {
      if (typeof WeakMap != "function") return null;
      var o = /* @__PURE__ */ new WeakMap(), s = /* @__PURE__ */ new WeakMap();
      return (i = function(h) {
        return h ? s : o;
      })(t);
    }
    function u(t, o) {
      if (t && t.__esModule) return t;
      if (t === null || e(t) != "object" && typeof t != "function") return { default: t };
      var s = i(o);
      if (s && s.has(t)) return s.get(t);
      var c = { __proto__: null }, h = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var f in t) if (f !== "default" && {}.hasOwnProperty.call(t, f)) {
        var r = h ? Object.getOwnPropertyDescriptor(t, f) : null;
        r && (r.get || r.set) ? Object.defineProperty(c, f, r) : c[f] = t[f];
      }
      return c.default = t, s && s.set(t, c), c;
    }
    var y = n.config(function(t) {
      var o = 32, s = 1024;
      t.typedef("Value", t.varOpaque()), t.struct("ScpBallot", [["counter", t.lookup("Uint32")], ["value", t.lookup("Value")]]), t.enum("ScpStatementType", { scpStPrepare: 0, scpStConfirm: 1, scpStExternalize: 2, scpStNominate: 3 }), t.struct("ScpNomination", [["quorumSetHash", t.lookup("Hash")], ["votes", t.varArray(t.lookup("Value"), 2147483647)], ["accepted", t.varArray(t.lookup("Value"), 2147483647)]]), t.struct("ScpStatementPrepare", [["quorumSetHash", t.lookup("Hash")], ["ballot", t.lookup("ScpBallot")], ["prepared", t.option(t.lookup("ScpBallot"))], ["preparedPrime", t.option(t.lookup("ScpBallot"))], ["nC", t.lookup("Uint32")], ["nH", t.lookup("Uint32")]]), t.struct("ScpStatementConfirm", [["ballot", t.lookup("ScpBallot")], ["nPrepared", t.lookup("Uint32")], ["nCommit", t.lookup("Uint32")], ["nH", t.lookup("Uint32")], ["quorumSetHash", t.lookup("Hash")]]), t.struct("ScpStatementExternalize", [["commit", t.lookup("ScpBallot")], ["nH", t.lookup("Uint32")], ["commitQuorumSetHash", t.lookup("Hash")]]), t.union("ScpStatementPledges", { switchOn: t.lookup("ScpStatementType"), switchName: "type", switches: [["scpStPrepare", "prepare"], ["scpStConfirm", "confirm"], ["scpStExternalize", "externalize"], ["scpStNominate", "nominate"]], arms: { prepare: t.lookup("ScpStatementPrepare"), confirm: t.lookup("ScpStatementConfirm"), externalize: t.lookup("ScpStatementExternalize"), nominate: t.lookup("ScpNomination") } }), t.struct("ScpStatement", [["nodeId", t.lookup("NodeId")], ["slotIndex", t.lookup("Uint64")], ["pledges", t.lookup("ScpStatementPledges")]]), t.struct("ScpEnvelope", [["statement", t.lookup("ScpStatement")], ["signature", t.lookup("Signature")]]), t.struct("ScpQuorumSet", [["threshold", t.lookup("Uint32")], ["validators", t.varArray(t.lookup("NodeId"), 2147483647)], ["innerSets", t.varArray(t.lookup("ScpQuorumSet"), 2147483647)]]), t.typedef("Thresholds", t.opaque(4)), t.typedef("String32", t.string(32)), t.typedef("String64", t.string(64)), t.typedef("SequenceNumber", t.lookup("Int64")), t.typedef("DataValue", t.varOpaque(64)), t.typedef("PoolId", t.lookup("Hash")), t.typedef("AssetCode4", t.opaque(4)), t.typedef("AssetCode12", t.opaque(12)), t.enum("AssetType", { assetTypeNative: 0, assetTypeCreditAlphanum4: 1, assetTypeCreditAlphanum12: 2, assetTypePoolShare: 3 }), t.union("AssetCode", { switchOn: t.lookup("AssetType"), switchName: "type", switches: [["assetTypeCreditAlphanum4", "assetCode4"], ["assetTypeCreditAlphanum12", "assetCode12"]], arms: { assetCode4: t.lookup("AssetCode4"), assetCode12: t.lookup("AssetCode12") } }), t.struct("AlphaNum4", [["assetCode", t.lookup("AssetCode4")], ["issuer", t.lookup("AccountId")]]), t.struct("AlphaNum12", [["assetCode", t.lookup("AssetCode12")], ["issuer", t.lookup("AccountId")]]), t.union("Asset", { switchOn: t.lookup("AssetType"), switchName: "type", switches: [["assetTypeNative", t.void()], ["assetTypeCreditAlphanum4", "alphaNum4"], ["assetTypeCreditAlphanum12", "alphaNum12"]], arms: { alphaNum4: t.lookup("AlphaNum4"), alphaNum12: t.lookup("AlphaNum12") } }), t.struct("Price", [["n", t.lookup("Int32")], ["d", t.lookup("Int32")]]), t.struct("Liabilities", [["buying", t.lookup("Int64")], ["selling", t.lookup("Int64")]]), t.enum("ThresholdIndices", { thresholdMasterWeight: 0, thresholdLow: 1, thresholdMed: 2, thresholdHigh: 3 }), t.enum("LedgerEntryType", { account: 0, trustline: 1, offer: 2, data: 3, claimableBalance: 4, liquidityPool: 5, contractData: 6, contractCode: 7, configSetting: 8, ttl: 9 }), t.struct("Signer", [["key", t.lookup("SignerKey")], ["weight", t.lookup("Uint32")]]), t.enum("AccountFlags", { authRequiredFlag: 1, authRevocableFlag: 2, authImmutableFlag: 4, authClawbackEnabledFlag: 8 }), t.const("MASK_ACCOUNT_FLAGS", 7), t.const("MASK_ACCOUNT_FLAGS_V17", 15), t.const("MAX_SIGNERS", 20), t.typedef("SponsorshipDescriptor", t.option(t.lookup("AccountId"))), t.struct("AccountEntryExtensionV3", [["ext", t.lookup("ExtensionPoint")], ["seqLedger", t.lookup("Uint32")], ["seqTime", t.lookup("TimePoint")]]), t.union("AccountEntryExtensionV2Ext", { switchOn: t.int(), switchName: "v", switches: [[0, t.void()], [3, "v3"]], arms: { v3: t.lookup("AccountEntryExtensionV3") } }), t.struct("AccountEntryExtensionV2", [["numSponsored", t.lookup("Uint32")], ["numSponsoring", t.lookup("Uint32")], ["signerSponsoringIDs", t.varArray(t.lookup("SponsorshipDescriptor"), t.lookup("MAX_SIGNERS"))], ["ext", t.lookup("AccountEntryExtensionV2Ext")]]), t.union("AccountEntryExtensionV1Ext", { switchOn: t.int(), switchName: "v", switches: [[0, t.void()], [2, "v2"]], arms: { v2: t.lookup("AccountEntryExtensionV2") } }), t.struct("AccountEntryExtensionV1", [["liabilities", t.lookup("Liabilities")], ["ext", t.lookup("AccountEntryExtensionV1Ext")]]), t.union("AccountEntryExt", { switchOn: t.int(), switchName: "v", switches: [[0, t.void()], [1, "v1"]], arms: { v1: t.lookup("AccountEntryExtensionV1") } }), t.struct("AccountEntry", [["accountId", t.lookup("AccountId")], ["balance", t.lookup("Int64")], ["seqNum", t.lookup("SequenceNumber")], ["numSubEntries", t.lookup("Uint32")], ["inflationDest", t.option(t.lookup("AccountId"))], ["flags", t.lookup("Uint32")], ["homeDomain", t.lookup("String32")], ["thresholds", t.lookup("Thresholds")], ["signers", t.varArray(t.lookup("Signer"), t.lookup("MAX_SIGNERS"))], ["ext", t.lookup("AccountEntryExt")]]), t.enum("TrustLineFlags", { authorizedFlag: 1, authorizedToMaintainLiabilitiesFlag: 2, trustlineClawbackEnabledFlag: 4 }), t.const("MASK_TRUSTLINE_FLAGS", 1), t.const("MASK_TRUSTLINE_FLAGS_V13", 3), t.const("MASK_TRUSTLINE_FLAGS_V17", 7), t.enum("LiquidityPoolType", { liquidityPoolConstantProduct: 0 }), t.union("TrustLineAsset", { switchOn: t.lookup("AssetType"), switchName: "type", switches: [["assetTypeNative", t.void()], ["assetTypeCreditAlphanum4", "alphaNum4"], ["assetTypeCreditAlphanum12", "alphaNum12"], ["assetTypePoolShare", "liquidityPoolId"]], arms: { alphaNum4: t.lookup("AlphaNum4"), alphaNum12: t.lookup("AlphaNum12"), liquidityPoolId: t.lookup("PoolId") } }), t.union("TrustLineEntryExtensionV2Ext", { switchOn: t.int(), switchName: "v", switches: [[0, t.void()]], arms: {} }), t.struct("TrustLineEntryExtensionV2", [["liquidityPoolUseCount", t.lookup("Int32")], ["ext", t.lookup("TrustLineEntryExtensionV2Ext")]]), t.union("TrustLineEntryV1Ext", { switchOn: t.int(), switchName: "v", switches: [[0, t.void()], [2, "v2"]], arms: { v2: t.lookup("TrustLineEntryExtensionV2") } }), t.struct("TrustLineEntryV1", [["liabilities", t.lookup("Liabilities")], ["ext", t.lookup("TrustLineEntryV1Ext")]]), t.union("TrustLineEntryExt", { switchOn: t.int(), switchName: "v", switches: [[0, t.void()], [1, "v1"]], arms: { v1: t.lookup("TrustLineEntryV1") } }), t.struct("TrustLineEntry", [["accountId", t.lookup("AccountId")], ["asset", t.lookup("TrustLineAsset")], ["balance", t.lookup("Int64")], ["limit", t.lookup("Int64")], ["flags", t.lookup("Uint32")], ["ext", t.lookup("TrustLineEntryExt")]]), t.enum("OfferEntryFlags", { passiveFlag: 1 }), t.const("MASK_OFFERENTRY_FLAGS", 1), t.union("OfferEntryExt", { switchOn: t.int(), switchName: "v", switches: [[0, t.void()]], arms: {} }), t.struct("OfferEntry", [["sellerId", t.lookup("AccountId")], ["offerId", t.lookup("Int64")], ["selling", t.lookup("Asset")], ["buying", t.lookup("Asset")], ["amount", t.lookup("Int64")], ["price", t.lookup("Price")], ["flags", t.lookup("Uint32")], ["ext", t.lookup("OfferEntryExt")]]), t.union("DataEntryExt", { switchOn: t.int(), switchName: "v", switches: [[0, t.void()]], arms: {} }), t.struct("DataEntry", [["accountId", t.lookup("AccountId")], ["dataName", t.lookup("String64")], ["dataValue", t.lookup("DataValue")], ["ext", t.lookup("DataEntryExt")]]), t.enum("ClaimPredicateType", { claimPredicateUnconditional: 0, claimPredicateAnd: 1, claimPredicateOr: 2, claimPredicateNot: 3, claimPredicateBeforeAbsoluteTime: 4, claimPredicateBeforeRelativeTime: 5 }), t.union("ClaimPredicate", { switchOn: t.lookup("ClaimPredicateType"), switchName: "type", switches: [["claimPredicateUnconditional", t.void()], ["claimPredicateAnd", "andPredicates"], ["claimPredicateOr", "orPredicates"], ["claimPredicateNot", "notPredicate"], ["claimPredicateBeforeAbsoluteTime", "absBefore"], ["claimPredicateBeforeRelativeTime", "relBefore"]], arms: { andPredicates: t.varArray(t.lookup("ClaimPredicate"), 2), orPredicates: t.varArray(t.lookup("ClaimPredicate"), 2), notPredicate: t.option(t.lookup("ClaimPredicate")), absBefore: t.lookup("Int64"), relBefore: t.lookup("Int64") } }), t.enum("ClaimantType", { claimantTypeV0: 0 }), t.struct("ClaimantV0", [["destination", t.lookup("AccountId")], ["predicate", t.lookup("ClaimPredicate")]]), t.union("Claimant", { switchOn: t.lookup("ClaimantType"), switchName: "type", switches: [["claimantTypeV0", "v0"]], arms: { v0: t.lookup("ClaimantV0") } }), t.enum("ClaimableBalanceIdType", { claimableBalanceIdTypeV0: 0 }), t.union("ClaimableBalanceId", { switchOn: t.lookup("ClaimableBalanceIdType"), switchName: "type", switches: [["claimableBalanceIdTypeV0", "v0"]], arms: { v0: t.lookup("Hash") } }), t.enum("ClaimableBalanceFlags", { claimableBalanceClawbackEnabledFlag: 1 }), t.const("MASK_CLAIMABLE_BALANCE_FLAGS", 1), t.union("ClaimableBalanceEntryExtensionV1Ext", { switchOn: t.int(), switchName: "v", switches: [[0, t.void()]], arms: {} }), t.struct("ClaimableBalanceEntryExtensionV1", [["ext", t.lookup("ClaimableBalanceEntryExtensionV1Ext")], ["flags", t.lookup("Uint32")]]), t.union("ClaimableBalanceEntryExt", { switchOn: t.int(), switchName: "v", switches: [[0, t.void()], [1, "v1"]], arms: { v1: t.lookup("ClaimableBalanceEntryExtensionV1") } }), t.struct("ClaimableBalanceEntry", [["balanceId", t.lookup("ClaimableBalanceId")], ["claimants", t.varArray(t.lookup("Claimant"), 10)], ["asset", t.lookup("Asset")], ["amount", t.lookup("Int64")], ["ext", t.lookup("ClaimableBalanceEntryExt")]]), t.struct("LiquidityPoolConstantProductParameters", [["assetA", t.lookup("Asset")], ["assetB", t.lookup("Asset")], ["fee", t.lookup("Int32")]]), t.struct("LiquidityPoolEntryConstantProduct", [["params", t.lookup("LiquidityPoolConstantProductParameters")], ["reserveA", t.lookup("Int64")], ["reserveB", t.lookup("Int64")], ["totalPoolShares", t.lookup("Int64")], ["poolSharesTrustLineCount", t.lookup("Int64")]]), t.union("LiquidityPoolEntryBody", { switchOn: t.lookup("LiquidityPoolType"), switchName: "type", switches: [["liquidityPoolConstantProduct", "constantProduct"]], arms: { constantProduct: t.lookup("LiquidityPoolEntryConstantProduct") } }), t.struct("LiquidityPoolEntry", [["liquidityPoolId", t.lookup("PoolId")], ["body", t.lookup("LiquidityPoolEntryBody")]]), t.enum("ContractDataDurability", { temporary: 0, persistent: 1 }), t.struct("ContractDataEntry", [["ext", t.lookup("ExtensionPoint")], ["contract", t.lookup("ScAddress")], ["key", t.lookup("ScVal")], ["durability", t.lookup("ContractDataDurability")], ["val", t.lookup("ScVal")]]), t.struct("ContractCodeCostInputs", [["ext", t.lookup("ExtensionPoint")], ["nInstructions", t.lookup("Uint32")], ["nFunctions", t.lookup("Uint32")], ["nGlobals", t.lookup("Uint32")], ["nTableEntries", t.lookup("Uint32")], ["nTypes", t.lookup("Uint32")], ["nDataSegments", t.lookup("Uint32")], ["nElemSegments", t.lookup("Uint32")], ["nImports", t.lookup("Uint32")], ["nExports", t.lookup("Uint32")], ["nDataSegmentBytes", t.lookup("Uint32")]]), t.struct("ContractCodeEntryV1", [["ext", t.lookup("ExtensionPoint")], ["costInputs", t.lookup("ContractCodeCostInputs")]]), t.union("ContractCodeEntryExt", { switchOn: t.int(), switchName: "v", switches: [[0, t.void()], [1, "v1"]], arms: { v1: t.lookup("ContractCodeEntryV1") } }), t.struct("ContractCodeEntry", [["ext", t.lookup("ContractCodeEntryExt")], ["hash", t.lookup("Hash")], ["code", t.varOpaque()]]), t.struct("TtlEntry", [["keyHash", t.lookup("Hash")], ["liveUntilLedgerSeq", t.lookup("Uint32")]]), t.union("LedgerEntryExtensionV1Ext", { switchOn: t.int(), switchName: "v", switches: [[0, t.void()]], arms: {} }), t.struct("LedgerEntryExtensionV1", [["sponsoringId", t.lookup("SponsorshipDescriptor")], ["ext", t.lookup("LedgerEntryExtensionV1Ext")]]), t.union("LedgerEntryData", { switchOn: t.lookup("LedgerEntryType"), switchName: "type", switches: [["account", "account"], ["trustline", "trustLine"], ["offer", "offer"], ["data", "data"], ["claimableBalance", "claimableBalance"], ["liquidityPool", "liquidityPool"], ["contractData", "contractData"], ["contractCode", "contractCode"], ["configSetting", "configSetting"], ["ttl", "ttl"]], arms: { account: t.lookup("AccountEntry"), trustLine: t.lookup("TrustLineEntry"), offer: t.lookup("OfferEntry"), data: t.lookup("DataEntry"), claimableBalance: t.lookup("ClaimableBalanceEntry"), liquidityPool: t.lookup("LiquidityPoolEntry"), contractData: t.lookup("ContractDataEntry"), contractCode: t.lookup("ContractCodeEntry"), configSetting: t.lookup("ConfigSettingEntry"), ttl: t.lookup("TtlEntry") } }), t.union("LedgerEntryExt", { switchOn: t.int(), switchName: "v", switches: [[0, t.void()], [1, "v1"]], arms: { v1: t.lookup("LedgerEntryExtensionV1") } }), t.struct("LedgerEntry", [["lastModifiedLedgerSeq", t.lookup("Uint32")], ["data", t.lookup("LedgerEntryData")], ["ext", t.lookup("LedgerEntryExt")]]), t.struct("LedgerKeyAccount", [["accountId", t.lookup("AccountId")]]), t.struct("LedgerKeyTrustLine", [["accountId", t.lookup("AccountId")], ["asset", t.lookup("TrustLineAsset")]]), t.struct("LedgerKeyOffer", [["sellerId", t.lookup("AccountId")], ["offerId", t.lookup("Int64")]]), t.struct("LedgerKeyData", [["accountId", t.lookup("AccountId")], ["dataName", t.lookup("String64")]]), t.struct("LedgerKeyClaimableBalance", [["balanceId", t.lookup("ClaimableBalanceId")]]), t.struct("LedgerKeyLiquidityPool", [["liquidityPoolId", t.lookup("PoolId")]]), t.struct("LedgerKeyContractData", [["contract", t.lookup("ScAddress")], ["key", t.lookup("ScVal")], ["durability", t.lookup("ContractDataDurability")]]), t.struct("LedgerKeyContractCode", [["hash", t.lookup("Hash")]]), t.struct("LedgerKeyConfigSetting", [["configSettingId", t.lookup("ConfigSettingId")]]), t.struct("LedgerKeyTtl", [["keyHash", t.lookup("Hash")]]), t.union("LedgerKey", { switchOn: t.lookup("LedgerEntryType"), switchName: "type", switches: [["account", "account"], ["trustline", "trustLine"], ["offer", "offer"], ["data", "data"], ["claimableBalance", "claimableBalance"], ["liquidityPool", "liquidityPool"], ["contractData", "contractData"], ["contractCode", "contractCode"], ["configSetting", "configSetting"], ["ttl", "ttl"]], arms: { account: t.lookup("LedgerKeyAccount"), trustLine: t.lookup("LedgerKeyTrustLine"), offer: t.lookup("LedgerKeyOffer"), data: t.lookup("LedgerKeyData"), claimableBalance: t.lookup("LedgerKeyClaimableBalance"), liquidityPool: t.lookup("LedgerKeyLiquidityPool"), contractData: t.lookup("LedgerKeyContractData"), contractCode: t.lookup("LedgerKeyContractCode"), configSetting: t.lookup("LedgerKeyConfigSetting"), ttl: t.lookup("LedgerKeyTtl") } }), t.enum("EnvelopeType", { envelopeTypeTxV0: 0, envelopeTypeScp: 1, envelopeTypeTx: 2, envelopeTypeAuth: 3, envelopeTypeScpvalue: 4, envelopeTypeTxFeeBump: 5, envelopeTypeOpId: 6, envelopeTypePoolRevokeOpId: 7, envelopeTypeContractId: 8, envelopeTypeSorobanAuthorization: 9 }), t.enum("BucketListType", { live: 0, hotArchive: 1, coldArchive: 2 }), t.enum("BucketEntryType", { metaentry: -1, liveentry: 0, deadentry: 1, initentry: 2 }), t.enum("HotArchiveBucketEntryType", { hotArchiveMetaentry: -1, hotArchiveArchived: 0, hotArchiveLive: 1, hotArchiveDeleted: 2 }), t.enum("ColdArchiveBucketEntryType", { coldArchiveMetaentry: -1, coldArchiveArchivedLeaf: 0, coldArchiveDeletedLeaf: 1, coldArchiveBoundaryLeaf: 2, coldArchiveHash: 3 }), t.union("BucketMetadataExt", { switchOn: t.int(), switchName: "v", switches: [[0, t.void()], [1, "bucketListType"]], arms: { bucketListType: t.lookup("BucketListType") } }), t.struct("BucketMetadata", [["ledgerVersion", t.lookup("Uint32")], ["ext", t.lookup("BucketMetadataExt")]]), t.union("BucketEntry", { switchOn: t.lookup("BucketEntryType"), switchName: "type", switches: [["liveentry", "liveEntry"], ["initentry", "liveEntry"], ["deadentry", "deadEntry"], ["metaentry", "metaEntry"]], arms: { liveEntry: t.lookup("LedgerEntry"), deadEntry: t.lookup("LedgerKey"), metaEntry: t.lookup("BucketMetadata") } }), t.union("HotArchiveBucketEntry", { switchOn: t.lookup("HotArchiveBucketEntryType"), switchName: "type", switches: [["hotArchiveArchived", "archivedEntry"], ["hotArchiveLive", "key"], ["hotArchiveDeleted", "key"], ["hotArchiveMetaentry", "metaEntry"]], arms: { archivedEntry: t.lookup("LedgerEntry"), key: t.lookup("LedgerKey"), metaEntry: t.lookup("BucketMetadata") } }), t.struct("ColdArchiveArchivedLeaf", [["index", t.lookup("Uint32")], ["archivedEntry", t.lookup("LedgerEntry")]]), t.struct("ColdArchiveDeletedLeaf", [["index", t.lookup("Uint32")], ["deletedKey", t.lookup("LedgerKey")]]), t.struct("ColdArchiveBoundaryLeaf", [["index", t.lookup("Uint32")], ["isLowerBound", t.bool()]]), t.struct("ColdArchiveHashEntry", [["index", t.lookup("Uint32")], ["level", t.lookup("Uint32")], ["hash", t.lookup("Hash")]]), t.union("ColdArchiveBucketEntry", { switchOn: t.lookup("ColdArchiveBucketEntryType"), switchName: "type", switches: [["coldArchiveMetaentry", "metaEntry"], ["coldArchiveArchivedLeaf", "archivedLeaf"], ["coldArchiveDeletedLeaf", "deletedLeaf"], ["coldArchiveBoundaryLeaf", "boundaryLeaf"], ["coldArchiveHash", "hashEntry"]], arms: { metaEntry: t.lookup("BucketMetadata"), archivedLeaf: t.lookup("ColdArchiveArchivedLeaf"), deletedLeaf: t.lookup("ColdArchiveDeletedLeaf"), boundaryLeaf: t.lookup("ColdArchiveBoundaryLeaf"), hashEntry: t.lookup("ColdArchiveHashEntry") } }), t.typedef("UpgradeType", t.varOpaque(128)), t.enum("StellarValueType", { stellarValueBasic: 0, stellarValueSigned: 1 }), t.struct("LedgerCloseValueSignature", [["nodeId", t.lookup("NodeId")], ["signature", t.lookup("Signature")]]), t.union("StellarValueExt", { switchOn: t.lookup("StellarValueType"), switchName: "v", switches: [["stellarValueBasic", t.void()], ["stellarValueSigned", "lcValueSignature"]], arms: { lcValueSignature: t.lookup("LedgerCloseValueSignature") } }), t.struct("StellarValue", [["txSetHash", t.lookup("Hash")], ["closeTime", t.lookup("TimePoint")], ["upgrades", t.varArray(t.lookup("UpgradeType"), 6)], ["ext", t.lookup("StellarValueExt")]]), t.const("MASK_LEDGER_HEADER_FLAGS", 7), t.enum("LedgerHeaderFlags", { disableLiquidityPoolTradingFlag: 1, disableLiquidityPoolDepositFlag: 2, disableLiquidityPoolWithdrawalFlag: 4 }), t.union("LedgerHeaderExtensionV1Ext", { switchOn: t.int(), switchName: "v", switches: [[0, t.void()]], arms: {} }), t.struct("LedgerHeaderExtensionV1", [["flags", t.lookup("Uint32")], ["ext", t.lookup("LedgerHeaderExtensionV1Ext")]]), t.union("LedgerHeaderExt", { switchOn: t.int(), switchName: "v", switches: [[0, t.void()], [1, "v1"]], arms: { v1: t.lookup("LedgerHeaderExtensionV1") } }), t.struct("LedgerHeader", [["ledgerVersion", t.lookup("Uint32")], ["previousLedgerHash", t.lookup("Hash")], ["scpValue", t.lookup("StellarValue")], ["txSetResultHash", t.lookup("Hash")], ["bucketListHash", t.lookup("Hash")], ["ledgerSeq", t.lookup("Uint32")], ["totalCoins", t.lookup("Int64")], ["feePool", t.lookup("Int64")], ["inflationSeq", t.lookup("Uint32")], ["idPool", t.lookup("Uint64")], ["baseFee", t.lookup("Uint32")], ["baseReserve", t.lookup("Uint32")], ["maxTxSetSize", t.lookup("Uint32")], ["skipList", t.array(t.lookup("Hash"), 4)], ["ext", t.lookup("LedgerHeaderExt")]]), t.enum("LedgerUpgradeType", { ledgerUpgradeVersion: 1, ledgerUpgradeBaseFee: 2, ledgerUpgradeMaxTxSetSize: 3, ledgerUpgradeBaseReserve: 4, ledgerUpgradeFlags: 5, ledgerUpgradeConfig: 6, ledgerUpgradeMaxSorobanTxSetSize: 7 }), t.struct("ConfigUpgradeSetKey", [["contractId", t.lookup("Hash")], ["contentHash", t.lookup("Hash")]]), t.union("LedgerUpgrade", { switchOn: t.lookup("LedgerUpgradeType"), switchName: "type", switches: [["ledgerUpgradeVersion", "newLedgerVersion"], ["ledgerUpgradeBaseFee", "newBaseFee"], ["ledgerUpgradeMaxTxSetSize", "newMaxTxSetSize"], ["ledgerUpgradeBaseReserve", "newBaseReserve"], ["ledgerUpgradeFlags", "newFlags"], ["ledgerUpgradeConfig", "newConfig"], ["ledgerUpgradeMaxSorobanTxSetSize", "newMaxSorobanTxSetSize"]], arms: { newLedgerVersion: t.lookup("Uint32"), newBaseFee: t.lookup("Uint32"), newMaxTxSetSize: t.lookup("Uint32"), newBaseReserve: t.lookup("Uint32"), newFlags: t.lookup("Uint32"), newConfig: t.lookup("ConfigUpgradeSetKey"), newMaxSorobanTxSetSize: t.lookup("Uint32") } }), t.struct("ConfigUpgradeSet", [["updatedEntry", t.varArray(t.lookup("ConfigSettingEntry"), 2147483647)]]), t.enum("TxSetComponentType", { txsetCompTxsMaybeDiscountedFee: 0 }), t.struct("TxSetComponentTxsMaybeDiscountedFee", [["baseFee", t.option(t.lookup("Int64"))], ["txes", t.varArray(t.lookup("TransactionEnvelope"), 2147483647)]]), t.union("TxSetComponent", { switchOn: t.lookup("TxSetComponentType"), switchName: "type", switches: [["txsetCompTxsMaybeDiscountedFee", "txsMaybeDiscountedFee"]], arms: { txsMaybeDiscountedFee: t.lookup("TxSetComponentTxsMaybeDiscountedFee") } }), t.union("TransactionPhase", { switchOn: t.int(), switchName: "v", switches: [[0, "v0Components"]], arms: { v0Components: t.varArray(t.lookup("TxSetComponent"), 2147483647) } }), t.struct("TransactionSet", [["previousLedgerHash", t.lookup("Hash")], ["txes", t.varArray(t.lookup("TransactionEnvelope"), 2147483647)]]), t.struct("TransactionSetV1", [["previousLedgerHash", t.lookup("Hash")], ["phases", t.varArray(t.lookup("TransactionPhase"), 2147483647)]]), t.union("GeneralizedTransactionSet", { switchOn: t.int(), switchName: "v", switches: [[1, "v1TxSet"]], arms: { v1TxSet: t.lookup("TransactionSetV1") } }), t.struct("TransactionResultPair", [["transactionHash", t.lookup("Hash")], ["result", t.lookup("TransactionResult")]]), t.struct("TransactionResultSet", [["results", t.varArray(t.lookup("TransactionResultPair"), 2147483647)]]), t.union("TransactionHistoryEntryExt", { switchOn: t.int(), switchName: "v", switches: [[0, t.void()], [1, "generalizedTxSet"]], arms: { generalizedTxSet: t.lookup("GeneralizedTransactionSet") } }), t.struct("TransactionHistoryEntry", [["ledgerSeq", t.lookup("Uint32")], ["txSet", t.lookup("TransactionSet")], ["ext", t.lookup("TransactionHistoryEntryExt")]]), t.union("TransactionHistoryResultEntryExt", { switchOn: t.int(), switchName: "v", switches: [[0, t.void()]], arms: {} }), t.struct("TransactionHistoryResultEntry", [["ledgerSeq", t.lookup("Uint32")], ["txResultSet", t.lookup("TransactionResultSet")], ["ext", t.lookup("TransactionHistoryResultEntryExt")]]), t.union("LedgerHeaderHistoryEntryExt", { switchOn: t.int(), switchName: "v", switches: [[0, t.void()]], arms: {} }), t.struct("LedgerHeaderHistoryEntry", [["hash", t.lookup("Hash")], ["header", t.lookup("LedgerHeader")], ["ext", t.lookup("LedgerHeaderHistoryEntryExt")]]), t.struct("LedgerScpMessages", [["ledgerSeq", t.lookup("Uint32")], ["messages", t.varArray(t.lookup("ScpEnvelope"), 2147483647)]]), t.struct("ScpHistoryEntryV0", [["quorumSets", t.varArray(t.lookup("ScpQuorumSet"), 2147483647)], ["ledgerMessages", t.lookup("LedgerScpMessages")]]), t.union("ScpHistoryEntry", { switchOn: t.int(), switchName: "v", switches: [[0, "v0"]], arms: { v0: t.lookup("ScpHistoryEntryV0") } }), t.enum("LedgerEntryChangeType", { ledgerEntryCreated: 0, ledgerEntryUpdated: 1, ledgerEntryRemoved: 2, ledgerEntryState: 3 }), t.union("LedgerEntryChange", { switchOn: t.lookup("LedgerEntryChangeType"), switchName: "type", switches: [["ledgerEntryCreated", "created"], ["ledgerEntryUpdated", "updated"], ["ledgerEntryRemoved", "removed"], ["ledgerEntryState", "state"]], arms: { created: t.lookup("LedgerEntry"), updated: t.lookup("LedgerEntry"), removed: t.lookup("LedgerKey"), state: t.lookup("LedgerEntry") } }), t.typedef("LedgerEntryChanges", t.varArray(t.lookup("LedgerEntryChange"), 2147483647)), t.struct("OperationMeta", [["changes", t.lookup("LedgerEntryChanges")]]), t.struct("TransactionMetaV1", [["txChanges", t.lookup("LedgerEntryChanges")], ["operations", t.varArray(t.lookup("OperationMeta"), 2147483647)]]), t.struct("TransactionMetaV2", [["txChangesBefore", t.lookup("LedgerEntryChanges")], ["operations", t.varArray(t.lookup("OperationMeta"), 2147483647)], ["txChangesAfter", t.lookup("LedgerEntryChanges")]]), t.enum("ContractEventType", { system: 0, contract: 1, diagnostic: 2 }), t.struct("ContractEventV0", [["topics", t.varArray(t.lookup("ScVal"), 2147483647)], ["data", t.lookup("ScVal")]]), t.union("ContractEventBody", { switchOn: t.int(), switchName: "v", switches: [[0, "v0"]], arms: { v0: t.lookup("ContractEventV0") } }), t.struct("ContractEvent", [["ext", t.lookup("ExtensionPoint")], ["contractId", t.option(t.lookup("Hash"))], ["type", t.lookup("ContractEventType")], ["body", t.lookup("ContractEventBody")]]), t.struct("DiagnosticEvent", [["inSuccessfulContractCall", t.bool()], ["event", t.lookup("ContractEvent")]]), t.typedef("DiagnosticEvents", t.varArray(t.lookup("DiagnosticEvent"), 2147483647)), t.struct("SorobanTransactionMetaExtV1", [["ext", t.lookup("ExtensionPoint")], ["totalNonRefundableResourceFeeCharged", t.lookup("Int64")], ["totalRefundableResourceFeeCharged", t.lookup("Int64")], ["rentFeeCharged", t.lookup("Int64")]]), t.union("SorobanTransactionMetaExt", { switchOn: t.int(), switchName: "v", switches: [[0, t.void()], [1, "v1"]], arms: { v1: t.lookup("SorobanTransactionMetaExtV1") } }), t.struct("SorobanTransactionMeta", [["ext", t.lookup("SorobanTransactionMetaExt")], ["events", t.varArray(t.lookup("ContractEvent"), 2147483647)], ["returnValue", t.lookup("ScVal")], ["diagnosticEvents", t.varArray(t.lookup("DiagnosticEvent"), 2147483647)]]), t.struct("TransactionMetaV3", [["ext", t.lookup("ExtensionPoint")], ["txChangesBefore", t.lookup("LedgerEntryChanges")], ["operations", t.varArray(t.lookup("OperationMeta"), 2147483647)], ["txChangesAfter", t.lookup("LedgerEntryChanges")], ["sorobanMeta", t.option(t.lookup("SorobanTransactionMeta"))]]), t.struct("InvokeHostFunctionSuccessPreImage", [["returnValue", t.lookup("ScVal")], ["events", t.varArray(t.lookup("ContractEvent"), 2147483647)]]), t.union("TransactionMeta", { switchOn: t.int(), switchName: "v", switches: [[0, "operations"], [1, "v1"], [2, "v2"], [3, "v3"]], arms: { operations: t.varArray(t.lookup("OperationMeta"), 2147483647), v1: t.lookup("TransactionMetaV1"), v2: t.lookup("TransactionMetaV2"), v3: t.lookup("TransactionMetaV3") } }), t.struct("TransactionResultMeta", [["result", t.lookup("TransactionResultPair")], ["feeProcessing", t.lookup("LedgerEntryChanges")], ["txApplyProcessing", t.lookup("TransactionMeta")]]), t.struct("UpgradeEntryMeta", [["upgrade", t.lookup("LedgerUpgrade")], ["changes", t.lookup("LedgerEntryChanges")]]), t.struct("LedgerCloseMetaV0", [["ledgerHeader", t.lookup("LedgerHeaderHistoryEntry")], ["txSet", t.lookup("TransactionSet")], ["txProcessing", t.varArray(t.lookup("TransactionResultMeta"), 2147483647)], ["upgradesProcessing", t.varArray(t.lookup("UpgradeEntryMeta"), 2147483647)], ["scpInfo", t.varArray(t.lookup("ScpHistoryEntry"), 2147483647)]]), t.struct("LedgerCloseMetaExtV1", [["ext", t.lookup("ExtensionPoint")], ["sorobanFeeWrite1Kb", t.lookup("Int64")]]), t.union("LedgerCloseMetaExt", { switchOn: t.int(), switchName: "v", switches: [[0, t.void()], [1, "v1"]], arms: { v1: t.lookup("LedgerCloseMetaExtV1") } }), t.struct("LedgerCloseMetaV1", [["ext", t.lookup("LedgerCloseMetaExt")], ["ledgerHeader", t.lookup("LedgerHeaderHistoryEntry")], ["txSet", t.lookup("GeneralizedTransactionSet")], ["txProcessing", t.varArray(t.lookup("TransactionResultMeta"), 2147483647)], ["upgradesProcessing", t.varArray(t.lookup("UpgradeEntryMeta"), 2147483647)], ["scpInfo", t.varArray(t.lookup("ScpHistoryEntry"), 2147483647)], ["totalByteSizeOfBucketList", t.lookup("Uint64")], ["evictedTemporaryLedgerKeys", t.varArray(t.lookup("LedgerKey"), 2147483647)], ["evictedPersistentLedgerEntries", t.varArray(t.lookup("LedgerEntry"), 2147483647)]]), t.union("LedgerCloseMeta", { switchOn: t.int(), switchName: "v", switches: [[0, "v0"], [1, "v1"]], arms: { v0: t.lookup("LedgerCloseMetaV0"), v1: t.lookup("LedgerCloseMetaV1") } }), t.enum("ErrorCode", { errMisc: 0, errData: 1, errConf: 2, errAuth: 3, errLoad: 4 }), t.struct("Error", [["code", t.lookup("ErrorCode")], ["msg", t.string(100)]]), t.struct("SendMore", [["numMessages", t.lookup("Uint32")]]), t.struct("SendMoreExtended", [["numMessages", t.lookup("Uint32")], ["numBytes", t.lookup("Uint32")]]), t.struct("AuthCert", [["pubkey", t.lookup("Curve25519Public")], ["expiration", t.lookup("Uint64")], ["sig", t.lookup("Signature")]]), t.struct("Hello", [["ledgerVersion", t.lookup("Uint32")], ["overlayVersion", t.lookup("Uint32")], ["overlayMinVersion", t.lookup("Uint32")], ["networkId", t.lookup("Hash")], ["versionStr", t.string(100)], ["listeningPort", t.int()], ["peerId", t.lookup("NodeId")], ["cert", t.lookup("AuthCert")], ["nonce", t.lookup("Uint256")]]), t.const("AUTH_MSG_FLAG_FLOW_CONTROL_BYTES_REQUESTED", 200), t.struct("Auth", [["flags", t.int()]]), t.enum("IpAddrType", { iPv4: 0, iPv6: 1 }), t.union("PeerAddressIp", { switchOn: t.lookup("IpAddrType"), switchName: "type", switches: [["iPv4", "ipv4"], ["iPv6", "ipv6"]], arms: { ipv4: t.opaque(4), ipv6: t.opaque(16) } }), t.struct("PeerAddress", [["ip", t.lookup("PeerAddressIp")], ["port", t.lookup("Uint32")], ["numFailures", t.lookup("Uint32")]]), t.enum("MessageType", { errorMsg: 0, auth: 2, dontHave: 3, getPeers: 4, peers: 5, getTxSet: 6, txSet: 7, generalizedTxSet: 17, transaction: 8, getScpQuorumset: 9, scpQuorumset: 10, scpMessage: 11, getScpState: 12, hello: 13, surveyRequest: 14, surveyResponse: 15, sendMore: 16, sendMoreExtended: 20, floodAdvert: 18, floodDemand: 19, timeSlicedSurveyRequest: 21, timeSlicedSurveyResponse: 22, timeSlicedSurveyStartCollecting: 23, timeSlicedSurveyStopCollecting: 24 }), t.struct("DontHave", [["type", t.lookup("MessageType")], ["reqHash", t.lookup("Uint256")]]), t.enum("SurveyMessageCommandType", { surveyTopology: 0, timeSlicedSurveyTopology: 1 }), t.enum("SurveyMessageResponseType", { surveyTopologyResponseV0: 0, surveyTopologyResponseV1: 1, surveyTopologyResponseV2: 2 }), t.struct("TimeSlicedSurveyStartCollectingMessage", [["surveyorId", t.lookup("NodeId")], ["nonce", t.lookup("Uint32")], ["ledgerNum", t.lookup("Uint32")]]), t.struct("SignedTimeSlicedSurveyStartCollectingMessage", [["signature", t.lookup("Signature")], ["startCollecting", t.lookup("TimeSlicedSurveyStartCollectingMessage")]]), t.struct("TimeSlicedSurveyStopCollectingMessage", [["surveyorId", t.lookup("NodeId")], ["nonce", t.lookup("Uint32")], ["ledgerNum", t.lookup("Uint32")]]), t.struct("SignedTimeSlicedSurveyStopCollectingMessage", [["signature", t.lookup("Signature")], ["stopCollecting", t.lookup("TimeSlicedSurveyStopCollectingMessage")]]), t.struct("SurveyRequestMessage", [["surveyorPeerId", t.lookup("NodeId")], ["surveyedPeerId", t.lookup("NodeId")], ["ledgerNum", t.lookup("Uint32")], ["encryptionKey", t.lookup("Curve25519Public")], ["commandType", t.lookup("SurveyMessageCommandType")]]), t.struct("TimeSlicedSurveyRequestMessage", [["request", t.lookup("SurveyRequestMessage")], ["nonce", t.lookup("Uint32")], ["inboundPeersIndex", t.lookup("Uint32")], ["outboundPeersIndex", t.lookup("Uint32")]]), t.struct("SignedSurveyRequestMessage", [["requestSignature", t.lookup("Signature")], ["request", t.lookup("SurveyRequestMessage")]]), t.struct("SignedTimeSlicedSurveyRequestMessage", [["requestSignature", t.lookup("Signature")], ["request", t.lookup("TimeSlicedSurveyRequestMessage")]]), t.typedef("EncryptedBody", t.varOpaque(64e3)), t.struct("SurveyResponseMessage", [["surveyorPeerId", t.lookup("NodeId")], ["surveyedPeerId", t.lookup("NodeId")], ["ledgerNum", t.lookup("Uint32")], ["commandType", t.lookup("SurveyMessageCommandType")], ["encryptedBody", t.lookup("EncryptedBody")]]), t.struct("TimeSlicedSurveyResponseMessage", [["response", t.lookup("SurveyResponseMessage")], ["nonce", t.lookup("Uint32")]]), t.struct("SignedSurveyResponseMessage", [["responseSignature", t.lookup("Signature")], ["response", t.lookup("SurveyResponseMessage")]]), t.struct("SignedTimeSlicedSurveyResponseMessage", [["responseSignature", t.lookup("Signature")], ["response", t.lookup("TimeSlicedSurveyResponseMessage")]]), t.struct("PeerStats", [["id", t.lookup("NodeId")], ["versionStr", t.string(100)], ["messagesRead", t.lookup("Uint64")], ["messagesWritten", t.lookup("Uint64")], ["bytesRead", t.lookup("Uint64")], ["bytesWritten", t.lookup("Uint64")], ["secondsConnected", t.lookup("Uint64")], ["uniqueFloodBytesRecv", t.lookup("Uint64")], ["duplicateFloodBytesRecv", t.lookup("Uint64")], ["uniqueFetchBytesRecv", t.lookup("Uint64")], ["duplicateFetchBytesRecv", t.lookup("Uint64")], ["uniqueFloodMessageRecv", t.lookup("Uint64")], ["duplicateFloodMessageRecv", t.lookup("Uint64")], ["uniqueFetchMessageRecv", t.lookup("Uint64")], ["duplicateFetchMessageRecv", t.lookup("Uint64")]]), t.typedef("PeerStatList", t.varArray(t.lookup("PeerStats"), 25)), t.struct("TimeSlicedNodeData", [["addedAuthenticatedPeers", t.lookup("Uint32")], ["droppedAuthenticatedPeers", t.lookup("Uint32")], ["totalInboundPeerCount", t.lookup("Uint32")], ["totalOutboundPeerCount", t.lookup("Uint32")], ["p75ScpFirstToSelfLatencyMs", t.lookup("Uint32")], ["p75ScpSelfToOtherLatencyMs", t.lookup("Uint32")], ["lostSyncCount", t.lookup("Uint32")], ["isValidator", t.bool()], ["maxInboundPeerCount", t.lookup("Uint32")], ["maxOutboundPeerCount", t.lookup("Uint32")]]), t.struct("TimeSlicedPeerData", [["peerStats", t.lookup("PeerStats")], ["averageLatencyMs", t.lookup("Uint32")]]), t.typedef("TimeSlicedPeerDataList", t.varArray(t.lookup("TimeSlicedPeerData"), 25)), t.struct("TopologyResponseBodyV0", [["inboundPeers", t.lookup("PeerStatList")], ["outboundPeers", t.lookup("PeerStatList")], ["totalInboundPeerCount", t.lookup("Uint32")], ["totalOutboundPeerCount", t.lookup("Uint32")]]), t.struct("TopologyResponseBodyV1", [["inboundPeers", t.lookup("PeerStatList")], ["outboundPeers", t.lookup("PeerStatList")], ["totalInboundPeerCount", t.lookup("Uint32")], ["totalOutboundPeerCount", t.lookup("Uint32")], ["maxInboundPeerCount", t.lookup("Uint32")], ["maxOutboundPeerCount", t.lookup("Uint32")]]), t.struct("TopologyResponseBodyV2", [["inboundPeers", t.lookup("TimeSlicedPeerDataList")], ["outboundPeers", t.lookup("TimeSlicedPeerDataList")], ["nodeData", t.lookup("TimeSlicedNodeData")]]), t.union("SurveyResponseBody", { switchOn: t.lookup("SurveyMessageResponseType"), switchName: "type", switches: [["surveyTopologyResponseV0", "topologyResponseBodyV0"], ["surveyTopologyResponseV1", "topologyResponseBodyV1"], ["surveyTopologyResponseV2", "topologyResponseBodyV2"]], arms: { topologyResponseBodyV0: t.lookup("TopologyResponseBodyV0"), topologyResponseBodyV1: t.lookup("TopologyResponseBodyV1"), topologyResponseBodyV2: t.lookup("TopologyResponseBodyV2") } }), t.const("TX_ADVERT_VECTOR_MAX_SIZE", 1e3), t.typedef("TxAdvertVector", t.varArray(t.lookup("Hash"), t.lookup("TX_ADVERT_VECTOR_MAX_SIZE"))), t.struct("FloodAdvert", [["txHashes", t.lookup("TxAdvertVector")]]), t.const("TX_DEMAND_VECTOR_MAX_SIZE", 1e3), t.typedef("TxDemandVector", t.varArray(t.lookup("Hash"), t.lookup("TX_DEMAND_VECTOR_MAX_SIZE"))), t.struct("FloodDemand", [["txHashes", t.lookup("TxDemandVector")]]), t.union("StellarMessage", { switchOn: t.lookup("MessageType"), switchName: "type", switches: [["errorMsg", "error"], ["hello", "hello"], ["auth", "auth"], ["dontHave", "dontHave"], ["getPeers", t.void()], ["peers", "peers"], ["getTxSet", "txSetHash"], ["txSet", "txSet"], ["generalizedTxSet", "generalizedTxSet"], ["transaction", "transaction"], ["surveyRequest", "signedSurveyRequestMessage"], ["surveyResponse", "signedSurveyResponseMessage"], ["timeSlicedSurveyRequest", "signedTimeSlicedSurveyRequestMessage"], ["timeSlicedSurveyResponse", "signedTimeSlicedSurveyResponseMessage"], ["timeSlicedSurveyStartCollecting", "signedTimeSlicedSurveyStartCollectingMessage"], ["timeSlicedSurveyStopCollecting", "signedTimeSlicedSurveyStopCollectingMessage"], ["getScpQuorumset", "qSetHash"], ["scpQuorumset", "qSet"], ["scpMessage", "envelope"], ["getScpState", "getScpLedgerSeq"], ["sendMore", "sendMoreMessage"], ["sendMoreExtended", "sendMoreExtendedMessage"], ["floodAdvert", "floodAdvert"], ["floodDemand", "floodDemand"]], arms: { error: t.lookup("Error"), hello: t.lookup("Hello"), auth: t.lookup("Auth"), dontHave: t.lookup("DontHave"), peers: t.varArray(t.lookup("PeerAddress"), 100), txSetHash: t.lookup("Uint256"), txSet: t.lookup("TransactionSet"), generalizedTxSet: t.lookup("GeneralizedTransactionSet"), transaction: t.lookup("TransactionEnvelope"), signedSurveyRequestMessage: t.lookup("SignedSurveyRequestMessage"), signedSurveyResponseMessage: t.lookup("SignedSurveyResponseMessage"), signedTimeSlicedSurveyRequestMessage: t.lookup("SignedTimeSlicedSurveyRequestMessage"), signedTimeSlicedSurveyResponseMessage: t.lookup("SignedTimeSlicedSurveyResponseMessage"), signedTimeSlicedSurveyStartCollectingMessage: t.lookup("SignedTimeSlicedSurveyStartCollectingMessage"), signedTimeSlicedSurveyStopCollectingMessage: t.lookup("SignedTimeSlicedSurveyStopCollectingMessage"), qSetHash: t.lookup("Uint256"), qSet: t.lookup("ScpQuorumSet"), envelope: t.lookup("ScpEnvelope"), getScpLedgerSeq: t.lookup("Uint32"), sendMoreMessage: t.lookup("SendMore"), sendMoreExtendedMessage: t.lookup("SendMoreExtended"), floodAdvert: t.lookup("FloodAdvert"), floodDemand: t.lookup("FloodDemand") } }), t.struct("AuthenticatedMessageV0", [["sequence", t.lookup("Uint64")], ["message", t.lookup("StellarMessage")], ["mac", t.lookup("HmacSha256Mac")]]), t.union("AuthenticatedMessage", { switchOn: t.lookup("Uint32"), switchName: "v", switches: [[0, "v0"]], arms: { v0: t.lookup("AuthenticatedMessageV0") } }), t.const("MAX_OPS_PER_TX", 100), t.union("LiquidityPoolParameters", { switchOn: t.lookup("LiquidityPoolType"), switchName: "type", switches: [["liquidityPoolConstantProduct", "constantProduct"]], arms: { constantProduct: t.lookup("LiquidityPoolConstantProductParameters") } }), t.struct("MuxedAccountMed25519", [["id", t.lookup("Uint64")], ["ed25519", t.lookup("Uint256")]]), t.union("MuxedAccount", { switchOn: t.lookup("CryptoKeyType"), switchName: "type", switches: [["keyTypeEd25519", "ed25519"], ["keyTypeMuxedEd25519", "med25519"]], arms: { ed25519: t.lookup("Uint256"), med25519: t.lookup("MuxedAccountMed25519") } }), t.struct("DecoratedSignature", [["hint", t.lookup("SignatureHint")], ["signature", t.lookup("Signature")]]), t.enum("OperationType", { createAccount: 0, payment: 1, pathPaymentStrictReceive: 2, manageSellOffer: 3, createPassiveSellOffer: 4, setOptions: 5, changeTrust: 6, allowTrust: 7, accountMerge: 8, inflation: 9, manageData: 10, bumpSequence: 11, manageBuyOffer: 12, pathPaymentStrictSend: 13, createClaimableBalance: 14, claimClaimableBalance: 15, beginSponsoringFutureReserves: 16, endSponsoringFutureReserves: 17, revokeSponsorship: 18, clawback: 19, clawbackClaimableBalance: 20, setTrustLineFlags: 21, liquidityPoolDeposit: 22, liquidityPoolWithdraw: 23, invokeHostFunction: 24, extendFootprintTtl: 25, restoreFootprint: 26 }), t.struct("CreateAccountOp", [["destination", t.lookup("AccountId")], ["startingBalance", t.lookup("Int64")]]), t.struct("PaymentOp", [["destination", t.lookup("MuxedAccount")], ["asset", t.lookup("Asset")], ["amount", t.lookup("Int64")]]), t.struct("PathPaymentStrictReceiveOp", [["sendAsset", t.lookup("Asset")], ["sendMax", t.lookup("Int64")], ["destination", t.lookup("MuxedAccount")], ["destAsset", t.lookup("Asset")], ["destAmount", t.lookup("Int64")], ["path", t.varArray(t.lookup("Asset"), 5)]]), t.struct("PathPaymentStrictSendOp", [["sendAsset", t.lookup("Asset")], ["sendAmount", t.lookup("Int64")], ["destination", t.lookup("MuxedAccount")], ["destAsset", t.lookup("Asset")], ["destMin", t.lookup("Int64")], ["path", t.varArray(t.lookup("Asset"), 5)]]), t.struct("ManageSellOfferOp", [["selling", t.lookup("Asset")], ["buying", t.lookup("Asset")], ["amount", t.lookup("Int64")], ["price", t.lookup("Price")], ["offerId", t.lookup("Int64")]]), t.struct("ManageBuyOfferOp", [["selling", t.lookup("Asset")], ["buying", t.lookup("Asset")], ["buyAmount", t.lookup("Int64")], ["price", t.lookup("Price")], ["offerId", t.lookup("Int64")]]), t.struct("CreatePassiveSellOfferOp", [["selling", t.lookup("Asset")], ["buying", t.lookup("Asset")], ["amount", t.lookup("Int64")], ["price", t.lookup("Price")]]), t.struct("SetOptionsOp", [["inflationDest", t.option(t.lookup("AccountId"))], ["clearFlags", t.option(t.lookup("Uint32"))], ["setFlags", t.option(t.lookup("Uint32"))], ["masterWeight", t.option(t.lookup("Uint32"))], ["lowThreshold", t.option(t.lookup("Uint32"))], ["medThreshold", t.option(t.lookup("Uint32"))], ["highThreshold", t.option(t.lookup("Uint32"))], ["homeDomain", t.option(t.lookup("String32"))], ["signer", t.option(t.lookup("Signer"))]]), t.union("ChangeTrustAsset", { switchOn: t.lookup("AssetType"), switchName: "type", switches: [["assetTypeNative", t.void()], ["assetTypeCreditAlphanum4", "alphaNum4"], ["assetTypeCreditAlphanum12", "alphaNum12"], ["assetTypePoolShare", "liquidityPool"]], arms: { alphaNum4: t.lookup("AlphaNum4"), alphaNum12: t.lookup("AlphaNum12"), liquidityPool: t.lookup("LiquidityPoolParameters") } }), t.struct("ChangeTrustOp", [["line", t.lookup("ChangeTrustAsset")], ["limit", t.lookup("Int64")]]), t.struct("AllowTrustOp", [["trustor", t.lookup("AccountId")], ["asset", t.lookup("AssetCode")], ["authorize", t.lookup("Uint32")]]), t.struct("ManageDataOp", [["dataName", t.lookup("String64")], ["dataValue", t.option(t.lookup("DataValue"))]]), t.struct("BumpSequenceOp", [["bumpTo", t.lookup("SequenceNumber")]]), t.struct("CreateClaimableBalanceOp", [["asset", t.lookup("Asset")], ["amount", t.lookup("Int64")], ["claimants", t.varArray(t.lookup("Claimant"), 10)]]), t.struct("ClaimClaimableBalanceOp", [["balanceId", t.lookup("ClaimableBalanceId")]]), t.struct("BeginSponsoringFutureReservesOp", [["sponsoredId", t.lookup("AccountId")]]), t.enum("RevokeSponsorshipType", { revokeSponsorshipLedgerEntry: 0, revokeSponsorshipSigner: 1 }), t.struct("RevokeSponsorshipOpSigner", [["accountId", t.lookup("AccountId")], ["signerKey", t.lookup("SignerKey")]]), t.union("RevokeSponsorshipOp", { switchOn: t.lookup("RevokeSponsorshipType"), switchName: "type", switches: [["revokeSponsorshipLedgerEntry", "ledgerKey"], ["revokeSponsorshipSigner", "signer"]], arms: { ledgerKey: t.lookup("LedgerKey"), signer: t.lookup("RevokeSponsorshipOpSigner") } }), t.struct("ClawbackOp", [["asset", t.lookup("Asset")], ["from", t.lookup("MuxedAccount")], ["amount", t.lookup("Int64")]]), t.struct("ClawbackClaimableBalanceOp", [["balanceId", t.lookup("ClaimableBalanceId")]]), t.struct("SetTrustLineFlagsOp", [["trustor", t.lookup("AccountId")], ["asset", t.lookup("Asset")], ["clearFlags", t.lookup("Uint32")], ["setFlags", t.lookup("Uint32")]]), t.const("LIQUIDITY_POOL_FEE_V18", 30), t.struct("LiquidityPoolDepositOp", [["liquidityPoolId", t.lookup("PoolId")], ["maxAmountA", t.lookup("Int64")], ["maxAmountB", t.lookup("Int64")], ["minPrice", t.lookup("Price")], ["maxPrice", t.lookup("Price")]]), t.struct("LiquidityPoolWithdrawOp", [["liquidityPoolId", t.lookup("PoolId")], ["amount", t.lookup("Int64")], ["minAmountA", t.lookup("Int64")], ["minAmountB", t.lookup("Int64")]]), t.enum("HostFunctionType", { hostFunctionTypeInvokeContract: 0, hostFunctionTypeCreateContract: 1, hostFunctionTypeUploadContractWasm: 2, hostFunctionTypeCreateContractV2: 3 }), t.enum("ContractIdPreimageType", { contractIdPreimageFromAddress: 0, contractIdPreimageFromAsset: 1 }), t.struct("ContractIdPreimageFromAddress", [["address", t.lookup("ScAddress")], ["salt", t.lookup("Uint256")]]), t.union("ContractIdPreimage", { switchOn: t.lookup("ContractIdPreimageType"), switchName: "type", switches: [["contractIdPreimageFromAddress", "fromAddress"], ["contractIdPreimageFromAsset", "fromAsset"]], arms: { fromAddress: t.lookup("ContractIdPreimageFromAddress"), fromAsset: t.lookup("Asset") } }), t.struct("CreateContractArgs", [["contractIdPreimage", t.lookup("ContractIdPreimage")], ["executable", t.lookup("ContractExecutable")]]), t.struct("CreateContractArgsV2", [["contractIdPreimage", t.lookup("ContractIdPreimage")], ["executable", t.lookup("ContractExecutable")], ["constructorArgs", t.varArray(t.lookup("ScVal"), 2147483647)]]), t.struct("InvokeContractArgs", [["contractAddress", t.lookup("ScAddress")], ["functionName", t.lookup("ScSymbol")], ["args", t.varArray(t.lookup("ScVal"), 2147483647)]]), t.union("HostFunction", { switchOn: t.lookup("HostFunctionType"), switchName: "type", switches: [["hostFunctionTypeInvokeContract", "invokeContract"], ["hostFunctionTypeCreateContract", "createContract"], ["hostFunctionTypeUploadContractWasm", "wasm"], ["hostFunctionTypeCreateContractV2", "createContractV2"]], arms: { invokeContract: t.lookup("InvokeContractArgs"), createContract: t.lookup("CreateContractArgs"), wasm: t.varOpaque(), createContractV2: t.lookup("CreateContractArgsV2") } }), t.enum("SorobanAuthorizedFunctionType", { sorobanAuthorizedFunctionTypeContractFn: 0, sorobanAuthorizedFunctionTypeCreateContractHostFn: 1, sorobanAuthorizedFunctionTypeCreateContractV2HostFn: 2 }), t.union("SorobanAuthorizedFunction", { switchOn: t.lookup("SorobanAuthorizedFunctionType"), switchName: "type", switches: [["sorobanAuthorizedFunctionTypeContractFn", "contractFn"], ["sorobanAuthorizedFunctionTypeCreateContractHostFn", "createContractHostFn"], ["sorobanAuthorizedFunctionTypeCreateContractV2HostFn", "createContractV2HostFn"]], arms: { contractFn: t.lookup("InvokeContractArgs"), createContractHostFn: t.lookup("CreateContractArgs"), createContractV2HostFn: t.lookup("CreateContractArgsV2") } }), t.struct("SorobanAuthorizedInvocation", [["function", t.lookup("SorobanAuthorizedFunction")], ["subInvocations", t.varArray(t.lookup("SorobanAuthorizedInvocation"), 2147483647)]]), t.struct("SorobanAddressCredentials", [["address", t.lookup("ScAddress")], ["nonce", t.lookup("Int64")], ["signatureExpirationLedger", t.lookup("Uint32")], ["signature", t.lookup("ScVal")]]), t.enum("SorobanCredentialsType", { sorobanCredentialsSourceAccount: 0, sorobanCredentialsAddress: 1 }), t.union("SorobanCredentials", { switchOn: t.lookup("SorobanCredentialsType"), switchName: "type", switches: [["sorobanCredentialsSourceAccount", t.void()], ["sorobanCredentialsAddress", "address"]], arms: { address: t.lookup("SorobanAddressCredentials") } }), t.struct("SorobanAuthorizationEntry", [["credentials", t.lookup("SorobanCredentials")], ["rootInvocation", t.lookup("SorobanAuthorizedInvocation")]]), t.struct("InvokeHostFunctionOp", [["hostFunction", t.lookup("HostFunction")], ["auth", t.varArray(t.lookup("SorobanAuthorizationEntry"), 2147483647)]]), t.struct("ExtendFootprintTtlOp", [["ext", t.lookup("ExtensionPoint")], ["extendTo", t.lookup("Uint32")]]), t.struct("RestoreFootprintOp", [["ext", t.lookup("ExtensionPoint")]]), t.union("OperationBody", { switchOn: t.lookup("OperationType"), switchName: "type", switches: [["createAccount", "createAccountOp"], ["payment", "paymentOp"], ["pathPaymentStrictReceive", "pathPaymentStrictReceiveOp"], ["manageSellOffer", "manageSellOfferOp"], ["createPassiveSellOffer", "createPassiveSellOfferOp"], ["setOptions", "setOptionsOp"], ["changeTrust", "changeTrustOp"], ["allowTrust", "allowTrustOp"], ["accountMerge", "destination"], ["inflation", t.void()], ["manageData", "manageDataOp"], ["bumpSequence", "bumpSequenceOp"], ["manageBuyOffer", "manageBuyOfferOp"], ["pathPaymentStrictSend", "pathPaymentStrictSendOp"], ["createClaimableBalance", "createClaimableBalanceOp"], ["claimClaimableBalance", "claimClaimableBalanceOp"], ["beginSponsoringFutureReserves", "beginSponsoringFutureReservesOp"], ["endSponsoringFutureReserves", t.void()], ["revokeSponsorship", "revokeSponsorshipOp"], ["clawback", "clawbackOp"], ["clawbackClaimableBalance", "clawbackClaimableBalanceOp"], ["setTrustLineFlags", "setTrustLineFlagsOp"], ["liquidityPoolDeposit", "liquidityPoolDepositOp"], ["liquidityPoolWithdraw", "liquidityPoolWithdrawOp"], ["invokeHostFunction", "invokeHostFunctionOp"], ["extendFootprintTtl", "extendFootprintTtlOp"], ["restoreFootprint", "restoreFootprintOp"]], arms: { createAccountOp: t.lookup("CreateAccountOp"), paymentOp: t.lookup("PaymentOp"), pathPaymentStrictReceiveOp: t.lookup("PathPaymentStrictReceiveOp"), manageSellOfferOp: t.lookup("ManageSellOfferOp"), createPassiveSellOfferOp: t.lookup("CreatePassiveSellOfferOp"), setOptionsOp: t.lookup("SetOptionsOp"), changeTrustOp: t.lookup("ChangeTrustOp"), allowTrustOp: t.lookup("AllowTrustOp"), destination: t.lookup("MuxedAccount"), manageDataOp: t.lookup("ManageDataOp"), bumpSequenceOp: t.lookup("BumpSequenceOp"), manageBuyOfferOp: t.lookup("ManageBuyOfferOp"), pathPaymentStrictSendOp: t.lookup("PathPaymentStrictSendOp"), createClaimableBalanceOp: t.lookup("CreateClaimableBalanceOp"), claimClaimableBalanceOp: t.lookup("ClaimClaimableBalanceOp"), beginSponsoringFutureReservesOp: t.lookup("BeginSponsoringFutureReservesOp"), revokeSponsorshipOp: t.lookup("RevokeSponsorshipOp"), clawbackOp: t.lookup("ClawbackOp"), clawbackClaimableBalanceOp: t.lookup("ClawbackClaimableBalanceOp"), setTrustLineFlagsOp: t.lookup("SetTrustLineFlagsOp"), liquidityPoolDepositOp: t.lookup("LiquidityPoolDepositOp"), liquidityPoolWithdrawOp: t.lookup("LiquidityPoolWithdrawOp"), invokeHostFunctionOp: t.lookup("InvokeHostFunctionOp"), extendFootprintTtlOp: t.lookup("ExtendFootprintTtlOp"), restoreFootprintOp: t.lookup("RestoreFootprintOp") } }), t.struct("Operation", [["sourceAccount", t.option(t.lookup("MuxedAccount"))], ["body", t.lookup("OperationBody")]]), t.struct("HashIdPreimageOperationId", [["sourceAccount", t.lookup("AccountId")], ["seqNum", t.lookup("SequenceNumber")], ["opNum", t.lookup("Uint32")]]), t.struct("HashIdPreimageRevokeId", [["sourceAccount", t.lookup("AccountId")], ["seqNum", t.lookup("SequenceNumber")], ["opNum", t.lookup("Uint32")], ["liquidityPoolId", t.lookup("PoolId")], ["asset", t.lookup("Asset")]]), t.struct("HashIdPreimageContractId", [["networkId", t.lookup("Hash")], ["contractIdPreimage", t.lookup("ContractIdPreimage")]]), t.struct("HashIdPreimageSorobanAuthorization", [["networkId", t.lookup("Hash")], ["nonce", t.lookup("Int64")], ["signatureExpirationLedger", t.lookup("Uint32")], ["invocation", t.lookup("SorobanAuthorizedInvocation")]]), t.union("HashIdPreimage", { switchOn: t.lookup("EnvelopeType"), switchName: "type", switches: [["envelopeTypeOpId", "operationId"], ["envelopeTypePoolRevokeOpId", "revokeId"], ["envelopeTypeContractId", "contractId"], ["envelopeTypeSorobanAuthorization", "sorobanAuthorization"]], arms: { operationId: t.lookup("HashIdPreimageOperationId"), revokeId: t.lookup("HashIdPreimageRevokeId"), contractId: t.lookup("HashIdPreimageContractId"), sorobanAuthorization: t.lookup("HashIdPreimageSorobanAuthorization") } }), t.enum("MemoType", { memoNone: 0, memoText: 1, memoId: 2, memoHash: 3, memoReturn: 4 }), t.union("Memo", { switchOn: t.lookup("MemoType"), switchName: "type", switches: [["memoNone", t.void()], ["memoText", "text"], ["memoId", "id"], ["memoHash", "hash"], ["memoReturn", "retHash"]], arms: { text: t.string(28), id: t.lookup("Uint64"), hash: t.lookup("Hash"), retHash: t.lookup("Hash") } }), t.struct("TimeBounds", [["minTime", t.lookup("TimePoint")], ["maxTime", t.lookup("TimePoint")]]), t.struct("LedgerBounds", [["minLedger", t.lookup("Uint32")], ["maxLedger", t.lookup("Uint32")]]), t.struct("PreconditionsV2", [["timeBounds", t.option(t.lookup("TimeBounds"))], ["ledgerBounds", t.option(t.lookup("LedgerBounds"))], ["minSeqNum", t.option(t.lookup("SequenceNumber"))], ["minSeqAge", t.lookup("Duration")], ["minSeqLedgerGap", t.lookup("Uint32")], ["extraSigners", t.varArray(t.lookup("SignerKey"), 2)]]), t.enum("PreconditionType", { precondNone: 0, precondTime: 1, precondV2: 2 }), t.union("Preconditions", { switchOn: t.lookup("PreconditionType"), switchName: "type", switches: [["precondNone", t.void()], ["precondTime", "timeBounds"], ["precondV2", "v2"]], arms: { timeBounds: t.lookup("TimeBounds"), v2: t.lookup("PreconditionsV2") } }), t.struct("LedgerFootprint", [["readOnly", t.varArray(t.lookup("LedgerKey"), 2147483647)], ["readWrite", t.varArray(t.lookup("LedgerKey"), 2147483647)]]), t.enum("ArchivalProofType", { existence: 0, nonexistence: 1 }), t.struct("ArchivalProofNode", [["index", t.lookup("Uint32")], ["hash", t.lookup("Hash")]]), t.typedef("ProofLevel", t.varArray(t.lookup("ArchivalProofNode"), 2147483647)), t.struct("NonexistenceProofBody", [["entriesToProve", t.varArray(t.lookup("ColdArchiveBucketEntry"), 2147483647)], ["proofLevels", t.varArray(t.lookup("ProofLevel"), 2147483647)]]), t.struct("ExistenceProofBody", [["keysToProve", t.varArray(t.lookup("LedgerKey"), 2147483647)], ["lowBoundEntries", t.varArray(t.lookup("ColdArchiveBucketEntry"), 2147483647)], ["highBoundEntries", t.varArray(t.lookup("ColdArchiveBucketEntry"), 2147483647)], ["proofLevels", t.varArray(t.lookup("ProofLevel"), 2147483647)]]), t.union("ArchivalProofBody", { switchOn: t.lookup("ArchivalProofType"), switchName: "t", switches: [["existence", "nonexistenceProof"], ["nonexistence", "existenceProof"]], arms: { nonexistenceProof: t.lookup("NonexistenceProofBody"), existenceProof: t.lookup("ExistenceProofBody") } }), t.struct("ArchivalProof", [["epoch", t.lookup("Uint32")], ["body", t.lookup("ArchivalProofBody")]]), t.struct("SorobanResources", [["footprint", t.lookup("LedgerFootprint")], ["instructions", t.lookup("Uint32")], ["readBytes", t.lookup("Uint32")], ["writeBytes", t.lookup("Uint32")]]), t.struct("SorobanTransactionData", [["ext", t.lookup("ExtensionPoint")], ["resources", t.lookup("SorobanResources")], ["resourceFee", t.lookup("Int64")]]), t.union("TransactionV0Ext", { switchOn: t.int(), switchName: "v", switches: [[0, t.void()]], arms: {} }), t.struct("TransactionV0", [["sourceAccountEd25519", t.lookup("Uint256")], ["fee", t.lookup("Uint32")], ["seqNum", t.lookup("SequenceNumber")], ["timeBounds", t.option(t.lookup("TimeBounds"))], ["memo", t.lookup("Memo")], ["operations", t.varArray(t.lookup("Operation"), t.lookup("MAX_OPS_PER_TX"))], ["ext", t.lookup("TransactionV0Ext")]]), t.struct("TransactionV0Envelope", [["tx", t.lookup("TransactionV0")], ["signatures", t.varArray(t.lookup("DecoratedSignature"), 20)]]), t.union("TransactionExt", { switchOn: t.int(), switchName: "v", switches: [[0, t.void()], [1, "sorobanData"]], arms: { sorobanData: t.lookup("SorobanTransactionData") } }), t.struct("Transaction", [["sourceAccount", t.lookup("MuxedAccount")], ["fee", t.lookup("Uint32")], ["seqNum", t.lookup("SequenceNumber")], ["cond", t.lookup("Preconditions")], ["memo", t.lookup("Memo")], ["operations", t.varArray(t.lookup("Operation"), t.lookup("MAX_OPS_PER_TX"))], ["ext", t.lookup("TransactionExt")]]), t.struct("TransactionV1Envelope", [["tx", t.lookup("Transaction")], ["signatures", t.varArray(t.lookup("DecoratedSignature"), 20)]]), t.union("FeeBumpTransactionInnerTx", { switchOn: t.lookup("EnvelopeType"), switchName: "type", switches: [["envelopeTypeTx", "v1"]], arms: { v1: t.lookup("TransactionV1Envelope") } }), t.union("FeeBumpTransactionExt", { switchOn: t.int(), switchName: "v", switches: [[0, t.void()]], arms: {} }), t.struct("FeeBumpTransaction", [["feeSource", t.lookup("MuxedAccount")], ["fee", t.lookup("Int64")], ["innerTx", t.lookup("FeeBumpTransactionInnerTx")], ["ext", t.lookup("FeeBumpTransactionExt")]]), t.struct("FeeBumpTransactionEnvelope", [["tx", t.lookup("FeeBumpTransaction")], ["signatures", t.varArray(t.lookup("DecoratedSignature"), 20)]]), t.union("TransactionEnvelope", { switchOn: t.lookup("EnvelopeType"), switchName: "type", switches: [["envelopeTypeTxV0", "v0"], ["envelopeTypeTx", "v1"], ["envelopeTypeTxFeeBump", "feeBump"]], arms: { v0: t.lookup("TransactionV0Envelope"), v1: t.lookup("TransactionV1Envelope"), feeBump: t.lookup("FeeBumpTransactionEnvelope") } }), t.union("TransactionSignaturePayloadTaggedTransaction", { switchOn: t.lookup("EnvelopeType"), switchName: "type", switches: [["envelopeTypeTx", "tx"], ["envelopeTypeTxFeeBump", "feeBump"]], arms: { tx: t.lookup("Transaction"), feeBump: t.lookup("FeeBumpTransaction") } }), t.struct("TransactionSignaturePayload", [["networkId", t.lookup("Hash")], ["taggedTransaction", t.lookup("TransactionSignaturePayloadTaggedTransaction")]]), t.enum("ClaimAtomType", { claimAtomTypeV0: 0, claimAtomTypeOrderBook: 1, claimAtomTypeLiquidityPool: 2 }), t.struct("ClaimOfferAtomV0", [["sellerEd25519", t.lookup("Uint256")], ["offerId", t.lookup("Int64")], ["assetSold", t.lookup("Asset")], ["amountSold", t.lookup("Int64")], ["assetBought", t.lookup("Asset")], ["amountBought", t.lookup("Int64")]]), t.struct("ClaimOfferAtom", [["sellerId", t.lookup("AccountId")], ["offerId", t.lookup("Int64")], ["assetSold", t.lookup("Asset")], ["amountSold", t.lookup("Int64")], ["assetBought", t.lookup("Asset")], ["amountBought", t.lookup("Int64")]]), t.struct("ClaimLiquidityAtom", [["liquidityPoolId", t.lookup("PoolId")], ["assetSold", t.lookup("Asset")], ["amountSold", t.lookup("Int64")], ["assetBought", t.lookup("Asset")], ["amountBought", t.lookup("Int64")]]), t.union("ClaimAtom", { switchOn: t.lookup("ClaimAtomType"), switchName: "type", switches: [["claimAtomTypeV0", "v0"], ["claimAtomTypeOrderBook", "orderBook"], ["claimAtomTypeLiquidityPool", "liquidityPool"]], arms: { v0: t.lookup("ClaimOfferAtomV0"), orderBook: t.lookup("ClaimOfferAtom"), liquidityPool: t.lookup("ClaimLiquidityAtom") } }), t.enum("CreateAccountResultCode", { createAccountSuccess: 0, createAccountMalformed: -1, createAccountUnderfunded: -2, createAccountLowReserve: -3, createAccountAlreadyExist: -4 }), t.union("CreateAccountResult", { switchOn: t.lookup("CreateAccountResultCode"), switchName: "code", switches: [["createAccountSuccess", t.void()], ["createAccountMalformed", t.void()], ["createAccountUnderfunded", t.void()], ["createAccountLowReserve", t.void()], ["createAccountAlreadyExist", t.void()]], arms: {} }), t.enum("PaymentResultCode", { paymentSuccess: 0, paymentMalformed: -1, paymentUnderfunded: -2, paymentSrcNoTrust: -3, paymentSrcNotAuthorized: -4, paymentNoDestination: -5, paymentNoTrust: -6, paymentNotAuthorized: -7, paymentLineFull: -8, paymentNoIssuer: -9 }), t.union("PaymentResult", { switchOn: t.lookup("PaymentResultCode"), switchName: "code", switches: [["paymentSuccess", t.void()], ["paymentMalformed", t.void()], ["paymentUnderfunded", t.void()], ["paymentSrcNoTrust", t.void()], ["paymentSrcNotAuthorized", t.void()], ["paymentNoDestination", t.void()], ["paymentNoTrust", t.void()], ["paymentNotAuthorized", t.void()], ["paymentLineFull", t.void()], ["paymentNoIssuer", t.void()]], arms: {} }), t.enum("PathPaymentStrictReceiveResultCode", { pathPaymentStrictReceiveSuccess: 0, pathPaymentStrictReceiveMalformed: -1, pathPaymentStrictReceiveUnderfunded: -2, pathPaymentStrictReceiveSrcNoTrust: -3, pathPaymentStrictReceiveSrcNotAuthorized: -4, pathPaymentStrictReceiveNoDestination: -5, pathPaymentStrictReceiveNoTrust: -6, pathPaymentStrictReceiveNotAuthorized: -7, pathPaymentStrictReceiveLineFull: -8, pathPaymentStrictReceiveNoIssuer: -9, pathPaymentStrictReceiveTooFewOffers: -10, pathPaymentStrictReceiveOfferCrossSelf: -11, pathPaymentStrictReceiveOverSendmax: -12 }), t.struct("SimplePaymentResult", [["destination", t.lookup("AccountId")], ["asset", t.lookup("Asset")], ["amount", t.lookup("Int64")]]), t.struct("PathPaymentStrictReceiveResultSuccess", [["offers", t.varArray(t.lookup("ClaimAtom"), 2147483647)], ["last", t.lookup("SimplePaymentResult")]]), t.union("PathPaymentStrictReceiveResult", { switchOn: t.lookup("PathPaymentStrictReceiveResultCode"), switchName: "code", switches: [["pathPaymentStrictReceiveSuccess", "success"], ["pathPaymentStrictReceiveMalformed", t.void()], ["pathPaymentStrictReceiveUnderfunded", t.void()], ["pathPaymentStrictReceiveSrcNoTrust", t.void()], ["pathPaymentStrictReceiveSrcNotAuthorized", t.void()], ["pathPaymentStrictReceiveNoDestination", t.void()], ["pathPaymentStrictReceiveNoTrust", t.void()], ["pathPaymentStrictReceiveNotAuthorized", t.void()], ["pathPaymentStrictReceiveLineFull", t.void()], ["pathPaymentStrictReceiveNoIssuer", "noIssuer"], ["pathPaymentStrictReceiveTooFewOffers", t.void()], ["pathPaymentStrictReceiveOfferCrossSelf", t.void()], ["pathPaymentStrictReceiveOverSendmax", t.void()]], arms: { success: t.lookup("PathPaymentStrictReceiveResultSuccess"), noIssuer: t.lookup("Asset") } }), t.enum("PathPaymentStrictSendResultCode", { pathPaymentStrictSendSuccess: 0, pathPaymentStrictSendMalformed: -1, pathPaymentStrictSendUnderfunded: -2, pathPaymentStrictSendSrcNoTrust: -3, pathPaymentStrictSendSrcNotAuthorized: -4, pathPaymentStrictSendNoDestination: -5, pathPaymentStrictSendNoTrust: -6, pathPaymentStrictSendNotAuthorized: -7, pathPaymentStrictSendLineFull: -8, pathPaymentStrictSendNoIssuer: -9, pathPaymentStrictSendTooFewOffers: -10, pathPaymentStrictSendOfferCrossSelf: -11, pathPaymentStrictSendUnderDestmin: -12 }), t.struct("PathPaymentStrictSendResultSuccess", [["offers", t.varArray(t.lookup("ClaimAtom"), 2147483647)], ["last", t.lookup("SimplePaymentResult")]]), t.union("PathPaymentStrictSendResult", { switchOn: t.lookup("PathPaymentStrictSendResultCode"), switchName: "code", switches: [["pathPaymentStrictSendSuccess", "success"], ["pathPaymentStrictSendMalformed", t.void()], ["pathPaymentStrictSendUnderfunded", t.void()], ["pathPaymentStrictSendSrcNoTrust", t.void()], ["pathPaymentStrictSendSrcNotAuthorized", t.void()], ["pathPaymentStrictSendNoDestination", t.void()], ["pathPaymentStrictSendNoTrust", t.void()], ["pathPaymentStrictSendNotAuthorized", t.void()], ["pathPaymentStrictSendLineFull", t.void()], ["pathPaymentStrictSendNoIssuer", "noIssuer"], ["pathPaymentStrictSendTooFewOffers", t.void()], ["pathPaymentStrictSendOfferCrossSelf", t.void()], ["pathPaymentStrictSendUnderDestmin", t.void()]], arms: { success: t.lookup("PathPaymentStrictSendResultSuccess"), noIssuer: t.lookup("Asset") } }), t.enum("ManageSellOfferResultCode", { manageSellOfferSuccess: 0, manageSellOfferMalformed: -1, manageSellOfferSellNoTrust: -2, manageSellOfferBuyNoTrust: -3, manageSellOfferSellNotAuthorized: -4, manageSellOfferBuyNotAuthorized: -5, manageSellOfferLineFull: -6, manageSellOfferUnderfunded: -7, manageSellOfferCrossSelf: -8, manageSellOfferSellNoIssuer: -9, manageSellOfferBuyNoIssuer: -10, manageSellOfferNotFound: -11, manageSellOfferLowReserve: -12 }), t.enum("ManageOfferEffect", { manageOfferCreated: 0, manageOfferUpdated: 1, manageOfferDeleted: 2 }), t.union("ManageOfferSuccessResultOffer", { switchOn: t.lookup("ManageOfferEffect"), switchName: "effect", switches: [["manageOfferCreated", "offer"], ["manageOfferUpdated", "offer"], ["manageOfferDeleted", t.void()]], arms: { offer: t.lookup("OfferEntry") } }), t.struct("ManageOfferSuccessResult", [["offersClaimed", t.varArray(t.lookup("ClaimAtom"), 2147483647)], ["offer", t.lookup("ManageOfferSuccessResultOffer")]]), t.union("ManageSellOfferResult", { switchOn: t.lookup("ManageSellOfferResultCode"), switchName: "code", switches: [["manageSellOfferSuccess", "success"], ["manageSellOfferMalformed", t.void()], ["manageSellOfferSellNoTrust", t.void()], ["manageSellOfferBuyNoTrust", t.void()], ["manageSellOfferSellNotAuthorized", t.void()], ["manageSellOfferBuyNotAuthorized", t.void()], ["manageSellOfferLineFull", t.void()], ["manageSellOfferUnderfunded", t.void()], ["manageSellOfferCrossSelf", t.void()], ["manageSellOfferSellNoIssuer", t.void()], ["manageSellOfferBuyNoIssuer", t.void()], ["manageSellOfferNotFound", t.void()], ["manageSellOfferLowReserve", t.void()]], arms: { success: t.lookup("ManageOfferSuccessResult") } }), t.enum("ManageBuyOfferResultCode", { manageBuyOfferSuccess: 0, manageBuyOfferMalformed: -1, manageBuyOfferSellNoTrust: -2, manageBuyOfferBuyNoTrust: -3, manageBuyOfferSellNotAuthorized: -4, manageBuyOfferBuyNotAuthorized: -5, manageBuyOfferLineFull: -6, manageBuyOfferUnderfunded: -7, manageBuyOfferCrossSelf: -8, manageBuyOfferSellNoIssuer: -9, manageBuyOfferBuyNoIssuer: -10, manageBuyOfferNotFound: -11, manageBuyOfferLowReserve: -12 }), t.union("ManageBuyOfferResult", { switchOn: t.lookup("ManageBuyOfferResultCode"), switchName: "code", switches: [["manageBuyOfferSuccess", "success"], ["manageBuyOfferMalformed", t.void()], ["manageBuyOfferSellNoTrust", t.void()], ["manageBuyOfferBuyNoTrust", t.void()], ["manageBuyOfferSellNotAuthorized", t.void()], ["manageBuyOfferBuyNotAuthorized", t.void()], ["manageBuyOfferLineFull", t.void()], ["manageBuyOfferUnderfunded", t.void()], ["manageBuyOfferCrossSelf", t.void()], ["manageBuyOfferSellNoIssuer", t.void()], ["manageBuyOfferBuyNoIssuer", t.void()], ["manageBuyOfferNotFound", t.void()], ["manageBuyOfferLowReserve", t.void()]], arms: { success: t.lookup("ManageOfferSuccessResult") } }), t.enum("SetOptionsResultCode", { setOptionsSuccess: 0, setOptionsLowReserve: -1, setOptionsTooManySigners: -2, setOptionsBadFlags: -3, setOptionsInvalidInflation: -4, setOptionsCantChange: -5, setOptionsUnknownFlag: -6, setOptionsThresholdOutOfRange: -7, setOptionsBadSigner: -8, setOptionsInvalidHomeDomain: -9, setOptionsAuthRevocableRequired: -10 }), t.union("SetOptionsResult", { switchOn: t.lookup("SetOptionsResultCode"), switchName: "code", switches: [["setOptionsSuccess", t.void()], ["setOptionsLowReserve", t.void()], ["setOptionsTooManySigners", t.void()], ["setOptionsBadFlags", t.void()], ["setOptionsInvalidInflation", t.void()], ["setOptionsCantChange", t.void()], ["setOptionsUnknownFlag", t.void()], ["setOptionsThresholdOutOfRange", t.void()], ["setOptionsBadSigner", t.void()], ["setOptionsInvalidHomeDomain", t.void()], ["setOptionsAuthRevocableRequired", t.void()]], arms: {} }), t.enum("ChangeTrustResultCode", { changeTrustSuccess: 0, changeTrustMalformed: -1, changeTrustNoIssuer: -2, changeTrustInvalidLimit: -3, changeTrustLowReserve: -4, changeTrustSelfNotAllowed: -5, changeTrustTrustLineMissing: -6, changeTrustCannotDelete: -7, changeTrustNotAuthMaintainLiabilities: -8 }), t.union("ChangeTrustResult", { switchOn: t.lookup("ChangeTrustResultCode"), switchName: "code", switches: [["changeTrustSuccess", t.void()], ["changeTrustMalformed", t.void()], ["changeTrustNoIssuer", t.void()], ["changeTrustInvalidLimit", t.void()], ["changeTrustLowReserve", t.void()], ["changeTrustSelfNotAllowed", t.void()], ["changeTrustTrustLineMissing", t.void()], ["changeTrustCannotDelete", t.void()], ["changeTrustNotAuthMaintainLiabilities", t.void()]], arms: {} }), t.enum("AllowTrustResultCode", { allowTrustSuccess: 0, allowTrustMalformed: -1, allowTrustNoTrustLine: -2, allowTrustTrustNotRequired: -3, allowTrustCantRevoke: -4, allowTrustSelfNotAllowed: -5, allowTrustLowReserve: -6 }), t.union("AllowTrustResult", { switchOn: t.lookup("AllowTrustResultCode"), switchName: "code", switches: [["allowTrustSuccess", t.void()], ["allowTrustMalformed", t.void()], ["allowTrustNoTrustLine", t.void()], ["allowTrustTrustNotRequired", t.void()], ["allowTrustCantRevoke", t.void()], ["allowTrustSelfNotAllowed", t.void()], ["allowTrustLowReserve", t.void()]], arms: {} }), t.enum("AccountMergeResultCode", { accountMergeSuccess: 0, accountMergeMalformed: -1, accountMergeNoAccount: -2, accountMergeImmutableSet: -3, accountMergeHasSubEntries: -4, accountMergeSeqnumTooFar: -5, accountMergeDestFull: -6, accountMergeIsSponsor: -7 }), t.union("AccountMergeResult", { switchOn: t.lookup("AccountMergeResultCode"), switchName: "code", switches: [["accountMergeSuccess", "sourceAccountBalance"], ["accountMergeMalformed", t.void()], ["accountMergeNoAccount", t.void()], ["accountMergeImmutableSet", t.void()], ["accountMergeHasSubEntries", t.void()], ["accountMergeSeqnumTooFar", t.void()], ["accountMergeDestFull", t.void()], ["accountMergeIsSponsor", t.void()]], arms: { sourceAccountBalance: t.lookup("Int64") } }), t.enum("InflationResultCode", { inflationSuccess: 0, inflationNotTime: -1 }), t.struct("InflationPayout", [["destination", t.lookup("AccountId")], ["amount", t.lookup("Int64")]]), t.union("InflationResult", { switchOn: t.lookup("InflationResultCode"), switchName: "code", switches: [["inflationSuccess", "payouts"], ["inflationNotTime", t.void()]], arms: { payouts: t.varArray(t.lookup("InflationPayout"), 2147483647) } }), t.enum("ManageDataResultCode", { manageDataSuccess: 0, manageDataNotSupportedYet: -1, manageDataNameNotFound: -2, manageDataLowReserve: -3, manageDataInvalidName: -4 }), t.union("ManageDataResult", { switchOn: t.lookup("ManageDataResultCode"), switchName: "code", switches: [["manageDataSuccess", t.void()], ["manageDataNotSupportedYet", t.void()], ["manageDataNameNotFound", t.void()], ["manageDataLowReserve", t.void()], ["manageDataInvalidName", t.void()]], arms: {} }), t.enum("BumpSequenceResultCode", { bumpSequenceSuccess: 0, bumpSequenceBadSeq: -1 }), t.union("BumpSequenceResult", { switchOn: t.lookup("BumpSequenceResultCode"), switchName: "code", switches: [["bumpSequenceSuccess", t.void()], ["bumpSequenceBadSeq", t.void()]], arms: {} }), t.enum("CreateClaimableBalanceResultCode", { createClaimableBalanceSuccess: 0, createClaimableBalanceMalformed: -1, createClaimableBalanceLowReserve: -2, createClaimableBalanceNoTrust: -3, createClaimableBalanceNotAuthorized: -4, createClaimableBalanceUnderfunded: -5 }), t.union("CreateClaimableBalanceResult", { switchOn: t.lookup("CreateClaimableBalanceResultCode"), switchName: "code", switches: [["createClaimableBalanceSuccess", "balanceId"], ["createClaimableBalanceMalformed", t.void()], ["createClaimableBalanceLowReserve", t.void()], ["createClaimableBalanceNoTrust", t.void()], ["createClaimableBalanceNotAuthorized", t.void()], ["createClaimableBalanceUnderfunded", t.void()]], arms: { balanceId: t.lookup("ClaimableBalanceId") } }), t.enum("ClaimClaimableBalanceResultCode", { claimClaimableBalanceSuccess: 0, claimClaimableBalanceDoesNotExist: -1, claimClaimableBalanceCannotClaim: -2, claimClaimableBalanceLineFull: -3, claimClaimableBalanceNoTrust: -4, claimClaimableBalanceNotAuthorized: -5 }), t.union("ClaimClaimableBalanceResult", { switchOn: t.lookup("ClaimClaimableBalanceResultCode"), switchName: "code", switches: [["claimClaimableBalanceSuccess", t.void()], ["claimClaimableBalanceDoesNotExist", t.void()], ["claimClaimableBalanceCannotClaim", t.void()], ["claimClaimableBalanceLineFull", t.void()], ["claimClaimableBalanceNoTrust", t.void()], ["claimClaimableBalanceNotAuthorized", t.void()]], arms: {} }), t.enum("BeginSponsoringFutureReservesResultCode", { beginSponsoringFutureReservesSuccess: 0, beginSponsoringFutureReservesMalformed: -1, beginSponsoringFutureReservesAlreadySponsored: -2, beginSponsoringFutureReservesRecursive: -3 }), t.union("BeginSponsoringFutureReservesResult", { switchOn: t.lookup("BeginSponsoringFutureReservesResultCode"), switchName: "code", switches: [["beginSponsoringFutureReservesSuccess", t.void()], ["beginSponsoringFutureReservesMalformed", t.void()], ["beginSponsoringFutureReservesAlreadySponsored", t.void()], ["beginSponsoringFutureReservesRecursive", t.void()]], arms: {} }), t.enum("EndSponsoringFutureReservesResultCode", { endSponsoringFutureReservesSuccess: 0, endSponsoringFutureReservesNotSponsored: -1 }), t.union("EndSponsoringFutureReservesResult", { switchOn: t.lookup("EndSponsoringFutureReservesResultCode"), switchName: "code", switches: [["endSponsoringFutureReservesSuccess", t.void()], ["endSponsoringFutureReservesNotSponsored", t.void()]], arms: {} }), t.enum("RevokeSponsorshipResultCode", { revokeSponsorshipSuccess: 0, revokeSponsorshipDoesNotExist: -1, revokeSponsorshipNotSponsor: -2, revokeSponsorshipLowReserve: -3, revokeSponsorshipOnlyTransferable: -4, revokeSponsorshipMalformed: -5 }), t.union("RevokeSponsorshipResult", { switchOn: t.lookup("RevokeSponsorshipResultCode"), switchName: "code", switches: [["revokeSponsorshipSuccess", t.void()], ["revokeSponsorshipDoesNotExist", t.void()], ["revokeSponsorshipNotSponsor", t.void()], ["revokeSponsorshipLowReserve", t.void()], ["revokeSponsorshipOnlyTransferable", t.void()], ["revokeSponsorshipMalformed", t.void()]], arms: {} }), t.enum("ClawbackResultCode", { clawbackSuccess: 0, clawbackMalformed: -1, clawbackNotClawbackEnabled: -2, clawbackNoTrust: -3, clawbackUnderfunded: -4 }), t.union("ClawbackResult", { switchOn: t.lookup("ClawbackResultCode"), switchName: "code", switches: [["clawbackSuccess", t.void()], ["clawbackMalformed", t.void()], ["clawbackNotClawbackEnabled", t.void()], ["clawbackNoTrust", t.void()], ["clawbackUnderfunded", t.void()]], arms: {} }), t.enum("ClawbackClaimableBalanceResultCode", { clawbackClaimableBalanceSuccess: 0, clawbackClaimableBalanceDoesNotExist: -1, clawbackClaimableBalanceNotIssuer: -2, clawbackClaimableBalanceNotClawbackEnabled: -3 }), t.union("ClawbackClaimableBalanceResult", { switchOn: t.lookup("ClawbackClaimableBalanceResultCode"), switchName: "code", switches: [["clawbackClaimableBalanceSuccess", t.void()], ["clawbackClaimableBalanceDoesNotExist", t.void()], ["clawbackClaimableBalanceNotIssuer", t.void()], ["clawbackClaimableBalanceNotClawbackEnabled", t.void()]], arms: {} }), t.enum("SetTrustLineFlagsResultCode", { setTrustLineFlagsSuccess: 0, setTrustLineFlagsMalformed: -1, setTrustLineFlagsNoTrustLine: -2, setTrustLineFlagsCantRevoke: -3, setTrustLineFlagsInvalidState: -4, setTrustLineFlagsLowReserve: -5 }), t.union("SetTrustLineFlagsResult", { switchOn: t.lookup("SetTrustLineFlagsResultCode"), switchName: "code", switches: [["setTrustLineFlagsSuccess", t.void()], ["setTrustLineFlagsMalformed", t.void()], ["setTrustLineFlagsNoTrustLine", t.void()], ["setTrustLineFlagsCantRevoke", t.void()], ["setTrustLineFlagsInvalidState", t.void()], ["setTrustLineFlagsLowReserve", t.void()]], arms: {} }), t.enum("LiquidityPoolDepositResultCode", { liquidityPoolDepositSuccess: 0, liquidityPoolDepositMalformed: -1, liquidityPoolDepositNoTrust: -2, liquidityPoolDepositNotAuthorized: -3, liquidityPoolDepositUnderfunded: -4, liquidityPoolDepositLineFull: -5, liquidityPoolDepositBadPrice: -6, liquidityPoolDepositPoolFull: -7 }), t.union("LiquidityPoolDepositResult", { switchOn: t.lookup("LiquidityPoolDepositResultCode"), switchName: "code", switches: [["liquidityPoolDepositSuccess", t.void()], ["liquidityPoolDepositMalformed", t.void()], ["liquidityPoolDepositNoTrust", t.void()], ["liquidityPoolDepositNotAuthorized", t.void()], ["liquidityPoolDepositUnderfunded", t.void()], ["liquidityPoolDepositLineFull", t.void()], ["liquidityPoolDepositBadPrice", t.void()], ["liquidityPoolDepositPoolFull", t.void()]], arms: {} }), t.enum("LiquidityPoolWithdrawResultCode", { liquidityPoolWithdrawSuccess: 0, liquidityPoolWithdrawMalformed: -1, liquidityPoolWithdrawNoTrust: -2, liquidityPoolWithdrawUnderfunded: -3, liquidityPoolWithdrawLineFull: -4, liquidityPoolWithdrawUnderMinimum: -5 }), t.union("LiquidityPoolWithdrawResult", { switchOn: t.lookup("LiquidityPoolWithdrawResultCode"), switchName: "code", switches: [["liquidityPoolWithdrawSuccess", t.void()], ["liquidityPoolWithdrawMalformed", t.void()], ["liquidityPoolWithdrawNoTrust", t.void()], ["liquidityPoolWithdrawUnderfunded", t.void()], ["liquidityPoolWithdrawLineFull", t.void()], ["liquidityPoolWithdrawUnderMinimum", t.void()]], arms: {} }), t.enum("InvokeHostFunctionResultCode", { invokeHostFunctionSuccess: 0, invokeHostFunctionMalformed: -1, invokeHostFunctionTrapped: -2, invokeHostFunctionResourceLimitExceeded: -3, invokeHostFunctionEntryArchived: -4, invokeHostFunctionInsufficientRefundableFee: -5 }), t.union("InvokeHostFunctionResult", { switchOn: t.lookup("InvokeHostFunctionResultCode"), switchName: "code", switches: [["invokeHostFunctionSuccess", "success"], ["invokeHostFunctionMalformed", t.void()], ["invokeHostFunctionTrapped", t.void()], ["invokeHostFunctionResourceLimitExceeded", t.void()], ["invokeHostFunctionEntryArchived", t.void()], ["invokeHostFunctionInsufficientRefundableFee", t.void()]], arms: { success: t.lookup("Hash") } }), t.enum("ExtendFootprintTtlResultCode", { extendFootprintTtlSuccess: 0, extendFootprintTtlMalformed: -1, extendFootprintTtlResourceLimitExceeded: -2, extendFootprintTtlInsufficientRefundableFee: -3 }), t.union("ExtendFootprintTtlResult", { switchOn: t.lookup("ExtendFootprintTtlResultCode"), switchName: "code", switches: [["extendFootprintTtlSuccess", t.void()], ["extendFootprintTtlMalformed", t.void()], ["extendFootprintTtlResourceLimitExceeded", t.void()], ["extendFootprintTtlInsufficientRefundableFee", t.void()]], arms: {} }), t.enum("RestoreFootprintResultCode", { restoreFootprintSuccess: 0, restoreFootprintMalformed: -1, restoreFootprintResourceLimitExceeded: -2, restoreFootprintInsufficientRefundableFee: -3 }), t.union("RestoreFootprintResult", { switchOn: t.lookup("RestoreFootprintResultCode"), switchName: "code", switches: [["restoreFootprintSuccess", t.void()], ["restoreFootprintMalformed", t.void()], ["restoreFootprintResourceLimitExceeded", t.void()], ["restoreFootprintInsufficientRefundableFee", t.void()]], arms: {} }), t.enum("OperationResultCode", { opInner: 0, opBadAuth: -1, opNoAccount: -2, opNotSupported: -3, opTooManySubentries: -4, opExceededWorkLimit: -5, opTooManySponsoring: -6 }), t.union("OperationResultTr", { switchOn: t.lookup("OperationType"), switchName: "type", switches: [["createAccount", "createAccountResult"], ["payment", "paymentResult"], ["pathPaymentStrictReceive", "pathPaymentStrictReceiveResult"], ["manageSellOffer", "manageSellOfferResult"], ["createPassiveSellOffer", "createPassiveSellOfferResult"], ["setOptions", "setOptionsResult"], ["changeTrust", "changeTrustResult"], ["allowTrust", "allowTrustResult"], ["accountMerge", "accountMergeResult"], ["inflation", "inflationResult"], ["manageData", "manageDataResult"], ["bumpSequence", "bumpSeqResult"], ["manageBuyOffer", "manageBuyOfferResult"], ["pathPaymentStrictSend", "pathPaymentStrictSendResult"], ["createClaimableBalance", "createClaimableBalanceResult"], ["claimClaimableBalance", "claimClaimableBalanceResult"], ["beginSponsoringFutureReserves", "beginSponsoringFutureReservesResult"], ["endSponsoringFutureReserves", "endSponsoringFutureReservesResult"], ["revokeSponsorship", "revokeSponsorshipResult"], ["clawback", "clawbackResult"], ["clawbackClaimableBalance", "clawbackClaimableBalanceResult"], ["setTrustLineFlags", "setTrustLineFlagsResult"], ["liquidityPoolDeposit", "liquidityPoolDepositResult"], ["liquidityPoolWithdraw", "liquidityPoolWithdrawResult"], ["invokeHostFunction", "invokeHostFunctionResult"], ["extendFootprintTtl", "extendFootprintTtlResult"], ["restoreFootprint", "restoreFootprintResult"]], arms: { createAccountResult: t.lookup("CreateAccountResult"), paymentResult: t.lookup("PaymentResult"), pathPaymentStrictReceiveResult: t.lookup("PathPaymentStrictReceiveResult"), manageSellOfferResult: t.lookup("ManageSellOfferResult"), createPassiveSellOfferResult: t.lookup("ManageSellOfferResult"), setOptionsResult: t.lookup("SetOptionsResult"), changeTrustResult: t.lookup("ChangeTrustResult"), allowTrustResult: t.lookup("AllowTrustResult"), accountMergeResult: t.lookup("AccountMergeResult"), inflationResult: t.lookup("InflationResult"), manageDataResult: t.lookup("ManageDataResult"), bumpSeqResult: t.lookup("BumpSequenceResult"), manageBuyOfferResult: t.lookup("ManageBuyOfferResult"), pathPaymentStrictSendResult: t.lookup("PathPaymentStrictSendResult"), createClaimableBalanceResult: t.lookup("CreateClaimableBalanceResult"), claimClaimableBalanceResult: t.lookup("ClaimClaimableBalanceResult"), beginSponsoringFutureReservesResult: t.lookup("BeginSponsoringFutureReservesResult"), endSponsoringFutureReservesResult: t.lookup("EndSponsoringFutureReservesResult"), revokeSponsorshipResult: t.lookup("RevokeSponsorshipResult"), clawbackResult: t.lookup("ClawbackResult"), clawbackClaimableBalanceResult: t.lookup("ClawbackClaimableBalanceResult"), setTrustLineFlagsResult: t.lookup("SetTrustLineFlagsResult"), liquidityPoolDepositResult: t.lookup("LiquidityPoolDepositResult"), liquidityPoolWithdrawResult: t.lookup("LiquidityPoolWithdrawResult"), invokeHostFunctionResult: t.lookup("InvokeHostFunctionResult"), extendFootprintTtlResult: t.lookup("ExtendFootprintTtlResult"), restoreFootprintResult: t.lookup("RestoreFootprintResult") } }), t.union("OperationResult", { switchOn: t.lookup("OperationResultCode"), switchName: "code", switches: [["opInner", "tr"], ["opBadAuth", t.void()], ["opNoAccount", t.void()], ["opNotSupported", t.void()], ["opTooManySubentries", t.void()], ["opExceededWorkLimit", t.void()], ["opTooManySponsoring", t.void()]], arms: { tr: t.lookup("OperationResultTr") } }), t.enum("TransactionResultCode", { txFeeBumpInnerSuccess: 1, txSuccess: 0, txFailed: -1, txTooEarly: -2, txTooLate: -3, txMissingOperation: -4, txBadSeq: -5, txBadAuth: -6, txInsufficientBalance: -7, txNoAccount: -8, txInsufficientFee: -9, txBadAuthExtra: -10, txInternalError: -11, txNotSupported: -12, txFeeBumpInnerFailed: -13, txBadSponsorship: -14, txBadMinSeqAgeOrGap: -15, txMalformed: -16, txSorobanInvalid: -17 }), t.union("InnerTransactionResultResult", { switchOn: t.lookup("TransactionResultCode"), switchName: "code", switches: [["txSuccess", "results"], ["txFailed", "results"], ["txTooEarly", t.void()], ["txTooLate", t.void()], ["txMissingOperation", t.void()], ["txBadSeq", t.void()], ["txBadAuth", t.void()], ["txInsufficientBalance", t.void()], ["txNoAccount", t.void()], ["txInsufficientFee", t.void()], ["txBadAuthExtra", t.void()], ["txInternalError", t.void()], ["txNotSupported", t.void()], ["txBadSponsorship", t.void()], ["txBadMinSeqAgeOrGap", t.void()], ["txMalformed", t.void()], ["txSorobanInvalid", t.void()]], arms: { results: t.varArray(t.lookup("OperationResult"), 2147483647) } }), t.union("InnerTransactionResultExt", { switchOn: t.int(), switchName: "v", switches: [[0, t.void()]], arms: {} }), t.struct("InnerTransactionResult", [["feeCharged", t.lookup("Int64")], ["result", t.lookup("InnerTransactionResultResult")], ["ext", t.lookup("InnerTransactionResultExt")]]), t.struct("InnerTransactionResultPair", [["transactionHash", t.lookup("Hash")], ["result", t.lookup("InnerTransactionResult")]]), t.union("TransactionResultResult", { switchOn: t.lookup("TransactionResultCode"), switchName: "code", switches: [["txFeeBumpInnerSuccess", "innerResultPair"], ["txFeeBumpInnerFailed", "innerResultPair"], ["txSuccess", "results"], ["txFailed", "results"], ["txTooEarly", t.void()], ["txTooLate", t.void()], ["txMissingOperation", t.void()], ["txBadSeq", t.void()], ["txBadAuth", t.void()], ["txInsufficientBalance", t.void()], ["txNoAccount", t.void()], ["txInsufficientFee", t.void()], ["txBadAuthExtra", t.void()], ["txInternalError", t.void()], ["txNotSupported", t.void()], ["txBadSponsorship", t.void()], ["txBadMinSeqAgeOrGap", t.void()], ["txMalformed", t.void()], ["txSorobanInvalid", t.void()]], arms: { innerResultPair: t.lookup("InnerTransactionResultPair"), results: t.varArray(t.lookup("OperationResult"), 2147483647) } }), t.union("TransactionResultExt", { switchOn: t.int(), switchName: "v", switches: [[0, t.void()]], arms: {} }), t.struct("TransactionResult", [["feeCharged", t.lookup("Int64")], ["result", t.lookup("TransactionResultResult")], ["ext", t.lookup("TransactionResultExt")]]), t.typedef("Hash", t.opaque(32)), t.typedef("Uint256", t.opaque(32)), t.typedef("Uint32", t.uint()), t.typedef("Int32", t.int()), t.typedef("Uint64", t.uhyper()), t.typedef("Int64", t.hyper()), t.typedef("TimePoint", t.lookup("Uint64")), t.typedef("Duration", t.lookup("Uint64")), t.union("ExtensionPoint", { switchOn: t.int(), switchName: "v", switches: [[0, t.void()]], arms: {} }), t.enum("CryptoKeyType", { keyTypeEd25519: 0, keyTypePreAuthTx: 1, keyTypeHashX: 2, keyTypeEd25519SignedPayload: 3, keyTypeMuxedEd25519: 256 }), t.enum("PublicKeyType", { publicKeyTypeEd25519: 0 }), t.enum("SignerKeyType", { signerKeyTypeEd25519: 0, signerKeyTypePreAuthTx: 1, signerKeyTypeHashX: 2, signerKeyTypeEd25519SignedPayload: 3 }), t.union("PublicKey", { switchOn: t.lookup("PublicKeyType"), switchName: "type", switches: [["publicKeyTypeEd25519", "ed25519"]], arms: { ed25519: t.lookup("Uint256") } }), t.struct("SignerKeyEd25519SignedPayload", [["ed25519", t.lookup("Uint256")], ["payload", t.varOpaque(64)]]), t.union("SignerKey", { switchOn: t.lookup("SignerKeyType"), switchName: "type", switches: [["signerKeyTypeEd25519", "ed25519"], ["signerKeyTypePreAuthTx", "preAuthTx"], ["signerKeyTypeHashX", "hashX"], ["signerKeyTypeEd25519SignedPayload", "ed25519SignedPayload"]], arms: { ed25519: t.lookup("Uint256"), preAuthTx: t.lookup("Uint256"), hashX: t.lookup("Uint256"), ed25519SignedPayload: t.lookup("SignerKeyEd25519SignedPayload") } }), t.typedef("Signature", t.varOpaque(64)), t.typedef("SignatureHint", t.opaque(4)), t.typedef("NodeId", t.lookup("PublicKey")), t.typedef("AccountId", t.lookup("PublicKey")), t.struct("Curve25519Secret", [["key", t.opaque(32)]]), t.struct("Curve25519Public", [["key", t.opaque(32)]]), t.struct("HmacSha256Key", [["key", t.opaque(32)]]), t.struct("HmacSha256Mac", [["mac", t.opaque(32)]]), t.struct("ShortHashSeed", [["seed", t.opaque(16)]]), t.enum("BinaryFuseFilterType", { binaryFuseFilter8Bit: 0, binaryFuseFilter16Bit: 1, binaryFuseFilter32Bit: 2 }), t.struct("SerializedBinaryFuseFilter", [["type", t.lookup("BinaryFuseFilterType")], ["inputHashSeed", t.lookup("ShortHashSeed")], ["filterSeed", t.lookup("ShortHashSeed")], ["segmentLength", t.lookup("Uint32")], ["segementLengthMask", t.lookup("Uint32")], ["segmentCount", t.lookup("Uint32")], ["segmentCountLength", t.lookup("Uint32")], ["fingerprintLength", t.lookup("Uint32")], ["fingerprints", t.varOpaque()]]), t.enum("ScValType", { scvBool: 0, scvVoid: 1, scvError: 2, scvU32: 3, scvI32: 4, scvU64: 5, scvI64: 6, scvTimepoint: 7, scvDuration: 8, scvU128: 9, scvI128: 10, scvU256: 11, scvI256: 12, scvBytes: 13, scvString: 14, scvSymbol: 15, scvVec: 16, scvMap: 17, scvAddress: 18, scvContractInstance: 19, scvLedgerKeyContractInstance: 20, scvLedgerKeyNonce: 21 }), t.enum("ScErrorType", { sceContract: 0, sceWasmVm: 1, sceContext: 2, sceStorage: 3, sceObject: 4, sceCrypto: 5, sceEvents: 6, sceBudget: 7, sceValue: 8, sceAuth: 9 }), t.enum("ScErrorCode", { scecArithDomain: 0, scecIndexBounds: 1, scecInvalidInput: 2, scecMissingValue: 3, scecExistingValue: 4, scecExceededLimit: 5, scecInvalidAction: 6, scecInternalError: 7, scecUnexpectedType: 8, scecUnexpectedSize: 9 }), t.union("ScError", { switchOn: t.lookup("ScErrorType"), switchName: "type", switches: [["sceContract", "contractCode"], ["sceWasmVm", "code"], ["sceContext", "code"], ["sceStorage", "code"], ["sceObject", "code"], ["sceCrypto", "code"], ["sceEvents", "code"], ["sceBudget", "code"], ["sceValue", "code"], ["sceAuth", "code"]], arms: { contractCode: t.lookup("Uint32"), code: t.lookup("ScErrorCode") } }), t.struct("UInt128Parts", [["hi", t.lookup("Uint64")], ["lo", t.lookup("Uint64")]]), t.struct("Int128Parts", [["hi", t.lookup("Int64")], ["lo", t.lookup("Uint64")]]), t.struct("UInt256Parts", [["hiHi", t.lookup("Uint64")], ["hiLo", t.lookup("Uint64")], ["loHi", t.lookup("Uint64")], ["loLo", t.lookup("Uint64")]]), t.struct("Int256Parts", [["hiHi", t.lookup("Int64")], ["hiLo", t.lookup("Uint64")], ["loHi", t.lookup("Uint64")], ["loLo", t.lookup("Uint64")]]), t.enum("ContractExecutableType", { contractExecutableWasm: 0, contractExecutableStellarAsset: 1 }), t.union("ContractExecutable", { switchOn: t.lookup("ContractExecutableType"), switchName: "type", switches: [["contractExecutableWasm", "wasmHash"], ["contractExecutableStellarAsset", t.void()]], arms: { wasmHash: t.lookup("Hash") } }), t.enum("ScAddressType", { scAddressTypeAccount: 0, scAddressTypeContract: 1 }), t.union("ScAddress", { switchOn: t.lookup("ScAddressType"), switchName: "type", switches: [["scAddressTypeAccount", "accountId"], ["scAddressTypeContract", "contractId"]], arms: { accountId: t.lookup("AccountId"), contractId: t.lookup("Hash") } }), t.const("SCSYMBOL_LIMIT", 32), t.typedef("ScVec", t.varArray(t.lookup("ScVal"), 2147483647)), t.typedef("ScMap", t.varArray(t.lookup("ScMapEntry"), 2147483647)), t.typedef("ScBytes", t.varOpaque()), t.typedef("ScString", t.string()), t.typedef("ScSymbol", t.string(o)), t.struct("ScNonceKey", [["nonce", t.lookup("Int64")]]), t.struct("ScContractInstance", [["executable", t.lookup("ContractExecutable")], ["storage", t.option(t.lookup("ScMap"))]]), t.union("ScVal", { switchOn: t.lookup("ScValType"), switchName: "type", switches: [["scvBool", "b"], ["scvVoid", t.void()], ["scvError", "error"], ["scvU32", "u32"], ["scvI32", "i32"], ["scvU64", "u64"], ["scvI64", "i64"], ["scvTimepoint", "timepoint"], ["scvDuration", "duration"], ["scvU128", "u128"], ["scvI128", "i128"], ["scvU256", "u256"], ["scvI256", "i256"], ["scvBytes", "bytes"], ["scvString", "str"], ["scvSymbol", "sym"], ["scvVec", "vec"], ["scvMap", "map"], ["scvAddress", "address"], ["scvLedgerKeyContractInstance", t.void()], ["scvLedgerKeyNonce", "nonceKey"], ["scvContractInstance", "instance"]], arms: { b: t.bool(), error: t.lookup("ScError"), u32: t.lookup("Uint32"), i32: t.lookup("Int32"), u64: t.lookup("Uint64"), i64: t.lookup("Int64"), timepoint: t.lookup("TimePoint"), duration: t.lookup("Duration"), u128: t.lookup("UInt128Parts"), i128: t.lookup("Int128Parts"), u256: t.lookup("UInt256Parts"), i256: t.lookup("Int256Parts"), bytes: t.lookup("ScBytes"), str: t.lookup("ScString"), sym: t.lookup("ScSymbol"), vec: t.option(t.lookup("ScVec")), map: t.option(t.lookup("ScMap")), address: t.lookup("ScAddress"), nonceKey: t.lookup("ScNonceKey"), instance: t.lookup("ScContractInstance") } }), t.struct("ScMapEntry", [["key", t.lookup("ScVal")], ["val", t.lookup("ScVal")]]), t.enum("ScEnvMetaKind", { scEnvMetaKindInterfaceVersion: 0 }), t.struct("ScEnvMetaEntryInterfaceVersion", [["protocol", t.lookup("Uint32")], ["preRelease", t.lookup("Uint32")]]), t.union("ScEnvMetaEntry", { switchOn: t.lookup("ScEnvMetaKind"), switchName: "kind", switches: [["scEnvMetaKindInterfaceVersion", "interfaceVersion"]], arms: { interfaceVersion: t.lookup("ScEnvMetaEntryInterfaceVersion") } }), t.struct("ScMetaV0", [["key", t.string()], ["val", t.string()]]), t.enum("ScMetaKind", { scMetaV0: 0 }), t.union("ScMetaEntry", { switchOn: t.lookup("ScMetaKind"), switchName: "kind", switches: [["scMetaV0", "v0"]], arms: { v0: t.lookup("ScMetaV0") } }), t.const("SC_SPEC_DOC_LIMIT", 1024), t.enum("ScSpecType", { scSpecTypeVal: 0, scSpecTypeBool: 1, scSpecTypeVoid: 2, scSpecTypeError: 3, scSpecTypeU32: 4, scSpecTypeI32: 5, scSpecTypeU64: 6, scSpecTypeI64: 7, scSpecTypeTimepoint: 8, scSpecTypeDuration: 9, scSpecTypeU128: 10, scSpecTypeI128: 11, scSpecTypeU256: 12, scSpecTypeI256: 13, scSpecTypeBytes: 14, scSpecTypeString: 16, scSpecTypeSymbol: 17, scSpecTypeAddress: 19, scSpecTypeOption: 1e3, scSpecTypeResult: 1001, scSpecTypeVec: 1002, scSpecTypeMap: 1004, scSpecTypeTuple: 1005, scSpecTypeBytesN: 1006, scSpecTypeUdt: 2e3 }), t.struct("ScSpecTypeOption", [["valueType", t.lookup("ScSpecTypeDef")]]), t.struct("ScSpecTypeResult", [["okType", t.lookup("ScSpecTypeDef")], ["errorType", t.lookup("ScSpecTypeDef")]]), t.struct("ScSpecTypeVec", [["elementType", t.lookup("ScSpecTypeDef")]]), t.struct("ScSpecTypeMap", [["keyType", t.lookup("ScSpecTypeDef")], ["valueType", t.lookup("ScSpecTypeDef")]]), t.struct("ScSpecTypeTuple", [["valueTypes", t.varArray(t.lookup("ScSpecTypeDef"), 12)]]), t.struct("ScSpecTypeBytesN", [["n", t.lookup("Uint32")]]), t.struct("ScSpecTypeUdt", [["name", t.string(60)]]), t.union("ScSpecTypeDef", { switchOn: t.lookup("ScSpecType"), switchName: "type", switches: [["scSpecTypeVal", t.void()], ["scSpecTypeBool", t.void()], ["scSpecTypeVoid", t.void()], ["scSpecTypeError", t.void()], ["scSpecTypeU32", t.void()], ["scSpecTypeI32", t.void()], ["scSpecTypeU64", t.void()], ["scSpecTypeI64", t.void()], ["scSpecTypeTimepoint", t.void()], ["scSpecTypeDuration", t.void()], ["scSpecTypeU128", t.void()], ["scSpecTypeI128", t.void()], ["scSpecTypeU256", t.void()], ["scSpecTypeI256", t.void()], ["scSpecTypeBytes", t.void()], ["scSpecTypeString", t.void()], ["scSpecTypeSymbol", t.void()], ["scSpecTypeAddress", t.void()], ["scSpecTypeOption", "option"], ["scSpecTypeResult", "result"], ["scSpecTypeVec", "vec"], ["scSpecTypeMap", "map"], ["scSpecTypeTuple", "tuple"], ["scSpecTypeBytesN", "bytesN"], ["scSpecTypeUdt", "udt"]], arms: { option: t.lookup("ScSpecTypeOption"), result: t.lookup("ScSpecTypeResult"), vec: t.lookup("ScSpecTypeVec"), map: t.lookup("ScSpecTypeMap"), tuple: t.lookup("ScSpecTypeTuple"), bytesN: t.lookup("ScSpecTypeBytesN"), udt: t.lookup("ScSpecTypeUdt") } }), t.struct("ScSpecUdtStructFieldV0", [["doc", t.string(s)], ["name", t.string(30)], ["type", t.lookup("ScSpecTypeDef")]]), t.struct("ScSpecUdtStructV0", [["doc", t.string(s)], ["lib", t.string(80)], ["name", t.string(60)], ["fields", t.varArray(t.lookup("ScSpecUdtStructFieldV0"), 40)]]), t.struct("ScSpecUdtUnionCaseVoidV0", [["doc", t.string(s)], ["name", t.string(60)]]), t.struct("ScSpecUdtUnionCaseTupleV0", [["doc", t.string(s)], ["name", t.string(60)], ["type", t.varArray(t.lookup("ScSpecTypeDef"), 12)]]), t.enum("ScSpecUdtUnionCaseV0Kind", { scSpecUdtUnionCaseVoidV0: 0, scSpecUdtUnionCaseTupleV0: 1 }), t.union("ScSpecUdtUnionCaseV0", { switchOn: t.lookup("ScSpecUdtUnionCaseV0Kind"), switchName: "kind", switches: [["scSpecUdtUnionCaseVoidV0", "voidCase"], ["scSpecUdtUnionCaseTupleV0", "tupleCase"]], arms: { voidCase: t.lookup("ScSpecUdtUnionCaseVoidV0"), tupleCase: t.lookup("ScSpecUdtUnionCaseTupleV0") } }), t.struct("ScSpecUdtUnionV0", [["doc", t.string(s)], ["lib", t.string(80)], ["name", t.string(60)], ["cases", t.varArray(t.lookup("ScSpecUdtUnionCaseV0"), 50)]]), t.struct("ScSpecUdtEnumCaseV0", [["doc", t.string(s)], ["name", t.string(60)], ["value", t.lookup("Uint32")]]), t.struct("ScSpecUdtEnumV0", [["doc", t.string(s)], ["lib", t.string(80)], ["name", t.string(60)], ["cases", t.varArray(t.lookup("ScSpecUdtEnumCaseV0"), 50)]]), t.struct("ScSpecUdtErrorEnumCaseV0", [["doc", t.string(s)], ["name", t.string(60)], ["value", t.lookup("Uint32")]]), t.struct("ScSpecUdtErrorEnumV0", [["doc", t.string(s)], ["lib", t.string(80)], ["name", t.string(60)], ["cases", t.varArray(t.lookup("ScSpecUdtErrorEnumCaseV0"), 50)]]), t.struct("ScSpecFunctionInputV0", [["doc", t.string(s)], ["name", t.string(30)], ["type", t.lookup("ScSpecTypeDef")]]), t.struct("ScSpecFunctionV0", [["doc", t.string(s)], ["name", t.lookup("ScSymbol")], ["inputs", t.varArray(t.lookup("ScSpecFunctionInputV0"), 10)], ["outputs", t.varArray(t.lookup("ScSpecTypeDef"), 1)]]), t.enum("ScSpecEntryKind", { scSpecEntryFunctionV0: 0, scSpecEntryUdtStructV0: 1, scSpecEntryUdtUnionV0: 2, scSpecEntryUdtEnumV0: 3, scSpecEntryUdtErrorEnumV0: 4 }), t.union("ScSpecEntry", { switchOn: t.lookup("ScSpecEntryKind"), switchName: "kind", switches: [["scSpecEntryFunctionV0", "functionV0"], ["scSpecEntryUdtStructV0", "udtStructV0"], ["scSpecEntryUdtUnionV0", "udtUnionV0"], ["scSpecEntryUdtEnumV0", "udtEnumV0"], ["scSpecEntryUdtErrorEnumV0", "udtErrorEnumV0"]], arms: { functionV0: t.lookup("ScSpecFunctionV0"), udtStructV0: t.lookup("ScSpecUdtStructV0"), udtUnionV0: t.lookup("ScSpecUdtUnionV0"), udtEnumV0: t.lookup("ScSpecUdtEnumV0"), udtErrorEnumV0: t.lookup("ScSpecUdtErrorEnumV0") } }), t.struct("ConfigSettingContractExecutionLanesV0", [["ledgerMaxTxCount", t.lookup("Uint32")]]), t.struct("ConfigSettingContractComputeV0", [["ledgerMaxInstructions", t.lookup("Int64")], ["txMaxInstructions", t.lookup("Int64")], ["feeRatePerInstructionsIncrement", t.lookup("Int64")], ["txMemoryLimit", t.lookup("Uint32")]]), t.struct("ConfigSettingContractLedgerCostV0", [["ledgerMaxReadLedgerEntries", t.lookup("Uint32")], ["ledgerMaxReadBytes", t.lookup("Uint32")], ["ledgerMaxWriteLedgerEntries", t.lookup("Uint32")], ["ledgerMaxWriteBytes", t.lookup("Uint32")], ["txMaxReadLedgerEntries", t.lookup("Uint32")], ["txMaxReadBytes", t.lookup("Uint32")], ["txMaxWriteLedgerEntries", t.lookup("Uint32")], ["txMaxWriteBytes", t.lookup("Uint32")], ["feeReadLedgerEntry", t.lookup("Int64")], ["feeWriteLedgerEntry", t.lookup("Int64")], ["feeRead1Kb", t.lookup("Int64")], ["bucketListTargetSizeBytes", t.lookup("Int64")], ["writeFee1KbBucketListLow", t.lookup("Int64")], ["writeFee1KbBucketListHigh", t.lookup("Int64")], ["bucketListWriteFeeGrowthFactor", t.lookup("Uint32")]]), t.struct("ConfigSettingContractHistoricalDataV0", [["feeHistorical1Kb", t.lookup("Int64")]]), t.struct("ConfigSettingContractEventsV0", [["txMaxContractEventsSizeBytes", t.lookup("Uint32")], ["feeContractEvents1Kb", t.lookup("Int64")]]), t.struct("ConfigSettingContractBandwidthV0", [["ledgerMaxTxsSizeBytes", t.lookup("Uint32")], ["txMaxSizeBytes", t.lookup("Uint32")], ["feeTxSize1Kb", t.lookup("Int64")]]), t.enum("ContractCostType", { wasmInsnExec: 0, memAlloc: 1, memCpy: 2, memCmp: 3, dispatchHostFunction: 4, visitObject: 5, valSer: 6, valDeser: 7, computeSha256Hash: 8, computeEd25519PubKey: 9, verifyEd25519Sig: 10, vmInstantiation: 11, vmCachedInstantiation: 12, invokeVmFunction: 13, computeKeccak256Hash: 14, decodeEcdsaCurve256Sig: 15, recoverEcdsaSecp256k1Key: 16, int256AddSub: 17, int256Mul: 18, int256Div: 19, int256Pow: 20, int256Shift: 21, chaCha20DrawBytes: 22, parseWasmInstructions: 23, parseWasmFunctions: 24, parseWasmGlobals: 25, parseWasmTableEntries: 26, parseWasmTypes: 27, parseWasmDataSegments: 28, parseWasmElemSegments: 29, parseWasmImports: 30, parseWasmExports: 31, parseWasmDataSegmentBytes: 32, instantiateWasmInstructions: 33, instantiateWasmFunctions: 34, instantiateWasmGlobals: 35, instantiateWasmTableEntries: 36, instantiateWasmTypes: 37, instantiateWasmDataSegments: 38, instantiateWasmElemSegments: 39, instantiateWasmImports: 40, instantiateWasmExports: 41, instantiateWasmDataSegmentBytes: 42, sec1DecodePointUncompressed: 43, verifyEcdsaSecp256r1Sig: 44, bls12381EncodeFp: 45, bls12381DecodeFp: 46, bls12381G1CheckPointOnCurve: 47, bls12381G1CheckPointInSubgroup: 48, bls12381G2CheckPointOnCurve: 49, bls12381G2CheckPointInSubgroup: 50, bls12381G1ProjectiveToAffine: 51, bls12381G2ProjectiveToAffine: 52, bls12381G1Add: 53, bls12381G1Mul: 54, bls12381G1Msm: 55, bls12381MapFpToG1: 56, bls12381HashToG1: 57, bls12381G2Add: 58, bls12381G2Mul: 59, bls12381G2Msm: 60, bls12381MapFp2ToG2: 61, bls12381HashToG2: 62, bls12381Pairing: 63, bls12381FrFromU256: 64, bls12381FrToU256: 65, bls12381FrAddSub: 66, bls12381FrMul: 67, bls12381FrPow: 68, bls12381FrInv: 69 }), t.struct("ContractCostParamEntry", [["ext", t.lookup("ExtensionPoint")], ["constTerm", t.lookup("Int64")], ["linearTerm", t.lookup("Int64")]]), t.struct("StateArchivalSettings", [["maxEntryTtl", t.lookup("Uint32")], ["minTemporaryTtl", t.lookup("Uint32")], ["minPersistentTtl", t.lookup("Uint32")], ["persistentRentRateDenominator", t.lookup("Int64")], ["tempRentRateDenominator", t.lookup("Int64")], ["maxEntriesToArchive", t.lookup("Uint32")], ["bucketListSizeWindowSampleSize", t.lookup("Uint32")], ["bucketListWindowSamplePeriod", t.lookup("Uint32")], ["evictionScanSize", t.lookup("Uint32")], ["startingEvictionScanLevel", t.lookup("Uint32")]]), t.struct("EvictionIterator", [["bucketListLevel", t.lookup("Uint32")], ["isCurrBucket", t.bool()], ["bucketFileOffset", t.lookup("Uint64")]]), t.const("CONTRACT_COST_COUNT_LIMIT", 1024), t.typedef("ContractCostParams", t.varArray(t.lookup("ContractCostParamEntry"), t.lookup("CONTRACT_COST_COUNT_LIMIT"))), t.enum("ConfigSettingId", { configSettingContractMaxSizeBytes: 0, configSettingContractComputeV0: 1, configSettingContractLedgerCostV0: 2, configSettingContractHistoricalDataV0: 3, configSettingContractEventsV0: 4, configSettingContractBandwidthV0: 5, configSettingContractCostParamsCpuInstructions: 6, configSettingContractCostParamsMemoryBytes: 7, configSettingContractDataKeySizeBytes: 8, configSettingContractDataEntrySizeBytes: 9, configSettingStateArchival: 10, configSettingContractExecutionLanes: 11, configSettingBucketlistSizeWindow: 12, configSettingEvictionIterator: 13 }), t.union("ConfigSettingEntry", { switchOn: t.lookup("ConfigSettingId"), switchName: "configSettingId", switches: [["configSettingContractMaxSizeBytes", "contractMaxSizeBytes"], ["configSettingContractComputeV0", "contractCompute"], ["configSettingContractLedgerCostV0", "contractLedgerCost"], ["configSettingContractHistoricalDataV0", "contractHistoricalData"], ["configSettingContractEventsV0", "contractEvents"], ["configSettingContractBandwidthV0", "contractBandwidth"], ["configSettingContractCostParamsCpuInstructions", "contractCostParamsCpuInsns"], ["configSettingContractCostParamsMemoryBytes", "contractCostParamsMemBytes"], ["configSettingContractDataKeySizeBytes", "contractDataKeySizeBytes"], ["configSettingContractDataEntrySizeBytes", "contractDataEntrySizeBytes"], ["configSettingStateArchival", "stateArchivalSettings"], ["configSettingContractExecutionLanes", "contractExecutionLanes"], ["configSettingBucketlistSizeWindow", "bucketListSizeWindow"], ["configSettingEvictionIterator", "evictionIterator"]], arms: { contractMaxSizeBytes: t.lookup("Uint32"), contractCompute: t.lookup("ConfigSettingContractComputeV0"), contractLedgerCost: t.lookup("ConfigSettingContractLedgerCostV0"), contractHistoricalData: t.lookup("ConfigSettingContractHistoricalDataV0"), contractEvents: t.lookup("ConfigSettingContractEventsV0"), contractBandwidth: t.lookup("ConfigSettingContractBandwidthV0"), contractCostParamsCpuInsns: t.lookup("ContractCostParams"), contractCostParamsMemBytes: t.lookup("ContractCostParams"), contractDataKeySizeBytes: t.lookup("Uint32"), contractDataEntrySizeBytes: t.lookup("Uint32"), stateArchivalSettings: t.lookup("StateArchivalSettings"), contractExecutionLanes: t.lookup("ConfigSettingContractExecutionLanesV0"), bucketListSizeWindow: t.varArray(t.lookup("Uint64"), 2147483647), evictionIterator: t.lookup("EvictionIterator") } });
    });
    v.default = y;
  }(Bc)), Bc;
}
var Bf;
function bn() {
  return Bf || (Bf = 1, function(v) {
    Object.defineProperty(v, "__esModule", { value: true }), v.default = void 0;
    var e = n(Ey());
    function n(i) {
      return i && i.__esModule ? i : { default: i };
    }
    v.default = e.default;
  }(Lc)), Lc;
}
var Nc = {}, Nf;
function Ay() {
  return Nf || (Nf = 1, function(v) {
    Object.defineProperty(v, "__esModule", { value: true }), v.default = void 0;
    var e = Ei(), n = { XdrWriter: e.XdrWriter, XdrReader: e.XdrReader };
    v.default = n;
  }(Nc)), Nc;
}
var Ks = {}, Dc = { exports: {} }, Xs = { exports: {} }, Df;
function Ma() {
  return Df || (Df = 1, typeof Object.create == "function" ? Xs.exports = function(e, n) {
    n && (e.super_ = n, e.prototype = Object.create(n.prototype, { constructor: { value: e, enumerable: false, writable: true, configurable: true } }));
  } : Xs.exports = function(e, n) {
    if (n) {
      e.super_ = n;
      var i = function() {
      };
      i.prototype = n.prototype, e.prototype = new i(), e.prototype.constructor = e;
    }
  }), Xs.exports;
}
var $s = { exports: {} };
/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
var Ff;
function aa() {
  return Ff || (Ff = 1, function(v, e) {
    var n = Xd(), i = n.Buffer;
    function u(t, o) {
      for (var s in t) o[s] = t[s];
    }
    i.from && i.alloc && i.allocUnsafe && i.allocUnsafeSlow ? v.exports = n : (u(n, e), e.Buffer = y);
    function y(t, o, s) {
      return i(t, o, s);
    }
    y.prototype = Object.create(i.prototype), u(i, y), y.from = function(t, o, s) {
      if (typeof t == "number") throw new TypeError("Argument must not be a number");
      return i(t, o, s);
    }, y.alloc = function(t, o, s) {
      if (typeof t != "number") throw new TypeError("Argument must be a number");
      var c = i(t);
      return o !== void 0 ? typeof s == "string" ? c.fill(o, s) : c.fill(o) : c.fill(0), c;
    }, y.allocUnsafe = function(t) {
      if (typeof t != "number") throw new TypeError("Argument must be a number");
      return i(t);
    }, y.allocUnsafeSlow = function(t) {
      if (typeof t != "number") throw new TypeError("Argument must be a number");
      return n.SlowBuffer(t);
    };
  }($s, $s.exports)), $s.exports;
}
var Fc, Uf;
function Ia() {
  if (Uf) return Fc;
  Uf = 1;
  var v = aa().Buffer;
  function e(n, i) {
    this._block = v.alloc(n), this._finalSize = i, this._blockSize = n, this._len = 0;
  }
  return e.prototype.update = function(n, i) {
    typeof n == "string" && (i = i || "utf8", n = v.from(n, i));
    for (var u = this._block, y = this._blockSize, t = n.length, o = this._len, s = 0; s < t; ) {
      for (var c = o % y, h = Math.min(t - s, y - c), f = 0; f < h; f++) u[c + f] = n[s + f];
      o += h, s += h, o % y === 0 && this._update(u);
    }
    return this._len += t, this;
  }, e.prototype.digest = function(n) {
    var i = this._len % this._blockSize;
    this._block[i] = 128, this._block.fill(0, i + 1), i >= this._finalSize && (this._update(this._block), this._block.fill(0));
    var u = this._len * 8;
    if (u <= 4294967295) this._block.writeUInt32BE(u, this._blockSize - 4);
    else {
      var y = (u & 4294967295) >>> 0, t = (u - y) / 4294967296;
      this._block.writeUInt32BE(t, this._blockSize - 8), this._block.writeUInt32BE(y, this._blockSize - 4);
    }
    this._update(this._block);
    var o = this._hash();
    return n ? o.toString(n) : o;
  }, e.prototype._update = function() {
    throw new Error("_update must be implemented by subclass");
  }, Fc = e, Fc;
}
var Uc, jf;
function xy() {
  if (jf) return Uc;
  jf = 1;
  var v = Ma(), e = Ia(), n = aa().Buffer, i = [1518500249, 1859775393, -1894007588, -899497514], u = new Array(80);
  function y() {
    this.init(), this._w = u, e.call(this, 64, 56);
  }
  v(y, e), y.prototype.init = function() {
    return this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520, this;
  };
  function t(c) {
    return c << 5 | c >>> 27;
  }
  function o(c) {
    return c << 30 | c >>> 2;
  }
  function s(c, h, f, r) {
    return c === 0 ? h & f | ~h & r : c === 2 ? h & f | h & r | f & r : h ^ f ^ r;
  }
  return y.prototype._update = function(c) {
    for (var h = this._w, f = this._a | 0, r = this._b | 0, m = this._c | 0, g = this._d | 0, a = this._e | 0, l = 0; l < 16; ++l) h[l] = c.readInt32BE(l * 4);
    for (; l < 80; ++l) h[l] = h[l - 3] ^ h[l - 8] ^ h[l - 14] ^ h[l - 16];
    for (var d = 0; d < 80; ++d) {
      var b = ~~(d / 20), S = t(f) + s(b, r, m, g) + a + h[d] + i[b] | 0;
      a = g, g = m, m = o(r), r = f, f = S;
    }
    this._a = f + this._a | 0, this._b = r + this._b | 0, this._c = m + this._c | 0, this._d = g + this._d | 0, this._e = a + this._e | 0;
  }, y.prototype._hash = function() {
    var c = n.allocUnsafe(20);
    return c.writeInt32BE(this._a | 0, 0), c.writeInt32BE(this._b | 0, 4), c.writeInt32BE(this._c | 0, 8), c.writeInt32BE(this._d | 0, 12), c.writeInt32BE(this._e | 0, 16), c;
  }, Uc = y, Uc;
}
var jc, Vf;
function Ty() {
  if (Vf) return jc;
  Vf = 1;
  var v = Ma(), e = Ia(), n = aa().Buffer, i = [1518500249, 1859775393, -1894007588, -899497514], u = new Array(80);
  function y() {
    this.init(), this._w = u, e.call(this, 64, 56);
  }
  v(y, e), y.prototype.init = function() {
    return this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520, this;
  };
  function t(h) {
    return h << 1 | h >>> 31;
  }
  function o(h) {
    return h << 5 | h >>> 27;
  }
  function s(h) {
    return h << 30 | h >>> 2;
  }
  function c(h, f, r, m) {
    return h === 0 ? f & r | ~f & m : h === 2 ? f & r | f & m | r & m : f ^ r ^ m;
  }
  return y.prototype._update = function(h) {
    for (var f = this._w, r = this._a | 0, m = this._b | 0, g = this._c | 0, a = this._d | 0, l = this._e | 0, d = 0; d < 16; ++d) f[d] = h.readInt32BE(d * 4);
    for (; d < 80; ++d) f[d] = t(f[d - 3] ^ f[d - 8] ^ f[d - 14] ^ f[d - 16]);
    for (var b = 0; b < 80; ++b) {
      var S = ~~(b / 20), E = o(r) + c(S, m, g, a) + l + f[b] + i[S] | 0;
      l = a, a = g, g = s(m), m = r, r = E;
    }
    this._a = r + this._a | 0, this._b = m + this._b | 0, this._c = g + this._c | 0, this._d = a + this._d | 0, this._e = l + this._e | 0;
  }, y.prototype._hash = function() {
    var h = n.allocUnsafe(20);
    return h.writeInt32BE(this._a | 0, 0), h.writeInt32BE(this._b | 0, 4), h.writeInt32BE(this._c | 0, 8), h.writeInt32BE(this._d | 0, 12), h.writeInt32BE(this._e | 0, 16), h;
  }, jc = y, jc;
}
var Vc, qf;
function $d() {
  if (qf) return Vc;
  qf = 1;
  var v = Ma(), e = Ia(), n = aa().Buffer, i = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298], u = new Array(64);
  function y() {
    this.init(), this._w = u, e.call(this, 64, 56);
  }
  v(y, e), y.prototype.init = function() {
    return this._a = 1779033703, this._b = 3144134277, this._c = 1013904242, this._d = 2773480762, this._e = 1359893119, this._f = 2600822924, this._g = 528734635, this._h = 1541459225, this;
  };
  function t(r, m, g) {
    return g ^ r & (m ^ g);
  }
  function o(r, m, g) {
    return r & m | g & (r | m);
  }
  function s(r) {
    return (r >>> 2 | r << 30) ^ (r >>> 13 | r << 19) ^ (r >>> 22 | r << 10);
  }
  function c(r) {
    return (r >>> 6 | r << 26) ^ (r >>> 11 | r << 21) ^ (r >>> 25 | r << 7);
  }
  function h(r) {
    return (r >>> 7 | r << 25) ^ (r >>> 18 | r << 14) ^ r >>> 3;
  }
  function f(r) {
    return (r >>> 17 | r << 15) ^ (r >>> 19 | r << 13) ^ r >>> 10;
  }
  return y.prototype._update = function(r) {
    for (var m = this._w, g = this._a | 0, a = this._b | 0, l = this._c | 0, d = this._d | 0, b = this._e | 0, S = this._f | 0, E = this._g | 0, R = this._h | 0, k = 0; k < 16; ++k) m[k] = r.readInt32BE(k * 4);
    for (; k < 64; ++k) m[k] = f(m[k - 2]) + m[k - 7] + h(m[k - 15]) + m[k - 16] | 0;
    for (var w = 0; w < 64; ++w) {
      var F = R + c(b) + t(b, S, E) + i[w] + m[w] | 0, I = s(g) + o(g, a, l) | 0;
      R = E, E = S, S = b, b = d + F | 0, d = l, l = a, a = g, g = F + I | 0;
    }
    this._a = g + this._a | 0, this._b = a + this._b | 0, this._c = l + this._c | 0, this._d = d + this._d | 0, this._e = b + this._e | 0, this._f = S + this._f | 0, this._g = E + this._g | 0, this._h = R + this._h | 0;
  }, y.prototype._hash = function() {
    var r = n.allocUnsafe(32);
    return r.writeInt32BE(this._a, 0), r.writeInt32BE(this._b, 4), r.writeInt32BE(this._c, 8), r.writeInt32BE(this._d, 12), r.writeInt32BE(this._e, 16), r.writeInt32BE(this._f, 20), r.writeInt32BE(this._g, 24), r.writeInt32BE(this._h, 28), r;
  }, Vc = y, Vc;
}
var qc, zf;
function ky() {
  if (zf) return qc;
  zf = 1;
  var v = Ma(), e = $d(), n = Ia(), i = aa().Buffer, u = new Array(64);
  function y() {
    this.init(), this._w = u, n.call(this, 64, 56);
  }
  return v(y, e), y.prototype.init = function() {
    return this._a = 3238371032, this._b = 914150663, this._c = 812702999, this._d = 4144912697, this._e = 4290775857, this._f = 1750603025, this._g = 1694076839, this._h = 3204075428, this;
  }, y.prototype._hash = function() {
    var t = i.allocUnsafe(28);
    return t.writeInt32BE(this._a, 0), t.writeInt32BE(this._b, 4), t.writeInt32BE(this._c, 8), t.writeInt32BE(this._d, 12), t.writeInt32BE(this._e, 16), t.writeInt32BE(this._f, 20), t.writeInt32BE(this._g, 24), t;
  }, qc = y, qc;
}
var zc, Hf;
function Yd() {
  if (Hf) return zc;
  Hf = 1;
  var v = Ma(), e = Ia(), n = aa().Buffer, i = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591], u = new Array(160);
  function y() {
    this.init(), this._w = u, e.call(this, 128, 112);
  }
  v(y, e), y.prototype.init = function() {
    return this._ah = 1779033703, this._bh = 3144134277, this._ch = 1013904242, this._dh = 2773480762, this._eh = 1359893119, this._fh = 2600822924, this._gh = 528734635, this._hh = 1541459225, this._al = 4089235720, this._bl = 2227873595, this._cl = 4271175723, this._dl = 1595750129, this._el = 2917565137, this._fl = 725511199, this._gl = 4215389547, this._hl = 327033209, this;
  };
  function t(a, l, d) {
    return d ^ a & (l ^ d);
  }
  function o(a, l, d) {
    return a & l | d & (a | l);
  }
  function s(a, l) {
    return (a >>> 28 | l << 4) ^ (l >>> 2 | a << 30) ^ (l >>> 7 | a << 25);
  }
  function c(a, l) {
    return (a >>> 14 | l << 18) ^ (a >>> 18 | l << 14) ^ (l >>> 9 | a << 23);
  }
  function h(a, l) {
    return (a >>> 1 | l << 31) ^ (a >>> 8 | l << 24) ^ a >>> 7;
  }
  function f(a, l) {
    return (a >>> 1 | l << 31) ^ (a >>> 8 | l << 24) ^ (a >>> 7 | l << 25);
  }
  function r(a, l) {
    return (a >>> 19 | l << 13) ^ (l >>> 29 | a << 3) ^ a >>> 6;
  }
  function m(a, l) {
    return (a >>> 19 | l << 13) ^ (l >>> 29 | a << 3) ^ (a >>> 6 | l << 26);
  }
  function g(a, l) {
    return a >>> 0 < l >>> 0 ? 1 : 0;
  }
  return y.prototype._update = function(a) {
    for (var l = this._w, d = this._ah | 0, b = this._bh | 0, S = this._ch | 0, E = this._dh | 0, R = this._eh | 0, k = this._fh | 0, w = this._gh | 0, F = this._hh | 0, I = this._al | 0, q = this._bl | 0, N = this._cl | 0, H = this._dl | 0, _ = this._el | 0, x = this._fl | 0, L = this._gl | 0, j = this._hl | 0, z = 0; z < 32; z += 2) l[z] = a.readInt32BE(z * 4), l[z + 1] = a.readInt32BE(z * 4 + 4);
    for (; z < 160; z += 2) {
      var Z = l[z - 30], ue = l[z - 15 * 2 + 1], $ = h(Z, ue), X = f(ue, Z);
      Z = l[z - 2 * 2], ue = l[z - 2 * 2 + 1];
      var J = r(Z, ue), B = m(ue, Z), Q = l[z - 7 * 2], ne = l[z - 7 * 2 + 1], K = l[z - 16 * 2], ie = l[z - 16 * 2 + 1], ce = X + ne | 0, ye = $ + Q + g(ce, X) | 0;
      ce = ce + B | 0, ye = ye + J + g(ce, B) | 0, ce = ce + ie | 0, ye = ye + K + g(ce, ie) | 0, l[z] = ye, l[z + 1] = ce;
    }
    for (var oe = 0; oe < 160; oe += 2) {
      ye = l[oe], ce = l[oe + 1];
      var se = o(d, b, S), re = o(I, q, N), ge = s(d, I), Te = s(I, d), pe = c(R, _), Oe = c(_, R), xe = i[oe], Ve = i[oe + 1], _e = t(R, k, w), Be = t(_, x, L), Qe = j + Oe | 0, ee = F + pe + g(Qe, j) | 0;
      Qe = Qe + Be | 0, ee = ee + _e + g(Qe, Be) | 0, Qe = Qe + Ve | 0, ee = ee + xe + g(Qe, Ve) | 0, Qe = Qe + ce | 0, ee = ee + ye + g(Qe, ce) | 0;
      var P = Te + re | 0, T = ge + se + g(P, Te) | 0;
      F = w, j = L, w = k, L = x, k = R, x = _, _ = H + Qe | 0, R = E + ee + g(_, H) | 0, E = S, H = N, S = b, N = q, b = d, q = I, I = Qe + P | 0, d = ee + T + g(I, Qe) | 0;
    }
    this._al = this._al + I | 0, this._bl = this._bl + q | 0, this._cl = this._cl + N | 0, this._dl = this._dl + H | 0, this._el = this._el + _ | 0, this._fl = this._fl + x | 0, this._gl = this._gl + L | 0, this._hl = this._hl + j | 0, this._ah = this._ah + d + g(this._al, I) | 0, this._bh = this._bh + b + g(this._bl, q) | 0, this._ch = this._ch + S + g(this._cl, N) | 0, this._dh = this._dh + E + g(this._dl, H) | 0, this._eh = this._eh + R + g(this._el, _) | 0, this._fh = this._fh + k + g(this._fl, x) | 0, this._gh = this._gh + w + g(this._gl, L) | 0, this._hh = this._hh + F + g(this._hl, j) | 0;
  }, y.prototype._hash = function() {
    var a = n.allocUnsafe(64);
    function l(d, b, S) {
      a.writeInt32BE(d, S), a.writeInt32BE(b, S + 4);
    }
    return l(this._ah, this._al, 0), l(this._bh, this._bl, 8), l(this._ch, this._cl, 16), l(this._dh, this._dl, 24), l(this._eh, this._el, 32), l(this._fh, this._fl, 40), l(this._gh, this._gl, 48), l(this._hh, this._hl, 56), a;
  }, zc = y, zc;
}
var Hc, Gf;
function Oy() {
  if (Gf) return Hc;
  Gf = 1;
  var v = Ma(), e = Yd(), n = Ia(), i = aa().Buffer, u = new Array(160);
  function y() {
    this.init(), this._w = u, n.call(this, 128, 112);
  }
  return v(y, e), y.prototype.init = function() {
    return this._ah = 3418070365, this._bh = 1654270250, this._ch = 2438529370, this._dh = 355462360, this._eh = 1731405415, this._fh = 2394180231, this._gh = 3675008525, this._hh = 1203062813, this._al = 3238371032, this._bl = 914150663, this._cl = 812702999, this._dl = 4144912697, this._el = 4290775857, this._fl = 1750603025, this._gl = 1694076839, this._hl = 3204075428, this;
  }, y.prototype._hash = function() {
    var t = i.allocUnsafe(48);
    function o(s, c, h) {
      t.writeInt32BE(s, h), t.writeInt32BE(c, h + 4);
    }
    return o(this._ah, this._al, 0), o(this._bh, this._bl, 8), o(this._ch, this._cl, 16), o(this._dh, this._dl, 24), o(this._eh, this._el, 32), o(this._fh, this._fl, 40), t;
  }, Hc = y, Hc;
}
var Wf;
function Py() {
  if (Wf) return Dc.exports;
  Wf = 1;
  var v = Dc.exports = function(n) {
    n = n.toLowerCase();
    var i = v[n];
    if (!i) throw new Error(n + " is not supported (we accept pull requests)");
    return new i();
  };
  return v.sha = xy(), v.sha1 = Ty(), v.sha224 = ky(), v.sha256 = $d(), v.sha384 = Oy(), v.sha512 = Yd(), Dc.exports;
}
var Kf;
function Fo() {
  if (Kf) return Ks;
  Kf = 1, Object.defineProperty(Ks, "__esModule", { value: true }), Ks.hash = e;
  var v = Py();
  function e(n) {
    var i = new v.sha256();
    return i.update(n, "utf8"), i.digest();
  }
  return Ks;
}
var ko = {};
const Cy = {}, Ry = Object.freeze(Object.defineProperty({ __proto__: null, default: Cy }, Symbol.toStringTag, { value: "Module" })), Qd = sy(Ry);
function My(v) {
  throw new Error('Could not dynamically require "' + v + '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');
}
var Gc = { exports: {} }, Xf;
function Zd() {
  return Xf || (Xf = 1, function(v) {
    (function(e) {
      var n = function(Pe) {
        var $e, le = new Float64Array(16);
        if (Pe) for ($e = 0; $e < Pe.length; $e++) le[$e] = Pe[$e];
        return le;
      }, i = function() {
        throw new Error("no PRNG");
      }, u = new Uint8Array(16), y = new Uint8Array(32);
      y[0] = 9;
      var t = n(), o = n([1]), s = n([56129, 1]), c = n([30883, 4953, 19914, 30187, 55467, 16705, 2637, 112, 59544, 30585, 16505, 36039, 65139, 11119, 27886, 20995]), h = n([61785, 9906, 39828, 60374, 45398, 33411, 5274, 224, 53552, 61171, 33010, 6542, 64743, 22239, 55772, 9222]), f = n([54554, 36645, 11616, 51542, 42930, 38181, 51040, 26924, 56412, 64982, 57905, 49316, 21502, 52590, 14035, 8553]), r = n([26200, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214]), m = n([41136, 18958, 6951, 50414, 58488, 44335, 6150, 12099, 55207, 15867, 153, 11085, 57099, 20417, 9344, 11139]);
      function g(Pe, $e, le, te) {
        Pe[$e] = le >> 24 & 255, Pe[$e + 1] = le >> 16 & 255, Pe[$e + 2] = le >> 8 & 255, Pe[$e + 3] = le & 255, Pe[$e + 4] = te >> 24 & 255, Pe[$e + 5] = te >> 16 & 255, Pe[$e + 6] = te >> 8 & 255, Pe[$e + 7] = te & 255;
      }
      function a(Pe, $e, le, te, Le) {
        var nt, ft = 0;
        for (nt = 0; nt < Le; nt++) ft |= Pe[$e + nt] ^ le[te + nt];
        return (1 & ft - 1 >>> 8) - 1;
      }
      function l(Pe, $e, le, te) {
        return a(Pe, $e, le, te, 16);
      }
      function d(Pe, $e, le, te) {
        return a(Pe, $e, le, te, 32);
      }
      function b(Pe, $e, le, te) {
        for (var Le = te[0] & 255 | (te[1] & 255) << 8 | (te[2] & 255) << 16 | (te[3] & 255) << 24, nt = le[0] & 255 | (le[1] & 255) << 8 | (le[2] & 255) << 16 | (le[3] & 255) << 24, ft = le[4] & 255 | (le[5] & 255) << 8 | (le[6] & 255) << 16 | (le[7] & 255) << 24, zt = le[8] & 255 | (le[9] & 255) << 8 | (le[10] & 255) << 16 | (le[11] & 255) << 24, st = le[12] & 255 | (le[13] & 255) << 8 | (le[14] & 255) << 16 | (le[15] & 255) << 24, ct = te[4] & 255 | (te[5] & 255) << 8 | (te[6] & 255) << 16 | (te[7] & 255) << 24, yt = $e[0] & 255 | ($e[1] & 255) << 8 | ($e[2] & 255) << 16 | ($e[3] & 255) << 24, Zt = $e[4] & 255 | ($e[5] & 255) << 8 | ($e[6] & 255) << 16 | ($e[7] & 255) << 24, Ct = $e[8] & 255 | ($e[9] & 255) << 8 | ($e[10] & 255) << 16 | ($e[11] & 255) << 24, Lt = $e[12] & 255 | ($e[13] & 255) << 8 | ($e[14] & 255) << 16 | ($e[15] & 255) << 24, Wt = te[8] & 255 | (te[9] & 255) << 8 | (te[10] & 255) << 16 | (te[11] & 255) << 24, vr = le[16] & 255 | (le[17] & 255) << 8 | (le[18] & 255) << 16 | (le[19] & 255) << 24, ar = le[20] & 255 | (le[21] & 255) << 8 | (le[22] & 255) << 16 | (le[23] & 255) << 24, sr = le[24] & 255 | (le[25] & 255) << 8 | (le[26] & 255) << 16 | (le[27] & 255) << 24, gr = le[28] & 255 | (le[29] & 255) << 8 | (le[30] & 255) << 16 | (le[31] & 255) << 24, Tr = te[12] & 255 | (te[13] & 255) << 8 | (te[14] & 255) << 16 | (te[15] & 255) << 24, Mr = Le, Nr = nt, Lr = ft, jr = zt, Hr = st, kr = ct, Xt = yt, Qt = Zt, br = Ct, we = Lt, me = Wt, ze = vr, rt = ar, Tt = sr, Ot = gr, It = Tr, We, mt = 0; mt < 20; mt += 2) We = Mr + rt | 0, Hr ^= We << 7 | We >>> 25, We = Hr + Mr | 0, br ^= We << 9 | We >>> 23, We = br + Hr | 0, rt ^= We << 13 | We >>> 19, We = rt + br | 0, Mr ^= We << 18 | We >>> 14, We = kr + Nr | 0, we ^= We << 7 | We >>> 25, We = we + kr | 0, Tt ^= We << 9 | We >>> 23, We = Tt + we | 0, Nr ^= We << 13 | We >>> 19, We = Nr + Tt | 0, kr ^= We << 18 | We >>> 14, We = me + Xt | 0, Ot ^= We << 7 | We >>> 25, We = Ot + me | 0, Lr ^= We << 9 | We >>> 23, We = Lr + Ot | 0, Xt ^= We << 13 | We >>> 19, We = Xt + Lr | 0, me ^= We << 18 | We >>> 14, We = It + ze | 0, jr ^= We << 7 | We >>> 25, We = jr + It | 0, Qt ^= We << 9 | We >>> 23, We = Qt + jr | 0, ze ^= We << 13 | We >>> 19, We = ze + Qt | 0, It ^= We << 18 | We >>> 14, We = Mr + jr | 0, Nr ^= We << 7 | We >>> 25, We = Nr + Mr | 0, Lr ^= We << 9 | We >>> 23, We = Lr + Nr | 0, jr ^= We << 13 | We >>> 19, We = jr + Lr | 0, Mr ^= We << 18 | We >>> 14, We = kr + Hr | 0, Xt ^= We << 7 | We >>> 25, We = Xt + kr | 0, Qt ^= We << 9 | We >>> 23, We = Qt + Xt | 0, Hr ^= We << 13 | We >>> 19, We = Hr + Qt | 0, kr ^= We << 18 | We >>> 14, We = me + we | 0, ze ^= We << 7 | We >>> 25, We = ze + me | 0, br ^= We << 9 | We >>> 23, We = br + ze | 0, we ^= We << 13 | We >>> 19, We = we + br | 0, me ^= We << 18 | We >>> 14, We = It + Ot | 0, rt ^= We << 7 | We >>> 25, We = rt + It | 0, Tt ^= We << 9 | We >>> 23, We = Tt + rt | 0, Ot ^= We << 13 | We >>> 19, We = Ot + Tt | 0, It ^= We << 18 | We >>> 14;
        Mr = Mr + Le | 0, Nr = Nr + nt | 0, Lr = Lr + ft | 0, jr = jr + zt | 0, Hr = Hr + st | 0, kr = kr + ct | 0, Xt = Xt + yt | 0, Qt = Qt + Zt | 0, br = br + Ct | 0, we = we + Lt | 0, me = me + Wt | 0, ze = ze + vr | 0, rt = rt + ar | 0, Tt = Tt + sr | 0, Ot = Ot + gr | 0, It = It + Tr | 0, Pe[0] = Mr >>> 0 & 255, Pe[1] = Mr >>> 8 & 255, Pe[2] = Mr >>> 16 & 255, Pe[3] = Mr >>> 24 & 255, Pe[4] = Nr >>> 0 & 255, Pe[5] = Nr >>> 8 & 255, Pe[6] = Nr >>> 16 & 255, Pe[7] = Nr >>> 24 & 255, Pe[8] = Lr >>> 0 & 255, Pe[9] = Lr >>> 8 & 255, Pe[10] = Lr >>> 16 & 255, Pe[11] = Lr >>> 24 & 255, Pe[12] = jr >>> 0 & 255, Pe[13] = jr >>> 8 & 255, Pe[14] = jr >>> 16 & 255, Pe[15] = jr >>> 24 & 255, Pe[16] = Hr >>> 0 & 255, Pe[17] = Hr >>> 8 & 255, Pe[18] = Hr >>> 16 & 255, Pe[19] = Hr >>> 24 & 255, Pe[20] = kr >>> 0 & 255, Pe[21] = kr >>> 8 & 255, Pe[22] = kr >>> 16 & 255, Pe[23] = kr >>> 24 & 255, Pe[24] = Xt >>> 0 & 255, Pe[25] = Xt >>> 8 & 255, Pe[26] = Xt >>> 16 & 255, Pe[27] = Xt >>> 24 & 255, Pe[28] = Qt >>> 0 & 255, Pe[29] = Qt >>> 8 & 255, Pe[30] = Qt >>> 16 & 255, Pe[31] = Qt >>> 24 & 255, Pe[32] = br >>> 0 & 255, Pe[33] = br >>> 8 & 255, Pe[34] = br >>> 16 & 255, Pe[35] = br >>> 24 & 255, Pe[36] = we >>> 0 & 255, Pe[37] = we >>> 8 & 255, Pe[38] = we >>> 16 & 255, Pe[39] = we >>> 24 & 255, Pe[40] = me >>> 0 & 255, Pe[41] = me >>> 8 & 255, Pe[42] = me >>> 16 & 255, Pe[43] = me >>> 24 & 255, Pe[44] = ze >>> 0 & 255, Pe[45] = ze >>> 8 & 255, Pe[46] = ze >>> 16 & 255, Pe[47] = ze >>> 24 & 255, Pe[48] = rt >>> 0 & 255, Pe[49] = rt >>> 8 & 255, Pe[50] = rt >>> 16 & 255, Pe[51] = rt >>> 24 & 255, Pe[52] = Tt >>> 0 & 255, Pe[53] = Tt >>> 8 & 255, Pe[54] = Tt >>> 16 & 255, Pe[55] = Tt >>> 24 & 255, Pe[56] = Ot >>> 0 & 255, Pe[57] = Ot >>> 8 & 255, Pe[58] = Ot >>> 16 & 255, Pe[59] = Ot >>> 24 & 255, Pe[60] = It >>> 0 & 255, Pe[61] = It >>> 8 & 255, Pe[62] = It >>> 16 & 255, Pe[63] = It >>> 24 & 255;
      }
      function S(Pe, $e, le, te) {
        for (var Le = te[0] & 255 | (te[1] & 255) << 8 | (te[2] & 255) << 16 | (te[3] & 255) << 24, nt = le[0] & 255 | (le[1] & 255) << 8 | (le[2] & 255) << 16 | (le[3] & 255) << 24, ft = le[4] & 255 | (le[5] & 255) << 8 | (le[6] & 255) << 16 | (le[7] & 255) << 24, zt = le[8] & 255 | (le[9] & 255) << 8 | (le[10] & 255) << 16 | (le[11] & 255) << 24, st = le[12] & 255 | (le[13] & 255) << 8 | (le[14] & 255) << 16 | (le[15] & 255) << 24, ct = te[4] & 255 | (te[5] & 255) << 8 | (te[6] & 255) << 16 | (te[7] & 255) << 24, yt = $e[0] & 255 | ($e[1] & 255) << 8 | ($e[2] & 255) << 16 | ($e[3] & 255) << 24, Zt = $e[4] & 255 | ($e[5] & 255) << 8 | ($e[6] & 255) << 16 | ($e[7] & 255) << 24, Ct = $e[8] & 255 | ($e[9] & 255) << 8 | ($e[10] & 255) << 16 | ($e[11] & 255) << 24, Lt = $e[12] & 255 | ($e[13] & 255) << 8 | ($e[14] & 255) << 16 | ($e[15] & 255) << 24, Wt = te[8] & 255 | (te[9] & 255) << 8 | (te[10] & 255) << 16 | (te[11] & 255) << 24, vr = le[16] & 255 | (le[17] & 255) << 8 | (le[18] & 255) << 16 | (le[19] & 255) << 24, ar = le[20] & 255 | (le[21] & 255) << 8 | (le[22] & 255) << 16 | (le[23] & 255) << 24, sr = le[24] & 255 | (le[25] & 255) << 8 | (le[26] & 255) << 16 | (le[27] & 255) << 24, gr = le[28] & 255 | (le[29] & 255) << 8 | (le[30] & 255) << 16 | (le[31] & 255) << 24, Tr = te[12] & 255 | (te[13] & 255) << 8 | (te[14] & 255) << 16 | (te[15] & 255) << 24, Mr = Le, Nr = nt, Lr = ft, jr = zt, Hr = st, kr = ct, Xt = yt, Qt = Zt, br = Ct, we = Lt, me = Wt, ze = vr, rt = ar, Tt = sr, Ot = gr, It = Tr, We, mt = 0; mt < 20; mt += 2) We = Mr + rt | 0, Hr ^= We << 7 | We >>> 25, We = Hr + Mr | 0, br ^= We << 9 | We >>> 23, We = br + Hr | 0, rt ^= We << 13 | We >>> 19, We = rt + br | 0, Mr ^= We << 18 | We >>> 14, We = kr + Nr | 0, we ^= We << 7 | We >>> 25, We = we + kr | 0, Tt ^= We << 9 | We >>> 23, We = Tt + we | 0, Nr ^= We << 13 | We >>> 19, We = Nr + Tt | 0, kr ^= We << 18 | We >>> 14, We = me + Xt | 0, Ot ^= We << 7 | We >>> 25, We = Ot + me | 0, Lr ^= We << 9 | We >>> 23, We = Lr + Ot | 0, Xt ^= We << 13 | We >>> 19, We = Xt + Lr | 0, me ^= We << 18 | We >>> 14, We = It + ze | 0, jr ^= We << 7 | We >>> 25, We = jr + It | 0, Qt ^= We << 9 | We >>> 23, We = Qt + jr | 0, ze ^= We << 13 | We >>> 19, We = ze + Qt | 0, It ^= We << 18 | We >>> 14, We = Mr + jr | 0, Nr ^= We << 7 | We >>> 25, We = Nr + Mr | 0, Lr ^= We << 9 | We >>> 23, We = Lr + Nr | 0, jr ^= We << 13 | We >>> 19, We = jr + Lr | 0, Mr ^= We << 18 | We >>> 14, We = kr + Hr | 0, Xt ^= We << 7 | We >>> 25, We = Xt + kr | 0, Qt ^= We << 9 | We >>> 23, We = Qt + Xt | 0, Hr ^= We << 13 | We >>> 19, We = Hr + Qt | 0, kr ^= We << 18 | We >>> 14, We = me + we | 0, ze ^= We << 7 | We >>> 25, We = ze + me | 0, br ^= We << 9 | We >>> 23, We = br + ze | 0, we ^= We << 13 | We >>> 19, We = we + br | 0, me ^= We << 18 | We >>> 14, We = It + Ot | 0, rt ^= We << 7 | We >>> 25, We = rt + It | 0, Tt ^= We << 9 | We >>> 23, We = Tt + rt | 0, Ot ^= We << 13 | We >>> 19, We = Ot + Tt | 0, It ^= We << 18 | We >>> 14;
        Pe[0] = Mr >>> 0 & 255, Pe[1] = Mr >>> 8 & 255, Pe[2] = Mr >>> 16 & 255, Pe[3] = Mr >>> 24 & 255, Pe[4] = kr >>> 0 & 255, Pe[5] = kr >>> 8 & 255, Pe[6] = kr >>> 16 & 255, Pe[7] = kr >>> 24 & 255, Pe[8] = me >>> 0 & 255, Pe[9] = me >>> 8 & 255, Pe[10] = me >>> 16 & 255, Pe[11] = me >>> 24 & 255, Pe[12] = It >>> 0 & 255, Pe[13] = It >>> 8 & 255, Pe[14] = It >>> 16 & 255, Pe[15] = It >>> 24 & 255, Pe[16] = Xt >>> 0 & 255, Pe[17] = Xt >>> 8 & 255, Pe[18] = Xt >>> 16 & 255, Pe[19] = Xt >>> 24 & 255, Pe[20] = Qt >>> 0 & 255, Pe[21] = Qt >>> 8 & 255, Pe[22] = Qt >>> 16 & 255, Pe[23] = Qt >>> 24 & 255, Pe[24] = br >>> 0 & 255, Pe[25] = br >>> 8 & 255, Pe[26] = br >>> 16 & 255, Pe[27] = br >>> 24 & 255, Pe[28] = we >>> 0 & 255, Pe[29] = we >>> 8 & 255, Pe[30] = we >>> 16 & 255, Pe[31] = we >>> 24 & 255;
      }
      function E(Pe, $e, le, te) {
        b(Pe, $e, le, te);
      }
      function R(Pe, $e, le, te) {
        S(Pe, $e, le, te);
      }
      var k = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);
      function w(Pe, $e, le, te, Le, nt, ft) {
        var zt = new Uint8Array(16), st = new Uint8Array(64), ct, yt;
        for (yt = 0; yt < 16; yt++) zt[yt] = 0;
        for (yt = 0; yt < 8; yt++) zt[yt] = nt[yt];
        for (; Le >= 64; ) {
          for (E(st, zt, ft, k), yt = 0; yt < 64; yt++) Pe[$e + yt] = le[te + yt] ^ st[yt];
          for (ct = 1, yt = 8; yt < 16; yt++) ct = ct + (zt[yt] & 255) | 0, zt[yt] = ct & 255, ct >>>= 8;
          Le -= 64, $e += 64, te += 64;
        }
        if (Le > 0) for (E(st, zt, ft, k), yt = 0; yt < Le; yt++) Pe[$e + yt] = le[te + yt] ^ st[yt];
        return 0;
      }
      function F(Pe, $e, le, te, Le) {
        var nt = new Uint8Array(16), ft = new Uint8Array(64), zt, st;
        for (st = 0; st < 16; st++) nt[st] = 0;
        for (st = 0; st < 8; st++) nt[st] = te[st];
        for (; le >= 64; ) {
          for (E(ft, nt, Le, k), st = 0; st < 64; st++) Pe[$e + st] = ft[st];
          for (zt = 1, st = 8; st < 16; st++) zt = zt + (nt[st] & 255) | 0, nt[st] = zt & 255, zt >>>= 8;
          le -= 64, $e += 64;
        }
        if (le > 0) for (E(ft, nt, Le, k), st = 0; st < le; st++) Pe[$e + st] = ft[st];
        return 0;
      }
      function I(Pe, $e, le, te, Le) {
        var nt = new Uint8Array(32);
        R(nt, te, Le, k);
        for (var ft = new Uint8Array(8), zt = 0; zt < 8; zt++) ft[zt] = te[zt + 16];
        return F(Pe, $e, le, ft, nt);
      }
      function q(Pe, $e, le, te, Le, nt, ft) {
        var zt = new Uint8Array(32);
        R(zt, nt, ft, k);
        for (var st = new Uint8Array(8), ct = 0; ct < 8; ct++) st[ct] = nt[ct + 16];
        return w(Pe, $e, le, te, Le, st, zt);
      }
      var N = function(Pe) {
        this.buffer = new Uint8Array(16), this.r = new Uint16Array(10), this.h = new Uint16Array(10), this.pad = new Uint16Array(8), this.leftover = 0, this.fin = 0;
        var $e, le, te, Le, nt, ft, zt, st;
        $e = Pe[0] & 255 | (Pe[1] & 255) << 8, this.r[0] = $e & 8191, le = Pe[2] & 255 | (Pe[3] & 255) << 8, this.r[1] = ($e >>> 13 | le << 3) & 8191, te = Pe[4] & 255 | (Pe[5] & 255) << 8, this.r[2] = (le >>> 10 | te << 6) & 7939, Le = Pe[6] & 255 | (Pe[7] & 255) << 8, this.r[3] = (te >>> 7 | Le << 9) & 8191, nt = Pe[8] & 255 | (Pe[9] & 255) << 8, this.r[4] = (Le >>> 4 | nt << 12) & 255, this.r[5] = nt >>> 1 & 8190, ft = Pe[10] & 255 | (Pe[11] & 255) << 8, this.r[6] = (nt >>> 14 | ft << 2) & 8191, zt = Pe[12] & 255 | (Pe[13] & 255) << 8, this.r[7] = (ft >>> 11 | zt << 5) & 8065, st = Pe[14] & 255 | (Pe[15] & 255) << 8, this.r[8] = (zt >>> 8 | st << 8) & 8191, this.r[9] = st >>> 5 & 127, this.pad[0] = Pe[16] & 255 | (Pe[17] & 255) << 8, this.pad[1] = Pe[18] & 255 | (Pe[19] & 255) << 8, this.pad[2] = Pe[20] & 255 | (Pe[21] & 255) << 8, this.pad[3] = Pe[22] & 255 | (Pe[23] & 255) << 8, this.pad[4] = Pe[24] & 255 | (Pe[25] & 255) << 8, this.pad[5] = Pe[26] & 255 | (Pe[27] & 255) << 8, this.pad[6] = Pe[28] & 255 | (Pe[29] & 255) << 8, this.pad[7] = Pe[30] & 255 | (Pe[31] & 255) << 8;
      };
      N.prototype.blocks = function(Pe, $e, le) {
        for (var te = this.fin ? 0 : 2048, Le, nt, ft, zt, st, ct, yt, Zt, Ct, Lt, Wt, vr, ar, sr, gr, Tr, Mr, Nr, Lr, jr = this.h[0], Hr = this.h[1], kr = this.h[2], Xt = this.h[3], Qt = this.h[4], br = this.h[5], we = this.h[6], me = this.h[7], ze = this.h[8], rt = this.h[9], Tt = this.r[0], Ot = this.r[1], It = this.r[2], We = this.r[3], mt = this.r[4], Gt = this.r[5], ir = this.r[6], dr = this.r[7], hr = this.r[8], Fr = this.r[9]; le >= 16; ) Le = Pe[$e + 0] & 255 | (Pe[$e + 1] & 255) << 8, jr += Le & 8191, nt = Pe[$e + 2] & 255 | (Pe[$e + 3] & 255) << 8, Hr += (Le >>> 13 | nt << 3) & 8191, ft = Pe[$e + 4] & 255 | (Pe[$e + 5] & 255) << 8, kr += (nt >>> 10 | ft << 6) & 8191, zt = Pe[$e + 6] & 255 | (Pe[$e + 7] & 255) << 8, Xt += (ft >>> 7 | zt << 9) & 8191, st = Pe[$e + 8] & 255 | (Pe[$e + 9] & 255) << 8, Qt += (zt >>> 4 | st << 12) & 8191, br += st >>> 1 & 8191, ct = Pe[$e + 10] & 255 | (Pe[$e + 11] & 255) << 8, we += (st >>> 14 | ct << 2) & 8191, yt = Pe[$e + 12] & 255 | (Pe[$e + 13] & 255) << 8, me += (ct >>> 11 | yt << 5) & 8191, Zt = Pe[$e + 14] & 255 | (Pe[$e + 15] & 255) << 8, ze += (yt >>> 8 | Zt << 8) & 8191, rt += Zt >>> 5 | te, Ct = 0, Lt = Ct, Lt += jr * Tt, Lt += Hr * (5 * Fr), Lt += kr * (5 * hr), Lt += Xt * (5 * dr), Lt += Qt * (5 * ir), Ct = Lt >>> 13, Lt &= 8191, Lt += br * (5 * Gt), Lt += we * (5 * mt), Lt += me * (5 * We), Lt += ze * (5 * It), Lt += rt * (5 * Ot), Ct += Lt >>> 13, Lt &= 8191, Wt = Ct, Wt += jr * Ot, Wt += Hr * Tt, Wt += kr * (5 * Fr), Wt += Xt * (5 * hr), Wt += Qt * (5 * dr), Ct = Wt >>> 13, Wt &= 8191, Wt += br * (5 * ir), Wt += we * (5 * Gt), Wt += me * (5 * mt), Wt += ze * (5 * We), Wt += rt * (5 * It), Ct += Wt >>> 13, Wt &= 8191, vr = Ct, vr += jr * It, vr += Hr * Ot, vr += kr * Tt, vr += Xt * (5 * Fr), vr += Qt * (5 * hr), Ct = vr >>> 13, vr &= 8191, vr += br * (5 * dr), vr += we * (5 * ir), vr += me * (5 * Gt), vr += ze * (5 * mt), vr += rt * (5 * We), Ct += vr >>> 13, vr &= 8191, ar = Ct, ar += jr * We, ar += Hr * It, ar += kr * Ot, ar += Xt * Tt, ar += Qt * (5 * Fr), Ct = ar >>> 13, ar &= 8191, ar += br * (5 * hr), ar += we * (5 * dr), ar += me * (5 * ir), ar += ze * (5 * Gt), ar += rt * (5 * mt), Ct += ar >>> 13, ar &= 8191, sr = Ct, sr += jr * mt, sr += Hr * We, sr += kr * It, sr += Xt * Ot, sr += Qt * Tt, Ct = sr >>> 13, sr &= 8191, sr += br * (5 * Fr), sr += we * (5 * hr), sr += me * (5 * dr), sr += ze * (5 * ir), sr += rt * (5 * Gt), Ct += sr >>> 13, sr &= 8191, gr = Ct, gr += jr * Gt, gr += Hr * mt, gr += kr * We, gr += Xt * It, gr += Qt * Ot, Ct = gr >>> 13, gr &= 8191, gr += br * Tt, gr += we * (5 * Fr), gr += me * (5 * hr), gr += ze * (5 * dr), gr += rt * (5 * ir), Ct += gr >>> 13, gr &= 8191, Tr = Ct, Tr += jr * ir, Tr += Hr * Gt, Tr += kr * mt, Tr += Xt * We, Tr += Qt * It, Ct = Tr >>> 13, Tr &= 8191, Tr += br * Ot, Tr += we * Tt, Tr += me * (5 * Fr), Tr += ze * (5 * hr), Tr += rt * (5 * dr), Ct += Tr >>> 13, Tr &= 8191, Mr = Ct, Mr += jr * dr, Mr += Hr * ir, Mr += kr * Gt, Mr += Xt * mt, Mr += Qt * We, Ct = Mr >>> 13, Mr &= 8191, Mr += br * It, Mr += we * Ot, Mr += me * Tt, Mr += ze * (5 * Fr), Mr += rt * (5 * hr), Ct += Mr >>> 13, Mr &= 8191, Nr = Ct, Nr += jr * hr, Nr += Hr * dr, Nr += kr * ir, Nr += Xt * Gt, Nr += Qt * mt, Ct = Nr >>> 13, Nr &= 8191, Nr += br * We, Nr += we * It, Nr += me * Ot, Nr += ze * Tt, Nr += rt * (5 * Fr), Ct += Nr >>> 13, Nr &= 8191, Lr = Ct, Lr += jr * Fr, Lr += Hr * hr, Lr += kr * dr, Lr += Xt * ir, Lr += Qt * Gt, Ct = Lr >>> 13, Lr &= 8191, Lr += br * mt, Lr += we * We, Lr += me * It, Lr += ze * Ot, Lr += rt * Tt, Ct += Lr >>> 13, Lr &= 8191, Ct = (Ct << 2) + Ct | 0, Ct = Ct + Lt | 0, Lt = Ct & 8191, Ct = Ct >>> 13, Wt += Ct, jr = Lt, Hr = Wt, kr = vr, Xt = ar, Qt = sr, br = gr, we = Tr, me = Mr, ze = Nr, rt = Lr, $e += 16, le -= 16;
        this.h[0] = jr, this.h[1] = Hr, this.h[2] = kr, this.h[3] = Xt, this.h[4] = Qt, this.h[5] = br, this.h[6] = we, this.h[7] = me, this.h[8] = ze, this.h[9] = rt;
      }, N.prototype.finish = function(Pe, $e) {
        var le = new Uint16Array(10), te, Le, nt, ft;
        if (this.leftover) {
          for (ft = this.leftover, this.buffer[ft++] = 1; ft < 16; ft++) this.buffer[ft] = 0;
          this.fin = 1, this.blocks(this.buffer, 0, 16);
        }
        for (te = this.h[1] >>> 13, this.h[1] &= 8191, ft = 2; ft < 10; ft++) this.h[ft] += te, te = this.h[ft] >>> 13, this.h[ft] &= 8191;
        for (this.h[0] += te * 5, te = this.h[0] >>> 13, this.h[0] &= 8191, this.h[1] += te, te = this.h[1] >>> 13, this.h[1] &= 8191, this.h[2] += te, le[0] = this.h[0] + 5, te = le[0] >>> 13, le[0] &= 8191, ft = 1; ft < 10; ft++) le[ft] = this.h[ft] + te, te = le[ft] >>> 13, le[ft] &= 8191;
        for (le[9] -= 8192, Le = (te ^ 1) - 1, ft = 0; ft < 10; ft++) le[ft] &= Le;
        for (Le = ~Le, ft = 0; ft < 10; ft++) this.h[ft] = this.h[ft] & Le | le[ft];
        for (this.h[0] = (this.h[0] | this.h[1] << 13) & 65535, this.h[1] = (this.h[1] >>> 3 | this.h[2] << 10) & 65535, this.h[2] = (this.h[2] >>> 6 | this.h[3] << 7) & 65535, this.h[3] = (this.h[3] >>> 9 | this.h[4] << 4) & 65535, this.h[4] = (this.h[4] >>> 12 | this.h[5] << 1 | this.h[6] << 14) & 65535, this.h[5] = (this.h[6] >>> 2 | this.h[7] << 11) & 65535, this.h[6] = (this.h[7] >>> 5 | this.h[8] << 8) & 65535, this.h[7] = (this.h[8] >>> 8 | this.h[9] << 5) & 65535, nt = this.h[0] + this.pad[0], this.h[0] = nt & 65535, ft = 1; ft < 8; ft++) nt = (this.h[ft] + this.pad[ft] | 0) + (nt >>> 16) | 0, this.h[ft] = nt & 65535;
        Pe[$e + 0] = this.h[0] >>> 0 & 255, Pe[$e + 1] = this.h[0] >>> 8 & 255, Pe[$e + 2] = this.h[1] >>> 0 & 255, Pe[$e + 3] = this.h[1] >>> 8 & 255, Pe[$e + 4] = this.h[2] >>> 0 & 255, Pe[$e + 5] = this.h[2] >>> 8 & 255, Pe[$e + 6] = this.h[3] >>> 0 & 255, Pe[$e + 7] = this.h[3] >>> 8 & 255, Pe[$e + 8] = this.h[4] >>> 0 & 255, Pe[$e + 9] = this.h[4] >>> 8 & 255, Pe[$e + 10] = this.h[5] >>> 0 & 255, Pe[$e + 11] = this.h[5] >>> 8 & 255, Pe[$e + 12] = this.h[6] >>> 0 & 255, Pe[$e + 13] = this.h[6] >>> 8 & 255, Pe[$e + 14] = this.h[7] >>> 0 & 255, Pe[$e + 15] = this.h[7] >>> 8 & 255;
      }, N.prototype.update = function(Pe, $e, le) {
        var te, Le;
        if (this.leftover) {
          for (Le = 16 - this.leftover, Le > le && (Le = le), te = 0; te < Le; te++) this.buffer[this.leftover + te] = Pe[$e + te];
          if (le -= Le, $e += Le, this.leftover += Le, this.leftover < 16) return;
          this.blocks(this.buffer, 0, 16), this.leftover = 0;
        }
        if (le >= 16 && (Le = le - le % 16, this.blocks(Pe, $e, Le), $e += Le, le -= Le), le) {
          for (te = 0; te < le; te++) this.buffer[this.leftover + te] = Pe[$e + te];
          this.leftover += le;
        }
      };
      function H(Pe, $e, le, te, Le, nt) {
        var ft = new N(nt);
        return ft.update(le, te, Le), ft.finish(Pe, $e), 0;
      }
      function _(Pe, $e, le, te, Le, nt) {
        var ft = new Uint8Array(16);
        return H(ft, 0, le, te, Le, nt), l(Pe, $e, ft, 0);
      }
      function x(Pe, $e, le, te, Le) {
        var nt;
        if (le < 32) return -1;
        for (q(Pe, 0, $e, 0, le, te, Le), H(Pe, 16, Pe, 32, le - 32, Pe), nt = 0; nt < 16; nt++) Pe[nt] = 0;
        return 0;
      }
      function L(Pe, $e, le, te, Le) {
        var nt, ft = new Uint8Array(32);
        if (le < 32 || (I(ft, 0, 32, te, Le), _($e, 16, $e, 32, le - 32, ft) !== 0)) return -1;
        for (q(Pe, 0, $e, 0, le, te, Le), nt = 0; nt < 32; nt++) Pe[nt] = 0;
        return 0;
      }
      function j(Pe, $e) {
        var le;
        for (le = 0; le < 16; le++) Pe[le] = $e[le] | 0;
      }
      function z(Pe) {
        var $e, le, te = 1;
        for ($e = 0; $e < 16; $e++) le = Pe[$e] + te + 65535, te = Math.floor(le / 65536), Pe[$e] = le - te * 65536;
        Pe[0] += te - 1 + 37 * (te - 1);
      }
      function Z(Pe, $e, le) {
        for (var te, Le = ~(le - 1), nt = 0; nt < 16; nt++) te = Le & (Pe[nt] ^ $e[nt]), Pe[nt] ^= te, $e[nt] ^= te;
      }
      function ue(Pe, $e) {
        var le, te, Le, nt = n(), ft = n();
        for (le = 0; le < 16; le++) ft[le] = $e[le];
        for (z(ft), z(ft), z(ft), te = 0; te < 2; te++) {
          for (nt[0] = ft[0] - 65517, le = 1; le < 15; le++) nt[le] = ft[le] - 65535 - (nt[le - 1] >> 16 & 1), nt[le - 1] &= 65535;
          nt[15] = ft[15] - 32767 - (nt[14] >> 16 & 1), Le = nt[15] >> 16 & 1, nt[14] &= 65535, Z(ft, nt, 1 - Le);
        }
        for (le = 0; le < 16; le++) Pe[2 * le] = ft[le] & 255, Pe[2 * le + 1] = ft[le] >> 8;
      }
      function $(Pe, $e) {
        var le = new Uint8Array(32), te = new Uint8Array(32);
        return ue(le, Pe), ue(te, $e), d(le, 0, te, 0);
      }
      function X(Pe) {
        var $e = new Uint8Array(32);
        return ue($e, Pe), $e[0] & 1;
      }
      function J(Pe, $e) {
        var le;
        for (le = 0; le < 16; le++) Pe[le] = $e[2 * le] + ($e[2 * le + 1] << 8);
        Pe[15] &= 32767;
      }
      function B(Pe, $e, le) {
        for (var te = 0; te < 16; te++) Pe[te] = $e[te] + le[te];
      }
      function Q(Pe, $e, le) {
        for (var te = 0; te < 16; te++) Pe[te] = $e[te] - le[te];
      }
      function ne(Pe, $e, le) {
        var te, Le, nt = 0, ft = 0, zt = 0, st = 0, ct = 0, yt = 0, Zt = 0, Ct = 0, Lt = 0, Wt = 0, vr = 0, ar = 0, sr = 0, gr = 0, Tr = 0, Mr = 0, Nr = 0, Lr = 0, jr = 0, Hr = 0, kr = 0, Xt = 0, Qt = 0, br = 0, we = 0, me = 0, ze = 0, rt = 0, Tt = 0, Ot = 0, It = 0, We = le[0], mt = le[1], Gt = le[2], ir = le[3], dr = le[4], hr = le[5], Fr = le[6], Gr = le[7], Br = le[8], Dr = le[9], Vr = le[10], be = le[11], Or = le[12], Ue = le[13], it = le[14], dt = le[15];
        te = $e[0], nt += te * We, ft += te * mt, zt += te * Gt, st += te * ir, ct += te * dr, yt += te * hr, Zt += te * Fr, Ct += te * Gr, Lt += te * Br, Wt += te * Dr, vr += te * Vr, ar += te * be, sr += te * Or, gr += te * Ue, Tr += te * it, Mr += te * dt, te = $e[1], ft += te * We, zt += te * mt, st += te * Gt, ct += te * ir, yt += te * dr, Zt += te * hr, Ct += te * Fr, Lt += te * Gr, Wt += te * Br, vr += te * Dr, ar += te * Vr, sr += te * be, gr += te * Or, Tr += te * Ue, Mr += te * it, Nr += te * dt, te = $e[2], zt += te * We, st += te * mt, ct += te * Gt, yt += te * ir, Zt += te * dr, Ct += te * hr, Lt += te * Fr, Wt += te * Gr, vr += te * Br, ar += te * Dr, sr += te * Vr, gr += te * be, Tr += te * Or, Mr += te * Ue, Nr += te * it, Lr += te * dt, te = $e[3], st += te * We, ct += te * mt, yt += te * Gt, Zt += te * ir, Ct += te * dr, Lt += te * hr, Wt += te * Fr, vr += te * Gr, ar += te * Br, sr += te * Dr, gr += te * Vr, Tr += te * be, Mr += te * Or, Nr += te * Ue, Lr += te * it, jr += te * dt, te = $e[4], ct += te * We, yt += te * mt, Zt += te * Gt, Ct += te * ir, Lt += te * dr, Wt += te * hr, vr += te * Fr, ar += te * Gr, sr += te * Br, gr += te * Dr, Tr += te * Vr, Mr += te * be, Nr += te * Or, Lr += te * Ue, jr += te * it, Hr += te * dt, te = $e[5], yt += te * We, Zt += te * mt, Ct += te * Gt, Lt += te * ir, Wt += te * dr, vr += te * hr, ar += te * Fr, sr += te * Gr, gr += te * Br, Tr += te * Dr, Mr += te * Vr, Nr += te * be, Lr += te * Or, jr += te * Ue, Hr += te * it, kr += te * dt, te = $e[6], Zt += te * We, Ct += te * mt, Lt += te * Gt, Wt += te * ir, vr += te * dr, ar += te * hr, sr += te * Fr, gr += te * Gr, Tr += te * Br, Mr += te * Dr, Nr += te * Vr, Lr += te * be, jr += te * Or, Hr += te * Ue, kr += te * it, Xt += te * dt, te = $e[7], Ct += te * We, Lt += te * mt, Wt += te * Gt, vr += te * ir, ar += te * dr, sr += te * hr, gr += te * Fr, Tr += te * Gr, Mr += te * Br, Nr += te * Dr, Lr += te * Vr, jr += te * be, Hr += te * Or, kr += te * Ue, Xt += te * it, Qt += te * dt, te = $e[8], Lt += te * We, Wt += te * mt, vr += te * Gt, ar += te * ir, sr += te * dr, gr += te * hr, Tr += te * Fr, Mr += te * Gr, Nr += te * Br, Lr += te * Dr, jr += te * Vr, Hr += te * be, kr += te * Or, Xt += te * Ue, Qt += te * it, br += te * dt, te = $e[9], Wt += te * We, vr += te * mt, ar += te * Gt, sr += te * ir, gr += te * dr, Tr += te * hr, Mr += te * Fr, Nr += te * Gr, Lr += te * Br, jr += te * Dr, Hr += te * Vr, kr += te * be, Xt += te * Or, Qt += te * Ue, br += te * it, we += te * dt, te = $e[10], vr += te * We, ar += te * mt, sr += te * Gt, gr += te * ir, Tr += te * dr, Mr += te * hr, Nr += te * Fr, Lr += te * Gr, jr += te * Br, Hr += te * Dr, kr += te * Vr, Xt += te * be, Qt += te * Or, br += te * Ue, we += te * it, me += te * dt, te = $e[11], ar += te * We, sr += te * mt, gr += te * Gt, Tr += te * ir, Mr += te * dr, Nr += te * hr, Lr += te * Fr, jr += te * Gr, Hr += te * Br, kr += te * Dr, Xt += te * Vr, Qt += te * be, br += te * Or, we += te * Ue, me += te * it, ze += te * dt, te = $e[12], sr += te * We, gr += te * mt, Tr += te * Gt, Mr += te * ir, Nr += te * dr, Lr += te * hr, jr += te * Fr, Hr += te * Gr, kr += te * Br, Xt += te * Dr, Qt += te * Vr, br += te * be, we += te * Or, me += te * Ue, ze += te * it, rt += te * dt, te = $e[13], gr += te * We, Tr += te * mt, Mr += te * Gt, Nr += te * ir, Lr += te * dr, jr += te * hr, Hr += te * Fr, kr += te * Gr, Xt += te * Br, Qt += te * Dr, br += te * Vr, we += te * be, me += te * Or, ze += te * Ue, rt += te * it, Tt += te * dt, te = $e[14], Tr += te * We, Mr += te * mt, Nr += te * Gt, Lr += te * ir, jr += te * dr, Hr += te * hr, kr += te * Fr, Xt += te * Gr, Qt += te * Br, br += te * Dr, we += te * Vr, me += te * be, ze += te * Or, rt += te * Ue, Tt += te * it, Ot += te * dt, te = $e[15], Mr += te * We, Nr += te * mt, Lr += te * Gt, jr += te * ir, Hr += te * dr, kr += te * hr, Xt += te * Fr, Qt += te * Gr, br += te * Br, we += te * Dr, me += te * Vr, ze += te * be, rt += te * Or, Tt += te * Ue, Ot += te * it, It += te * dt, nt += 38 * Nr, ft += 38 * Lr, zt += 38 * jr, st += 38 * Hr, ct += 38 * kr, yt += 38 * Xt, Zt += 38 * Qt, Ct += 38 * br, Lt += 38 * we, Wt += 38 * me, vr += 38 * ze, ar += 38 * rt, sr += 38 * Tt, gr += 38 * Ot, Tr += 38 * It, Le = 1, te = nt + Le + 65535, Le = Math.floor(te / 65536), nt = te - Le * 65536, te = ft + Le + 65535, Le = Math.floor(te / 65536), ft = te - Le * 65536, te = zt + Le + 65535, Le = Math.floor(te / 65536), zt = te - Le * 65536, te = st + Le + 65535, Le = Math.floor(te / 65536), st = te - Le * 65536, te = ct + Le + 65535, Le = Math.floor(te / 65536), ct = te - Le * 65536, te = yt + Le + 65535, Le = Math.floor(te / 65536), yt = te - Le * 65536, te = Zt + Le + 65535, Le = Math.floor(te / 65536), Zt = te - Le * 65536, te = Ct + Le + 65535, Le = Math.floor(te / 65536), Ct = te - Le * 65536, te = Lt + Le + 65535, Le = Math.floor(te / 65536), Lt = te - Le * 65536, te = Wt + Le + 65535, Le = Math.floor(te / 65536), Wt = te - Le * 65536, te = vr + Le + 65535, Le = Math.floor(te / 65536), vr = te - Le * 65536, te = ar + Le + 65535, Le = Math.floor(te / 65536), ar = te - Le * 65536, te = sr + Le + 65535, Le = Math.floor(te / 65536), sr = te - Le * 65536, te = gr + Le + 65535, Le = Math.floor(te / 65536), gr = te - Le * 65536, te = Tr + Le + 65535, Le = Math.floor(te / 65536), Tr = te - Le * 65536, te = Mr + Le + 65535, Le = Math.floor(te / 65536), Mr = te - Le * 65536, nt += Le - 1 + 37 * (Le - 1), Le = 1, te = nt + Le + 65535, Le = Math.floor(te / 65536), nt = te - Le * 65536, te = ft + Le + 65535, Le = Math.floor(te / 65536), ft = te - Le * 65536, te = zt + Le + 65535, Le = Math.floor(te / 65536), zt = te - Le * 65536, te = st + Le + 65535, Le = Math.floor(te / 65536), st = te - Le * 65536, te = ct + Le + 65535, Le = Math.floor(te / 65536), ct = te - Le * 65536, te = yt + Le + 65535, Le = Math.floor(te / 65536), yt = te - Le * 65536, te = Zt + Le + 65535, Le = Math.floor(te / 65536), Zt = te - Le * 65536, te = Ct + Le + 65535, Le = Math.floor(te / 65536), Ct = te - Le * 65536, te = Lt + Le + 65535, Le = Math.floor(te / 65536), Lt = te - Le * 65536, te = Wt + Le + 65535, Le = Math.floor(te / 65536), Wt = te - Le * 65536, te = vr + Le + 65535, Le = Math.floor(te / 65536), vr = te - Le * 65536, te = ar + Le + 65535, Le = Math.floor(te / 65536), ar = te - Le * 65536, te = sr + Le + 65535, Le = Math.floor(te / 65536), sr = te - Le * 65536, te = gr + Le + 65535, Le = Math.floor(te / 65536), gr = te - Le * 65536, te = Tr + Le + 65535, Le = Math.floor(te / 65536), Tr = te - Le * 65536, te = Mr + Le + 65535, Le = Math.floor(te / 65536), Mr = te - Le * 65536, nt += Le - 1 + 37 * (Le - 1), Pe[0] = nt, Pe[1] = ft, Pe[2] = zt, Pe[3] = st, Pe[4] = ct, Pe[5] = yt, Pe[6] = Zt, Pe[7] = Ct, Pe[8] = Lt, Pe[9] = Wt, Pe[10] = vr, Pe[11] = ar, Pe[12] = sr, Pe[13] = gr, Pe[14] = Tr, Pe[15] = Mr;
      }
      function K(Pe, $e) {
        ne(Pe, $e, $e);
      }
      function ie(Pe, $e) {
        var le = n(), te;
        for (te = 0; te < 16; te++) le[te] = $e[te];
        for (te = 253; te >= 0; te--) K(le, le), te !== 2 && te !== 4 && ne(le, le, $e);
        for (te = 0; te < 16; te++) Pe[te] = le[te];
      }
      function ce(Pe, $e) {
        var le = n(), te;
        for (te = 0; te < 16; te++) le[te] = $e[te];
        for (te = 250; te >= 0; te--) K(le, le), te !== 1 && ne(le, le, $e);
        for (te = 0; te < 16; te++) Pe[te] = le[te];
      }
      function ye(Pe, $e, le) {
        var te = new Uint8Array(32), Le = new Float64Array(80), nt, ft, zt = n(), st = n(), ct = n(), yt = n(), Zt = n(), Ct = n();
        for (ft = 0; ft < 31; ft++) te[ft] = $e[ft];
        for (te[31] = $e[31] & 127 | 64, te[0] &= 248, J(Le, le), ft = 0; ft < 16; ft++) st[ft] = Le[ft], yt[ft] = zt[ft] = ct[ft] = 0;
        for (zt[0] = yt[0] = 1, ft = 254; ft >= 0; --ft) nt = te[ft >>> 3] >>> (ft & 7) & 1, Z(zt, st, nt), Z(ct, yt, nt), B(Zt, zt, ct), Q(zt, zt, ct), B(ct, st, yt), Q(st, st, yt), K(yt, Zt), K(Ct, zt), ne(zt, ct, zt), ne(ct, st, Zt), B(Zt, zt, ct), Q(zt, zt, ct), K(st, zt), Q(ct, yt, Ct), ne(zt, ct, s), B(zt, zt, yt), ne(ct, ct, zt), ne(zt, yt, Ct), ne(yt, st, Le), K(st, Zt), Z(zt, st, nt), Z(ct, yt, nt);
        for (ft = 0; ft < 16; ft++) Le[ft + 16] = zt[ft], Le[ft + 32] = ct[ft], Le[ft + 48] = st[ft], Le[ft + 64] = yt[ft];
        var Lt = Le.subarray(32), Wt = Le.subarray(16);
        return ie(Lt, Lt), ne(Wt, Wt, Lt), ue(Pe, Wt), 0;
      }
      function oe(Pe, $e) {
        return ye(Pe, $e, y);
      }
      function se(Pe, $e) {
        return i($e, 32), oe(Pe, $e);
      }
      function re(Pe, $e, le) {
        var te = new Uint8Array(32);
        return ye(te, le, $e), R(Pe, u, te, k);
      }
      var ge = x, Te = L;
      function pe(Pe, $e, le, te, Le, nt) {
        var ft = new Uint8Array(32);
        return re(ft, Le, nt), ge(Pe, $e, le, te, ft);
      }
      function Oe(Pe, $e, le, te, Le, nt) {
        var ft = new Uint8Array(32);
        return re(ft, Le, nt), Te(Pe, $e, le, te, ft);
      }
      var xe = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591];
      function Ve(Pe, $e, le, te) {
        for (var Le = new Int32Array(16), nt = new Int32Array(16), ft, zt, st, ct, yt, Zt, Ct, Lt, Wt, vr, ar, sr, gr, Tr, Mr, Nr, Lr, jr, Hr, kr, Xt, Qt, br, we, me, ze, rt = Pe[0], Tt = Pe[1], Ot = Pe[2], It = Pe[3], We = Pe[4], mt = Pe[5], Gt = Pe[6], ir = Pe[7], dr = $e[0], hr = $e[1], Fr = $e[2], Gr = $e[3], Br = $e[4], Dr = $e[5], Vr = $e[6], be = $e[7], Or = 0; te >= 128; ) {
          for (Hr = 0; Hr < 16; Hr++) kr = 8 * Hr + Or, Le[Hr] = le[kr + 0] << 24 | le[kr + 1] << 16 | le[kr + 2] << 8 | le[kr + 3], nt[Hr] = le[kr + 4] << 24 | le[kr + 5] << 16 | le[kr + 6] << 8 | le[kr + 7];
          for (Hr = 0; Hr < 80; Hr++) if (ft = rt, zt = Tt, st = Ot, ct = It, yt = We, Zt = mt, Ct = Gt, Lt = ir, Wt = dr, vr = hr, ar = Fr, sr = Gr, gr = Br, Tr = Dr, Mr = Vr, Nr = be, Xt = ir, Qt = be, br = Qt & 65535, we = Qt >>> 16, me = Xt & 65535, ze = Xt >>> 16, Xt = (We >>> 14 | Br << 18) ^ (We >>> 18 | Br << 14) ^ (Br >>> 9 | We << 23), Qt = (Br >>> 14 | We << 18) ^ (Br >>> 18 | We << 14) ^ (We >>> 9 | Br << 23), br += Qt & 65535, we += Qt >>> 16, me += Xt & 65535, ze += Xt >>> 16, Xt = We & mt ^ ~We & Gt, Qt = Br & Dr ^ ~Br & Vr, br += Qt & 65535, we += Qt >>> 16, me += Xt & 65535, ze += Xt >>> 16, Xt = xe[Hr * 2], Qt = xe[Hr * 2 + 1], br += Qt & 65535, we += Qt >>> 16, me += Xt & 65535, ze += Xt >>> 16, Xt = Le[Hr % 16], Qt = nt[Hr % 16], br += Qt & 65535, we += Qt >>> 16, me += Xt & 65535, ze += Xt >>> 16, we += br >>> 16, me += we >>> 16, ze += me >>> 16, Lr = me & 65535 | ze << 16, jr = br & 65535 | we << 16, Xt = Lr, Qt = jr, br = Qt & 65535, we = Qt >>> 16, me = Xt & 65535, ze = Xt >>> 16, Xt = (rt >>> 28 | dr << 4) ^ (dr >>> 2 | rt << 30) ^ (dr >>> 7 | rt << 25), Qt = (dr >>> 28 | rt << 4) ^ (rt >>> 2 | dr << 30) ^ (rt >>> 7 | dr << 25), br += Qt & 65535, we += Qt >>> 16, me += Xt & 65535, ze += Xt >>> 16, Xt = rt & Tt ^ rt & Ot ^ Tt & Ot, Qt = dr & hr ^ dr & Fr ^ hr & Fr, br += Qt & 65535, we += Qt >>> 16, me += Xt & 65535, ze += Xt >>> 16, we += br >>> 16, me += we >>> 16, ze += me >>> 16, Lt = me & 65535 | ze << 16, Nr = br & 65535 | we << 16, Xt = ct, Qt = sr, br = Qt & 65535, we = Qt >>> 16, me = Xt & 65535, ze = Xt >>> 16, Xt = Lr, Qt = jr, br += Qt & 65535, we += Qt >>> 16, me += Xt & 65535, ze += Xt >>> 16, we += br >>> 16, me += we >>> 16, ze += me >>> 16, ct = me & 65535 | ze << 16, sr = br & 65535 | we << 16, Tt = ft, Ot = zt, It = st, We = ct, mt = yt, Gt = Zt, ir = Ct, rt = Lt, hr = Wt, Fr = vr, Gr = ar, Br = sr, Dr = gr, Vr = Tr, be = Mr, dr = Nr, Hr % 16 === 15) for (kr = 0; kr < 16; kr++) Xt = Le[kr], Qt = nt[kr], br = Qt & 65535, we = Qt >>> 16, me = Xt & 65535, ze = Xt >>> 16, Xt = Le[(kr + 9) % 16], Qt = nt[(kr + 9) % 16], br += Qt & 65535, we += Qt >>> 16, me += Xt & 65535, ze += Xt >>> 16, Lr = Le[(kr + 1) % 16], jr = nt[(kr + 1) % 16], Xt = (Lr >>> 1 | jr << 31) ^ (Lr >>> 8 | jr << 24) ^ Lr >>> 7, Qt = (jr >>> 1 | Lr << 31) ^ (jr >>> 8 | Lr << 24) ^ (jr >>> 7 | Lr << 25), br += Qt & 65535, we += Qt >>> 16, me += Xt & 65535, ze += Xt >>> 16, Lr = Le[(kr + 14) % 16], jr = nt[(kr + 14) % 16], Xt = (Lr >>> 19 | jr << 13) ^ (jr >>> 29 | Lr << 3) ^ Lr >>> 6, Qt = (jr >>> 19 | Lr << 13) ^ (Lr >>> 29 | jr << 3) ^ (jr >>> 6 | Lr << 26), br += Qt & 65535, we += Qt >>> 16, me += Xt & 65535, ze += Xt >>> 16, we += br >>> 16, me += we >>> 16, ze += me >>> 16, Le[kr] = me & 65535 | ze << 16, nt[kr] = br & 65535 | we << 16;
          Xt = rt, Qt = dr, br = Qt & 65535, we = Qt >>> 16, me = Xt & 65535, ze = Xt >>> 16, Xt = Pe[0], Qt = $e[0], br += Qt & 65535, we += Qt >>> 16, me += Xt & 65535, ze += Xt >>> 16, we += br >>> 16, me += we >>> 16, ze += me >>> 16, Pe[0] = rt = me & 65535 | ze << 16, $e[0] = dr = br & 65535 | we << 16, Xt = Tt, Qt = hr, br = Qt & 65535, we = Qt >>> 16, me = Xt & 65535, ze = Xt >>> 16, Xt = Pe[1], Qt = $e[1], br += Qt & 65535, we += Qt >>> 16, me += Xt & 65535, ze += Xt >>> 16, we += br >>> 16, me += we >>> 16, ze += me >>> 16, Pe[1] = Tt = me & 65535 | ze << 16, $e[1] = hr = br & 65535 | we << 16, Xt = Ot, Qt = Fr, br = Qt & 65535, we = Qt >>> 16, me = Xt & 65535, ze = Xt >>> 16, Xt = Pe[2], Qt = $e[2], br += Qt & 65535, we += Qt >>> 16, me += Xt & 65535, ze += Xt >>> 16, we += br >>> 16, me += we >>> 16, ze += me >>> 16, Pe[2] = Ot = me & 65535 | ze << 16, $e[2] = Fr = br & 65535 | we << 16, Xt = It, Qt = Gr, br = Qt & 65535, we = Qt >>> 16, me = Xt & 65535, ze = Xt >>> 16, Xt = Pe[3], Qt = $e[3], br += Qt & 65535, we += Qt >>> 16, me += Xt & 65535, ze += Xt >>> 16, we += br >>> 16, me += we >>> 16, ze += me >>> 16, Pe[3] = It = me & 65535 | ze << 16, $e[3] = Gr = br & 65535 | we << 16, Xt = We, Qt = Br, br = Qt & 65535, we = Qt >>> 16, me = Xt & 65535, ze = Xt >>> 16, Xt = Pe[4], Qt = $e[4], br += Qt & 65535, we += Qt >>> 16, me += Xt & 65535, ze += Xt >>> 16, we += br >>> 16, me += we >>> 16, ze += me >>> 16, Pe[4] = We = me & 65535 | ze << 16, $e[4] = Br = br & 65535 | we << 16, Xt = mt, Qt = Dr, br = Qt & 65535, we = Qt >>> 16, me = Xt & 65535, ze = Xt >>> 16, Xt = Pe[5], Qt = $e[5], br += Qt & 65535, we += Qt >>> 16, me += Xt & 65535, ze += Xt >>> 16, we += br >>> 16, me += we >>> 16, ze += me >>> 16, Pe[5] = mt = me & 65535 | ze << 16, $e[5] = Dr = br & 65535 | we << 16, Xt = Gt, Qt = Vr, br = Qt & 65535, we = Qt >>> 16, me = Xt & 65535, ze = Xt >>> 16, Xt = Pe[6], Qt = $e[6], br += Qt & 65535, we += Qt >>> 16, me += Xt & 65535, ze += Xt >>> 16, we += br >>> 16, me += we >>> 16, ze += me >>> 16, Pe[6] = Gt = me & 65535 | ze << 16, $e[6] = Vr = br & 65535 | we << 16, Xt = ir, Qt = be, br = Qt & 65535, we = Qt >>> 16, me = Xt & 65535, ze = Xt >>> 16, Xt = Pe[7], Qt = $e[7], br += Qt & 65535, we += Qt >>> 16, me += Xt & 65535, ze += Xt >>> 16, we += br >>> 16, me += we >>> 16, ze += me >>> 16, Pe[7] = ir = me & 65535 | ze << 16, $e[7] = be = br & 65535 | we << 16, Or += 128, te -= 128;
        }
        return te;
      }
      function _e(Pe, $e, le) {
        var te = new Int32Array(8), Le = new Int32Array(8), nt = new Uint8Array(256), ft, zt = le;
        for (te[0] = 1779033703, te[1] = 3144134277, te[2] = 1013904242, te[3] = 2773480762, te[4] = 1359893119, te[5] = 2600822924, te[6] = 528734635, te[7] = 1541459225, Le[0] = 4089235720, Le[1] = 2227873595, Le[2] = 4271175723, Le[3] = 1595750129, Le[4] = 2917565137, Le[5] = 725511199, Le[6] = 4215389547, Le[7] = 327033209, Ve(te, Le, $e, le), le %= 128, ft = 0; ft < le; ft++) nt[ft] = $e[zt - le + ft];
        for (nt[le] = 128, le = 256 - 128 * (le < 112 ? 1 : 0), nt[le - 9] = 0, g(nt, le - 8, zt / 536870912 | 0, zt << 3), Ve(te, Le, nt, le), ft = 0; ft < 8; ft++) g(Pe, 8 * ft, te[ft], Le[ft]);
        return 0;
      }
      function Be(Pe, $e) {
        var le = n(), te = n(), Le = n(), nt = n(), ft = n(), zt = n(), st = n(), ct = n(), yt = n();
        Q(le, Pe[1], Pe[0]), Q(yt, $e[1], $e[0]), ne(le, le, yt), B(te, Pe[0], Pe[1]), B(yt, $e[0], $e[1]), ne(te, te, yt), ne(Le, Pe[3], $e[3]), ne(Le, Le, h), ne(nt, Pe[2], $e[2]), B(nt, nt, nt), Q(ft, te, le), Q(zt, nt, Le), B(st, nt, Le), B(ct, te, le), ne(Pe[0], ft, zt), ne(Pe[1], ct, st), ne(Pe[2], st, zt), ne(Pe[3], ft, ct);
      }
      function Qe(Pe, $e, le) {
        var te;
        for (te = 0; te < 4; te++) Z(Pe[te], $e[te], le);
      }
      function ee(Pe, $e) {
        var le = n(), te = n(), Le = n();
        ie(Le, $e[2]), ne(le, $e[0], Le), ne(te, $e[1], Le), ue(Pe, te), Pe[31] ^= X(le) << 7;
      }
      function P(Pe, $e, le) {
        var te, Le;
        for (j(Pe[0], t), j(Pe[1], o), j(Pe[2], o), j(Pe[3], t), Le = 255; Le >= 0; --Le) te = le[Le / 8 | 0] >> (Le & 7) & 1, Qe(Pe, $e, te), Be($e, Pe), Be(Pe, Pe), Qe(Pe, $e, te);
      }
      function T(Pe, $e) {
        var le = [n(), n(), n(), n()];
        j(le[0], f), j(le[1], r), j(le[2], o), ne(le[3], f, r), P(Pe, le, $e);
      }
      function O(Pe, $e, le) {
        var te = new Uint8Array(64), Le = [n(), n(), n(), n()], nt;
        for (le || i($e, 32), _e(te, $e, 32), te[0] &= 248, te[31] &= 127, te[31] |= 64, T(Le, te), ee(Pe, Le), nt = 0; nt < 32; nt++) $e[nt + 32] = Pe[nt];
        return 0;
      }
      var V = new Float64Array([237, 211, 245, 92, 26, 99, 18, 88, 214, 156, 247, 162, 222, 249, 222, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16]);
      function D(Pe, $e) {
        var le, te, Le, nt;
        for (te = 63; te >= 32; --te) {
          for (le = 0, Le = te - 32, nt = te - 12; Le < nt; ++Le) $e[Le] += le - 16 * $e[te] * V[Le - (te - 32)], le = Math.floor(($e[Le] + 128) / 256), $e[Le] -= le * 256;
          $e[Le] += le, $e[te] = 0;
        }
        for (le = 0, Le = 0; Le < 32; Le++) $e[Le] += le - ($e[31] >> 4) * V[Le], le = $e[Le] >> 8, $e[Le] &= 255;
        for (Le = 0; Le < 32; Le++) $e[Le] -= le * V[Le];
        for (te = 0; te < 32; te++) $e[te + 1] += $e[te] >> 8, Pe[te] = $e[te] & 255;
      }
      function C(Pe) {
        var $e = new Float64Array(64), le;
        for (le = 0; le < 64; le++) $e[le] = Pe[le];
        for (le = 0; le < 64; le++) Pe[le] = 0;
        D(Pe, $e);
      }
      function p(Pe, $e, le, te) {
        var Le = new Uint8Array(64), nt = new Uint8Array(64), ft = new Uint8Array(64), zt, st, ct = new Float64Array(64), yt = [n(), n(), n(), n()];
        _e(Le, te, 32), Le[0] &= 248, Le[31] &= 127, Le[31] |= 64;
        var Zt = le + 64;
        for (zt = 0; zt < le; zt++) Pe[64 + zt] = $e[zt];
        for (zt = 0; zt < 32; zt++) Pe[32 + zt] = Le[32 + zt];
        for (_e(ft, Pe.subarray(32), le + 32), C(ft), T(yt, ft), ee(Pe, yt), zt = 32; zt < 64; zt++) Pe[zt] = te[zt];
        for (_e(nt, Pe, le + 64), C(nt), zt = 0; zt < 64; zt++) ct[zt] = 0;
        for (zt = 0; zt < 32; zt++) ct[zt] = ft[zt];
        for (zt = 0; zt < 32; zt++) for (st = 0; st < 32; st++) ct[zt + st] += nt[zt] * Le[st];
        return D(Pe.subarray(32), ct), Zt;
      }
      function A(Pe, $e) {
        var le = n(), te = n(), Le = n(), nt = n(), ft = n(), zt = n(), st = n();
        return j(Pe[2], o), J(Pe[1], $e), K(Le, Pe[1]), ne(nt, Le, c), Q(Le, Le, Pe[2]), B(nt, Pe[2], nt), K(ft, nt), K(zt, ft), ne(st, zt, ft), ne(le, st, Le), ne(le, le, nt), ce(le, le), ne(le, le, Le), ne(le, le, nt), ne(le, le, nt), ne(Pe[0], le, nt), K(te, Pe[0]), ne(te, te, nt), $(te, Le) && ne(Pe[0], Pe[0], m), K(te, Pe[0]), ne(te, te, nt), $(te, Le) ? -1 : (X(Pe[0]) === $e[31] >> 7 && Q(Pe[0], t, Pe[0]), ne(Pe[3], Pe[0], Pe[1]), 0);
      }
      function U(Pe, $e, le, te) {
        var Le, nt = new Uint8Array(32), ft = new Uint8Array(64), zt = [n(), n(), n(), n()], st = [n(), n(), n(), n()];
        if (le < 64 || A(st, te)) return -1;
        for (Le = 0; Le < le; Le++) Pe[Le] = $e[Le];
        for (Le = 0; Le < 32; Le++) Pe[Le + 32] = te[Le];
        if (_e(ft, Pe, le), C(ft), P(zt, st, ft), T(st, $e.subarray(32)), Be(zt, st), ee(nt, zt), le -= 64, d($e, 0, nt, 0)) {
          for (Le = 0; Le < le; Le++) Pe[Le] = 0;
          return -1;
        }
        for (Le = 0; Le < le; Le++) Pe[Le] = $e[Le + 64];
        return le;
      }
      var Y = 32, ae = 24, W = 32, de = 16, tt = 32, Ne = 32, ut = 32, Ze = 32, Et = 32, rr = ae, je = W, Ge = de, at = 64, Ae = 32, qe = 64, Ft = 32, Dt = 64;
      e.lowlevel = { crypto_core_hsalsa20: R, crypto_stream_xor: q, crypto_stream: I, crypto_stream_salsa20_xor: w, crypto_stream_salsa20: F, crypto_onetimeauth: H, crypto_onetimeauth_verify: _, crypto_verify_16: l, crypto_verify_32: d, crypto_secretbox: x, crypto_secretbox_open: L, crypto_scalarmult: ye, crypto_scalarmult_base: oe, crypto_box_beforenm: re, crypto_box_afternm: ge, crypto_box: pe, crypto_box_open: Oe, crypto_box_keypair: se, crypto_hash: _e, crypto_sign: p, crypto_sign_keypair: O, crypto_sign_open: U, crypto_secretbox_KEYBYTES: Y, crypto_secretbox_NONCEBYTES: ae, crypto_secretbox_ZEROBYTES: W, crypto_secretbox_BOXZEROBYTES: de, crypto_scalarmult_BYTES: tt, crypto_scalarmult_SCALARBYTES: Ne, crypto_box_PUBLICKEYBYTES: ut, crypto_box_SECRETKEYBYTES: Ze, crypto_box_BEFORENMBYTES: Et, crypto_box_NONCEBYTES: rr, crypto_box_ZEROBYTES: je, crypto_box_BOXZEROBYTES: Ge, crypto_sign_BYTES: at, crypto_sign_PUBLICKEYBYTES: Ae, crypto_sign_SECRETKEYBYTES: qe, crypto_sign_SEEDBYTES: Ft, crypto_hash_BYTES: Dt, gf: n, D: c, L: V, pack25519: ue, unpack25519: J, M: ne, A: B, S: K, Z: Q, pow2523: ce, add: Be, set25519: j, modL: D, scalarmult: P, scalarbase: T };
      function wr(Pe, $e) {
        if (Pe.length !== Y) throw new Error("bad key size");
        if ($e.length !== ae) throw new Error("bad nonce size");
      }
      function Nt(Pe, $e) {
        if (Pe.length !== ut) throw new Error("bad public key size");
        if ($e.length !== Ze) throw new Error("bad secret key size");
      }
      function yr() {
        for (var Pe = 0; Pe < arguments.length; Pe++) if (!(arguments[Pe] instanceof Uint8Array)) throw new TypeError("unexpected type, use Uint8Array");
      }
      function Ur(Pe) {
        for (var $e = 0; $e < Pe.length; $e++) Pe[$e] = 0;
      }
      e.randomBytes = function(Pe) {
        var $e = new Uint8Array(Pe);
        return i($e, Pe), $e;
      }, e.secretbox = function(Pe, $e, le) {
        yr(Pe, $e, le), wr(le, $e);
        for (var te = new Uint8Array(W + Pe.length), Le = new Uint8Array(te.length), nt = 0; nt < Pe.length; nt++) te[nt + W] = Pe[nt];
        return x(Le, te, te.length, $e, le), Le.subarray(de);
      }, e.secretbox.open = function(Pe, $e, le) {
        yr(Pe, $e, le), wr(le, $e);
        for (var te = new Uint8Array(de + Pe.length), Le = new Uint8Array(te.length), nt = 0; nt < Pe.length; nt++) te[nt + de] = Pe[nt];
        return te.length < 32 || L(Le, te, te.length, $e, le) !== 0 ? null : Le.subarray(W);
      }, e.secretbox.keyLength = Y, e.secretbox.nonceLength = ae, e.secretbox.overheadLength = de, e.scalarMult = function(Pe, $e) {
        if (yr(Pe, $e), Pe.length !== Ne) throw new Error("bad n size");
        if ($e.length !== tt) throw new Error("bad p size");
        var le = new Uint8Array(tt);
        return ye(le, Pe, $e), le;
      }, e.scalarMult.base = function(Pe) {
        if (yr(Pe), Pe.length !== Ne) throw new Error("bad n size");
        var $e = new Uint8Array(tt);
        return oe($e, Pe), $e;
      }, e.scalarMult.scalarLength = Ne, e.scalarMult.groupElementLength = tt, e.box = function(Pe, $e, le, te) {
        var Le = e.box.before(le, te);
        return e.secretbox(Pe, $e, Le);
      }, e.box.before = function(Pe, $e) {
        yr(Pe, $e), Nt(Pe, $e);
        var le = new Uint8Array(Et);
        return re(le, Pe, $e), le;
      }, e.box.after = e.secretbox, e.box.open = function(Pe, $e, le, te) {
        var Le = e.box.before(le, te);
        return e.secretbox.open(Pe, $e, Le);
      }, e.box.open.after = e.secretbox.open, e.box.keyPair = function() {
        var Pe = new Uint8Array(ut), $e = new Uint8Array(Ze);
        return se(Pe, $e), { publicKey: Pe, secretKey: $e };
      }, e.box.keyPair.fromSecretKey = function(Pe) {
        if (yr(Pe), Pe.length !== Ze) throw new Error("bad secret key size");
        var $e = new Uint8Array(ut);
        return oe($e, Pe), { publicKey: $e, secretKey: new Uint8Array(Pe) };
      }, e.box.publicKeyLength = ut, e.box.secretKeyLength = Ze, e.box.sharedKeyLength = Et, e.box.nonceLength = rr, e.box.overheadLength = e.secretbox.overheadLength, e.sign = function(Pe, $e) {
        if (yr(Pe, $e), $e.length !== qe) throw new Error("bad secret key size");
        var le = new Uint8Array(at + Pe.length);
        return p(le, Pe, Pe.length, $e), le;
      }, e.sign.open = function(Pe, $e) {
        if (yr(Pe, $e), $e.length !== Ae) throw new Error("bad public key size");
        var le = new Uint8Array(Pe.length), te = U(le, Pe, Pe.length, $e);
        if (te < 0) return null;
        for (var Le = new Uint8Array(te), nt = 0; nt < Le.length; nt++) Le[nt] = le[nt];
        return Le;
      }, e.sign.detached = function(Pe, $e) {
        for (var le = e.sign(Pe, $e), te = new Uint8Array(at), Le = 0; Le < te.length; Le++) te[Le] = le[Le];
        return te;
      }, e.sign.detached.verify = function(Pe, $e, le) {
        if (yr(Pe, $e, le), $e.length !== at) throw new Error("bad signature size");
        if (le.length !== Ae) throw new Error("bad public key size");
        var te = new Uint8Array(at + Pe.length), Le = new Uint8Array(at + Pe.length), nt;
        for (nt = 0; nt < at; nt++) te[nt] = $e[nt];
        for (nt = 0; nt < Pe.length; nt++) te[nt + at] = Pe[nt];
        return U(Le, te, te.length, le) >= 0;
      }, e.sign.keyPair = function() {
        var Pe = new Uint8Array(Ae), $e = new Uint8Array(qe);
        return O(Pe, $e), { publicKey: Pe, secretKey: $e };
      }, e.sign.keyPair.fromSecretKey = function(Pe) {
        if (yr(Pe), Pe.length !== qe) throw new Error("bad secret key size");
        for (var $e = new Uint8Array(Ae), le = 0; le < $e.length; le++) $e[le] = Pe[32 + le];
        return { publicKey: $e, secretKey: new Uint8Array(Pe) };
      }, e.sign.keyPair.fromSeed = function(Pe) {
        if (yr(Pe), Pe.length !== Ft) throw new Error("bad seed size");
        for (var $e = new Uint8Array(Ae), le = new Uint8Array(qe), te = 0; te < 32; te++) le[te] = Pe[te];
        return O($e, le, true), { publicKey: $e, secretKey: le };
      }, e.sign.publicKeyLength = Ae, e.sign.secretKeyLength = qe, e.sign.seedLength = Ft, e.sign.signatureLength = at, e.hash = function(Pe) {
        yr(Pe);
        var $e = new Uint8Array(Dt);
        return _e($e, Pe, Pe.length), $e;
      }, e.hash.hashLength = Dt, e.verify = function(Pe, $e) {
        return yr(Pe, $e), Pe.length === 0 || $e.length === 0 || Pe.length !== $e.length ? false : a(Pe, 0, $e, 0, Pe.length) === 0;
      }, e.setPRNG = function(Pe) {
        i = Pe;
      }, function() {
        var Pe = typeof self < "u" ? self.crypto || self.msCrypto : null;
        if (Pe && Pe.getRandomValues) {
          var $e = 65536;
          e.setPRNG(function(le, te) {
            var Le, nt = new Uint8Array(te);
            for (Le = 0; Le < te; Le += $e) Pe.getRandomValues(nt.subarray(Le, Le + Math.min(te - Le, $e)));
            for (Le = 0; Le < te; Le++) le[Le] = nt[Le];
            Ur(nt);
          });
        } else typeof My < "u" && (Pe = Qd, Pe && Pe.randomBytes && e.setPRNG(function(le, te) {
          var Le, nt = Pe.randomBytes(te);
          for (Le = 0; Le < te; Le++) le[Le] = nt[Le];
          Ur(nt);
        }));
      }();
    })(v.exports ? v.exports : self.nacl = self.nacl || {});
  }(Gc)), Gc.exports;
}
var $f;
function Jd() {
  if ($f) return ko;
  $f = 1, Object.defineProperty(ko, "__esModule", { value: true }), ko.FastSigning = void 0, ko.generate = i, ko.sign = e, ko.verify = n;
  var v = {};
  ko.FastSigning = u();
  function e(o, s) {
    return v.sign(o, s);
  }
  function n(o, s, c) {
    return v.verify(o, s, c);
  }
  function i(o) {
    return v.generate(o);
  }
  function u() {
    return typeof window > "u" ? y() : t();
  }
  function y() {
    var o;
    try {
      o = Qd;
    } catch {
      return t();
    }
    return Object.keys(o).length ? (v.generate = function(s) {
      var c = Buffer.alloc(o.crypto_sign_PUBLICKEYBYTES), h = Buffer.alloc(o.crypto_sign_SECRETKEYBYTES);
      return o.crypto_sign_seed_keypair(c, h, s), c;
    }, v.sign = function(s, c) {
      s = Buffer.from(s);
      var h = Buffer.alloc(o.crypto_sign_BYTES);
      return o.crypto_sign_detached(h, s, c), h;
    }, v.verify = function(s, c, h) {
      s = Buffer.from(s);
      try {
        return o.crypto_sign_verify_detached(c, s, h);
      } catch {
        return false;
      }
    }, true) : t();
  }
  function t() {
    var o = Zd();
    return v.generate = function(s) {
      var c = new Uint8Array(s), h = o.sign.keyPair.fromSeed(c);
      return Buffer.from(h.publicKey);
    }, v.sign = function(s, c) {
      s = Buffer.from(s), s = new Uint8Array(s.toJSON().data), c = new Uint8Array(c.toJSON().data);
      var h = o.sign.detached(s, c);
      return Buffer.from(h);
    }, v.verify = function(s, c, h) {
      return s = Buffer.from(s), s = new Uint8Array(s.toJSON().data), c = new Uint8Array(c.toJSON().data), h = new Uint8Array(h.toJSON().data), o.sign.detached.verify(s, c, h);
    }, false;
  }
  return ko;
}
var la = {}, Va = {}, qa = {}, Yf;
function em() {
  return Yf || (Yf = 1, Object.defineProperty(qa, "__esModule", { value: true }), qa.trimEnd = void 0, qa.trimEnd = function(e, n) {
    for (var i = typeof e == "number", u = String(e); u.endsWith(n); ) u = u.slice(0, -1);
    return i ? Number(u) : u;
  }), qa;
}
var za = {}, jo = {}, Wc = {}, Qf;
function Iy() {
  return Qf || (Qf = 1, function(v) {
    var e = function(o, s) {
      return s || (s = {}), o.split("").forEach(function(c, h) {
        c in s || (s[c] = h);
      }), s;
    }, n = { alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567", charmap: { 0: 14, 1: 8 } };
    n.charmap = e(n.alphabet, n.charmap);
    var i = { alphabet: "0123456789ABCDEFGHJKMNPQRSTVWXYZ", charmap: { O: 0, I: 1, L: 1 } };
    i.charmap = e(i.alphabet, i.charmap);
    var u = { alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV", charmap: {} };
    u.charmap = e(u.alphabet, u.charmap);
    function y(o) {
      if (this.buf = [], this.shift = 8, this.carry = 0, o) {
        switch (o.type) {
          case "rfc4648":
            this.charmap = v.rfc4648.charmap;
            break;
          case "crockford":
            this.charmap = v.crockford.charmap;
            break;
          case "base32hex":
            this.charmap = v.base32hex.charmap;
            break;
          default:
            throw new Error("invalid type");
        }
        o.charmap && (this.charmap = o.charmap);
      }
    }
    y.prototype.charmap = n.charmap, y.prototype.write = function(o) {
      var s = this.charmap, c = this.buf, h = this.shift, f = this.carry;
      return o.toUpperCase().split("").forEach(function(r) {
        if (r != "=") {
          var m = s[r] & 255;
          h -= 5, h > 0 ? f |= m << h : h < 0 ? (c.push(f | m >> -h), h += 8, f = m << h & 255) : (c.push(f | m), h = 8, f = 0);
        }
      }), this.shift = h, this.carry = f, this;
    }, y.prototype.finalize = function(o) {
      return o && this.write(o), this.shift !== 8 && this.carry !== 0 && (this.buf.push(this.carry), this.shift = 8, this.carry = 0), this.buf;
    };
    function t(o) {
      if (this.buf = "", this.shift = 3, this.carry = 0, o) {
        switch (o.type) {
          case "rfc4648":
            this.alphabet = v.rfc4648.alphabet;
            break;
          case "crockford":
            this.alphabet = v.crockford.alphabet;
            break;
          case "base32hex":
            this.alphabet = v.base32hex.alphabet;
            break;
          default:
            throw new Error("invalid type");
        }
        o.alphabet ? this.alphabet = o.alphabet : o.lc && (this.alphabet = this.alphabet.toLowerCase());
      }
    }
    t.prototype.alphabet = n.alphabet, t.prototype.write = function(o) {
      var s = this.shift, c = this.carry, h, f, r;
      for (r = 0; r < o.length; r++) f = o[r], h = c | f >> s, this.buf += this.alphabet[h & 31], s > 5 && (s -= 5, h = f >> s, this.buf += this.alphabet[h & 31]), s = 5 - s, c = f << s, s = 8 - s;
      return this.shift = s, this.carry = c, this;
    }, t.prototype.finalize = function(o) {
      return o && this.write(o), this.shift !== 3 && (this.buf += this.alphabet[this.carry & 31], this.shift = 3, this.carry = 0), this.buf;
    }, v.encode = function(o, s) {
      return new t(s).finalize(o);
    }, v.decode = function(o, s) {
      return new y(s).finalize(o);
    }, v.Decoder = y, v.Encoder = t, v.charmap = e, v.crockford = i, v.rfc4648 = n, v.base32hex = u;
  }(Wc)), Wc;
}
var Ys = {}, Zf;
function Ly() {
  if (Zf) return Ys;
  Zf = 1, Object.defineProperty(Ys, "__esModule", { value: true }), Ys.verifyChecksum = v;
  function v(e, n) {
    if (e.length !== n.length) return false;
    if (e.length === 0) return true;
    for (var i = 0; i < e.length; i += 1) if (e[i] !== n[i]) return false;
    return true;
  }
  return Ys;
}
var Jf;
function ni() {
  if (Jf) return jo;
  Jf = 1, Object.defineProperty(jo, "__esModule", { value: true }), jo.StrKey = void 0, jo.decodeCheck = r, jo.encodeCheck = m;
  var v = n(Iy()), e = Ly();
  function n(a) {
    return a && a.__esModule ? a : { default: a };
  }
  function i(a) {
    "@babel/helpers - typeof";
    return i = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(l) {
      return typeof l;
    } : function(l) {
      return l && typeof Symbol == "function" && l.constructor === Symbol && l !== Symbol.prototype ? "symbol" : typeof l;
    }, i(a);
  }
  function u(a, l) {
    if (!(a instanceof l)) throw new TypeError("Cannot call a class as a function");
  }
  function y(a, l) {
    for (var d = 0; d < l.length; d++) {
      var b = l[d];
      b.enumerable = b.enumerable || false, b.configurable = true, "value" in b && (b.writable = true), Object.defineProperty(a, o(b.key), b);
    }
  }
  function t(a, l, d) {
    return d && y(a, d), Object.defineProperty(a, "prototype", { writable: false }), a;
  }
  function o(a) {
    var l = s(a, "string");
    return i(l) == "symbol" ? l : l + "";
  }
  function s(a, l) {
    if (i(a) != "object" || !a) return a;
    var d = a[Symbol.toPrimitive];
    if (d !== void 0) {
      var b = d.call(a, l);
      if (i(b) != "object") return b;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return String(a);
  }
  var c = { ed25519PublicKey: 48, ed25519SecretSeed: 144, med25519PublicKey: 96, preAuthTx: 152, sha256Hash: 184, signedPayload: 120, contract: 16 }, h = { G: "ed25519PublicKey", S: "ed25519SecretSeed", M: "med25519PublicKey", T: "preAuthTx", X: "sha256Hash", P: "signedPayload", C: "contract" };
  jo.StrKey = function() {
    function a() {
      u(this, a);
    }
    return t(a, null, [{ key: "encodeEd25519PublicKey", value: function(d) {
      return m("ed25519PublicKey", d);
    } }, { key: "decodeEd25519PublicKey", value: function(d) {
      return r("ed25519PublicKey", d);
    } }, { key: "isValidEd25519PublicKey", value: function(d) {
      return f("ed25519PublicKey", d);
    } }, { key: "encodeEd25519SecretSeed", value: function(d) {
      return m("ed25519SecretSeed", d);
    } }, { key: "decodeEd25519SecretSeed", value: function(d) {
      return r("ed25519SecretSeed", d);
    } }, { key: "isValidEd25519SecretSeed", value: function(d) {
      return f("ed25519SecretSeed", d);
    } }, { key: "encodeMed25519PublicKey", value: function(d) {
      return m("med25519PublicKey", d);
    } }, { key: "decodeMed25519PublicKey", value: function(d) {
      return r("med25519PublicKey", d);
    } }, { key: "isValidMed25519PublicKey", value: function(d) {
      return f("med25519PublicKey", d);
    } }, { key: "encodePreAuthTx", value: function(d) {
      return m("preAuthTx", d);
    } }, { key: "decodePreAuthTx", value: function(d) {
      return r("preAuthTx", d);
    } }, { key: "encodeSha256Hash", value: function(d) {
      return m("sha256Hash", d);
    } }, { key: "decodeSha256Hash", value: function(d) {
      return r("sha256Hash", d);
    } }, { key: "encodeSignedPayload", value: function(d) {
      return m("signedPayload", d);
    } }, { key: "decodeSignedPayload", value: function(d) {
      return r("signedPayload", d);
    } }, { key: "isValidSignedPayload", value: function(d) {
      return f("signedPayload", d);
    } }, { key: "encodeContract", value: function(d) {
      return m("contract", d);
    } }, { key: "decodeContract", value: function(d) {
      return r("contract", d);
    } }, { key: "isValidContract", value: function(d) {
      return f("contract", d);
    } }, { key: "getVersionByteForPrefix", value: function(d) {
      return h[d[0]];
    } }]);
  }();
  function f(a, l) {
    if (typeof l != "string") return false;
    switch (a) {
      case "ed25519PublicKey":
      case "ed25519SecretSeed":
      case "preAuthTx":
      case "sha256Hash":
      case "contract":
        if (l.length !== 56) return false;
        break;
      case "med25519PublicKey":
        if (l.length !== 69) return false;
        break;
      case "signedPayload":
        if (l.length < 56 || l.length > 165) return false;
        break;
      default:
        return false;
    }
    var d = "";
    try {
      d = r(a, l);
    } catch {
      return false;
    }
    switch (a) {
      case "ed25519PublicKey":
      case "ed25519SecretSeed":
      case "preAuthTx":
      case "sha256Hash":
      case "contract":
        return d.length === 32;
      case "med25519PublicKey":
        return d.length === 40;
      case "signedPayload":
        return d.length >= 40 && d.length <= 100;
      default:
        return false;
    }
  }
  function r(a, l) {
    if (typeof l != "string") throw new TypeError("encoded argument must be of type String");
    var d = v.default.decode(l), b = d[0], S = d.slice(0, -2), E = S.slice(1), R = d.slice(-2);
    if (l !== v.default.encode(d)) throw new Error("invalid encoded string");
    var k = c[a];
    if (k === void 0) throw new Error("".concat(a, " is not a valid version byte name. ") + "Expected one of ".concat(Object.keys(c).join(", ")));
    if (b !== k) throw new Error("invalid version byte. expected ".concat(k, ", got ").concat(b));
    var w = g(S);
    if (!(0, e.verifyChecksum)(w, R)) throw new Error("invalid checksum");
    return Buffer.from(E);
  }
  function m(a, l) {
    if (l == null) throw new Error("cannot encode null data");
    var d = c[a];
    if (d === void 0) throw new Error("".concat(a, " is not a valid version byte name. ") + "Expected one of ".concat(Object.keys(c).join(", ")));
    l = Buffer.from(l);
    var b = Buffer.from([d]), S = Buffer.concat([b, l]), E = Buffer.from(g(S)), R = Buffer.concat([S, E]);
    return v.default.encode(R);
  }
  function g(a) {
    for (var l = [0, 4129, 8258, 12387, 16516, 20645, 24774, 28903, 33032, 37161, 41290, 45419, 49548, 53677, 57806, 61935, 4657, 528, 12915, 8786, 21173, 17044, 29431, 25302, 37689, 33560, 45947, 41818, 54205, 50076, 62463, 58334, 9314, 13379, 1056, 5121, 25830, 29895, 17572, 21637, 42346, 46411, 34088, 38153, 58862, 62927, 50604, 54669, 13907, 9842, 5649, 1584, 30423, 26358, 22165, 18100, 46939, 42874, 38681, 34616, 63455, 59390, 55197, 51132, 18628, 22757, 26758, 30887, 2112, 6241, 10242, 14371, 51660, 55789, 59790, 63919, 35144, 39273, 43274, 47403, 23285, 19156, 31415, 27286, 6769, 2640, 14899, 10770, 56317, 52188, 64447, 60318, 39801, 35672, 47931, 43802, 27814, 31879, 19684, 23749, 11298, 15363, 3168, 7233, 60846, 64911, 52716, 56781, 44330, 48395, 36200, 40265, 32407, 28342, 24277, 20212, 15891, 11826, 7761, 3696, 65439, 61374, 57309, 53244, 48923, 44858, 40793, 36728, 37256, 33193, 45514, 41451, 53516, 49453, 61774, 57711, 4224, 161, 12482, 8419, 20484, 16421, 28742, 24679, 33721, 37784, 41979, 46042, 49981, 54044, 58239, 62302, 689, 4752, 8947, 13010, 16949, 21012, 25207, 29270, 46570, 42443, 38312, 34185, 62830, 58703, 54572, 50445, 13538, 9411, 5280, 1153, 29798, 25671, 21540, 17413, 42971, 47098, 34713, 38840, 59231, 63358, 50973, 55100, 9939, 14066, 1681, 5808, 26199, 30326, 17941, 22068, 55628, 51565, 63758, 59695, 39368, 35305, 47498, 43435, 22596, 18533, 30726, 26663, 6336, 2273, 14466, 10403, 52093, 56156, 60223, 64286, 35833, 39896, 43963, 48026, 19061, 23124, 27191, 31254, 2801, 6864, 10931, 14994, 64814, 60687, 56684, 52557, 48554, 44427, 40424, 36297, 31782, 27655, 23652, 19525, 15522, 11395, 7392, 3265, 61215, 65342, 53085, 57212, 44955, 49082, 36825, 40952, 28183, 32310, 20053, 24180, 11923, 16050, 3793, 7920], d = 0, b = 0; b < a.length; b += 1) {
      var S = a[b], E = d >> 8 ^ S;
      d = d << 8 ^ l[E], d &= 65535;
    }
    var R = new Uint8Array(2);
    return R[0] = d & 255, R[1] = d >> 8 & 255, R;
  }
  return jo;
}
var ep;
function Ii() {
  if (ep) return za;
  ep = 1, Object.defineProperty(za, "__esModule", { value: true }), za.Keypair = void 0;
  var v = y(Zd()), e = Jd(), n = ni(), i = Fo(), u = y(bn());
  function y(r) {
    return r && r.__esModule ? r : { default: r };
  }
  function t(r) {
    "@babel/helpers - typeof";
    return t = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(m) {
      return typeof m;
    } : function(m) {
      return m && typeof Symbol == "function" && m.constructor === Symbol && m !== Symbol.prototype ? "symbol" : typeof m;
    }, t(r);
  }
  function o(r, m) {
    if (!(r instanceof m)) throw new TypeError("Cannot call a class as a function");
  }
  function s(r, m) {
    for (var g = 0; g < m.length; g++) {
      var a = m[g];
      a.enumerable = a.enumerable || false, a.configurable = true, "value" in a && (a.writable = true), Object.defineProperty(r, h(a.key), a);
    }
  }
  function c(r, m, g) {
    return m && s(r.prototype, m), g && s(r, g), Object.defineProperty(r, "prototype", { writable: false }), r;
  }
  function h(r) {
    var m = f(r, "string");
    return t(m) == "symbol" ? m : m + "";
  }
  function f(r, m) {
    if (t(r) != "object" || !r) return r;
    var g = r[Symbol.toPrimitive];
    if (g !== void 0) {
      var a = g.call(r, m);
      if (t(a) != "object") return a;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return String(r);
  }
  return za.Keypair = function() {
    function r(m) {
      if (o(this, r), m.type !== "ed25519") throw new Error("Invalid keys type");
      if (this.type = m.type, m.secretKey) {
        if (m.secretKey = Buffer.from(m.secretKey), m.secretKey.length !== 32) throw new Error("secretKey length is invalid");
        if (this._secretSeed = m.secretKey, this._publicKey = (0, e.generate)(m.secretKey), this._secretKey = Buffer.concat([m.secretKey, this._publicKey]), m.publicKey && !this._publicKey.equals(Buffer.from(m.publicKey))) throw new Error("secretKey does not match publicKey");
      } else if (this._publicKey = Buffer.from(m.publicKey), this._publicKey.length !== 32) throw new Error("publicKey length is invalid");
    }
    return c(r, [{ key: "xdrAccountId", value: function() {
      return new u.default.AccountId.publicKeyTypeEd25519(this._publicKey);
    } }, { key: "xdrPublicKey", value: function() {
      return new u.default.PublicKey.publicKeyTypeEd25519(this._publicKey);
    } }, { key: "xdrMuxedAccount", value: function(g) {
      if (typeof g < "u") {
        if (typeof g != "string") throw new TypeError("expected string for ID, got ".concat(t(g)));
        return u.default.MuxedAccount.keyTypeMuxedEd25519(new u.default.MuxedAccountMed25519({ id: u.default.Uint64.fromString(g), ed25519: this._publicKey }));
      }
      return new u.default.MuxedAccount.keyTypeEd25519(this._publicKey);
    } }, { key: "rawPublicKey", value: function() {
      return this._publicKey;
    } }, { key: "signatureHint", value: function() {
      var g = this.xdrAccountId().toXDR();
      return g.slice(g.length - 4);
    } }, { key: "publicKey", value: function() {
      return n.StrKey.encodeEd25519PublicKey(this._publicKey);
    } }, { key: "secret", value: function() {
      if (!this._secretSeed) throw new Error("no secret key available");
      if (this.type === "ed25519") return n.StrKey.encodeEd25519SecretSeed(this._secretSeed);
      throw new Error("Invalid Keypair type");
    } }, { key: "rawSecretKey", value: function() {
      return this._secretSeed;
    } }, { key: "canSign", value: function() {
      return !!this._secretKey;
    } }, { key: "sign", value: function(g) {
      if (!this.canSign()) throw new Error("cannot sign: no secret key available");
      return (0, e.sign)(g, this._secretKey);
    } }, { key: "verify", value: function(g, a) {
      return (0, e.verify)(g, a, this._publicKey);
    } }, { key: "signDecorated", value: function(g) {
      var a = this.sign(g), l = this.signatureHint();
      return new u.default.DecoratedSignature({ hint: l, signature: a });
    } }, { key: "signPayloadDecorated", value: function(g) {
      var a = this.sign(g), l = this.signatureHint(), d = Buffer.from(g.slice(-4));
      return d.length < 4 && (d = Buffer.concat([d, Buffer.alloc(4 - g.length, 0)])), new u.default.DecoratedSignature({ hint: d.map(function(b, S) {
        return b ^ l[S];
      }), signature: a });
    } }], [{ key: "fromSecret", value: function(g) {
      var a = n.StrKey.decodeEd25519SecretSeed(g);
      return this.fromRawEd25519Seed(a);
    } }, { key: "fromRawEd25519Seed", value: function(g) {
      return new this({ type: "ed25519", secretKey: g });
    } }, { key: "master", value: function(g) {
      if (!g) throw new Error("No network selected. Please pass a network argument, e.g. `Keypair.master(Networks.PUBLIC)`.");
      return this.fromRawEd25519Seed((0, i.hash)(g));
    } }, { key: "fromPublicKey", value: function(g) {
      if (g = n.StrKey.decodeEd25519PublicKey(g), g.length !== 32) throw new Error("Invalid Stellar public key");
      return new this({ type: "ed25519", publicKey: g });
    } }, { key: "random", value: function() {
      var g = v.default.randomBytes(32);
      return this.fromRawEd25519Seed(g);
    } }]);
  }(), za;
}
var tp;
function xo() {
  if (tp) return Va;
  tp = 1, Object.defineProperty(Va, "__esModule", { value: true }), Va.Asset = void 0;
  var v = em(), e = y(bn()), n = Ii(), i = ni(), u = Fo();
  function y(m) {
    return m && m.__esModule ? m : { default: m };
  }
  function t(m) {
    "@babel/helpers - typeof";
    return t = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(g) {
      return typeof g;
    } : function(g) {
      return g && typeof Symbol == "function" && g.constructor === Symbol && g !== Symbol.prototype ? "symbol" : typeof g;
    }, t(m);
  }
  function o(m, g) {
    if (!(m instanceof g)) throw new TypeError("Cannot call a class as a function");
  }
  function s(m, g) {
    for (var a = 0; a < g.length; a++) {
      var l = g[a];
      l.enumerable = l.enumerable || false, l.configurable = true, "value" in l && (l.writable = true), Object.defineProperty(m, h(l.key), l);
    }
  }
  function c(m, g, a) {
    return g && s(m.prototype, g), a && s(m, a), Object.defineProperty(m, "prototype", { writable: false }), m;
  }
  function h(m) {
    var g = f(m, "string");
    return t(g) == "symbol" ? g : g + "";
  }
  function f(m, g) {
    if (t(m) != "object" || !m) return m;
    var a = m[Symbol.toPrimitive];
    if (a !== void 0) {
      var l = a.call(m, g);
      if (t(l) != "object") return l;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return String(m);
  }
  Va.Asset = function() {
    function m(g, a) {
      if (o(this, m), !/^[a-zA-Z0-9]{1,12}$/.test(g)) throw new Error("Asset code is invalid (maximum alphanumeric, 12 characters at max)");
      if (String(g).toLowerCase() !== "xlm" && !a) throw new Error("Issuer cannot be null");
      if (a && !i.StrKey.isValidEd25519PublicKey(a)) throw new Error("Issuer is invalid");
      String(g).toLowerCase() === "xlm" ? this.code = "XLM" : this.code = g, this.issuer = a;
    }
    return c(m, [{ key: "toXDRObject", value: function() {
      return this._toXDRObject(e.default.Asset);
    } }, { key: "toChangeTrustXDRObject", value: function() {
      return this._toXDRObject(e.default.ChangeTrustAsset);
    } }, { key: "toTrustLineXDRObject", value: function() {
      return this._toXDRObject(e.default.TrustLineAsset);
    } }, { key: "contractId", value: function(a) {
      var l = (0, u.hash)(Buffer.from(a)), d = e.default.HashIdPreimage.envelopeTypeContractId(new e.default.HashIdPreimageContractId({ networkId: l, contractIdPreimage: e.default.ContractIdPreimage.contractIdPreimageFromAsset(this.toXDRObject()) }));
      return i.StrKey.encodeContract((0, u.hash)(d.toXDR()));
    } }, { key: "_toXDRObject", value: function() {
      var a = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : e.default.Asset;
      if (this.isNative()) return a.assetTypeNative();
      var l, d;
      this.code.length <= 4 ? (l = e.default.AlphaNum4, d = "assetTypeCreditAlphanum4") : (l = e.default.AlphaNum12, d = "assetTypeCreditAlphanum12");
      var b = this.code.length <= 4 ? 4 : 12, S = this.code.padEnd(b, "\0"), E = new l({ assetCode: S, issuer: n.Keypair.fromPublicKey(this.issuer).xdrAccountId() });
      return new a(d, E);
    } }, { key: "getCode", value: function() {
      if (this.code !== void 0) return String(this.code);
    } }, { key: "getIssuer", value: function() {
      if (this.issuer !== void 0) return String(this.issuer);
    } }, { key: "getAssetType", value: function() {
      switch (this.getRawAssetType().value) {
        case e.default.AssetType.assetTypeNative().value:
          return "native";
        case e.default.AssetType.assetTypeCreditAlphanum4().value:
          return "credit_alphanum4";
        case e.default.AssetType.assetTypeCreditAlphanum12().value:
          return "credit_alphanum12";
        default:
          return "unknown";
      }
    } }, { key: "getRawAssetType", value: function() {
      return this.isNative() ? e.default.AssetType.assetTypeNative() : this.code.length <= 4 ? e.default.AssetType.assetTypeCreditAlphanum4() : e.default.AssetType.assetTypeCreditAlphanum12();
    } }, { key: "isNative", value: function() {
      return !this.issuer;
    } }, { key: "equals", value: function(a) {
      return this.code === a.getCode() && this.issuer === a.getIssuer();
    } }, { key: "toString", value: function() {
      return this.isNative() ? "native" : "".concat(this.getCode(), ":").concat(this.getIssuer());
    } }], [{ key: "native", value: function() {
      return new m("XLM");
    } }, { key: "fromOperation", value: function(a) {
      var l, d, b;
      switch (a.switch()) {
        case e.default.AssetType.assetTypeNative():
          return this.native();
        case e.default.AssetType.assetTypeCreditAlphanum4():
          l = a.alphaNum4();
        case e.default.AssetType.assetTypeCreditAlphanum12():
          return l = l || a.alphaNum12(), b = i.StrKey.encodeEd25519PublicKey(l.issuer().ed25519()), d = (0, v.trimEnd)(l.assetCode(), "\0"), new this(d, b);
        default:
          throw new Error("Invalid asset type: ".concat(a.switch().name));
      }
    } }, { key: "compare", value: function(a, l) {
      if (!a || !(a instanceof m)) throw new Error("assetA is invalid");
      if (!l || !(l instanceof m)) throw new Error("assetB is invalid");
      if (a.equals(l)) return 0;
      var d = a.getRawAssetType().value, b = l.getRawAssetType().value;
      if (d !== b) return d < b ? -1 : 1;
      var S = r(a.getCode(), l.getCode());
      return S !== 0 ? S : r(a.getIssuer(), l.getIssuer());
    } }]);
  }();
  function r(m, g) {
    return Buffer.compare(Buffer.from(m, "ascii"), Buffer.from(g, "ascii"));
  }
  return Va;
}
var rp;
function tm() {
  if (rp) return la;
  rp = 1, Object.defineProperty(la, "__esModule", { value: true }), la.LiquidityPoolFeeV18 = void 0, la.getLiquidityPoolId = y;
  var v = i(bn()), e = xo(), n = Fo();
  function i(t) {
    return t && t.__esModule ? t : { default: t };
  }
  var u = la.LiquidityPoolFeeV18 = 30;
  function y(t) {
    var o = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    if (t !== "constant_product") throw new Error("liquidityPoolType is invalid");
    var s = o.assetA, c = o.assetB, h = o.fee;
    if (!s || !(s instanceof e.Asset)) throw new Error("assetA is invalid");
    if (!c || !(c instanceof e.Asset)) throw new Error("assetB is invalid");
    if (!h || h !== u) throw new Error("fee is invalid");
    if (e.Asset.compare(s, c) !== -1) throw new Error("Assets are not in lexicographic order");
    var f = v.default.LiquidityPoolType.liquidityPoolConstantProduct().toXDR(), r = new v.default.LiquidityPoolConstantProductParameters({ assetA: s.toXDRObject(), assetB: c.toXDRObject(), fee: h }).toXDR(), m = Buffer.concat([f, r]);
    return (0, n.hash)(m);
  }
  return la;
}
var Ha = {}, np;
function $l() {
  if (np) return Ha;
  np = 1, Object.defineProperty(Ha, "__esModule", { value: true }), Ha.TransactionBase = void 0;
  var v = i(bn()), e = Fo(), n = Ii();
  function i(h) {
    return h && h.__esModule ? h : { default: h };
  }
  function u(h) {
    "@babel/helpers - typeof";
    return u = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(f) {
      return typeof f;
    } : function(f) {
      return f && typeof Symbol == "function" && f.constructor === Symbol && f !== Symbol.prototype ? "symbol" : typeof f;
    }, u(h);
  }
  function y(h, f) {
    if (!(h instanceof f)) throw new TypeError("Cannot call a class as a function");
  }
  function t(h, f) {
    for (var r = 0; r < f.length; r++) {
      var m = f[r];
      m.enumerable = m.enumerable || false, m.configurable = true, "value" in m && (m.writable = true), Object.defineProperty(h, s(m.key), m);
    }
  }
  function o(h, f, r) {
    return f && t(h.prototype, f), Object.defineProperty(h, "prototype", { writable: false }), h;
  }
  function s(h) {
    var f = c(h, "string");
    return u(f) == "symbol" ? f : f + "";
  }
  function c(h, f) {
    if (u(h) != "object" || !h) return h;
    var r = h[Symbol.toPrimitive];
    if (r !== void 0) {
      var m = r.call(h, f);
      if (u(m) != "object") return m;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return String(h);
  }
  return Ha.TransactionBase = function() {
    function h(f, r, m, g) {
      if (y(this, h), typeof g != "string") throw new Error("Invalid passphrase provided to Transaction: expected a string but got a ".concat(u(g)));
      this._networkPassphrase = g, this._tx = f, this._signatures = r, this._fee = m;
    }
    return o(h, [{ key: "signatures", get: function() {
      return this._signatures;
    }, set: function(r) {
      throw new Error("Transaction is immutable");
    } }, { key: "tx", get: function() {
      return this._tx;
    }, set: function(r) {
      throw new Error("Transaction is immutable");
    } }, { key: "fee", get: function() {
      return this._fee;
    }, set: function(r) {
      throw new Error("Transaction is immutable");
    } }, { key: "networkPassphrase", get: function() {
      return this._networkPassphrase;
    }, set: function(r) {
      this._networkPassphrase = r;
    } }, { key: "sign", value: function() {
      for (var r = this, m = this.hash(), g = arguments.length, a = new Array(g), l = 0; l < g; l++) a[l] = arguments[l];
      a.forEach(function(d) {
        var b = d.signDecorated(m);
        r.signatures.push(b);
      });
    } }, { key: "getKeypairSignature", value: function(r) {
      return r.sign(this.hash()).toString("base64");
    } }, { key: "addSignature", value: function() {
      var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "", m = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
      if (!m || typeof m != "string") throw new Error("Invalid signature");
      if (!r || typeof r != "string") throw new Error("Invalid publicKey");
      var g, a, l = Buffer.from(m, "base64");
      try {
        g = n.Keypair.fromPublicKey(r), a = g.signatureHint();
      } catch {
        throw new Error("Invalid publicKey");
      }
      if (!g.verify(this.hash(), l)) throw new Error("Invalid signature");
      this.signatures.push(new v.default.DecoratedSignature({ hint: a, signature: l }));
    } }, { key: "addDecoratedSignature", value: function(r) {
      this.signatures.push(r);
    } }, { key: "signHashX", value: function(r) {
      if (typeof r == "string" && (r = Buffer.from(r, "hex")), r.length > 64) throw new Error("preimage cannnot be longer than 64 bytes");
      var m = r, g = (0, e.hash)(r), a = g.slice(g.length - 4);
      this.signatures.push(new v.default.DecoratedSignature({ hint: a, signature: m }));
    } }, { key: "hash", value: function() {
      return (0, e.hash)(this.signatureBase());
    } }, { key: "signatureBase", value: function() {
      throw new Error("Implement in subclass");
    } }, { key: "toEnvelope", value: function() {
      throw new Error("Implement in subclass");
    } }, { key: "toXDR", value: function() {
      return this.toEnvelope().toXDR().toString("base64");
    } }]);
  }(), Ha;
}
var Ga = {}, ki = {}, Kc = {}, sc = { exports: {} }, By = sc.exports, ip;
function Ny() {
  return ip || (ip = 1, function(v) {
    (function(e) {
      var n, i = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i, u = Math.ceil, y = Math.floor, t = "[BigNumber Error] ", o = t + "Number primitive has more than 15 significant digits: ", s = 1e14, c = 14, h = 9007199254740991, f = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13], r = 1e7, m = 1e9;
      function g(k) {
        var w, F, I, q = Q.prototype = { constructor: Q, toString: null, valueOf: null }, N = new Q(1), H = 20, _ = 4, x = -7, L = 21, j = -1e7, z = 1e7, Z = false, ue = 1, $ = 0, X = { prefix: "", groupSize: 3, secondaryGroupSize: 0, groupSeparator: ",", decimalSeparator: ".", fractionGroupSize: 0, fractionGroupSeparator: "\xA0", suffix: "" }, J = "0123456789abcdefghijklmnopqrstuvwxyz", B = true;
        function Q(oe, se) {
          var re, ge, Te, pe, Oe, xe, Ve, _e, Be = this;
          if (!(Be instanceof Q)) return new Q(oe, se);
          if (se == null) {
            if (oe && oe._isBigNumber === true) {
              Be.s = oe.s, !oe.c || oe.e > z ? Be.c = Be.e = null : oe.e < j ? Be.c = [Be.e = 0] : (Be.e = oe.e, Be.c = oe.c.slice());
              return;
            }
            if ((xe = typeof oe == "number") && oe * 0 == 0) {
              if (Be.s = 1 / oe < 0 ? (oe = -oe, -1) : 1, oe === ~~oe) {
                for (pe = 0, Oe = oe; Oe >= 10; Oe /= 10, pe++) ;
                pe > z ? Be.c = Be.e = null : (Be.e = pe, Be.c = [oe]);
                return;
              }
              _e = String(oe);
            } else {
              if (!i.test(_e = String(oe))) return I(Be, _e, xe);
              Be.s = _e.charCodeAt(0) == 45 ? (_e = _e.slice(1), -1) : 1;
            }
            (pe = _e.indexOf(".")) > -1 && (_e = _e.replace(".", "")), (Oe = _e.search(/e/i)) > 0 ? (pe < 0 && (pe = Oe), pe += +_e.slice(Oe + 1), _e = _e.substring(0, Oe)) : pe < 0 && (pe = _e.length);
          } else {
            if (b(se, 2, J.length, "Base"), se == 10 && B) return Be = new Q(oe), ce(Be, H + Be.e + 1, _);
            if (_e = String(oe), xe = typeof oe == "number") {
              if (oe * 0 != 0) return I(Be, _e, xe, se);
              if (Be.s = 1 / oe < 0 ? (_e = _e.slice(1), -1) : 1, Q.DEBUG && _e.replace(/^0\.0*|\./, "").length > 15) throw Error(o + oe);
            } else Be.s = _e.charCodeAt(0) === 45 ? (_e = _e.slice(1), -1) : 1;
            for (re = J.slice(0, se), pe = Oe = 0, Ve = _e.length; Oe < Ve; Oe++) if (re.indexOf(ge = _e.charAt(Oe)) < 0) {
              if (ge == ".") {
                if (Oe > pe) {
                  pe = Ve;
                  continue;
                }
              } else if (!Te && (_e == _e.toUpperCase() && (_e = _e.toLowerCase()) || _e == _e.toLowerCase() && (_e = _e.toUpperCase()))) {
                Te = true, Oe = -1, pe = 0;
                continue;
              }
              return I(Be, String(oe), xe, se);
            }
            xe = false, _e = F(_e, se, 10, Be.s), (pe = _e.indexOf(".")) > -1 ? _e = _e.replace(".", "") : pe = _e.length;
          }
          for (Oe = 0; _e.charCodeAt(Oe) === 48; Oe++) ;
          for (Ve = _e.length; _e.charCodeAt(--Ve) === 48; ) ;
          if (_e = _e.slice(Oe, ++Ve)) {
            if (Ve -= Oe, xe && Q.DEBUG && Ve > 15 && (oe > h || oe !== y(oe))) throw Error(o + Be.s * oe);
            if ((pe = pe - Oe - 1) > z) Be.c = Be.e = null;
            else if (pe < j) Be.c = [Be.e = 0];
            else {
              if (Be.e = pe, Be.c = [], Oe = (pe + 1) % c, pe < 0 && (Oe += c), Oe < Ve) {
                for (Oe && Be.c.push(+_e.slice(0, Oe)), Ve -= c; Oe < Ve; ) Be.c.push(+_e.slice(Oe, Oe += c));
                Oe = c - (_e = _e.slice(Oe)).length;
              } else Oe -= Ve;
              for (; Oe--; _e += "0") ;
              Be.c.push(+_e);
            }
          } else Be.c = [Be.e = 0];
        }
        Q.clone = g, Q.ROUND_UP = 0, Q.ROUND_DOWN = 1, Q.ROUND_CEIL = 2, Q.ROUND_FLOOR = 3, Q.ROUND_HALF_UP = 4, Q.ROUND_HALF_DOWN = 5, Q.ROUND_HALF_EVEN = 6, Q.ROUND_HALF_CEIL = 7, Q.ROUND_HALF_FLOOR = 8, Q.EUCLID = 9, Q.config = Q.set = function(oe) {
          var se, re;
          if (oe != null) if (typeof oe == "object") {
            if (oe.hasOwnProperty(se = "DECIMAL_PLACES") && (re = oe[se], b(re, 0, m, se), H = re), oe.hasOwnProperty(se = "ROUNDING_MODE") && (re = oe[se], b(re, 0, 8, se), _ = re), oe.hasOwnProperty(se = "EXPONENTIAL_AT") && (re = oe[se], re && re.pop ? (b(re[0], -1e9, 0, se), b(re[1], 0, m, se), x = re[0], L = re[1]) : (b(re, -1e9, m, se), x = -(L = re < 0 ? -re : re))), oe.hasOwnProperty(se = "RANGE")) if (re = oe[se], re && re.pop) b(re[0], -1e9, -1, se), b(re[1], 1, m, se), j = re[0], z = re[1];
            else if (b(re, -1e9, m, se), re) j = -(z = re < 0 ? -re : re);
            else throw Error(t + se + " cannot be zero: " + re);
            if (oe.hasOwnProperty(se = "CRYPTO")) if (re = oe[se], re === !!re) if (re) if (typeof crypto < "u" && crypto && (crypto.getRandomValues || crypto.randomBytes)) Z = re;
            else throw Z = !re, Error(t + "crypto unavailable");
            else Z = re;
            else throw Error(t + se + " not true or false: " + re);
            if (oe.hasOwnProperty(se = "MODULO_MODE") && (re = oe[se], b(re, 0, 9, se), ue = re), oe.hasOwnProperty(se = "POW_PRECISION") && (re = oe[se], b(re, 0, m, se), $ = re), oe.hasOwnProperty(se = "FORMAT")) if (re = oe[se], typeof re == "object") X = re;
            else throw Error(t + se + " not an object: " + re);
            if (oe.hasOwnProperty(se = "ALPHABET")) if (re = oe[se], typeof re == "string" && !/^.?$|[+\-.\s]|(.).*\1/.test(re)) B = re.slice(0, 10) == "0123456789", J = re;
            else throw Error(t + se + " invalid: " + re);
          } else throw Error(t + "Object expected: " + oe);
          return { DECIMAL_PLACES: H, ROUNDING_MODE: _, EXPONENTIAL_AT: [x, L], RANGE: [j, z], CRYPTO: Z, MODULO_MODE: ue, POW_PRECISION: $, FORMAT: X, ALPHABET: J };
        }, Q.isBigNumber = function(oe) {
          if (!oe || oe._isBigNumber !== true) return false;
          if (!Q.DEBUG) return true;
          var se, re, ge = oe.c, Te = oe.e, pe = oe.s;
          e: if ({}.toString.call(ge) == "[object Array]") {
            if ((pe === 1 || pe === -1) && Te >= -1e9 && Te <= m && Te === y(Te)) {
              if (ge[0] === 0) {
                if (Te === 0 && ge.length === 1) return true;
                break e;
              }
              if (se = (Te + 1) % c, se < 1 && (se += c), String(ge[0]).length == se) {
                for (se = 0; se < ge.length; se++) if (re = ge[se], re < 0 || re >= s || re !== y(re)) break e;
                if (re !== 0) return true;
              }
            }
          } else if (ge === null && Te === null && (pe === null || pe === 1 || pe === -1)) return true;
          throw Error(t + "Invalid BigNumber: " + oe);
        }, Q.maximum = Q.max = function() {
          return K(arguments, -1);
        }, Q.minimum = Q.min = function() {
          return K(arguments, 1);
        }, Q.random = function() {
          var oe = 9007199254740992, se = Math.random() * oe & 2097151 ? function() {
            return y(Math.random() * oe);
          } : function() {
            return (Math.random() * 1073741824 | 0) * 8388608 + (Math.random() * 8388608 | 0);
          };
          return function(re) {
            var ge, Te, pe, Oe, xe, Ve = 0, _e = [], Be = new Q(N);
            if (re == null ? re = H : b(re, 0, m), Oe = u(re / c), Z) if (crypto.getRandomValues) {
              for (ge = crypto.getRandomValues(new Uint32Array(Oe *= 2)); Ve < Oe; ) xe = ge[Ve] * 131072 + (ge[Ve + 1] >>> 11), xe >= 9e15 ? (Te = crypto.getRandomValues(new Uint32Array(2)), ge[Ve] = Te[0], ge[Ve + 1] = Te[1]) : (_e.push(xe % 1e14), Ve += 2);
              Ve = Oe / 2;
            } else if (crypto.randomBytes) {
              for (ge = crypto.randomBytes(Oe *= 7); Ve < Oe; ) xe = (ge[Ve] & 31) * 281474976710656 + ge[Ve + 1] * 1099511627776 + ge[Ve + 2] * 4294967296 + ge[Ve + 3] * 16777216 + (ge[Ve + 4] << 16) + (ge[Ve + 5] << 8) + ge[Ve + 6], xe >= 9e15 ? crypto.randomBytes(7).copy(ge, Ve) : (_e.push(xe % 1e14), Ve += 7);
              Ve = Oe / 7;
            } else throw Z = false, Error(t + "crypto unavailable");
            if (!Z) for (; Ve < Oe; ) xe = se(), xe < 9e15 && (_e[Ve++] = xe % 1e14);
            for (Oe = _e[--Ve], re %= c, Oe && re && (xe = f[c - re], _e[Ve] = y(Oe / xe) * xe); _e[Ve] === 0; _e.pop(), Ve--) ;
            if (Ve < 0) _e = [pe = 0];
            else {
              for (pe = -1; _e[0] === 0; _e.splice(0, 1), pe -= c) ;
              for (Ve = 1, xe = _e[0]; xe >= 10; xe /= 10, Ve++) ;
              Ve < c && (pe -= c - Ve);
            }
            return Be.e = pe, Be.c = _e, Be;
          };
        }(), Q.sum = function() {
          for (var oe = 1, se = arguments, re = new Q(se[0]); oe < se.length; ) re = re.plus(se[oe++]);
          return re;
        }, F = /* @__PURE__ */ function() {
          var oe = "0123456789";
          function se(re, ge, Te, pe) {
            for (var Oe, xe = [0], Ve, _e = 0, Be = re.length; _e < Be; ) {
              for (Ve = xe.length; Ve--; xe[Ve] *= ge) ;
              for (xe[0] += pe.indexOf(re.charAt(_e++)), Oe = 0; Oe < xe.length; Oe++) xe[Oe] > Te - 1 && (xe[Oe + 1] == null && (xe[Oe + 1] = 0), xe[Oe + 1] += xe[Oe] / Te | 0, xe[Oe] %= Te);
            }
            return xe.reverse();
          }
          return function(re, ge, Te, pe, Oe) {
            var xe, Ve, _e, Be, Qe, ee, P, T, O = re.indexOf("."), V = H, D = _;
            for (O >= 0 && (Be = $, $ = 0, re = re.replace(".", ""), T = new Q(ge), ee = T.pow(re.length - O), $ = Be, T.c = se(R(l(ee.c), ee.e, "0"), 10, Te, oe), T.e = T.c.length), P = se(re, ge, Te, Oe ? (xe = J, oe) : (xe = oe, J)), _e = Be = P.length; P[--Be] == 0; P.pop()) ;
            if (!P[0]) return xe.charAt(0);
            if (O < 0 ? --_e : (ee.c = P, ee.e = _e, ee.s = pe, ee = w(ee, T, V, D, Te), P = ee.c, Qe = ee.r, _e = ee.e), Ve = _e + V + 1, O = P[Ve], Be = Te / 2, Qe = Qe || Ve < 0 || P[Ve + 1] != null, Qe = D < 4 ? (O != null || Qe) && (D == 0 || D == (ee.s < 0 ? 3 : 2)) : O > Be || O == Be && (D == 4 || Qe || D == 6 && P[Ve - 1] & 1 || D == (ee.s < 0 ? 8 : 7)), Ve < 1 || !P[0]) re = Qe ? R(xe.charAt(1), -V, xe.charAt(0)) : xe.charAt(0);
            else {
              if (P.length = Ve, Qe) for (--Te; ++P[--Ve] > Te; ) P[Ve] = 0, Ve || (++_e, P = [1].concat(P));
              for (Be = P.length; !P[--Be]; ) ;
              for (O = 0, re = ""; O <= Be; re += xe.charAt(P[O++])) ;
              re = R(re, _e, xe.charAt(0));
            }
            return re;
          };
        }(), w = /* @__PURE__ */ function() {
          function oe(ge, Te, pe) {
            var Oe, xe, Ve, _e, Be = 0, Qe = ge.length, ee = Te % r, P = Te / r | 0;
            for (ge = ge.slice(); Qe--; ) Ve = ge[Qe] % r, _e = ge[Qe] / r | 0, Oe = P * Ve + _e * ee, xe = ee * Ve + Oe % r * r + Be, Be = (xe / pe | 0) + (Oe / r | 0) + P * _e, ge[Qe] = xe % pe;
            return Be && (ge = [Be].concat(ge)), ge;
          }
          function se(ge, Te, pe, Oe) {
            var xe, Ve;
            if (pe != Oe) Ve = pe > Oe ? 1 : -1;
            else for (xe = Ve = 0; xe < pe; xe++) if (ge[xe] != Te[xe]) {
              Ve = ge[xe] > Te[xe] ? 1 : -1;
              break;
            }
            return Ve;
          }
          function re(ge, Te, pe, Oe) {
            for (var xe = 0; pe--; ) ge[pe] -= xe, xe = ge[pe] < Te[pe] ? 1 : 0, ge[pe] = xe * Oe + ge[pe] - Te[pe];
            for (; !ge[0] && ge.length > 1; ge.splice(0, 1)) ;
          }
          return function(ge, Te, pe, Oe, xe) {
            var Ve, _e, Be, Qe, ee, P, T, O, V, D, C, p, A, U, Y, ae, W, de = ge.s == Te.s ? 1 : -1, tt = ge.c, Ne = Te.c;
            if (!tt || !tt[0] || !Ne || !Ne[0]) return new Q(!ge.s || !Te.s || (tt ? Ne && tt[0] == Ne[0] : !Ne) ? NaN : tt && tt[0] == 0 || !Ne ? de * 0 : de / 0);
            for (O = new Q(de), V = O.c = [], _e = ge.e - Te.e, de = pe + _e + 1, xe || (xe = s, _e = a(ge.e / c) - a(Te.e / c), de = de / c | 0), Be = 0; Ne[Be] == (tt[Be] || 0); Be++) ;
            if (Ne[Be] > (tt[Be] || 0) && _e--, de < 0) V.push(1), Qe = true;
            else {
              for (U = tt.length, ae = Ne.length, Be = 0, de += 2, ee = y(xe / (Ne[0] + 1)), ee > 1 && (Ne = oe(Ne, ee, xe), tt = oe(tt, ee, xe), ae = Ne.length, U = tt.length), A = ae, D = tt.slice(0, ae), C = D.length; C < ae; D[C++] = 0) ;
              W = Ne.slice(), W = [0].concat(W), Y = Ne[0], Ne[1] >= xe / 2 && Y++;
              do {
                if (ee = 0, Ve = se(Ne, D, ae, C), Ve < 0) {
                  if (p = D[0], ae != C && (p = p * xe + (D[1] || 0)), ee = y(p / Y), ee > 1) for (ee >= xe && (ee = xe - 1), P = oe(Ne, ee, xe), T = P.length, C = D.length; se(P, D, T, C) == 1; ) ee--, re(P, ae < T ? W : Ne, T, xe), T = P.length, Ve = 1;
                  else ee == 0 && (Ve = ee = 1), P = Ne.slice(), T = P.length;
                  if (T < C && (P = [0].concat(P)), re(D, P, C, xe), C = D.length, Ve == -1) for (; se(Ne, D, ae, C) < 1; ) ee++, re(D, ae < C ? W : Ne, C, xe), C = D.length;
                } else Ve === 0 && (ee++, D = [0]);
                V[Be++] = ee, D[0] ? D[C++] = tt[A] || 0 : (D = [tt[A]], C = 1);
              } while ((A++ < U || D[0] != null) && de--);
              Qe = D[0] != null, V[0] || V.splice(0, 1);
            }
            if (xe == s) {
              for (Be = 1, de = V[0]; de >= 10; de /= 10, Be++) ;
              ce(O, pe + (O.e = Be + _e * c - 1) + 1, Oe, Qe);
            } else O.e = _e, O.r = +Qe;
            return O;
          };
        }();
        function ne(oe, se, re, ge) {
          var Te, pe, Oe, xe, Ve;
          if (re == null ? re = _ : b(re, 0, 8), !oe.c) return oe.toString();
          if (Te = oe.c[0], Oe = oe.e, se == null) Ve = l(oe.c), Ve = ge == 1 || ge == 2 && (Oe <= x || Oe >= L) ? E(Ve, Oe) : R(Ve, Oe, "0");
          else if (oe = ce(new Q(oe), se, re), pe = oe.e, Ve = l(oe.c), xe = Ve.length, ge == 1 || ge == 2 && (se <= pe || pe <= x)) {
            for (; xe < se; Ve += "0", xe++) ;
            Ve = E(Ve, pe);
          } else if (se -= Oe, Ve = R(Ve, pe, "0"), pe + 1 > xe) {
            if (--se > 0) for (Ve += "."; se--; Ve += "0") ;
          } else if (se += pe - xe, se > 0) for (pe + 1 == xe && (Ve += "."); se--; Ve += "0") ;
          return oe.s < 0 && Te ? "-" + Ve : Ve;
        }
        function K(oe, se) {
          for (var re, ge, Te = 1, pe = new Q(oe[0]); Te < oe.length; Te++) ge = new Q(oe[Te]), (!ge.s || (re = d(pe, ge)) === se || re === 0 && pe.s === se) && (pe = ge);
          return pe;
        }
        function ie(oe, se, re) {
          for (var ge = 1, Te = se.length; !se[--Te]; se.pop()) ;
          for (Te = se[0]; Te >= 10; Te /= 10, ge++) ;
          return (re = ge + re * c - 1) > z ? oe.c = oe.e = null : re < j ? oe.c = [oe.e = 0] : (oe.e = re, oe.c = se), oe;
        }
        I = /* @__PURE__ */ function() {
          var oe = /^(-?)0([xbo])(?=\w[\w.]*$)/i, se = /^([^.]+)\.$/, re = /^\.([^.]+)$/, ge = /^-?(Infinity|NaN)$/, Te = /^\s*\+(?=[\w.])|^\s+|\s+$/g;
          return function(pe, Oe, xe, Ve) {
            var _e, Be = xe ? Oe : Oe.replace(Te, "");
            if (ge.test(Be)) pe.s = isNaN(Be) ? null : Be < 0 ? -1 : 1;
            else {
              if (!xe && (Be = Be.replace(oe, function(Qe, ee, P) {
                return _e = (P = P.toLowerCase()) == "x" ? 16 : P == "b" ? 2 : 8, !Ve || Ve == _e ? ee : Qe;
              }), Ve && (_e = Ve, Be = Be.replace(se, "$1").replace(re, "0.$1")), Oe != Be)) return new Q(Be, _e);
              if (Q.DEBUG) throw Error(t + "Not a" + (Ve ? " base " + Ve : "") + " number: " + Oe);
              pe.s = null;
            }
            pe.c = pe.e = null;
          };
        }();
        function ce(oe, se, re, ge) {
          var Te, pe, Oe, xe, Ve, _e, Be, Qe = oe.c, ee = f;
          if (Qe) {
            e: {
              for (Te = 1, xe = Qe[0]; xe >= 10; xe /= 10, Te++) ;
              if (pe = se - Te, pe < 0) pe += c, Oe = se, Ve = Qe[_e = 0], Be = y(Ve / ee[Te - Oe - 1] % 10);
              else if (_e = u((pe + 1) / c), _e >= Qe.length) if (ge) {
                for (; Qe.length <= _e; Qe.push(0)) ;
                Ve = Be = 0, Te = 1, pe %= c, Oe = pe - c + 1;
              } else break e;
              else {
                for (Ve = xe = Qe[_e], Te = 1; xe >= 10; xe /= 10, Te++) ;
                pe %= c, Oe = pe - c + Te, Be = Oe < 0 ? 0 : y(Ve / ee[Te - Oe - 1] % 10);
              }
              if (ge = ge || se < 0 || Qe[_e + 1] != null || (Oe < 0 ? Ve : Ve % ee[Te - Oe - 1]), ge = re < 4 ? (Be || ge) && (re == 0 || re == (oe.s < 0 ? 3 : 2)) : Be > 5 || Be == 5 && (re == 4 || ge || re == 6 && (pe > 0 ? Oe > 0 ? Ve / ee[Te - Oe] : 0 : Qe[_e - 1]) % 10 & 1 || re == (oe.s < 0 ? 8 : 7)), se < 1 || !Qe[0]) return Qe.length = 0, ge ? (se -= oe.e + 1, Qe[0] = ee[(c - se % c) % c], oe.e = -se || 0) : Qe[0] = oe.e = 0, oe;
              if (pe == 0 ? (Qe.length = _e, xe = 1, _e--) : (Qe.length = _e + 1, xe = ee[c - pe], Qe[_e] = Oe > 0 ? y(Ve / ee[Te - Oe] % ee[Oe]) * xe : 0), ge) for (; ; ) if (_e == 0) {
                for (pe = 1, Oe = Qe[0]; Oe >= 10; Oe /= 10, pe++) ;
                for (Oe = Qe[0] += xe, xe = 1; Oe >= 10; Oe /= 10, xe++) ;
                pe != xe && (oe.e++, Qe[0] == s && (Qe[0] = 1));
                break;
              } else {
                if (Qe[_e] += xe, Qe[_e] != s) break;
                Qe[_e--] = 0, xe = 1;
              }
              for (pe = Qe.length; Qe[--pe] === 0; Qe.pop()) ;
            }
            oe.e > z ? oe.c = oe.e = null : oe.e < j && (oe.c = [oe.e = 0]);
          }
          return oe;
        }
        function ye(oe) {
          var se, re = oe.e;
          return re === null ? oe.toString() : (se = l(oe.c), se = re <= x || re >= L ? E(se, re) : R(se, re, "0"), oe.s < 0 ? "-" + se : se);
        }
        return q.absoluteValue = q.abs = function() {
          var oe = new Q(this);
          return oe.s < 0 && (oe.s = 1), oe;
        }, q.comparedTo = function(oe, se) {
          return d(this, new Q(oe, se));
        }, q.decimalPlaces = q.dp = function(oe, se) {
          var re, ge, Te, pe = this;
          if (oe != null) return b(oe, 0, m), se == null ? se = _ : b(se, 0, 8), ce(new Q(pe), oe + pe.e + 1, se);
          if (!(re = pe.c)) return null;
          if (ge = ((Te = re.length - 1) - a(this.e / c)) * c, Te = re[Te]) for (; Te % 10 == 0; Te /= 10, ge--) ;
          return ge < 0 && (ge = 0), ge;
        }, q.dividedBy = q.div = function(oe, se) {
          return w(this, new Q(oe, se), H, _);
        }, q.dividedToIntegerBy = q.idiv = function(oe, se) {
          return w(this, new Q(oe, se), 0, 1);
        }, q.exponentiatedBy = q.pow = function(oe, se) {
          var re, ge, Te, pe, Oe, xe, Ve, _e, Be, Qe = this;
          if (oe = new Q(oe), oe.c && !oe.isInteger()) throw Error(t + "Exponent not an integer: " + ye(oe));
          if (se != null && (se = new Q(se)), xe = oe.e > 14, !Qe.c || !Qe.c[0] || Qe.c[0] == 1 && !Qe.e && Qe.c.length == 1 || !oe.c || !oe.c[0]) return Be = new Q(Math.pow(+ye(Qe), xe ? oe.s * (2 - S(oe)) : +ye(oe))), se ? Be.mod(se) : Be;
          if (Ve = oe.s < 0, se) {
            if (se.c ? !se.c[0] : !se.s) return new Q(NaN);
            ge = !Ve && Qe.isInteger() && se.isInteger(), ge && (Qe = Qe.mod(se));
          } else {
            if (oe.e > 9 && (Qe.e > 0 || Qe.e < -1 || (Qe.e == 0 ? Qe.c[0] > 1 || xe && Qe.c[1] >= 24e7 : Qe.c[0] < 8e13 || xe && Qe.c[0] <= 9999975e7))) return pe = Qe.s < 0 && S(oe) ? -0 : 0, Qe.e > -1 && (pe = 1 / pe), new Q(Ve ? 1 / pe : pe);
            $ && (pe = u($ / c + 2));
          }
          for (xe ? (re = new Q(0.5), Ve && (oe.s = 1), _e = S(oe)) : (Te = Math.abs(+ye(oe)), _e = Te % 2), Be = new Q(N); ; ) {
            if (_e) {
              if (Be = Be.times(Qe), !Be.c) break;
              pe ? Be.c.length > pe && (Be.c.length = pe) : ge && (Be = Be.mod(se));
            }
            if (Te) {
              if (Te = y(Te / 2), Te === 0) break;
              _e = Te % 2;
            } else if (oe = oe.times(re), ce(oe, oe.e + 1, 1), oe.e > 14) _e = S(oe);
            else {
              if (Te = +ye(oe), Te === 0) break;
              _e = Te % 2;
            }
            Qe = Qe.times(Qe), pe ? Qe.c && Qe.c.length > pe && (Qe.c.length = pe) : ge && (Qe = Qe.mod(se));
          }
          return ge ? Be : (Ve && (Be = N.div(Be)), se ? Be.mod(se) : pe ? ce(Be, $, _, Oe) : Be);
        }, q.integerValue = function(oe) {
          var se = new Q(this);
          return oe == null ? oe = _ : b(oe, 0, 8), ce(se, se.e + 1, oe);
        }, q.isEqualTo = q.eq = function(oe, se) {
          return d(this, new Q(oe, se)) === 0;
        }, q.isFinite = function() {
          return !!this.c;
        }, q.isGreaterThan = q.gt = function(oe, se) {
          return d(this, new Q(oe, se)) > 0;
        }, q.isGreaterThanOrEqualTo = q.gte = function(oe, se) {
          return (se = d(this, new Q(oe, se))) === 1 || se === 0;
        }, q.isInteger = function() {
          return !!this.c && a(this.e / c) > this.c.length - 2;
        }, q.isLessThan = q.lt = function(oe, se) {
          return d(this, new Q(oe, se)) < 0;
        }, q.isLessThanOrEqualTo = q.lte = function(oe, se) {
          return (se = d(this, new Q(oe, se))) === -1 || se === 0;
        }, q.isNaN = function() {
          return !this.s;
        }, q.isNegative = function() {
          return this.s < 0;
        }, q.isPositive = function() {
          return this.s > 0;
        }, q.isZero = function() {
          return !!this.c && this.c[0] == 0;
        }, q.minus = function(oe, se) {
          var re, ge, Te, pe, Oe = this, xe = Oe.s;
          if (oe = new Q(oe, se), se = oe.s, !xe || !se) return new Q(NaN);
          if (xe != se) return oe.s = -se, Oe.plus(oe);
          var Ve = Oe.e / c, _e = oe.e / c, Be = Oe.c, Qe = oe.c;
          if (!Ve || !_e) {
            if (!Be || !Qe) return Be ? (oe.s = -se, oe) : new Q(Qe ? Oe : NaN);
            if (!Be[0] || !Qe[0]) return Qe[0] ? (oe.s = -se, oe) : new Q(Be[0] ? Oe : _ == 3 ? -0 : 0);
          }
          if (Ve = a(Ve), _e = a(_e), Be = Be.slice(), xe = Ve - _e) {
            for ((pe = xe < 0) ? (xe = -xe, Te = Be) : (_e = Ve, Te = Qe), Te.reverse(), se = xe; se--; Te.push(0)) ;
            Te.reverse();
          } else for (ge = (pe = (xe = Be.length) < (se = Qe.length)) ? xe : se, xe = se = 0; se < ge; se++) if (Be[se] != Qe[se]) {
            pe = Be[se] < Qe[se];
            break;
          }
          if (pe && (Te = Be, Be = Qe, Qe = Te, oe.s = -oe.s), se = (ge = Qe.length) - (re = Be.length), se > 0) for (; se--; Be[re++] = 0) ;
          for (se = s - 1; ge > xe; ) {
            if (Be[--ge] < Qe[ge]) {
              for (re = ge; re && !Be[--re]; Be[re] = se) ;
              --Be[re], Be[ge] += s;
            }
            Be[ge] -= Qe[ge];
          }
          for (; Be[0] == 0; Be.splice(0, 1), --_e) ;
          return Be[0] ? ie(oe, Be, _e) : (oe.s = _ == 3 ? -1 : 1, oe.c = [oe.e = 0], oe);
        }, q.modulo = q.mod = function(oe, se) {
          var re, ge, Te = this;
          return oe = new Q(oe, se), !Te.c || !oe.s || oe.c && !oe.c[0] ? new Q(NaN) : !oe.c || Te.c && !Te.c[0] ? new Q(Te) : (ue == 9 ? (ge = oe.s, oe.s = 1, re = w(Te, oe, 0, 3), oe.s = ge, re.s *= ge) : re = w(Te, oe, 0, ue), oe = Te.minus(re.times(oe)), !oe.c[0] && ue == 1 && (oe.s = Te.s), oe);
        }, q.multipliedBy = q.times = function(oe, se) {
          var re, ge, Te, pe, Oe, xe, Ve, _e, Be, Qe, ee, P, T, O, V, D = this, C = D.c, p = (oe = new Q(oe, se)).c;
          if (!C || !p || !C[0] || !p[0]) return !D.s || !oe.s || C && !C[0] && !p || p && !p[0] && !C ? oe.c = oe.e = oe.s = null : (oe.s *= D.s, !C || !p ? oe.c = oe.e = null : (oe.c = [0], oe.e = 0)), oe;
          for (ge = a(D.e / c) + a(oe.e / c), oe.s *= D.s, Ve = C.length, Qe = p.length, Ve < Qe && (T = C, C = p, p = T, Te = Ve, Ve = Qe, Qe = Te), Te = Ve + Qe, T = []; Te--; T.push(0)) ;
          for (O = s, V = r, Te = Qe; --Te >= 0; ) {
            for (re = 0, ee = p[Te] % V, P = p[Te] / V | 0, Oe = Ve, pe = Te + Oe; pe > Te; ) _e = C[--Oe] % V, Be = C[Oe] / V | 0, xe = P * _e + Be * ee, _e = ee * _e + xe % V * V + T[pe] + re, re = (_e / O | 0) + (xe / V | 0) + P * Be, T[pe--] = _e % O;
            T[pe] = re;
          }
          return re ? ++ge : T.splice(0, 1), ie(oe, T, ge);
        }, q.negated = function() {
          var oe = new Q(this);
          return oe.s = -oe.s || null, oe;
        }, q.plus = function(oe, se) {
          var re, ge = this, Te = ge.s;
          if (oe = new Q(oe, se), se = oe.s, !Te || !se) return new Q(NaN);
          if (Te != se) return oe.s = -se, ge.minus(oe);
          var pe = ge.e / c, Oe = oe.e / c, xe = ge.c, Ve = oe.c;
          if (!pe || !Oe) {
            if (!xe || !Ve) return new Q(Te / 0);
            if (!xe[0] || !Ve[0]) return Ve[0] ? oe : new Q(xe[0] ? ge : Te * 0);
          }
          if (pe = a(pe), Oe = a(Oe), xe = xe.slice(), Te = pe - Oe) {
            for (Te > 0 ? (Oe = pe, re = Ve) : (Te = -Te, re = xe), re.reverse(); Te--; re.push(0)) ;
            re.reverse();
          }
          for (Te = xe.length, se = Ve.length, Te - se < 0 && (re = Ve, Ve = xe, xe = re, se = Te), Te = 0; se; ) Te = (xe[--se] = xe[se] + Ve[se] + Te) / s | 0, xe[se] = s === xe[se] ? 0 : xe[se] % s;
          return Te && (xe = [Te].concat(xe), ++Oe), ie(oe, xe, Oe);
        }, q.precision = q.sd = function(oe, se) {
          var re, ge, Te, pe = this;
          if (oe != null && oe !== !!oe) return b(oe, 1, m), se == null ? se = _ : b(se, 0, 8), ce(new Q(pe), oe, se);
          if (!(re = pe.c)) return null;
          if (Te = re.length - 1, ge = Te * c + 1, Te = re[Te]) {
            for (; Te % 10 == 0; Te /= 10, ge--) ;
            for (Te = re[0]; Te >= 10; Te /= 10, ge++) ;
          }
          return oe && pe.e + 1 > ge && (ge = pe.e + 1), ge;
        }, q.shiftedBy = function(oe) {
          return b(oe, -9007199254740991, h), this.times("1e" + oe);
        }, q.squareRoot = q.sqrt = function() {
          var oe, se, re, ge, Te, pe = this, Oe = pe.c, xe = pe.s, Ve = pe.e, _e = H + 4, Be = new Q("0.5");
          if (xe !== 1 || !Oe || !Oe[0]) return new Q(!xe || xe < 0 && (!Oe || Oe[0]) ? NaN : Oe ? pe : 1 / 0);
          if (xe = Math.sqrt(+ye(pe)), xe == 0 || xe == 1 / 0 ? (se = l(Oe), (se.length + Ve) % 2 == 0 && (se += "0"), xe = Math.sqrt(+se), Ve = a((Ve + 1) / 2) - (Ve < 0 || Ve % 2), xe == 1 / 0 ? se = "5e" + Ve : (se = xe.toExponential(), se = se.slice(0, se.indexOf("e") + 1) + Ve), re = new Q(se)) : re = new Q(xe + ""), re.c[0]) {
            for (Ve = re.e, xe = Ve + _e, xe < 3 && (xe = 0); ; ) if (Te = re, re = Be.times(Te.plus(w(pe, Te, _e, 1))), l(Te.c).slice(0, xe) === (se = l(re.c)).slice(0, xe)) if (re.e < Ve && --xe, se = se.slice(xe - 3, xe + 1), se == "9999" || !ge && se == "4999") {
              if (!ge && (ce(Te, Te.e + H + 2, 0), Te.times(Te).eq(pe))) {
                re = Te;
                break;
              }
              _e += 4, xe += 4, ge = 1;
            } else {
              (!+se || !+se.slice(1) && se.charAt(0) == "5") && (ce(re, re.e + H + 2, 1), oe = !re.times(re).eq(pe));
              break;
            }
          }
          return ce(re, re.e + H + 1, _, oe);
        }, q.toExponential = function(oe, se) {
          return oe != null && (b(oe, 0, m), oe++), ne(this, oe, se, 1);
        }, q.toFixed = function(oe, se) {
          return oe != null && (b(oe, 0, m), oe = oe + this.e + 1), ne(this, oe, se);
        }, q.toFormat = function(oe, se, re) {
          var ge, Te = this;
          if (re == null) oe != null && se && typeof se == "object" ? (re = se, se = null) : oe && typeof oe == "object" ? (re = oe, oe = se = null) : re = X;
          else if (typeof re != "object") throw Error(t + "Argument not an object: " + re);
          if (ge = Te.toFixed(oe, se), Te.c) {
            var pe, Oe = ge.split("."), xe = +re.groupSize, Ve = +re.secondaryGroupSize, _e = re.groupSeparator || "", Be = Oe[0], Qe = Oe[1], ee = Te.s < 0, P = ee ? Be.slice(1) : Be, T = P.length;
            if (Ve && (pe = xe, xe = Ve, Ve = pe, T -= pe), xe > 0 && T > 0) {
              for (pe = T % xe || xe, Be = P.substr(0, pe); pe < T; pe += xe) Be += _e + P.substr(pe, xe);
              Ve > 0 && (Be += _e + P.slice(pe)), ee && (Be = "-" + Be);
            }
            ge = Qe ? Be + (re.decimalSeparator || "") + ((Ve = +re.fractionGroupSize) ? Qe.replace(new RegExp("\\d{" + Ve + "}\\B", "g"), "$&" + (re.fractionGroupSeparator || "")) : Qe) : Be;
          }
          return (re.prefix || "") + ge + (re.suffix || "");
        }, q.toFraction = function(oe) {
          var se, re, ge, Te, pe, Oe, xe, Ve, _e, Be, Qe, ee, P = this, T = P.c;
          if (oe != null && (xe = new Q(oe), !xe.isInteger() && (xe.c || xe.s !== 1) || xe.lt(N))) throw Error(t + "Argument " + (xe.isInteger() ? "out of range: " : "not an integer: ") + ye(xe));
          if (!T) return new Q(P);
          for (se = new Q(N), _e = re = new Q(N), ge = Ve = new Q(N), ee = l(T), pe = se.e = ee.length - P.e - 1, se.c[0] = f[(Oe = pe % c) < 0 ? c + Oe : Oe], oe = !oe || xe.comparedTo(se) > 0 ? pe > 0 ? se : _e : xe, Oe = z, z = 1 / 0, xe = new Q(ee), Ve.c[0] = 0; Be = w(xe, se, 0, 1), Te = re.plus(Be.times(ge)), Te.comparedTo(oe) != 1; ) re = ge, ge = Te, _e = Ve.plus(Be.times(Te = _e)), Ve = Te, se = xe.minus(Be.times(Te = se)), xe = Te;
          return Te = w(oe.minus(re), ge, 0, 1), Ve = Ve.plus(Te.times(_e)), re = re.plus(Te.times(ge)), Ve.s = _e.s = P.s, pe = pe * 2, Qe = w(_e, ge, pe, _).minus(P).abs().comparedTo(w(Ve, re, pe, _).minus(P).abs()) < 1 ? [_e, ge] : [Ve, re], z = Oe, Qe;
        }, q.toNumber = function() {
          return +ye(this);
        }, q.toPrecision = function(oe, se) {
          return oe != null && b(oe, 1, m), ne(this, oe, se, 2);
        }, q.toString = function(oe) {
          var se, re = this, ge = re.s, Te = re.e;
          return Te === null ? ge ? (se = "Infinity", ge < 0 && (se = "-" + se)) : se = "NaN" : (oe == null ? se = Te <= x || Te >= L ? E(l(re.c), Te) : R(l(re.c), Te, "0") : oe === 10 && B ? (re = ce(new Q(re), H + Te + 1, _), se = R(l(re.c), re.e, "0")) : (b(oe, 2, J.length, "Base"), se = F(R(l(re.c), Te, "0"), 10, oe, ge, true)), ge < 0 && re.c[0] && (se = "-" + se)), se;
        }, q.valueOf = q.toJSON = function() {
          return ye(this);
        }, q._isBigNumber = true, k != null && Q.set(k), Q;
      }
      function a(k) {
        var w = k | 0;
        return k > 0 || k === w ? w : w - 1;
      }
      function l(k) {
        for (var w, F, I = 1, q = k.length, N = k[0] + ""; I < q; ) {
          for (w = k[I++] + "", F = c - w.length; F--; w = "0" + w) ;
          N += w;
        }
        for (q = N.length; N.charCodeAt(--q) === 48; ) ;
        return N.slice(0, q + 1 || 1);
      }
      function d(k, w) {
        var F, I, q = k.c, N = w.c, H = k.s, _ = w.s, x = k.e, L = w.e;
        if (!H || !_) return null;
        if (F = q && !q[0], I = N && !N[0], F || I) return F ? I ? 0 : -_ : H;
        if (H != _) return H;
        if (F = H < 0, I = x == L, !q || !N) return I ? 0 : !q ^ F ? 1 : -1;
        if (!I) return x > L ^ F ? 1 : -1;
        for (_ = (x = q.length) < (L = N.length) ? x : L, H = 0; H < _; H++) if (q[H] != N[H]) return q[H] > N[H] ^ F ? 1 : -1;
        return x == L ? 0 : x > L ^ F ? 1 : -1;
      }
      function b(k, w, F, I) {
        if (k < w || k > F || k !== y(k)) throw Error(t + (I || "Argument") + (typeof k == "number" ? k < w || k > F ? " out of range: " : " not an integer: " : " not a primitive number: ") + String(k));
      }
      function S(k) {
        var w = k.c.length - 1;
        return a(k.e / c) == w && k.c[w] % 2 != 0;
      }
      function E(k, w) {
        return (k.length > 1 ? k.charAt(0) + "." + k.slice(1) : k) + (w < 0 ? "e" : "e+") + w;
      }
      function R(k, w, F) {
        var I, q;
        if (w < 0) {
          for (q = F + "."; ++w; q += F) ;
          k = q + k;
        } else if (I = k.length, ++w > I) {
          for (q = F, w -= I; --w; q += F) ;
          k += q;
        } else w < I && (k = k.slice(0, w) + "." + k.slice(w));
        return k;
      }
      n = g(), n.default = n.BigNumber = n, v.exports ? v.exports = n : (e || (e = typeof self < "u" && self ? self : window), e.BigNumber = n);
    })(By);
  }(sc)), sc.exports;
}
var op;
function sa() {
  return op || (op = 1, function(v) {
    Object.defineProperty(v, "__esModule", { value: true }), v.default = void 0;
    var e = n(Ny());
    function n(u) {
      return u && u.__esModule ? u : { default: u };
    }
    var i = e.default.clone();
    i.DEBUG = true, v.default = i;
  }(Kc)), Kc;
}
var Qs = {}, ap;
function Dy() {
  if (ap) return Qs;
  ap = 1, Object.defineProperty(Qs, "__esModule", { value: true }), Qs.best_r = c;
  var v = e(sa());
  function e(h) {
    return h && h.__esModule ? h : { default: h };
  }
  function n(h, f) {
    return o(h) || t(h, f) || u(h, f) || i();
  }
  function i() {
    throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
  }
  function u(h, f) {
    if (h) {
      if (typeof h == "string") return y(h, f);
      var r = {}.toString.call(h).slice(8, -1);
      return r === "Object" && h.constructor && (r = h.constructor.name), r === "Map" || r === "Set" ? Array.from(h) : r === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? y(h, f) : void 0;
    }
  }
  function y(h, f) {
    (f == null || f > h.length) && (f = h.length);
    for (var r = 0, m = Array(f); r < f; r++) m[r] = h[r];
    return m;
  }
  function t(h, f) {
    var r = h == null ? null : typeof Symbol < "u" && h[Symbol.iterator] || h["@@iterator"];
    if (r != null) {
      var m, g, a, l, d = [], b = true, S = false;
      try {
        if (a = (r = r.call(h)).next, f !== 0) for (; !(b = (m = a.call(r)).done) && (d.push(m.value), d.length !== f); b = true) ;
      } catch (E) {
        S = true, g = E;
      } finally {
        try {
          if (!b && r.return != null && (l = r.return(), Object(l) !== l)) return;
        } finally {
          if (S) throw g;
        }
      }
      return d;
    }
  }
  function o(h) {
    if (Array.isArray(h)) return h;
  }
  var s = (1 << 31 >>> 0) - 1;
  function c(h) {
    for (var f = new v.default(h), r, m, g = [[new v.default(0), new v.default(1)], [new v.default(1), new v.default(0)]], a = 2; !f.gt(s); ) {
      r = f.integerValue(v.default.ROUND_FLOOR), m = f.minus(r);
      var l = r.times(g[a - 1][0]).plus(g[a - 2][0]), d = r.times(g[a - 1][1]).plus(g[a - 2][1]);
      if (l.gt(s) || d.gt(s) || (g.push([l, d]), m.eq(0))) break;
      f = new v.default(1).div(m), a += 1;
    }
    var b = n(g[g.length - 1], 2), S = b[0], E = b[1];
    if (S.isZero() || E.isZero()) throw new Error("Couldn't find approximation");
    return [S.toNumber(), E.toNumber()];
  }
  return Qs;
}
var Wa = {}, sp;
function Yl() {
  if (sp) return Wa;
  sp = 1, Object.defineProperty(Wa, "__esModule", { value: true }), Wa.LiquidityPoolAsset = void 0;
  var v = i(bn()), e = xo(), n = tm();
  function i(m) {
    return m && m.__esModule ? m : { default: m };
  }
  function u(m) {
    "@babel/helpers - typeof";
    return u = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(g) {
      return typeof g;
    } : function(g) {
      return g && typeof Symbol == "function" && g.constructor === Symbol && g !== Symbol.prototype ? "symbol" : typeof g;
    }, u(m);
  }
  function y(m, g) {
    var a = Object.keys(m);
    if (Object.getOwnPropertySymbols) {
      var l = Object.getOwnPropertySymbols(m);
      g && (l = l.filter(function(d) {
        return Object.getOwnPropertyDescriptor(m, d).enumerable;
      })), a.push.apply(a, l);
    }
    return a;
  }
  function t(m) {
    for (var g = 1; g < arguments.length; g++) {
      var a = arguments[g] != null ? arguments[g] : {};
      g % 2 ? y(Object(a), true).forEach(function(l) {
        o(m, l, a[l]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(m, Object.getOwnPropertyDescriptors(a)) : y(Object(a)).forEach(function(l) {
        Object.defineProperty(m, l, Object.getOwnPropertyDescriptor(a, l));
      });
    }
    return m;
  }
  function o(m, g, a) {
    return (g = f(g)) in m ? Object.defineProperty(m, g, { value: a, enumerable: true, configurable: true, writable: true }) : m[g] = a, m;
  }
  function s(m, g) {
    if (!(m instanceof g)) throw new TypeError("Cannot call a class as a function");
  }
  function c(m, g) {
    for (var a = 0; a < g.length; a++) {
      var l = g[a];
      l.enumerable = l.enumerable || false, l.configurable = true, "value" in l && (l.writable = true), Object.defineProperty(m, f(l.key), l);
    }
  }
  function h(m, g, a) {
    return g && c(m.prototype, g), a && c(m, a), Object.defineProperty(m, "prototype", { writable: false }), m;
  }
  function f(m) {
    var g = r(m, "string");
    return u(g) == "symbol" ? g : g + "";
  }
  function r(m, g) {
    if (u(m) != "object" || !m) return m;
    var a = m[Symbol.toPrimitive];
    if (a !== void 0) {
      var l = a.call(m, g);
      if (u(l) != "object") return l;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return String(m);
  }
  return Wa.LiquidityPoolAsset = function() {
    function m(g, a, l) {
      if (s(this, m), !g || !(g instanceof e.Asset)) throw new Error("assetA is invalid");
      if (!a || !(a instanceof e.Asset)) throw new Error("assetB is invalid");
      if (e.Asset.compare(g, a) !== -1) throw new Error("Assets are not in lexicographic order");
      if (!l || l !== n.LiquidityPoolFeeV18) throw new Error("fee is invalid");
      this.assetA = g, this.assetB = a, this.fee = l;
    }
    return h(m, [{ key: "toXDRObject", value: function() {
      var a = new v.default.LiquidityPoolConstantProductParameters({ assetA: this.assetA.toXDRObject(), assetB: this.assetB.toXDRObject(), fee: this.fee }), l = new v.default.LiquidityPoolParameters("liquidityPoolConstantProduct", a);
      return new v.default.ChangeTrustAsset("assetTypePoolShare", l);
    } }, { key: "getLiquidityPoolParameters", value: function() {
      return t(t({}, this), {}, { assetA: this.assetA, assetB: this.assetB, fee: this.fee });
    } }, { key: "getAssetType", value: function() {
      return "liquidity_pool_shares";
    } }, { key: "equals", value: function(a) {
      return this.assetA.equals(a.assetA) && this.assetB.equals(a.assetB) && this.fee === a.fee;
    } }, { key: "toString", value: function() {
      var a = (0, n.getLiquidityPoolId)("constant_product", this.getLiquidityPoolParameters()).toString("hex");
      return "liquidity_pool:".concat(a);
    } }], [{ key: "fromOperation", value: function(a) {
      var l = a.switch();
      if (l === v.default.AssetType.assetTypePoolShare()) {
        var d = a.liquidityPool().constantProduct();
        return new this(e.Asset.fromOperation(d.assetA()), e.Asset.fromOperation(d.assetB()), d.fee());
      }
      throw new Error("Invalid asset type: ".concat(l.name));
    } }]);
  }(), Wa;
}
var Ka = {}, up;
function rm() {
  if (up) return Ka;
  up = 1, Object.defineProperty(Ka, "__esModule", { value: true }), Ka.Claimant = void 0;
  var v = i(bn()), e = Ii(), n = ni();
  function i(h) {
    return h && h.__esModule ? h : { default: h };
  }
  function u(h) {
    "@babel/helpers - typeof";
    return u = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(f) {
      return typeof f;
    } : function(f) {
      return f && typeof Symbol == "function" && f.constructor === Symbol && f !== Symbol.prototype ? "symbol" : typeof f;
    }, u(h);
  }
  function y(h, f) {
    if (!(h instanceof f)) throw new TypeError("Cannot call a class as a function");
  }
  function t(h, f) {
    for (var r = 0; r < f.length; r++) {
      var m = f[r];
      m.enumerable = m.enumerable || false, m.configurable = true, "value" in m && (m.writable = true), Object.defineProperty(h, s(m.key), m);
    }
  }
  function o(h, f, r) {
    return f && t(h.prototype, f), r && t(h, r), Object.defineProperty(h, "prototype", { writable: false }), h;
  }
  function s(h) {
    var f = c(h, "string");
    return u(f) == "symbol" ? f : f + "";
  }
  function c(h, f) {
    if (u(h) != "object" || !h) return h;
    var r = h[Symbol.toPrimitive];
    if (r !== void 0) {
      var m = r.call(h, f);
      if (u(m) != "object") return m;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return String(h);
  }
  return Ka.Claimant = function() {
    function h(f, r) {
      if (y(this, h), f && !n.StrKey.isValidEd25519PublicKey(f)) throw new Error("Destination is invalid");
      if (this._destination = f, !r) this._predicate = v.default.ClaimPredicate.claimPredicateUnconditional();
      else if (r instanceof v.default.ClaimPredicate) this._predicate = r;
      else throw new Error("Predicate should be an xdr.ClaimPredicate");
    }
    return o(h, [{ key: "toXDRObject", value: function() {
      var r = new v.default.ClaimantV0({ destination: e.Keypair.fromPublicKey(this._destination).xdrAccountId(), predicate: this._predicate });
      return v.default.Claimant.claimantTypeV0(r);
    } }, { key: "destination", get: function() {
      return this._destination;
    }, set: function(r) {
      throw new Error("Claimant is immutable");
    } }, { key: "predicate", get: function() {
      return this._predicate;
    }, set: function(r) {
      throw new Error("Claimant is immutable");
    } }], [{ key: "predicateUnconditional", value: function() {
      return v.default.ClaimPredicate.claimPredicateUnconditional();
    } }, { key: "predicateAnd", value: function(r, m) {
      if (!(r instanceof v.default.ClaimPredicate)) throw new Error("left Predicate should be an xdr.ClaimPredicate");
      if (!(m instanceof v.default.ClaimPredicate)) throw new Error("right Predicate should be an xdr.ClaimPredicate");
      return v.default.ClaimPredicate.claimPredicateAnd([r, m]);
    } }, { key: "predicateOr", value: function(r, m) {
      if (!(r instanceof v.default.ClaimPredicate)) throw new Error("left Predicate should be an xdr.ClaimPredicate");
      if (!(m instanceof v.default.ClaimPredicate)) throw new Error("right Predicate should be an xdr.ClaimPredicate");
      return v.default.ClaimPredicate.claimPredicateOr([r, m]);
    } }, { key: "predicateNot", value: function(r) {
      if (!(r instanceof v.default.ClaimPredicate)) throw new Error("right Predicate should be an xdr.ClaimPredicate");
      return v.default.ClaimPredicate.claimPredicateNot(r);
    } }, { key: "predicateBeforeAbsoluteTime", value: function(r) {
      return v.default.ClaimPredicate.claimPredicateBeforeAbsoluteTime(v.default.Int64.fromString(r));
    } }, { key: "predicateBeforeRelativeTime", value: function(r) {
      return v.default.ClaimPredicate.claimPredicateBeforeRelativeTime(v.default.Int64.fromString(r));
    } }, { key: "fromXDR", value: function(r) {
      var m;
      switch (r.switch()) {
        case v.default.ClaimantType.claimantTypeV0():
          return m = r.v0(), new this(n.StrKey.encodeEd25519PublicKey(m.destination().ed25519()), m.predicate());
        default:
          throw new Error("Invalid claimant type: ".concat(r.switch().name));
      }
    } }]);
  }(), Ka;
}
var Xa = {}, cp;
function Ql() {
  if (cp) return Xa;
  cp = 1, Object.defineProperty(Xa, "__esModule", { value: true }), Xa.LiquidityPoolId = void 0;
  var v = e(bn());
  function e(s) {
    return s && s.__esModule ? s : { default: s };
  }
  function n(s) {
    "@babel/helpers - typeof";
    return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(c) {
      return typeof c;
    } : function(c) {
      return c && typeof Symbol == "function" && c.constructor === Symbol && c !== Symbol.prototype ? "symbol" : typeof c;
    }, n(s);
  }
  function i(s, c) {
    if (!(s instanceof c)) throw new TypeError("Cannot call a class as a function");
  }
  function u(s, c) {
    for (var h = 0; h < c.length; h++) {
      var f = c[h];
      f.enumerable = f.enumerable || false, f.configurable = true, "value" in f && (f.writable = true), Object.defineProperty(s, t(f.key), f);
    }
  }
  function y(s, c, h) {
    return c && u(s.prototype, c), h && u(s, h), Object.defineProperty(s, "prototype", { writable: false }), s;
  }
  function t(s) {
    var c = o(s, "string");
    return n(c) == "symbol" ? c : c + "";
  }
  function o(s, c) {
    if (n(s) != "object" || !s) return s;
    var h = s[Symbol.toPrimitive];
    if (h !== void 0) {
      var f = h.call(s, c);
      if (n(f) != "object") return f;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return String(s);
  }
  return Xa.LiquidityPoolId = function() {
    function s(c) {
      if (i(this, s), !c) throw new Error("liquidityPoolId cannot be empty");
      if (!/^[a-f0-9]{64}$/.test(c)) throw new Error("Liquidity pool ID is not a valid hash");
      this.liquidityPoolId = c;
    }
    return y(s, [{ key: "toXDRObject", value: function() {
      var h = v.default.PoolId.fromXDR(this.liquidityPoolId, "hex");
      return new v.default.TrustLineAsset("assetTypePoolShare", h);
    } }, { key: "getLiquidityPoolId", value: function() {
      return String(this.liquidityPoolId);
    } }, { key: "getAssetType", value: function() {
      return "liquidity_pool_shares";
    } }, { key: "equals", value: function(h) {
      return this.liquidityPoolId === h.getLiquidityPoolId();
    } }, { key: "toString", value: function() {
      return "liquidity_pool:".concat(this.liquidityPoolId);
    } }], [{ key: "fromOperation", value: function(h) {
      var f = h.switch();
      if (f === v.default.AssetType.assetTypePoolShare()) {
        var r = h.liquidityPoolId().toString("hex");
        return new this(r);
      }
      throw new Error("Invalid asset type: ".concat(f.name));
    } }]);
  }(), Xa;
}
var Xc = {}, Zs = {}, lp;
function Fy() {
  if (lp) return Zs;
  lp = 1, Object.defineProperty(Zs, "__esModule", { value: true }), Zs.manageSellOffer = i;
  var v = Ei(), e = n(bn());
  function n(u) {
    return u && u.__esModule ? u : { default: u };
  }
  function i(u) {
    var y = {};
    if (y.selling = u.selling.toXDRObject(), y.buying = u.buying.toXDRObject(), !this.isValidAmount(u.amount, true)) throw new TypeError(this.constructAmountRequirementsError("amount"));
    if (y.amount = this._toXDRAmount(u.amount), u.price === void 0) throw new TypeError("price argument is required");
    y.price = this._toXDRPrice(u.price), u.offerId !== void 0 ? u.offerId = u.offerId.toString() : u.offerId = "0", y.offerId = v.Hyper.fromString(u.offerId);
    var t = new e.default.ManageSellOfferOp(y), o = {};
    return o.body = e.default.OperationBody.manageSellOffer(t), this.setSourceAccount(o, u), new e.default.Operation(o);
  }
  return Zs;
}
var Js = {}, fp;
function Uy() {
  if (fp) return Js;
  fp = 1, Object.defineProperty(Js, "__esModule", { value: true }), Js.createPassiveSellOffer = n;
  var v = e(bn());
  function e(i) {
    return i && i.__esModule ? i : { default: i };
  }
  function n(i) {
    var u = {};
    if (u.selling = i.selling.toXDRObject(), u.buying = i.buying.toXDRObject(), !this.isValidAmount(i.amount)) throw new TypeError(this.constructAmountRequirementsError("amount"));
    if (u.amount = this._toXDRAmount(i.amount), i.price === void 0) throw new TypeError("price argument is required");
    u.price = this._toXDRPrice(i.price);
    var y = new v.default.CreatePassiveSellOfferOp(u), t = {};
    return t.body = v.default.OperationBody.createPassiveSellOffer(y), this.setSourceAccount(t, i), new v.default.Operation(t);
  }
  return Js;
}
var eu = {}, Vo = {}, pp;
function $i() {
  if (pp) return Vo;
  pp = 1, Object.defineProperty(Vo, "__esModule", { value: true }), Vo.decodeAddressToMuxedAccount = i, Vo.encodeMuxedAccount = y, Vo.encodeMuxedAccountToAddress = u, Vo.extractBaseAddress = t;
  var v = n(bn()), e = ni();
  function n(c) {
    return c && c.__esModule ? c : { default: c };
  }
  function i(c) {
    return e.StrKey.isValidMed25519PublicKey(c) ? o(c) : v.default.MuxedAccount.keyTypeEd25519(e.StrKey.decodeEd25519PublicKey(c));
  }
  function u(c) {
    return c.switch().value === v.default.CryptoKeyType.keyTypeMuxedEd25519().value ? s(c) : e.StrKey.encodeEd25519PublicKey(c.ed25519());
  }
  function y(c, h) {
    if (!e.StrKey.isValidEd25519PublicKey(c)) throw new Error("address should be a Stellar account ID (G...)");
    if (typeof h != "string") throw new Error("id should be a string representing a number (uint64)");
    return v.default.MuxedAccount.keyTypeMuxedEd25519(new v.default.MuxedAccountMed25519({ id: v.default.Uint64.fromString(h), ed25519: e.StrKey.decodeEd25519PublicKey(c) }));
  }
  function t(c) {
    if (e.StrKey.isValidEd25519PublicKey(c)) return c;
    if (!e.StrKey.isValidMed25519PublicKey(c)) throw new TypeError("expected muxed account (M...), got ".concat(c));
    var h = i(c);
    return e.StrKey.encodeEd25519PublicKey(h.med25519().ed25519());
  }
  function o(c) {
    var h = e.StrKey.decodeMed25519PublicKey(c);
    return v.default.MuxedAccount.keyTypeMuxedEd25519(new v.default.MuxedAccountMed25519({ id: v.default.Uint64.fromXDR(h.subarray(-8)), ed25519: h.subarray(0, -8) }));
  }
  function s(c) {
    if (c.switch() === v.default.CryptoKeyType.keyTypeEd25519()) return u(c);
    var h = c.med25519();
    return e.StrKey.encodeMed25519PublicKey(Buffer.concat([h.ed25519(), h.id().toXDR("raw")]));
  }
  return Vo;
}
var hp;
function jy() {
  if (hp) return eu;
  hp = 1, Object.defineProperty(eu, "__esModule", { value: true }), eu.accountMerge = i;
  var v = n(bn()), e = $i();
  function n(u) {
    return u && u.__esModule ? u : { default: u };
  }
  function i(u) {
    var y = {};
    try {
      y.body = v.default.OperationBody.accountMerge((0, e.decodeAddressToMuxedAccount)(u.destination));
    } catch {
      throw new Error("destination is invalid");
    }
    return this.setSourceAccount(y, u), new v.default.Operation(y);
  }
  return eu;
}
var tu = {}, dp;
function Vy() {
  if (dp) return tu;
  dp = 1, Object.defineProperty(tu, "__esModule", { value: true }), tu.allowTrust = u;
  var v = i(bn()), e = Ii(), n = ni();
  function i(y) {
    return y && y.__esModule ? y : { default: y };
  }
  function u(y) {
    if (!n.StrKey.isValidEd25519PublicKey(y.trustor)) throw new Error("trustor is invalid");
    var t = {};
    if (t.trustor = e.Keypair.fromPublicKey(y.trustor).xdrAccountId(), y.assetCode.length <= 4) {
      var o = y.assetCode.padEnd(4, "\0");
      t.asset = v.default.AssetCode.assetTypeCreditAlphanum4(o);
    } else if (y.assetCode.length <= 12) {
      var s = y.assetCode.padEnd(12, "\0");
      t.asset = v.default.AssetCode.assetTypeCreditAlphanum12(s);
    } else throw new Error("Asset code must be 12 characters at max.");
    typeof y.authorize == "boolean" ? y.authorize ? t.authorize = v.default.TrustLineFlags.authorizedFlag().value : t.authorize = 0 : t.authorize = y.authorize;
    var c = new v.default.AllowTrustOp(t), h = {};
    return h.body = v.default.OperationBody.allowTrust(c), this.setSourceAccount(h, y), new v.default.Operation(h);
  }
  return tu;
}
var ru = {}, mp;
function qy() {
  if (mp) return ru;
  mp = 1, Object.defineProperty(ru, "__esModule", { value: true }), ru.bumpSequence = u;
  var v = Ei(), e = i(sa()), n = i(bn());
  function i(y) {
    return y && y.__esModule ? y : { default: y };
  }
  function u(y) {
    var t = {};
    if (typeof y.bumpTo != "string") throw new Error("bumpTo must be a string");
    try {
      new e.default(y.bumpTo);
    } catch {
      throw new Error("bumpTo must be a stringified number");
    }
    t.bumpTo = v.Hyper.fromString(y.bumpTo);
    var o = new n.default.BumpSequenceOp(t), s = {};
    return s.body = n.default.OperationBody.bumpSequence(o), this.setSourceAccount(s, y), new n.default.Operation(s);
  }
  return ru;
}
var nu = {}, yp;
function zy() {
  if (yp) return nu;
  yp = 1, Object.defineProperty(nu, "__esModule", { value: true }), nu.changeTrust = o;
  var v = Ei(), e = y(sa()), n = y(bn()), i = xo(), u = Yl();
  function y(s) {
    return s && s.__esModule ? s : { default: s };
  }
  var t = "9223372036854775807";
  function o(s) {
    var c = {};
    if (s.asset instanceof i.Asset) c.line = s.asset.toChangeTrustXDRObject();
    else if (s.asset instanceof u.LiquidityPoolAsset) c.line = s.asset.toXDRObject();
    else throw new TypeError("asset must be Asset or LiquidityPoolAsset");
    if (s.limit !== void 0 && !this.isValidAmount(s.limit, true)) throw new TypeError(this.constructAmountRequirementsError("limit"));
    s.limit ? c.limit = this._toXDRAmount(s.limit) : c.limit = v.Hyper.fromString(new e.default(t).toString()), s.source && (c.source = s.source.masterKeypair);
    var h = new n.default.ChangeTrustOp(c), f = {};
    return f.body = n.default.OperationBody.changeTrust(h), this.setSourceAccount(f, s), new n.default.Operation(f);
  }
  return nu;
}
var iu = {}, gp;
function Hy() {
  if (gp) return iu;
  gp = 1, Object.defineProperty(iu, "__esModule", { value: true }), iu.createAccount = u;
  var v = i(bn()), e = Ii(), n = ni();
  function i(y) {
    return y && y.__esModule ? y : { default: y };
  }
  function u(y) {
    if (!n.StrKey.isValidEd25519PublicKey(y.destination)) throw new Error("destination is invalid");
    if (!this.isValidAmount(y.startingBalance, true)) throw new TypeError(this.constructAmountRequirementsError("startingBalance"));
    var t = {};
    t.destination = e.Keypair.fromPublicKey(y.destination).xdrAccountId(), t.startingBalance = this._toXDRAmount(y.startingBalance);
    var o = new v.default.CreateAccountOp(t), s = {};
    return s.body = v.default.OperationBody.createAccount(o), this.setSourceAccount(s, y), new v.default.Operation(s);
  }
  return iu;
}
var ou = {}, vp;
function Gy() {
  if (vp) return ou;
  vp = 1, Object.defineProperty(ou, "__esModule", { value: true }), ou.createClaimableBalance = i;
  var v = n(bn()), e = xo();
  function n(u) {
    return u && u.__esModule ? u : { default: u };
  }
  function i(u) {
    if (!(u.asset instanceof e.Asset)) throw new Error("must provide an asset for create claimable balance operation");
    if (!this.isValidAmount(u.amount)) throw new TypeError(this.constructAmountRequirementsError("amount"));
    if (!Array.isArray(u.claimants) || u.claimants.length === 0) throw new Error("must provide at least one claimant");
    var y = {};
    y.asset = u.asset.toXDRObject(), y.amount = this._toXDRAmount(u.amount), y.claimants = Object.values(u.claimants).map(function(s) {
      return s.toXDRObject();
    });
    var t = new v.default.CreateClaimableBalanceOp(y), o = {};
    return o.body = v.default.OperationBody.createClaimableBalance(t), this.setSourceAccount(o, u), new v.default.Operation(o);
  }
  return ou;
}
var $a = {}, bp;
function nm() {
  if (bp) return $a;
  bp = 1, Object.defineProperty($a, "__esModule", { value: true }), $a.claimClaimableBalance = n, $a.validateClaimableBalanceId = i;
  var v = e(bn());
  function e(u) {
    return u && u.__esModule ? u : { default: u };
  }
  function n() {
    var u = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    i(u.balanceId);
    var y = {};
    y.balanceId = v.default.ClaimableBalanceId.fromXDR(u.balanceId, "hex");
    var t = new v.default.ClaimClaimableBalanceOp(y), o = {};
    return o.body = v.default.OperationBody.claimClaimableBalance(t), this.setSourceAccount(o, u), new v.default.Operation(o);
  }
  function i(u) {
    if (typeof u != "string" || u.length !== 72) throw new Error("must provide a valid claimable balance id");
  }
  return $a;
}
var au = {}, wp;
function Wy() {
  if (wp) return au;
  wp = 1, Object.defineProperty(au, "__esModule", { value: true }), au.clawbackClaimableBalance = i;
  var v = n(bn()), e = nm();
  function n(u) {
    return u && u.__esModule ? u : { default: u };
  }
  function i() {
    var u = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    (0, e.validateClaimableBalanceId)(u.balanceId);
    var y = { balanceId: v.default.ClaimableBalanceId.fromXDR(u.balanceId, "hex") }, t = { body: v.default.OperationBody.clawbackClaimableBalance(new v.default.ClawbackClaimableBalanceOp(y)) };
    return this.setSourceAccount(t, u), new v.default.Operation(t);
  }
  return au;
}
var su = {}, Sp;
function Ky() {
  if (Sp) return su;
  Sp = 1, Object.defineProperty(su, "__esModule", { value: true }), su.inflation = n;
  var v = e(bn());
  function e(i) {
    return i && i.__esModule ? i : { default: i };
  }
  function n() {
    var i = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, u = {};
    return u.body = v.default.OperationBody.inflation(), this.setSourceAccount(u, i), new v.default.Operation(u);
  }
  return su;
}
var uu = {}, _p;
function Xy() {
  if (_p) return uu;
  _p = 1, Object.defineProperty(uu, "__esModule", { value: true }), uu.manageData = n;
  var v = e(bn());
  function e(i) {
    return i && i.__esModule ? i : { default: i };
  }
  function n(i) {
    var u = {};
    if (!(typeof i.name == "string" && i.name.length <= 64)) throw new Error("name must be a string, up to 64 characters");
    if (u.dataName = i.name, typeof i.value != "string" && !Buffer.isBuffer(i.value) && i.value !== null) throw new Error("value must be a string, Buffer or null");
    if (typeof i.value == "string" ? u.dataValue = Buffer.from(i.value) : u.dataValue = i.value, u.dataValue !== null && u.dataValue.length > 64) throw new Error("value cannot be longer that 64 bytes");
    var y = new v.default.ManageDataOp(u), t = {};
    return t.body = v.default.OperationBody.manageData(y), this.setSourceAccount(t, i), new v.default.Operation(t);
  }
  return uu;
}
var cu = {}, Ep;
function $y() {
  if (Ep) return cu;
  Ep = 1, Object.defineProperty(cu, "__esModule", { value: true }), cu.manageBuyOffer = i;
  var v = Ei(), e = n(bn());
  function n(u) {
    return u && u.__esModule ? u : { default: u };
  }
  function i(u) {
    var y = {};
    if (y.selling = u.selling.toXDRObject(), y.buying = u.buying.toXDRObject(), !this.isValidAmount(u.buyAmount, true)) throw new TypeError(this.constructAmountRequirementsError("buyAmount"));
    if (y.buyAmount = this._toXDRAmount(u.buyAmount), u.price === void 0) throw new TypeError("price argument is required");
    y.price = this._toXDRPrice(u.price), u.offerId !== void 0 ? u.offerId = u.offerId.toString() : u.offerId = "0", y.offerId = v.Hyper.fromString(u.offerId);
    var t = new e.default.ManageBuyOfferOp(y), o = {};
    return o.body = e.default.OperationBody.manageBuyOffer(t), this.setSourceAccount(o, u), new e.default.Operation(o);
  }
  return cu;
}
var lu = {}, Ap;
function Yy() {
  if (Ap) return lu;
  Ap = 1, Object.defineProperty(lu, "__esModule", { value: true }), lu.pathPaymentStrictReceive = i;
  var v = n(bn()), e = $i();
  function n(u) {
    return u && u.__esModule ? u : { default: u };
  }
  function i(u) {
    switch (true) {
      case !u.sendAsset:
        throw new Error("Must specify a send asset");
      case !this.isValidAmount(u.sendMax):
        throw new TypeError(this.constructAmountRequirementsError("sendMax"));
      case !u.destAsset:
        throw new Error("Must provide a destAsset for a payment operation");
      case !this.isValidAmount(u.destAmount):
        throw new TypeError(this.constructAmountRequirementsError("destAmount"));
    }
    var y = {};
    y.sendAsset = u.sendAsset.toXDRObject(), y.sendMax = this._toXDRAmount(u.sendMax);
    try {
      y.destination = (0, e.decodeAddressToMuxedAccount)(u.destination);
    } catch {
      throw new Error("destination is invalid");
    }
    y.destAsset = u.destAsset.toXDRObject(), y.destAmount = this._toXDRAmount(u.destAmount);
    var t = u.path ? u.path : [];
    y.path = t.map(function(c) {
      return c.toXDRObject();
    });
    var o = new v.default.PathPaymentStrictReceiveOp(y), s = {};
    return s.body = v.default.OperationBody.pathPaymentStrictReceive(o), this.setSourceAccount(s, u), new v.default.Operation(s);
  }
  return lu;
}
var fu = {}, xp;
function Qy() {
  if (xp) return fu;
  xp = 1, Object.defineProperty(fu, "__esModule", { value: true }), fu.pathPaymentStrictSend = i;
  var v = n(bn()), e = $i();
  function n(u) {
    return u && u.__esModule ? u : { default: u };
  }
  function i(u) {
    switch (true) {
      case !u.sendAsset:
        throw new Error("Must specify a send asset");
      case !this.isValidAmount(u.sendAmount):
        throw new TypeError(this.constructAmountRequirementsError("sendAmount"));
      case !u.destAsset:
        throw new Error("Must provide a destAsset for a payment operation");
      case !this.isValidAmount(u.destMin):
        throw new TypeError(this.constructAmountRequirementsError("destMin"));
    }
    var y = {};
    y.sendAsset = u.sendAsset.toXDRObject(), y.sendAmount = this._toXDRAmount(u.sendAmount);
    try {
      y.destination = (0, e.decodeAddressToMuxedAccount)(u.destination);
    } catch {
      throw new Error("destination is invalid");
    }
    y.destAsset = u.destAsset.toXDRObject(), y.destMin = this._toXDRAmount(u.destMin);
    var t = u.path ? u.path : [];
    y.path = t.map(function(c) {
      return c.toXDRObject();
    });
    var o = new v.default.PathPaymentStrictSendOp(y), s = {};
    return s.body = v.default.OperationBody.pathPaymentStrictSend(o), this.setSourceAccount(s, u), new v.default.Operation(s);
  }
  return fu;
}
var pu = {}, Tp;
function Zy() {
  if (Tp) return pu;
  Tp = 1, Object.defineProperty(pu, "__esModule", { value: true }), pu.payment = i;
  var v = n(bn()), e = $i();
  function n(u) {
    return u && u.__esModule ? u : { default: u };
  }
  function i(u) {
    if (!u.asset) throw new Error("Must provide an asset for a payment operation");
    if (!this.isValidAmount(u.amount)) throw new TypeError(this.constructAmountRequirementsError("amount"));
    var y = {};
    try {
      y.destination = (0, e.decodeAddressToMuxedAccount)(u.destination);
    } catch {
      throw new Error("destination is invalid");
    }
    y.asset = u.asset.toXDRObject(), y.amount = this._toXDRAmount(u.amount);
    var t = new v.default.PaymentOp(y), o = {};
    return o.body = v.default.OperationBody.payment(t), this.setSourceAccount(o, u), new v.default.Operation(o);
  }
  return pu;
}
var hu = {}, kp;
function Jy() {
  if (kp) return hu;
  kp = 1, Object.defineProperty(hu, "__esModule", { value: true }), hu.setOptions = y;
  var v = i(bn()), e = Ii(), n = ni();
  function i(t) {
    return t && t.__esModule ? t : { default: t };
  }
  function u(t, o) {
    if (t >= 0 && t <= 255) return true;
    throw new Error("".concat(o, " value must be between 0 and 255"));
  }
  function y(t) {
    var o = {};
    if (t.inflationDest) {
      if (!n.StrKey.isValidEd25519PublicKey(t.inflationDest)) throw new Error("inflationDest is invalid");
      o.inflationDest = e.Keypair.fromPublicKey(t.inflationDest).xdrAccountId();
    }
    if (o.clearFlags = this._checkUnsignedIntValue("clearFlags", t.clearFlags), o.setFlags = this._checkUnsignedIntValue("setFlags", t.setFlags), o.masterWeight = this._checkUnsignedIntValue("masterWeight", t.masterWeight, u), o.lowThreshold = this._checkUnsignedIntValue("lowThreshold", t.lowThreshold, u), o.medThreshold = this._checkUnsignedIntValue("medThreshold", t.medThreshold, u), o.highThreshold = this._checkUnsignedIntValue("highThreshold", t.highThreshold, u), t.homeDomain !== void 0 && typeof t.homeDomain != "string") throw new TypeError("homeDomain argument must be of type String");
    if (o.homeDomain = t.homeDomain, t.signer) {
      var s = this._checkUnsignedIntValue("signer.weight", t.signer.weight, u), c, h = 0;
      if (t.signer.ed25519PublicKey) {
        if (!n.StrKey.isValidEd25519PublicKey(t.signer.ed25519PublicKey)) throw new Error("signer.ed25519PublicKey is invalid.");
        var f = n.StrKey.decodeEd25519PublicKey(t.signer.ed25519PublicKey);
        c = new v.default.SignerKey.signerKeyTypeEd25519(f), h += 1;
      }
      if (t.signer.preAuthTx) {
        if (typeof t.signer.preAuthTx == "string" && (t.signer.preAuthTx = Buffer.from(t.signer.preAuthTx, "hex")), !(Buffer.isBuffer(t.signer.preAuthTx) && t.signer.preAuthTx.length === 32)) throw new Error("signer.preAuthTx must be 32 bytes Buffer.");
        c = new v.default.SignerKey.signerKeyTypePreAuthTx(t.signer.preAuthTx), h += 1;
      }
      if (t.signer.sha256Hash) {
        if (typeof t.signer.sha256Hash == "string" && (t.signer.sha256Hash = Buffer.from(t.signer.sha256Hash, "hex")), !(Buffer.isBuffer(t.signer.sha256Hash) && t.signer.sha256Hash.length === 32)) throw new Error("signer.sha256Hash must be 32 bytes Buffer.");
        c = new v.default.SignerKey.signerKeyTypeHashX(t.signer.sha256Hash), h += 1;
      }
      if (t.signer.ed25519SignedPayload) {
        if (!n.StrKey.isValidSignedPayload(t.signer.ed25519SignedPayload)) throw new Error("signer.ed25519SignedPayload is invalid.");
        var r = n.StrKey.decodeSignedPayload(t.signer.ed25519SignedPayload), m = v.default.SignerKeyEd25519SignedPayload.fromXDR(r);
        c = v.default.SignerKey.signerKeyTypeEd25519SignedPayload(m), h += 1;
      }
      if (h !== 1) throw new Error("Signer object must contain exactly one of signer.ed25519PublicKey, signer.sha256Hash, signer.preAuthTx.");
      o.signer = new v.default.Signer({ key: c, weight: s });
    }
    var g = new v.default.SetOptionsOp(o), a = {};
    return a.body = v.default.OperationBody.setOptions(g), this.setSourceAccount(a, t), new v.default.Operation(a);
  }
  return hu;
}
var du = {}, Op;
function eg() {
  if (Op) return du;
  Op = 1, Object.defineProperty(du, "__esModule", { value: true }), du.beginSponsoringFutureReserves = u;
  var v = i(bn()), e = ni(), n = Ii();
  function i(y) {
    return y && y.__esModule ? y : { default: y };
  }
  function u() {
    var y = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    if (!e.StrKey.isValidEd25519PublicKey(y.sponsoredId)) throw new Error("sponsoredId is invalid");
    var t = new v.default.BeginSponsoringFutureReservesOp({ sponsoredId: n.Keypair.fromPublicKey(y.sponsoredId).xdrAccountId() }), o = {};
    return o.body = v.default.OperationBody.beginSponsoringFutureReserves(t), this.setSourceAccount(o, y), new v.default.Operation(o);
  }
  return du;
}
var mu = {}, Pp;
function tg() {
  if (Pp) return mu;
  Pp = 1, Object.defineProperty(mu, "__esModule", { value: true }), mu.endSponsoringFutureReserves = n;
  var v = e(bn());
  function e(i) {
    return i && i.__esModule ? i : { default: i };
  }
  function n() {
    var i = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, u = {};
    return u.body = v.default.OperationBody.endSponsoringFutureReserves(), this.setSourceAccount(u, i), new v.default.Operation(u);
  }
  return mu;
}
var Qi = {}, Cp;
function rg() {
  if (Cp) return Qi;
  Cp = 1, Object.defineProperty(Qi, "__esModule", { value: true }), Qi.revokeAccountSponsorship = t, Qi.revokeClaimableBalanceSponsorship = h, Qi.revokeDataSponsorship = c, Qi.revokeLiquidityPoolSponsorship = f, Qi.revokeOfferSponsorship = s, Qi.revokeSignerSponsorship = r, Qi.revokeTrustlineSponsorship = o;
  var v = y(bn()), e = ni(), n = Ii(), i = xo(), u = Ql();
  function y(m) {
    return m && m.__esModule ? m : { default: m };
  }
  function t() {
    var m = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    if (!e.StrKey.isValidEd25519PublicKey(m.account)) throw new Error("account is invalid");
    var g = v.default.LedgerKey.account(new v.default.LedgerKeyAccount({ accountId: n.Keypair.fromPublicKey(m.account).xdrAccountId() })), a = v.default.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(g), l = {};
    return l.body = v.default.OperationBody.revokeSponsorship(a), this.setSourceAccount(l, m), new v.default.Operation(l);
  }
  function o() {
    var m = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    if (!e.StrKey.isValidEd25519PublicKey(m.account)) throw new Error("account is invalid");
    var g;
    if (m.asset instanceof i.Asset) g = m.asset.toTrustLineXDRObject();
    else if (m.asset instanceof u.LiquidityPoolId) g = m.asset.toXDRObject();
    else throw new TypeError("asset must be an Asset or LiquidityPoolId");
    var a = v.default.LedgerKey.trustline(new v.default.LedgerKeyTrustLine({ accountId: n.Keypair.fromPublicKey(m.account).xdrAccountId(), asset: g })), l = v.default.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(a), d = {};
    return d.body = v.default.OperationBody.revokeSponsorship(l), this.setSourceAccount(d, m), new v.default.Operation(d);
  }
  function s() {
    var m = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    if (!e.StrKey.isValidEd25519PublicKey(m.seller)) throw new Error("seller is invalid");
    if (typeof m.offerId != "string") throw new Error("offerId is invalid");
    var g = v.default.LedgerKey.offer(new v.default.LedgerKeyOffer({ sellerId: n.Keypair.fromPublicKey(m.seller).xdrAccountId(), offerId: v.default.Int64.fromString(m.offerId) })), a = v.default.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(g), l = {};
    return l.body = v.default.OperationBody.revokeSponsorship(a), this.setSourceAccount(l, m), new v.default.Operation(l);
  }
  function c() {
    var m = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    if (!e.StrKey.isValidEd25519PublicKey(m.account)) throw new Error("account is invalid");
    if (typeof m.name != "string" || m.name.length > 64) throw new Error("name must be a string, up to 64 characters");
    var g = v.default.LedgerKey.data(new v.default.LedgerKeyData({ accountId: n.Keypair.fromPublicKey(m.account).xdrAccountId(), dataName: m.name })), a = v.default.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(g), l = {};
    return l.body = v.default.OperationBody.revokeSponsorship(a), this.setSourceAccount(l, m), new v.default.Operation(l);
  }
  function h() {
    var m = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    if (typeof m.balanceId != "string") throw new Error("balanceId is invalid");
    var g = v.default.LedgerKey.claimableBalance(new v.default.LedgerKeyClaimableBalance({ balanceId: v.default.ClaimableBalanceId.fromXDR(m.balanceId, "hex") })), a = v.default.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(g), l = {};
    return l.body = v.default.OperationBody.revokeSponsorship(a), this.setSourceAccount(l, m), new v.default.Operation(l);
  }
  function f() {
    var m = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    if (typeof m.liquidityPoolId != "string") throw new Error("liquidityPoolId is invalid");
    var g = v.default.LedgerKey.liquidityPool(new v.default.LedgerKeyLiquidityPool({ liquidityPoolId: v.default.PoolId.fromXDR(m.liquidityPoolId, "hex") })), a = v.default.RevokeSponsorshipOp.revokeSponsorshipLedgerEntry(g), l = { body: v.default.OperationBody.revokeSponsorship(a) };
    return this.setSourceAccount(l, m), new v.default.Operation(l);
  }
  function r() {
    var m = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    if (!e.StrKey.isValidEd25519PublicKey(m.account)) throw new Error("account is invalid");
    var g;
    if (m.signer.ed25519PublicKey) {
      if (!e.StrKey.isValidEd25519PublicKey(m.signer.ed25519PublicKey)) throw new Error("signer.ed25519PublicKey is invalid.");
      var a = e.StrKey.decodeEd25519PublicKey(m.signer.ed25519PublicKey);
      g = new v.default.SignerKey.signerKeyTypeEd25519(a);
    } else if (m.signer.preAuthTx) {
      var l;
      if (typeof m.signer.preAuthTx == "string" ? l = Buffer.from(m.signer.preAuthTx, "hex") : l = m.signer.preAuthTx, !(Buffer.isBuffer(l) && l.length === 32)) throw new Error("signer.preAuthTx must be 32 bytes Buffer.");
      g = new v.default.SignerKey.signerKeyTypePreAuthTx(l);
    } else if (m.signer.sha256Hash) {
      var d;
      if (typeof m.signer.sha256Hash == "string" ? d = Buffer.from(m.signer.sha256Hash, "hex") : d = m.signer.sha256Hash, !(Buffer.isBuffer(d) && d.length === 32)) throw new Error("signer.sha256Hash must be 32 bytes Buffer.");
      g = new v.default.SignerKey.signerKeyTypeHashX(d);
    } else throw new Error("signer is invalid");
    var b = new v.default.RevokeSponsorshipOpSigner({ accountId: n.Keypair.fromPublicKey(m.account).xdrAccountId(), signerKey: g }), S = v.default.RevokeSponsorshipOp.revokeSponsorshipSigner(b), E = {};
    return E.body = v.default.OperationBody.revokeSponsorship(S), this.setSourceAccount(E, m), new v.default.Operation(E);
  }
  return Qi;
}
var yu = {}, Rp;
function ng() {
  if (Rp) return yu;
  Rp = 1, Object.defineProperty(yu, "__esModule", { value: true }), yu.clawback = i;
  var v = n(bn()), e = $i();
  function n(u) {
    return u && u.__esModule ? u : { default: u };
  }
  function i(u) {
    var y = {};
    if (!this.isValidAmount(u.amount)) throw new TypeError(this.constructAmountRequirementsError("amount"));
    y.amount = this._toXDRAmount(u.amount), y.asset = u.asset.toXDRObject();
    try {
      y.from = (0, e.decodeAddressToMuxedAccount)(u.from);
    } catch {
      throw new Error("from address is invalid");
    }
    var t = { body: v.default.OperationBody.clawback(new v.default.ClawbackOp(y)) };
    return this.setSourceAccount(t, u), new v.default.Operation(t);
  }
  return yu;
}
var gu = {}, Mp;
function ig() {
  if (Mp) return gu;
  Mp = 1, Object.defineProperty(gu, "__esModule", { value: true }), gu.setTrustLineFlags = u;
  var v = n(bn()), e = Ii();
  function n(y) {
    return y && y.__esModule ? y : { default: y };
  }
  function i(y) {
    "@babel/helpers - typeof";
    return i = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t) {
      return typeof t;
    } : function(t) {
      return t && typeof Symbol == "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
    }, i(y);
  }
  function u() {
    var y = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, t = {};
    if (i(y.flags) !== "object" || Object.keys(y.flags).length === 0) throw new Error("opts.flags must be a map of boolean flags to modify");
    var o = { authorized: v.default.TrustLineFlags.authorizedFlag(), authorizedToMaintainLiabilities: v.default.TrustLineFlags.authorizedToMaintainLiabilitiesFlag(), clawbackEnabled: v.default.TrustLineFlags.trustlineClawbackEnabledFlag() }, s = 0, c = 0;
    Object.keys(y.flags).forEach(function(f) {
      if (!Object.prototype.hasOwnProperty.call(o, f)) throw new Error("unsupported flag name specified: ".concat(f));
      var r = y.flags[f], m = o[f].value;
      r === true ? c |= m : r === false && (s |= m);
    }), t.trustor = e.Keypair.fromPublicKey(y.trustor).xdrAccountId(), t.asset = y.asset.toXDRObject(), t.clearFlags = s, t.setFlags = c;
    var h = { body: v.default.OperationBody.setTrustLineFlags(new v.default.SetTrustLineFlagsOp(t)) };
    return this.setSourceAccount(h, y), new v.default.Operation(h);
  }
  return gu;
}
var vu = {}, Ip;
function og() {
  if (Ip) return vu;
  Ip = 1, Object.defineProperty(vu, "__esModule", { value: true }), vu.liquidityPoolDeposit = n;
  var v = e(bn());
  function e(i) {
    return i && i.__esModule ? i : { default: i };
  }
  function n() {
    var i = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, u = i.liquidityPoolId, y = i.maxAmountA, t = i.maxAmountB, o = i.minPrice, s = i.maxPrice, c = {};
    if (!u) throw new TypeError("liquidityPoolId argument is required");
    if (c.liquidityPoolId = v.default.PoolId.fromXDR(u, "hex"), !this.isValidAmount(y, true)) throw new TypeError(this.constructAmountRequirementsError("maxAmountA"));
    if (c.maxAmountA = this._toXDRAmount(y), !this.isValidAmount(t, true)) throw new TypeError(this.constructAmountRequirementsError("maxAmountB"));
    if (c.maxAmountB = this._toXDRAmount(t), o === void 0) throw new TypeError("minPrice argument is required");
    if (c.minPrice = this._toXDRPrice(o), s === void 0) throw new TypeError("maxPrice argument is required");
    c.maxPrice = this._toXDRPrice(s);
    var h = new v.default.LiquidityPoolDepositOp(c), f = { body: v.default.OperationBody.liquidityPoolDeposit(h) };
    return this.setSourceAccount(f, i), new v.default.Operation(f);
  }
  return vu;
}
var bu = {}, Lp;
function ag() {
  if (Lp) return bu;
  Lp = 1, Object.defineProperty(bu, "__esModule", { value: true }), bu.liquidityPoolWithdraw = n;
  var v = e(bn());
  function e(i) {
    return i && i.__esModule ? i : { default: i };
  }
  function n() {
    var i = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, u = {};
    if (!i.liquidityPoolId) throw new TypeError("liquidityPoolId argument is required");
    if (u.liquidityPoolId = v.default.PoolId.fromXDR(i.liquidityPoolId, "hex"), !this.isValidAmount(i.amount)) throw new TypeError(this.constructAmountRequirementsError("amount"));
    if (u.amount = this._toXDRAmount(i.amount), !this.isValidAmount(i.minAmountA, true)) throw new TypeError(this.constructAmountRequirementsError("minAmountA"));
    if (u.minAmountA = this._toXDRAmount(i.minAmountA), !this.isValidAmount(i.minAmountB, true)) throw new TypeError(this.constructAmountRequirementsError("minAmountB"));
    u.minAmountB = this._toXDRAmount(i.minAmountB);
    var y = new v.default.LiquidityPoolWithdrawOp(u), t = { body: v.default.OperationBody.liquidityPoolWithdraw(y) };
    return this.setSourceAccount(t, i), new v.default.Operation(t);
  }
  return bu;
}
var Oo = {}, Ya = {}, Bp;
function La() {
  if (Bp) return Ya;
  Bp = 1, Object.defineProperty(Ya, "__esModule", { value: true }), Ya.Address = void 0;
  var v = ni(), e = n(bn());
  function n(c) {
    return c && c.__esModule ? c : { default: c };
  }
  function i(c) {
    "@babel/helpers - typeof";
    return i = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(h) {
      return typeof h;
    } : function(h) {
      return h && typeof Symbol == "function" && h.constructor === Symbol && h !== Symbol.prototype ? "symbol" : typeof h;
    }, i(c);
  }
  function u(c, h) {
    if (!(c instanceof h)) throw new TypeError("Cannot call a class as a function");
  }
  function y(c, h) {
    for (var f = 0; f < h.length; f++) {
      var r = h[f];
      r.enumerable = r.enumerable || false, r.configurable = true, "value" in r && (r.writable = true), Object.defineProperty(c, o(r.key), r);
    }
  }
  function t(c, h, f) {
    return h && y(c.prototype, h), f && y(c, f), Object.defineProperty(c, "prototype", { writable: false }), c;
  }
  function o(c) {
    var h = s(c, "string");
    return i(h) == "symbol" ? h : h + "";
  }
  function s(c, h) {
    if (i(c) != "object" || !c) return c;
    var f = c[Symbol.toPrimitive];
    if (f !== void 0) {
      var r = f.call(c, h);
      if (i(r) != "object") return r;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return String(c);
  }
  return Ya.Address = function() {
    function c(h) {
      if (u(this, c), v.StrKey.isValidEd25519PublicKey(h)) this._type = "account", this._key = v.StrKey.decodeEd25519PublicKey(h);
      else if (v.StrKey.isValidContract(h)) this._type = "contract", this._key = v.StrKey.decodeContract(h);
      else throw new Error("Unsupported address type: ".concat(h));
    }
    return t(c, [{ key: "toString", value: function() {
      switch (this._type) {
        case "account":
          return v.StrKey.encodeEd25519PublicKey(this._key);
        case "contract":
          return v.StrKey.encodeContract(this._key);
        default:
          throw new Error("Unsupported address type");
      }
    } }, { key: "toScVal", value: function() {
      return e.default.ScVal.scvAddress(this.toScAddress());
    } }, { key: "toScAddress", value: function() {
      switch (this._type) {
        case "account":
          return e.default.ScAddress.scAddressTypeAccount(e.default.PublicKey.publicKeyTypeEd25519(this._key));
        case "contract":
          return e.default.ScAddress.scAddressTypeContract(this._key);
        default:
          throw new Error("Unsupported address type");
      }
    } }, { key: "toBuffer", value: function() {
      return this._key;
    } }], [{ key: "fromString", value: function(f) {
      return new c(f);
    } }, { key: "account", value: function(f) {
      return new c(v.StrKey.encodeEd25519PublicKey(f));
    } }, { key: "contract", value: function(f) {
      return new c(v.StrKey.encodeContract(f));
    } }, { key: "fromScVal", value: function(f) {
      return c.fromScAddress(f.address());
    } }, { key: "fromScAddress", value: function(f) {
      switch (f.switch().value) {
        case e.default.ScAddressType.scAddressTypeAccount().value:
          return c.account(f.accountId().ed25519());
        case e.default.ScAddressType.scAddressTypeContract().value:
          return c.contract(f.contractId());
        default:
          throw new Error("Unsupported address type");
      }
    } }]);
  }(), Ya;
}
var Np;
function sg() {
  if (Np) return Oo;
  Np = 1, Object.defineProperty(Oo, "__esModule", { value: true }), Oo.createCustomContract = m, Oo.createStellarAssetContract = g, Oo.invokeContractFunction = r, Oo.invokeHostFunction = f, Oo.uploadContractWasm = a;
  var v = u(bn()), e = Ii(), n = La(), i = xo();
  function u(d) {
    return d && d.__esModule ? d : { default: d };
  }
  function y(d, b) {
    return h(d) || c(d, b) || o(d, b) || t();
  }
  function t() {
    throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
  }
  function o(d, b) {
    if (d) {
      if (typeof d == "string") return s(d, b);
      var S = {}.toString.call(d).slice(8, -1);
      return S === "Object" && d.constructor && (S = d.constructor.name), S === "Map" || S === "Set" ? Array.from(d) : S === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(S) ? s(d, b) : void 0;
    }
  }
  function s(d, b) {
    (b == null || b > d.length) && (b = d.length);
    for (var S = 0, E = Array(b); S < b; S++) E[S] = d[S];
    return E;
  }
  function c(d, b) {
    var S = d == null ? null : typeof Symbol < "u" && d[Symbol.iterator] || d["@@iterator"];
    if (S != null) {
      var E, R, k, w, F = [], I = true, q = false;
      try {
        if (k = (S = S.call(d)).next, b !== 0) for (; !(I = (E = k.call(S)).done) && (F.push(E.value), F.length !== b); I = true) ;
      } catch (N) {
        q = true, R = N;
      } finally {
        try {
          if (!I && S.return != null && (w = S.return(), Object(w) !== w)) return;
        } finally {
          if (q) throw R;
        }
      }
      return F;
    }
  }
  function h(d) {
    if (Array.isArray(d)) return d;
  }
  function f(d) {
    if (!d.func) throw new TypeError("host function invocation ('func') required (got ".concat(JSON.stringify(d), ")"));
    var b = new v.default.InvokeHostFunctionOp({ hostFunction: d.func, auth: d.auth || [] }), S = { body: v.default.OperationBody.invokeHostFunction(b) };
    return this.setSourceAccount(S, d), new v.default.Operation(S);
  }
  function r(d) {
    var b = new n.Address(d.contract);
    if (b._type !== "contract") throw new TypeError("expected contract strkey instance, got ".concat(b));
    return this.invokeHostFunction({ source: d.source, auth: d.auth, func: v.default.HostFunction.hostFunctionTypeInvokeContract(new v.default.InvokeContractArgs({ contractAddress: b.toScAddress(), functionName: d.function, args: d.args })) });
  }
  function m(d) {
    var b, S = Buffer.from(d.salt || l());
    if (!d.wasmHash || d.wasmHash.length !== 32) throw new TypeError("expected hash(contract WASM) in 'opts.wasmHash', got ".concat(d.wasmHash));
    if (S.length !== 32) throw new TypeError("expected 32-byte salt in 'opts.salt', got ".concat(d.wasmHash));
    return this.invokeHostFunction({ source: d.source, auth: d.auth, func: v.default.HostFunction.hostFunctionTypeCreateContractV2(new v.default.CreateContractArgsV2({ executable: v.default.ContractExecutable.contractExecutableWasm(Buffer.from(d.wasmHash)), contractIdPreimage: v.default.ContractIdPreimage.contractIdPreimageFromAddress(new v.default.ContractIdPreimageFromAddress({ address: d.address.toScAddress(), salt: S })), constructorArgs: (b = d.constructorArgs) !== null && b !== void 0 ? b : [] })) });
  }
  function g(d) {
    var b = d.asset;
    if (typeof b == "string") {
      var S = b.split(":"), E = y(S, 2), R = E[0], k = E[1];
      b = new i.Asset(R, k);
    }
    if (!(b instanceof i.Asset)) throw new TypeError("expected Asset in 'opts.asset', got ".concat(b));
    return this.invokeHostFunction({ source: d.source, auth: d.auth, func: v.default.HostFunction.hostFunctionTypeCreateContract(new v.default.CreateContractArgs({ executable: v.default.ContractExecutable.contractExecutableStellarAsset(), contractIdPreimage: v.default.ContractIdPreimage.contractIdPreimageFromAsset(b.toXDRObject()) })) });
  }
  function a(d) {
    return this.invokeHostFunction({ source: d.source, auth: d.auth, func: v.default.HostFunction.hostFunctionTypeUploadContractWasm(Buffer.from(d.wasm)) });
  }
  function l() {
    return e.Keypair.random().xdrPublicKey().value();
  }
  return Oo;
}
var wu = {}, Dp;
function ug() {
  if (Dp) return wu;
  Dp = 1, Object.defineProperty(wu, "__esModule", { value: true }), wu.extendFootprintTtl = n;
  var v = e(bn());
  function e(i) {
    return i && i.__esModule ? i : { default: i };
  }
  function n(i) {
    var u;
    if (((u = i.extendTo) !== null && u !== void 0 ? u : -1) <= 0) throw new RangeError("extendTo has to be positive");
    var y = new v.default.ExtendFootprintTtlOp({ ext: new v.default.ExtensionPoint(0), extendTo: i.extendTo }), t = { body: v.default.OperationBody.extendFootprintTtl(y) };
    return this.setSourceAccount(t, i), new v.default.Operation(t);
  }
  return wu;
}
var Su = {}, Fp;
function cg() {
  if (Fp) return Su;
  Fp = 1, Object.defineProperty(Su, "__esModule", { value: true }), Su.restoreFootprint = n;
  var v = e(bn());
  function e(i) {
    return i && i.__esModule ? i : { default: i };
  }
  function n() {
    var i = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, u = new v.default.RestoreFootprintOp({ ext: new v.default.ExtensionPoint(0) }), y = { body: v.default.OperationBody.restoreFootprint(u) };
    return this.setSourceAccount(y, i ?? {}), new v.default.Operation(y);
  }
  return Su;
}
var Up;
function lg() {
  return Up || (Up = 1, function(v) {
    Object.defineProperty(v, "__esModule", { value: true }), Object.defineProperty(v, "accountMerge", { enumerable: true, get: function() {
      return i.accountMerge;
    } }), Object.defineProperty(v, "allowTrust", { enumerable: true, get: function() {
      return u.allowTrust;
    } }), Object.defineProperty(v, "beginSponsoringFutureReserves", { enumerable: true, get: function() {
      return b.beginSponsoringFutureReserves;
    } }), Object.defineProperty(v, "bumpSequence", { enumerable: true, get: function() {
      return y.bumpSequence;
    } }), Object.defineProperty(v, "changeTrust", { enumerable: true, get: function() {
      return t.changeTrust;
    } }), Object.defineProperty(v, "claimClaimableBalance", { enumerable: true, get: function() {
      return c.claimClaimableBalance;
    } }), Object.defineProperty(v, "clawback", { enumerable: true, get: function() {
      return R.clawback;
    } }), Object.defineProperty(v, "clawbackClaimableBalance", { enumerable: true, get: function() {
      return h.clawbackClaimableBalance;
    } }), Object.defineProperty(v, "createAccount", { enumerable: true, get: function() {
      return o.createAccount;
    } }), Object.defineProperty(v, "createClaimableBalance", { enumerable: true, get: function() {
      return s.createClaimableBalance;
    } }), Object.defineProperty(v, "createCustomContract", { enumerable: true, get: function() {
      return I.createCustomContract;
    } }), Object.defineProperty(v, "createPassiveSellOffer", { enumerable: true, get: function() {
      return n.createPassiveSellOffer;
    } }), Object.defineProperty(v, "createStellarAssetContract", { enumerable: true, get: function() {
      return I.createStellarAssetContract;
    } }), Object.defineProperty(v, "endSponsoringFutureReserves", { enumerable: true, get: function() {
      return S.endSponsoringFutureReserves;
    } }), Object.defineProperty(v, "extendFootprintTtl", { enumerable: true, get: function() {
      return q.extendFootprintTtl;
    } }), Object.defineProperty(v, "inflation", { enumerable: true, get: function() {
      return f.inflation;
    } }), Object.defineProperty(v, "invokeContractFunction", { enumerable: true, get: function() {
      return I.invokeContractFunction;
    } }), Object.defineProperty(v, "invokeHostFunction", { enumerable: true, get: function() {
      return I.invokeHostFunction;
    } }), Object.defineProperty(v, "liquidityPoolDeposit", { enumerable: true, get: function() {
      return w.liquidityPoolDeposit;
    } }), Object.defineProperty(v, "liquidityPoolWithdraw", { enumerable: true, get: function() {
      return F.liquidityPoolWithdraw;
    } }), Object.defineProperty(v, "manageBuyOffer", { enumerable: true, get: function() {
      return m.manageBuyOffer;
    } }), Object.defineProperty(v, "manageData", { enumerable: true, get: function() {
      return r.manageData;
    } }), Object.defineProperty(v, "manageSellOffer", { enumerable: true, get: function() {
      return e.manageSellOffer;
    } }), Object.defineProperty(v, "pathPaymentStrictReceive", { enumerable: true, get: function() {
      return g.pathPaymentStrictReceive;
    } }), Object.defineProperty(v, "pathPaymentStrictSend", { enumerable: true, get: function() {
      return a.pathPaymentStrictSend;
    } }), Object.defineProperty(v, "payment", { enumerable: true, get: function() {
      return l.payment;
    } }), Object.defineProperty(v, "restoreFootprint", { enumerable: true, get: function() {
      return N.restoreFootprint;
    } }), Object.defineProperty(v, "revokeAccountSponsorship", { enumerable: true, get: function() {
      return E.revokeAccountSponsorship;
    } }), Object.defineProperty(v, "revokeClaimableBalanceSponsorship", { enumerable: true, get: function() {
      return E.revokeClaimableBalanceSponsorship;
    } }), Object.defineProperty(v, "revokeDataSponsorship", { enumerable: true, get: function() {
      return E.revokeDataSponsorship;
    } }), Object.defineProperty(v, "revokeLiquidityPoolSponsorship", { enumerable: true, get: function() {
      return E.revokeLiquidityPoolSponsorship;
    } }), Object.defineProperty(v, "revokeOfferSponsorship", { enumerable: true, get: function() {
      return E.revokeOfferSponsorship;
    } }), Object.defineProperty(v, "revokeSignerSponsorship", { enumerable: true, get: function() {
      return E.revokeSignerSponsorship;
    } }), Object.defineProperty(v, "revokeTrustlineSponsorship", { enumerable: true, get: function() {
      return E.revokeTrustlineSponsorship;
    } }), Object.defineProperty(v, "setOptions", { enumerable: true, get: function() {
      return d.setOptions;
    } }), Object.defineProperty(v, "setTrustLineFlags", { enumerable: true, get: function() {
      return k.setTrustLineFlags;
    } }), Object.defineProperty(v, "uploadContractWasm", { enumerable: true, get: function() {
      return I.uploadContractWasm;
    } });
    var e = Fy(), n = Uy(), i = jy(), u = Vy(), y = qy(), t = zy(), o = Hy(), s = Gy(), c = nm(), h = Wy(), f = Ky(), r = Xy(), m = $y(), g = Yy(), a = Qy(), l = Zy(), d = Jy(), b = eg(), S = tg(), E = rg(), R = ng(), k = ig(), w = og(), F = ag(), I = sg(), q = ug(), N = cg();
  }(Xc)), Xc;
}
var jp;
function Zl() {
  if (jp) return ki;
  jp = 1, Object.defineProperty(ki, "__esModule", { value: true }), ki.Operation = ki.AuthRevocableFlag = ki.AuthRequiredFlag = ki.AuthImmutableFlag = ki.AuthClawbackEnabledFlag = void 0;
  var v = Ei(), e = g(sa()), n = em(), i = Dy(), u = xo(), y = Yl(), t = rm(), o = ni(), s = Ql(), c = g(bn()), h = m(lg()), f = $i();
  function r(N) {
    if (typeof WeakMap != "function") return null;
    var H = /* @__PURE__ */ new WeakMap(), _ = /* @__PURE__ */ new WeakMap();
    return (r = function(L) {
      return L ? _ : H;
    })(N);
  }
  function m(N, H) {
    if (N && N.__esModule) return N;
    if (N === null || a(N) != "object" && typeof N != "function") return { default: N };
    var _ = r(H);
    if (_ && _.has(N)) return _.get(N);
    var x = { __proto__: null }, L = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for (var j in N) if (j !== "default" && {}.hasOwnProperty.call(N, j)) {
      var z = L ? Object.getOwnPropertyDescriptor(N, j) : null;
      z && (z.get || z.set) ? Object.defineProperty(x, j, z) : x[j] = N[j];
    }
    return x.default = N, _ && _.set(N, x), x;
  }
  function g(N) {
    return N && N.__esModule ? N : { default: N };
  }
  function a(N) {
    "@babel/helpers - typeof";
    return a = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(H) {
      return typeof H;
    } : function(H) {
      return H && typeof Symbol == "function" && H.constructor === Symbol && H !== Symbol.prototype ? "symbol" : typeof H;
    }, a(N);
  }
  function l(N, H) {
    if (!(N instanceof H)) throw new TypeError("Cannot call a class as a function");
  }
  function d(N, H) {
    for (var _ = 0; _ < H.length; _++) {
      var x = H[_];
      x.enumerable = x.enumerable || false, x.configurable = true, "value" in x && (x.writable = true), Object.defineProperty(N, S(x.key), x);
    }
  }
  function b(N, H, _) {
    return _ && d(N, _), Object.defineProperty(N, "prototype", { writable: false }), N;
  }
  function S(N) {
    var H = E(N, "string");
    return a(H) == "symbol" ? H : H + "";
  }
  function E(N, H) {
    if (a(N) != "object" || !N) return N;
    var _ = N[Symbol.toPrimitive];
    if (_ !== void 0) {
      var x = _.call(N, H);
      if (a(x) != "object") return x;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return String(N);
  }
  var R = 1e7, k = "9223372036854775807";
  ki.AuthRequiredFlag = 1, ki.AuthRevocableFlag = 2, ki.AuthImmutableFlag = 4, ki.AuthClawbackEnabledFlag = 8;
  var w = ki.Operation = function() {
    function N() {
      l(this, N);
    }
    return b(N, null, [{ key: "setSourceAccount", value: function(_, x) {
      if (x.source) try {
        _.sourceAccount = (0, f.decodeAddressToMuxedAccount)(x.source);
      } catch {
        throw new Error("Source address is invalid");
      }
    } }, { key: "fromXDRObject", value: function(_) {
      var x = {};
      _.sourceAccount() && (x.source = (0, f.encodeMuxedAccountToAddress)(_.sourceAccount()));
      var L = _.body().value(), j = _.body().switch().name;
      switch (j) {
        case "createAccount": {
          x.type = "createAccount", x.destination = q(L.destination()), x.startingBalance = this._fromXDRAmount(L.startingBalance());
          break;
        }
        case "payment": {
          x.type = "payment", x.destination = (0, f.encodeMuxedAccountToAddress)(L.destination()), x.asset = u.Asset.fromOperation(L.asset()), x.amount = this._fromXDRAmount(L.amount());
          break;
        }
        case "pathPaymentStrictReceive": {
          x.type = "pathPaymentStrictReceive", x.sendAsset = u.Asset.fromOperation(L.sendAsset()), x.sendMax = this._fromXDRAmount(L.sendMax()), x.destination = (0, f.encodeMuxedAccountToAddress)(L.destination()), x.destAsset = u.Asset.fromOperation(L.destAsset()), x.destAmount = this._fromXDRAmount(L.destAmount()), x.path = [];
          var z = L.path();
          Object.keys(z).forEach(function(ie) {
            x.path.push(u.Asset.fromOperation(z[ie]));
          });
          break;
        }
        case "pathPaymentStrictSend": {
          x.type = "pathPaymentStrictSend", x.sendAsset = u.Asset.fromOperation(L.sendAsset()), x.sendAmount = this._fromXDRAmount(L.sendAmount()), x.destination = (0, f.encodeMuxedAccountToAddress)(L.destination()), x.destAsset = u.Asset.fromOperation(L.destAsset()), x.destMin = this._fromXDRAmount(L.destMin()), x.path = [];
          var Z = L.path();
          Object.keys(Z).forEach(function(ie) {
            x.path.push(u.Asset.fromOperation(Z[ie]));
          });
          break;
        }
        case "changeTrust": {
          switch (x.type = "changeTrust", L.line().switch()) {
            case c.default.AssetType.assetTypePoolShare():
              x.line = y.LiquidityPoolAsset.fromOperation(L.line());
              break;
            default:
              x.line = u.Asset.fromOperation(L.line());
              break;
          }
          x.limit = this._fromXDRAmount(L.limit());
          break;
        }
        case "allowTrust": {
          x.type = "allowTrust", x.trustor = q(L.trustor()), x.assetCode = L.asset().value().toString(), x.assetCode = (0, n.trimEnd)(x.assetCode, "\0"), x.authorize = L.authorize();
          break;
        }
        case "setOptions": {
          if (x.type = "setOptions", L.inflationDest() && (x.inflationDest = q(L.inflationDest())), x.clearFlags = L.clearFlags(), x.setFlags = L.setFlags(), x.masterWeight = L.masterWeight(), x.lowThreshold = L.lowThreshold(), x.medThreshold = L.medThreshold(), x.highThreshold = L.highThreshold(), x.homeDomain = L.homeDomain() !== void 0 ? L.homeDomain().toString("ascii") : void 0, L.signer()) {
            var ue = {}, $ = L.signer().key().arm();
            if ($ === "ed25519") ue.ed25519PublicKey = q(L.signer().key());
            else if ($ === "preAuthTx") ue.preAuthTx = L.signer().key().preAuthTx();
            else if ($ === "hashX") ue.sha256Hash = L.signer().key().hashX();
            else if ($ === "ed25519SignedPayload") {
              var X = L.signer().key().ed25519SignedPayload();
              ue.ed25519SignedPayload = o.StrKey.encodeSignedPayload(X.toXDR());
            }
            ue.weight = L.signer().weight(), x.signer = ue;
          }
          break;
        }
        case "manageOffer":
        case "manageSellOffer": {
          x.type = "manageSellOffer", x.selling = u.Asset.fromOperation(L.selling()), x.buying = u.Asset.fromOperation(L.buying()), x.amount = this._fromXDRAmount(L.amount()), x.price = this._fromXDRPrice(L.price()), x.offerId = L.offerId().toString();
          break;
        }
        case "manageBuyOffer": {
          x.type = "manageBuyOffer", x.selling = u.Asset.fromOperation(L.selling()), x.buying = u.Asset.fromOperation(L.buying()), x.buyAmount = this._fromXDRAmount(L.buyAmount()), x.price = this._fromXDRPrice(L.price()), x.offerId = L.offerId().toString();
          break;
        }
        case "createPassiveOffer":
        case "createPassiveSellOffer": {
          x.type = "createPassiveSellOffer", x.selling = u.Asset.fromOperation(L.selling()), x.buying = u.Asset.fromOperation(L.buying()), x.amount = this._fromXDRAmount(L.amount()), x.price = this._fromXDRPrice(L.price());
          break;
        }
        case "accountMerge": {
          x.type = "accountMerge", x.destination = (0, f.encodeMuxedAccountToAddress)(L);
          break;
        }
        case "manageData": {
          x.type = "manageData", x.name = L.dataName().toString("ascii"), x.value = L.dataValue();
          break;
        }
        case "inflation": {
          x.type = "inflation";
          break;
        }
        case "bumpSequence": {
          x.type = "bumpSequence", x.bumpTo = L.bumpTo().toString();
          break;
        }
        case "createClaimableBalance": {
          x.type = "createClaimableBalance", x.asset = u.Asset.fromOperation(L.asset()), x.amount = this._fromXDRAmount(L.amount()), x.claimants = [], L.claimants().forEach(function(ie) {
            x.claimants.push(t.Claimant.fromXDR(ie));
          });
          break;
        }
        case "claimClaimableBalance": {
          x.type = "claimClaimableBalance", x.balanceId = L.toXDR("hex");
          break;
        }
        case "beginSponsoringFutureReserves": {
          x.type = "beginSponsoringFutureReserves", x.sponsoredId = q(L.sponsoredId());
          break;
        }
        case "endSponsoringFutureReserves": {
          x.type = "endSponsoringFutureReserves";
          break;
        }
        case "revokeSponsorship": {
          F(L, x);
          break;
        }
        case "clawback": {
          x.type = "clawback", x.amount = this._fromXDRAmount(L.amount()), x.from = (0, f.encodeMuxedAccountToAddress)(L.from()), x.asset = u.Asset.fromOperation(L.asset());
          break;
        }
        case "clawbackClaimableBalance": {
          x.type = "clawbackClaimableBalance", x.balanceId = L.toXDR("hex");
          break;
        }
        case "setTrustLineFlags": {
          x.type = "setTrustLineFlags", x.asset = u.Asset.fromOperation(L.asset()), x.trustor = q(L.trustor());
          var J = L.clearFlags(), B = L.setFlags(), Q = { authorized: c.default.TrustLineFlags.authorizedFlag(), authorizedToMaintainLiabilities: c.default.TrustLineFlags.authorizedToMaintainLiabilitiesFlag(), clawbackEnabled: c.default.TrustLineFlags.trustlineClawbackEnabledFlag() }, ne = function(ce) {
            var ye = Q[ce].value;
            if (B & ye) return true;
            if (J & ye) return false;
          };
          x.flags = {}, Object.keys(Q).forEach(function(ie) {
            x.flags[ie] = ne(ie);
          });
          break;
        }
        case "liquidityPoolDeposit": {
          x.type = "liquidityPoolDeposit", x.liquidityPoolId = L.liquidityPoolId().toString("hex"), x.maxAmountA = this._fromXDRAmount(L.maxAmountA()), x.maxAmountB = this._fromXDRAmount(L.maxAmountB()), x.minPrice = this._fromXDRPrice(L.minPrice()), x.maxPrice = this._fromXDRPrice(L.maxPrice());
          break;
        }
        case "liquidityPoolWithdraw": {
          x.type = "liquidityPoolWithdraw", x.liquidityPoolId = L.liquidityPoolId().toString("hex"), x.amount = this._fromXDRAmount(L.amount()), x.minAmountA = this._fromXDRAmount(L.minAmountA()), x.minAmountB = this._fromXDRAmount(L.minAmountB());
          break;
        }
        case "invokeHostFunction": {
          var K;
          x.type = "invokeHostFunction", x.func = L.hostFunction(), x.auth = (K = L.auth()) !== null && K !== void 0 ? K : [];
          break;
        }
        case "extendFootprintTtl": {
          x.type = "extendFootprintTtl", x.extendTo = L.extendTo();
          break;
        }
        case "restoreFootprint": {
          x.type = "restoreFootprint";
          break;
        }
        default:
          throw new Error("Unknown operation: ".concat(j));
      }
      return x;
    } }, { key: "isValidAmount", value: function(_) {
      var x = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
      if (typeof _ != "string") return false;
      var L;
      try {
        L = new e.default(_);
      } catch {
        return false;
      }
      return !(!x && L.isZero() || L.isNegative() || L.times(R).gt(new e.default(k).toString()) || L.decimalPlaces() > 7 || L.isNaN() || !L.isFinite());
    } }, { key: "constructAmountRequirementsError", value: function(_) {
      return "".concat(_, " argument must be of type String, represent a positive number and have at most 7 digits after the decimal");
    } }, { key: "_checkUnsignedIntValue", value: function(_, x) {
      var L = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
      if (!(typeof x > "u")) switch (typeof x == "string" && (x = parseFloat(x)), true) {
        case (typeof x != "number" || !Number.isFinite(x) || x % 1 !== 0):
          throw new Error("".concat(_, " value is invalid"));
        case x < 0:
          throw new Error("".concat(_, " value must be unsigned"));
        case (!L || L && L(x, _)):
          return x;
        default:
          throw new Error("".concat(_, " value is invalid"));
      }
    } }, { key: "_toXDRAmount", value: function(_) {
      var x = new e.default(_).times(R);
      return v.Hyper.fromString(x.toString());
    } }, { key: "_fromXDRAmount", value: function(_) {
      return new e.default(_).div(R).toFixed(7);
    } }, { key: "_fromXDRPrice", value: function(_) {
      var x = new e.default(_.n());
      return x.div(new e.default(_.d())).toString();
    } }, { key: "_toXDRPrice", value: function(_) {
      var x;
      if (_.n && _.d) x = new c.default.Price(_);
      else {
        var L = (0, i.best_r)(_);
        x = new c.default.Price({ n: parseInt(L[0], 10), d: parseInt(L[1], 10) });
      }
      if (x.n() < 0 || x.d() < 0) throw new Error("price must be positive");
      return x;
    } }]);
  }();
  function F(N, H) {
    switch (N.switch().name) {
      case "revokeSponsorshipLedgerEntry": {
        var _ = N.ledgerKey();
        switch (_.switch().name) {
          case c.default.LedgerEntryType.account().name: {
            H.type = "revokeAccountSponsorship", H.account = q(_.account().accountId());
            break;
          }
          case c.default.LedgerEntryType.trustline().name: {
            H.type = "revokeTrustlineSponsorship", H.account = q(_.trustLine().accountId());
            var x = _.trustLine().asset();
            switch (x.switch()) {
              case c.default.AssetType.assetTypePoolShare():
                H.asset = s.LiquidityPoolId.fromOperation(x);
                break;
              default:
                H.asset = u.Asset.fromOperation(x);
                break;
            }
            break;
          }
          case c.default.LedgerEntryType.offer().name: {
            H.type = "revokeOfferSponsorship", H.seller = q(_.offer().sellerId()), H.offerId = _.offer().offerId().toString();
            break;
          }
          case c.default.LedgerEntryType.data().name: {
            H.type = "revokeDataSponsorship", H.account = q(_.data().accountId()), H.name = _.data().dataName().toString("ascii");
            break;
          }
          case c.default.LedgerEntryType.claimableBalance().name: {
            H.type = "revokeClaimableBalanceSponsorship", H.balanceId = _.claimableBalance().balanceId().toXDR("hex");
            break;
          }
          case c.default.LedgerEntryType.liquidityPool().name: {
            H.type = "revokeLiquidityPoolSponsorship", H.liquidityPoolId = _.liquidityPool().liquidityPoolId().toString("hex");
            break;
          }
          default:
            throw new Error("Unknown ledgerKey: ".concat(N.switch().name));
        }
        break;
      }
      case "revokeSponsorshipSigner": {
        H.type = "revokeSignerSponsorship", H.account = q(N.signer().accountId()), H.signer = I(N.signer().signerKey());
        break;
      }
      default:
        throw new Error("Unknown revokeSponsorship: ".concat(N.switch().name));
    }
  }
  function I(N) {
    var H = {};
    switch (N.switch().name) {
      case c.default.SignerKeyType.signerKeyTypeEd25519().name: {
        H.ed25519PublicKey = o.StrKey.encodeEd25519PublicKey(N.ed25519());
        break;
      }
      case c.default.SignerKeyType.signerKeyTypePreAuthTx().name: {
        H.preAuthTx = N.preAuthTx().toString("hex");
        break;
      }
      case c.default.SignerKeyType.signerKeyTypeHashX().name: {
        H.sha256Hash = N.hashX().toString("hex");
        break;
      }
      default:
        throw new Error("Unknown signerKey: ".concat(N.switch().name));
    }
    return H;
  }
  function q(N) {
    return o.StrKey.encodeEd25519PublicKey(N.ed25519());
  }
  return w.accountMerge = h.accountMerge, w.allowTrust = h.allowTrust, w.bumpSequence = h.bumpSequence, w.changeTrust = h.changeTrust, w.createAccount = h.createAccount, w.createClaimableBalance = h.createClaimableBalance, w.claimClaimableBalance = h.claimClaimableBalance, w.clawbackClaimableBalance = h.clawbackClaimableBalance, w.createPassiveSellOffer = h.createPassiveSellOffer, w.inflation = h.inflation, w.manageData = h.manageData, w.manageSellOffer = h.manageSellOffer, w.manageBuyOffer = h.manageBuyOffer, w.pathPaymentStrictReceive = h.pathPaymentStrictReceive, w.pathPaymentStrictSend = h.pathPaymentStrictSend, w.payment = h.payment, w.setOptions = h.setOptions, w.beginSponsoringFutureReserves = h.beginSponsoringFutureReserves, w.endSponsoringFutureReserves = h.endSponsoringFutureReserves, w.revokeAccountSponsorship = h.revokeAccountSponsorship, w.revokeTrustlineSponsorship = h.revokeTrustlineSponsorship, w.revokeOfferSponsorship = h.revokeOfferSponsorship, w.revokeDataSponsorship = h.revokeDataSponsorship, w.revokeClaimableBalanceSponsorship = h.revokeClaimableBalanceSponsorship, w.revokeLiquidityPoolSponsorship = h.revokeLiquidityPoolSponsorship, w.revokeSignerSponsorship = h.revokeSignerSponsorship, w.clawback = h.clawback, w.setTrustLineFlags = h.setTrustLineFlags, w.liquidityPoolDeposit = h.liquidityPoolDeposit, w.liquidityPoolWithdraw = h.liquidityPoolWithdraw, w.invokeHostFunction = h.invokeHostFunction, w.extendFootprintTtl = h.extendFootprintTtl, w.restoreFootprint = h.restoreFootprint, w.createStellarAssetContract = h.createStellarAssetContract, w.invokeContractFunction = h.invokeContractFunction, w.createCustomContract = h.createCustomContract, w.uploadContractWasm = h.uploadContractWasm, ki;
}
var bi = {}, Vp;
function Jl() {
  if (Vp) return bi;
  Vp = 1, Object.defineProperty(bi, "__esModule", { value: true }), bi.MemoText = bi.MemoReturn = bi.MemoNone = bi.MemoID = bi.MemoHash = bi.Memo = void 0;
  var v = Ei(), e = i(sa()), n = i(bn());
  function i(a) {
    return a && a.__esModule ? a : { default: a };
  }
  function u(a) {
    "@babel/helpers - typeof";
    return u = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(l) {
      return typeof l;
    } : function(l) {
      return l && typeof Symbol == "function" && l.constructor === Symbol && l !== Symbol.prototype ? "symbol" : typeof l;
    }, u(a);
  }
  function y(a, l) {
    if (!(a instanceof l)) throw new TypeError("Cannot call a class as a function");
  }
  function t(a, l) {
    for (var d = 0; d < l.length; d++) {
      var b = l[d];
      b.enumerable = b.enumerable || false, b.configurable = true, "value" in b && (b.writable = true), Object.defineProperty(a, s(b.key), b);
    }
  }
  function o(a, l, d) {
    return l && t(a.prototype, l), d && t(a, d), Object.defineProperty(a, "prototype", { writable: false }), a;
  }
  function s(a) {
    var l = c(a, "string");
    return u(l) == "symbol" ? l : l + "";
  }
  function c(a, l) {
    if (u(a) != "object" || !a) return a;
    var d = a[Symbol.toPrimitive];
    if (d !== void 0) {
      var b = d.call(a, l);
      if (u(b) != "object") return b;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return String(a);
  }
  var h = bi.MemoNone = "none", f = bi.MemoID = "id", r = bi.MemoText = "text", m = bi.MemoHash = "hash", g = bi.MemoReturn = "return";
  return bi.Memo = function() {
    function a(l) {
      var d = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
      switch (y(this, a), this._type = l, this._value = d, this._type) {
        case h:
          break;
        case f:
          a._validateIdValue(d);
          break;
        case r:
          a._validateTextValue(d);
          break;
        case m:
        case g:
          a._validateHashValue(d), typeof d == "string" && (this._value = Buffer.from(d, "hex"));
          break;
        default:
          throw new Error("Invalid memo type");
      }
    }
    return o(a, [{ key: "type", get: function() {
      return this._type;
    }, set: function(d) {
      throw new Error("Memo is immutable");
    } }, { key: "value", get: function() {
      switch (this._type) {
        case h:
          return null;
        case f:
        case r:
          return this._value;
        case m:
        case g:
          return Buffer.from(this._value);
        default:
          throw new Error("Invalid memo type");
      }
    }, set: function(d) {
      throw new Error("Memo is immutable");
    } }, { key: "toXDRObject", value: function() {
      switch (this._type) {
        case h:
          return n.default.Memo.memoNone();
        case f:
          return n.default.Memo.memoId(v.UnsignedHyper.fromString(this._value));
        case r:
          return n.default.Memo.memoText(this._value);
        case m:
          return n.default.Memo.memoHash(this._value);
        case g:
          return n.default.Memo.memoReturn(this._value);
        default:
          return null;
      }
    } }], [{ key: "_validateIdValue", value: function(d) {
      var b = new Error("Expects a int64 as a string. Got ".concat(d));
      if (typeof d != "string") throw b;
      var S;
      try {
        S = new e.default(d);
      } catch {
        throw b;
      }
      if (!S.isFinite() || S.isNaN()) throw b;
    } }, { key: "_validateTextValue", value: function(d) {
      if (!n.default.Memo.armTypeForArm("text").isValid(d)) throw new Error("Expects string, array or buffer, max 28 bytes");
    } }, { key: "_validateHashValue", value: function(d) {
      var b = new Error("Expects a 32 byte hash value or hex encoded string. Got ".concat(d));
      if (d === null || typeof d > "u") throw b;
      var S;
      if (typeof d == "string") {
        if (!/^[0-9A-Fa-f]{64}$/g.test(d)) throw b;
        S = Buffer.from(d, "hex");
      } else if (Buffer.isBuffer(d)) S = Buffer.from(d);
      else throw b;
      if (!S.length || S.length !== 32) throw b;
    } }, { key: "none", value: function() {
      return new a(h);
    } }, { key: "text", value: function(d) {
      return new a(r, d);
    } }, { key: "id", value: function(d) {
      return new a(f, d);
    } }, { key: "hash", value: function(d) {
      return new a(m, d);
    } }, { key: "return", value: function(d) {
      return new a(g, d);
    } }, { key: "fromXDRObject", value: function(d) {
      switch (d.arm()) {
        case "id":
          return a.id(d.value().toString());
        case "text":
          return a.text(d.value());
        case "hash":
          return a.hash(d.value());
        case "retHash":
          return a.return(d.value());
      }
      if (typeof d.value() > "u") return a.none();
      throw new Error("Unknown type");
    } }]);
  }(), bi;
}
var qp;
function ef() {
  if (qp) return Ga;
  qp = 1;
  function v(R) {
    "@babel/helpers - typeof";
    return v = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(k) {
      return typeof k;
    } : function(k) {
      return k && typeof Symbol == "function" && k.constructor === Symbol && k !== Symbol.prototype ? "symbol" : typeof k;
    }, v(R);
  }
  Object.defineProperty(Ga, "__esModule", { value: true }), Ga.Transaction = void 0;
  var e = s(bn()), n = Fo(), i = ni(), u = Zl(), y = Jl(), t = $l(), o = $i();
  function s(R) {
    return R && R.__esModule ? R : { default: R };
  }
  function c(R, k) {
    if (!(R instanceof k)) throw new TypeError("Cannot call a class as a function");
  }
  function h(R, k) {
    for (var w = 0; w < k.length; w++) {
      var F = k[w];
      F.enumerable = F.enumerable || false, F.configurable = true, "value" in F && (F.writable = true), Object.defineProperty(R, r(F.key), F);
    }
  }
  function f(R, k, w) {
    return k && h(R.prototype, k), Object.defineProperty(R, "prototype", { writable: false }), R;
  }
  function r(R) {
    var k = m(R, "string");
    return v(k) == "symbol" ? k : k + "";
  }
  function m(R, k) {
    if (v(R) != "object" || !R) return R;
    var w = R[Symbol.toPrimitive];
    if (w !== void 0) {
      var F = w.call(R, k);
      if (v(F) != "object") return F;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return String(R);
  }
  function g(R, k, w) {
    return k = b(k), a(R, d() ? Reflect.construct(k, w || [], b(R).constructor) : k.apply(R, w));
  }
  function a(R, k) {
    if (k && (v(k) == "object" || typeof k == "function")) return k;
    if (k !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
    return l(R);
  }
  function l(R) {
    if (R === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return R;
  }
  function d() {
    try {
      var R = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
      }));
    } catch {
    }
    return (d = function() {
      return !!R;
    })();
  }
  function b(R) {
    return b = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(k) {
      return k.__proto__ || Object.getPrototypeOf(k);
    }, b(R);
  }
  function S(R, k) {
    if (typeof k != "function" && k !== null) throw new TypeError("Super expression must either be null or a function");
    R.prototype = Object.create(k && k.prototype, { constructor: { value: R, writable: true, configurable: true } }), Object.defineProperty(R, "prototype", { writable: false }), k && E(R, k);
  }
  function E(R, k) {
    return E = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(w, F) {
      return w.__proto__ = F, w;
    }, E(R, k);
  }
  return Ga.Transaction = function(R) {
    function k(w, F) {
      var I;
      if (c(this, k), typeof w == "string") {
        var q = Buffer.from(w, "base64");
        w = e.default.TransactionEnvelope.fromXDR(q);
      }
      var N = w.switch();
      if (!(N === e.default.EnvelopeType.envelopeTypeTxV0() || N === e.default.EnvelopeType.envelopeTypeTx())) throw new Error("Invalid TransactionEnvelope: expected an envelopeTypeTxV0 or envelopeTypeTx but received an ".concat(N.name, "."));
      var H = w.value(), _ = H.tx(), x = _.fee().toString(), L = (H.signatures() || []).slice();
      switch (I = g(this, k, [_, L, x, F]), I._envelopeType = N, I._memo = _.memo(), I._sequence = _.seqNum().toString(), I._envelopeType) {
        case e.default.EnvelopeType.envelopeTypeTxV0():
          I._source = i.StrKey.encodeEd25519PublicKey(I.tx.sourceAccountEd25519());
          break;
        default:
          I._source = (0, o.encodeMuxedAccountToAddress)(I.tx.sourceAccount());
          break;
      }
      var j = null, z = null;
      switch (I._envelopeType) {
        case e.default.EnvelopeType.envelopeTypeTxV0():
          z = _.timeBounds();
          break;
        case e.default.EnvelopeType.envelopeTypeTx():
          switch (_.cond().switch()) {
            case e.default.PreconditionType.precondTime():
              z = _.cond().timeBounds();
              break;
            case e.default.PreconditionType.precondV2():
              j = _.cond().v2(), z = j.timeBounds();
              break;
          }
          break;
      }
      if (z && (I._timeBounds = { minTime: z.minTime().toString(), maxTime: z.maxTime().toString() }), j) {
        var Z = j.ledgerBounds();
        Z && (I._ledgerBounds = { minLedger: Z.minLedger(), maxLedger: Z.maxLedger() });
        var ue = j.minSeqNum();
        ue && (I._minAccountSequence = ue.toString()), I._minAccountSequenceAge = j.minSeqAge(), I._minAccountSequenceLedgerGap = j.minSeqLedgerGap(), I._extraSigners = j.extraSigners();
      }
      var $ = _.operations() || [];
      return I._operations = $.map(function(X) {
        return u.Operation.fromXDRObject(X);
      }), I;
    }
    return S(k, R), f(k, [{ key: "timeBounds", get: function() {
      return this._timeBounds;
    }, set: function(F) {
      throw new Error("Transaction is immutable");
    } }, { key: "ledgerBounds", get: function() {
      return this._ledgerBounds;
    }, set: function(F) {
      throw new Error("Transaction is immutable");
    } }, { key: "minAccountSequence", get: function() {
      return this._minAccountSequence;
    }, set: function(F) {
      throw new Error("Transaction is immutable");
    } }, { key: "minAccountSequenceAge", get: function() {
      return this._minAccountSequenceAge;
    }, set: function(F) {
      throw new Error("Transaction is immutable");
    } }, { key: "minAccountSequenceLedgerGap", get: function() {
      return this._minAccountSequenceLedgerGap;
    }, set: function(F) {
      throw new Error("Transaction is immutable");
    } }, { key: "extraSigners", get: function() {
      return this._extraSigners;
    }, set: function(F) {
      throw new Error("Transaction is immutable");
    } }, { key: "sequence", get: function() {
      return this._sequence;
    }, set: function(F) {
      throw new Error("Transaction is immutable");
    } }, { key: "source", get: function() {
      return this._source;
    }, set: function(F) {
      throw new Error("Transaction is immutable");
    } }, { key: "operations", get: function() {
      return this._operations;
    }, set: function(F) {
      throw new Error("Transaction is immutable");
    } }, { key: "memo", get: function() {
      return y.Memo.fromXDRObject(this._memo);
    }, set: function(F) {
      throw new Error("Transaction is immutable");
    } }, { key: "signatureBase", value: function() {
      var F = this.tx;
      this._envelopeType === e.default.EnvelopeType.envelopeTypeTxV0() && (F = e.default.Transaction.fromXDR(Buffer.concat([e.default.PublicKeyType.publicKeyTypeEd25519().toXDR(), F.toXDR()])));
      var I = new e.default.TransactionSignaturePayloadTaggedTransaction.envelopeTypeTx(F), q = new e.default.TransactionSignaturePayload({ networkId: e.default.Hash.fromXDR((0, n.hash)(this.networkPassphrase)), taggedTransaction: I });
      return q.toXDR();
    } }, { key: "toEnvelope", value: function() {
      var F = this.tx.toXDR(), I = this.signatures.slice(), q;
      switch (this._envelopeType) {
        case e.default.EnvelopeType.envelopeTypeTxV0():
          q = new e.default.TransactionEnvelope.envelopeTypeTxV0(new e.default.TransactionV0Envelope({ tx: e.default.TransactionV0.fromXDR(F), signatures: I }));
          break;
        case e.default.EnvelopeType.envelopeTypeTx():
          q = new e.default.TransactionEnvelope.envelopeTypeTx(new e.default.TransactionV1Envelope({ tx: e.default.Transaction.fromXDR(F), signatures: I }));
          break;
        default:
          throw new Error("Invalid TransactionEnvelope: expected an envelopeTypeTxV0 or envelopeTypeTx but received an ".concat(this._envelopeType.name, "."));
      }
      return q;
    } }, { key: "getClaimableBalanceId", value: function(F) {
      if (!Number.isInteger(F) || F < 0 || F >= this.operations.length) throw new RangeError("invalid operation index");
      var I = this.operations[F];
      try {
        I = u.Operation.createClaimableBalance(I);
      } catch (x) {
        throw new TypeError("expected createClaimableBalance, got ".concat(I.type, ": ").concat(x));
      }
      var q = i.StrKey.decodeEd25519PublicKey((0, o.extractBaseAddress)(this.source)), N = e.default.HashIdPreimage.envelopeTypeOpId(new e.default.HashIdPreimageOperationId({ sourceAccount: e.default.AccountId.publicKeyTypeEd25519(q), seqNum: e.default.SequenceNumber.fromString(this.sequence), opNum: F })), H = (0, n.hash)(N.toXDR("raw")), _ = e.default.ClaimableBalanceId.claimableBalanceIdTypeV0(H);
      return _.toXDR("hex");
    } }]);
  }(t.TransactionBase), Ga;
}
var Qa = {}, zp;
function im() {
  if (zp) return Qa;
  zp = 1;
  function v(S) {
    "@babel/helpers - typeof";
    return v = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(E) {
      return typeof E;
    } : function(E) {
      return E && typeof Symbol == "function" && E.constructor === Symbol && E !== Symbol.prototype ? "symbol" : typeof E;
    }, v(S);
  }
  Object.defineProperty(Qa, "__esModule", { value: true }), Qa.FeeBumpTransaction = void 0;
  var e = t(bn()), n = Fo(), i = ef(), u = $l(), y = $i();
  function t(S) {
    return S && S.__esModule ? S : { default: S };
  }
  function o(S, E) {
    if (!(S instanceof E)) throw new TypeError("Cannot call a class as a function");
  }
  function s(S, E) {
    for (var R = 0; R < E.length; R++) {
      var k = E[R];
      k.enumerable = k.enumerable || false, k.configurable = true, "value" in k && (k.writable = true), Object.defineProperty(S, h(k.key), k);
    }
  }
  function c(S, E, R) {
    return E && s(S.prototype, E), Object.defineProperty(S, "prototype", { writable: false }), S;
  }
  function h(S) {
    var E = f(S, "string");
    return v(E) == "symbol" ? E : E + "";
  }
  function f(S, E) {
    if (v(S) != "object" || !S) return S;
    var R = S[Symbol.toPrimitive];
    if (R !== void 0) {
      var k = R.call(S, E);
      if (v(k) != "object") return k;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return String(S);
  }
  function r(S, E, R) {
    return E = l(E), m(S, a() ? Reflect.construct(E, R || [], l(S).constructor) : E.apply(S, R));
  }
  function m(S, E) {
    if (E && (v(E) == "object" || typeof E == "function")) return E;
    if (E !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
    return g(S);
  }
  function g(S) {
    if (S === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return S;
  }
  function a() {
    try {
      var S = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
      }));
    } catch {
    }
    return (a = function() {
      return !!S;
    })();
  }
  function l(S) {
    return l = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(E) {
      return E.__proto__ || Object.getPrototypeOf(E);
    }, l(S);
  }
  function d(S, E) {
    if (typeof E != "function" && E !== null) throw new TypeError("Super expression must either be null or a function");
    S.prototype = Object.create(E && E.prototype, { constructor: { value: S, writable: true, configurable: true } }), Object.defineProperty(S, "prototype", { writable: false }), E && b(S, E);
  }
  function b(S, E) {
    return b = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(R, k) {
      return R.__proto__ = k, R;
    }, b(S, E);
  }
  return Qa.FeeBumpTransaction = function(S) {
    function E(R, k) {
      var w;
      if (o(this, E), typeof R == "string") {
        var F = Buffer.from(R, "base64");
        R = e.default.TransactionEnvelope.fromXDR(F);
      }
      var I = R.switch();
      if (I !== e.default.EnvelopeType.envelopeTypeTxFeeBump()) throw new Error("Invalid TransactionEnvelope: expected an envelopeTypeTxFeeBump but received an ".concat(I.name, "."));
      var q = R.value(), N = q.tx(), H = N.fee().toString(), _ = (q.signatures() || []).slice();
      w = r(this, E, [N, _, H, k]);
      var x = e.default.TransactionEnvelope.envelopeTypeTx(N.innerTx().v1());
      return w._feeSource = (0, y.encodeMuxedAccountToAddress)(w.tx.feeSource()), w._innerTransaction = new i.Transaction(x, k), w;
    }
    return d(E, S), c(E, [{ key: "innerTransaction", get: function() {
      return this._innerTransaction;
    } }, { key: "operations", get: function() {
      return this._innerTransaction.operations;
    } }, { key: "feeSource", get: function() {
      return this._feeSource;
    } }, { key: "signatureBase", value: function() {
      var k = new e.default.TransactionSignaturePayloadTaggedTransaction.envelopeTypeTxFeeBump(this.tx), w = new e.default.TransactionSignaturePayload({ networkId: e.default.Hash.fromXDR((0, n.hash)(this.networkPassphrase)), taggedTransaction: k });
      return w.toXDR();
    } }, { key: "toEnvelope", value: function() {
      var k = new e.default.FeeBumpTransactionEnvelope({ tx: e.default.FeeBumpTransaction.fromXDR(this.tx.toXDR()), signatures: this.signatures.slice() });
      return new e.default.TransactionEnvelope.envelopeTypeTxFeeBump(k);
    } }]);
  }(u.TransactionBase), Qa;
}
var Zi = {}, Za = {}, Hp;
function tf() {
  if (Hp) return Za;
  Hp = 1, Object.defineProperty(Za, "__esModule", { value: true }), Za.Account = void 0;
  var v = n(sa()), e = ni();
  function n(c) {
    return c && c.__esModule ? c : { default: c };
  }
  function i(c) {
    "@babel/helpers - typeof";
    return i = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(h) {
      return typeof h;
    } : function(h) {
      return h && typeof Symbol == "function" && h.constructor === Symbol && h !== Symbol.prototype ? "symbol" : typeof h;
    }, i(c);
  }
  function u(c, h) {
    if (!(c instanceof h)) throw new TypeError("Cannot call a class as a function");
  }
  function y(c, h) {
    for (var f = 0; f < h.length; f++) {
      var r = h[f];
      r.enumerable = r.enumerable || false, r.configurable = true, "value" in r && (r.writable = true), Object.defineProperty(c, o(r.key), r);
    }
  }
  function t(c, h, f) {
    return h && y(c.prototype, h), Object.defineProperty(c, "prototype", { writable: false }), c;
  }
  function o(c) {
    var h = s(c, "string");
    return i(h) == "symbol" ? h : h + "";
  }
  function s(c, h) {
    if (i(c) != "object" || !c) return c;
    var f = c[Symbol.toPrimitive];
    if (f !== void 0) {
      var r = f.call(c, h);
      if (i(r) != "object") return r;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return String(c);
  }
  return Za.Account = function() {
    function c(h, f) {
      if (u(this, c), e.StrKey.isValidMed25519PublicKey(h)) throw new Error("accountId is an M-address; use MuxedAccount instead");
      if (!e.StrKey.isValidEd25519PublicKey(h)) throw new Error("accountId is invalid");
      if (typeof f != "string") throw new Error("sequence must be of type string");
      this._accountId = h, this.sequence = new v.default(f);
    }
    return t(c, [{ key: "accountId", value: function() {
      return this._accountId;
    } }, { key: "sequenceNumber", value: function() {
      return this.sequence.toString();
    } }, { key: "incrementSequenceNumber", value: function() {
      this.sequence = this.sequence.plus(1);
    } }]);
  }(), Za;
}
var Ja = {}, Gp;
function om() {
  if (Gp) return Ja;
  Gp = 1, Object.defineProperty(Ja, "__esModule", { value: true }), Ja.MuxedAccount = void 0;
  var v = u(bn()), e = tf(), n = ni(), i = $i();
  function u(f) {
    return f && f.__esModule ? f : { default: f };
  }
  function y(f) {
    "@babel/helpers - typeof";
    return y = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(r) {
      return typeof r;
    } : function(r) {
      return r && typeof Symbol == "function" && r.constructor === Symbol && r !== Symbol.prototype ? "symbol" : typeof r;
    }, y(f);
  }
  function t(f, r) {
    if (!(f instanceof r)) throw new TypeError("Cannot call a class as a function");
  }
  function o(f, r) {
    for (var m = 0; m < r.length; m++) {
      var g = r[m];
      g.enumerable = g.enumerable || false, g.configurable = true, "value" in g && (g.writable = true), Object.defineProperty(f, c(g.key), g);
    }
  }
  function s(f, r, m) {
    return r && o(f.prototype, r), m && o(f, m), Object.defineProperty(f, "prototype", { writable: false }), f;
  }
  function c(f) {
    var r = h(f, "string");
    return y(r) == "symbol" ? r : r + "";
  }
  function h(f, r) {
    if (y(f) != "object" || !f) return f;
    var m = f[Symbol.toPrimitive];
    if (m !== void 0) {
      var g = m.call(f, r);
      if (y(g) != "object") return g;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return String(f);
  }
  return Ja.MuxedAccount = function() {
    function f(r, m) {
      t(this, f);
      var g = r.accountId();
      if (!n.StrKey.isValidEd25519PublicKey(g)) throw new Error("accountId is invalid");
      this.account = r, this._muxedXdr = (0, i.encodeMuxedAccount)(g, m), this._mAddress = (0, i.encodeMuxedAccountToAddress)(this._muxedXdr), this._id = m;
    }
    return s(f, [{ key: "baseAccount", value: function() {
      return this.account;
    } }, { key: "accountId", value: function() {
      return this._mAddress;
    } }, { key: "id", value: function() {
      return this._id;
    } }, { key: "setId", value: function(m) {
      if (typeof m != "string") throw new Error("id should be a string representing a number (uint64)");
      return this._muxedXdr.med25519().id(v.default.Uint64.fromString(m)), this._mAddress = (0, i.encodeMuxedAccountToAddress)(this._muxedXdr), this._id = m, this;
    } }, { key: "sequenceNumber", value: function() {
      return this.account.sequenceNumber();
    } }, { key: "incrementSequenceNumber", value: function() {
      return this.account.incrementSequenceNumber();
    } }, { key: "toXDRObject", value: function() {
      return this._muxedXdr;
    } }, { key: "equals", value: function(m) {
      return this.accountId() === m.accountId();
    } }], [{ key: "fromAddress", value: function(m, g) {
      var a = (0, i.decodeAddressToMuxedAccount)(m), l = (0, i.extractBaseAddress)(m), d = a.med25519().id().toString();
      return new f(new e.Account(l, g), d);
    } }]);
  }(), Ja;
}
var es = {}, Wp;
function am() {
  if (Wp) return es;
  Wp = 1, Object.defineProperty(es, "__esModule", { value: true }), es.SorobanDataBuilder = void 0;
  var v = e(bn());
  function e(c) {
    return c && c.__esModule ? c : { default: c };
  }
  function n(c) {
    "@babel/helpers - typeof";
    return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(h) {
      return typeof h;
    } : function(h) {
      return h && typeof Symbol == "function" && h.constructor === Symbol && h !== Symbol.prototype ? "symbol" : typeof h;
    }, n(c);
  }
  function i(c, h) {
    if (!(c instanceof h)) throw new TypeError("Cannot call a class as a function");
  }
  function u(c, h) {
    for (var f = 0; f < h.length; f++) {
      var r = h[f];
      r.enumerable = r.enumerable || false, r.configurable = true, "value" in r && (r.writable = true), Object.defineProperty(c, o(r.key), r);
    }
  }
  function y(c, h, f) {
    return h && u(c.prototype, h), f && u(c, f), Object.defineProperty(c, "prototype", { writable: false }), c;
  }
  function t(c, h, f) {
    return (h = o(h)) in c ? Object.defineProperty(c, h, { value: f, enumerable: true, configurable: true, writable: true }) : c[h] = f, c;
  }
  function o(c) {
    var h = s(c, "string");
    return n(h) == "symbol" ? h : h + "";
  }
  function s(c, h) {
    if (n(c) != "object" || !c) return c;
    var f = c[Symbol.toPrimitive];
    if (f !== void 0) {
      var r = f.call(c, h);
      if (n(r) != "object") return r;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return String(c);
  }
  return es.SorobanDataBuilder = function() {
    function c(h) {
      i(this, c), t(this, "_data", void 0);
      var f;
      h ? typeof h == "string" || ArrayBuffer.isView(h) ? f = c.fromXDR(h) : f = c.fromXDR(h.toXDR()) : f = new v.default.SorobanTransactionData({ resources: new v.default.SorobanResources({ footprint: new v.default.LedgerFootprint({ readOnly: [], readWrite: [] }), instructions: 0, readBytes: 0, writeBytes: 0 }), ext: new v.default.ExtensionPoint(0), resourceFee: new v.default.Int64(0) }), this._data = f;
    }
    return y(c, [{ key: "setResourceFee", value: function(f) {
      return this._data.resourceFee(new v.default.Int64(f)), this;
    } }, { key: "setResources", value: function(f, r, m) {
      return this._data.resources().instructions(f), this._data.resources().readBytes(r), this._data.resources().writeBytes(m), this;
    } }, { key: "appendFootprint", value: function(f, r) {
      return this.setFootprint(this.getReadOnly().concat(f), this.getReadWrite().concat(r));
    } }, { key: "setFootprint", value: function(f, r) {
      return f !== null && this.setReadOnly(f), r !== null && this.setReadWrite(r), this;
    } }, { key: "setReadOnly", value: function(f) {
      return this._data.resources().footprint().readOnly(f ?? []), this;
    } }, { key: "setReadWrite", value: function(f) {
      return this._data.resources().footprint().readWrite(f ?? []), this;
    } }, { key: "build", value: function() {
      return v.default.SorobanTransactionData.fromXDR(this._data.toXDR());
    } }, { key: "getReadOnly", value: function() {
      return this.getFootprint().readOnly();
    } }, { key: "getReadWrite", value: function() {
      return this.getFootprint().readWrite();
    } }, { key: "getFootprint", value: function() {
      return this._data.resources().footprint();
    } }], [{ key: "fromXDR", value: function(f) {
      return v.default.SorobanTransactionData.fromXDR(f, typeof f == "string" ? "base64" : "raw");
    } }]);
  }(), es;
}
var ts = {}, Kp;
function sm() {
  if (Kp) return ts;
  Kp = 1, Object.defineProperty(ts, "__esModule", { value: true }), ts.SignerKey = void 0;
  var v = n(bn()), e = ni();
  function n(c) {
    return c && c.__esModule ? c : { default: c };
  }
  function i(c) {
    "@babel/helpers - typeof";
    return i = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(h) {
      return typeof h;
    } : function(h) {
      return h && typeof Symbol == "function" && h.constructor === Symbol && h !== Symbol.prototype ? "symbol" : typeof h;
    }, i(c);
  }
  function u(c, h) {
    if (!(c instanceof h)) throw new TypeError("Cannot call a class as a function");
  }
  function y(c, h) {
    for (var f = 0; f < h.length; f++) {
      var r = h[f];
      r.enumerable = r.enumerable || false, r.configurable = true, "value" in r && (r.writable = true), Object.defineProperty(c, o(r.key), r);
    }
  }
  function t(c, h, f) {
    return f && y(c, f), Object.defineProperty(c, "prototype", { writable: false }), c;
  }
  function o(c) {
    var h = s(c, "string");
    return i(h) == "symbol" ? h : h + "";
  }
  function s(c, h) {
    if (i(c) != "object" || !c) return c;
    var f = c[Symbol.toPrimitive];
    if (f !== void 0) {
      var r = f.call(c, h);
      if (i(r) != "object") return r;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return String(c);
  }
  return ts.SignerKey = function() {
    function c() {
      u(this, c);
    }
    return t(c, null, [{ key: "decodeAddress", value: function(f) {
      var r = { ed25519PublicKey: v.default.SignerKey.signerKeyTypeEd25519, preAuthTx: v.default.SignerKey.signerKeyTypePreAuthTx, sha256Hash: v.default.SignerKey.signerKeyTypeHashX, signedPayload: v.default.SignerKey.signerKeyTypeEd25519SignedPayload }, m = e.StrKey.getVersionByteForPrefix(f), g = r[m];
      if (!g) throw new Error("invalid signer key type (".concat(m, ")"));
      var a = (0, e.decodeCheck)(m, f);
      switch (m) {
        case "signedPayload":
          return g(new v.default.SignerKeyEd25519SignedPayload({ ed25519: a.slice(0, 32), payload: a.slice(36) }));
        case "ed25519PublicKey":
        case "preAuthTx":
        case "sha256Hash":
        default:
          return g(a);
      }
    } }, { key: "encodeSignerKey", value: function(f) {
      var r, m;
      switch (f.switch()) {
        case v.default.SignerKeyType.signerKeyTypeEd25519():
          r = "ed25519PublicKey", m = f.value();
          break;
        case v.default.SignerKeyType.signerKeyTypePreAuthTx():
          r = "preAuthTx", m = f.value();
          break;
        case v.default.SignerKeyType.signerKeyTypeHashX():
          r = "sha256Hash", m = f.value();
          break;
        case v.default.SignerKeyType.signerKeyTypeEd25519SignedPayload():
          r = "signedPayload", m = f.ed25519SignedPayload().toXDR("raw");
          break;
        default:
          throw new Error("invalid SignerKey (type: ".concat(f.switch(), ")"));
      }
      return (0, e.encodeCheck)(r, m);
    } }]);
  }(), ts;
}
var Xp;
function fg() {
  if (Xp) return Zi;
  Xp = 1, Object.defineProperty(Zi, "__esModule", { value: true }), Zi.TransactionBuilder = Zi.TimeoutInfinite = Zi.BASE_FEE = void 0, Zi.isValidDate = _;
  var v = Ei(), e = r(sa()), n = r(bn()), i = tf(), u = om(), y = $i(), t = ef(), o = im(), s = am(), c = ni(), h = sm(), f = Jl();
  function r(x) {
    return x && x.__esModule ? x : { default: x };
  }
  function m(x) {
    "@babel/helpers - typeof";
    return m = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(L) {
      return typeof L;
    } : function(L) {
      return L && typeof Symbol == "function" && L.constructor === Symbol && L !== Symbol.prototype ? "symbol" : typeof L;
    }, m(x);
  }
  function g(x) {
    return b(x) || d(x) || l(x) || a();
  }
  function a() {
    throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
  }
  function l(x, L) {
    if (x) {
      if (typeof x == "string") return S(x, L);
      var j = {}.toString.call(x).slice(8, -1);
      return j === "Object" && x.constructor && (j = x.constructor.name), j === "Map" || j === "Set" ? Array.from(x) : j === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(j) ? S(x, L) : void 0;
    }
  }
  function d(x) {
    if (typeof Symbol < "u" && x[Symbol.iterator] != null || x["@@iterator"] != null) return Array.from(x);
  }
  function b(x) {
    if (Array.isArray(x)) return S(x);
  }
  function S(x, L) {
    (L == null || L > x.length) && (L = x.length);
    for (var j = 0, z = Array(L); j < L; j++) z[j] = x[j];
    return z;
  }
  function E(x, L) {
    var j = Object.keys(x);
    if (Object.getOwnPropertySymbols) {
      var z = Object.getOwnPropertySymbols(x);
      L && (z = z.filter(function(Z) {
        return Object.getOwnPropertyDescriptor(x, Z).enumerable;
      })), j.push.apply(j, z);
    }
    return j;
  }
  function R(x) {
    for (var L = 1; L < arguments.length; L++) {
      var j = arguments[L] != null ? arguments[L] : {};
      L % 2 ? E(Object(j), true).forEach(function(z) {
        k(x, z, j[z]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(x, Object.getOwnPropertyDescriptors(j)) : E(Object(j)).forEach(function(z) {
        Object.defineProperty(x, z, Object.getOwnPropertyDescriptor(j, z));
      });
    }
    return x;
  }
  function k(x, L, j) {
    return (L = q(L)) in x ? Object.defineProperty(x, L, { value: j, enumerable: true, configurable: true, writable: true }) : x[L] = j, x;
  }
  function w(x, L) {
    if (!(x instanceof L)) throw new TypeError("Cannot call a class as a function");
  }
  function F(x, L) {
    for (var j = 0; j < L.length; j++) {
      var z = L[j];
      z.enumerable = z.enumerable || false, z.configurable = true, "value" in z && (z.writable = true), Object.defineProperty(x, q(z.key), z);
    }
  }
  function I(x, L, j) {
    return L && F(x.prototype, L), j && F(x, j), Object.defineProperty(x, "prototype", { writable: false }), x;
  }
  function q(x) {
    var L = N(x, "string");
    return m(L) == "symbol" ? L : L + "";
  }
  function N(x, L) {
    if (m(x) != "object" || !x) return x;
    var j = x[Symbol.toPrimitive];
    if (j !== void 0) {
      var z = j.call(x, L);
      if (m(z) != "object") return z;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return String(x);
  }
  var H = Zi.BASE_FEE = "100";
  Zi.TimeoutInfinite = 0, Zi.TransactionBuilder = function() {
    function x(L) {
      var j = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      if (w(this, x), !L) throw new Error("must specify source account for the transaction");
      if (j.fee === void 0) throw new Error("must specify fee for the transaction (in stroops)");
      this.source = L, this.operations = [], this.baseFee = j.fee, this.timebounds = j.timebounds ? R({}, j.timebounds) : null, this.ledgerbounds = j.ledgerbounds ? R({}, j.ledgerbounds) : null, this.minAccountSequence = j.minAccountSequence || null, this.minAccountSequenceAge = j.minAccountSequenceAge || null, this.minAccountSequenceLedgerGap = j.minAccountSequenceLedgerGap || null, this.extraSigners = j.extraSigners ? g(j.extraSigners) : null, this.memo = j.memo || f.Memo.none(), this.networkPassphrase = j.networkPassphrase || null, this.sorobanData = j.sorobanData ? new s.SorobanDataBuilder(j.sorobanData).build() : null;
    }
    return I(x, [{ key: "addOperation", value: function(j) {
      return this.operations.push(j), this;
    } }, { key: "addOperationAt", value: function(j, z) {
      return this.operations.splice(z, 0, j), this;
    } }, { key: "clearOperations", value: function() {
      return this.operations = [], this;
    } }, { key: "clearOperationAt", value: function(j) {
      return this.operations.splice(j, 1), this;
    } }, { key: "addMemo", value: function(j) {
      return this.memo = j, this;
    } }, { key: "setTimeout", value: function(j) {
      if (this.timebounds !== null && this.timebounds.maxTime > 0) throw new Error("TimeBounds.max_time has been already set - setting timeout would overwrite it.");
      if (j < 0) throw new Error("timeout cannot be negative");
      if (j > 0) {
        var z = Math.floor(Date.now() / 1e3) + j;
        this.timebounds === null ? this.timebounds = { minTime: 0, maxTime: z } : this.timebounds = { minTime: this.timebounds.minTime, maxTime: z };
      } else this.timebounds = { minTime: 0, maxTime: 0 };
      return this;
    } }, { key: "setTimebounds", value: function(j, z) {
      if (typeof j == "number" && (j = new Date(j * 1e3)), typeof z == "number" && (z = new Date(z * 1e3)), this.timebounds !== null) throw new Error("TimeBounds has been already set - setting timebounds would overwrite it.");
      var Z = Math.floor(j.valueOf() / 1e3), ue = Math.floor(z.valueOf() / 1e3);
      if (Z < 0) throw new Error("min_time cannot be negative");
      if (ue < 0) throw new Error("max_time cannot be negative");
      if (ue > 0 && Z > ue) throw new Error("min_time cannot be greater than max_time");
      return this.timebounds = { minTime: Z, maxTime: ue }, this;
    } }, { key: "setLedgerbounds", value: function(j, z) {
      if (this.ledgerbounds !== null) throw new Error("LedgerBounds has been already set - setting ledgerbounds would overwrite it.");
      if (j < 0) throw new Error("min_ledger cannot be negative");
      if (z < 0) throw new Error("max_ledger cannot be negative");
      if (z > 0 && j > z) throw new Error("min_ledger cannot be greater than max_ledger");
      return this.ledgerbounds = { minLedger: j, maxLedger: z }, this;
    } }, { key: "setMinAccountSequence", value: function(j) {
      if (this.minAccountSequence !== null) throw new Error("min_account_sequence has been already set - setting min_account_sequence would overwrite it.");
      return this.minAccountSequence = j, this;
    } }, { key: "setMinAccountSequenceAge", value: function(j) {
      if (typeof j != "number") throw new Error("min_account_sequence_age must be a number");
      if (this.minAccountSequenceAge !== null) throw new Error("min_account_sequence_age has been already set - setting min_account_sequence_age would overwrite it.");
      if (j < 0) throw new Error("min_account_sequence_age cannot be negative");
      return this.minAccountSequenceAge = j, this;
    } }, { key: "setMinAccountSequenceLedgerGap", value: function(j) {
      if (this.minAccountSequenceLedgerGap !== null) throw new Error("min_account_sequence_ledger_gap has been already set - setting min_account_sequence_ledger_gap would overwrite it.");
      if (j < 0) throw new Error("min_account_sequence_ledger_gap cannot be negative");
      return this.minAccountSequenceLedgerGap = j, this;
    } }, { key: "setExtraSigners", value: function(j) {
      if (!Array.isArray(j)) throw new Error("extra_signers must be an array of strings.");
      if (this.extraSigners !== null) throw new Error("extra_signers has been already set - setting extra_signers would overwrite it.");
      if (j.length > 2) throw new Error("extra_signers cannot be longer than 2 elements.");
      return this.extraSigners = g(j), this;
    } }, { key: "setNetworkPassphrase", value: function(j) {
      return this.networkPassphrase = j, this;
    } }, { key: "setSorobanData", value: function(j) {
      return this.sorobanData = new s.SorobanDataBuilder(j).build(), this;
    } }, { key: "build", value: function() {
      var j = new e.default(this.source.sequenceNumber()).plus(1), z = new e.default(this.baseFee).times(this.operations.length).toNumber(), Z = { fee: z, seqNum: n.default.SequenceNumber.fromString(j.toString()), memo: this.memo ? this.memo.toXDRObject() : null };
      if (this.timebounds === null || typeof this.timebounds.minTime > "u" || typeof this.timebounds.maxTime > "u") throw new Error("TimeBounds has to be set or you must call setTimeout(TimeoutInfinite).");
      _(this.timebounds.minTime) && (this.timebounds.minTime = this.timebounds.minTime.getTime() / 1e3), _(this.timebounds.maxTime) && (this.timebounds.maxTime = this.timebounds.maxTime.getTime() / 1e3), this.timebounds.minTime = v.UnsignedHyper.fromString(this.timebounds.minTime.toString()), this.timebounds.maxTime = v.UnsignedHyper.fromString(this.timebounds.maxTime.toString());
      var ue = new n.default.TimeBounds(this.timebounds);
      if (this.hasV2Preconditions()) {
        var $ = null;
        this.ledgerbounds !== null && ($ = new n.default.LedgerBounds(this.ledgerbounds));
        var X = this.minAccountSequence || "0";
        X = n.default.SequenceNumber.fromString(X);
        var J = v.UnsignedHyper.fromString(this.minAccountSequenceAge !== null ? this.minAccountSequenceAge.toString() : "0"), B = this.minAccountSequenceLedgerGap || 0, Q = this.extraSigners !== null ? this.extraSigners.map(h.SignerKey.decodeAddress) : [];
        Z.cond = n.default.Preconditions.precondV2(new n.default.PreconditionsV2({ timeBounds: ue, ledgerBounds: $, minSeqNum: X, minSeqAge: J, minSeqLedgerGap: B, extraSigners: Q }));
      } else Z.cond = n.default.Preconditions.precondTime(ue);
      Z.sourceAccount = (0, y.decodeAddressToMuxedAccount)(this.source.accountId()), this.sorobanData ? Z.ext = new n.default.TransactionExt(1, this.sorobanData) : Z.ext = new n.default.TransactionExt(0, n.default.Void);
      var ne = new n.default.Transaction(Z);
      ne.operations(this.operations);
      var K = new n.default.TransactionEnvelope.envelopeTypeTx(new n.default.TransactionV1Envelope({ tx: ne })), ie = new t.Transaction(K, this.networkPassphrase);
      return this.source.incrementSequenceNumber(), ie;
    } }, { key: "hasV2Preconditions", value: function() {
      return this.ledgerbounds !== null || this.minAccountSequence !== null || this.minAccountSequenceAge !== null || this.minAccountSequenceLedgerGap !== null || this.extraSigners !== null && this.extraSigners.length > 0;
    } }], [{ key: "cloneFrom", value: function(j) {
      var z = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      if (!(j instanceof t.Transaction)) throw new TypeError("expected a 'Transaction', got: ".concat(j));
      var Z = (BigInt(j.sequence) - 1n).toString(), ue;
      if (c.StrKey.isValidMed25519PublicKey(j.source)) ue = u.MuxedAccount.fromAddress(j.source, Z);
      else if (c.StrKey.isValidEd25519PublicKey(j.source)) ue = new i.Account(j.source, Z);
      else throw new TypeError("unsupported tx source account: ".concat(j.source));
      var $ = parseInt(j.fee, 10) / j.operations.length, X = new x(ue, R({ fee: ($ || H).toString(), memo: j.memo, networkPassphrase: j.networkPassphrase, timebounds: j.timeBounds, ledgerbounds: j.ledgerBounds, minAccountSequence: j.minAccountSequence, minAccountSequenceAge: j.minAccountSequenceAge, minAccountSequenceLedgerGap: j.minAccountSequenceLedgerGap, extraSigners: j.extraSigners }, z));
      return j._tx.operations().forEach(function(J) {
        return X.addOperation(J);
      }), X;
    } }, { key: "buildFeeBumpTransaction", value: function(j, z, Z, ue) {
      var $ = Z.operations.length, X = new e.default(Z.fee).div($), J = new e.default(z);
      if (J.lt(X)) throw new Error("Invalid baseFee, it should be at least ".concat(X, " stroops."));
      var B = new e.default(H);
      if (J.lt(B)) throw new Error("Invalid baseFee, it should be at least ".concat(B, " stroops."));
      var Q = Z.toEnvelope();
      if (Q.switch() === n.default.EnvelopeType.envelopeTypeTxV0()) {
        var ne = Q.v0().tx(), K = new n.default.Transaction({ sourceAccount: new n.default.MuxedAccount.keyTypeEd25519(ne.sourceAccountEd25519()), fee: ne.fee(), seqNum: ne.seqNum(), cond: n.default.Preconditions.precondTime(ne.timeBounds()), memo: ne.memo(), operations: ne.operations(), ext: new n.default.TransactionExt(0) });
        Q = new n.default.TransactionEnvelope.envelopeTypeTx(new n.default.TransactionV1Envelope({ tx: K, signatures: Q.v0().signatures() }));
      }
      var ie;
      typeof j == "string" ? ie = (0, y.decodeAddressToMuxedAccount)(j) : ie = j.xdrMuxedAccount();
      var ce = new n.default.FeeBumpTransaction({ feeSource: ie, fee: n.default.Int64.fromString(J.times($ + 1).toString()), innerTx: n.default.FeeBumpTransactionInnerTx.envelopeTypeTx(Q.v1()), ext: new n.default.FeeBumpTransactionExt(0) }), ye = new n.default.FeeBumpTransactionEnvelope({ tx: ce, signatures: [] }), oe = new n.default.TransactionEnvelope.envelopeTypeTxFeeBump(ye);
      return new o.FeeBumpTransaction(oe, ue);
    } }, { key: "fromXDR", value: function(j, z) {
      return typeof j == "string" && (j = n.default.TransactionEnvelope.fromXDR(j, "base64")), j.switch() === n.default.EnvelopeType.envelopeTypeTxFeeBump() ? new o.FeeBumpTransaction(j, z) : new t.Transaction(j, z);
    } }]);
  }();
  function _(x) {
    return x instanceof Date && !isNaN(x);
  }
  return Zi;
}
var rs = {}, $p;
function um() {
  return $p || ($p = 1, Object.defineProperty(rs, "__esModule", { value: true }), rs.Networks = void 0, rs.Networks = { PUBLIC: "Public Global Stellar Network ; September 2015", TESTNET: "Test SDF Network ; September 2015", FUTURENET: "Test SDF Future Network ; October 2022", SANDBOX: "Local Sandbox Stellar Network ; September 2022", STANDALONE: "Standalone Network ; February 2017" }), rs;
}
var ns = {}, Yp;
function pg() {
  if (Yp) return ns;
  Yp = 1, Object.defineProperty(ns, "__esModule", { value: true }), ns.Soroban = void 0;
  function v(r) {
    "@babel/helpers - typeof";
    return v = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(m) {
      return typeof m;
    } : function(m) {
      return m && typeof Symbol == "function" && m.constructor === Symbol && m !== Symbol.prototype ? "symbol" : typeof m;
    }, v(r);
  }
  function e(r) {
    return t(r) || y(r) || i(r) || n();
  }
  function n() {
    throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
  }
  function i(r, m) {
    if (r) {
      if (typeof r == "string") return u(r, m);
      var g = {}.toString.call(r).slice(8, -1);
      return g === "Object" && r.constructor && (g = r.constructor.name), g === "Map" || g === "Set" ? Array.from(r) : g === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(g) ? u(r, m) : void 0;
    }
  }
  function u(r, m) {
    (m == null || m > r.length) && (m = r.length);
    for (var g = 0, a = Array(m); g < m; g++) a[g] = r[g];
    return a;
  }
  function y(r) {
    if (typeof Symbol < "u" && r[Symbol.iterator] != null || r["@@iterator"] != null) return Array.from(r);
  }
  function t(r) {
    if (Array.isArray(r)) return r;
  }
  function o(r, m) {
    if (!(r instanceof m)) throw new TypeError("Cannot call a class as a function");
  }
  function s(r, m) {
    for (var g = 0; g < m.length; g++) {
      var a = m[g];
      a.enumerable = a.enumerable || false, a.configurable = true, "value" in a && (a.writable = true), Object.defineProperty(r, h(a.key), a);
    }
  }
  function c(r, m, g) {
    return g && s(r, g), Object.defineProperty(r, "prototype", { writable: false }), r;
  }
  function h(r) {
    var m = f(r, "string");
    return v(m) == "symbol" ? m : m + "";
  }
  function f(r, m) {
    if (v(r) != "object" || !r) return r;
    var g = r[Symbol.toPrimitive];
    if (g !== void 0) {
      var a = g.call(r, m);
      if (v(a) != "object") return a;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return String(r);
  }
  return ns.Soroban = function() {
    function r() {
      o(this, r);
    }
    return c(r, null, [{ key: "formatTokenAmount", value: function(g, a) {
      if (g.includes(".")) throw new TypeError("No decimals are allowed");
      var l = g;
      return a > 0 && (a > l.length ? l = ["0", l.toString().padStart(a, "0")].join(".") : l = [l.slice(0, -a), l.slice(-a)].join(".")), l.replace(/(\.\d*?)0+$/, "$1");
    } }, { key: "parseTokenAmount", value: function(g, a) {
      var l, d = g.split(".").slice(), b = e(d), S = b[0], E = b[1], R = b.slice(2);
      if (R.length) throw new Error("Invalid decimal value: ".concat(g));
      var k = BigInt(S + ((l = E == null ? void 0 : E.padEnd(a, "0")) !== null && l !== void 0 ? l : "0".repeat(a)));
      return k.toString();
    } }]);
  }(), ns;
}
var is = {}, Qp;
function cm() {
  if (Qp) return is;
  Qp = 1, Object.defineProperty(is, "__esModule", { value: true }), is.Contract = void 0;
  var v = La(), e = Zl(), n = u(bn()), i = ni();
  function u(f) {
    return f && f.__esModule ? f : { default: f };
  }
  function y(f) {
    "@babel/helpers - typeof";
    return y = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(r) {
      return typeof r;
    } : function(r) {
      return r && typeof Symbol == "function" && r.constructor === Symbol && r !== Symbol.prototype ? "symbol" : typeof r;
    }, y(f);
  }
  function t(f, r) {
    if (!(f instanceof r)) throw new TypeError("Cannot call a class as a function");
  }
  function o(f, r) {
    for (var m = 0; m < r.length; m++) {
      var g = r[m];
      g.enumerable = g.enumerable || false, g.configurable = true, "value" in g && (g.writable = true), Object.defineProperty(f, c(g.key), g);
    }
  }
  function s(f, r, m) {
    return r && o(f.prototype, r), Object.defineProperty(f, "prototype", { writable: false }), f;
  }
  function c(f) {
    var r = h(f, "string");
    return y(r) == "symbol" ? r : r + "";
  }
  function h(f, r) {
    if (y(f) != "object" || !f) return f;
    var m = f[Symbol.toPrimitive];
    if (m !== void 0) {
      var g = m.call(f, r);
      if (y(g) != "object") return g;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return String(f);
  }
  return is.Contract = function() {
    function f(r) {
      t(this, f);
      try {
        this._id = i.StrKey.decodeContract(r);
      } catch {
        throw new Error("Invalid contract ID: ".concat(r));
      }
    }
    return s(f, [{ key: "contractId", value: function() {
      return i.StrKey.encodeContract(this._id);
    } }, { key: "toString", value: function() {
      return this.contractId();
    } }, { key: "address", value: function() {
      return v.Address.contract(this._id);
    } }, { key: "call", value: function(m) {
      for (var g = arguments.length, a = new Array(g > 1 ? g - 1 : 0), l = 1; l < g; l++) a[l - 1] = arguments[l];
      return e.Operation.invokeContractFunction({ contract: this.address().toString(), function: m, args: a });
    } }, { key: "getFootprint", value: function() {
      return n.default.LedgerKey.contractData(new n.default.LedgerKeyContractData({ contract: this.address().toScAddress(), key: n.default.ScVal.scvLedgerKeyContractInstance(), durability: n.default.ContractDataDurability.persistent() }));
    } }]);
  }(), is;
}
var $c = {}, os = {}, as = {}, Zp;
function lm() {
  if (Zp) return as;
  Zp = 1;
  function v(a) {
    "@babel/helpers - typeof";
    return v = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(l) {
      return typeof l;
    } : function(l) {
      return l && typeof Symbol == "function" && l.constructor === Symbol && l !== Symbol.prototype ? "symbol" : typeof l;
    }, v(a);
  }
  Object.defineProperty(as, "__esModule", { value: true }), as.Uint128 = void 0;
  var e = Ei();
  function n(a, l) {
    if (!(a instanceof l)) throw new TypeError("Cannot call a class as a function");
  }
  function i(a, l) {
    for (var d = 0; d < l.length; d++) {
      var b = l[d];
      b.enumerable = b.enumerable || false, b.configurable = true, "value" in b && (b.writable = true), Object.defineProperty(a, y(b.key), b);
    }
  }
  function u(a, l, d) {
    return l && i(a.prototype, l), Object.defineProperty(a, "prototype", { writable: false }), a;
  }
  function y(a) {
    var l = t(a, "string");
    return v(l) == "symbol" ? l : l + "";
  }
  function t(a, l) {
    if (v(a) != "object" || !a) return a;
    var d = a[Symbol.toPrimitive];
    if (d !== void 0) {
      var b = d.call(a, l);
      if (v(b) != "object") return b;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return String(a);
  }
  function o(a, l, d) {
    return l = f(l), s(a, h() ? Reflect.construct(l, d || [], f(a).constructor) : l.apply(a, d));
  }
  function s(a, l) {
    if (l && (v(l) == "object" || typeof l == "function")) return l;
    if (l !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
    return c(a);
  }
  function c(a) {
    if (a === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return a;
  }
  function h() {
    try {
      var a = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
      }));
    } catch {
    }
    return (h = function() {
      return !!a;
    })();
  }
  function f(a) {
    return f = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(l) {
      return l.__proto__ || Object.getPrototypeOf(l);
    }, f(a);
  }
  function r(a, l) {
    if (typeof l != "function" && l !== null) throw new TypeError("Super expression must either be null or a function");
    a.prototype = Object.create(l && l.prototype, { constructor: { value: a, writable: true, configurable: true } }), Object.defineProperty(a, "prototype", { writable: false }), l && m(a, l);
  }
  function m(a, l) {
    return m = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(d, b) {
      return d.__proto__ = b, d;
    }, m(a, l);
  }
  var g = as.Uint128 = function(a) {
    function l() {
      n(this, l);
      for (var d = arguments.length, b = new Array(d), S = 0; S < d; S++) b[S] = arguments[S];
      return o(this, l, [b]);
    }
    return r(l, a), u(l, [{ key: "unsigned", get: function() {
      return true;
    } }, { key: "size", get: function() {
      return 128;
    } }]);
  }(e.LargeInt);
  return g.defineIntBoundaries(), as;
}
var ss = {}, Jp;
function fm() {
  if (Jp) return ss;
  Jp = 1;
  function v(a) {
    "@babel/helpers - typeof";
    return v = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(l) {
      return typeof l;
    } : function(l) {
      return l && typeof Symbol == "function" && l.constructor === Symbol && l !== Symbol.prototype ? "symbol" : typeof l;
    }, v(a);
  }
  Object.defineProperty(ss, "__esModule", { value: true }), ss.Uint256 = void 0;
  var e = Ei();
  function n(a, l) {
    if (!(a instanceof l)) throw new TypeError("Cannot call a class as a function");
  }
  function i(a, l) {
    for (var d = 0; d < l.length; d++) {
      var b = l[d];
      b.enumerable = b.enumerable || false, b.configurable = true, "value" in b && (b.writable = true), Object.defineProperty(a, y(b.key), b);
    }
  }
  function u(a, l, d) {
    return l && i(a.prototype, l), Object.defineProperty(a, "prototype", { writable: false }), a;
  }
  function y(a) {
    var l = t(a, "string");
    return v(l) == "symbol" ? l : l + "";
  }
  function t(a, l) {
    if (v(a) != "object" || !a) return a;
    var d = a[Symbol.toPrimitive];
    if (d !== void 0) {
      var b = d.call(a, l);
      if (v(b) != "object") return b;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return String(a);
  }
  function o(a, l, d) {
    return l = f(l), s(a, h() ? Reflect.construct(l, d || [], f(a).constructor) : l.apply(a, d));
  }
  function s(a, l) {
    if (l && (v(l) == "object" || typeof l == "function")) return l;
    if (l !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
    return c(a);
  }
  function c(a) {
    if (a === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return a;
  }
  function h() {
    try {
      var a = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
      }));
    } catch {
    }
    return (h = function() {
      return !!a;
    })();
  }
  function f(a) {
    return f = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(l) {
      return l.__proto__ || Object.getPrototypeOf(l);
    }, f(a);
  }
  function r(a, l) {
    if (typeof l != "function" && l !== null) throw new TypeError("Super expression must either be null or a function");
    a.prototype = Object.create(l && l.prototype, { constructor: { value: a, writable: true, configurable: true } }), Object.defineProperty(a, "prototype", { writable: false }), l && m(a, l);
  }
  function m(a, l) {
    return m = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(d, b) {
      return d.__proto__ = b, d;
    }, m(a, l);
  }
  var g = ss.Uint256 = function(a) {
    function l() {
      n(this, l);
      for (var d = arguments.length, b = new Array(d), S = 0; S < d; S++) b[S] = arguments[S];
      return o(this, l, [b]);
    }
    return r(l, a), u(l, [{ key: "unsigned", get: function() {
      return true;
    } }, { key: "size", get: function() {
      return 256;
    } }]);
  }(e.LargeInt);
  return g.defineIntBoundaries(), ss;
}
var us = {}, eh;
function pm() {
  if (eh) return us;
  eh = 1;
  function v(a) {
    "@babel/helpers - typeof";
    return v = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(l) {
      return typeof l;
    } : function(l) {
      return l && typeof Symbol == "function" && l.constructor === Symbol && l !== Symbol.prototype ? "symbol" : typeof l;
    }, v(a);
  }
  Object.defineProperty(us, "__esModule", { value: true }), us.Int128 = void 0;
  var e = Ei();
  function n(a, l) {
    if (!(a instanceof l)) throw new TypeError("Cannot call a class as a function");
  }
  function i(a, l) {
    for (var d = 0; d < l.length; d++) {
      var b = l[d];
      b.enumerable = b.enumerable || false, b.configurable = true, "value" in b && (b.writable = true), Object.defineProperty(a, y(b.key), b);
    }
  }
  function u(a, l, d) {
    return l && i(a.prototype, l), Object.defineProperty(a, "prototype", { writable: false }), a;
  }
  function y(a) {
    var l = t(a, "string");
    return v(l) == "symbol" ? l : l + "";
  }
  function t(a, l) {
    if (v(a) != "object" || !a) return a;
    var d = a[Symbol.toPrimitive];
    if (d !== void 0) {
      var b = d.call(a, l);
      if (v(b) != "object") return b;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return String(a);
  }
  function o(a, l, d) {
    return l = f(l), s(a, h() ? Reflect.construct(l, d || [], f(a).constructor) : l.apply(a, d));
  }
  function s(a, l) {
    if (l && (v(l) == "object" || typeof l == "function")) return l;
    if (l !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
    return c(a);
  }
  function c(a) {
    if (a === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return a;
  }
  function h() {
    try {
      var a = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
      }));
    } catch {
    }
    return (h = function() {
      return !!a;
    })();
  }
  function f(a) {
    return f = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(l) {
      return l.__proto__ || Object.getPrototypeOf(l);
    }, f(a);
  }
  function r(a, l) {
    if (typeof l != "function" && l !== null) throw new TypeError("Super expression must either be null or a function");
    a.prototype = Object.create(l && l.prototype, { constructor: { value: a, writable: true, configurable: true } }), Object.defineProperty(a, "prototype", { writable: false }), l && m(a, l);
  }
  function m(a, l) {
    return m = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(d, b) {
      return d.__proto__ = b, d;
    }, m(a, l);
  }
  var g = us.Int128 = function(a) {
    function l() {
      n(this, l);
      for (var d = arguments.length, b = new Array(d), S = 0; S < d; S++) b[S] = arguments[S];
      return o(this, l, [b]);
    }
    return r(l, a), u(l, [{ key: "unsigned", get: function() {
      return false;
    } }, { key: "size", get: function() {
      return 128;
    } }]);
  }(e.LargeInt);
  return g.defineIntBoundaries(), us;
}
var cs = {}, th;
function hm() {
  if (th) return cs;
  th = 1;
  function v(a) {
    "@babel/helpers - typeof";
    return v = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(l) {
      return typeof l;
    } : function(l) {
      return l && typeof Symbol == "function" && l.constructor === Symbol && l !== Symbol.prototype ? "symbol" : typeof l;
    }, v(a);
  }
  Object.defineProperty(cs, "__esModule", { value: true }), cs.Int256 = void 0;
  var e = Ei();
  function n(a, l) {
    if (!(a instanceof l)) throw new TypeError("Cannot call a class as a function");
  }
  function i(a, l) {
    for (var d = 0; d < l.length; d++) {
      var b = l[d];
      b.enumerable = b.enumerable || false, b.configurable = true, "value" in b && (b.writable = true), Object.defineProperty(a, y(b.key), b);
    }
  }
  function u(a, l, d) {
    return l && i(a.prototype, l), Object.defineProperty(a, "prototype", { writable: false }), a;
  }
  function y(a) {
    var l = t(a, "string");
    return v(l) == "symbol" ? l : l + "";
  }
  function t(a, l) {
    if (v(a) != "object" || !a) return a;
    var d = a[Symbol.toPrimitive];
    if (d !== void 0) {
      var b = d.call(a, l);
      if (v(b) != "object") return b;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return String(a);
  }
  function o(a, l, d) {
    return l = f(l), s(a, h() ? Reflect.construct(l, d || [], f(a).constructor) : l.apply(a, d));
  }
  function s(a, l) {
    if (l && (v(l) == "object" || typeof l == "function")) return l;
    if (l !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
    return c(a);
  }
  function c(a) {
    if (a === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return a;
  }
  function h() {
    try {
      var a = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
      }));
    } catch {
    }
    return (h = function() {
      return !!a;
    })();
  }
  function f(a) {
    return f = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(l) {
      return l.__proto__ || Object.getPrototypeOf(l);
    }, f(a);
  }
  function r(a, l) {
    if (typeof l != "function" && l !== null) throw new TypeError("Super expression must either be null or a function");
    a.prototype = Object.create(l && l.prototype, { constructor: { value: a, writable: true, configurable: true } }), Object.defineProperty(a, "prototype", { writable: false }), l && m(a, l);
  }
  function m(a, l) {
    return m = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(d, b) {
      return d.__proto__ = b, d;
    }, m(a, l);
  }
  var g = cs.Int256 = function(a) {
    function l() {
      n(this, l);
      for (var d = arguments.length, b = new Array(d), S = 0; S < d; S++) b[S] = arguments[S];
      return o(this, l, [b]);
    }
    return r(l, a), u(l, [{ key: "unsigned", get: function() {
      return false;
    } }, { key: "size", get: function() {
      return 256;
    } }]);
  }(e.LargeInt);
  return g.defineIntBoundaries(), cs;
}
var rh;
function dm() {
  if (rh) return os;
  rh = 1, Object.defineProperty(os, "__esModule", { value: true }), os.XdrLargeInt = void 0;
  var v = Ei(), e = lm(), n = fm(), i = pm(), u = hm(), y = t(bn());
  function t(g) {
    return g && g.__esModule ? g : { default: g };
  }
  function o(g) {
    "@babel/helpers - typeof";
    return o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(a) {
      return typeof a;
    } : function(a) {
      return a && typeof Symbol == "function" && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a;
    }, o(g);
  }
  function s(g, a) {
    if (!(g instanceof a)) throw new TypeError("Cannot call a class as a function");
  }
  function c(g, a) {
    for (var l = 0; l < a.length; l++) {
      var d = a[l];
      d.enumerable = d.enumerable || false, d.configurable = true, "value" in d && (d.writable = true), Object.defineProperty(g, r(d.key), d);
    }
  }
  function h(g, a, l) {
    return a && c(g.prototype, a), l && c(g, l), Object.defineProperty(g, "prototype", { writable: false }), g;
  }
  function f(g, a, l) {
    return (a = r(a)) in g ? Object.defineProperty(g, a, { value: l, enumerable: true, configurable: true, writable: true }) : g[a] = l, g;
  }
  function r(g) {
    var a = m(g, "string");
    return o(a) == "symbol" ? a : a + "";
  }
  function m(g, a) {
    if (o(g) != "object" || !g) return g;
    var l = g[Symbol.toPrimitive];
    if (l !== void 0) {
      var d = l.call(g, a);
      if (o(d) != "object") return d;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return String(g);
  }
  return os.XdrLargeInt = function() {
    function g(a, l) {
      switch (s(this, g), f(this, "int", void 0), f(this, "type", void 0), l instanceof Array || (l = [l]), l = l.map(function(d) {
        return typeof d == "bigint" ? d : d instanceof g ? d.toBigInt() : BigInt(d);
      }), a) {
        case "i64":
          this.int = new v.Hyper(l);
          break;
        case "i128":
          this.int = new i.Int128(l);
          break;
        case "i256":
          this.int = new u.Int256(l);
          break;
        case "u64":
          this.int = new v.UnsignedHyper(l);
          break;
        case "u128":
          this.int = new e.Uint128(l);
          break;
        case "u256":
          this.int = new n.Uint256(l);
          break;
        default:
          throw TypeError("invalid type: ".concat(a));
      }
      this.type = a;
    }
    return h(g, [{ key: "toNumber", value: function() {
      var l = this.int.toBigInt();
      if (l > Number.MAX_SAFE_INTEGER || l < Number.MIN_SAFE_INTEGER) throw RangeError("value ".concat(l, " not in range for Number ") + "[".concat(Number.MAX_SAFE_INTEGER, ", ").concat(Number.MIN_SAFE_INTEGER, "]"));
      return Number(l);
    } }, { key: "toBigInt", value: function() {
      return this.int.toBigInt();
    } }, { key: "toI64", value: function() {
      this._sizeCheck(64);
      var l = this.toBigInt();
      if (BigInt.asIntN(64, l) !== l) throw RangeError("value too large for i64: ".concat(l));
      return y.default.ScVal.scvI64(new y.default.Int64(l));
    } }, { key: "toU64", value: function() {
      return this._sizeCheck(64), y.default.ScVal.scvU64(new y.default.Uint64(BigInt.asUintN(64, this.toBigInt())));
    } }, { key: "toI128", value: function() {
      this._sizeCheck(128);
      var l = this.int.toBigInt(), d = BigInt.asIntN(64, l >> 64n), b = BigInt.asUintN(64, l);
      return y.default.ScVal.scvI128(new y.default.Int128Parts({ hi: new y.default.Int64(d), lo: new y.default.Uint64(b) }));
    } }, { key: "toU128", value: function() {
      this._sizeCheck(128);
      var l = this.int.toBigInt();
      return y.default.ScVal.scvU128(new y.default.UInt128Parts({ hi: new y.default.Uint64(BigInt.asUintN(64, l >> 64n)), lo: new y.default.Uint64(BigInt.asUintN(64, l)) }));
    } }, { key: "toI256", value: function() {
      var l = this.int.toBigInt(), d = BigInt.asIntN(64, l >> 192n), b = BigInt.asUintN(64, l >> 128n), S = BigInt.asUintN(64, l >> 64n), E = BigInt.asUintN(64, l);
      return y.default.ScVal.scvI256(new y.default.Int256Parts({ hiHi: new y.default.Int64(d), hiLo: new y.default.Uint64(b), loHi: new y.default.Uint64(S), loLo: new y.default.Uint64(E) }));
    } }, { key: "toU256", value: function() {
      var l = this.int.toBigInt(), d = BigInt.asUintN(64, l >> 192n), b = BigInt.asUintN(64, l >> 128n), S = BigInt.asUintN(64, l >> 64n), E = BigInt.asUintN(64, l);
      return y.default.ScVal.scvU256(new y.default.UInt256Parts({ hiHi: new y.default.Uint64(d), hiLo: new y.default.Uint64(b), loHi: new y.default.Uint64(S), loLo: new y.default.Uint64(E) }));
    } }, { key: "toScVal", value: function() {
      switch (this.type) {
        case "i64":
          return this.toI64();
        case "i128":
          return this.toI128();
        case "i256":
          return this.toI256();
        case "u64":
          return this.toU64();
        case "u128":
          return this.toU128();
        case "u256":
          return this.toU256();
        default:
          throw TypeError("invalid type: ".concat(this.type));
      }
    } }, { key: "valueOf", value: function() {
      return this.int.valueOf();
    } }, { key: "toString", value: function() {
      return this.int.toString();
    } }, { key: "toJSON", value: function() {
      return { value: this.toBigInt().toString(), type: this.type };
    } }, { key: "_sizeCheck", value: function(l) {
      if (this.int.size > l) throw RangeError("value too large for ".concat(l, " bits (").concat(this.type, ")"));
    } }], [{ key: "isType", value: function(l) {
      switch (l) {
        case "i64":
        case "i128":
        case "i256":
        case "u64":
        case "u128":
        case "u256":
          return true;
        default:
          return false;
      }
    } }, { key: "getType", value: function(l) {
      return l.slice(3).toLowerCase();
    } }]);
  }(), os;
}
var ls = {}, nh;
function hg() {
  if (nh) return ls;
  nh = 1;
  function v(r) {
    "@babel/helpers - typeof";
    return v = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(m) {
      return typeof m;
    } : function(m) {
      return m && typeof Symbol == "function" && m.constructor === Symbol && m !== Symbol.prototype ? "symbol" : typeof m;
    }, v(r);
  }
  Object.defineProperty(ls, "__esModule", { value: true }), ls.ScInt = void 0;
  var e = dm();
  function n(r, m, g) {
    return Object.defineProperty(r, "prototype", { writable: false }), r;
  }
  function i(r, m) {
    if (!(r instanceof m)) throw new TypeError("Cannot call a class as a function");
  }
  function u(r, m, g) {
    return m = s(m), y(r, o() ? Reflect.construct(m, g || [], s(r).constructor) : m.apply(r, g));
  }
  function y(r, m) {
    if (m && (v(m) == "object" || typeof m == "function")) return m;
    if (m !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
    return t(r);
  }
  function t(r) {
    if (r === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return r;
  }
  function o() {
    try {
      var r = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
      }));
    } catch {
    }
    return (o = function() {
      return !!r;
    })();
  }
  function s(r) {
    return s = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(m) {
      return m.__proto__ || Object.getPrototypeOf(m);
    }, s(r);
  }
  function c(r, m) {
    if (typeof m != "function" && m !== null) throw new TypeError("Super expression must either be null or a function");
    r.prototype = Object.create(m && m.prototype, { constructor: { value: r, writable: true, configurable: true } }), Object.defineProperty(r, "prototype", { writable: false }), m && h(r, m);
  }
  function h(r, m) {
    return h = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(g, a) {
      return g.__proto__ = a, g;
    }, h(r, m);
  }
  ls.ScInt = function(r) {
    function m(g, a) {
      var l;
      i(this, m);
      var d = g < 0, b = (l = a == null ? void 0 : a.type) !== null && l !== void 0 ? l : "";
      if (b.startsWith("u") && d) throw TypeError("specified type ".concat(a.type, " yet negative (").concat(g, ")"));
      if (b === "") {
        b = d ? "i" : "u";
        var S = f(g);
        switch (S) {
          case 64:
          case 128:
          case 256:
            b += S.toString();
            break;
          default:
            throw RangeError("expected 64/128/256 bits for input (".concat(g, "), got ").concat(S));
        }
      }
      return u(this, m, [b, g]);
    }
    return c(m, r), n(m);
  }(e.XdrLargeInt);
  function f(r) {
    var m, g = r.toString(2).length;
    return (m = [64, 128, 256].find(function(a) {
      return g <= a;
    })) !== null && m !== void 0 ? m : g;
  }
  return ls;
}
var ih;
function mm() {
  return ih || (ih = 1, function(v) {
    Object.defineProperty(v, "__esModule", { value: true }), Object.defineProperty(v, "Int128", { enumerable: true, get: function() {
      return u.Int128;
    } }), Object.defineProperty(v, "Int256", { enumerable: true, get: function() {
      return y.Int256;
    } }), Object.defineProperty(v, "ScInt", { enumerable: true, get: function() {
      return t.ScInt;
    } }), Object.defineProperty(v, "Uint128", { enumerable: true, get: function() {
      return n.Uint128;
    } }), Object.defineProperty(v, "Uint256", { enumerable: true, get: function() {
      return i.Uint256;
    } }), Object.defineProperty(v, "XdrLargeInt", { enumerable: true, get: function() {
      return e.XdrLargeInt;
    } }), v.scValToBigInt = o;
    var e = dm(), n = lm(), i = fm(), u = pm(), y = hm(), t = hg();
    function o(s) {
      var c = e.XdrLargeInt.getType(s.switch().name);
      switch (s.switch().name) {
        case "scvU32":
        case "scvI32":
          return BigInt(s.value());
        case "scvU64":
        case "scvI64":
          return new e.XdrLargeInt(c, s.value()).toBigInt();
        case "scvU128":
        case "scvI128":
          return new e.XdrLargeInt(c, [s.value().lo(), s.value().hi()]).toBigInt();
        case "scvU256":
        case "scvI256":
          return new e.XdrLargeInt(c, [s.value().loLo(), s.value().loHi(), s.value().hiLo(), s.value().hiHi()]).toBigInt();
        default:
          throw TypeError("expected integer type, got ".concat(s.switch()));
      }
    }
  }($c)), $c;
}
var fs = {}, oh;
function _c() {
  if (oh) return fs;
  oh = 1, Object.defineProperty(fs, "__esModule", { value: true }), fs.nativeToScVal = m, fs.scValToNative = g;
  var v = y(bn()), e = Ii(), n = La(), i = cm(), u = mm();
  function y(a) {
    return a && a.__esModule ? a : { default: a };
  }
  function t(a, l) {
    return f(a) || h(a, l) || s(a, l) || o();
  }
  function o() {
    throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
  }
  function s(a, l) {
    if (a) {
      if (typeof a == "string") return c(a, l);
      var d = {}.toString.call(a).slice(8, -1);
      return d === "Object" && a.constructor && (d = a.constructor.name), d === "Map" || d === "Set" ? Array.from(a) : d === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(d) ? c(a, l) : void 0;
    }
  }
  function c(a, l) {
    (l == null || l > a.length) && (l = a.length);
    for (var d = 0, b = Array(l); d < l; d++) b[d] = a[d];
    return b;
  }
  function h(a, l) {
    var d = a == null ? null : typeof Symbol < "u" && a[Symbol.iterator] || a["@@iterator"];
    if (d != null) {
      var b, S, E, R, k = [], w = true, F = false;
      try {
        if (E = (d = d.call(a)).next, l === 0) {
          if (Object(d) !== d) return;
          w = false;
        } else for (; !(w = (b = E.call(d)).done) && (k.push(b.value), k.length !== l); w = true) ;
      } catch (I) {
        F = true, S = I;
      } finally {
        try {
          if (!w && d.return != null && (R = d.return(), Object(R) !== R)) return;
        } finally {
          if (F) throw S;
        }
      }
      return k;
    }
  }
  function f(a) {
    if (Array.isArray(a)) return a;
  }
  function r(a) {
    "@babel/helpers - typeof";
    return r = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(l) {
      return typeof l;
    } : function(l) {
      return l && typeof Symbol == "function" && l.constructor === Symbol && l !== Symbol.prototype ? "symbol" : typeof l;
    }, r(a);
  }
  function m(a) {
    var l = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    switch (r(a)) {
      case "object": {
        var d, b;
        if (a === null) return v.default.ScVal.scvVoid();
        if (a instanceof v.default.ScVal) return a;
        if (a instanceof n.Address) return a.toScVal();
        if (a instanceof e.Keypair) return m(a.publicKey(), { type: "address" });
        if (a instanceof i.Contract) return a.address().toScVal();
        if (a instanceof Uint8Array || Buffer.isBuffer(a)) {
          var S, E = Uint8Array.from(a);
          switch ((S = l == null ? void 0 : l.type) !== null && S !== void 0 ? S : "bytes") {
            case "bytes":
              return v.default.ScVal.scvBytes(E);
            case "symbol":
              return v.default.ScVal.scvSymbol(E);
            case "string":
              return v.default.ScVal.scvString(E);
            default:
              throw new TypeError("invalid type (".concat(l.type, ") specified for bytes-like value"));
          }
        }
        if (Array.isArray(a)) return v.default.ScVal.scvVec(a.map(function(F) {
          return m(F, l);
        }));
        if (((d = (b = a.constructor) === null || b === void 0 ? void 0 : b.name) !== null && d !== void 0 ? d : "") !== "Object") {
          var R;
          throw new TypeError("cannot interpret ".concat((R = a.constructor) === null || R === void 0 ? void 0 : R.name, " value as ScVal (").concat(JSON.stringify(a), ")"));
        }
        return v.default.ScVal.scvMap(Object.entries(a).sort(function(F, I) {
          var q = t(F, 1), N = q[0], H = t(I, 1), _ = H[0];
          return N.localeCompare(_);
        }).map(function(F) {
          var I, q, N = t(F, 2), H = N[0], _ = N[1], x = (I = ((q = l == null ? void 0 : l.type) !== null && q !== void 0 ? q : {})[H]) !== null && I !== void 0 ? I : [null, null], L = t(x, 2), j = L[0], z = L[1], Z = j ? { type: j } : {}, ue = z ? { type: z } : {};
          return new v.default.ScMapEntry({ key: m(H, Z), val: m(_, ue) });
        }));
      }
      case "number":
      case "bigint":
        switch (l == null ? void 0 : l.type) {
          case "u32":
            return v.default.ScVal.scvU32(a);
          case "i32":
            return v.default.ScVal.scvI32(a);
        }
        return new u.ScInt(a, { type: l == null ? void 0 : l.type }).toScVal();
      case "string": {
        var k, w = (k = l == null ? void 0 : l.type) !== null && k !== void 0 ? k : "string";
        switch (w) {
          case "string":
            return v.default.ScVal.scvString(a);
          case "symbol":
            return v.default.ScVal.scvSymbol(a);
          case "address":
            return new n.Address(a).toScVal();
          case "u32":
            return v.default.ScVal.scvU32(parseInt(a, 10));
          case "i32":
            return v.default.ScVal.scvI32(parseInt(a, 10));
          default:
            if (u.XdrLargeInt.isType(w)) return new u.XdrLargeInt(w, a).toScVal();
            throw new TypeError("invalid type (".concat(l.type, ") specified for string value"));
        }
      }
      case "boolean":
        return v.default.ScVal.scvBool(a);
      case "undefined":
        return v.default.ScVal.scvVoid();
      case "function":
        return m(a());
      default:
        throw new TypeError("failed to convert typeof ".concat(r(a), " (").concat(a, ")"));
    }
  }
  function g(a) {
    var l, d;
    switch (a.switch().value) {
      case v.default.ScValType.scvVoid().value:
        return null;
      case v.default.ScValType.scvU64().value:
      case v.default.ScValType.scvI64().value:
        return a.value().toBigInt();
      case v.default.ScValType.scvU128().value:
      case v.default.ScValType.scvI128().value:
      case v.default.ScValType.scvU256().value:
      case v.default.ScValType.scvI256().value:
        return (0, u.scValToBigInt)(a);
      case v.default.ScValType.scvVec().value:
        return ((l = a.vec()) !== null && l !== void 0 ? l : []).map(g);
      case v.default.ScValType.scvAddress().value:
        return n.Address.fromScVal(a).toString();
      case v.default.ScValType.scvMap().value:
        return Object.fromEntries(((d = a.map()) !== null && d !== void 0 ? d : []).map(function(E) {
          return [g(E.key()), g(E.val())];
        }));
      case v.default.ScValType.scvBool().value:
      case v.default.ScValType.scvU32().value:
      case v.default.ScValType.scvI32().value:
      case v.default.ScValType.scvBytes().value:
        return a.value();
      case v.default.ScValType.scvSymbol().value:
      case v.default.ScValType.scvString().value: {
        var b = a.value();
        if (Buffer.isBuffer(b) || ArrayBuffer.isView(b)) try {
          return new TextDecoder().decode(b);
        } catch {
          return new Uint8Array(b.buffer);
        }
        return b;
      }
      case v.default.ScValType.scvTimepoint().value:
      case v.default.ScValType.scvDuration().value:
        return new v.default.Uint64(a.value()).toBigInt();
      case v.default.ScValType.scvError().value:
        switch (a.error().switch().value) {
          case v.default.ScErrorType.sceContract().value:
            return { type: "contract", code: a.error().contractCode() };
          default: {
            var S = a.error();
            return { type: "system", code: S.code().value, value: S.code().name };
          }
        }
      default:
        return a.value();
    }
  }
  return v.default.scvSortedMap = function(a) {
    var l = Array.from(a).sort(function(d, b) {
      var S = g(d.key()), E = g(b.key());
      switch (r(S)) {
        case "number":
        case "bigint":
          return S < E ? -1 : 1;
        default:
          return S.toString().localeCompare(E.toString());
      }
    });
    return v.default.ScVal.scvMap(l);
  }, fs;
}
var _u = {}, ah;
function dg() {
  if (ah) return _u;
  ah = 1, Object.defineProperty(_u, "__esModule", { value: true }), _u.humanizeEvents = s;
  var v = ni(), e = _c();
  function n(h) {
    "@babel/helpers - typeof";
    return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(f) {
      return typeof f;
    } : function(f) {
      return f && typeof Symbol == "function" && f.constructor === Symbol && f !== Symbol.prototype ? "symbol" : typeof f;
    }, n(h);
  }
  function i(h, f) {
    var r = Object.keys(h);
    if (Object.getOwnPropertySymbols) {
      var m = Object.getOwnPropertySymbols(h);
      f && (m = m.filter(function(g) {
        return Object.getOwnPropertyDescriptor(h, g).enumerable;
      })), r.push.apply(r, m);
    }
    return r;
  }
  function u(h) {
    for (var f = 1; f < arguments.length; f++) {
      var r = arguments[f] != null ? arguments[f] : {};
      f % 2 ? i(Object(r), true).forEach(function(m) {
        y(h, m, r[m]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(h, Object.getOwnPropertyDescriptors(r)) : i(Object(r)).forEach(function(m) {
        Object.defineProperty(h, m, Object.getOwnPropertyDescriptor(r, m));
      });
    }
    return h;
  }
  function y(h, f, r) {
    return (f = t(f)) in h ? Object.defineProperty(h, f, { value: r, enumerable: true, configurable: true, writable: true }) : h[f] = r, h;
  }
  function t(h) {
    var f = o(h, "string");
    return n(f) == "symbol" ? f : f + "";
  }
  function o(h, f) {
    if (n(h) != "object" || !h) return h;
    var r = h[Symbol.toPrimitive];
    if (r !== void 0) {
      var m = r.call(h, f);
      if (n(m) != "object") return m;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (f === "string" ? String : Number)(h);
  }
  function s(h) {
    return h.map(function(f) {
      return f.inSuccessfulContractCall ? c(f.event()) : c(f);
    });
  }
  function c(h) {
    return u(u({}, typeof h.contractId == "function" && h.contractId() != null && { contractId: v.StrKey.encodeContract(h.contractId()) }), {}, { type: h.type().name, topics: h.body().value().topics().map(function(f) {
      return (0, e.scValToNative)(f);
    }), data: (0, e.scValToNative)(h.body().value().data()) });
  }
  return _u;
}
var ps = {}, sh;
function mg() {
  if (sh) return ps;
  sh = 1, Object.defineProperty(ps, "__esModule", { value: true }), ps.authorizeEntry = r, ps.authorizeInvocation = g;
  var v = o(bn()), e = Ii(), n = ni(), i = um(), u = Fo(), y = La(), t = _c();
  function o(l) {
    return l && l.__esModule ? l : { default: l };
  }
  function s(l) {
    "@babel/helpers - typeof";
    return s = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(d) {
      return typeof d;
    } : function(d) {
      return d && typeof Symbol == "function" && d.constructor === Symbol && d !== Symbol.prototype ? "symbol" : typeof d;
    }, s(l);
  }
  function c() {
    /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
    c = function() {
      return d;
    };
    var l, d = {}, b = Object.prototype, S = b.hasOwnProperty, E = Object.defineProperty || function(re, ge, Te) {
      re[ge] = Te.value;
    }, R = typeof Symbol == "function" ? Symbol : {}, k = R.iterator || "@@iterator", w = R.asyncIterator || "@@asyncIterator", F = R.toStringTag || "@@toStringTag";
    function I(re, ge, Te) {
      return Object.defineProperty(re, ge, { value: Te, enumerable: true, configurable: true, writable: true }), re[ge];
    }
    try {
      I({}, "");
    } catch {
      I = function(Te, pe, Oe) {
        return Te[pe] = Oe;
      };
    }
    function q(re, ge, Te, pe) {
      var Oe = ge && ge.prototype instanceof z ? ge : z, xe = Object.create(Oe.prototype), Ve = new oe(pe || []);
      return E(xe, "_invoke", { value: K(re, Te, Ve) }), xe;
    }
    function N(re, ge, Te) {
      try {
        return { type: "normal", arg: re.call(ge, Te) };
      } catch (pe) {
        return { type: "throw", arg: pe };
      }
    }
    d.wrap = q;
    var H = "suspendedStart", _ = "suspendedYield", x = "executing", L = "completed", j = {};
    function z() {
    }
    function Z() {
    }
    function ue() {
    }
    var $ = {};
    I($, k, function() {
      return this;
    });
    var X = Object.getPrototypeOf, J = X && X(X(se([])));
    J && J !== b && S.call(J, k) && ($ = J);
    var B = ue.prototype = z.prototype = Object.create($);
    function Q(re) {
      ["next", "throw", "return"].forEach(function(ge) {
        I(re, ge, function(Te) {
          return this._invoke(ge, Te);
        });
      });
    }
    function ne(re, ge) {
      function Te(Oe, xe, Ve, _e) {
        var Be = N(re[Oe], re, xe);
        if (Be.type !== "throw") {
          var Qe = Be.arg, ee = Qe.value;
          return ee && s(ee) == "object" && S.call(ee, "__await") ? ge.resolve(ee.__await).then(function(P) {
            Te("next", P, Ve, _e);
          }, function(P) {
            Te("throw", P, Ve, _e);
          }) : ge.resolve(ee).then(function(P) {
            Qe.value = P, Ve(Qe);
          }, function(P) {
            return Te("throw", P, Ve, _e);
          });
        }
        _e(Be.arg);
      }
      var pe;
      E(this, "_invoke", { value: function(xe, Ve) {
        function _e() {
          return new ge(function(Be, Qe) {
            Te(xe, Ve, Be, Qe);
          });
        }
        return pe = pe ? pe.then(_e, _e) : _e();
      } });
    }
    function K(re, ge, Te) {
      var pe = H;
      return function(Oe, xe) {
        if (pe === x) throw Error("Generator is already running");
        if (pe === L) {
          if (Oe === "throw") throw xe;
          return { value: l, done: true };
        }
        for (Te.method = Oe, Te.arg = xe; ; ) {
          var Ve = Te.delegate;
          if (Ve) {
            var _e = ie(Ve, Te);
            if (_e) {
              if (_e === j) continue;
              return _e;
            }
          }
          if (Te.method === "next") Te.sent = Te._sent = Te.arg;
          else if (Te.method === "throw") {
            if (pe === H) throw pe = L, Te.arg;
            Te.dispatchException(Te.arg);
          } else Te.method === "return" && Te.abrupt("return", Te.arg);
          pe = x;
          var Be = N(re, ge, Te);
          if (Be.type === "normal") {
            if (pe = Te.done ? L : _, Be.arg === j) continue;
            return { value: Be.arg, done: Te.done };
          }
          Be.type === "throw" && (pe = L, Te.method = "throw", Te.arg = Be.arg);
        }
      };
    }
    function ie(re, ge) {
      var Te = ge.method, pe = re.iterator[Te];
      if (pe === l) return ge.delegate = null, Te === "throw" && re.iterator.return && (ge.method = "return", ge.arg = l, ie(re, ge), ge.method === "throw") || Te !== "return" && (ge.method = "throw", ge.arg = new TypeError("The iterator does not provide a '" + Te + "' method")), j;
      var Oe = N(pe, re.iterator, ge.arg);
      if (Oe.type === "throw") return ge.method = "throw", ge.arg = Oe.arg, ge.delegate = null, j;
      var xe = Oe.arg;
      return xe ? xe.done ? (ge[re.resultName] = xe.value, ge.next = re.nextLoc, ge.method !== "return" && (ge.method = "next", ge.arg = l), ge.delegate = null, j) : xe : (ge.method = "throw", ge.arg = new TypeError("iterator result is not an object"), ge.delegate = null, j);
    }
    function ce(re) {
      var ge = { tryLoc: re[0] };
      1 in re && (ge.catchLoc = re[1]), 2 in re && (ge.finallyLoc = re[2], ge.afterLoc = re[3]), this.tryEntries.push(ge);
    }
    function ye(re) {
      var ge = re.completion || {};
      ge.type = "normal", delete ge.arg, re.completion = ge;
    }
    function oe(re) {
      this.tryEntries = [{ tryLoc: "root" }], re.forEach(ce, this), this.reset(true);
    }
    function se(re) {
      if (re || re === "") {
        var ge = re[k];
        if (ge) return ge.call(re);
        if (typeof re.next == "function") return re;
        if (!isNaN(re.length)) {
          var Te = -1, pe = function Oe() {
            for (; ++Te < re.length; ) if (S.call(re, Te)) return Oe.value = re[Te], Oe.done = false, Oe;
            return Oe.value = l, Oe.done = true, Oe;
          };
          return pe.next = pe;
        }
      }
      throw new TypeError(s(re) + " is not iterable");
    }
    return Z.prototype = ue, E(B, "constructor", { value: ue, configurable: true }), E(ue, "constructor", { value: Z, configurable: true }), Z.displayName = I(ue, F, "GeneratorFunction"), d.isGeneratorFunction = function(re) {
      var ge = typeof re == "function" && re.constructor;
      return !!ge && (ge === Z || (ge.displayName || ge.name) === "GeneratorFunction");
    }, d.mark = function(re) {
      return Object.setPrototypeOf ? Object.setPrototypeOf(re, ue) : (re.__proto__ = ue, I(re, F, "GeneratorFunction")), re.prototype = Object.create(B), re;
    }, d.awrap = function(re) {
      return { __await: re };
    }, Q(ne.prototype), I(ne.prototype, w, function() {
      return this;
    }), d.AsyncIterator = ne, d.async = function(re, ge, Te, pe, Oe) {
      Oe === void 0 && (Oe = Promise);
      var xe = new ne(q(re, ge, Te, pe), Oe);
      return d.isGeneratorFunction(ge) ? xe : xe.next().then(function(Ve) {
        return Ve.done ? Ve.value : xe.next();
      });
    }, Q(B), I(B, F, "Generator"), I(B, k, function() {
      return this;
    }), I(B, "toString", function() {
      return "[object Generator]";
    }), d.keys = function(re) {
      var ge = Object(re), Te = [];
      for (var pe in ge) Te.push(pe);
      return Te.reverse(), function Oe() {
        for (; Te.length; ) {
          var xe = Te.pop();
          if (xe in ge) return Oe.value = xe, Oe.done = false, Oe;
        }
        return Oe.done = true, Oe;
      };
    }, d.values = se, oe.prototype = { constructor: oe, reset: function(ge) {
      if (this.prev = 0, this.next = 0, this.sent = this._sent = l, this.done = false, this.delegate = null, this.method = "next", this.arg = l, this.tryEntries.forEach(ye), !ge) for (var Te in this) Te.charAt(0) === "t" && S.call(this, Te) && !isNaN(+Te.slice(1)) && (this[Te] = l);
    }, stop: function() {
      this.done = true;
      var ge = this.tryEntries[0].completion;
      if (ge.type === "throw") throw ge.arg;
      return this.rval;
    }, dispatchException: function(ge) {
      if (this.done) throw ge;
      var Te = this;
      function pe(Qe, ee) {
        return Ve.type = "throw", Ve.arg = ge, Te.next = Qe, ee && (Te.method = "next", Te.arg = l), !!ee;
      }
      for (var Oe = this.tryEntries.length - 1; Oe >= 0; --Oe) {
        var xe = this.tryEntries[Oe], Ve = xe.completion;
        if (xe.tryLoc === "root") return pe("end");
        if (xe.tryLoc <= this.prev) {
          var _e = S.call(xe, "catchLoc"), Be = S.call(xe, "finallyLoc");
          if (_e && Be) {
            if (this.prev < xe.catchLoc) return pe(xe.catchLoc, true);
            if (this.prev < xe.finallyLoc) return pe(xe.finallyLoc);
          } else if (_e) {
            if (this.prev < xe.catchLoc) return pe(xe.catchLoc, true);
          } else {
            if (!Be) throw Error("try statement without catch or finally");
            if (this.prev < xe.finallyLoc) return pe(xe.finallyLoc);
          }
        }
      }
    }, abrupt: function(ge, Te) {
      for (var pe = this.tryEntries.length - 1; pe >= 0; --pe) {
        var Oe = this.tryEntries[pe];
        if (Oe.tryLoc <= this.prev && S.call(Oe, "finallyLoc") && this.prev < Oe.finallyLoc) {
          var xe = Oe;
          break;
        }
      }
      xe && (ge === "break" || ge === "continue") && xe.tryLoc <= Te && Te <= xe.finallyLoc && (xe = null);
      var Ve = xe ? xe.completion : {};
      return Ve.type = ge, Ve.arg = Te, xe ? (this.method = "next", this.next = xe.finallyLoc, j) : this.complete(Ve);
    }, complete: function(ge, Te) {
      if (ge.type === "throw") throw ge.arg;
      return ge.type === "break" || ge.type === "continue" ? this.next = ge.arg : ge.type === "return" ? (this.rval = this.arg = ge.arg, this.method = "return", this.next = "end") : ge.type === "normal" && Te && (this.next = Te), j;
    }, finish: function(ge) {
      for (var Te = this.tryEntries.length - 1; Te >= 0; --Te) {
        var pe = this.tryEntries[Te];
        if (pe.finallyLoc === ge) return this.complete(pe.completion, pe.afterLoc), ye(pe), j;
      }
    }, catch: function(ge) {
      for (var Te = this.tryEntries.length - 1; Te >= 0; --Te) {
        var pe = this.tryEntries[Te];
        if (pe.tryLoc === ge) {
          var Oe = pe.completion;
          if (Oe.type === "throw") {
            var xe = Oe.arg;
            ye(pe);
          }
          return xe;
        }
      }
      throw Error("illegal catch attempt");
    }, delegateYield: function(ge, Te, pe) {
      return this.delegate = { iterator: se(ge), resultName: Te, nextLoc: pe }, this.method === "next" && (this.arg = l), j;
    } }, d;
  }
  function h(l, d, b, S, E, R, k) {
    try {
      var w = l[R](k), F = w.value;
    } catch (I) {
      return void b(I);
    }
    w.done ? d(F) : Promise.resolve(F).then(S, E);
  }
  function f(l) {
    return function() {
      var d = this, b = arguments;
      return new Promise(function(S, E) {
        var R = l.apply(d, b);
        function k(F) {
          h(R, S, E, k, w, "next", F);
        }
        function w(F) {
          h(R, S, E, k, w, "throw", F);
        }
        k(void 0);
      });
    };
  }
  function r(l, d, b) {
    return m.apply(this, arguments);
  }
  function m() {
    return m = f(c().mark(function l(d, b, S) {
      var E, R, k, w, F, I, q, N, H, _, x = arguments;
      return c().wrap(function(j) {
        for (; ; ) switch (j.prev = j.next) {
          case 0:
            if (E = x.length > 3 && x[3] !== void 0 ? x[3] : i.Networks.FUTURENET, d.credentials().switch().value === v.default.SorobanCredentialsType.sorobanCredentialsAddress().value) {
              j.next = 3;
              break;
            }
            return j.abrupt("return", d);
          case 3:
            if (R = v.default.SorobanAuthorizationEntry.fromXDR(d.toXDR()), k = R.credentials().address(), k.signatureExpirationLedger(S), w = (0, u.hash)(Buffer.from(E)), F = v.default.HashIdPreimage.envelopeTypeSorobanAuthorization(new v.default.HashIdPreimageSorobanAuthorization({ networkId: w, nonce: k.nonce(), invocation: R.rootInvocation(), signatureExpirationLedger: k.signatureExpirationLedger() })), I = (0, u.hash)(F.toXDR()), typeof b != "function") {
              j.next = 16;
              break;
            }
            return j.next = 12, b(F);
          case 12:
            H = j.sent, H != null && H.signature ? (q = Buffer.from(H.signature), N = H.publicKey) : (q = Buffer.from(H), N = y.Address.fromScAddress(k.address()).toString()), j.next = 18;
            break;
          case 16:
            q = Buffer.from(b.sign(I)), N = b.publicKey();
          case 18:
            if (e.Keypair.fromPublicKey(N).verify(I, q)) {
              j.next = 20;
              break;
            }
            throw new Error("signature doesn't match payload");
          case 20:
            return _ = (0, t.nativeToScVal)({ public_key: n.StrKey.decodeEd25519PublicKey(N), signature: q }, { type: { public_key: ["symbol", null], signature: ["symbol", null] } }), k.signature(v.default.ScVal.scvVec([_])), j.abrupt("return", R);
          case 23:
          case "end":
            return j.stop();
        }
      }, l);
    })), m.apply(this, arguments);
  }
  function g(l, d, b) {
    var S = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : "", E = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : i.Networks.FUTURENET, R = e.Keypair.random().rawPublicKey(), k = new v.default.Int64(a(R)), w = S || l.publicKey();
    if (!w) throw new Error("authorizeInvocation requires publicKey parameter");
    var F = new v.default.SorobanAuthorizationEntry({ rootInvocation: b, credentials: v.default.SorobanCredentials.sorobanCredentialsAddress(new v.default.SorobanAddressCredentials({ address: new y.Address(w).toScAddress(), nonce: k, signatureExpirationLedger: 0, signature: v.default.ScVal.scvVec([]) })) });
    return r(F, l, d, E);
  }
  function a(l) {
    return l.subarray(0, 8).reduce(function(d, b) {
      return d << 8 | b;
    }, 0);
  }
  return ps;
}
var hs = {}, uh;
function yg() {
  if (uh) return hs;
  uh = 1, Object.defineProperty(hs, "__esModule", { value: true }), hs.buildInvocationTree = c, hs.walkInvocationTree = h;
  var v = xo(), e = La(), n = _c();
  function i(r) {
    "@babel/helpers - typeof";
    return i = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(m) {
      return typeof m;
    } : function(m) {
      return m && typeof Symbol == "function" && m.constructor === Symbol && m !== Symbol.prototype ? "symbol" : typeof m;
    }, i(r);
  }
  function u(r, m) {
    var g = Object.keys(r);
    if (Object.getOwnPropertySymbols) {
      var a = Object.getOwnPropertySymbols(r);
      m && (a = a.filter(function(l) {
        return Object.getOwnPropertyDescriptor(r, l).enumerable;
      })), g.push.apply(g, a);
    }
    return g;
  }
  function y(r) {
    for (var m = 1; m < arguments.length; m++) {
      var g = arguments[m] != null ? arguments[m] : {};
      m % 2 ? u(Object(g), true).forEach(function(a) {
        t(r, a, g[a]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(r, Object.getOwnPropertyDescriptors(g)) : u(Object(g)).forEach(function(a) {
        Object.defineProperty(r, a, Object.getOwnPropertyDescriptor(g, a));
      });
    }
    return r;
  }
  function t(r, m, g) {
    return (m = o(m)) in r ? Object.defineProperty(r, m, { value: g, enumerable: true, configurable: true, writable: true }) : r[m] = g, r;
  }
  function o(r) {
    var m = s(r, "string");
    return i(m) == "symbol" ? m : m + "";
  }
  function s(r, m) {
    if (i(r) != "object" || !r) return r;
    var g = r[Symbol.toPrimitive];
    if (g !== void 0) {
      var a = g.call(r, m);
      if (i(a) != "object") return a;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (m === "string" ? String : Number)(r);
  }
  function c(r) {
    var m = r.function(), g = {}, a = m.value();
    switch (m.switch().value) {
      case 0:
        g.type = "execute", g.args = { source: e.Address.fromScAddress(a.contractAddress()).toString(), function: a.functionName(), args: a.args().map(function(R) {
          return (0, n.scValToNative)(R);
        }) };
        break;
      case 1:
      case 2: {
        var l = m.switch().value === 2;
        g.type = "create", g.args = {};
        var d = [a.executable(), a.contractIdPreimage()], b = d[0], S = d[1];
        if (!!b.switch().value != !!S.switch().value) throw new Error("creation function appears invalid: ".concat(JSON.stringify(a), " (should be wasm+address or token+asset)"));
        switch (b.switch().value) {
          case 0: {
            var E = S.fromAddress();
            g.args.type = "wasm", g.args.wasm = y({ salt: E.salt().toString("hex"), hash: b.wasmHash().toString("hex"), address: e.Address.fromScAddress(E.address()).toString() }, l && { constructorArgs: a.constructorArgs().map(function(R) {
              return (0, n.scValToNative)(R);
            }) });
            break;
          }
          case 1:
            g.args.type = "sac", g.args.asset = v.Asset.fromOperation(S.fromAsset()).toString();
            break;
          default:
            throw new Error("unknown creation type: ".concat(JSON.stringify(b)));
        }
        break;
      }
      default:
        throw new Error("unknown invocation type (".concat(m.switch(), "): ").concat(JSON.stringify(m)));
    }
    return g.invocations = r.subInvocations().map(function(R) {
      return c(R);
    }), g;
  }
  function h(r, m) {
    f(r, 1, m);
  }
  function f(r, m, g, a) {
    g(r, m, a) !== false && r.subInvocations().forEach(function(l) {
      return f(l, m + 1, g, r);
    });
  }
  return hs;
}
var ch;
function To() {
  return ch || (ch = 1, function(v, e) {
    Object.defineProperty(e, "__esModule", { value: true });
    var n = { xdr: true, cereal: true, hash: true, sign: true, verify: true, FastSigning: true, getLiquidityPoolId: true, LiquidityPoolFeeV18: true, Keypair: true, UnsignedHyper: true, Hyper: true, TransactionBase: true, Transaction: true, FeeBumpTransaction: true, TransactionBuilder: true, TimeoutInfinite: true, BASE_FEE: true, Asset: true, LiquidityPoolAsset: true, LiquidityPoolId: true, Operation: true, AuthRequiredFlag: true, AuthRevocableFlag: true, AuthImmutableFlag: true, AuthClawbackEnabledFlag: true, Account: true, MuxedAccount: true, Claimant: true, Networks: true, StrKey: true, SignerKey: true, Soroban: true, decodeAddressToMuxedAccount: true, encodeMuxedAccountToAddress: true, extractBaseAddress: true, encodeMuxedAccount: true, Contract: true, Address: true };
    Object.defineProperty(e, "Account", { enumerable: true, get: function() {
      return S.Account;
    } }), Object.defineProperty(e, "Address", { enumerable: true, get: function() {
      return H.Address;
    } }), Object.defineProperty(e, "Asset", { enumerable: true, get: function() {
      return g.Asset;
    } }), Object.defineProperty(e, "AuthClawbackEnabledFlag", { enumerable: true, get: function() {
      return d.AuthClawbackEnabledFlag;
    } }), Object.defineProperty(e, "AuthImmutableFlag", { enumerable: true, get: function() {
      return d.AuthImmutableFlag;
    } }), Object.defineProperty(e, "AuthRequiredFlag", { enumerable: true, get: function() {
      return d.AuthRequiredFlag;
    } }), Object.defineProperty(e, "AuthRevocableFlag", { enumerable: true, get: function() {
      return d.AuthRevocableFlag;
    } }), Object.defineProperty(e, "BASE_FEE", { enumerable: true, get: function() {
      return m.BASE_FEE;
    } }), Object.defineProperty(e, "Claimant", { enumerable: true, get: function() {
      return R.Claimant;
    } }), Object.defineProperty(e, "Contract", { enumerable: true, get: function() {
      return N.Contract;
    } }), Object.defineProperty(e, "FastSigning", { enumerable: true, get: function() {
      return t.FastSigning;
    } }), Object.defineProperty(e, "FeeBumpTransaction", { enumerable: true, get: function() {
      return r.FeeBumpTransaction;
    } }), Object.defineProperty(e, "Hyper", { enumerable: true, get: function() {
      return c.Hyper;
    } }), Object.defineProperty(e, "Keypair", { enumerable: true, get: function() {
      return s.Keypair;
    } }), Object.defineProperty(e, "LiquidityPoolAsset", { enumerable: true, get: function() {
      return a.LiquidityPoolAsset;
    } }), Object.defineProperty(e, "LiquidityPoolFeeV18", { enumerable: true, get: function() {
      return o.LiquidityPoolFeeV18;
    } }), Object.defineProperty(e, "LiquidityPoolId", { enumerable: true, get: function() {
      return l.LiquidityPoolId;
    } }), Object.defineProperty(e, "MuxedAccount", { enumerable: true, get: function() {
      return E.MuxedAccount;
    } }), Object.defineProperty(e, "Networks", { enumerable: true, get: function() {
      return k.Networks;
    } }), Object.defineProperty(e, "Operation", { enumerable: true, get: function() {
      return d.Operation;
    } }), Object.defineProperty(e, "SignerKey", { enumerable: true, get: function() {
      return F.SignerKey;
    } }), Object.defineProperty(e, "Soroban", { enumerable: true, get: function() {
      return I.Soroban;
    } }), Object.defineProperty(e, "StrKey", { enumerable: true, get: function() {
      return w.StrKey;
    } }), Object.defineProperty(e, "TimeoutInfinite", { enumerable: true, get: function() {
      return m.TimeoutInfinite;
    } }), Object.defineProperty(e, "Transaction", { enumerable: true, get: function() {
      return f.Transaction;
    } }), Object.defineProperty(e, "TransactionBase", { enumerable: true, get: function() {
      return h.TransactionBase;
    } }), Object.defineProperty(e, "TransactionBuilder", { enumerable: true, get: function() {
      return m.TransactionBuilder;
    } }), Object.defineProperty(e, "UnsignedHyper", { enumerable: true, get: function() {
      return c.UnsignedHyper;
    } }), Object.defineProperty(e, "cereal", { enumerable: true, get: function() {
      return u.default;
    } }), Object.defineProperty(e, "decodeAddressToMuxedAccount", { enumerable: true, get: function() {
      return q.decodeAddressToMuxedAccount;
    } }), e.default = void 0, Object.defineProperty(e, "encodeMuxedAccount", { enumerable: true, get: function() {
      return q.encodeMuxedAccount;
    } }), Object.defineProperty(e, "encodeMuxedAccountToAddress", { enumerable: true, get: function() {
      return q.encodeMuxedAccountToAddress;
    } }), Object.defineProperty(e, "extractBaseAddress", { enumerable: true, get: function() {
      return q.extractBaseAddress;
    } }), Object.defineProperty(e, "getLiquidityPoolId", { enumerable: true, get: function() {
      return o.getLiquidityPoolId;
    } }), Object.defineProperty(e, "hash", { enumerable: true, get: function() {
      return y.hash;
    } }), Object.defineProperty(e, "sign", { enumerable: true, get: function() {
      return t.sign;
    } }), Object.defineProperty(e, "verify", { enumerable: true, get: function() {
      return t.verify;
    } }), Object.defineProperty(e, "xdr", { enumerable: true, get: function() {
      return i.default;
    } });
    var i = ue(bn()), u = ue(Ay()), y = Fo(), t = Jd(), o = tm(), s = Ii(), c = Ei(), h = $l(), f = ef(), r = im(), m = fg(), g = xo(), a = Yl(), l = Ql(), d = Zl(), b = Jl();
    Object.keys(b).forEach(function($) {
      $ === "default" || $ === "__esModule" || Object.prototype.hasOwnProperty.call(n, $) || $ in e && e[$] === b[$] || Object.defineProperty(e, $, { enumerable: true, get: function() {
        return b[$];
      } });
    });
    var S = tf(), E = om(), R = rm(), k = um(), w = ni(), F = sm(), I = pg(), q = $i(), N = cm(), H = La(), _ = mm();
    Object.keys(_).forEach(function($) {
      $ === "default" || $ === "__esModule" || Object.prototype.hasOwnProperty.call(n, $) || $ in e && e[$] === _[$] || Object.defineProperty(e, $, { enumerable: true, get: function() {
        return _[$];
      } });
    });
    var x = _c();
    Object.keys(x).forEach(function($) {
      $ === "default" || $ === "__esModule" || Object.prototype.hasOwnProperty.call(n, $) || $ in e && e[$] === x[$] || Object.defineProperty(e, $, { enumerable: true, get: function() {
        return x[$];
      } });
    });
    var L = dg();
    Object.keys(L).forEach(function($) {
      $ === "default" || $ === "__esModule" || Object.prototype.hasOwnProperty.call(n, $) || $ in e && e[$] === L[$] || Object.defineProperty(e, $, { enumerable: true, get: function() {
        return L[$];
      } });
    });
    var j = am();
    Object.keys(j).forEach(function($) {
      $ === "default" || $ === "__esModule" || Object.prototype.hasOwnProperty.call(n, $) || $ in e && e[$] === j[$] || Object.defineProperty(e, $, { enumerable: true, get: function() {
        return j[$];
      } });
    });
    var z = mg();
    Object.keys(z).forEach(function($) {
      $ === "default" || $ === "__esModule" || Object.prototype.hasOwnProperty.call(n, $) || $ in e && e[$] === z[$] || Object.defineProperty(e, $, { enumerable: true, get: function() {
        return z[$];
      } });
    });
    var Z = yg();
    Object.keys(Z).forEach(function($) {
      $ === "default" || $ === "__esModule" || Object.prototype.hasOwnProperty.call(n, $) || $ in e && e[$] === Z[$] || Object.defineProperty(e, $, { enumerable: true, get: function() {
        return Z[$];
      } });
    });
    function ue($) {
      return $ && $.__esModule ? $ : { default: $ };
    }
    e.default = v.exports;
  }(Ws, Ws.exports)), Ws.exports;
}
var uo = {}, Yc = {}, ds = {}, lh;
function gg() {
  if (lh) return ds;
  lh = 1, Object.defineProperty(ds, "__esModule", { value: true }), ds.CancelToken = void 0;
  function v(t) {
    "@babel/helpers - typeof";
    return v = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(o) {
      return typeof o;
    } : function(o) {
      return o && typeof Symbol == "function" && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, v(t);
  }
  function e(t, o) {
    if (!(t instanceof o)) throw new TypeError("Cannot call a class as a function");
  }
  function n(t, o) {
    for (var s = 0; s < o.length; s++) {
      var c = o[s];
      c.enumerable = c.enumerable || false, c.configurable = true, "value" in c && (c.writable = true), Object.defineProperty(t, u(c.key), c);
    }
  }
  function i(t, o, s) {
    return o && n(t.prototype, o), Object.defineProperty(t, "prototype", { writable: false }), t;
  }
  function u(t) {
    var o = y(t, "string");
    return v(o) == "symbol" ? o : o + "";
  }
  function y(t, o) {
    if (v(t) != "object" || !t) return t;
    var s = t[Symbol.toPrimitive];
    if (s !== void 0) {
      var c = s.call(t, o);
      if (v(c) != "object") return c;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return String(t);
  }
  return ds.CancelToken = function() {
    function t(o) {
      var s = this;
      e(this, t);
      var c;
      this.promise = new Promise(function(h) {
        c = h;
      }), o(function(h) {
        s.reason = h, c();
      });
    }
    return i(t, [{ key: "throwIfRequested", value: function() {
      if (this.reason) throw new Error(this.reason);
    } }]);
  }(), ds;
}
var qo = {};
/*! Axios v1.8.4 Copyright (c) 2025 Matt Zabriskie and contributors */
var Qc, fh;
function vg() {
  if (fh) return Qc;
  fh = 1;
  function v(Xe, Ye) {
    return function() {
      return Xe.apply(Ye, arguments);
    };
  }
  const { toString: e } = Object.prototype, { getPrototypeOf: n } = Object, i = /* @__PURE__ */ ((Xe) => (Ye) => {
    const bt = e.call(Ye);
    return Xe[bt] || (Xe[bt] = bt.slice(8, -1).toLowerCase());
  })(/* @__PURE__ */ Object.create(null)), u = (Xe) => (Xe = Xe.toLowerCase(), (Ye) => i(Ye) === Xe), y = (Xe) => (Ye) => typeof Ye === Xe, { isArray: t } = Array, o = y("undefined");
  function s(Xe) {
    return Xe !== null && !o(Xe) && Xe.constructor !== null && !o(Xe.constructor) && r(Xe.constructor.isBuffer) && Xe.constructor.isBuffer(Xe);
  }
  const c = u("ArrayBuffer");
  function h(Xe) {
    let Ye;
    return typeof ArrayBuffer < "u" && ArrayBuffer.isView ? Ye = ArrayBuffer.isView(Xe) : Ye = Xe && Xe.buffer && c(Xe.buffer), Ye;
  }
  const f = y("string"), r = y("function"), m = y("number"), g = (Xe) => Xe !== null && typeof Xe == "object", a = (Xe) => Xe === true || Xe === false, l = (Xe) => {
    if (i(Xe) !== "object") return false;
    const Ye = n(Xe);
    return (Ye === null || Ye === Object.prototype || Object.getPrototypeOf(Ye) === null) && !(Symbol.toStringTag in Xe) && !(Symbol.iterator in Xe);
  }, d = u("Date"), b = u("File"), S = u("Blob"), E = u("FileList"), R = (Xe) => g(Xe) && r(Xe.pipe), k = (Xe) => {
    let Ye;
    return Xe && (typeof FormData == "function" && Xe instanceof FormData || r(Xe.append) && ((Ye = i(Xe)) === "formdata" || Ye === "object" && r(Xe.toString) && Xe.toString() === "[object FormData]"));
  }, w = u("URLSearchParams"), [F, I, q, N] = ["ReadableStream", "Request", "Response", "Headers"].map(u), H = (Xe) => Xe.trim ? Xe.trim() : Xe.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
  function _(Xe, Ye, { allOwnKeys: bt = false } = {}) {
    if (Xe === null || typeof Xe > "u") return;
    let xt, $t;
    if (typeof Xe != "object" && (Xe = [Xe]), t(Xe)) for (xt = 0, $t = Xe.length; xt < $t; xt++) Ye.call(null, Xe[xt], xt, Xe);
    else {
      const fr = bt ? Object.getOwnPropertyNames(Xe) : Object.keys(Xe), M = fr.length;
      let G;
      for (xt = 0; xt < M; xt++) G = fr[xt], Ye.call(null, Xe[G], G, Xe);
    }
  }
  function x(Xe, Ye) {
    Ye = Ye.toLowerCase();
    const bt = Object.keys(Xe);
    let xt = bt.length, $t;
    for (; xt-- > 0; ) if ($t = bt[xt], Ye === $t.toLowerCase()) return $t;
    return null;
  }
  const L = typeof globalThis < "u" ? globalThis : typeof self < "u" ? self : typeof window < "u" ? window : vc, j = (Xe) => !o(Xe) && Xe !== L;
  function z() {
    const { caseless: Xe } = j(this) && this || {}, Ye = {}, bt = (xt, $t) => {
      const fr = Xe && x(Ye, $t) || $t;
      l(Ye[fr]) && l(xt) ? Ye[fr] = z(Ye[fr], xt) : l(xt) ? Ye[fr] = z({}, xt) : t(xt) ? Ye[fr] = xt.slice() : Ye[fr] = xt;
    };
    for (let xt = 0, $t = arguments.length; xt < $t; xt++) arguments[xt] && _(arguments[xt], bt);
    return Ye;
  }
  const Z = (Xe, Ye, bt, { allOwnKeys: xt } = {}) => (_(Ye, ($t, fr) => {
    bt && r($t) ? Xe[fr] = v($t, bt) : Xe[fr] = $t;
  }, { allOwnKeys: xt }), Xe), ue = (Xe) => (Xe.charCodeAt(0) === 65279 && (Xe = Xe.slice(1)), Xe), $ = (Xe, Ye, bt, xt) => {
    Xe.prototype = Object.create(Ye.prototype, xt), Xe.prototype.constructor = Xe, Object.defineProperty(Xe, "super", { value: Ye.prototype }), bt && Object.assign(Xe.prototype, bt);
  }, X = (Xe, Ye, bt, xt) => {
    let $t, fr, M;
    const G = {};
    if (Ye = Ye || {}, Xe == null) return Ye;
    do {
      for ($t = Object.getOwnPropertyNames(Xe), fr = $t.length; fr-- > 0; ) M = $t[fr], (!xt || xt(M, Xe, Ye)) && !G[M] && (Ye[M] = Xe[M], G[M] = true);
      Xe = bt !== false && n(Xe);
    } while (Xe && (!bt || bt(Xe, Ye)) && Xe !== Object.prototype);
    return Ye;
  }, J = (Xe, Ye, bt) => {
    Xe = String(Xe), (bt === void 0 || bt > Xe.length) && (bt = Xe.length), bt -= Ye.length;
    const xt = Xe.indexOf(Ye, bt);
    return xt !== -1 && xt === bt;
  }, B = (Xe) => {
    if (!Xe) return null;
    if (t(Xe)) return Xe;
    let Ye = Xe.length;
    if (!m(Ye)) return null;
    const bt = new Array(Ye);
    for (; Ye-- > 0; ) bt[Ye] = Xe[Ye];
    return bt;
  }, Q = /* @__PURE__ */ ((Xe) => (Ye) => Xe && Ye instanceof Xe)(typeof Uint8Array < "u" && n(Uint8Array)), ne = (Xe, Ye) => {
    const xt = (Xe && Xe[Symbol.iterator]).call(Xe);
    let $t;
    for (; ($t = xt.next()) && !$t.done; ) {
      const fr = $t.value;
      Ye.call(Xe, fr[0], fr[1]);
    }
  }, K = (Xe, Ye) => {
    let bt;
    const xt = [];
    for (; (bt = Xe.exec(Ye)) !== null; ) xt.push(bt);
    return xt;
  }, ie = u("HTMLFormElement"), ce = (Xe) => Xe.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g, function(bt, xt, $t) {
    return xt.toUpperCase() + $t;
  }), ye = (({ hasOwnProperty: Xe }) => (Ye, bt) => Xe.call(Ye, bt))(Object.prototype), oe = u("RegExp"), se = (Xe, Ye) => {
    const bt = Object.getOwnPropertyDescriptors(Xe), xt = {};
    _(bt, ($t, fr) => {
      let M;
      (M = Ye($t, fr, Xe)) !== false && (xt[fr] = M || $t);
    }), Object.defineProperties(Xe, xt);
  }, re = (Xe) => {
    se(Xe, (Ye, bt) => {
      if (r(Xe) && ["arguments", "caller", "callee"].indexOf(bt) !== -1) return false;
      const xt = Xe[bt];
      if (r(xt)) {
        if (Ye.enumerable = false, "writable" in Ye) {
          Ye.writable = false;
          return;
        }
        Ye.set || (Ye.set = () => {
          throw Error("Can not rewrite read-only method '" + bt + "'");
        });
      }
    });
  }, ge = (Xe, Ye) => {
    const bt = {}, xt = ($t) => {
      $t.forEach((fr) => {
        bt[fr] = true;
      });
    };
    return t(Xe) ? xt(Xe) : xt(String(Xe).split(Ye)), bt;
  }, Te = () => {
  }, pe = (Xe, Ye) => Xe != null && Number.isFinite(Xe = +Xe) ? Xe : Ye;
  function Oe(Xe) {
    return !!(Xe && r(Xe.append) && Xe[Symbol.toStringTag] === "FormData" && Xe[Symbol.iterator]);
  }
  const xe = (Xe) => {
    const Ye = new Array(10), bt = (xt, $t) => {
      if (g(xt)) {
        if (Ye.indexOf(xt) >= 0) return;
        if (!("toJSON" in xt)) {
          Ye[$t] = xt;
          const fr = t(xt) ? [] : {};
          return _(xt, (M, G) => {
            const fe = bt(M, $t + 1);
            !o(fe) && (fr[G] = fe);
          }), Ye[$t] = void 0, fr;
        }
      }
      return xt;
    };
    return bt(Xe, 0);
  }, Ve = u("AsyncFunction"), _e = (Xe) => Xe && (g(Xe) || r(Xe)) && r(Xe.then) && r(Xe.catch), Be = ((Xe, Ye) => Xe ? setImmediate : Ye ? ((bt, xt) => (L.addEventListener("message", ({ source: $t, data: fr }) => {
    $t === L && fr === bt && xt.length && xt.shift()();
  }, false), ($t) => {
    xt.push($t), L.postMessage(bt, "*");
  }))(`axios@${Math.random()}`, []) : (bt) => setTimeout(bt))(typeof setImmediate == "function", r(L.postMessage)), Qe = typeof queueMicrotask < "u" ? queueMicrotask.bind(L) : typeof process < "u" && process.nextTick || Be;
  var ee = { isArray: t, isArrayBuffer: c, isBuffer: s, isFormData: k, isArrayBufferView: h, isString: f, isNumber: m, isBoolean: a, isObject: g, isPlainObject: l, isReadableStream: F, isRequest: I, isResponse: q, isHeaders: N, isUndefined: o, isDate: d, isFile: b, isBlob: S, isRegExp: oe, isFunction: r, isStream: R, isURLSearchParams: w, isTypedArray: Q, isFileList: E, forEach: _, merge: z, extend: Z, trim: H, stripBOM: ue, inherits: $, toFlatObject: X, kindOf: i, kindOfTest: u, endsWith: J, toArray: B, forEachEntry: ne, matchAll: K, isHTMLForm: ie, hasOwnProperty: ye, hasOwnProp: ye, reduceDescriptors: se, freezeMethods: re, toObjectSet: ge, toCamelCase: ce, noop: Te, toFiniteNumber: pe, findKey: x, global: L, isContextDefined: j, isSpecCompliantForm: Oe, toJSONObject: xe, isAsyncFn: Ve, isThenable: _e, setImmediate: Be, asap: Qe };
  function P(Xe, Ye, bt, xt, $t) {
    Error.call(this), Error.captureStackTrace ? Error.captureStackTrace(this, this.constructor) : this.stack = new Error().stack, this.message = Xe, this.name = "AxiosError", Ye && (this.code = Ye), bt && (this.config = bt), xt && (this.request = xt), $t && (this.response = $t, this.status = $t.status ? $t.status : null);
  }
  ee.inherits(P, Error, { toJSON: function() {
    return { message: this.message, name: this.name, description: this.description, number: this.number, fileName: this.fileName, lineNumber: this.lineNumber, columnNumber: this.columnNumber, stack: this.stack, config: ee.toJSONObject(this.config), code: this.code, status: this.status };
  } });
  const T = P.prototype, O = {};
  ["ERR_BAD_OPTION_VALUE", "ERR_BAD_OPTION", "ECONNABORTED", "ETIMEDOUT", "ERR_NETWORK", "ERR_FR_TOO_MANY_REDIRECTS", "ERR_DEPRECATED", "ERR_BAD_RESPONSE", "ERR_BAD_REQUEST", "ERR_CANCELED", "ERR_NOT_SUPPORT", "ERR_INVALID_URL"].forEach((Xe) => {
    O[Xe] = { value: Xe };
  }), Object.defineProperties(P, O), Object.defineProperty(T, "isAxiosError", { value: true }), P.from = (Xe, Ye, bt, xt, $t, fr) => {
    const M = Object.create(T);
    return ee.toFlatObject(Xe, M, function(fe) {
      return fe !== Error.prototype;
    }, (G) => G !== "isAxiosError"), P.call(M, Xe.message, Ye, bt, xt, $t), M.cause = Xe, M.name = Xe.name, fr && Object.assign(M, fr), M;
  };
  var V = null;
  function D(Xe) {
    return ee.isPlainObject(Xe) || ee.isArray(Xe);
  }
  function C(Xe) {
    return ee.endsWith(Xe, "[]") ? Xe.slice(0, -2) : Xe;
  }
  function p(Xe, Ye, bt) {
    return Xe ? Xe.concat(Ye).map(function($t, fr) {
      return $t = C($t), !bt && fr ? "[" + $t + "]" : $t;
    }).join(bt ? "." : "") : Ye;
  }
  function A(Xe) {
    return ee.isArray(Xe) && !Xe.some(D);
  }
  const U = ee.toFlatObject(ee, {}, null, function(Ye) {
    return /^is[A-Z]/.test(Ye);
  });
  function Y(Xe, Ye, bt) {
    if (!ee.isObject(Xe)) throw new TypeError("target must be an object");
    Ye = Ye || new FormData(), bt = ee.toFlatObject(bt, { metaTokens: true, dots: false, indexes: false }, false, function(Ht, tr) {
      return !ee.isUndefined(tr[Ht]);
    });
    const xt = bt.metaTokens, $t = bt.visitor || Ce, fr = bt.dots, M = bt.indexes, fe = (bt.Blob || typeof Blob < "u" && Blob) && ee.isSpecCompliantForm(Ye);
    if (!ee.isFunction($t)) throw new TypeError("visitor must be a function");
    function Se(_t) {
      if (_t === null) return "";
      if (ee.isDate(_t)) return _t.toISOString();
      if (!fe && ee.isBlob(_t)) throw new P("Blob is not supported. Use a Buffer instead.");
      return ee.isArrayBuffer(_t) || ee.isTypedArray(_t) ? fe && typeof Blob == "function" ? new Blob([_t]) : Buffer.from(_t) : _t;
    }
    function Ce(_t, Ht, tr) {
      let Sr = _t;
      if (_t && !tr && typeof _t == "object") {
        if (ee.endsWith(Ht, "{}")) Ht = xt ? Ht : Ht.slice(0, -2), _t = JSON.stringify(_t);
        else if (ee.isArray(_t) && A(_t) || (ee.isFileList(_t) || ee.endsWith(Ht, "[]")) && (Sr = ee.toArray(_t))) return Ht = C(Ht), Sr.forEach(function(ot, Mt) {
          !(ee.isUndefined(ot) || ot === null) && Ye.append(M === true ? p([Ht], Mt, fr) : M === null ? Ht : Ht + "[]", Se(ot));
        }), false;
      }
      return D(_t) ? true : (Ye.append(p(tr, Ht, fr), Se(_t)), false);
    }
    const Re = [], Je = Object.assign(U, { defaultVisitor: Ce, convertValue: Se, isVisitable: D });
    function Ut(_t, Ht) {
      if (!ee.isUndefined(_t)) {
        if (Re.indexOf(_t) !== -1) throw Error("Circular reference detected in " + Ht.join("."));
        Re.push(_t), ee.forEach(_t, function(Sr, Ee) {
          (!(ee.isUndefined(Sr) || Sr === null) && $t.call(Ye, Sr, ee.isString(Ee) ? Ee.trim() : Ee, Ht, Je)) === true && Ut(Sr, Ht ? Ht.concat(Ee) : [Ee]);
        }), Re.pop();
      }
    }
    if (!ee.isObject(Xe)) throw new TypeError("data must be an object");
    return Ut(Xe), Ye;
  }
  function ae(Xe) {
    const Ye = { "!": "%21", "'": "%27", "(": "%28", ")": "%29", "~": "%7E", "%20": "+", "%00": "\0" };
    return encodeURIComponent(Xe).replace(/[!'()~]|%20|%00/g, function(xt) {
      return Ye[xt];
    });
  }
  function W(Xe, Ye) {
    this._pairs = [], Xe && Y(Xe, this, Ye);
  }
  const de = W.prototype;
  de.append = function(Ye, bt) {
    this._pairs.push([Ye, bt]);
  }, de.toString = function(Ye) {
    const bt = Ye ? function(xt) {
      return Ye.call(this, xt, ae);
    } : ae;
    return this._pairs.map(function($t) {
      return bt($t[0]) + "=" + bt($t[1]);
    }, "").join("&");
  };
  function tt(Xe) {
    return encodeURIComponent(Xe).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
  }
  function Ne(Xe, Ye, bt) {
    if (!Ye) return Xe;
    const xt = bt && bt.encode || tt;
    ee.isFunction(bt) && (bt = { serialize: bt });
    const $t = bt && bt.serialize;
    let fr;
    if ($t ? fr = $t(Ye, bt) : fr = ee.isURLSearchParams(Ye) ? Ye.toString() : new W(Ye, bt).toString(xt), fr) {
      const M = Xe.indexOf("#");
      M !== -1 && (Xe = Xe.slice(0, M)), Xe += (Xe.indexOf("?") === -1 ? "?" : "&") + fr;
    }
    return Xe;
  }
  class ut {
    constructor() {
      this.handlers = [];
    }
    use(Ye, bt, xt) {
      return this.handlers.push({ fulfilled: Ye, rejected: bt, synchronous: xt ? xt.synchronous : false, runWhen: xt ? xt.runWhen : null }), this.handlers.length - 1;
    }
    eject(Ye) {
      this.handlers[Ye] && (this.handlers[Ye] = null);
    }
    clear() {
      this.handlers && (this.handlers = []);
    }
    forEach(Ye) {
      ee.forEach(this.handlers, function(xt) {
        xt !== null && Ye(xt);
      });
    }
  }
  var Ze = ut, Et = { silentJSONParsing: true, forcedJSONParsing: true, clarifyTimeoutError: false }, rr = typeof URLSearchParams < "u" ? URLSearchParams : W, je = typeof FormData < "u" ? FormData : null, Ge = typeof Blob < "u" ? Blob : null, at = { isBrowser: true, classes: { URLSearchParams: rr, FormData: je, Blob: Ge }, protocols: ["http", "https", "file", "blob", "url", "data"] };
  const Ae = typeof window < "u" && typeof document < "u", qe = typeof navigator == "object" && navigator || void 0, Ft = Ae && (!qe || ["ReactNative", "NativeScript", "NS"].indexOf(qe.product) < 0), Dt = typeof WorkerGlobalScope < "u" && self instanceof WorkerGlobalScope && typeof self.importScripts == "function", wr = Ae && window.location.href || "http://localhost";
  var Nt = Object.freeze({ __proto__: null, hasBrowserEnv: Ae, hasStandardBrowserWebWorkerEnv: Dt, hasStandardBrowserEnv: Ft, navigator: qe, origin: wr }), yr = { ...Nt, ...at };
  function Ur(Xe, Ye) {
    return Y(Xe, new yr.classes.URLSearchParams(), Object.assign({ visitor: function(bt, xt, $t, fr) {
      return yr.isNode && ee.isBuffer(bt) ? (this.append(xt, bt.toString("base64")), false) : fr.defaultVisitor.apply(this, arguments);
    } }, Ye));
  }
  function Pe(Xe) {
    return ee.matchAll(/\w+|\[(\w*)]/g, Xe).map((Ye) => Ye[0] === "[]" ? "" : Ye[1] || Ye[0]);
  }
  function $e(Xe) {
    const Ye = {}, bt = Object.keys(Xe);
    let xt;
    const $t = bt.length;
    let fr;
    for (xt = 0; xt < $t; xt++) fr = bt[xt], Ye[fr] = Xe[fr];
    return Ye;
  }
  function le(Xe) {
    function Ye(bt, xt, $t, fr) {
      let M = bt[fr++];
      if (M === "__proto__") return true;
      const G = Number.isFinite(+M), fe = fr >= bt.length;
      return M = !M && ee.isArray($t) ? $t.length : M, fe ? (ee.hasOwnProp($t, M) ? $t[M] = [$t[M], xt] : $t[M] = xt, !G) : ((!$t[M] || !ee.isObject($t[M])) && ($t[M] = []), Ye(bt, xt, $t[M], fr) && ee.isArray($t[M]) && ($t[M] = $e($t[M])), !G);
    }
    if (ee.isFormData(Xe) && ee.isFunction(Xe.entries)) {
      const bt = {};
      return ee.forEachEntry(Xe, (xt, $t) => {
        Ye(Pe(xt), $t, bt, 0);
      }), bt;
    }
    return null;
  }
  function te(Xe, Ye, bt) {
    if (ee.isString(Xe)) try {
      return (Ye || JSON.parse)(Xe), ee.trim(Xe);
    } catch (xt) {
      if (xt.name !== "SyntaxError") throw xt;
    }
    return (bt || JSON.stringify)(Xe);
  }
  const Le = { transitional: Et, adapter: ["xhr", "http", "fetch"], transformRequest: [function(Ye, bt) {
    const xt = bt.getContentType() || "", $t = xt.indexOf("application/json") > -1, fr = ee.isObject(Ye);
    if (fr && ee.isHTMLForm(Ye) && (Ye = new FormData(Ye)), ee.isFormData(Ye)) return $t ? JSON.stringify(le(Ye)) : Ye;
    if (ee.isArrayBuffer(Ye) || ee.isBuffer(Ye) || ee.isStream(Ye) || ee.isFile(Ye) || ee.isBlob(Ye) || ee.isReadableStream(Ye)) return Ye;
    if (ee.isArrayBufferView(Ye)) return Ye.buffer;
    if (ee.isURLSearchParams(Ye)) return bt.setContentType("application/x-www-form-urlencoded;charset=utf-8", false), Ye.toString();
    let G;
    if (fr) {
      if (xt.indexOf("application/x-www-form-urlencoded") > -1) return Ur(Ye, this.formSerializer).toString();
      if ((G = ee.isFileList(Ye)) || xt.indexOf("multipart/form-data") > -1) {
        const fe = this.env && this.env.FormData;
        return Y(G ? { "files[]": Ye } : Ye, fe && new fe(), this.formSerializer);
      }
    }
    return fr || $t ? (bt.setContentType("application/json", false), te(Ye)) : Ye;
  }], transformResponse: [function(Ye) {
    const bt = this.transitional || Le.transitional, xt = bt && bt.forcedJSONParsing, $t = this.responseType === "json";
    if (ee.isResponse(Ye) || ee.isReadableStream(Ye)) return Ye;
    if (Ye && ee.isString(Ye) && (xt && !this.responseType || $t)) {
      const M = !(bt && bt.silentJSONParsing) && $t;
      try {
        return JSON.parse(Ye);
      } catch (G) {
        if (M) throw G.name === "SyntaxError" ? P.from(G, P.ERR_BAD_RESPONSE, this, null, this.response) : G;
      }
    }
    return Ye;
  }], timeout: 0, xsrfCookieName: "XSRF-TOKEN", xsrfHeaderName: "X-XSRF-TOKEN", maxContentLength: -1, maxBodyLength: -1, env: { FormData: yr.classes.FormData, Blob: yr.classes.Blob }, validateStatus: function(Ye) {
    return Ye >= 200 && Ye < 300;
  }, headers: { common: { Accept: "application/json, text/plain, */*", "Content-Type": void 0 } } };
  ee.forEach(["delete", "get", "head", "post", "put", "patch"], (Xe) => {
    Le.headers[Xe] = {};
  });
  var nt = Le;
  const ft = ee.toObjectSet(["age", "authorization", "content-length", "content-type", "etag", "expires", "from", "host", "if-modified-since", "if-unmodified-since", "last-modified", "location", "max-forwards", "proxy-authorization", "referer", "retry-after", "user-agent"]);
  var zt = (Xe) => {
    const Ye = {};
    let bt, xt, $t;
    return Xe && Xe.split(`
`).forEach(function(M) {
      $t = M.indexOf(":"), bt = M.substring(0, $t).trim().toLowerCase(), xt = M.substring($t + 1).trim(), !(!bt || Ye[bt] && ft[bt]) && (bt === "set-cookie" ? Ye[bt] ? Ye[bt].push(xt) : Ye[bt] = [xt] : Ye[bt] = Ye[bt] ? Ye[bt] + ", " + xt : xt);
    }), Ye;
  };
  const st = Symbol("internals");
  function ct(Xe) {
    return Xe && String(Xe).trim().toLowerCase();
  }
  function yt(Xe) {
    return Xe === false || Xe == null ? Xe : ee.isArray(Xe) ? Xe.map(yt) : String(Xe);
  }
  function Zt(Xe) {
    const Ye = /* @__PURE__ */ Object.create(null), bt = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
    let xt;
    for (; xt = bt.exec(Xe); ) Ye[xt[1]] = xt[2];
    return Ye;
  }
  const Ct = (Xe) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(Xe.trim());
  function Lt(Xe, Ye, bt, xt, $t) {
    if (ee.isFunction(xt)) return xt.call(this, Ye, bt);
    if ($t && (Ye = bt), !!ee.isString(Ye)) {
      if (ee.isString(xt)) return Ye.indexOf(xt) !== -1;
      if (ee.isRegExp(xt)) return xt.test(Ye);
    }
  }
  function Wt(Xe) {
    return Xe.trim().toLowerCase().replace(/([a-z\d])(\w*)/g, (Ye, bt, xt) => bt.toUpperCase() + xt);
  }
  function vr(Xe, Ye) {
    const bt = ee.toCamelCase(" " + Ye);
    ["get", "set", "has"].forEach((xt) => {
      Object.defineProperty(Xe, xt + bt, { value: function($t, fr, M) {
        return this[xt].call(this, Ye, $t, fr, M);
      }, configurable: true });
    });
  }
  class ar {
    constructor(Ye) {
      Ye && this.set(Ye);
    }
    set(Ye, bt, xt) {
      const $t = this;
      function fr(G, fe, Se) {
        const Ce = ct(fe);
        if (!Ce) throw new Error("header name must be a non-empty string");
        const Re = ee.findKey($t, Ce);
        (!Re || $t[Re] === void 0 || Se === true || Se === void 0 && $t[Re] !== false) && ($t[Re || fe] = yt(G));
      }
      const M = (G, fe) => ee.forEach(G, (Se, Ce) => fr(Se, Ce, fe));
      if (ee.isPlainObject(Ye) || Ye instanceof this.constructor) M(Ye, bt);
      else if (ee.isString(Ye) && (Ye = Ye.trim()) && !Ct(Ye)) M(zt(Ye), bt);
      else if (ee.isHeaders(Ye)) for (const [G, fe] of Ye.entries()) fr(fe, G, xt);
      else Ye != null && fr(bt, Ye, xt);
      return this;
    }
    get(Ye, bt) {
      if (Ye = ct(Ye), Ye) {
        const xt = ee.findKey(this, Ye);
        if (xt) {
          const $t = this[xt];
          if (!bt) return $t;
          if (bt === true) return Zt($t);
          if (ee.isFunction(bt)) return bt.call(this, $t, xt);
          if (ee.isRegExp(bt)) return bt.exec($t);
          throw new TypeError("parser must be boolean|regexp|function");
        }
      }
    }
    has(Ye, bt) {
      if (Ye = ct(Ye), Ye) {
        const xt = ee.findKey(this, Ye);
        return !!(xt && this[xt] !== void 0 && (!bt || Lt(this, this[xt], xt, bt)));
      }
      return false;
    }
    delete(Ye, bt) {
      const xt = this;
      let $t = false;
      function fr(M) {
        if (M = ct(M), M) {
          const G = ee.findKey(xt, M);
          G && (!bt || Lt(xt, xt[G], G, bt)) && (delete xt[G], $t = true);
        }
      }
      return ee.isArray(Ye) ? Ye.forEach(fr) : fr(Ye), $t;
    }
    clear(Ye) {
      const bt = Object.keys(this);
      let xt = bt.length, $t = false;
      for (; xt--; ) {
        const fr = bt[xt];
        (!Ye || Lt(this, this[fr], fr, Ye, true)) && (delete this[fr], $t = true);
      }
      return $t;
    }
    normalize(Ye) {
      const bt = this, xt = {};
      return ee.forEach(this, ($t, fr) => {
        const M = ee.findKey(xt, fr);
        if (M) {
          bt[M] = yt($t), delete bt[fr];
          return;
        }
        const G = Ye ? Wt(fr) : String(fr).trim();
        G !== fr && delete bt[fr], bt[G] = yt($t), xt[G] = true;
      }), this;
    }
    concat(...Ye) {
      return this.constructor.concat(this, ...Ye);
    }
    toJSON(Ye) {
      const bt = /* @__PURE__ */ Object.create(null);
      return ee.forEach(this, (xt, $t) => {
        xt != null && xt !== false && (bt[$t] = Ye && ee.isArray(xt) ? xt.join(", ") : xt);
      }), bt;
    }
    [Symbol.iterator]() {
      return Object.entries(this.toJSON())[Symbol.iterator]();
    }
    toString() {
      return Object.entries(this.toJSON()).map(([Ye, bt]) => Ye + ": " + bt).join(`
`);
    }
    get [Symbol.toStringTag]() {
      return "AxiosHeaders";
    }
    static from(Ye) {
      return Ye instanceof this ? Ye : new this(Ye);
    }
    static concat(Ye, ...bt) {
      const xt = new this(Ye);
      return bt.forEach(($t) => xt.set($t)), xt;
    }
    static accessor(Ye) {
      const xt = (this[st] = this[st] = { accessors: {} }).accessors, $t = this.prototype;
      function fr(M) {
        const G = ct(M);
        xt[G] || (vr($t, M), xt[G] = true);
      }
      return ee.isArray(Ye) ? Ye.forEach(fr) : fr(Ye), this;
    }
  }
  ar.accessor(["Content-Type", "Content-Length", "Accept", "Accept-Encoding", "User-Agent", "Authorization"]), ee.reduceDescriptors(ar.prototype, ({ value: Xe }, Ye) => {
    let bt = Ye[0].toUpperCase() + Ye.slice(1);
    return { get: () => Xe, set(xt) {
      this[bt] = xt;
    } };
  }), ee.freezeMethods(ar);
  var sr = ar;
  function gr(Xe, Ye) {
    const bt = this || nt, xt = Ye || bt, $t = sr.from(xt.headers);
    let fr = xt.data;
    return ee.forEach(Xe, function(G) {
      fr = G.call(bt, fr, $t.normalize(), Ye ? Ye.status : void 0);
    }), $t.normalize(), fr;
  }
  function Tr(Xe) {
    return !!(Xe && Xe.__CANCEL__);
  }
  function Mr(Xe, Ye, bt) {
    P.call(this, Xe ?? "canceled", P.ERR_CANCELED, Ye, bt), this.name = "CanceledError";
  }
  ee.inherits(Mr, P, { __CANCEL__: true });
  function Nr(Xe, Ye, bt) {
    const xt = bt.config.validateStatus;
    !bt.status || !xt || xt(bt.status) ? Xe(bt) : Ye(new P("Request failed with status code " + bt.status, [P.ERR_BAD_REQUEST, P.ERR_BAD_RESPONSE][Math.floor(bt.status / 100) - 4], bt.config, bt.request, bt));
  }
  function Lr(Xe) {
    const Ye = /^([-+\w]{1,25})(:?\/\/|:)/.exec(Xe);
    return Ye && Ye[1] || "";
  }
  function jr(Xe, Ye) {
    Xe = Xe || 10;
    const bt = new Array(Xe), xt = new Array(Xe);
    let $t = 0, fr = 0, M;
    return Ye = Ye !== void 0 ? Ye : 1e3, function(fe) {
      const Se = Date.now(), Ce = xt[fr];
      M || (M = Se), bt[$t] = fe, xt[$t] = Se;
      let Re = fr, Je = 0;
      for (; Re !== $t; ) Je += bt[Re++], Re = Re % Xe;
      if ($t = ($t + 1) % Xe, $t === fr && (fr = (fr + 1) % Xe), Se - M < Ye) return;
      const Ut = Ce && Se - Ce;
      return Ut ? Math.round(Je * 1e3 / Ut) : void 0;
    };
  }
  function Hr(Xe, Ye) {
    let bt = 0, xt = 1e3 / Ye, $t, fr;
    const M = (Se, Ce = Date.now()) => {
      bt = Ce, $t = null, fr && (clearTimeout(fr), fr = null), Xe.apply(null, Se);
    };
    return [(...Se) => {
      const Ce = Date.now(), Re = Ce - bt;
      Re >= xt ? M(Se, Ce) : ($t = Se, fr || (fr = setTimeout(() => {
        fr = null, M($t);
      }, xt - Re)));
    }, () => $t && M($t)];
  }
  const kr = (Xe, Ye, bt = 3) => {
    let xt = 0;
    const $t = jr(50, 250);
    return Hr((fr) => {
      const M = fr.loaded, G = fr.lengthComputable ? fr.total : void 0, fe = M - xt, Se = $t(fe), Ce = M <= G;
      xt = M;
      const Re = { loaded: M, total: G, progress: G ? M / G : void 0, bytes: fe, rate: Se || void 0, estimated: Se && G && Ce ? (G - M) / Se : void 0, event: fr, lengthComputable: G != null, [Ye ? "download" : "upload"]: true };
      Xe(Re);
    }, bt);
  }, Xt = (Xe, Ye) => {
    const bt = Xe != null;
    return [(xt) => Ye[0]({ lengthComputable: bt, total: Xe, loaded: xt }), Ye[1]];
  }, Qt = (Xe) => (...Ye) => ee.asap(() => Xe(...Ye));
  var br = yr.hasStandardBrowserEnv ? /* @__PURE__ */ ((Xe, Ye) => (bt) => (bt = new URL(bt, yr.origin), Xe.protocol === bt.protocol && Xe.host === bt.host && (Ye || Xe.port === bt.port)))(new URL(yr.origin), yr.navigator && /(msie|trident)/i.test(yr.navigator.userAgent)) : () => true, we = yr.hasStandardBrowserEnv ? { write(Xe, Ye, bt, xt, $t, fr) {
    const M = [Xe + "=" + encodeURIComponent(Ye)];
    ee.isNumber(bt) && M.push("expires=" + new Date(bt).toGMTString()), ee.isString(xt) && M.push("path=" + xt), ee.isString($t) && M.push("domain=" + $t), fr === true && M.push("secure"), document.cookie = M.join("; ");
  }, read(Xe) {
    const Ye = document.cookie.match(new RegExp("(^|;\\s*)(" + Xe + ")=([^;]*)"));
    return Ye ? decodeURIComponent(Ye[3]) : null;
  }, remove(Xe) {
    this.write(Xe, "", Date.now() - 864e5);
  } } : { write() {
  }, read() {
    return null;
  }, remove() {
  } };
  function me(Xe) {
    return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(Xe);
  }
  function ze(Xe, Ye) {
    return Ye ? Xe.replace(/\/?\/$/, "") + "/" + Ye.replace(/^\/+/, "") : Xe;
  }
  function rt(Xe, Ye, bt) {
    let xt = !me(Ye);
    return Xe && (xt || bt == false) ? ze(Xe, Ye) : Ye;
  }
  const Tt = (Xe) => Xe instanceof sr ? { ...Xe } : Xe;
  function Ot(Xe, Ye) {
    Ye = Ye || {};
    const bt = {};
    function xt(Se, Ce, Re, Je) {
      return ee.isPlainObject(Se) && ee.isPlainObject(Ce) ? ee.merge.call({ caseless: Je }, Se, Ce) : ee.isPlainObject(Ce) ? ee.merge({}, Ce) : ee.isArray(Ce) ? Ce.slice() : Ce;
    }
    function $t(Se, Ce, Re, Je) {
      if (ee.isUndefined(Ce)) {
        if (!ee.isUndefined(Se)) return xt(void 0, Se, Re, Je);
      } else return xt(Se, Ce, Re, Je);
    }
    function fr(Se, Ce) {
      if (!ee.isUndefined(Ce)) return xt(void 0, Ce);
    }
    function M(Se, Ce) {
      if (ee.isUndefined(Ce)) {
        if (!ee.isUndefined(Se)) return xt(void 0, Se);
      } else return xt(void 0, Ce);
    }
    function G(Se, Ce, Re) {
      if (Re in Ye) return xt(Se, Ce);
      if (Re in Xe) return xt(void 0, Se);
    }
    const fe = { url: fr, method: fr, data: fr, baseURL: M, transformRequest: M, transformResponse: M, paramsSerializer: M, timeout: M, timeoutMessage: M, withCredentials: M, withXSRFToken: M, adapter: M, responseType: M, xsrfCookieName: M, xsrfHeaderName: M, onUploadProgress: M, onDownloadProgress: M, decompress: M, maxContentLength: M, maxBodyLength: M, beforeRedirect: M, transport: M, httpAgent: M, httpsAgent: M, cancelToken: M, socketPath: M, responseEncoding: M, validateStatus: G, headers: (Se, Ce, Re) => $t(Tt(Se), Tt(Ce), Re, true) };
    return ee.forEach(Object.keys(Object.assign({}, Xe, Ye)), function(Ce) {
      const Re = fe[Ce] || $t, Je = Re(Xe[Ce], Ye[Ce], Ce);
      ee.isUndefined(Je) && Re !== G || (bt[Ce] = Je);
    }), bt;
  }
  var It = (Xe) => {
    const Ye = Ot({}, Xe);
    let { data: bt, withXSRFToken: xt, xsrfHeaderName: $t, xsrfCookieName: fr, headers: M, auth: G } = Ye;
    Ye.headers = M = sr.from(M), Ye.url = Ne(rt(Ye.baseURL, Ye.url, Ye.allowAbsoluteUrls), Xe.params, Xe.paramsSerializer), G && M.set("Authorization", "Basic " + btoa((G.username || "") + ":" + (G.password ? unescape(encodeURIComponent(G.password)) : "")));
    let fe;
    if (ee.isFormData(bt)) {
      if (yr.hasStandardBrowserEnv || yr.hasStandardBrowserWebWorkerEnv) M.setContentType(void 0);
      else if ((fe = M.getContentType()) !== false) {
        const [Se, ...Ce] = fe ? fe.split(";").map((Re) => Re.trim()).filter(Boolean) : [];
        M.setContentType([Se || "multipart/form-data", ...Ce].join("; "));
      }
    }
    if (yr.hasStandardBrowserEnv && (xt && ee.isFunction(xt) && (xt = xt(Ye)), xt || xt !== false && br(Ye.url))) {
      const Se = $t && fr && we.read(fr);
      Se && M.set($t, Se);
    }
    return Ye;
  }, mt = typeof XMLHttpRequest < "u" && function(Xe) {
    return new Promise(function(bt, xt) {
      const $t = It(Xe);
      let fr = $t.data;
      const M = sr.from($t.headers).normalize();
      let { responseType: G, onUploadProgress: fe, onDownloadProgress: Se } = $t, Ce, Re, Je, Ut, _t;
      function Ht() {
        Ut && Ut(), _t && _t(), $t.cancelToken && $t.cancelToken.unsubscribe(Ce), $t.signal && $t.signal.removeEventListener("abort", Ce);
      }
      let tr = new XMLHttpRequest();
      tr.open($t.method.toUpperCase(), $t.url, true), tr.timeout = $t.timeout;
      function Sr() {
        if (!tr) return;
        const ot = sr.from("getAllResponseHeaders" in tr && tr.getAllResponseHeaders()), gt = { data: !G || G === "text" || G === "json" ? tr.responseText : tr.response, status: tr.status, statusText: tr.statusText, headers: ot, config: Xe, request: tr };
        Nr(function(or) {
          bt(or), Ht();
        }, function(or) {
          xt(or), Ht();
        }, gt), tr = null;
      }
      "onloadend" in tr ? tr.onloadend = Sr : tr.onreadystatechange = function() {
        !tr || tr.readyState !== 4 || tr.status === 0 && !(tr.responseURL && tr.responseURL.indexOf("file:") === 0) || setTimeout(Sr);
      }, tr.onabort = function() {
        tr && (xt(new P("Request aborted", P.ECONNABORTED, Xe, tr)), tr = null);
      }, tr.onerror = function() {
        xt(new P("Network Error", P.ERR_NETWORK, Xe, tr)), tr = null;
      }, tr.ontimeout = function() {
        let Mt = $t.timeout ? "timeout of " + $t.timeout + "ms exceeded" : "timeout exceeded";
        const gt = $t.transitional || Et;
        $t.timeoutErrorMessage && (Mt = $t.timeoutErrorMessage), xt(new P(Mt, gt.clarifyTimeoutError ? P.ETIMEDOUT : P.ECONNABORTED, Xe, tr)), tr = null;
      }, fr === void 0 && M.setContentType(null), "setRequestHeader" in tr && ee.forEach(M.toJSON(), function(Mt, gt) {
        tr.setRequestHeader(gt, Mt);
      }), ee.isUndefined($t.withCredentials) || (tr.withCredentials = !!$t.withCredentials), G && G !== "json" && (tr.responseType = $t.responseType), Se && ([Je, _t] = kr(Se, true), tr.addEventListener("progress", Je)), fe && tr.upload && ([Re, Ut] = kr(fe), tr.upload.addEventListener("progress", Re), tr.upload.addEventListener("loadend", Ut)), ($t.cancelToken || $t.signal) && (Ce = (ot) => {
        tr && (xt(!ot || ot.type ? new Mr(null, Xe, tr) : ot), tr.abort(), tr = null);
      }, $t.cancelToken && $t.cancelToken.subscribe(Ce), $t.signal && ($t.signal.aborted ? Ce() : $t.signal.addEventListener("abort", Ce)));
      const Ee = Lr($t.url);
      if (Ee && yr.protocols.indexOf(Ee) === -1) {
        xt(new P("Unsupported protocol " + Ee + ":", P.ERR_BAD_REQUEST, Xe));
        return;
      }
      tr.send(fr || null);
    });
  }, ir = (Xe, Ye) => {
    const { length: bt } = Xe = Xe ? Xe.filter(Boolean) : [];
    if (Ye || bt) {
      let xt = new AbortController(), $t;
      const fr = function(Se) {
        if (!$t) {
          $t = true, G();
          const Ce = Se instanceof Error ? Se : this.reason;
          xt.abort(Ce instanceof P ? Ce : new Mr(Ce instanceof Error ? Ce.message : Ce));
        }
      };
      let M = Ye && setTimeout(() => {
        M = null, fr(new P(`timeout ${Ye} of ms exceeded`, P.ETIMEDOUT));
      }, Ye);
      const G = () => {
        Xe && (M && clearTimeout(M), M = null, Xe.forEach((Se) => {
          Se.unsubscribe ? Se.unsubscribe(fr) : Se.removeEventListener("abort", fr);
        }), Xe = null);
      };
      Xe.forEach((Se) => Se.addEventListener("abort", fr));
      const { signal: fe } = xt;
      return fe.unsubscribe = () => ee.asap(G), fe;
    }
  };
  const dr = function* (Xe, Ye) {
    let bt = Xe.byteLength;
    if (bt < Ye) {
      yield Xe;
      return;
    }
    let xt = 0, $t;
    for (; xt < bt; ) $t = xt + Ye, yield Xe.slice(xt, $t), xt = $t;
  }, hr = async function* (Xe, Ye) {
    for await (const bt of Fr(Xe)) yield* dr(bt, Ye);
  }, Fr = async function* (Xe) {
    if (Xe[Symbol.asyncIterator]) {
      yield* Xe;
      return;
    }
    const Ye = Xe.getReader();
    try {
      for (; ; ) {
        const { done: bt, value: xt } = await Ye.read();
        if (bt) break;
        yield xt;
      }
    } finally {
      await Ye.cancel();
    }
  }, Gr = (Xe, Ye, bt, xt) => {
    const $t = hr(Xe, Ye);
    let fr = 0, M, G = (fe) => {
      M || (M = true, xt && xt(fe));
    };
    return new ReadableStream({ async pull(fe) {
      try {
        const { done: Se, value: Ce } = await $t.next();
        if (Se) {
          G(), fe.close();
          return;
        }
        let Re = Ce.byteLength;
        if (bt) {
          let Je = fr += Re;
          bt(Je);
        }
        fe.enqueue(new Uint8Array(Ce));
      } catch (Se) {
        throw G(Se), Se;
      }
    }, cancel(fe) {
      return G(fe), $t.return();
    } }, { highWaterMark: 2 });
  }, Br = typeof fetch == "function" && typeof Request == "function" && typeof Response == "function", Dr = Br && typeof ReadableStream == "function", Vr = Br && (typeof TextEncoder == "function" ? /* @__PURE__ */ ((Xe) => (Ye) => Xe.encode(Ye))(new TextEncoder()) : async (Xe) => new Uint8Array(await new Response(Xe).arrayBuffer())), be = (Xe, ...Ye) => {
    try {
      return !!Xe(...Ye);
    } catch {
      return false;
    }
  }, Or = Dr && be(() => {
    let Xe = false;
    const Ye = new Request(yr.origin, { body: new ReadableStream(), method: "POST", get duplex() {
      return Xe = true, "half";
    } }).headers.has("Content-Type");
    return Xe && !Ye;
  }), Ue = 64 * 1024, it = Dr && be(() => ee.isReadableStream(new Response("").body)), dt = { stream: it && ((Xe) => Xe.body) };
  Br && ((Xe) => {
    ["text", "arrayBuffer", "blob", "formData", "stream"].forEach((Ye) => {
      !dt[Ye] && (dt[Ye] = ee.isFunction(Xe[Ye]) ? (bt) => bt[Ye]() : (bt, xt) => {
        throw new P(`Response type '${Ye}' is not supported`, P.ERR_NOT_SUPPORT, xt);
      });
    });
  })(new Response());
  const vt = async (Xe) => {
    if (Xe == null) return 0;
    if (ee.isBlob(Xe)) return Xe.size;
    if (ee.isSpecCompliantForm(Xe)) return (await new Request(yr.origin, { method: "POST", body: Xe }).arrayBuffer()).byteLength;
    if (ee.isArrayBufferView(Xe) || ee.isArrayBuffer(Xe)) return Xe.byteLength;
    if (ee.isURLSearchParams(Xe) && (Xe = Xe + ""), ee.isString(Xe)) return (await Vr(Xe)).byteLength;
  }, wt = async (Xe, Ye) => {
    const bt = ee.toFiniteNumber(Xe.getContentLength());
    return bt ?? vt(Ye);
  };
  var Pt = Br && (async (Xe) => {
    let { url: Ye, method: bt, data: xt, signal: $t, cancelToken: fr, timeout: M, onDownloadProgress: G, onUploadProgress: fe, responseType: Se, headers: Ce, withCredentials: Re = "same-origin", fetchOptions: Je } = It(Xe);
    Se = Se ? (Se + "").toLowerCase() : "text";
    let Ut = ir([$t, fr && fr.toAbortSignal()], M), _t;
    const Ht = Ut && Ut.unsubscribe && (() => {
      Ut.unsubscribe();
    });
    let tr;
    try {
      if (fe && Or && bt !== "get" && bt !== "head" && (tr = await wt(Ce, xt)) !== 0) {
        let gt = new Request(Ye, { method: "POST", body: xt, duplex: "half" }), Rt;
        if (ee.isFormData(xt) && (Rt = gt.headers.get("content-type")) && Ce.setContentType(Rt), gt.body) {
          const [or, nr] = Xt(tr, kr(Qt(fe)));
          xt = Gr(gt.body, Ue, or, nr);
        }
      }
      ee.isString(Re) || (Re = Re ? "include" : "omit");
      const Sr = "credentials" in Request.prototype;
      _t = new Request(Ye, { ...Je, signal: Ut, method: bt.toUpperCase(), headers: Ce.normalize().toJSON(), body: xt, duplex: "half", credentials: Sr ? Re : void 0 });
      let Ee = await fetch(_t);
      const ot = it && (Se === "stream" || Se === "response");
      if (it && (G || ot && Ht)) {
        const gt = {};
        ["status", "statusText", "headers"].forEach((Yr) => {
          gt[Yr] = Ee[Yr];
        });
        const Rt = ee.toFiniteNumber(Ee.headers.get("content-length")), [or, nr] = G && Xt(Rt, kr(Qt(G), true)) || [];
        Ee = new Response(Gr(Ee.body, Ue, or, () => {
          nr && nr(), Ht && Ht();
        }), gt);
      }
      Se = Se || "text";
      let Mt = await dt[ee.findKey(dt, Se) || "text"](Ee, Xe);
      return !ot && Ht && Ht(), await new Promise((gt, Rt) => {
        Nr(gt, Rt, { data: Mt, headers: sr.from(Ee.headers), status: Ee.status, statusText: Ee.statusText, config: Xe, request: _t });
      });
    } catch (Sr) {
      throw Ht && Ht(), Sr && Sr.name === "TypeError" && /fetch/i.test(Sr.message) ? Object.assign(new P("Network Error", P.ERR_NETWORK, Xe, _t), { cause: Sr.cause || Sr }) : P.from(Sr, Sr && Sr.code, Xe, _t);
    }
  });
  const Yt = { http: V, xhr: mt, fetch: Pt };
  ee.forEach(Yt, (Xe, Ye) => {
    if (Xe) {
      try {
        Object.defineProperty(Xe, "name", { value: Ye });
      } catch {
      }
      Object.defineProperty(Xe, "adapterName", { value: Ye });
    }
  });
  const cr = (Xe) => `- ${Xe}`, qr = (Xe) => ee.isFunction(Xe) || Xe === null || Xe === false;
  var Vt = { getAdapter: (Xe) => {
    Xe = ee.isArray(Xe) ? Xe : [Xe];
    const { length: Ye } = Xe;
    let bt, xt;
    const $t = {};
    for (let fr = 0; fr < Ye; fr++) {
      bt = Xe[fr];
      let M;
      if (xt = bt, !qr(bt) && (xt = Yt[(M = String(bt)).toLowerCase()], xt === void 0)) throw new P(`Unknown adapter '${M}'`);
      if (xt) break;
      $t[M || "#" + fr] = xt;
    }
    if (!xt) {
      const fr = Object.entries($t).map(([G, fe]) => `adapter ${G} ` + (fe === false ? "is not supported by the environment" : "is not available in the build"));
      let M = Ye ? fr.length > 1 ? `since :
` + fr.map(cr).join(`
`) : " " + cr(fr[0]) : "as no adapter specified";
      throw new P("There is no suitable adapter to dispatch the request " + M, "ERR_NOT_SUPPORT");
    }
    return xt;
  }, adapters: Yt };
  function zr(Xe) {
    if (Xe.cancelToken && Xe.cancelToken.throwIfRequested(), Xe.signal && Xe.signal.aborted) throw new Mr(null, Xe);
  }
  function en(Xe) {
    return zr(Xe), Xe.headers = sr.from(Xe.headers), Xe.data = gr.call(Xe, Xe.transformRequest), ["post", "put", "patch"].indexOf(Xe.method) !== -1 && Xe.headers.setContentType("application/x-www-form-urlencoded", false), Vt.getAdapter(Xe.adapter || nt.adapter)(Xe).then(function(xt) {
      return zr(Xe), xt.data = gr.call(Xe, Xe.transformResponse, xt), xt.headers = sr.from(xt.headers), xt;
    }, function(xt) {
      return Tr(xt) || (zr(Xe), xt && xt.response && (xt.response.data = gr.call(Xe, Xe.transformResponse, xt.response), xt.response.headers = sr.from(xt.response.headers))), Promise.reject(xt);
    });
  }
  const Me = "1.8.4", De = {};
  ["object", "boolean", "number", "function", "string", "symbol"].forEach((Xe, Ye) => {
    De[Xe] = function(xt) {
      return typeof xt === Xe || "a" + (Ye < 1 ? "n " : " ") + Xe;
    };
  });
  const Ke = {};
  De.transitional = function(Ye, bt, xt) {
    function $t(fr, M) {
      return "[Axios v" + Me + "] Transitional option '" + fr + "'" + M + (xt ? ". " + xt : "");
    }
    return (fr, M, G) => {
      if (Ye === false) throw new P($t(M, " has been removed" + (bt ? " in " + bt : "")), P.ERR_DEPRECATED);
      return bt && !Ke[M] && (Ke[M] = true, console.warn($t(M, " has been deprecated since v" + bt + " and will be removed in the near future"))), Ye ? Ye(fr, M, G) : true;
    };
  }, De.spelling = function(Ye) {
    return (bt, xt) => (console.warn(`${xt} is likely a misspelling of ${Ye}`), true);
  };
  function Bt(Xe, Ye, bt) {
    if (typeof Xe != "object") throw new P("options must be an object", P.ERR_BAD_OPTION_VALUE);
    const xt = Object.keys(Xe);
    let $t = xt.length;
    for (; $t-- > 0; ) {
      const fr = xt[$t], M = Ye[fr];
      if (M) {
        const G = Xe[fr], fe = G === void 0 || M(G, fr, Xe);
        if (fe !== true) throw new P("option " + fr + " must be " + fe, P.ERR_BAD_OPTION_VALUE);
        continue;
      }
      if (bt !== true) throw new P("Unknown option " + fr, P.ERR_BAD_OPTION);
    }
  }
  var St = { assertOptions: Bt, validators: De };
  const ur = St.validators;
  class Cr {
    constructor(Ye) {
      this.defaults = Ye, this.interceptors = { request: new Ze(), response: new Ze() };
    }
    async request(Ye, bt) {
      try {
        return await this._request(Ye, bt);
      } catch (xt) {
        if (xt instanceof Error) {
          let $t = {};
          Error.captureStackTrace ? Error.captureStackTrace($t) : $t = new Error();
          const fr = $t.stack ? $t.stack.replace(/^.+\n/, "") : "";
          try {
            xt.stack ? fr && !String(xt.stack).endsWith(fr.replace(/^.+\n.+\n/, "")) && (xt.stack += `
` + fr) : xt.stack = fr;
          } catch {
          }
        }
        throw xt;
      }
    }
    _request(Ye, bt) {
      typeof Ye == "string" ? (bt = bt || {}, bt.url = Ye) : bt = Ye || {}, bt = Ot(this.defaults, bt);
      const { transitional: xt, paramsSerializer: $t, headers: fr } = bt;
      xt !== void 0 && St.assertOptions(xt, { silentJSONParsing: ur.transitional(ur.boolean), forcedJSONParsing: ur.transitional(ur.boolean), clarifyTimeoutError: ur.transitional(ur.boolean) }, false), $t != null && (ee.isFunction($t) ? bt.paramsSerializer = { serialize: $t } : St.assertOptions($t, { encode: ur.function, serialize: ur.function }, true)), bt.allowAbsoluteUrls !== void 0 || (this.defaults.allowAbsoluteUrls !== void 0 ? bt.allowAbsoluteUrls = this.defaults.allowAbsoluteUrls : bt.allowAbsoluteUrls = true), St.assertOptions(bt, { baseUrl: ur.spelling("baseURL"), withXsrfToken: ur.spelling("withXSRFToken") }, true), bt.method = (bt.method || this.defaults.method || "get").toLowerCase();
      let M = fr && ee.merge(fr.common, fr[bt.method]);
      fr && ee.forEach(["delete", "get", "head", "post", "put", "patch", "common"], (_t) => {
        delete fr[_t];
      }), bt.headers = sr.concat(M, fr);
      const G = [];
      let fe = true;
      this.interceptors.request.forEach(function(Ht) {
        typeof Ht.runWhen == "function" && Ht.runWhen(bt) === false || (fe = fe && Ht.synchronous, G.unshift(Ht.fulfilled, Ht.rejected));
      });
      const Se = [];
      this.interceptors.response.forEach(function(Ht) {
        Se.push(Ht.fulfilled, Ht.rejected);
      });
      let Ce, Re = 0, Je;
      if (!fe) {
        const _t = [en.bind(this), void 0];
        for (_t.unshift.apply(_t, G), _t.push.apply(_t, Se), Je = _t.length, Ce = Promise.resolve(bt); Re < Je; ) Ce = Ce.then(_t[Re++], _t[Re++]);
        return Ce;
      }
      Je = G.length;
      let Ut = bt;
      for (Re = 0; Re < Je; ) {
        const _t = G[Re++], Ht = G[Re++];
        try {
          Ut = _t(Ut);
        } catch (tr) {
          Ht.call(this, tr);
          break;
        }
      }
      try {
        Ce = en.call(this, Ut);
      } catch (_t) {
        return Promise.reject(_t);
      }
      for (Re = 0, Je = Se.length; Re < Je; ) Ce = Ce.then(Se[Re++], Se[Re++]);
      return Ce;
    }
    getUri(Ye) {
      Ye = Ot(this.defaults, Ye);
      const bt = rt(Ye.baseURL, Ye.url, Ye.allowAbsoluteUrls);
      return Ne(bt, Ye.params, Ye.paramsSerializer);
    }
  }
  ee.forEach(["delete", "get", "head", "options"], function(Ye) {
    Cr.prototype[Ye] = function(bt, xt) {
      return this.request(Ot(xt || {}, { method: Ye, url: bt, data: (xt || {}).data }));
    };
  }), ee.forEach(["post", "put", "patch"], function(Ye) {
    function bt(xt) {
      return function(fr, M, G) {
        return this.request(Ot(G || {}, { method: Ye, headers: xt ? { "Content-Type": "multipart/form-data" } : {}, url: fr, data: M }));
      };
    }
    Cr.prototype[Ye] = bt(), Cr.prototype[Ye + "Form"] = bt(true);
  });
  var Wr = Cr;
  class Qr {
    constructor(Ye) {
      if (typeof Ye != "function") throw new TypeError("executor must be a function.");
      let bt;
      this.promise = new Promise(function(fr) {
        bt = fr;
      });
      const xt = this;
      this.promise.then(($t) => {
        if (!xt._listeners) return;
        let fr = xt._listeners.length;
        for (; fr-- > 0; ) xt._listeners[fr]($t);
        xt._listeners = null;
      }), this.promise.then = ($t) => {
        let fr;
        const M = new Promise((G) => {
          xt.subscribe(G), fr = G;
        }).then($t);
        return M.cancel = function() {
          xt.unsubscribe(fr);
        }, M;
      }, Ye(function(fr, M, G) {
        xt.reason || (xt.reason = new Mr(fr, M, G), bt(xt.reason));
      });
    }
    throwIfRequested() {
      if (this.reason) throw this.reason;
    }
    subscribe(Ye) {
      if (this.reason) {
        Ye(this.reason);
        return;
      }
      this._listeners ? this._listeners.push(Ye) : this._listeners = [Ye];
    }
    unsubscribe(Ye) {
      if (!this._listeners) return;
      const bt = this._listeners.indexOf(Ye);
      bt !== -1 && this._listeners.splice(bt, 1);
    }
    toAbortSignal() {
      const Ye = new AbortController(), bt = (xt) => {
        Ye.abort(xt);
      };
      return this.subscribe(bt), Ye.signal.unsubscribe = () => this.unsubscribe(bt), Ye.signal;
    }
    static source() {
      let Ye;
      return { token: new Qr(function($t) {
        Ye = $t;
      }), cancel: Ye };
    }
  }
  var dn = Qr;
  function wn(Xe) {
    return function(bt) {
      return Xe.apply(null, bt);
    };
  }
  function yn(Xe) {
    return ee.isObject(Xe) && Xe.isAxiosError === true;
  }
  const pi = { Continue: 100, SwitchingProtocols: 101, Processing: 102, EarlyHints: 103, Ok: 200, Created: 201, Accepted: 202, NonAuthoritativeInformation: 203, NoContent: 204, ResetContent: 205, PartialContent: 206, MultiStatus: 207, AlreadyReported: 208, ImUsed: 226, MultipleChoices: 300, MovedPermanently: 301, Found: 302, SeeOther: 303, NotModified: 304, UseProxy: 305, Unused: 306, TemporaryRedirect: 307, PermanentRedirect: 308, BadRequest: 400, Unauthorized: 401, PaymentRequired: 402, Forbidden: 403, NotFound: 404, MethodNotAllowed: 405, NotAcceptable: 406, ProxyAuthenticationRequired: 407, RequestTimeout: 408, Conflict: 409, Gone: 410, LengthRequired: 411, PreconditionFailed: 412, PayloadTooLarge: 413, UriTooLong: 414, UnsupportedMediaType: 415, RangeNotSatisfiable: 416, ExpectationFailed: 417, ImATeapot: 418, MisdirectedRequest: 421, UnprocessableEntity: 422, Locked: 423, FailedDependency: 424, TooEarly: 425, UpgradeRequired: 426, PreconditionRequired: 428, TooManyRequests: 429, RequestHeaderFieldsTooLarge: 431, UnavailableForLegalReasons: 451, InternalServerError: 500, NotImplemented: 501, BadGateway: 502, ServiceUnavailable: 503, GatewayTimeout: 504, HttpVersionNotSupported: 505, VariantAlsoNegotiates: 506, InsufficientStorage: 507, LoopDetected: 508, NotExtended: 510, NetworkAuthenticationRequired: 511 };
  Object.entries(pi).forEach(([Xe, Ye]) => {
    pi[Ye] = Xe;
  });
  var Bi = pi;
  function Ni(Xe) {
    const Ye = new Wr(Xe), bt = v(Wr.prototype.request, Ye);
    return ee.extend(bt, Wr.prototype, Ye, { allOwnKeys: true }), ee.extend(bt, Ye, null, { allOwnKeys: true }), bt.create = function($t) {
      return Ni(Ot(Xe, $t));
    }, bt;
  }
  const Un = Ni(nt);
  return Un.Axios = Wr, Un.CanceledError = Mr, Un.CancelToken = dn, Un.isCancel = Tr, Un.VERSION = Me, Un.toFormData = Y, Un.AxiosError = P, Un.Cancel = Un.CanceledError, Un.all = function(Ye) {
    return Promise.all(Ye);
  }, Un.spread = wn, Un.isAxiosError = yn, Un.mergeConfig = Ot, Un.AxiosHeaders = sr, Un.formToJSON = (Xe) => le(ee.isHTMLForm(Xe) ? new FormData(Xe) : Xe), Un.getAdapter = Vt.getAdapter, Un.HttpStatusCode = Bi, Un.default = Un, Qc = Un, Qc;
}
var ph;
function bg() {
  if (ph) return qo;
  ph = 1, Object.defineProperty(qo, "__esModule", { value: true }), qo.create = qo.axiosClient = void 0;
  var v = e(vg());
  function e(n) {
    return n && n.__esModule ? n : { default: n };
  }
  return qo.axiosClient = v.default, qo.create = v.default.create, qo;
}
var hh;
function wg() {
  return hh || (hh = 1, function(v) {
    Object.defineProperty(v, "__esModule", { value: true });
    var e = { httpClient: true, create: true };
    v.httpClient = v.create = void 0;
    var n = gg();
    Object.keys(n).forEach(function(u) {
      u === "default" || u === "__esModule" || Object.prototype.hasOwnProperty.call(e, u) || u in v && v[u] === n[u] || Object.defineProperty(v, u, { enumerable: true, get: function() {
        return n[u];
      } });
    });
    {
      var i = bg();
      v.httpClient = i.axiosClient, v.create = i.create;
    }
  }(Yc)), Yc;
}
var dh;
function rf() {
  if (dh) return uo;
  dh = 1, Object.defineProperty(uo, "__esModule", { value: true }), uo.version = uo.default = uo.AxiosClient = void 0;
  var v = wg(), e = uo.version = "13.2.0", n = uo.AxiosClient = (0, v.create)({ headers: { "X-Client-Name": "js-soroban-client", "X-Client-Version": e } });
  return uo.default = n, uo;
}
var Eu = {}, mh;
function Sg() {
  if (mh) return Eu;
  mh = 1, Object.defineProperty(Eu, "__esModule", { value: true }), Eu.postObject = o;
  var v = e(rf());
  function e(c) {
    return c && c.__esModule ? c : { default: c };
  }
  function n(c) {
    "@babel/helpers - typeof";
    return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(h) {
      return typeof h;
    } : function(h) {
      return h && typeof Symbol == "function" && h.constructor === Symbol && h !== Symbol.prototype ? "symbol" : typeof h;
    }, n(c);
  }
  function i() {
    i = function() {
      return h;
    };
    var c, h = {}, f = Object.prototype, r = f.hasOwnProperty, m = Object.defineProperty || function(ne, K, ie) {
      ne[K] = ie.value;
    }, g = typeof Symbol == "function" ? Symbol : {}, a = g.iterator || "@@iterator", l = g.asyncIterator || "@@asyncIterator", d = g.toStringTag || "@@toStringTag";
    function b(ne, K, ie) {
      return Object.defineProperty(ne, K, { value: ie, enumerable: true, configurable: true, writable: true }), ne[K];
    }
    try {
      b({}, "");
    } catch {
      b = function(ie, ce, ye) {
        return ie[ce] = ye;
      };
    }
    function S(ne, K, ie, ce) {
      var ye = K && K.prototype instanceof q ? K : q, oe = Object.create(ye.prototype), se = new B(ce || []);
      return m(oe, "_invoke", { value: ue(ne, ie, se) }), oe;
    }
    function E(ne, K, ie) {
      try {
        return { type: "normal", arg: ne.call(K, ie) };
      } catch (ce) {
        return { type: "throw", arg: ce };
      }
    }
    h.wrap = S;
    var R = "suspendedStart", k = "suspendedYield", w = "executing", F = "completed", I = {};
    function q() {
    }
    function N() {
    }
    function H() {
    }
    var _ = {};
    b(_, a, function() {
      return this;
    });
    var x = Object.getPrototypeOf, L = x && x(x(Q([])));
    L && L !== f && r.call(L, a) && (_ = L);
    var j = H.prototype = q.prototype = Object.create(_);
    function z(ne) {
      ["next", "throw", "return"].forEach(function(K) {
        b(ne, K, function(ie) {
          return this._invoke(K, ie);
        });
      });
    }
    function Z(ne, K) {
      function ie(ye, oe, se, re) {
        var ge = E(ne[ye], ne, oe);
        if (ge.type !== "throw") {
          var Te = ge.arg, pe = Te.value;
          return pe && n(pe) == "object" && r.call(pe, "__await") ? K.resolve(pe.__await).then(function(Oe) {
            ie("next", Oe, se, re);
          }, function(Oe) {
            ie("throw", Oe, se, re);
          }) : K.resolve(pe).then(function(Oe) {
            Te.value = Oe, se(Te);
          }, function(Oe) {
            return ie("throw", Oe, se, re);
          });
        }
        re(ge.arg);
      }
      var ce;
      m(this, "_invoke", { value: function(oe, se) {
        function re() {
          return new K(function(ge, Te) {
            ie(oe, se, ge, Te);
          });
        }
        return ce = ce ? ce.then(re, re) : re();
      } });
    }
    function ue(ne, K, ie) {
      var ce = R;
      return function(ye, oe) {
        if (ce === w) throw Error("Generator is already running");
        if (ce === F) {
          if (ye === "throw") throw oe;
          return { value: c, done: true };
        }
        for (ie.method = ye, ie.arg = oe; ; ) {
          var se = ie.delegate;
          if (se) {
            var re = $(se, ie);
            if (re) {
              if (re === I) continue;
              return re;
            }
          }
          if (ie.method === "next") ie.sent = ie._sent = ie.arg;
          else if (ie.method === "throw") {
            if (ce === R) throw ce = F, ie.arg;
            ie.dispatchException(ie.arg);
          } else ie.method === "return" && ie.abrupt("return", ie.arg);
          ce = w;
          var ge = E(ne, K, ie);
          if (ge.type === "normal") {
            if (ce = ie.done ? F : k, ge.arg === I) continue;
            return { value: ge.arg, done: ie.done };
          }
          ge.type === "throw" && (ce = F, ie.method = "throw", ie.arg = ge.arg);
        }
      };
    }
    function $(ne, K) {
      var ie = K.method, ce = ne.iterator[ie];
      if (ce === c) return K.delegate = null, ie === "throw" && ne.iterator.return && (K.method = "return", K.arg = c, $(ne, K), K.method === "throw") || ie !== "return" && (K.method = "throw", K.arg = new TypeError("The iterator does not provide a '" + ie + "' method")), I;
      var ye = E(ce, ne.iterator, K.arg);
      if (ye.type === "throw") return K.method = "throw", K.arg = ye.arg, K.delegate = null, I;
      var oe = ye.arg;
      return oe ? oe.done ? (K[ne.resultName] = oe.value, K.next = ne.nextLoc, K.method !== "return" && (K.method = "next", K.arg = c), K.delegate = null, I) : oe : (K.method = "throw", K.arg = new TypeError("iterator result is not an object"), K.delegate = null, I);
    }
    function X(ne) {
      var K = { tryLoc: ne[0] };
      1 in ne && (K.catchLoc = ne[1]), 2 in ne && (K.finallyLoc = ne[2], K.afterLoc = ne[3]), this.tryEntries.push(K);
    }
    function J(ne) {
      var K = ne.completion || {};
      K.type = "normal", delete K.arg, ne.completion = K;
    }
    function B(ne) {
      this.tryEntries = [{ tryLoc: "root" }], ne.forEach(X, this), this.reset(true);
    }
    function Q(ne) {
      if (ne || ne === "") {
        var K = ne[a];
        if (K) return K.call(ne);
        if (typeof ne.next == "function") return ne;
        if (!isNaN(ne.length)) {
          var ie = -1, ce = function ye() {
            for (; ++ie < ne.length; ) if (r.call(ne, ie)) return ye.value = ne[ie], ye.done = false, ye;
            return ye.value = c, ye.done = true, ye;
          };
          return ce.next = ce;
        }
      }
      throw new TypeError(n(ne) + " is not iterable");
    }
    return N.prototype = H, m(j, "constructor", { value: H, configurable: true }), m(H, "constructor", { value: N, configurable: true }), N.displayName = b(H, d, "GeneratorFunction"), h.isGeneratorFunction = function(ne) {
      var K = typeof ne == "function" && ne.constructor;
      return !!K && (K === N || (K.displayName || K.name) === "GeneratorFunction");
    }, h.mark = function(ne) {
      return Object.setPrototypeOf ? Object.setPrototypeOf(ne, H) : (ne.__proto__ = H, b(ne, d, "GeneratorFunction")), ne.prototype = Object.create(j), ne;
    }, h.awrap = function(ne) {
      return { __await: ne };
    }, z(Z.prototype), b(Z.prototype, l, function() {
      return this;
    }), h.AsyncIterator = Z, h.async = function(ne, K, ie, ce, ye) {
      ye === void 0 && (ye = Promise);
      var oe = new Z(S(ne, K, ie, ce), ye);
      return h.isGeneratorFunction(K) ? oe : oe.next().then(function(se) {
        return se.done ? se.value : oe.next();
      });
    }, z(j), b(j, d, "Generator"), b(j, a, function() {
      return this;
    }), b(j, "toString", function() {
      return "[object Generator]";
    }), h.keys = function(ne) {
      var K = Object(ne), ie = [];
      for (var ce in K) ie.push(ce);
      return ie.reverse(), function ye() {
        for (; ie.length; ) {
          var oe = ie.pop();
          if (oe in K) return ye.value = oe, ye.done = false, ye;
        }
        return ye.done = true, ye;
      };
    }, h.values = Q, B.prototype = { constructor: B, reset: function(K) {
      if (this.prev = 0, this.next = 0, this.sent = this._sent = c, this.done = false, this.delegate = null, this.method = "next", this.arg = c, this.tryEntries.forEach(J), !K) for (var ie in this) ie.charAt(0) === "t" && r.call(this, ie) && !isNaN(+ie.slice(1)) && (this[ie] = c);
    }, stop: function() {
      this.done = true;
      var K = this.tryEntries[0].completion;
      if (K.type === "throw") throw K.arg;
      return this.rval;
    }, dispatchException: function(K) {
      if (this.done) throw K;
      var ie = this;
      function ce(Te, pe) {
        return se.type = "throw", se.arg = K, ie.next = Te, pe && (ie.method = "next", ie.arg = c), !!pe;
      }
      for (var ye = this.tryEntries.length - 1; ye >= 0; --ye) {
        var oe = this.tryEntries[ye], se = oe.completion;
        if (oe.tryLoc === "root") return ce("end");
        if (oe.tryLoc <= this.prev) {
          var re = r.call(oe, "catchLoc"), ge = r.call(oe, "finallyLoc");
          if (re && ge) {
            if (this.prev < oe.catchLoc) return ce(oe.catchLoc, true);
            if (this.prev < oe.finallyLoc) return ce(oe.finallyLoc);
          } else if (re) {
            if (this.prev < oe.catchLoc) return ce(oe.catchLoc, true);
          } else {
            if (!ge) throw Error("try statement without catch or finally");
            if (this.prev < oe.finallyLoc) return ce(oe.finallyLoc);
          }
        }
      }
    }, abrupt: function(K, ie) {
      for (var ce = this.tryEntries.length - 1; ce >= 0; --ce) {
        var ye = this.tryEntries[ce];
        if (ye.tryLoc <= this.prev && r.call(ye, "finallyLoc") && this.prev < ye.finallyLoc) {
          var oe = ye;
          break;
        }
      }
      oe && (K === "break" || K === "continue") && oe.tryLoc <= ie && ie <= oe.finallyLoc && (oe = null);
      var se = oe ? oe.completion : {};
      return se.type = K, se.arg = ie, oe ? (this.method = "next", this.next = oe.finallyLoc, I) : this.complete(se);
    }, complete: function(K, ie) {
      if (K.type === "throw") throw K.arg;
      return K.type === "break" || K.type === "continue" ? this.next = K.arg : K.type === "return" ? (this.rval = this.arg = K.arg, this.method = "return", this.next = "end") : K.type === "normal" && ie && (this.next = ie), I;
    }, finish: function(K) {
      for (var ie = this.tryEntries.length - 1; ie >= 0; --ie) {
        var ce = this.tryEntries[ie];
        if (ce.finallyLoc === K) return this.complete(ce.completion, ce.afterLoc), J(ce), I;
      }
    }, catch: function(K) {
      for (var ie = this.tryEntries.length - 1; ie >= 0; --ie) {
        var ce = this.tryEntries[ie];
        if (ce.tryLoc === K) {
          var ye = ce.completion;
          if (ye.type === "throw") {
            var oe = ye.arg;
            J(ce);
          }
          return oe;
        }
      }
      throw Error("illegal catch attempt");
    }, delegateYield: function(K, ie, ce) {
      return this.delegate = { iterator: Q(K), resultName: ie, nextLoc: ce }, this.method === "next" && (this.arg = c), I;
    } }, h;
  }
  function u(c, h, f, r, m, g, a) {
    try {
      var l = c[g](a), d = l.value;
    } catch (b) {
      return void f(b);
    }
    l.done ? h(d) : Promise.resolve(d).then(r, m);
  }
  function y(c) {
    return function() {
      var h = this, f = arguments;
      return new Promise(function(r, m) {
        var g = c.apply(h, f);
        function a(d) {
          u(g, r, m, a, l, "next", d);
        }
        function l(d) {
          u(g, r, m, a, l, "throw", d);
        }
        a(void 0);
      });
    };
  }
  function t(c, h) {
    return c.hasOwnProperty(h);
  }
  function o(c, h) {
    return s.apply(this, arguments);
  }
  function s() {
    return s = y(i().mark(function c(h, f) {
      var r, m, g, a = arguments;
      return i().wrap(function(d) {
        for (; ; ) switch (d.prev = d.next) {
          case 0:
            return r = a.length > 2 && a[2] !== void 0 ? a[2] : null, d.next = 3, v.default.post(h, { jsonrpc: "2.0", id: 1, method: f, params: r });
          case 3:
            if (m = d.sent, !t(m.data, "error")) {
              d.next = 8;
              break;
            }
            throw m.data.error;
          case 8:
            return d.abrupt("return", (g = m.data) === null || g === void 0 ? void 0 : g.result);
          case 9:
          case "end":
            return d.stop();
        }
      }, c);
    })), s.apply(this, arguments);
  }
  return Eu;
}
var Au = {}, co = {}, yh;
function nf() {
  if (yh) return co;
  yh = 1, Object.defineProperty(co, "__esModule", { value: true }), co.parseRawEvents = f, co.parseRawLedgerEntries = r, co.parseRawSendTransaction = s, co.parseRawSimulation = g, co.parseRawTransactions = h, co.parseTransactionInfo = c;
  var v = To(), e = Ra();
  function n(a) {
    "@babel/helpers - typeof";
    return n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(l) {
      return typeof l;
    } : function(l) {
      return l && typeof Symbol == "function" && l.constructor === Symbol && l !== Symbol.prototype ? "symbol" : typeof l;
    }, n(a);
  }
  function i(a, l) {
    var d = Object.keys(a);
    if (Object.getOwnPropertySymbols) {
      var b = Object.getOwnPropertySymbols(a);
      l && (b = b.filter(function(S) {
        return Object.getOwnPropertyDescriptor(a, S).enumerable;
      })), d.push.apply(d, b);
    }
    return d;
  }
  function u(a) {
    for (var l = 1; l < arguments.length; l++) {
      var d = arguments[l] != null ? arguments[l] : {};
      l % 2 ? i(Object(d), true).forEach(function(b) {
        y(a, b, d[b]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(a, Object.getOwnPropertyDescriptors(d)) : i(Object(d)).forEach(function(b) {
        Object.defineProperty(a, b, Object.getOwnPropertyDescriptor(d, b));
      });
    }
    return a;
  }
  function y(a, l, d) {
    return (l = t(l)) in a ? Object.defineProperty(a, l, { value: d, enumerable: true, configurable: true, writable: true }) : a[l] = d, a;
  }
  function t(a) {
    var l = o(a, "string");
    return n(l) == "symbol" ? l : l + "";
  }
  function o(a, l) {
    if (n(a) != "object" || !a) return a;
    var d = a[Symbol.toPrimitive];
    if (d !== void 0) {
      var b = d.call(a, l);
      if (n(b) != "object") return b;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (l === "string" ? String : Number)(a);
  }
  function s(a) {
    var l = a.errorResultXdr, d = a.diagnosticEventsXdr;
    return delete a.errorResultXdr, delete a.diagnosticEventsXdr, l ? u(u(u({}, a), d !== void 0 && d.length > 0 && { diagnosticEvents: d.map(function(b) {
      return v.xdr.DiagnosticEvent.fromXDR(b, "base64");
    }) }), {}, { errorResult: v.xdr.TransactionResult.fromXDR(l, "base64") }) : u({}, a);
  }
  function c(a) {
    var l = v.xdr.TransactionMeta.fromXDR(a.resultMetaXdr, "base64"), d = { ledger: a.ledger, createdAt: a.createdAt, applicationOrder: a.applicationOrder, feeBump: a.feeBump, envelopeXdr: v.xdr.TransactionEnvelope.fromXDR(a.envelopeXdr, "base64"), resultXdr: v.xdr.TransactionResult.fromXDR(a.resultXdr, "base64"), resultMetaXdr: l };
    if (l.switch() === 3 && l.v3().sorobanMeta() !== null) {
      var b;
      d.returnValue = (b = l.v3().sorobanMeta()) === null || b === void 0 ? void 0 : b.returnValue();
    }
    return "diagnosticEventsXdr" in a && a.diagnosticEventsXdr && (d.diagnosticEventsXdr = a.diagnosticEventsXdr.map(function(S) {
      return v.xdr.DiagnosticEvent.fromXDR(S, "base64");
    })), d;
  }
  function h(a) {
    return u({ status: a.status, txHash: a.txHash }, c(a));
  }
  function f(a) {
    var l;
    return { latestLedger: a.latestLedger, cursor: a.cursor, events: ((l = a.events) !== null && l !== void 0 ? l : []).map(function(d) {
      var b = u({}, d);
      return delete b.contractId, u(u(u({}, b), d.contractId !== "" && { contractId: new v.Contract(d.contractId) }), {}, { topic: d.topic.map(function(S) {
        return v.xdr.ScVal.fromXDR(S, "base64");
      }), value: v.xdr.ScVal.fromXDR(d.value, "base64") });
    }) };
  }
  function r(a) {
    var l;
    return { latestLedger: a.latestLedger, entries: ((l = a.entries) !== null && l !== void 0 ? l : []).map(function(d) {
      if (!d.key || !d.xdr) throw new TypeError("invalid ledger entry: ".concat(JSON.stringify(d)));
      return u({ lastModifiedLedgerSeq: d.lastModifiedLedgerSeq, key: v.xdr.LedgerKey.fromXDR(d.key, "base64"), val: v.xdr.LedgerEntryData.fromXDR(d.xdr, "base64") }, d.liveUntilLedgerSeq !== void 0 && { liveUntilLedgerSeq: d.liveUntilLedgerSeq });
    }) };
  }
  function m(a, l) {
    var d, b, S, E, R, k = u(u(u({}, l), {}, { transactionData: new v.SorobanDataBuilder(a.transactionData), minResourceFee: a.minResourceFee }, ((d = (b = a.results) === null || b === void 0 ? void 0 : b.length) !== null && d !== void 0 ? d : false) && { result: a.results.map(function(w) {
      var F;
      return { auth: ((F = w.auth) !== null && F !== void 0 ? F : []).map(function(I) {
        return v.xdr.SorobanAuthorizationEntry.fromXDR(I, "base64");
      }), retval: w.xdr ? v.xdr.ScVal.fromXDR(w.xdr, "base64") : v.xdr.ScVal.scvVoid() };
    })[0] }), ((S = (E = a.stateChanges) === null || E === void 0 ? void 0 : E.length) !== null && S !== void 0 ? S : false) && { stateChanges: (R = a.stateChanges) === null || R === void 0 ? void 0 : R.map(function(w) {
      return { type: w.type, key: v.xdr.LedgerKey.fromXDR(w.key, "base64"), before: w.before ? v.xdr.LedgerEntry.fromXDR(w.before, "base64") : null, after: w.after ? v.xdr.LedgerEntry.fromXDR(w.after, "base64") : null };
    }) });
    return !a.restorePreamble || a.restorePreamble.transactionData === "" ? k : u(u({}, k), {}, { restorePreamble: { minResourceFee: a.restorePreamble.minResourceFee, transactionData: new v.SorobanDataBuilder(a.restorePreamble.transactionData) } });
  }
  function g(a) {
    var l, d, b = e.Api.isSimulationRaw(a);
    if (!b) return a;
    var S = { _parsed: true, id: a.id, latestLedger: a.latestLedger, events: (l = (d = a.events) === null || d === void 0 ? void 0 : d.map(function(E) {
      return v.xdr.DiagnosticEvent.fromXDR(E, "base64");
    })) !== null && l !== void 0 ? l : [] };
    return typeof a.error == "string" ? u(u({}, S), {}, { error: a.error }) : m(a, S);
  }
  return co;
}
var gh;
function of() {
  if (gh) return Au;
  gh = 1, Object.defineProperty(Au, "__esModule", { value: true }), Au.assembleTransaction = u;
  var v = To(), e = Ra(), n = nf();
  function i(y) {
    if (y.operations.length !== 1) return false;
    switch (y.operations[0].type) {
      case "invokeHostFunction":
      case "extendFootprintTtl":
      case "restoreFootprint":
        return true;
      default:
        return false;
    }
  }
  function u(y, t) {
    if ("innerTransaction" in y) return u(y.innerTransaction, t);
    if (!i(y)) throw new TypeError("unsupported transaction: must contain exactly one invokeHostFunction, extendFootprintTtl, or restoreFootprint operation");
    var o = (0, n.parseRawSimulation)(t);
    if (!e.Api.isSimulationSuccess(o)) throw new Error("simulation incorrect: ".concat(JSON.stringify(o)));
    var s = parseInt(y.fee) || 0, c = parseInt(o.minResourceFee) || 0, h = v.TransactionBuilder.cloneFrom(y, { fee: (s + c).toString(), sorobanData: o.transactionData.build(), networkPassphrase: y.networkPassphrase });
    if (y.operations[0].type === "invokeHostFunction") {
      var f;
      h.clearOperations();
      var r = y.operations[0], m = (f = r.auth) !== null && f !== void 0 ? f : [];
      h.addOperation(v.Operation.invokeHostFunction({ source: r.source, func: r.func, auth: m.length > 0 ? m : o.result.auth }));
    }
    return h;
  }
  return Au;
}
var ms = {}, vh;
function _g() {
  if (vh) return ms;
  vh = 1, Object.defineProperty(ms, "__esModule", { value: true }), ms.Utils = void 0;
  function v(t) {
    "@babel/helpers - typeof";
    return v = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(o) {
      return typeof o;
    } : function(o) {
      return o && typeof Symbol == "function" && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, v(t);
  }
  function e(t, o) {
    if (!(t instanceof o)) throw new TypeError("Cannot call a class as a function");
  }
  function n(t, o) {
    for (var s = 0; s < o.length; s++) {
      var c = o[s];
      c.enumerable = c.enumerable || false, c.configurable = true, "value" in c && (c.writable = true), Object.defineProperty(t, u(c.key), c);
    }
  }
  function i(t, o, s) {
    return s && n(t, s), Object.defineProperty(t, "prototype", { writable: false }), t;
  }
  function u(t) {
    var o = y(t, "string");
    return v(o) == "symbol" ? o : o + "";
  }
  function y(t, o) {
    if (v(t) != "object" || !t) return t;
    var s = t[Symbol.toPrimitive];
    if (s !== void 0) {
      var c = s.call(t, o);
      if (v(c) != "object") return c;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return String(t);
  }
  return ms.Utils = function() {
    function t() {
      e(this, t);
    }
    return i(t, null, [{ key: "validateTimebounds", value: function(s) {
      var c = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
      if (!s.timeBounds) return false;
      var h = Math.floor(Date.now() / 1e3), f = s.timeBounds, r = f.minTime, m = f.maxTime;
      return h >= Number.parseInt(r, 10) - c && h <= Number.parseInt(m, 10) + c;
    } }, { key: "sleep", value: function(s) {
      return new Promise(function(c) {
        return setTimeout(c, s);
      });
    } }]);
  }(), ms;
}
var bh;
function Eg() {
  if (bh) return Ti;
  bh = 1, Object.defineProperty(Ti, "__esModule", { value: true }), Ti.SUBMIT_TRANSACTION_TIMEOUT = Ti.RpcServer = Ti.LinearSleepStrategy = Ti.Durability = Ti.BasicSleepStrategy = void 0;
  var v = h(Sy()), e = To(), n = h(rf()), i = c(Sg()), u = Ra(), y = of(), t = nf(), o = _g();
  function s(N) {
    if (typeof WeakMap != "function") return null;
    var H = /* @__PURE__ */ new WeakMap(), _ = /* @__PURE__ */ new WeakMap();
    return (s = function(L) {
      return L ? _ : H;
    })(N);
  }
  function c(N, H) {
    if (N && N.__esModule) return N;
    if (N === null || f(N) != "object" && typeof N != "function") return { default: N };
    var _ = s(H);
    if (_ && _.has(N)) return _.get(N);
    var x = { __proto__: null }, L = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for (var j in N) if (j !== "default" && {}.hasOwnProperty.call(N, j)) {
      var z = L ? Object.getOwnPropertyDescriptor(N, j) : null;
      z && (z.get || z.set) ? Object.defineProperty(x, j, z) : x[j] = N[j];
    }
    return x.default = N, _ && _.set(N, x), x;
  }
  function h(N) {
    return N && N.__esModule ? N : { default: N };
  }
  function f(N) {
    "@babel/helpers - typeof";
    return f = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(H) {
      return typeof H;
    } : function(H) {
      return H && typeof Symbol == "function" && H.constructor === Symbol && H !== Symbol.prototype ? "symbol" : typeof H;
    }, f(N);
  }
  function r(N, H) {
    var _ = Object.keys(N);
    if (Object.getOwnPropertySymbols) {
      var x = Object.getOwnPropertySymbols(N);
      H && (x = x.filter(function(L) {
        return Object.getOwnPropertyDescriptor(N, L).enumerable;
      })), _.push.apply(_, x);
    }
    return _;
  }
  function m(N) {
    for (var H = 1; H < arguments.length; H++) {
      var _ = arguments[H] != null ? arguments[H] : {};
      H % 2 ? r(Object(_), true).forEach(function(x) {
        g(N, x, _[x]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(N, Object.getOwnPropertyDescriptors(_)) : r(Object(_)).forEach(function(x) {
        Object.defineProperty(N, x, Object.getOwnPropertyDescriptor(_, x));
      });
    }
    return N;
  }
  function g(N, H, _) {
    return (H = R(H)) in N ? Object.defineProperty(N, H, { value: _, enumerable: true, configurable: true, writable: true }) : N[H] = _, N;
  }
  function a() {
    a = function() {
      return H;
    };
    var N, H = {}, _ = Object.prototype, x = _.hasOwnProperty, L = Object.defineProperty || function(P, T, O) {
      P[T] = O.value;
    }, j = typeof Symbol == "function" ? Symbol : {}, z = j.iterator || "@@iterator", Z = j.asyncIterator || "@@asyncIterator", ue = j.toStringTag || "@@toStringTag";
    function $(P, T, O) {
      return Object.defineProperty(P, T, { value: O, enumerable: true, configurable: true, writable: true }), P[T];
    }
    try {
      $({}, "");
    } catch {
      $ = function(O, V, D) {
        return O[V] = D;
      };
    }
    function X(P, T, O, V) {
      var D = T && T.prototype instanceof ce ? T : ce, C = Object.create(D.prototype), p = new Qe(V || []);
      return L(C, "_invoke", { value: xe(P, O, p) }), C;
    }
    function J(P, T, O) {
      try {
        return { type: "normal", arg: P.call(T, O) };
      } catch (V) {
        return { type: "throw", arg: V };
      }
    }
    H.wrap = X;
    var B = "suspendedStart", Q = "suspendedYield", ne = "executing", K = "completed", ie = {};
    function ce() {
    }
    function ye() {
    }
    function oe() {
    }
    var se = {};
    $(se, z, function() {
      return this;
    });
    var re = Object.getPrototypeOf, ge = re && re(re(ee([])));
    ge && ge !== _ && x.call(ge, z) && (se = ge);
    var Te = oe.prototype = ce.prototype = Object.create(se);
    function pe(P) {
      ["next", "throw", "return"].forEach(function(T) {
        $(P, T, function(O) {
          return this._invoke(T, O);
        });
      });
    }
    function Oe(P, T) {
      function O(D, C, p, A) {
        var U = J(P[D], P, C);
        if (U.type !== "throw") {
          var Y = U.arg, ae = Y.value;
          return ae && f(ae) == "object" && x.call(ae, "__await") ? T.resolve(ae.__await).then(function(W) {
            O("next", W, p, A);
          }, function(W) {
            O("throw", W, p, A);
          }) : T.resolve(ae).then(function(W) {
            Y.value = W, p(Y);
          }, function(W) {
            return O("throw", W, p, A);
          });
        }
        A(U.arg);
      }
      var V;
      L(this, "_invoke", { value: function(C, p) {
        function A() {
          return new T(function(U, Y) {
            O(C, p, U, Y);
          });
        }
        return V = V ? V.then(A, A) : A();
      } });
    }
    function xe(P, T, O) {
      var V = B;
      return function(D, C) {
        if (V === ne) throw Error("Generator is already running");
        if (V === K) {
          if (D === "throw") throw C;
          return { value: N, done: true };
        }
        for (O.method = D, O.arg = C; ; ) {
          var p = O.delegate;
          if (p) {
            var A = Ve(p, O);
            if (A) {
              if (A === ie) continue;
              return A;
            }
          }
          if (O.method === "next") O.sent = O._sent = O.arg;
          else if (O.method === "throw") {
            if (V === B) throw V = K, O.arg;
            O.dispatchException(O.arg);
          } else O.method === "return" && O.abrupt("return", O.arg);
          V = ne;
          var U = J(P, T, O);
          if (U.type === "normal") {
            if (V = O.done ? K : Q, U.arg === ie) continue;
            return { value: U.arg, done: O.done };
          }
          U.type === "throw" && (V = K, O.method = "throw", O.arg = U.arg);
        }
      };
    }
    function Ve(P, T) {
      var O = T.method, V = P.iterator[O];
      if (V === N) return T.delegate = null, O === "throw" && P.iterator.return && (T.method = "return", T.arg = N, Ve(P, T), T.method === "throw") || O !== "return" && (T.method = "throw", T.arg = new TypeError("The iterator does not provide a '" + O + "' method")), ie;
      var D = J(V, P.iterator, T.arg);
      if (D.type === "throw") return T.method = "throw", T.arg = D.arg, T.delegate = null, ie;
      var C = D.arg;
      return C ? C.done ? (T[P.resultName] = C.value, T.next = P.nextLoc, T.method !== "return" && (T.method = "next", T.arg = N), T.delegate = null, ie) : C : (T.method = "throw", T.arg = new TypeError("iterator result is not an object"), T.delegate = null, ie);
    }
    function _e(P) {
      var T = { tryLoc: P[0] };
      1 in P && (T.catchLoc = P[1]), 2 in P && (T.finallyLoc = P[2], T.afterLoc = P[3]), this.tryEntries.push(T);
    }
    function Be(P) {
      var T = P.completion || {};
      T.type = "normal", delete T.arg, P.completion = T;
    }
    function Qe(P) {
      this.tryEntries = [{ tryLoc: "root" }], P.forEach(_e, this), this.reset(true);
    }
    function ee(P) {
      if (P || P === "") {
        var T = P[z];
        if (T) return T.call(P);
        if (typeof P.next == "function") return P;
        if (!isNaN(P.length)) {
          var O = -1, V = function D() {
            for (; ++O < P.length; ) if (x.call(P, O)) return D.value = P[O], D.done = false, D;
            return D.value = N, D.done = true, D;
          };
          return V.next = V;
        }
      }
      throw new TypeError(f(P) + " is not iterable");
    }
    return ye.prototype = oe, L(Te, "constructor", { value: oe, configurable: true }), L(oe, "constructor", { value: ye, configurable: true }), ye.displayName = $(oe, ue, "GeneratorFunction"), H.isGeneratorFunction = function(P) {
      var T = typeof P == "function" && P.constructor;
      return !!T && (T === ye || (T.displayName || T.name) === "GeneratorFunction");
    }, H.mark = function(P) {
      return Object.setPrototypeOf ? Object.setPrototypeOf(P, oe) : (P.__proto__ = oe, $(P, ue, "GeneratorFunction")), P.prototype = Object.create(Te), P;
    }, H.awrap = function(P) {
      return { __await: P };
    }, pe(Oe.prototype), $(Oe.prototype, Z, function() {
      return this;
    }), H.AsyncIterator = Oe, H.async = function(P, T, O, V, D) {
      D === void 0 && (D = Promise);
      var C = new Oe(X(P, T, O, V), D);
      return H.isGeneratorFunction(T) ? C : C.next().then(function(p) {
        return p.done ? p.value : C.next();
      });
    }, pe(Te), $(Te, ue, "Generator"), $(Te, z, function() {
      return this;
    }), $(Te, "toString", function() {
      return "[object Generator]";
    }), H.keys = function(P) {
      var T = Object(P), O = [];
      for (var V in T) O.push(V);
      return O.reverse(), function D() {
        for (; O.length; ) {
          var C = O.pop();
          if (C in T) return D.value = C, D.done = false, D;
        }
        return D.done = true, D;
      };
    }, H.values = ee, Qe.prototype = { constructor: Qe, reset: function(T) {
      if (this.prev = 0, this.next = 0, this.sent = this._sent = N, this.done = false, this.delegate = null, this.method = "next", this.arg = N, this.tryEntries.forEach(Be), !T) for (var O in this) O.charAt(0) === "t" && x.call(this, O) && !isNaN(+O.slice(1)) && (this[O] = N);
    }, stop: function() {
      this.done = true;
      var T = this.tryEntries[0].completion;
      if (T.type === "throw") throw T.arg;
      return this.rval;
    }, dispatchException: function(T) {
      if (this.done) throw T;
      var O = this;
      function V(Y, ae) {
        return p.type = "throw", p.arg = T, O.next = Y, ae && (O.method = "next", O.arg = N), !!ae;
      }
      for (var D = this.tryEntries.length - 1; D >= 0; --D) {
        var C = this.tryEntries[D], p = C.completion;
        if (C.tryLoc === "root") return V("end");
        if (C.tryLoc <= this.prev) {
          var A = x.call(C, "catchLoc"), U = x.call(C, "finallyLoc");
          if (A && U) {
            if (this.prev < C.catchLoc) return V(C.catchLoc, true);
            if (this.prev < C.finallyLoc) return V(C.finallyLoc);
          } else if (A) {
            if (this.prev < C.catchLoc) return V(C.catchLoc, true);
          } else {
            if (!U) throw Error("try statement without catch or finally");
            if (this.prev < C.finallyLoc) return V(C.finallyLoc);
          }
        }
      }
    }, abrupt: function(T, O) {
      for (var V = this.tryEntries.length - 1; V >= 0; --V) {
        var D = this.tryEntries[V];
        if (D.tryLoc <= this.prev && x.call(D, "finallyLoc") && this.prev < D.finallyLoc) {
          var C = D;
          break;
        }
      }
      C && (T === "break" || T === "continue") && C.tryLoc <= O && O <= C.finallyLoc && (C = null);
      var p = C ? C.completion : {};
      return p.type = T, p.arg = O, C ? (this.method = "next", this.next = C.finallyLoc, ie) : this.complete(p);
    }, complete: function(T, O) {
      if (T.type === "throw") throw T.arg;
      return T.type === "break" || T.type === "continue" ? this.next = T.arg : T.type === "return" ? (this.rval = this.arg = T.arg, this.method = "return", this.next = "end") : T.type === "normal" && O && (this.next = O), ie;
    }, finish: function(T) {
      for (var O = this.tryEntries.length - 1; O >= 0; --O) {
        var V = this.tryEntries[O];
        if (V.finallyLoc === T) return this.complete(V.completion, V.afterLoc), Be(V), ie;
      }
    }, catch: function(T) {
      for (var O = this.tryEntries.length - 1; O >= 0; --O) {
        var V = this.tryEntries[O];
        if (V.tryLoc === T) {
          var D = V.completion;
          if (D.type === "throw") {
            var C = D.arg;
            Be(V);
          }
          return C;
        }
      }
      throw Error("illegal catch attempt");
    }, delegateYield: function(T, O, V) {
      return this.delegate = { iterator: ee(T), resultName: O, nextLoc: V }, this.method === "next" && (this.arg = N), ie;
    } }, H;
  }
  function l(N, H, _, x, L, j, z) {
    try {
      var Z = N[j](z), ue = Z.value;
    } catch ($) {
      return void _($);
    }
    Z.done ? H(ue) : Promise.resolve(ue).then(x, L);
  }
  function d(N) {
    return function() {
      var H = this, _ = arguments;
      return new Promise(function(x, L) {
        var j = N.apply(H, _);
        function z(ue) {
          l(j, x, L, z, Z, "next", ue);
        }
        function Z(ue) {
          l(j, x, L, z, Z, "throw", ue);
        }
        z(void 0);
      });
    };
  }
  function b(N, H) {
    if (!(N instanceof H)) throw new TypeError("Cannot call a class as a function");
  }
  function S(N, H) {
    for (var _ = 0; _ < H.length; _++) {
      var x = H[_];
      x.enumerable = x.enumerable || false, x.configurable = true, "value" in x && (x.writable = true), Object.defineProperty(N, R(x.key), x);
    }
  }
  function E(N, H, _) {
    return H && S(N.prototype, H), Object.defineProperty(N, "prototype", { writable: false }), N;
  }
  function R(N) {
    var H = k(N, "string");
    return f(H) == "symbol" ? H : H + "";
  }
  function k(N, H) {
    if (f(N) != "object" || !N) return N;
    var _ = N[Symbol.toPrimitive];
    if (_ !== void 0) {
      var x = _.call(N, H);
      if (f(x) != "object") return x;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (H === "string" ? String : Number)(N);
  }
  Ti.SUBMIT_TRANSACTION_TIMEOUT = 60 * 1e3;
  var w = Ti.Durability = function(N) {
    return N.Temporary = "temporary", N.Persistent = "persistent", N;
  }({}), F = 30, I = Ti.BasicSleepStrategy = function(H) {
    return 1e3;
  };
  Ti.LinearSleepStrategy = function(H) {
    return 1e3 * H;
  };
  function q(N) {
    var H, _ = [];
    switch (N.switch()) {
      case 0:
        _ = N.operations();
        break;
      case 1:
      case 2:
      case 3:
        _ = N.value().operations();
        break;
      default:
        throw new Error("Unexpected transaction meta switch value");
    }
    var x = (H = _.flatMap(function(L) {
      return L.changes();
    }).find(function(L) {
      return L.switch() === e.xdr.LedgerEntryChangeType.ledgerEntryCreated() && L.created().data().switch() === e.xdr.LedgerEntryType.account();
    })) === null || H === void 0 || (H = H.created()) === null || H === void 0 || (H = H.data()) === null || H === void 0 || (H = H.account()) === null || H === void 0 || (H = H.seqNum()) === null || H === void 0 ? void 0 : H.toString();
    if (x) return x;
    throw new Error("No account created in transaction");
  }
  return Ti.RpcServer = function() {
    function N(H) {
      var _ = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      if (b(this, N), this.serverURL = (0, v.default)(H), _.headers && Object.keys(_.headers).length !== 0 && n.default.interceptors.request.use(function(x) {
        return x.headers = Object.assign(x.headers, _.headers), x;
      }), this.serverURL.protocol() !== "https" && !_.allowHttp) throw new Error("Cannot connect to insecure Soroban RPC server if `allowHttp` isn't set");
    }
    return E(N, [{ key: "getAccount", value: function() {
      var H = d(a().mark(function x(L) {
        var j, z, Z;
        return a().wrap(function($) {
          for (; ; ) switch ($.prev = $.next) {
            case 0:
              return j = e.xdr.LedgerKey.account(new e.xdr.LedgerKeyAccount({ accountId: e.Keypair.fromPublicKey(L).xdrPublicKey() })), $.next = 3, this.getLedgerEntries(j);
            case 3:
              if (z = $.sent, z.entries.length !== 0) {
                $.next = 6;
                break;
              }
              return $.abrupt("return", Promise.reject({ code: 404, message: "Account not found: ".concat(L) }));
            case 6:
              return Z = z.entries[0].val.account(), $.abrupt("return", new e.Account(L, Z.seqNum().toString()));
            case 8:
            case "end":
              return $.stop();
          }
        }, x, this);
      }));
      function _(x) {
        return H.apply(this, arguments);
      }
      return _;
    }() }, { key: "getHealth", value: function() {
      var H = d(a().mark(function x() {
        return a().wrap(function(j) {
          for (; ; ) switch (j.prev = j.next) {
            case 0:
              return j.abrupt("return", i.postObject(this.serverURL.toString(), "getHealth"));
            case 1:
            case "end":
              return j.stop();
          }
        }, x, this);
      }));
      function _() {
        return H.apply(this, arguments);
      }
      return _;
    }() }, { key: "getContractData", value: function() {
      var H = d(a().mark(function x(L, j) {
        var z, Z, ue, $, X = arguments;
        return a().wrap(function(B) {
          for (; ; ) switch (B.prev = B.next) {
            case 0:
              if (z = X.length > 2 && X[2] !== void 0 ? X[2] : w.Persistent, typeof L != "string") {
                B.next = 5;
                break;
              }
              Z = new e.Contract(L).address().toScAddress(), B.next = 14;
              break;
            case 5:
              if (!(L instanceof e.Address)) {
                B.next = 9;
                break;
              }
              Z = L.toScAddress(), B.next = 14;
              break;
            case 9:
              if (!(L instanceof e.Contract)) {
                B.next = 13;
                break;
              }
              Z = L.address().toScAddress(), B.next = 14;
              break;
            case 13:
              throw new TypeError("unknown contract type: ".concat(L));
            case 14:
              B.t0 = z, B.next = B.t0 === w.Temporary ? 17 : B.t0 === w.Persistent ? 19 : 21;
              break;
            case 17:
              return ue = e.xdr.ContractDataDurability.temporary(), B.abrupt("break", 22);
            case 19:
              return ue = e.xdr.ContractDataDurability.persistent(), B.abrupt("break", 22);
            case 21:
              throw new TypeError("invalid durability: ".concat(z));
            case 22:
              return $ = e.xdr.LedgerKey.contractData(new e.xdr.LedgerKeyContractData({ key: j, contract: Z, durability: ue })), B.abrupt("return", this.getLedgerEntries($).then(function(Q) {
                return Q.entries.length === 0 ? Promise.reject({ code: 404, message: "Contract data not found. Contract: ".concat(e.Address.fromScAddress(Z).toString(), ", Key: ").concat(j.toXDR("base64"), ", Durability: ").concat(z) }) : Q.entries[0];
              }));
            case 24:
            case "end":
              return B.stop();
          }
        }, x, this);
      }));
      function _(x, L) {
        return H.apply(this, arguments);
      }
      return _;
    }() }, { key: "getContractWasmByContractId", value: function() {
      var H = d(a().mark(function x(L) {
        var j, z, Z, ue;
        return a().wrap(function(X) {
          for (; ; ) switch (X.prev = X.next) {
            case 0:
              return z = new e.Contract(L).getFootprint(), X.next = 3, this.getLedgerEntries(z);
            case 3:
              if (Z = X.sent, !(!Z.entries.length || !((j = Z.entries[0]) !== null && j !== void 0 && j.val))) {
                X.next = 6;
                break;
              }
              return X.abrupt("return", Promise.reject({ code: 404, message: "Could not obtain contract hash from server" }));
            case 6:
              return ue = Z.entries[0].val.contractData().val().instance().executable().wasmHash(), X.abrupt("return", this.getContractWasmByHash(ue));
            case 8:
            case "end":
              return X.stop();
          }
        }, x, this);
      }));
      function _(x) {
        return H.apply(this, arguments);
      }
      return _;
    }() }, { key: "getContractWasmByHash", value: function() {
      var H = d(a().mark(function x(L) {
        var j, z, Z, ue, $, X, J = arguments;
        return a().wrap(function(Q) {
          for (; ; ) switch (Q.prev = Q.next) {
            case 0:
              return z = J.length > 1 && J[1] !== void 0 ? J[1] : void 0, Z = typeof L == "string" ? Buffer.from(L, z) : L, ue = e.xdr.LedgerKey.contractCode(new e.xdr.LedgerKeyContractCode({ hash: Z })), Q.next = 5, this.getLedgerEntries(ue);
            case 5:
              if ($ = Q.sent, !(!$.entries.length || !((j = $.entries[0]) !== null && j !== void 0 && j.val))) {
                Q.next = 8;
                break;
              }
              return Q.abrupt("return", Promise.reject({ code: 404, message: "Could not obtain contract wasm from server" }));
            case 8:
              return X = $.entries[0].val.contractCode().code(), Q.abrupt("return", X);
            case 10:
            case "end":
              return Q.stop();
          }
        }, x, this);
      }));
      function _(x) {
        return H.apply(this, arguments);
      }
      return _;
    }() }, { key: "getLedgerEntries", value: function() {
      var H = d(a().mark(function x() {
        var L = arguments;
        return a().wrap(function(z) {
          for (; ; ) switch (z.prev = z.next) {
            case 0:
              return z.abrupt("return", this._getLedgerEntries.apply(this, L).then(t.parseRawLedgerEntries));
            case 1:
            case "end":
              return z.stop();
          }
        }, x, this);
      }));
      function _() {
        return H.apply(this, arguments);
      }
      return _;
    }() }, { key: "_getLedgerEntries", value: function() {
      var H = d(a().mark(function x() {
        var L, j, z, Z = arguments;
        return a().wrap(function($) {
          for (; ; ) switch ($.prev = $.next) {
            case 0:
              for (L = Z.length, j = new Array(L), z = 0; z < L; z++) j[z] = Z[z];
              return $.abrupt("return", i.postObject(this.serverURL.toString(), "getLedgerEntries", { keys: j.map(function(X) {
                return X.toXDR("base64");
              }) }));
            case 2:
            case "end":
              return $.stop();
          }
        }, x, this);
      }));
      function _() {
        return H.apply(this, arguments);
      }
      return _;
    }() }, { key: "pollTransaction", value: function() {
      var H = d(a().mark(function x(L, j) {
        var z, Z, ue, $, X, J;
        return a().wrap(function(Q) {
          for (; ; ) switch (Q.prev = Q.next) {
            case 0:
              ue = ((z = j == null ? void 0 : j.attempts) !== null && z !== void 0 ? z : 0) < 1 ? F : (Z = j == null ? void 0 : j.attempts) !== null && Z !== void 0 ? Z : F, X = 1;
            case 2:
              if (!(X < ue)) {
                Q.next = 13;
                break;
              }
              return Q.next = 5, this.getTransaction(L);
            case 5:
              if ($ = Q.sent, $.status === u.Api.GetTransactionStatus.NOT_FOUND) {
                Q.next = 8;
                break;
              }
              return Q.abrupt("return", $);
            case 8:
              return Q.next = 10, o.Utils.sleep(((J = j == null ? void 0 : j.sleepStrategy) !== null && J !== void 0 ? J : I)(X));
            case 10:
              X++, Q.next = 2;
              break;
            case 13:
              return Q.abrupt("return", $);
            case 14:
            case "end":
              return Q.stop();
          }
        }, x, this);
      }));
      function _(x, L) {
        return H.apply(this, arguments);
      }
      return _;
    }() }, { key: "getTransaction", value: function() {
      var H = d(a().mark(function x(L) {
        return a().wrap(function(z) {
          for (; ; ) switch (z.prev = z.next) {
            case 0:
              return z.abrupt("return", this._getTransaction(L).then(function(Z) {
                var ue = {};
                Z.status !== u.Api.GetTransactionStatus.NOT_FOUND && Object.assign(ue, (0, t.parseTransactionInfo)(Z));
                var $ = m({ status: Z.status, txHash: L, latestLedger: Z.latestLedger, latestLedgerCloseTime: Z.latestLedgerCloseTime, oldestLedger: Z.oldestLedger, oldestLedgerCloseTime: Z.oldestLedgerCloseTime }, ue);
                return $;
              }));
            case 1:
            case "end":
              return z.stop();
          }
        }, x, this);
      }));
      function _(x) {
        return H.apply(this, arguments);
      }
      return _;
    }() }, { key: "_getTransaction", value: function() {
      var H = d(a().mark(function x(L) {
        return a().wrap(function(z) {
          for (; ; ) switch (z.prev = z.next) {
            case 0:
              return z.abrupt("return", i.postObject(this.serverURL.toString(), "getTransaction", { hash: L }));
            case 1:
            case "end":
              return z.stop();
          }
        }, x, this);
      }));
      function _(x) {
        return H.apply(this, arguments);
      }
      return _;
    }() }, { key: "getTransactions", value: function() {
      var H = d(a().mark(function x(L) {
        return a().wrap(function(z) {
          for (; ; ) switch (z.prev = z.next) {
            case 0:
              return z.abrupt("return", this._getTransactions(L).then(function(Z) {
                var ue = { transactions: Z.transactions.map(t.parseRawTransactions), latestLedger: Z.latestLedger, latestLedgerCloseTimestamp: Z.latestLedgerCloseTimestamp, oldestLedger: Z.oldestLedger, oldestLedgerCloseTimestamp: Z.oldestLedgerCloseTimestamp, cursor: Z.cursor };
                return ue;
              }));
            case 1:
            case "end":
              return z.stop();
          }
        }, x, this);
      }));
      function _(x) {
        return H.apply(this, arguments);
      }
      return _;
    }() }, { key: "_getTransactions", value: function() {
      var H = d(a().mark(function x(L) {
        return a().wrap(function(z) {
          for (; ; ) switch (z.prev = z.next) {
            case 0:
              return z.abrupt("return", i.postObject(this.serverURL.toString(), "getTransactions", L));
            case 1:
            case "end":
              return z.stop();
          }
        }, x, this);
      }));
      function _(x) {
        return H.apply(this, arguments);
      }
      return _;
    }() }, { key: "getEvents", value: function() {
      var H = d(a().mark(function x(L) {
        return a().wrap(function(z) {
          for (; ; ) switch (z.prev = z.next) {
            case 0:
              return z.abrupt("return", this._getEvents(L).then(t.parseRawEvents));
            case 1:
            case "end":
              return z.stop();
          }
        }, x, this);
      }));
      function _(x) {
        return H.apply(this, arguments);
      }
      return _;
    }() }, { key: "_getEvents", value: function() {
      var H = d(a().mark(function x(L) {
        var j;
        return a().wrap(function(Z) {
          for (; ; ) switch (Z.prev = Z.next) {
            case 0:
              return Z.abrupt("return", i.postObject(this.serverURL.toString(), "getEvents", m(m({ filters: (j = L.filters) !== null && j !== void 0 ? j : [], pagination: m(m({}, L.cursor && { cursor: L.cursor }), L.limit && { limit: L.limit }) }, L.startLedger && { startLedger: L.startLedger }), L.endLedger && { endLedger: L.endLedger })));
            case 1:
            case "end":
              return Z.stop();
          }
        }, x, this);
      }));
      function _(x) {
        return H.apply(this, arguments);
      }
      return _;
    }() }, { key: "getNetwork", value: function() {
      var H = d(a().mark(function x() {
        return a().wrap(function(j) {
          for (; ; ) switch (j.prev = j.next) {
            case 0:
              return j.abrupt("return", i.postObject(this.serverURL.toString(), "getNetwork"));
            case 1:
            case "end":
              return j.stop();
          }
        }, x, this);
      }));
      function _() {
        return H.apply(this, arguments);
      }
      return _;
    }() }, { key: "getLatestLedger", value: function() {
      var H = d(a().mark(function x() {
        return a().wrap(function(j) {
          for (; ; ) switch (j.prev = j.next) {
            case 0:
              return j.abrupt("return", i.postObject(this.serverURL.toString(), "getLatestLedger"));
            case 1:
            case "end":
              return j.stop();
          }
        }, x, this);
      }));
      function _() {
        return H.apply(this, arguments);
      }
      return _;
    }() }, { key: "simulateTransaction", value: function() {
      var H = d(a().mark(function x(L, j) {
        return a().wrap(function(Z) {
          for (; ; ) switch (Z.prev = Z.next) {
            case 0:
              return Z.abrupt("return", this._simulateTransaction(L, j).then(t.parseRawSimulation));
            case 1:
            case "end":
              return Z.stop();
          }
        }, x, this);
      }));
      function _(x, L) {
        return H.apply(this, arguments);
      }
      return _;
    }() }, { key: "_simulateTransaction", value: function() {
      var H = d(a().mark(function x(L, j) {
        return a().wrap(function(Z) {
          for (; ; ) switch (Z.prev = Z.next) {
            case 0:
              return Z.abrupt("return", i.postObject(this.serverURL.toString(), "simulateTransaction", m({ transaction: L.toXDR() }, j !== void 0 && { resourceConfig: { instructionLeeway: j.cpuInstructions } })));
            case 1:
            case "end":
              return Z.stop();
          }
        }, x, this);
      }));
      function _(x, L) {
        return H.apply(this, arguments);
      }
      return _;
    }() }, { key: "prepareTransaction", value: function() {
      var H = d(a().mark(function x(L) {
        var j;
        return a().wrap(function(Z) {
          for (; ; ) switch (Z.prev = Z.next) {
            case 0:
              return Z.next = 2, this.simulateTransaction(L);
            case 2:
              if (j = Z.sent, !u.Api.isSimulationError(j)) {
                Z.next = 5;
                break;
              }
              throw new Error(j.error);
            case 5:
              return Z.abrupt("return", (0, y.assembleTransaction)(L, j).build());
            case 6:
            case "end":
              return Z.stop();
          }
        }, x, this);
      }));
      function _(x) {
        return H.apply(this, arguments);
      }
      return _;
    }() }, { key: "sendTransaction", value: function() {
      var H = d(a().mark(function x(L) {
        return a().wrap(function(z) {
          for (; ; ) switch (z.prev = z.next) {
            case 0:
              return z.abrupt("return", this._sendTransaction(L).then(t.parseRawSendTransaction));
            case 1:
            case "end":
              return z.stop();
          }
        }, x, this);
      }));
      function _(x) {
        return H.apply(this, arguments);
      }
      return _;
    }() }, { key: "_sendTransaction", value: function() {
      var H = d(a().mark(function x(L) {
        return a().wrap(function(z) {
          for (; ; ) switch (z.prev = z.next) {
            case 0:
              return z.abrupt("return", i.postObject(this.serverURL.toString(), "sendTransaction", { transaction: L.toXDR() }));
            case 1:
            case "end":
              return z.stop();
          }
        }, x, this);
      }));
      function _(x) {
        return H.apply(this, arguments);
      }
      return _;
    }() }, { key: "requestAirdrop", value: function() {
      var H = d(a().mark(function x(L, j) {
        var z, Z, ue, $, X, J, B;
        return a().wrap(function(ne) {
          for (; ; ) switch (ne.prev = ne.next) {
            case 0:
              if (z = typeof L == "string" ? L : L.accountId(), ne.t0 = j, ne.t0) {
                ne.next = 6;
                break;
              }
              return ne.next = 5, this.getNetwork();
            case 5:
              ne.t0 = ne.sent.friendbotUrl;
            case 6:
              if (j = ne.t0, j) {
                ne.next = 9;
                break;
              }
              throw new Error("No friendbot URL configured for current network");
            case 9:
              return ne.prev = 9, ne.next = 12, n.default.post("".concat(j, "?addr=").concat(encodeURIComponent(z)));
            case 12:
              if (Z = ne.sent, Z.data.result_meta_xdr) {
                ne.next = 22;
                break;
              }
              return ne.next = 16, this.getTransaction(Z.data.hash);
            case 16:
              if ($ = ne.sent, $.status === u.Api.GetTransactionStatus.SUCCESS) {
                ne.next = 19;
                break;
              }
              throw new Error("Funding account ".concat(L, " failed"));
            case 19:
              ue = $.resultMetaXdr, ne.next = 23;
              break;
            case 22:
              ue = e.xdr.TransactionMeta.fromXDR(Z.data.result_meta_xdr, "base64");
            case 23:
              return X = q(ue), ne.abrupt("return", new e.Account(z, X));
            case 27:
              if (ne.prev = 27, ne.t1 = ne.catch(9), ((J = ne.t1.response) === null || J === void 0 ? void 0 : J.status) !== 400) {
                ne.next = 32;
                break;
              }
              if (!((B = ne.t1.response.detail) !== null && B !== void 0 && B.includes("createAccountAlreadyExist"))) {
                ne.next = 32;
                break;
              }
              return ne.abrupt("return", this.getAccount(z));
            case 32:
              throw ne.t1;
            case 33:
            case "end":
              return ne.stop();
          }
        }, x, this, [[9, 27]]);
      }));
      function _(x, L) {
        return H.apply(this, arguments);
      }
      return _;
    }() }, { key: "getFeeStats", value: function() {
      var H = d(a().mark(function x() {
        return a().wrap(function(j) {
          for (; ; ) switch (j.prev = j.next) {
            case 0:
              return j.abrupt("return", i.postObject(this.serverURL.toString(), "getFeeStats"));
            case 1:
            case "end":
              return j.stop();
          }
        }, x, this);
      }));
      function _() {
        return H.apply(this, arguments);
      }
      return _;
    }() }, { key: "getVersionInfo", value: function() {
      var H = d(a().mark(function x() {
        return a().wrap(function(j) {
          for (; ; ) switch (j.prev = j.next) {
            case 0:
              return j.abrupt("return", i.postObject(this.serverURL.toString(), "getVersionInfo"));
            case 1:
            case "end":
              return j.stop();
          }
        }, x, this);
      }));
      function _() {
        return H.apply(this, arguments);
      }
      return _;
    }() }, { key: "getSACBalance", value: function() {
      var H = d(a().mark(function x(L, j, z) {
        var Z, ue, $, X, J, B, Q, ne, K, ie;
        return a().wrap(function(ye) {
          for (; ; ) switch (ye.prev = ye.next) {
            case 0:
              if (e.StrKey.isValidContract(L)) {
                ye.next = 2;
                break;
              }
              throw new TypeError("expected contract ID, got ".concat(L));
            case 2:
              if (z == null) {
                ye.next = 6;
                break;
              }
              ye.t0 = z, ye.next = 9;
              break;
            case 6:
              return ye.next = 8, this.getNetwork().then(function(oe) {
                return oe.passphrase;
              });
            case 8:
              ye.t0 = ye.sent;
            case 9:
              return Z = ye.t0, ue = j.contractId(Z), $ = e.xdr.ScVal.scvVec([(0, e.nativeToScVal)("Balance", { type: "symbol" }), (0, e.nativeToScVal)(L, { type: "address" })]), X = e.xdr.LedgerKey.contractData(new e.xdr.LedgerKeyContractData({ contract: new e.Address(ue).toScAddress(), durability: e.xdr.ContractDataDurability.persistent(), key: $ })), ye.next = 15, this.getLedgerEntries(X);
            case 15:
              if (J = ye.sent, J.entries.length !== 0) {
                ye.next = 18;
                break;
              }
              return ye.abrupt("return", { latestLedger: J.latestLedger });
            case 18:
              if (B = J.entries[0], Q = B.lastModifiedLedgerSeq, ne = B.liveUntilLedgerSeq, K = B.val, K.switch().value === e.xdr.LedgerEntryType.contractData().value) {
                ye.next = 21;
                break;
              }
              return ye.abrupt("return", { latestLedger: J.latestLedger });
            case 21:
              return ie = (0, e.scValToNative)(K.contractData().val()), ye.abrupt("return", { latestLedger: J.latestLedger, balanceEntry: { liveUntilLedgerSeq: ne, lastModifiedLedgerSeq: Q, amount: ie.amount.toString(), authorized: ie.authorized, clawback: ie.clawback } });
            case 23:
            case "end":
              return ye.stop();
          }
        }, x, this);
      }));
      function _(x, L, j) {
        return H.apply(this, arguments);
      }
      return _;
    }() }]);
  }(), Ti;
}
var wh;
function Ec() {
  return wh || (wh = 1, function(v, e) {
    Object.defineProperty(e, "__esModule", { value: true });
    var n = { Server: true, BasicSleepStrategy: true, LinearSleepStrategy: true, Durability: true, AxiosClient: true, parseRawSimulation: true, parseRawEvents: true };
    Object.defineProperty(e, "AxiosClient", { enumerable: true, get: function() {
      return y.default;
    } }), Object.defineProperty(e, "BasicSleepStrategy", { enumerable: true, get: function() {
      return u.BasicSleepStrategy;
    } }), Object.defineProperty(e, "Durability", { enumerable: true, get: function() {
      return u.Durability;
    } }), Object.defineProperty(e, "LinearSleepStrategy", { enumerable: true, get: function() {
      return u.LinearSleepStrategy;
    } }), Object.defineProperty(e, "Server", { enumerable: true, get: function() {
      return u.RpcServer;
    } }), e.default = void 0, Object.defineProperty(e, "parseRawEvents", { enumerable: true, get: function() {
      return t.parseRawEvents;
    } }), Object.defineProperty(e, "parseRawSimulation", { enumerable: true, get: function() {
      return t.parseRawSimulation;
    } });
    var i = Ra();
    Object.keys(i).forEach(function(c) {
      c === "default" || c === "__esModule" || Object.prototype.hasOwnProperty.call(n, c) || c in e && e[c] === i[c] || Object.defineProperty(e, c, { enumerable: true, get: function() {
        return i[c];
      } });
    });
    var u = Eg(), y = s(rf()), t = nf(), o = of();
    Object.keys(o).forEach(function(c) {
      c === "default" || c === "__esModule" || Object.prototype.hasOwnProperty.call(n, c) || c in e && e[c] === o[c] || Object.defineProperty(e, c, { enumerable: true, get: function() {
        return o[c];
      } });
    });
    function s(c) {
      return c && c.__esModule ? c : { default: c };
    }
    e.default = v.exports;
  }(Gs, Gs.exports)), Gs.exports;
}
var Ao = Ec(), uc = { exports: {} }, Ag = uc.exports, Sh;
function xg() {
  return Sh || (Sh = 1, function(v, e) {
    (function(n, i) {
      v.exports = i();
    })(Ag, () => (() => {
      var n, i, u = { d: (I, q) => {
        for (var N in q) u.o(q, N) && !u.o(I, N) && Object.defineProperty(I, N, { enumerable: true, get: q[N] });
      }, o: (I, q) => Object.prototype.hasOwnProperty.call(I, q), r: (I) => {
        typeof Symbol < "u" && Symbol.toStringTag && Object.defineProperty(I, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(I, "__esModule", { value: true });
      } }, y = {};
      u.r(y), u.d(y, { WatchWalletChanges: () => k, addToken: () => r, default: () => F, getAddress: () => f, getNetwork: () => d, getNetworkDetails: () => b, isAllowed: () => S, isBrowser: () => w, isConnected: () => l, requestAccess: () => R, setAllowed: () => E, signAuthEntry: () => a, signMessage: () => g, signTransaction: () => m }), function(I) {
        I.CREATE_ACCOUNT = "CREATE_ACCOUNT", I.FUND_ACCOUNT = "FUND_ACCOUNT", I.ADD_ACCOUNT = "ADD_ACCOUNT", I.IMPORT_ACCOUNT = "IMPORT_ACCOUNT", I.IMPORT_HARDWARE_WALLET = "IMPORT_HARDWARE_WALLET", I.LOAD_ACCOUNT = "LOAD_ACCOUNT", I.MAKE_ACCOUNT_ACTIVE = "MAKE_ACCOUNT_ACTIVE", I.UPDATE_ACCOUNT_NAME = "UPDATE_ACCOUNT_NAME", I.GET_MNEMONIC_PHRASE = "GET_MNEMONIC_PHRASE", I.CONFIRM_MNEMONIC_PHRASE = "CONFIRM_MNEMONIC_PHRASE", I.CONFIRM_MIGRATED_MNEMONIC_PHRASE = "CONFIRM_MIGRATED_MNEMONIC_PHRASE", I.RECOVER_ACCOUNT = "RECOVER_ACCOUNT", I.CONFIRM_PASSWORD = "CONFIRM_PASSWORD", I.REJECT_ACCESS = "REJECT_ACCESS", I.GRANT_ACCESS = "GRANT_ACCESS", I.ADD_TOKEN = "ADD_TOKEN", I.SIGN_TRANSACTION = "SIGN_TRANSACTION", I.SIGN_BLOB = "SIGN_BLOB", I.SIGN_AUTH_ENTRY = "SIGN_AUTH_ENTRY", I.HANDLE_SIGNED_HW_PAYLOAD = "HANDLE_SIGNED_HW_PAYLOAD", I.REJECT_TRANSACTION = "REJECT_TRANSACTION", I.SIGN_FREIGHTER_TRANSACTION = "SIGN_FREIGHTER_TRANSACTION", I.SIGN_FREIGHTER_SOROBAN_TRANSACTION = "SIGN_FREIGHTER_SOROBAN_TRANSACTION", I.ADD_RECENT_ADDRESS = "ADD_RECENT_ADDRESS", I.LOAD_RECENT_ADDRESSES = "LOAD_RECENT_ADDRESSES", I.LOAD_LAST_USED_ACCOUNT = "LOAD_LAST_USED_ACCOUNT", I.SIGN_OUT = "SIGN_OUT", I.SHOW_BACKUP_PHRASE = "SHOW_BACKUP_PHRASE", I.SAVE_ALLOWLIST = "SAVE_ALLOWLIST", I.SAVE_SETTINGS = "SAVE_SETTINGS", I.SAVE_EXPERIMENTAL_FEATURES = "SAVE_EXPERIMENTAL_FEATURES", I.LOAD_SETTINGS = "LOAD_SETTINGS", I.GET_CACHED_ASSET_ICON = "GET_CACHED_ASSET_ICON", I.CACHE_ASSET_ICON = "CACHE_ASSET_ICON", I.GET_CACHED_ASSET_DOMAIN = "GET_CACHED_ASSET_DOMAIN", I.CACHE_ASSET_DOMAIN = "CACHE_ASSET_DOMAIN", I.GET_MEMO_REQUIRED_ACCOUNTS = "GET_MEMO_REQUIRED_ACCOUNTS", I.ADD_CUSTOM_NETWORK = "ADD_CUSTOM_NETWORK", I.CHANGE_NETWORK = "CHANGE_NETWORK", I.REMOVE_CUSTOM_NETWORK = "REMOVE_CUSTOM_NETWORK", I.EDIT_CUSTOM_NETWORK = "EDIT_CUSTOM_NETWORK", I.RESET_EXP_DATA = "RESET_EXP_DATA", I.ADD_TOKEN_ID = "ADD_TOKEN_ID", I.GET_TOKEN_IDS = "GET_TOKEN_IDS", I.REMOVE_TOKEN_ID = "REMOVE_TOKEN_ID", I.GET_MIGRATABLE_ACCOUNTS = "GET_MIGRATABLE_ACCOUNTS", I.GET_MIGRATED_MNEMONIC_PHRASE = "GET_MIGRATED_MNEMONIC_PHRASE", I.MIGRATE_ACCOUNTS = "MIGRATE_ACCOUNTS", I.ADD_ASSETS_LIST = "ADD_ASSETS_LIST", I.MODIFY_ASSETS_LIST = "MODIFY_ASSETS_LIST";
      }(n || (n = {})), function(I) {
        I.REQUEST_ACCESS = "REQUEST_ACCESS", I.REQUEST_PUBLIC_KEY = "REQUEST_PUBLIC_KEY", I.SUBMIT_TOKEN = "SUBMIT_TOKEN", I.SUBMIT_TRANSACTION = "SUBMIT_TRANSACTION", I.SUBMIT_BLOB = "SUBMIT_BLOB", I.SUBMIT_AUTH_ENTRY = "SUBMIT_AUTH_ENTRY", I.REQUEST_NETWORK = "REQUEST_NETWORK", I.REQUEST_NETWORK_DETAILS = "REQUEST_NETWORK_DETAILS", I.REQUEST_CONNECTION_STATUS = "REQUEST_CONNECTION_STATUS", I.REQUEST_ALLOWED_STATUS = "REQUEST_ALLOWED_STATUS", I.SET_ALLOWED_STATUS = "SET_ALLOWED_STATUS", I.REQUEST_USER_INFO = "REQUEST_USER_INFO";
      }(i || (i = {}));
      const t = (I) => {
        const q = Date.now() + Math.random();
        return window.postMessage({ source: "FREIGHTER_EXTERNAL_MSG_REQUEST", messageId: q, ...I }, window.location.origin), new Promise((N) => {
          let H = 0;
          I.type !== i.REQUEST_CONNECTION_STATUS && I.type !== i.REQUEST_PUBLIC_KEY || (H = setTimeout(() => {
            N({ isConnected: false, publicKey: "" }), window.removeEventListener("message", _);
          }, 2e3));
          const _ = (x) => {
            var L, j;
            x.source === window && ((L = x == null ? void 0 : x.data) === null || L === void 0 ? void 0 : L.source) === "FREIGHTER_EXTERNAL_MSG_RESPONSE" && ((j = x == null ? void 0 : x.data) === null || j === void 0 ? void 0 : j.messagedId) === q && (N(x.data), window.removeEventListener("message", _), clearTimeout(H));
          };
          window.addEventListener("message", _, false);
        });
      }, o = { code: -1, message: "Node environment is not supported" }, s = { code: -1, message: "The wallet encountered an internal error. Please try again or contact the wallet if the problem persists." }, c = async () => {
        let I;
        try {
          I = await t({ type: i.REQUEST_PUBLIC_KEY });
        } catch (q) {
          console.error(q);
        }
        return { publicKey: (I == null ? void 0 : I.publicKey) || "", error: I == null ? void 0 : I.apiError };
      }, h = async () => {
        let I;
        try {
          I = await t({ type: i.REQUEST_NETWORK_DETAILS });
        } catch (j) {
          console.error(j);
        }
        const { networkDetails: q, apiError: N } = I || { networkDetails: { network: "", networkUrl: "", networkPassphrase: "", sorobanRpcUrl: void 0 } }, { network: H, networkUrl: _, networkPassphrase: x, sorobanRpcUrl: L } = q;
        return { network: H, networkUrl: _, networkPassphrase: x, sorobanRpcUrl: L, error: N };
      }, f = async () => {
        let I = "";
        if (w) {
          const q = await c();
          return I = q.publicKey, q.error ? { address: I, error: q.error } : { address: I };
        }
        return { address: I, error: o };
      }, r = async (I) => {
        if (w) {
          const q = await (async (N) => {
            let H;
            try {
              H = await t({ contractId: N.contractId, networkPassphrase: N.networkPassphrase, type: i.SUBMIT_TOKEN });
            } catch {
              return { error: s };
            }
            return { contractId: H.contractId, error: H == null ? void 0 : H.apiError };
          })(I);
          return q.error ? { contractId: "", error: q.error } : { contractId: q.contractId || "" };
        }
        return { contractId: "", error: o };
      }, m = async (I, q) => {
        if (w) {
          const N = await (async (H, _) => {
            let x, L, j, z;
            typeof _ == "object" ? (L = _.accountToSign, j = _.networkPassphrase) : (x = _, L = void 0);
            try {
              z = await t({ transactionXdr: H, network: x, networkPassphrase: j, accountToSign: L, type: i.SUBMIT_TRANSACTION });
            } catch {
              return { signedTransaction: "", signerAddress: "", error: s };
            }
            const { signedTransaction: Z, signerAddress: ue } = z;
            return { signedTransaction: Z, signerAddress: ue, error: z == null ? void 0 : z.apiError };
          })(I, q);
          return N.error ? { signedTxXdr: "", signerAddress: "", error: N.error } : { signedTxXdr: N.signedTransaction, signerAddress: N.signerAddress };
        }
        return { signedTxXdr: "", signerAddress: "", error: o };
      }, g = async (I, q) => {
        if (w) {
          const N = await (async (H, _, x) => {
            let L;
            const j = (x || {}).address;
            try {
              L = await t({ blob: H, accountToSign: j, apiVersion: _, type: i.SUBMIT_BLOB });
            } catch {
              return { signedMessage: null, signerAddress: "", error: s };
            }
            const { signedBlob: z, signerAddress: Z } = L;
            return { signedMessage: z || null, signerAddress: Z, error: L == null ? void 0 : L.apiError };
          })(I, "4.1.0", q);
          return N.error ? { signedMessage: null, signerAddress: "", error: N.error } : { signedMessage: N.signedMessage, signerAddress: N.signerAddress };
        }
        return { signedMessage: null, signerAddress: "", error: o };
      }, a = async (I, q) => {
        if (w) {
          const N = await (async (H, _) => {
            const x = (_ || {}).address;
            let L;
            try {
              L = await t({ entryXdr: H, accountToSign: x, networkPassphrase: _ == null ? void 0 : _.networkPassphrase, type: i.SUBMIT_AUTH_ENTRY });
            } catch (Z) {
              return console.error(Z), { signedAuthEntry: null, signerAddress: "", error: s };
            }
            const { signedAuthEntry: j, signerAddress: z } = L;
            return { signedAuthEntry: j || null, signerAddress: z, error: L == null ? void 0 : L.apiError };
          })(I, q);
          return N.error ? { signedAuthEntry: null, signerAddress: "", error: N.error } : { signedAuthEntry: N.signedAuthEntry, signerAddress: N.signerAddress };
        }
        return { signedAuthEntry: null, signerAddress: "", error: o };
      }, l = async () => w ? window.freighter ? Promise.resolve({ isConnected: window.freighter }) : (async () => {
        let I = { isConnected: false };
        try {
          I = await t({ type: i.REQUEST_CONNECTION_STATUS });
        } catch (q) {
          console.error(q);
        }
        return { isConnected: I.isConnected };
      })() : { isConnected: false, error: o }, d = async () => {
        if (w) {
          const I = await (async () => {
            let q;
            try {
              q = await t({ type: i.REQUEST_NETWORK_DETAILS });
            } catch (H) {
              console.error(H);
            }
            const { networkDetails: N } = q || { networkDetails: { network: "", networkPassphrase: "" } };
            return { network: N == null ? void 0 : N.network, networkPassphrase: N == null ? void 0 : N.networkPassphrase, error: q == null ? void 0 : q.apiError };
          })();
          return I.error ? { network: "", networkPassphrase: "", error: I.error } : { network: I.network, networkPassphrase: I.networkPassphrase };
        }
        return { network: "", networkPassphrase: "", error: o };
      }, b = async () => {
        if (w) {
          const I = await h();
          return I.error ? { network: "", networkUrl: "", networkPassphrase: "", error: I.error } : { network: I.network, networkUrl: I.networkUrl, networkPassphrase: I.networkPassphrase, sorobanRpcUrl: I.sorobanRpcUrl };
        }
        return { network: "", networkUrl: "", networkPassphrase: "", error: o };
      }, S = async () => {
        let I = false;
        if (w) {
          const q = await (async () => {
            let N;
            try {
              N = await t({ type: i.REQUEST_ALLOWED_STATUS });
            } catch (_) {
              console.error(_);
            }
            const { isAllowed: H } = N || { isAllowed: false };
            return { isAllowed: H, error: N == null ? void 0 : N.apiError };
          })();
          return I = q.isAllowed, q.error ? { isAllowed: I, error: q.error } : { isAllowed: I };
        }
        return { isAllowed: I, error: o };
      }, E = async () => {
        let I = false;
        if (w) {
          const q = await (async () => {
            let N;
            try {
              N = await t({ type: i.SET_ALLOWED_STATUS });
            } catch (_) {
              console.error(_);
            }
            const { isAllowed: H } = N || { isAllowed: false };
            return { isAllowed: H, error: N == null ? void 0 : N.apiError };
          })();
          return I = q.isAllowed, q.error ? { isAllowed: I, error: q.error } : { isAllowed: I };
        }
        return { isAllowed: I, error: o };
      }, R = async () => {
        let I = "";
        if (w) {
          const q = await (async () => {
            let N;
            try {
              N = await t({ type: i.REQUEST_ACCESS });
            } catch (_) {
              console.error(_);
            }
            const { publicKey: H } = N || { publicKey: "" };
            return { publicKey: H, error: N == null ? void 0 : N.apiError };
          })();
          return I = q.publicKey, q.error ? { address: I, error: q.error } : { address: I };
        }
        return { address: I, error: o };
      };
      class k {
        constructor(q = 3e3) {
          this.fetchInfo = async (N) => {
            if (!this.isRunning) return;
            const H = await c(), _ = await h();
            (H.error || _.error) && N({ address: "", network: "", networkPassphrase: "", error: H.error || _.error }), this.currentAddress === H.publicKey && this.currentNetwork === _.network && this.currentNetworkPassphrase === _.networkPassphrase || (this.currentAddress = H.publicKey, this.currentNetwork = _.network, this.currentNetworkPassphrase = _.networkPassphrase, N({ address: H.publicKey, network: _.network, networkPassphrase: _.networkPassphrase })), setTimeout(() => this.fetchInfo(N), this.timeout);
          }, this.timeout = q, this.currentAddress = "", this.currentNetwork = "", this.currentNetworkPassphrase = "", this.isRunning = false;
        }
        watch(q) {
          return w ? (this.isRunning = true, this.fetchInfo(q), {}) : { error: o };
        }
        stop() {
          this.isRunning = false;
        }
      }
      const w = typeof window < "u", F = { getAddress: f, addToken: r, signTransaction: m, signMessage: g, signAuthEntry: a, isConnected: l, getNetwork: d, getNetworkDetails: b, isAllowed: S, setAllowed: E, requestAccess: R, WatchWalletChanges: k };
      return y;
    })());
  }(uc)), uc.exports;
}
var Tg = xg();
const xu = Kd(Tg);
var kg = Object.defineProperty, Og = (v, e, n) => e in v ? kg(v, e, { enumerable: true, configurable: true, writable: true, value: n }) : v[e] = n, Pg = (v, e, n) => (Og(v, e + "", n), n);
/**
* @license
* Copyright 2010-2022 Three.js Authors
* SPDX-License-Identifier: MIT
*/
const af = "143", _o = "srgb", Jo = "srgb-linear", _h = "300 es";
class Ba {
  addEventListener(e, n) {
    this._listeners === void 0 && (this._listeners = {});
    const i = this._listeners;
    i[e] === void 0 && (i[e] = []), i[e].indexOf(n) === -1 && i[e].push(n);
  }
  hasEventListener(e, n) {
    if (this._listeners === void 0) return false;
    const i = this._listeners;
    return i[e] !== void 0 && i[e].indexOf(n) !== -1;
  }
  removeEventListener(e, n) {
    if (this._listeners === void 0) return;
    const i = this._listeners[e];
    if (i !== void 0) {
      const u = i.indexOf(n);
      u !== -1 && i.splice(u, 1);
    }
  }
  dispatchEvent(e) {
    if (this._listeners === void 0) return;
    const n = this._listeners[e.type];
    if (n !== void 0) {
      e.target = this;
      const i = n.slice(0);
      for (let u = 0, y = i.length; u < y; u++) i[u].call(this, e);
      e.target = null;
    }
  }
}
const di = ["00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "0a", "0b", "0c", "0d", "0e", "0f", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "1a", "1b", "1c", "1d", "1e", "1f", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "2a", "2b", "2c", "2d", "2e", "2f", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "3a", "3b", "3c", "3d", "3e", "3f", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "4a", "4b", "4c", "4d", "4e", "4f", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "5a", "5b", "5c", "5d", "5e", "5f", "60", "61", "62", "63", "64", "65", "66", "67", "68", "69", "6a", "6b", "6c", "6d", "6e", "6f", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "7a", "7b", "7c", "7d", "7e", "7f", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "8a", "8b", "8c", "8d", "8e", "8f", "90", "91", "92", "93", "94", "95", "96", "97", "98", "99", "9a", "9b", "9c", "9d", "9e", "9f", "a0", "a1", "a2", "a3", "a4", "a5", "a6", "a7", "a8", "a9", "aa", "ab", "ac", "ad", "ae", "af", "b0", "b1", "b2", "b3", "b4", "b5", "b6", "b7", "b8", "b9", "ba", "bb", "bc", "bd", "be", "bf", "c0", "c1", "c2", "c3", "c4", "c5", "c6", "c7", "c8", "c9", "ca", "cb", "cc", "cd", "ce", "cf", "d0", "d1", "d2", "d3", "d4", "d5", "d6", "d7", "d8", "d9", "da", "db", "dc", "dd", "de", "df", "e0", "e1", "e2", "e3", "e4", "e5", "e6", "e7", "e8", "e9", "ea", "eb", "ec", "ed", "ee", "ef", "f0", "f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8", "f9", "fa", "fb", "fc", "fd", "fe", "ff"], Zc = Math.PI / 180, Fl = 180 / Math.PI;
function Ds() {
  const v = Math.random() * 4294967295 | 0, e = Math.random() * 4294967295 | 0, n = Math.random() * 4294967295 | 0, i = Math.random() * 4294967295 | 0;
  return (di[v & 255] + di[v >> 8 & 255] + di[v >> 16 & 255] + di[v >> 24 & 255] + "-" + di[e & 255] + di[e >> 8 & 255] + "-" + di[e >> 16 & 15 | 64] + di[e >> 24 & 255] + "-" + di[n & 63 | 128] + di[n >> 8 & 255] + "-" + di[n >> 16 & 255] + di[n >> 24 & 255] + di[i & 255] + di[i >> 8 & 255] + di[i >> 16 & 255] + di[i >> 24 & 255]).toLowerCase();
}
function Ci(v, e, n) {
  return Math.max(e, Math.min(n, v));
}
function Cg(v, e) {
  return (v % e + e) % e;
}
function Jc(v, e, n) {
  return (1 - n) * v + n * e;
}
function Eh(v) {
  return (v & v - 1) === 0 && v !== 0;
}
function Ul(v) {
  return Math.pow(2, Math.floor(Math.log(v) / Math.LN2));
}
class In {
  constructor(e = 0, n = 0) {
    In.prototype.isVector2 = true, this.x = e, this.y = n;
  }
  get width() {
    return this.x;
  }
  set width(e) {
    this.x = e;
  }
  get height() {
    return this.y;
  }
  set height(e) {
    this.y = e;
  }
  set(e, n) {
    return this.x = e, this.y = n, this;
  }
  setScalar(e) {
    return this.x = e, this.y = e, this;
  }
  setX(e) {
    return this.x = e, this;
  }
  setY(e) {
    return this.y = e, this;
  }
  setComponent(e, n) {
    switch (e) {
      case 0:
        this.x = n;
        break;
      case 1:
        this.y = n;
        break;
      default:
        throw new Error("index is out of range: " + e);
    }
    return this;
  }
  getComponent(e) {
    switch (e) {
      case 0:
        return this.x;
      case 1:
        return this.y;
      default:
        throw new Error("index is out of range: " + e);
    }
  }
  clone() {
    return new this.constructor(this.x, this.y);
  }
  copy(e) {
    return this.x = e.x, this.y = e.y, this;
  }
  add(e) {
    return this.x += e.x, this.y += e.y, this;
  }
  addScalar(e) {
    return this.x += e, this.y += e, this;
  }
  addVectors(e, n) {
    return this.x = e.x + n.x, this.y = e.y + n.y, this;
  }
  addScaledVector(e, n) {
    return this.x += e.x * n, this.y += e.y * n, this;
  }
  sub(e) {
    return this.x -= e.x, this.y -= e.y, this;
  }
  subScalar(e) {
    return this.x -= e, this.y -= e, this;
  }
  subVectors(e, n) {
    return this.x = e.x - n.x, this.y = e.y - n.y, this;
  }
  multiply(e) {
    return this.x *= e.x, this.y *= e.y, this;
  }
  multiplyScalar(e) {
    return this.x *= e, this.y *= e, this;
  }
  divide(e) {
    return this.x /= e.x, this.y /= e.y, this;
  }
  divideScalar(e) {
    return this.multiplyScalar(1 / e);
  }
  applyMatrix3(e) {
    const n = this.x, i = this.y, u = e.elements;
    return this.x = u[0] * n + u[3] * i + u[6], this.y = u[1] * n + u[4] * i + u[7], this;
  }
  min(e) {
    return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this;
  }
  max(e) {
    return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this;
  }
  clamp(e, n) {
    return this.x = Math.max(e.x, Math.min(n.x, this.x)), this.y = Math.max(e.y, Math.min(n.y, this.y)), this;
  }
  clampScalar(e, n) {
    return this.x = Math.max(e, Math.min(n, this.x)), this.y = Math.max(e, Math.min(n, this.y)), this;
  }
  clampLength(e, n) {
    const i = this.length();
    return this.divideScalar(i || 1).multiplyScalar(Math.max(e, Math.min(n, i)));
  }
  floor() {
    return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this;
  }
  ceil() {
    return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this;
  }
  round() {
    return this.x = Math.round(this.x), this.y = Math.round(this.y), this;
  }
  roundToZero() {
    return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this;
  }
  negate() {
    return this.x = -this.x, this.y = -this.y, this;
  }
  dot(e) {
    return this.x * e.x + this.y * e.y;
  }
  cross(e) {
    return this.x * e.y - this.y * e.x;
  }
  lengthSq() {
    return this.x * this.x + this.y * this.y;
  }
  length() {
    return Math.sqrt(this.x * this.x + this.y * this.y);
  }
  manhattanLength() {
    return Math.abs(this.x) + Math.abs(this.y);
  }
  normalize() {
    return this.divideScalar(this.length() || 1);
  }
  angle() {
    return Math.atan2(-this.y, -this.x) + Math.PI;
  }
  distanceTo(e) {
    return Math.sqrt(this.distanceToSquared(e));
  }
  distanceToSquared(e) {
    const n = this.x - e.x, i = this.y - e.y;
    return n * n + i * i;
  }
  manhattanDistanceTo(e) {
    return Math.abs(this.x - e.x) + Math.abs(this.y - e.y);
  }
  setLength(e) {
    return this.normalize().multiplyScalar(e);
  }
  lerp(e, n) {
    return this.x += (e.x - this.x) * n, this.y += (e.y - this.y) * n, this;
  }
  lerpVectors(e, n, i) {
    return this.x = e.x + (n.x - e.x) * i, this.y = e.y + (n.y - e.y) * i, this;
  }
  equals(e) {
    return e.x === this.x && e.y === this.y;
  }
  fromArray(e, n = 0) {
    return this.x = e[n], this.y = e[n + 1], this;
  }
  toArray(e = [], n = 0) {
    return e[n] = this.x, e[n + 1] = this.y, e;
  }
  fromBufferAttribute(e, n) {
    return this.x = e.getX(n), this.y = e.getY(n), this;
  }
  rotateAround(e, n) {
    const i = Math.cos(n), u = Math.sin(n), y = this.x - e.x, t = this.y - e.y;
    return this.x = y * i - t * u + e.x, this.y = y * u + t * i + e.y, this;
  }
  random() {
    return this.x = Math.random(), this.y = Math.random(), this;
  }
  *[Symbol.iterator]() {
    yield this.x, yield this.y;
  }
}
class Vi {
  constructor() {
    Vi.prototype.isMatrix3 = true, this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1];
  }
  set(e, n, i, u, y, t, o, s, c) {
    const h = this.elements;
    return h[0] = e, h[1] = u, h[2] = o, h[3] = n, h[4] = y, h[5] = s, h[6] = i, h[7] = t, h[8] = c, this;
  }
  identity() {
    return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this;
  }
  copy(e) {
    const n = this.elements, i = e.elements;
    return n[0] = i[0], n[1] = i[1], n[2] = i[2], n[3] = i[3], n[4] = i[4], n[5] = i[5], n[6] = i[6], n[7] = i[7], n[8] = i[8], this;
  }
  extractBasis(e, n, i) {
    return e.setFromMatrix3Column(this, 0), n.setFromMatrix3Column(this, 1), i.setFromMatrix3Column(this, 2), this;
  }
  setFromMatrix4(e) {
    const n = e.elements;
    return this.set(n[0], n[4], n[8], n[1], n[5], n[9], n[2], n[6], n[10]), this;
  }
  multiply(e) {
    return this.multiplyMatrices(this, e);
  }
  premultiply(e) {
    return this.multiplyMatrices(e, this);
  }
  multiplyMatrices(e, n) {
    const i = e.elements, u = n.elements, y = this.elements, t = i[0], o = i[3], s = i[6], c = i[1], h = i[4], f = i[7], r = i[2], m = i[5], g = i[8], a = u[0], l = u[3], d = u[6], b = u[1], S = u[4], E = u[7], R = u[2], k = u[5], w = u[8];
    return y[0] = t * a + o * b + s * R, y[3] = t * l + o * S + s * k, y[6] = t * d + o * E + s * w, y[1] = c * a + h * b + f * R, y[4] = c * l + h * S + f * k, y[7] = c * d + h * E + f * w, y[2] = r * a + m * b + g * R, y[5] = r * l + m * S + g * k, y[8] = r * d + m * E + g * w, this;
  }
  multiplyScalar(e) {
    const n = this.elements;
    return n[0] *= e, n[3] *= e, n[6] *= e, n[1] *= e, n[4] *= e, n[7] *= e, n[2] *= e, n[5] *= e, n[8] *= e, this;
  }
  determinant() {
    const e = this.elements, n = e[0], i = e[1], u = e[2], y = e[3], t = e[4], o = e[5], s = e[6], c = e[7], h = e[8];
    return n * t * h - n * o * c - i * y * h + i * o * s + u * y * c - u * t * s;
  }
  invert() {
    const e = this.elements, n = e[0], i = e[1], u = e[2], y = e[3], t = e[4], o = e[5], s = e[6], c = e[7], h = e[8], f = h * t - o * c, r = o * s - h * y, m = c * y - t * s, g = n * f + i * r + u * m;
    if (g === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);
    const a = 1 / g;
    return e[0] = f * a, e[1] = (u * c - h * i) * a, e[2] = (o * i - u * t) * a, e[3] = r * a, e[4] = (h * n - u * s) * a, e[5] = (u * y - o * n) * a, e[6] = m * a, e[7] = (i * s - c * n) * a, e[8] = (t * n - i * y) * a, this;
  }
  transpose() {
    let e;
    const n = this.elements;
    return e = n[1], n[1] = n[3], n[3] = e, e = n[2], n[2] = n[6], n[6] = e, e = n[5], n[5] = n[7], n[7] = e, this;
  }
  getNormalMatrix(e) {
    return this.setFromMatrix4(e).invert().transpose();
  }
  transposeIntoArray(e) {
    const n = this.elements;
    return e[0] = n[0], e[1] = n[3], e[2] = n[6], e[3] = n[1], e[4] = n[4], e[5] = n[7], e[6] = n[2], e[7] = n[5], e[8] = n[8], this;
  }
  setUvTransform(e, n, i, u, y, t, o) {
    const s = Math.cos(y), c = Math.sin(y);
    return this.set(i * s, i * c, -i * (s * t + c * o) + t + e, -u * c, u * s, -u * (-c * t + s * o) + o + n, 0, 0, 1), this;
  }
  scale(e, n) {
    const i = this.elements;
    return i[0] *= e, i[3] *= e, i[6] *= e, i[1] *= n, i[4] *= n, i[7] *= n, this;
  }
  rotate(e) {
    const n = Math.cos(e), i = Math.sin(e), u = this.elements, y = u[0], t = u[3], o = u[6], s = u[1], c = u[4], h = u[7];
    return u[0] = n * y + i * s, u[3] = n * t + i * c, u[6] = n * o + i * h, u[1] = -i * y + n * s, u[4] = -i * t + n * c, u[7] = -i * o + n * h, this;
  }
  translate(e, n) {
    const i = this.elements;
    return i[0] += e * i[2], i[3] += e * i[5], i[6] += e * i[8], i[1] += n * i[2], i[4] += n * i[5], i[7] += n * i[8], this;
  }
  equals(e) {
    const n = this.elements, i = e.elements;
    for (let u = 0; u < 9; u++) if (n[u] !== i[u]) return false;
    return true;
  }
  fromArray(e, n = 0) {
    for (let i = 0; i < 9; i++) this.elements[i] = e[i + n];
    return this;
  }
  toArray(e = [], n = 0) {
    const i = this.elements;
    return e[n] = i[0], e[n + 1] = i[1], e[n + 2] = i[2], e[n + 3] = i[3], e[n + 4] = i[4], e[n + 5] = i[5], e[n + 6] = i[6], e[n + 7] = i[7], e[n + 8] = i[8], e;
  }
  clone() {
    return new this.constructor().fromArray(this.elements);
  }
}
function ym(v) {
  for (let e = v.length - 1; e >= 0; --e) if (v[e] > 65535) return true;
  return false;
}
function bc(v) {
  return document.createElementNS("http://www.w3.org/1999/xhtml", v);
}
function ea(v) {
  return v < 0.04045 ? v * 0.0773993808 : Math.pow(v * 0.9478672986 + 0.0521327014, 2.4);
}
function cc(v) {
  return v < 31308e-7 ? v * 12.92 : 1.055 * Math.pow(v, 0.41666) - 0.055;
}
const el = { [_o]: { [Jo]: ea }, [Jo]: { [_o]: cc } }, qi = { legacyMode: true, get workingColorSpace() {
  return Jo;
}, set workingColorSpace(v) {
  console.warn("THREE.ColorManagement: .workingColorSpace is readonly.");
}, convert: function(v, e, n) {
  if (this.legacyMode || e === n || !e || !n) return v;
  if (el[e] && el[e][n] !== void 0) {
    const i = el[e][n];
    return v.r = i(v.r), v.g = i(v.g), v.b = i(v.b), v;
  }
  throw new Error("Unsupported color space conversion.");
}, fromWorkingColorSpace: function(v, e) {
  return this.convert(v, this.workingColorSpace, e);
}, toWorkingColorSpace: function(v, e) {
  return this.convert(v, e, this.workingColorSpace);
} }, gm = { aliceblue: 15792383, antiquewhite: 16444375, aqua: 65535, aquamarine: 8388564, azure: 15794175, beige: 16119260, bisque: 16770244, black: 0, blanchedalmond: 16772045, blue: 255, blueviolet: 9055202, brown: 10824234, burlywood: 14596231, cadetblue: 6266528, chartreuse: 8388352, chocolate: 13789470, coral: 16744272, cornflowerblue: 6591981, cornsilk: 16775388, crimson: 14423100, cyan: 65535, darkblue: 139, darkcyan: 35723, darkgoldenrod: 12092939, darkgray: 11119017, darkgreen: 25600, darkgrey: 11119017, darkkhaki: 12433259, darkmagenta: 9109643, darkolivegreen: 5597999, darkorange: 16747520, darkorchid: 10040012, darkred: 9109504, darksalmon: 15308410, darkseagreen: 9419919, darkslateblue: 4734347, darkslategray: 3100495, darkslategrey: 3100495, darkturquoise: 52945, darkviolet: 9699539, deeppink: 16716947, deepskyblue: 49151, dimgray: 6908265, dimgrey: 6908265, dodgerblue: 2003199, firebrick: 11674146, floralwhite: 16775920, forestgreen: 2263842, fuchsia: 16711935, gainsboro: 14474460, ghostwhite: 16316671, gold: 16766720, goldenrod: 14329120, gray: 8421504, green: 32768, greenyellow: 11403055, grey: 8421504, honeydew: 15794160, hotpink: 16738740, indianred: 13458524, indigo: 4915330, ivory: 16777200, khaki: 15787660, lavender: 15132410, lavenderblush: 16773365, lawngreen: 8190976, lemonchiffon: 16775885, lightblue: 11393254, lightcoral: 15761536, lightcyan: 14745599, lightgoldenrodyellow: 16448210, lightgray: 13882323, lightgreen: 9498256, lightgrey: 13882323, lightpink: 16758465, lightsalmon: 16752762, lightseagreen: 2142890, lightskyblue: 8900346, lightslategray: 7833753, lightslategrey: 7833753, lightsteelblue: 11584734, lightyellow: 16777184, lime: 65280, limegreen: 3329330, linen: 16445670, magenta: 16711935, maroon: 8388608, mediumaquamarine: 6737322, mediumblue: 205, mediumorchid: 12211667, mediumpurple: 9662683, mediumseagreen: 3978097, mediumslateblue: 8087790, mediumspringgreen: 64154, mediumturquoise: 4772300, mediumvioletred: 13047173, midnightblue: 1644912, mintcream: 16121850, mistyrose: 16770273, moccasin: 16770229, navajowhite: 16768685, navy: 128, oldlace: 16643558, olive: 8421376, olivedrab: 7048739, orange: 16753920, orangered: 16729344, orchid: 14315734, palegoldenrod: 15657130, palegreen: 10025880, paleturquoise: 11529966, palevioletred: 14381203, papayawhip: 16773077, peachpuff: 16767673, peru: 13468991, pink: 16761035, plum: 14524637, powderblue: 11591910, purple: 8388736, rebeccapurple: 6697881, red: 16711680, rosybrown: 12357519, royalblue: 4286945, saddlebrown: 9127187, salmon: 16416882, sandybrown: 16032864, seagreen: 3050327, seashell: 16774638, sienna: 10506797, silver: 12632256, skyblue: 8900331, slateblue: 6970061, slategray: 7372944, slategrey: 7372944, snow: 16775930, springgreen: 65407, steelblue: 4620980, tan: 13808780, teal: 32896, thistle: 14204888, tomato: 16737095, turquoise: 4251856, violet: 15631086, wheat: 16113331, white: 16777215, whitesmoke: 16119285, yellow: 16776960, yellowgreen: 10145074 }, si = { r: 0, g: 0, b: 0 }, zi = { h: 0, s: 0, l: 0 }, Tu = { h: 0, s: 0, l: 0 };
function tl(v, e, n) {
  return n < 0 && (n += 1), n > 1 && (n -= 1), n < 1 / 6 ? v + (e - v) * 6 * n : n < 1 / 2 ? e : n < 2 / 3 ? v + (e - v) * 6 * (2 / 3 - n) : v;
}
function ku(v, e) {
  return e.r = v.r, e.g = v.g, e.b = v.b, e;
}
class Mn {
  constructor(e, n, i) {
    return this.isColor = true, this.r = 1, this.g = 1, this.b = 1, n === void 0 && i === void 0 ? this.set(e) : this.setRGB(e, n, i);
  }
  set(e) {
    return e && e.isColor ? this.copy(e) : typeof e == "number" ? this.setHex(e) : typeof e == "string" && this.setStyle(e), this;
  }
  setScalar(e) {
    return this.r = e, this.g = e, this.b = e, this;
  }
  setHex(e, n = _o) {
    return e = Math.floor(e), this.r = (e >> 16 & 255) / 255, this.g = (e >> 8 & 255) / 255, this.b = (e & 255) / 255, qi.toWorkingColorSpace(this, n), this;
  }
  setRGB(e, n, i, u = Jo) {
    return this.r = e, this.g = n, this.b = i, qi.toWorkingColorSpace(this, u), this;
  }
  setHSL(e, n, i, u = Jo) {
    if (e = Cg(e, 1), n = Ci(n, 0, 1), i = Ci(i, 0, 1), n === 0) this.r = this.g = this.b = i;
    else {
      const y = i <= 0.5 ? i * (1 + n) : i + n - i * n, t = 2 * i - y;
      this.r = tl(t, y, e + 1 / 3), this.g = tl(t, y, e), this.b = tl(t, y, e - 1 / 3);
    }
    return qi.toWorkingColorSpace(this, u), this;
  }
  setStyle(e, n = _o) {
    function i(y) {
      y !== void 0 && parseFloat(y) < 1 && console.warn("THREE.Color: Alpha component of " + e + " will be ignored.");
    }
    let u;
    if (u = /^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)) {
      let y;
      const t = u[1], o = u[2];
      switch (t) {
        case "rgb":
        case "rgba":
          if (y = /^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o)) return this.r = Math.min(255, parseInt(y[1], 10)) / 255, this.g = Math.min(255, parseInt(y[2], 10)) / 255, this.b = Math.min(255, parseInt(y[3], 10)) / 255, qi.toWorkingColorSpace(this, n), i(y[4]), this;
          if (y = /^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o)) return this.r = Math.min(100, parseInt(y[1], 10)) / 100, this.g = Math.min(100, parseInt(y[2], 10)) / 100, this.b = Math.min(100, parseInt(y[3], 10)) / 100, qi.toWorkingColorSpace(this, n), i(y[4]), this;
          break;
        case "hsl":
        case "hsla":
          if (y = /^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o)) {
            const s = parseFloat(y[1]) / 360, c = parseInt(y[2], 10) / 100, h = parseInt(y[3], 10) / 100;
            return i(y[4]), this.setHSL(s, c, h, n);
          }
          break;
      }
    } else if (u = /^\#([A-Fa-f\d]+)$/.exec(e)) {
      const y = u[1], t = y.length;
      if (t === 3) return this.r = parseInt(y.charAt(0) + y.charAt(0), 16) / 255, this.g = parseInt(y.charAt(1) + y.charAt(1), 16) / 255, this.b = parseInt(y.charAt(2) + y.charAt(2), 16) / 255, qi.toWorkingColorSpace(this, n), this;
      if (t === 6) return this.r = parseInt(y.charAt(0) + y.charAt(1), 16) / 255, this.g = parseInt(y.charAt(2) + y.charAt(3), 16) / 255, this.b = parseInt(y.charAt(4) + y.charAt(5), 16) / 255, qi.toWorkingColorSpace(this, n), this;
    }
    return e && e.length > 0 ? this.setColorName(e, n) : this;
  }
  setColorName(e, n = _o) {
    const i = gm[e.toLowerCase()];
    return i !== void 0 ? this.setHex(i, n) : console.warn("THREE.Color: Unknown color " + e), this;
  }
  clone() {
    return new this.constructor(this.r, this.g, this.b);
  }
  copy(e) {
    return this.r = e.r, this.g = e.g, this.b = e.b, this;
  }
  copySRGBToLinear(e) {
    return this.r = ea(e.r), this.g = ea(e.g), this.b = ea(e.b), this;
  }
  copyLinearToSRGB(e) {
    return this.r = cc(e.r), this.g = cc(e.g), this.b = cc(e.b), this;
  }
  convertSRGBToLinear() {
    return this.copySRGBToLinear(this), this;
  }
  convertLinearToSRGB() {
    return this.copyLinearToSRGB(this), this;
  }
  getHex(e = _o) {
    return qi.fromWorkingColorSpace(ku(this, si), e), Ci(si.r * 255, 0, 255) << 16 ^ Ci(si.g * 255, 0, 255) << 8 ^ Ci(si.b * 255, 0, 255) << 0;
  }
  getHexString(e = _o) {
    return ("000000" + this.getHex(e).toString(16)).slice(-6);
  }
  getHSL(e, n = Jo) {
    qi.fromWorkingColorSpace(ku(this, si), n);
    const i = si.r, u = si.g, y = si.b, t = Math.max(i, u, y), o = Math.min(i, u, y);
    let s, c;
    const h = (o + t) / 2;
    if (o === t) s = 0, c = 0;
    else {
      const f = t - o;
      switch (c = h <= 0.5 ? f / (t + o) : f / (2 - t - o), t) {
        case i:
          s = (u - y) / f + (u < y ? 6 : 0);
          break;
        case u:
          s = (y - i) / f + 2;
          break;
        case y:
          s = (i - u) / f + 4;
          break;
      }
      s /= 6;
    }
    return e.h = s, e.s = c, e.l = h, e;
  }
  getRGB(e, n = Jo) {
    return qi.fromWorkingColorSpace(ku(this, si), n), e.r = si.r, e.g = si.g, e.b = si.b, e;
  }
  getStyle(e = _o) {
    return qi.fromWorkingColorSpace(ku(this, si), e), e !== _o ? `color(${e} ${si.r} ${si.g} ${si.b})` : `rgb(${si.r * 255 | 0},${si.g * 255 | 0},${si.b * 255 | 0})`;
  }
  offsetHSL(e, n, i) {
    return this.getHSL(zi), zi.h += e, zi.s += n, zi.l += i, this.setHSL(zi.h, zi.s, zi.l), this;
  }
  add(e) {
    return this.r += e.r, this.g += e.g, this.b += e.b, this;
  }
  addColors(e, n) {
    return this.r = e.r + n.r, this.g = e.g + n.g, this.b = e.b + n.b, this;
  }
  addScalar(e) {
    return this.r += e, this.g += e, this.b += e, this;
  }
  sub(e) {
    return this.r = Math.max(0, this.r - e.r), this.g = Math.max(0, this.g - e.g), this.b = Math.max(0, this.b - e.b), this;
  }
  multiply(e) {
    return this.r *= e.r, this.g *= e.g, this.b *= e.b, this;
  }
  multiplyScalar(e) {
    return this.r *= e, this.g *= e, this.b *= e, this;
  }
  lerp(e, n) {
    return this.r += (e.r - this.r) * n, this.g += (e.g - this.g) * n, this.b += (e.b - this.b) * n, this;
  }
  lerpColors(e, n, i) {
    return this.r = e.r + (n.r - e.r) * i, this.g = e.g + (n.g - e.g) * i, this.b = e.b + (n.b - e.b) * i, this;
  }
  lerpHSL(e, n) {
    this.getHSL(zi), e.getHSL(Tu);
    const i = Jc(zi.h, Tu.h, n), u = Jc(zi.s, Tu.s, n), y = Jc(zi.l, Tu.l, n);
    return this.setHSL(i, u, y), this;
  }
  equals(e) {
    return e.r === this.r && e.g === this.g && e.b === this.b;
  }
  fromArray(e, n = 0) {
    return this.r = e[n], this.g = e[n + 1], this.b = e[n + 2], this;
  }
  toArray(e = [], n = 0) {
    return e[n] = this.r, e[n + 1] = this.g, e[n + 2] = this.b, e;
  }
  fromBufferAttribute(e, n) {
    return this.r = e.getX(n), this.g = e.getY(n), this.b = e.getZ(n), e.normalized === true && (this.r /= 255, this.g /= 255, this.b /= 255), this;
  }
  toJSON() {
    return this.getHex();
  }
  *[Symbol.iterator]() {
    yield this.r, yield this.g, yield this.b;
  }
}
Mn.NAMES = gm;
let fa;
class vm {
  static getDataURL(e) {
    if (/^data:/i.test(e.src) || typeof HTMLCanvasElement > "u") return e.src;
    let n;
    if (e instanceof HTMLCanvasElement) n = e;
    else {
      fa === void 0 && (fa = bc("canvas")), fa.width = e.width, fa.height = e.height;
      const i = fa.getContext("2d");
      e instanceof ImageData ? i.putImageData(e, 0, 0) : i.drawImage(e, 0, 0, e.width, e.height), n = fa;
    }
    return n.width > 2048 || n.height > 2048 ? (console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons", e), n.toDataURL("image/jpeg", 0.6)) : n.toDataURL("image/png");
  }
  static sRGBToLinear(e) {
    if (typeof HTMLImageElement < "u" && e instanceof HTMLImageElement || typeof HTMLCanvasElement < "u" && e instanceof HTMLCanvasElement || typeof ImageBitmap < "u" && e instanceof ImageBitmap) {
      const n = bc("canvas");
      n.width = e.width, n.height = e.height;
      const i = n.getContext("2d");
      i.drawImage(e, 0, 0, e.width, e.height);
      const u = i.getImageData(0, 0, e.width, e.height), y = u.data;
      for (let t = 0; t < y.length; t++) y[t] = ea(y[t] / 255) * 255;
      return i.putImageData(u, 0, 0), n;
    } else if (e.data) {
      const n = e.data.slice(0);
      for (let i = 0; i < n.length; i++) n instanceof Uint8Array || n instanceof Uint8ClampedArray ? n[i] = Math.floor(ea(n[i] / 255) * 255) : n[i] = ea(n[i]);
      return { data: n, width: e.width, height: e.height };
    } else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."), e;
  }
}
class bm {
  constructor(e = null) {
    this.isSource = true, this.uuid = Ds(), this.data = e, this.version = 0;
  }
  set needsUpdate(e) {
    e === true && this.version++;
  }
  toJSON(e) {
    const n = e === void 0 || typeof e == "string";
    if (!n && e.images[this.uuid] !== void 0) return e.images[this.uuid];
    const i = { uuid: this.uuid, url: "" }, u = this.data;
    if (u !== null) {
      let y;
      if (Array.isArray(u)) {
        y = [];
        for (let t = 0, o = u.length; t < o; t++) u[t].isDataTexture ? y.push(rl(u[t].image)) : y.push(rl(u[t]));
      } else y = rl(u);
      i.url = y;
    }
    return n || (e.images[this.uuid] = i), i;
  }
}
function rl(v) {
  return typeof HTMLImageElement < "u" && v instanceof HTMLImageElement || typeof HTMLCanvasElement < "u" && v instanceof HTMLCanvasElement || typeof ImageBitmap < "u" && v instanceof ImageBitmap ? vm.getDataURL(v) : v.data ? { data: Array.from(v.data), width: v.width, height: v.height, type: v.data.constructor.name } : (console.warn("THREE.Texture: Unable to serialize Texture."), {});
}
let Rg = 0;
class Mi extends Ba {
  constructor(e = Mi.DEFAULT_IMAGE, n = Mi.DEFAULT_MAPPING, i = 1001, u = 1001, y = 1006, t = 1008, o = 1023, s = 1009, c = 1, h = 3e3) {
    super(), this.isTexture = true, Object.defineProperty(this, "id", { value: Rg++ }), this.uuid = Ds(), this.name = "", this.source = new bm(e), this.mipmaps = [], this.mapping = n, this.wrapS = i, this.wrapT = u, this.magFilter = y, this.minFilter = t, this.anisotropy = c, this.format = o, this.internalFormat = null, this.type = s, this.offset = new In(0, 0), this.repeat = new In(1, 1), this.center = new In(0, 0), this.rotation = 0, this.matrixAutoUpdate = true, this.matrix = new Vi(), this.generateMipmaps = true, this.premultiplyAlpha = false, this.flipY = true, this.unpackAlignment = 4, this.encoding = h, this.userData = {}, this.version = 0, this.onUpdate = null, this.isRenderTargetTexture = false, this.needsPMREMUpdate = false;
  }
  get image() {
    return this.source.data;
  }
  set image(e) {
    this.source.data = e;
  }
  updateMatrix() {
    this.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y);
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(e) {
    return this.name = e.name, this.source = e.source, this.mipmaps = e.mipmaps.slice(0), this.mapping = e.mapping, this.wrapS = e.wrapS, this.wrapT = e.wrapT, this.magFilter = e.magFilter, this.minFilter = e.minFilter, this.anisotropy = e.anisotropy, this.format = e.format, this.internalFormat = e.internalFormat, this.type = e.type, this.offset.copy(e.offset), this.repeat.copy(e.repeat), this.center.copy(e.center), this.rotation = e.rotation, this.matrixAutoUpdate = e.matrixAutoUpdate, this.matrix.copy(e.matrix), this.generateMipmaps = e.generateMipmaps, this.premultiplyAlpha = e.premultiplyAlpha, this.flipY = e.flipY, this.unpackAlignment = e.unpackAlignment, this.encoding = e.encoding, this.userData = JSON.parse(JSON.stringify(e.userData)), this.needsUpdate = true, this;
  }
  toJSON(e) {
    const n = e === void 0 || typeof e == "string";
    if (!n && e.textures[this.uuid] !== void 0) return e.textures[this.uuid];
    const i = { metadata: { version: 4.5, type: "Texture", generator: "Texture.toJSON" }, uuid: this.uuid, name: this.name, image: this.source.toJSON(e).uuid, mapping: this.mapping, repeat: [this.repeat.x, this.repeat.y], offset: [this.offset.x, this.offset.y], center: [this.center.x, this.center.y], rotation: this.rotation, wrap: [this.wrapS, this.wrapT], format: this.format, type: this.type, encoding: this.encoding, minFilter: this.minFilter, magFilter: this.magFilter, anisotropy: this.anisotropy, flipY: this.flipY, premultiplyAlpha: this.premultiplyAlpha, unpackAlignment: this.unpackAlignment };
    return JSON.stringify(this.userData) !== "{}" && (i.userData = this.userData), n || (e.textures[this.uuid] = i), i;
  }
  dispose() {
    this.dispatchEvent({ type: "dispose" });
  }
  transformUv(e) {
    if (this.mapping !== 300) return e;
    if (e.applyMatrix3(this.matrix), e.x < 0 || e.x > 1) switch (this.wrapS) {
      case 1e3:
        e.x = e.x - Math.floor(e.x);
        break;
      case 1001:
        e.x = e.x < 0 ? 0 : 1;
        break;
      case 1002:
        Math.abs(Math.floor(e.x) % 2) === 1 ? e.x = Math.ceil(e.x) - e.x : e.x = e.x - Math.floor(e.x);
        break;
    }
    if (e.y < 0 || e.y > 1) switch (this.wrapT) {
      case 1e3:
        e.y = e.y - Math.floor(e.y);
        break;
      case 1001:
        e.y = e.y < 0 ? 0 : 1;
        break;
      case 1002:
        Math.abs(Math.floor(e.y) % 2) === 1 ? e.y = Math.ceil(e.y) - e.y : e.y = e.y - Math.floor(e.y);
        break;
    }
    return this.flipY && (e.y = 1 - e.y), e;
  }
  set needsUpdate(e) {
    e === true && (this.version++, this.source.needsUpdate = true);
  }
}
Mi.DEFAULT_IMAGE = null;
Mi.DEFAULT_MAPPING = 300;
class ci {
  constructor(e = 0, n = 0, i = 0, u = 1) {
    ci.prototype.isVector4 = true, this.x = e, this.y = n, this.z = i, this.w = u;
  }
  get width() {
    return this.z;
  }
  set width(e) {
    this.z = e;
  }
  get height() {
    return this.w;
  }
  set height(e) {
    this.w = e;
  }
  set(e, n, i, u) {
    return this.x = e, this.y = n, this.z = i, this.w = u, this;
  }
  setScalar(e) {
    return this.x = e, this.y = e, this.z = e, this.w = e, this;
  }
  setX(e) {
    return this.x = e, this;
  }
  setY(e) {
    return this.y = e, this;
  }
  setZ(e) {
    return this.z = e, this;
  }
  setW(e) {
    return this.w = e, this;
  }
  setComponent(e, n) {
    switch (e) {
      case 0:
        this.x = n;
        break;
      case 1:
        this.y = n;
        break;
      case 2:
        this.z = n;
        break;
      case 3:
        this.w = n;
        break;
      default:
        throw new Error("index is out of range: " + e);
    }
    return this;
  }
  getComponent(e) {
    switch (e) {
      case 0:
        return this.x;
      case 1:
        return this.y;
      case 2:
        return this.z;
      case 3:
        return this.w;
      default:
        throw new Error("index is out of range: " + e);
    }
  }
  clone() {
    return new this.constructor(this.x, this.y, this.z, this.w);
  }
  copy(e) {
    return this.x = e.x, this.y = e.y, this.z = e.z, this.w = e.w !== void 0 ? e.w : 1, this;
  }
  add(e) {
    return this.x += e.x, this.y += e.y, this.z += e.z, this.w += e.w, this;
  }
  addScalar(e) {
    return this.x += e, this.y += e, this.z += e, this.w += e, this;
  }
  addVectors(e, n) {
    return this.x = e.x + n.x, this.y = e.y + n.y, this.z = e.z + n.z, this.w = e.w + n.w, this;
  }
  addScaledVector(e, n) {
    return this.x += e.x * n, this.y += e.y * n, this.z += e.z * n, this.w += e.w * n, this;
  }
  sub(e) {
    return this.x -= e.x, this.y -= e.y, this.z -= e.z, this.w -= e.w, this;
  }
  subScalar(e) {
    return this.x -= e, this.y -= e, this.z -= e, this.w -= e, this;
  }
  subVectors(e, n) {
    return this.x = e.x - n.x, this.y = e.y - n.y, this.z = e.z - n.z, this.w = e.w - n.w, this;
  }
  multiply(e) {
    return this.x *= e.x, this.y *= e.y, this.z *= e.z, this.w *= e.w, this;
  }
  multiplyScalar(e) {
    return this.x *= e, this.y *= e, this.z *= e, this.w *= e, this;
  }
  applyMatrix4(e) {
    const n = this.x, i = this.y, u = this.z, y = this.w, t = e.elements;
    return this.x = t[0] * n + t[4] * i + t[8] * u + t[12] * y, this.y = t[1] * n + t[5] * i + t[9] * u + t[13] * y, this.z = t[2] * n + t[6] * i + t[10] * u + t[14] * y, this.w = t[3] * n + t[7] * i + t[11] * u + t[15] * y, this;
  }
  divideScalar(e) {
    return this.multiplyScalar(1 / e);
  }
  setAxisAngleFromQuaternion(e) {
    this.w = 2 * Math.acos(e.w);
    const n = Math.sqrt(1 - e.w * e.w);
    return n < 1e-4 ? (this.x = 1, this.y = 0, this.z = 0) : (this.x = e.x / n, this.y = e.y / n, this.z = e.z / n), this;
  }
  setAxisAngleFromRotationMatrix(e) {
    let n, i, u, y;
    const t = e.elements, o = t[0], s = t[4], c = t[8], h = t[1], f = t[5], r = t[9], m = t[2], g = t[6], a = t[10];
    if (Math.abs(s - h) < 0.01 && Math.abs(c - m) < 0.01 && Math.abs(r - g) < 0.01) {
      if (Math.abs(s + h) < 0.1 && Math.abs(c + m) < 0.1 && Math.abs(r + g) < 0.1 && Math.abs(o + f + a - 3) < 0.1) return this.set(1, 0, 0, 0), this;
      n = Math.PI;
      const d = (o + 1) / 2, b = (f + 1) / 2, S = (a + 1) / 2, E = (s + h) / 4, R = (c + m) / 4, k = (r + g) / 4;
      return d > b && d > S ? d < 0.01 ? (i = 0, u = 0.707106781, y = 0.707106781) : (i = Math.sqrt(d), u = E / i, y = R / i) : b > S ? b < 0.01 ? (i = 0.707106781, u = 0, y = 0.707106781) : (u = Math.sqrt(b), i = E / u, y = k / u) : S < 0.01 ? (i = 0.707106781, u = 0.707106781, y = 0) : (y = Math.sqrt(S), i = R / y, u = k / y), this.set(i, u, y, n), this;
    }
    let l = Math.sqrt((g - r) * (g - r) + (c - m) * (c - m) + (h - s) * (h - s));
    return Math.abs(l) < 1e-3 && (l = 1), this.x = (g - r) / l, this.y = (c - m) / l, this.z = (h - s) / l, this.w = Math.acos((o + f + a - 1) / 2), this;
  }
  min(e) {
    return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this.z = Math.min(this.z, e.z), this.w = Math.min(this.w, e.w), this;
  }
  max(e) {
    return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this.z = Math.max(this.z, e.z), this.w = Math.max(this.w, e.w), this;
  }
  clamp(e, n) {
    return this.x = Math.max(e.x, Math.min(n.x, this.x)), this.y = Math.max(e.y, Math.min(n.y, this.y)), this.z = Math.max(e.z, Math.min(n.z, this.z)), this.w = Math.max(e.w, Math.min(n.w, this.w)), this;
  }
  clampScalar(e, n) {
    return this.x = Math.max(e, Math.min(n, this.x)), this.y = Math.max(e, Math.min(n, this.y)), this.z = Math.max(e, Math.min(n, this.z)), this.w = Math.max(e, Math.min(n, this.w)), this;
  }
  clampLength(e, n) {
    const i = this.length();
    return this.divideScalar(i || 1).multiplyScalar(Math.max(e, Math.min(n, i)));
  }
  floor() {
    return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this.w = Math.floor(this.w), this;
  }
  ceil() {
    return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this.w = Math.ceil(this.w), this;
  }
  round() {
    return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this.w = Math.round(this.w), this;
  }
  roundToZero() {
    return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w), this;
  }
  negate() {
    return this.x = -this.x, this.y = -this.y, this.z = -this.z, this.w = -this.w, this;
  }
  dot(e) {
    return this.x * e.x + this.y * e.y + this.z * e.z + this.w * e.w;
  }
  lengthSq() {
    return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;
  }
  length() {
    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
  }
  manhattanLength() {
    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);
  }
  normalize() {
    return this.divideScalar(this.length() || 1);
  }
  setLength(e) {
    return this.normalize().multiplyScalar(e);
  }
  lerp(e, n) {
    return this.x += (e.x - this.x) * n, this.y += (e.y - this.y) * n, this.z += (e.z - this.z) * n, this.w += (e.w - this.w) * n, this;
  }
  lerpVectors(e, n, i) {
    return this.x = e.x + (n.x - e.x) * i, this.y = e.y + (n.y - e.y) * i, this.z = e.z + (n.z - e.z) * i, this.w = e.w + (n.w - e.w) * i, this;
  }
  equals(e) {
    return e.x === this.x && e.y === this.y && e.z === this.z && e.w === this.w;
  }
  fromArray(e, n = 0) {
    return this.x = e[n], this.y = e[n + 1], this.z = e[n + 2], this.w = e[n + 3], this;
  }
  toArray(e = [], n = 0) {
    return e[n] = this.x, e[n + 1] = this.y, e[n + 2] = this.z, e[n + 3] = this.w, e;
  }
  fromBufferAttribute(e, n) {
    return this.x = e.getX(n), this.y = e.getY(n), this.z = e.getZ(n), this.w = e.getW(n), this;
  }
  random() {
    return this.x = Math.random(), this.y = Math.random(), this.z = Math.random(), this.w = Math.random(), this;
  }
  *[Symbol.iterator]() {
    yield this.x, yield this.y, yield this.z, yield this.w;
  }
}
class ia extends Ba {
  constructor(e, n, i = {}) {
    super(), this.isWebGLRenderTarget = true, this.width = e, this.height = n, this.depth = 1, this.scissor = new ci(0, 0, e, n), this.scissorTest = false, this.viewport = new ci(0, 0, e, n);
    const u = { width: e, height: n, depth: 1 };
    this.texture = new Mi(u, i.mapping, i.wrapS, i.wrapT, i.magFilter, i.minFilter, i.format, i.type, i.anisotropy, i.encoding), this.texture.isRenderTargetTexture = true, this.texture.flipY = false, this.texture.generateMipmaps = i.generateMipmaps !== void 0 ? i.generateMipmaps : false, this.texture.internalFormat = i.internalFormat !== void 0 ? i.internalFormat : null, this.texture.minFilter = i.minFilter !== void 0 ? i.minFilter : 1006, this.depthBuffer = i.depthBuffer !== void 0 ? i.depthBuffer : true, this.stencilBuffer = i.stencilBuffer !== void 0 ? i.stencilBuffer : false, this.depthTexture = i.depthTexture !== void 0 ? i.depthTexture : null, this.samples = i.samples !== void 0 ? i.samples : 0;
  }
  setSize(e, n, i = 1) {
    (this.width !== e || this.height !== n || this.depth !== i) && (this.width = e, this.height = n, this.depth = i, this.texture.image.width = e, this.texture.image.height = n, this.texture.image.depth = i, this.dispose()), this.viewport.set(0, 0, e, n), this.scissor.set(0, 0, e, n);
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(e) {
    this.width = e.width, this.height = e.height, this.depth = e.depth, this.viewport.copy(e.viewport), this.texture = e.texture.clone(), this.texture.isRenderTargetTexture = true;
    const n = Object.assign({}, e.texture.image);
    return this.texture.source = new bm(n), this.depthBuffer = e.depthBuffer, this.stencilBuffer = e.stencilBuffer, e.depthTexture !== null && (this.depthTexture = e.depthTexture.clone()), this.samples = e.samples, this;
  }
  dispose() {
    this.dispatchEvent({ type: "dispose" });
  }
}
class wm extends Mi {
  constructor(e = null, n = 1, i = 1, u = 1) {
    super(null), this.isDataArrayTexture = true, this.image = { data: e, width: n, height: i, depth: u }, this.magFilter = 1003, this.minFilter = 1003, this.wrapR = 1001, this.generateMipmaps = false, this.flipY = false, this.unpackAlignment = 1;
  }
}
class Mg extends Mi {
  constructor(e = null, n = 1, i = 1, u = 1) {
    super(null), this.isData3DTexture = true, this.image = { data: e, width: n, height: i, depth: u }, this.magFilter = 1003, this.minFilter = 1003, this.wrapR = 1001, this.generateMipmaps = false, this.flipY = false, this.unpackAlignment = 1;
  }
}
class Fs {
  constructor(e = 0, n = 0, i = 0, u = 1) {
    this.isQuaternion = true, this._x = e, this._y = n, this._z = i, this._w = u;
  }
  static slerpFlat(e, n, i, u, y, t, o) {
    let s = i[u + 0], c = i[u + 1], h = i[u + 2], f = i[u + 3];
    const r = y[t + 0], m = y[t + 1], g = y[t + 2], a = y[t + 3];
    if (o === 0) {
      e[n + 0] = s, e[n + 1] = c, e[n + 2] = h, e[n + 3] = f;
      return;
    }
    if (o === 1) {
      e[n + 0] = r, e[n + 1] = m, e[n + 2] = g, e[n + 3] = a;
      return;
    }
    if (f !== a || s !== r || c !== m || h !== g) {
      let l = 1 - o;
      const d = s * r + c * m + h * g + f * a, b = d >= 0 ? 1 : -1, S = 1 - d * d;
      if (S > Number.EPSILON) {
        const R = Math.sqrt(S), k = Math.atan2(R, d * b);
        l = Math.sin(l * k) / R, o = Math.sin(o * k) / R;
      }
      const E = o * b;
      if (s = s * l + r * E, c = c * l + m * E, h = h * l + g * E, f = f * l + a * E, l === 1 - o) {
        const R = 1 / Math.sqrt(s * s + c * c + h * h + f * f);
        s *= R, c *= R, h *= R, f *= R;
      }
    }
    e[n] = s, e[n + 1] = c, e[n + 2] = h, e[n + 3] = f;
  }
  static multiplyQuaternionsFlat(e, n, i, u, y, t) {
    const o = i[u], s = i[u + 1], c = i[u + 2], h = i[u + 3], f = y[t], r = y[t + 1], m = y[t + 2], g = y[t + 3];
    return e[n] = o * g + h * f + s * m - c * r, e[n + 1] = s * g + h * r + c * f - o * m, e[n + 2] = c * g + h * m + o * r - s * f, e[n + 3] = h * g - o * f - s * r - c * m, e;
  }
  get x() {
    return this._x;
  }
  set x(e) {
    this._x = e, this._onChangeCallback();
  }
  get y() {
    return this._y;
  }
  set y(e) {
    this._y = e, this._onChangeCallback();
  }
  get z() {
    return this._z;
  }
  set z(e) {
    this._z = e, this._onChangeCallback();
  }
  get w() {
    return this._w;
  }
  set w(e) {
    this._w = e, this._onChangeCallback();
  }
  set(e, n, i, u) {
    return this._x = e, this._y = n, this._z = i, this._w = u, this._onChangeCallback(), this;
  }
  clone() {
    return new this.constructor(this._x, this._y, this._z, this._w);
  }
  copy(e) {
    return this._x = e.x, this._y = e.y, this._z = e.z, this._w = e.w, this._onChangeCallback(), this;
  }
  setFromEuler(e, n) {
    if (!(e && e.isEuler)) throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");
    const i = e._x, u = e._y, y = e._z, t = e._order, o = Math.cos, s = Math.sin, c = o(i / 2), h = o(u / 2), f = o(y / 2), r = s(i / 2), m = s(u / 2), g = s(y / 2);
    switch (t) {
      case "XYZ":
        this._x = r * h * f + c * m * g, this._y = c * m * f - r * h * g, this._z = c * h * g + r * m * f, this._w = c * h * f - r * m * g;
        break;
      case "YXZ":
        this._x = r * h * f + c * m * g, this._y = c * m * f - r * h * g, this._z = c * h * g - r * m * f, this._w = c * h * f + r * m * g;
        break;
      case "ZXY":
        this._x = r * h * f - c * m * g, this._y = c * m * f + r * h * g, this._z = c * h * g + r * m * f, this._w = c * h * f - r * m * g;
        break;
      case "ZYX":
        this._x = r * h * f - c * m * g, this._y = c * m * f + r * h * g, this._z = c * h * g - r * m * f, this._w = c * h * f + r * m * g;
        break;
      case "YZX":
        this._x = r * h * f + c * m * g, this._y = c * m * f + r * h * g, this._z = c * h * g - r * m * f, this._w = c * h * f - r * m * g;
        break;
      case "XZY":
        this._x = r * h * f - c * m * g, this._y = c * m * f - r * h * g, this._z = c * h * g + r * m * f, this._w = c * h * f + r * m * g;
        break;
      default:
        console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: " + t);
    }
    return n !== false && this._onChangeCallback(), this;
  }
  setFromAxisAngle(e, n) {
    const i = n / 2, u = Math.sin(i);
    return this._x = e.x * u, this._y = e.y * u, this._z = e.z * u, this._w = Math.cos(i), this._onChangeCallback(), this;
  }
  setFromRotationMatrix(e) {
    const n = e.elements, i = n[0], u = n[4], y = n[8], t = n[1], o = n[5], s = n[9], c = n[2], h = n[6], f = n[10], r = i + o + f;
    if (r > 0) {
      const m = 0.5 / Math.sqrt(r + 1);
      this._w = 0.25 / m, this._x = (h - s) * m, this._y = (y - c) * m, this._z = (t - u) * m;
    } else if (i > o && i > f) {
      const m = 2 * Math.sqrt(1 + i - o - f);
      this._w = (h - s) / m, this._x = 0.25 * m, this._y = (u + t) / m, this._z = (y + c) / m;
    } else if (o > f) {
      const m = 2 * Math.sqrt(1 + o - i - f);
      this._w = (y - c) / m, this._x = (u + t) / m, this._y = 0.25 * m, this._z = (s + h) / m;
    } else {
      const m = 2 * Math.sqrt(1 + f - i - o);
      this._w = (t - u) / m, this._x = (y + c) / m, this._y = (s + h) / m, this._z = 0.25 * m;
    }
    return this._onChangeCallback(), this;
  }
  setFromUnitVectors(e, n) {
    let i = e.dot(n) + 1;
    return i < Number.EPSILON ? (i = 0, Math.abs(e.x) > Math.abs(e.z) ? (this._x = -e.y, this._y = e.x, this._z = 0, this._w = i) : (this._x = 0, this._y = -e.z, this._z = e.y, this._w = i)) : (this._x = e.y * n.z - e.z * n.y, this._y = e.z * n.x - e.x * n.z, this._z = e.x * n.y - e.y * n.x, this._w = i), this.normalize();
  }
  angleTo(e) {
    return 2 * Math.acos(Math.abs(Ci(this.dot(e), -1, 1)));
  }
  rotateTowards(e, n) {
    const i = this.angleTo(e);
    if (i === 0) return this;
    const u = Math.min(1, n / i);
    return this.slerp(e, u), this;
  }
  identity() {
    return this.set(0, 0, 0, 1);
  }
  invert() {
    return this.conjugate();
  }
  conjugate() {
    return this._x *= -1, this._y *= -1, this._z *= -1, this._onChangeCallback(), this;
  }
  dot(e) {
    return this._x * e._x + this._y * e._y + this._z * e._z + this._w * e._w;
  }
  lengthSq() {
    return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;
  }
  length() {
    return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);
  }
  normalize() {
    let e = this.length();
    return e === 0 ? (this._x = 0, this._y = 0, this._z = 0, this._w = 1) : (e = 1 / e, this._x = this._x * e, this._y = this._y * e, this._z = this._z * e, this._w = this._w * e), this._onChangeCallback(), this;
  }
  multiply(e) {
    return this.multiplyQuaternions(this, e);
  }
  premultiply(e) {
    return this.multiplyQuaternions(e, this);
  }
  multiplyQuaternions(e, n) {
    const i = e._x, u = e._y, y = e._z, t = e._w, o = n._x, s = n._y, c = n._z, h = n._w;
    return this._x = i * h + t * o + u * c - y * s, this._y = u * h + t * s + y * o - i * c, this._z = y * h + t * c + i * s - u * o, this._w = t * h - i * o - u * s - y * c, this._onChangeCallback(), this;
  }
  slerp(e, n) {
    if (n === 0) return this;
    if (n === 1) return this.copy(e);
    const i = this._x, u = this._y, y = this._z, t = this._w;
    let o = t * e._w + i * e._x + u * e._y + y * e._z;
    if (o < 0 ? (this._w = -e._w, this._x = -e._x, this._y = -e._y, this._z = -e._z, o = -o) : this.copy(e), o >= 1) return this._w = t, this._x = i, this._y = u, this._z = y, this;
    const s = 1 - o * o;
    if (s <= Number.EPSILON) {
      const m = 1 - n;
      return this._w = m * t + n * this._w, this._x = m * i + n * this._x, this._y = m * u + n * this._y, this._z = m * y + n * this._z, this.normalize(), this._onChangeCallback(), this;
    }
    const c = Math.sqrt(s), h = Math.atan2(c, o), f = Math.sin((1 - n) * h) / c, r = Math.sin(n * h) / c;
    return this._w = t * f + this._w * r, this._x = i * f + this._x * r, this._y = u * f + this._y * r, this._z = y * f + this._z * r, this._onChangeCallback(), this;
  }
  slerpQuaternions(e, n, i) {
    return this.copy(e).slerp(n, i);
  }
  random() {
    const e = Math.random(), n = Math.sqrt(1 - e), i = Math.sqrt(e), u = 2 * Math.PI * Math.random(), y = 2 * Math.PI * Math.random();
    return this.set(n * Math.cos(u), i * Math.sin(y), i * Math.cos(y), n * Math.sin(u));
  }
  equals(e) {
    return e._x === this._x && e._y === this._y && e._z === this._z && e._w === this._w;
  }
  fromArray(e, n = 0) {
    return this._x = e[n], this._y = e[n + 1], this._z = e[n + 2], this._w = e[n + 3], this._onChangeCallback(), this;
  }
  toArray(e = [], n = 0) {
    return e[n] = this._x, e[n + 1] = this._y, e[n + 2] = this._z, e[n + 3] = this._w, e;
  }
  fromBufferAttribute(e, n) {
    return this._x = e.getX(n), this._y = e.getY(n), this._z = e.getZ(n), this._w = e.getW(n), this;
  }
  _onChange(e) {
    return this._onChangeCallback = e, this;
  }
  _onChangeCallback() {
  }
  *[Symbol.iterator]() {
    yield this._x, yield this._y, yield this._z, yield this._w;
  }
}
class _r {
  constructor(e = 0, n = 0, i = 0) {
    _r.prototype.isVector3 = true, this.x = e, this.y = n, this.z = i;
  }
  set(e, n, i) {
    return i === void 0 && (i = this.z), this.x = e, this.y = n, this.z = i, this;
  }
  setScalar(e) {
    return this.x = e, this.y = e, this.z = e, this;
  }
  setX(e) {
    return this.x = e, this;
  }
  setY(e) {
    return this.y = e, this;
  }
  setZ(e) {
    return this.z = e, this;
  }
  setComponent(e, n) {
    switch (e) {
      case 0:
        this.x = n;
        break;
      case 1:
        this.y = n;
        break;
      case 2:
        this.z = n;
        break;
      default:
        throw new Error("index is out of range: " + e);
    }
    return this;
  }
  getComponent(e) {
    switch (e) {
      case 0:
        return this.x;
      case 1:
        return this.y;
      case 2:
        return this.z;
      default:
        throw new Error("index is out of range: " + e);
    }
  }
  clone() {
    return new this.constructor(this.x, this.y, this.z);
  }
  copy(e) {
    return this.x = e.x, this.y = e.y, this.z = e.z, this;
  }
  add(e) {
    return this.x += e.x, this.y += e.y, this.z += e.z, this;
  }
  addScalar(e) {
    return this.x += e, this.y += e, this.z += e, this;
  }
  addVectors(e, n) {
    return this.x = e.x + n.x, this.y = e.y + n.y, this.z = e.z + n.z, this;
  }
  addScaledVector(e, n) {
    return this.x += e.x * n, this.y += e.y * n, this.z += e.z * n, this;
  }
  sub(e) {
    return this.x -= e.x, this.y -= e.y, this.z -= e.z, this;
  }
  subScalar(e) {
    return this.x -= e, this.y -= e, this.z -= e, this;
  }
  subVectors(e, n) {
    return this.x = e.x - n.x, this.y = e.y - n.y, this.z = e.z - n.z, this;
  }
  multiply(e) {
    return this.x *= e.x, this.y *= e.y, this.z *= e.z, this;
  }
  multiplyScalar(e) {
    return this.x *= e, this.y *= e, this.z *= e, this;
  }
  multiplyVectors(e, n) {
    return this.x = e.x * n.x, this.y = e.y * n.y, this.z = e.z * n.z, this;
  }
  applyEuler(e) {
    return this.applyQuaternion(Ah.setFromEuler(e));
  }
  applyAxisAngle(e, n) {
    return this.applyQuaternion(Ah.setFromAxisAngle(e, n));
  }
  applyMatrix3(e) {
    const n = this.x, i = this.y, u = this.z, y = e.elements;
    return this.x = y[0] * n + y[3] * i + y[6] * u, this.y = y[1] * n + y[4] * i + y[7] * u, this.z = y[2] * n + y[5] * i + y[8] * u, this;
  }
  applyNormalMatrix(e) {
    return this.applyMatrix3(e).normalize();
  }
  applyMatrix4(e) {
    const n = this.x, i = this.y, u = this.z, y = e.elements, t = 1 / (y[3] * n + y[7] * i + y[11] * u + y[15]);
    return this.x = (y[0] * n + y[4] * i + y[8] * u + y[12]) * t, this.y = (y[1] * n + y[5] * i + y[9] * u + y[13]) * t, this.z = (y[2] * n + y[6] * i + y[10] * u + y[14]) * t, this;
  }
  applyQuaternion(e) {
    const n = this.x, i = this.y, u = this.z, y = e.x, t = e.y, o = e.z, s = e.w, c = s * n + t * u - o * i, h = s * i + o * n - y * u, f = s * u + y * i - t * n, r = -y * n - t * i - o * u;
    return this.x = c * s + r * -y + h * -o - f * -t, this.y = h * s + r * -t + f * -y - c * -o, this.z = f * s + r * -o + c * -t - h * -y, this;
  }
  project(e) {
    return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix);
  }
  unproject(e) {
    return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld);
  }
  transformDirection(e) {
    const n = this.x, i = this.y, u = this.z, y = e.elements;
    return this.x = y[0] * n + y[4] * i + y[8] * u, this.y = y[1] * n + y[5] * i + y[9] * u, this.z = y[2] * n + y[6] * i + y[10] * u, this.normalize();
  }
  divide(e) {
    return this.x /= e.x, this.y /= e.y, this.z /= e.z, this;
  }
  divideScalar(e) {
    return this.multiplyScalar(1 / e);
  }
  min(e) {
    return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this.z = Math.min(this.z, e.z), this;
  }
  max(e) {
    return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this.z = Math.max(this.z, e.z), this;
  }
  clamp(e, n) {
    return this.x = Math.max(e.x, Math.min(n.x, this.x)), this.y = Math.max(e.y, Math.min(n.y, this.y)), this.z = Math.max(e.z, Math.min(n.z, this.z)), this;
  }
  clampScalar(e, n) {
    return this.x = Math.max(e, Math.min(n, this.x)), this.y = Math.max(e, Math.min(n, this.y)), this.z = Math.max(e, Math.min(n, this.z)), this;
  }
  clampLength(e, n) {
    const i = this.length();
    return this.divideScalar(i || 1).multiplyScalar(Math.max(e, Math.min(n, i)));
  }
  floor() {
    return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this;
  }
  ceil() {
    return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this;
  }
  round() {
    return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this;
  }
  roundToZero() {
    return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this;
  }
  negate() {
    return this.x = -this.x, this.y = -this.y, this.z = -this.z, this;
  }
  dot(e) {
    return this.x * e.x + this.y * e.y + this.z * e.z;
  }
  lengthSq() {
    return this.x * this.x + this.y * this.y + this.z * this.z;
  }
  length() {
    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
  }
  manhattanLength() {
    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);
  }
  normalize() {
    return this.divideScalar(this.length() || 1);
  }
  setLength(e) {
    return this.normalize().multiplyScalar(e);
  }
  lerp(e, n) {
    return this.x += (e.x - this.x) * n, this.y += (e.y - this.y) * n, this.z += (e.z - this.z) * n, this;
  }
  lerpVectors(e, n, i) {
    return this.x = e.x + (n.x - e.x) * i, this.y = e.y + (n.y - e.y) * i, this.z = e.z + (n.z - e.z) * i, this;
  }
  cross(e) {
    return this.crossVectors(this, e);
  }
  crossVectors(e, n) {
    const i = e.x, u = e.y, y = e.z, t = n.x, o = n.y, s = n.z;
    return this.x = u * s - y * o, this.y = y * t - i * s, this.z = i * o - u * t, this;
  }
  projectOnVector(e) {
    const n = e.lengthSq();
    if (n === 0) return this.set(0, 0, 0);
    const i = e.dot(this) / n;
    return this.copy(e).multiplyScalar(i);
  }
  projectOnPlane(e) {
    return nl.copy(this).projectOnVector(e), this.sub(nl);
  }
  reflect(e) {
    return this.sub(nl.copy(e).multiplyScalar(2 * this.dot(e)));
  }
  angleTo(e) {
    const n = Math.sqrt(this.lengthSq() * e.lengthSq());
    if (n === 0) return Math.PI / 2;
    const i = this.dot(e) / n;
    return Math.acos(Ci(i, -1, 1));
  }
  distanceTo(e) {
    return Math.sqrt(this.distanceToSquared(e));
  }
  distanceToSquared(e) {
    const n = this.x - e.x, i = this.y - e.y, u = this.z - e.z;
    return n * n + i * i + u * u;
  }
  manhattanDistanceTo(e) {
    return Math.abs(this.x - e.x) + Math.abs(this.y - e.y) + Math.abs(this.z - e.z);
  }
  setFromSpherical(e) {
    return this.setFromSphericalCoords(e.radius, e.phi, e.theta);
  }
  setFromSphericalCoords(e, n, i) {
    const u = Math.sin(n) * e;
    return this.x = u * Math.sin(i), this.y = Math.cos(n) * e, this.z = u * Math.cos(i), this;
  }
  setFromCylindrical(e) {
    return this.setFromCylindricalCoords(e.radius, e.theta, e.y);
  }
  setFromCylindricalCoords(e, n, i) {
    return this.x = e * Math.sin(n), this.y = i, this.z = e * Math.cos(n), this;
  }
  setFromMatrixPosition(e) {
    const n = e.elements;
    return this.x = n[12], this.y = n[13], this.z = n[14], this;
  }
  setFromMatrixScale(e) {
    const n = this.setFromMatrixColumn(e, 0).length(), i = this.setFromMatrixColumn(e, 1).length(), u = this.setFromMatrixColumn(e, 2).length();
    return this.x = n, this.y = i, this.z = u, this;
  }
  setFromMatrixColumn(e, n) {
    return this.fromArray(e.elements, n * 4);
  }
  setFromMatrix3Column(e, n) {
    return this.fromArray(e.elements, n * 3);
  }
  setFromEuler(e) {
    return this.x = e._x, this.y = e._y, this.z = e._z, this;
  }
  equals(e) {
    return e.x === this.x && e.y === this.y && e.z === this.z;
  }
  fromArray(e, n = 0) {
    return this.x = e[n], this.y = e[n + 1], this.z = e[n + 2], this;
  }
  toArray(e = [], n = 0) {
    return e[n] = this.x, e[n + 1] = this.y, e[n + 2] = this.z, e;
  }
  fromBufferAttribute(e, n) {
    return this.x = e.getX(n), this.y = e.getY(n), this.z = e.getZ(n), this;
  }
  random() {
    return this.x = Math.random(), this.y = Math.random(), this.z = Math.random(), this;
  }
  randomDirection() {
    const e = (Math.random() - 0.5) * 2, n = Math.random() * Math.PI * 2, i = Math.sqrt(1 - e ** 2);
    return this.x = i * Math.cos(n), this.y = i * Math.sin(n), this.z = e, this;
  }
  *[Symbol.iterator]() {
    yield this.x, yield this.y, yield this.z;
  }
}
const nl = new _r(), Ah = new Fs();
class Us {
  constructor(e = new _r(1 / 0, 1 / 0, 1 / 0), n = new _r(-1 / 0, -1 / 0, -1 / 0)) {
    this.isBox3 = true, this.min = e, this.max = n;
  }
  set(e, n) {
    return this.min.copy(e), this.max.copy(n), this;
  }
  setFromArray(e) {
    let n = 1 / 0, i = 1 / 0, u = 1 / 0, y = -1 / 0, t = -1 / 0, o = -1 / 0;
    for (let s = 0, c = e.length; s < c; s += 3) {
      const h = e[s], f = e[s + 1], r = e[s + 2];
      h < n && (n = h), f < i && (i = f), r < u && (u = r), h > y && (y = h), f > t && (t = f), r > o && (o = r);
    }
    return this.min.set(n, i, u), this.max.set(y, t, o), this;
  }
  setFromBufferAttribute(e) {
    let n = 1 / 0, i = 1 / 0, u = 1 / 0, y = -1 / 0, t = -1 / 0, o = -1 / 0;
    for (let s = 0, c = e.count; s < c; s++) {
      const h = e.getX(s), f = e.getY(s), r = e.getZ(s);
      h < n && (n = h), f < i && (i = f), r < u && (u = r), h > y && (y = h), f > t && (t = f), r > o && (o = r);
    }
    return this.min.set(n, i, u), this.max.set(y, t, o), this;
  }
  setFromPoints(e) {
    this.makeEmpty();
    for (let n = 0, i = e.length; n < i; n++) this.expandByPoint(e[n]);
    return this;
  }
  setFromCenterAndSize(e, n) {
    const i = zo.copy(n).multiplyScalar(0.5);
    return this.min.copy(e).sub(i), this.max.copy(e).add(i), this;
  }
  setFromObject(e, n = false) {
    return this.makeEmpty(), this.expandByObject(e, n);
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(e) {
    return this.min.copy(e.min), this.max.copy(e.max), this;
  }
  makeEmpty() {
    return this.min.x = this.min.y = this.min.z = 1 / 0, this.max.x = this.max.y = this.max.z = -1 / 0, this;
  }
  isEmpty() {
    return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;
  }
  getCenter(e) {
    return this.isEmpty() ? e.set(0, 0, 0) : e.addVectors(this.min, this.max).multiplyScalar(0.5);
  }
  getSize(e) {
    return this.isEmpty() ? e.set(0, 0, 0) : e.subVectors(this.max, this.min);
  }
  expandByPoint(e) {
    return this.min.min(e), this.max.max(e), this;
  }
  expandByVector(e) {
    return this.min.sub(e), this.max.add(e), this;
  }
  expandByScalar(e) {
    return this.min.addScalar(-e), this.max.addScalar(e), this;
  }
  expandByObject(e, n = false) {
    e.updateWorldMatrix(false, false);
    const i = e.geometry;
    if (i !== void 0) if (n && i.attributes != null && i.attributes.position !== void 0) {
      const y = i.attributes.position;
      for (let t = 0, o = y.count; t < o; t++) zo.fromBufferAttribute(y, t).applyMatrix4(e.matrixWorld), this.expandByPoint(zo);
    } else i.boundingBox === null && i.computeBoundingBox(), il.copy(i.boundingBox), il.applyMatrix4(e.matrixWorld), this.union(il);
    const u = e.children;
    for (let y = 0, t = u.length; y < t; y++) this.expandByObject(u[y], n);
    return this;
  }
  containsPoint(e) {
    return !(e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y || e.z < this.min.z || e.z > this.max.z);
  }
  containsBox(e) {
    return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y && this.min.z <= e.min.z && e.max.z <= this.max.z;
  }
  getParameter(e, n) {
    return n.set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y), (e.z - this.min.z) / (this.max.z - this.min.z));
  }
  intersectsBox(e) {
    return !(e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y || e.max.z < this.min.z || e.min.z > this.max.z);
  }
  intersectsSphere(e) {
    return this.clampPoint(e.center, zo), zo.distanceToSquared(e.center) <= e.radius * e.radius;
  }
  intersectsPlane(e) {
    let n, i;
    return e.normal.x > 0 ? (n = e.normal.x * this.min.x, i = e.normal.x * this.max.x) : (n = e.normal.x * this.max.x, i = e.normal.x * this.min.x), e.normal.y > 0 ? (n += e.normal.y * this.min.y, i += e.normal.y * this.max.y) : (n += e.normal.y * this.max.y, i += e.normal.y * this.min.y), e.normal.z > 0 ? (n += e.normal.z * this.min.z, i += e.normal.z * this.max.z) : (n += e.normal.z * this.max.z, i += e.normal.z * this.min.z), n <= -e.constant && i >= -e.constant;
  }
  intersectsTriangle(e) {
    if (this.isEmpty()) return false;
    this.getCenter(ys), Ou.subVectors(this.max, ys), pa.subVectors(e.a, ys), ha.subVectors(e.b, ys), da.subVectors(e.c, ys), Po.subVectors(ha, pa), Co.subVectors(da, ha), Ho.subVectors(pa, da);
    let n = [0, -Po.z, Po.y, 0, -Co.z, Co.y, 0, -Ho.z, Ho.y, Po.z, 0, -Po.x, Co.z, 0, -Co.x, Ho.z, 0, -Ho.x, -Po.y, Po.x, 0, -Co.y, Co.x, 0, -Ho.y, Ho.x, 0];
    return !ol(n, pa, ha, da, Ou) || (n = [1, 0, 0, 0, 1, 0, 0, 0, 1], !ol(n, pa, ha, da, Ou)) ? false : (Pu.crossVectors(Po, Co), n = [Pu.x, Pu.y, Pu.z], ol(n, pa, ha, da, Ou));
  }
  clampPoint(e, n) {
    return n.copy(e).clamp(this.min, this.max);
  }
  distanceToPoint(e) {
    return zo.copy(e).clamp(this.min, this.max).sub(e).length();
  }
  getBoundingSphere(e) {
    return this.getCenter(e.center), e.radius = this.getSize(zo).length() * 0.5, e;
  }
  intersect(e) {
    return this.min.max(e.min), this.max.min(e.max), this.isEmpty() && this.makeEmpty(), this;
  }
  union(e) {
    return this.min.min(e.min), this.max.max(e.max), this;
  }
  applyMatrix4(e) {
    return this.isEmpty() ? this : (lo[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(e), lo[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(e), lo[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(e), lo[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(e), lo[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(e), lo[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(e), lo[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(e), lo[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(e), this.setFromPoints(lo), this);
  }
  translate(e) {
    return this.min.add(e), this.max.add(e), this;
  }
  equals(e) {
    return e.min.equals(this.min) && e.max.equals(this.max);
  }
}
const lo = [new _r(), new _r(), new _r(), new _r(), new _r(), new _r(), new _r(), new _r()], zo = new _r(), il = new Us(), pa = new _r(), ha = new _r(), da = new _r(), Po = new _r(), Co = new _r(), Ho = new _r(), ys = new _r(), Ou = new _r(), Pu = new _r(), Go = new _r();
function ol(v, e, n, i, u) {
  for (let y = 0, t = v.length - 3; y <= t; y += 3) {
    Go.fromArray(v, y);
    const o = u.x * Math.abs(Go.x) + u.y * Math.abs(Go.y) + u.z * Math.abs(Go.z), s = e.dot(Go), c = n.dot(Go), h = i.dot(Go);
    if (Math.max(-Math.max(s, c, h), Math.min(s, c, h)) > o) return false;
  }
  return true;
}
const Ig = new Us(), xh = new _r(), Cu = new _r(), al = new _r();
class Bs {
  constructor(e = new _r(), n = -1) {
    this.center = e, this.radius = n;
  }
  set(e, n) {
    return this.center.copy(e), this.radius = n, this;
  }
  setFromPoints(e, n) {
    const i = this.center;
    n !== void 0 ? i.copy(n) : Ig.setFromPoints(e).getCenter(i);
    let u = 0;
    for (let y = 0, t = e.length; y < t; y++) u = Math.max(u, i.distanceToSquared(e[y]));
    return this.radius = Math.sqrt(u), this;
  }
  copy(e) {
    return this.center.copy(e.center), this.radius = e.radius, this;
  }
  isEmpty() {
    return this.radius < 0;
  }
  makeEmpty() {
    return this.center.set(0, 0, 0), this.radius = -1, this;
  }
  containsPoint(e) {
    return e.distanceToSquared(this.center) <= this.radius * this.radius;
  }
  distanceToPoint(e) {
    return e.distanceTo(this.center) - this.radius;
  }
  intersectsSphere(e) {
    const n = this.radius + e.radius;
    return e.center.distanceToSquared(this.center) <= n * n;
  }
  intersectsBox(e) {
    return e.intersectsSphere(this);
  }
  intersectsPlane(e) {
    return Math.abs(e.distanceToPoint(this.center)) <= this.radius;
  }
  clampPoint(e, n) {
    const i = this.center.distanceToSquared(e);
    return n.copy(e), i > this.radius * this.radius && (n.sub(this.center).normalize(), n.multiplyScalar(this.radius).add(this.center)), n;
  }
  getBoundingBox(e) {
    return this.isEmpty() ? (e.makeEmpty(), e) : (e.set(this.center, this.center), e.expandByScalar(this.radius), e);
  }
  applyMatrix4(e) {
    return this.center.applyMatrix4(e), this.radius = this.radius * e.getMaxScaleOnAxis(), this;
  }
  translate(e) {
    return this.center.add(e), this;
  }
  expandByPoint(e) {
    al.subVectors(e, this.center);
    const n = al.lengthSq();
    if (n > this.radius * this.radius) {
      const i = Math.sqrt(n), u = (i - this.radius) * 0.5;
      this.center.add(al.multiplyScalar(u / i)), this.radius += u;
    }
    return this;
  }
  union(e) {
    return this.center.equals(e.center) === true ? Cu.set(0, 0, 1).multiplyScalar(e.radius) : Cu.subVectors(e.center, this.center).normalize().multiplyScalar(e.radius), this.expandByPoint(xh.copy(e.center).add(Cu)), this.expandByPoint(xh.copy(e.center).sub(Cu)), this;
  }
  equals(e) {
    return e.center.equals(this.center) && e.radius === this.radius;
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
const fo = new _r(), sl = new _r(), Ru = new _r(), Ro = new _r(), ul = new _r(), Mu = new _r(), cl = new _r();
class Lg {
  constructor(e = new _r(), n = new _r(0, 0, -1)) {
    this.origin = e, this.direction = n;
  }
  set(e, n) {
    return this.origin.copy(e), this.direction.copy(n), this;
  }
  copy(e) {
    return this.origin.copy(e.origin), this.direction.copy(e.direction), this;
  }
  at(e, n) {
    return n.copy(this.direction).multiplyScalar(e).add(this.origin);
  }
  lookAt(e) {
    return this.direction.copy(e).sub(this.origin).normalize(), this;
  }
  recast(e) {
    return this.origin.copy(this.at(e, fo)), this;
  }
  closestPointToPoint(e, n) {
    n.subVectors(e, this.origin);
    const i = n.dot(this.direction);
    return i < 0 ? n.copy(this.origin) : n.copy(this.direction).multiplyScalar(i).add(this.origin);
  }
  distanceToPoint(e) {
    return Math.sqrt(this.distanceSqToPoint(e));
  }
  distanceSqToPoint(e) {
    const n = fo.subVectors(e, this.origin).dot(this.direction);
    return n < 0 ? this.origin.distanceToSquared(e) : (fo.copy(this.direction).multiplyScalar(n).add(this.origin), fo.distanceToSquared(e));
  }
  distanceSqToSegment(e, n, i, u) {
    sl.copy(e).add(n).multiplyScalar(0.5), Ru.copy(n).sub(e).normalize(), Ro.copy(this.origin).sub(sl);
    const y = e.distanceTo(n) * 0.5, t = -this.direction.dot(Ru), o = Ro.dot(this.direction), s = -Ro.dot(Ru), c = Ro.lengthSq(), h = Math.abs(1 - t * t);
    let f, r, m, g;
    if (h > 0) if (f = t * s - o, r = t * o - s, g = y * h, f >= 0) if (r >= -g) if (r <= g) {
      const a = 1 / h;
      f *= a, r *= a, m = f * (f + t * r + 2 * o) + r * (t * f + r + 2 * s) + c;
    } else r = y, f = Math.max(0, -(t * r + o)), m = -f * f + r * (r + 2 * s) + c;
    else r = -y, f = Math.max(0, -(t * r + o)), m = -f * f + r * (r + 2 * s) + c;
    else r <= -g ? (f = Math.max(0, -(-t * y + o)), r = f > 0 ? -y : Math.min(Math.max(-y, -s), y), m = -f * f + r * (r + 2 * s) + c) : r <= g ? (f = 0, r = Math.min(Math.max(-y, -s), y), m = r * (r + 2 * s) + c) : (f = Math.max(0, -(t * y + o)), r = f > 0 ? y : Math.min(Math.max(-y, -s), y), m = -f * f + r * (r + 2 * s) + c);
    else r = t > 0 ? -y : y, f = Math.max(0, -(t * r + o)), m = -f * f + r * (r + 2 * s) + c;
    return i && i.copy(this.direction).multiplyScalar(f).add(this.origin), u && u.copy(Ru).multiplyScalar(r).add(sl), m;
  }
  intersectSphere(e, n) {
    fo.subVectors(e.center, this.origin);
    const i = fo.dot(this.direction), u = fo.dot(fo) - i * i, y = e.radius * e.radius;
    if (u > y) return null;
    const t = Math.sqrt(y - u), o = i - t, s = i + t;
    return o < 0 && s < 0 ? null : o < 0 ? this.at(s, n) : this.at(o, n);
  }
  intersectsSphere(e) {
    return this.distanceSqToPoint(e.center) <= e.radius * e.radius;
  }
  distanceToPlane(e) {
    const n = e.normal.dot(this.direction);
    if (n === 0) return e.distanceToPoint(this.origin) === 0 ? 0 : null;
    const i = -(this.origin.dot(e.normal) + e.constant) / n;
    return i >= 0 ? i : null;
  }
  intersectPlane(e, n) {
    const i = this.distanceToPlane(e);
    return i === null ? null : this.at(i, n);
  }
  intersectsPlane(e) {
    const n = e.distanceToPoint(this.origin);
    return n === 0 || e.normal.dot(this.direction) * n < 0;
  }
  intersectBox(e, n) {
    let i, u, y, t, o, s;
    const c = 1 / this.direction.x, h = 1 / this.direction.y, f = 1 / this.direction.z, r = this.origin;
    return c >= 0 ? (i = (e.min.x - r.x) * c, u = (e.max.x - r.x) * c) : (i = (e.max.x - r.x) * c, u = (e.min.x - r.x) * c), h >= 0 ? (y = (e.min.y - r.y) * h, t = (e.max.y - r.y) * h) : (y = (e.max.y - r.y) * h, t = (e.min.y - r.y) * h), i > t || y > u || ((y > i || i !== i) && (i = y), (t < u || u !== u) && (u = t), f >= 0 ? (o = (e.min.z - r.z) * f, s = (e.max.z - r.z) * f) : (o = (e.max.z - r.z) * f, s = (e.min.z - r.z) * f), i > s || o > u) || ((o > i || i !== i) && (i = o), (s < u || u !== u) && (u = s), u < 0) ? null : this.at(i >= 0 ? i : u, n);
  }
  intersectsBox(e) {
    return this.intersectBox(e, fo) !== null;
  }
  intersectTriangle(e, n, i, u, y) {
    ul.subVectors(n, e), Mu.subVectors(i, e), cl.crossVectors(ul, Mu);
    let t = this.direction.dot(cl), o;
    if (t > 0) {
      if (u) return null;
      o = 1;
    } else if (t < 0) o = -1, t = -t;
    else return null;
    Ro.subVectors(this.origin, e);
    const s = o * this.direction.dot(Mu.crossVectors(Ro, Mu));
    if (s < 0) return null;
    const c = o * this.direction.dot(ul.cross(Ro));
    if (c < 0 || s + c > t) return null;
    const h = -o * Ro.dot(cl);
    return h < 0 ? null : this.at(h / t, y);
  }
  applyMatrix4(e) {
    return this.origin.applyMatrix4(e), this.direction.transformDirection(e), this;
  }
  equals(e) {
    return e.origin.equals(this.origin) && e.direction.equals(this.direction);
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
class li {
  constructor() {
    li.prototype.isMatrix4 = true, this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
  }
  set(e, n, i, u, y, t, o, s, c, h, f, r, m, g, a, l) {
    const d = this.elements;
    return d[0] = e, d[4] = n, d[8] = i, d[12] = u, d[1] = y, d[5] = t, d[9] = o, d[13] = s, d[2] = c, d[6] = h, d[10] = f, d[14] = r, d[3] = m, d[7] = g, d[11] = a, d[15] = l, this;
  }
  identity() {
    return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
  }
  clone() {
    return new li().fromArray(this.elements);
  }
  copy(e) {
    const n = this.elements, i = e.elements;
    return n[0] = i[0], n[1] = i[1], n[2] = i[2], n[3] = i[3], n[4] = i[4], n[5] = i[5], n[6] = i[6], n[7] = i[7], n[8] = i[8], n[9] = i[9], n[10] = i[10], n[11] = i[11], n[12] = i[12], n[13] = i[13], n[14] = i[14], n[15] = i[15], this;
  }
  copyPosition(e) {
    const n = this.elements, i = e.elements;
    return n[12] = i[12], n[13] = i[13], n[14] = i[14], this;
  }
  setFromMatrix3(e) {
    const n = e.elements;
    return this.set(n[0], n[3], n[6], 0, n[1], n[4], n[7], 0, n[2], n[5], n[8], 0, 0, 0, 0, 1), this;
  }
  extractBasis(e, n, i) {
    return e.setFromMatrixColumn(this, 0), n.setFromMatrixColumn(this, 1), i.setFromMatrixColumn(this, 2), this;
  }
  makeBasis(e, n, i) {
    return this.set(e.x, n.x, i.x, 0, e.y, n.y, i.y, 0, e.z, n.z, i.z, 0, 0, 0, 0, 1), this;
  }
  extractRotation(e) {
    const n = this.elements, i = e.elements, u = 1 / ma.setFromMatrixColumn(e, 0).length(), y = 1 / ma.setFromMatrixColumn(e, 1).length(), t = 1 / ma.setFromMatrixColumn(e, 2).length();
    return n[0] = i[0] * u, n[1] = i[1] * u, n[2] = i[2] * u, n[3] = 0, n[4] = i[4] * y, n[5] = i[5] * y, n[6] = i[6] * y, n[7] = 0, n[8] = i[8] * t, n[9] = i[9] * t, n[10] = i[10] * t, n[11] = 0, n[12] = 0, n[13] = 0, n[14] = 0, n[15] = 1, this;
  }
  makeRotationFromEuler(e) {
    const n = this.elements, i = e.x, u = e.y, y = e.z, t = Math.cos(i), o = Math.sin(i), s = Math.cos(u), c = Math.sin(u), h = Math.cos(y), f = Math.sin(y);
    if (e.order === "XYZ") {
      const r = t * h, m = t * f, g = o * h, a = o * f;
      n[0] = s * h, n[4] = -s * f, n[8] = c, n[1] = m + g * c, n[5] = r - a * c, n[9] = -o * s, n[2] = a - r * c, n[6] = g + m * c, n[10] = t * s;
    } else if (e.order === "YXZ") {
      const r = s * h, m = s * f, g = c * h, a = c * f;
      n[0] = r + a * o, n[4] = g * o - m, n[8] = t * c, n[1] = t * f, n[5] = t * h, n[9] = -o, n[2] = m * o - g, n[6] = a + r * o, n[10] = t * s;
    } else if (e.order === "ZXY") {
      const r = s * h, m = s * f, g = c * h, a = c * f;
      n[0] = r - a * o, n[4] = -t * f, n[8] = g + m * o, n[1] = m + g * o, n[5] = t * h, n[9] = a - r * o, n[2] = -t * c, n[6] = o, n[10] = t * s;
    } else if (e.order === "ZYX") {
      const r = t * h, m = t * f, g = o * h, a = o * f;
      n[0] = s * h, n[4] = g * c - m, n[8] = r * c + a, n[1] = s * f, n[5] = a * c + r, n[9] = m * c - g, n[2] = -c, n[6] = o * s, n[10] = t * s;
    } else if (e.order === "YZX") {
      const r = t * s, m = t * c, g = o * s, a = o * c;
      n[0] = s * h, n[4] = a - r * f, n[8] = g * f + m, n[1] = f, n[5] = t * h, n[9] = -o * h, n[2] = -c * h, n[6] = m * f + g, n[10] = r - a * f;
    } else if (e.order === "XZY") {
      const r = t * s, m = t * c, g = o * s, a = o * c;
      n[0] = s * h, n[4] = -f, n[8] = c * h, n[1] = r * f + a, n[5] = t * h, n[9] = m * f - g, n[2] = g * f - m, n[6] = o * h, n[10] = a * f + r;
    }
    return n[3] = 0, n[7] = 0, n[11] = 0, n[12] = 0, n[13] = 0, n[14] = 0, n[15] = 1, this;
  }
  makeRotationFromQuaternion(e) {
    return this.compose(Bg, e, Ng);
  }
  lookAt(e, n, i) {
    const u = this.elements;
    return Oi.subVectors(e, n), Oi.lengthSq() === 0 && (Oi.z = 1), Oi.normalize(), Mo.crossVectors(i, Oi), Mo.lengthSq() === 0 && (Math.abs(i.z) === 1 ? Oi.x += 1e-4 : Oi.z += 1e-4, Oi.normalize(), Mo.crossVectors(i, Oi)), Mo.normalize(), Iu.crossVectors(Oi, Mo), u[0] = Mo.x, u[4] = Iu.x, u[8] = Oi.x, u[1] = Mo.y, u[5] = Iu.y, u[9] = Oi.y, u[2] = Mo.z, u[6] = Iu.z, u[10] = Oi.z, this;
  }
  multiply(e) {
    return this.multiplyMatrices(this, e);
  }
  premultiply(e) {
    return this.multiplyMatrices(e, this);
  }
  multiplyMatrices(e, n) {
    const i = e.elements, u = n.elements, y = this.elements, t = i[0], o = i[4], s = i[8], c = i[12], h = i[1], f = i[5], r = i[9], m = i[13], g = i[2], a = i[6], l = i[10], d = i[14], b = i[3], S = i[7], E = i[11], R = i[15], k = u[0], w = u[4], F = u[8], I = u[12], q = u[1], N = u[5], H = u[9], _ = u[13], x = u[2], L = u[6], j = u[10], z = u[14], Z = u[3], ue = u[7], $ = u[11], X = u[15];
    return y[0] = t * k + o * q + s * x + c * Z, y[4] = t * w + o * N + s * L + c * ue, y[8] = t * F + o * H + s * j + c * $, y[12] = t * I + o * _ + s * z + c * X, y[1] = h * k + f * q + r * x + m * Z, y[5] = h * w + f * N + r * L + m * ue, y[9] = h * F + f * H + r * j + m * $, y[13] = h * I + f * _ + r * z + m * X, y[2] = g * k + a * q + l * x + d * Z, y[6] = g * w + a * N + l * L + d * ue, y[10] = g * F + a * H + l * j + d * $, y[14] = g * I + a * _ + l * z + d * X, y[3] = b * k + S * q + E * x + R * Z, y[7] = b * w + S * N + E * L + R * ue, y[11] = b * F + S * H + E * j + R * $, y[15] = b * I + S * _ + E * z + R * X, this;
  }
  multiplyScalar(e) {
    const n = this.elements;
    return n[0] *= e, n[4] *= e, n[8] *= e, n[12] *= e, n[1] *= e, n[5] *= e, n[9] *= e, n[13] *= e, n[2] *= e, n[6] *= e, n[10] *= e, n[14] *= e, n[3] *= e, n[7] *= e, n[11] *= e, n[15] *= e, this;
  }
  determinant() {
    const e = this.elements, n = e[0], i = e[4], u = e[8], y = e[12], t = e[1], o = e[5], s = e[9], c = e[13], h = e[2], f = e[6], r = e[10], m = e[14], g = e[3], a = e[7], l = e[11], d = e[15];
    return g * (+y * s * f - u * c * f - y * o * r + i * c * r + u * o * m - i * s * m) + a * (+n * s * m - n * c * r + y * t * r - u * t * m + u * c * h - y * s * h) + l * (+n * c * f - n * o * m - y * t * f + i * t * m + y * o * h - i * c * h) + d * (-u * o * h - n * s * f + n * o * r + u * t * f - i * t * r + i * s * h);
  }
  transpose() {
    const e = this.elements;
    let n;
    return n = e[1], e[1] = e[4], e[4] = n, n = e[2], e[2] = e[8], e[8] = n, n = e[6], e[6] = e[9], e[9] = n, n = e[3], e[3] = e[12], e[12] = n, n = e[7], e[7] = e[13], e[13] = n, n = e[11], e[11] = e[14], e[14] = n, this;
  }
  setPosition(e, n, i) {
    const u = this.elements;
    return e.isVector3 ? (u[12] = e.x, u[13] = e.y, u[14] = e.z) : (u[12] = e, u[13] = n, u[14] = i), this;
  }
  invert() {
    const e = this.elements, n = e[0], i = e[1], u = e[2], y = e[3], t = e[4], o = e[5], s = e[6], c = e[7], h = e[8], f = e[9], r = e[10], m = e[11], g = e[12], a = e[13], l = e[14], d = e[15], b = f * l * c - a * r * c + a * s * m - o * l * m - f * s * d + o * r * d, S = g * r * c - h * l * c - g * s * m + t * l * m + h * s * d - t * r * d, E = h * a * c - g * f * c + g * o * m - t * a * m - h * o * d + t * f * d, R = g * f * s - h * a * s - g * o * r + t * a * r + h * o * l - t * f * l, k = n * b + i * S + u * E + y * R;
    if (k === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    const w = 1 / k;
    return e[0] = b * w, e[1] = (a * r * y - f * l * y - a * u * m + i * l * m + f * u * d - i * r * d) * w, e[2] = (o * l * y - a * s * y + a * u * c - i * l * c - o * u * d + i * s * d) * w, e[3] = (f * s * y - o * r * y - f * u * c + i * r * c + o * u * m - i * s * m) * w, e[4] = S * w, e[5] = (h * l * y - g * r * y + g * u * m - n * l * m - h * u * d + n * r * d) * w, e[6] = (g * s * y - t * l * y - g * u * c + n * l * c + t * u * d - n * s * d) * w, e[7] = (t * r * y - h * s * y + h * u * c - n * r * c - t * u * m + n * s * m) * w, e[8] = E * w, e[9] = (g * f * y - h * a * y - g * i * m + n * a * m + h * i * d - n * f * d) * w, e[10] = (t * a * y - g * o * y + g * i * c - n * a * c - t * i * d + n * o * d) * w, e[11] = (h * o * y - t * f * y - h * i * c + n * f * c + t * i * m - n * o * m) * w, e[12] = R * w, e[13] = (h * a * u - g * f * u + g * i * r - n * a * r - h * i * l + n * f * l) * w, e[14] = (g * o * u - t * a * u - g * i * s + n * a * s + t * i * l - n * o * l) * w, e[15] = (t * f * u - h * o * u + h * i * s - n * f * s - t * i * r + n * o * r) * w, this;
  }
  scale(e) {
    const n = this.elements, i = e.x, u = e.y, y = e.z;
    return n[0] *= i, n[4] *= u, n[8] *= y, n[1] *= i, n[5] *= u, n[9] *= y, n[2] *= i, n[6] *= u, n[10] *= y, n[3] *= i, n[7] *= u, n[11] *= y, this;
  }
  getMaxScaleOnAxis() {
    const e = this.elements, n = e[0] * e[0] + e[1] * e[1] + e[2] * e[2], i = e[4] * e[4] + e[5] * e[5] + e[6] * e[6], u = e[8] * e[8] + e[9] * e[9] + e[10] * e[10];
    return Math.sqrt(Math.max(n, i, u));
  }
  makeTranslation(e, n, i) {
    return this.set(1, 0, 0, e, 0, 1, 0, n, 0, 0, 1, i, 0, 0, 0, 1), this;
  }
  makeRotationX(e) {
    const n = Math.cos(e), i = Math.sin(e);
    return this.set(1, 0, 0, 0, 0, n, -i, 0, 0, i, n, 0, 0, 0, 0, 1), this;
  }
  makeRotationY(e) {
    const n = Math.cos(e), i = Math.sin(e);
    return this.set(n, 0, i, 0, 0, 1, 0, 0, -i, 0, n, 0, 0, 0, 0, 1), this;
  }
  makeRotationZ(e) {
    const n = Math.cos(e), i = Math.sin(e);
    return this.set(n, -i, 0, 0, i, n, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
  }
  makeRotationAxis(e, n) {
    const i = Math.cos(n), u = Math.sin(n), y = 1 - i, t = e.x, o = e.y, s = e.z, c = y * t, h = y * o;
    return this.set(c * t + i, c * o - u * s, c * s + u * o, 0, c * o + u * s, h * o + i, h * s - u * t, 0, c * s - u * o, h * s + u * t, y * s * s + i, 0, 0, 0, 0, 1), this;
  }
  makeScale(e, n, i) {
    return this.set(e, 0, 0, 0, 0, n, 0, 0, 0, 0, i, 0, 0, 0, 0, 1), this;
  }
  makeShear(e, n, i, u, y, t) {
    return this.set(1, i, y, 0, e, 1, t, 0, n, u, 1, 0, 0, 0, 0, 1), this;
  }
  compose(e, n, i) {
    const u = this.elements, y = n._x, t = n._y, o = n._z, s = n._w, c = y + y, h = t + t, f = o + o, r = y * c, m = y * h, g = y * f, a = t * h, l = t * f, d = o * f, b = s * c, S = s * h, E = s * f, R = i.x, k = i.y, w = i.z;
    return u[0] = (1 - (a + d)) * R, u[1] = (m + E) * R, u[2] = (g - S) * R, u[3] = 0, u[4] = (m - E) * k, u[5] = (1 - (r + d)) * k, u[6] = (l + b) * k, u[7] = 0, u[8] = (g + S) * w, u[9] = (l - b) * w, u[10] = (1 - (r + a)) * w, u[11] = 0, u[12] = e.x, u[13] = e.y, u[14] = e.z, u[15] = 1, this;
  }
  decompose(e, n, i) {
    const u = this.elements;
    let y = ma.set(u[0], u[1], u[2]).length();
    const t = ma.set(u[4], u[5], u[6]).length(), o = ma.set(u[8], u[9], u[10]).length();
    this.determinant() < 0 && (y = -y), e.x = u[12], e.y = u[13], e.z = u[14], Hi.copy(this);
    const s = 1 / y, c = 1 / t, h = 1 / o;
    return Hi.elements[0] *= s, Hi.elements[1] *= s, Hi.elements[2] *= s, Hi.elements[4] *= c, Hi.elements[5] *= c, Hi.elements[6] *= c, Hi.elements[8] *= h, Hi.elements[9] *= h, Hi.elements[10] *= h, n.setFromRotationMatrix(Hi), i.x = y, i.y = t, i.z = o, this;
  }
  makePerspective(e, n, i, u, y, t) {
    const o = this.elements, s = 2 * y / (n - e), c = 2 * y / (i - u), h = (n + e) / (n - e), f = (i + u) / (i - u), r = -(t + y) / (t - y), m = -2 * t * y / (t - y);
    return o[0] = s, o[4] = 0, o[8] = h, o[12] = 0, o[1] = 0, o[5] = c, o[9] = f, o[13] = 0, o[2] = 0, o[6] = 0, o[10] = r, o[14] = m, o[3] = 0, o[7] = 0, o[11] = -1, o[15] = 0, this;
  }
  makeOrthographic(e, n, i, u, y, t) {
    const o = this.elements, s = 1 / (n - e), c = 1 / (i - u), h = 1 / (t - y), f = (n + e) * s, r = (i + u) * c, m = (t + y) * h;
    return o[0] = 2 * s, o[4] = 0, o[8] = 0, o[12] = -f, o[1] = 0, o[5] = 2 * c, o[9] = 0, o[13] = -r, o[2] = 0, o[6] = 0, o[10] = -2 * h, o[14] = -m, o[3] = 0, o[7] = 0, o[11] = 0, o[15] = 1, this;
  }
  equals(e) {
    const n = this.elements, i = e.elements;
    for (let u = 0; u < 16; u++) if (n[u] !== i[u]) return false;
    return true;
  }
  fromArray(e, n = 0) {
    for (let i = 0; i < 16; i++) this.elements[i] = e[i + n];
    return this;
  }
  toArray(e = [], n = 0) {
    const i = this.elements;
    return e[n] = i[0], e[n + 1] = i[1], e[n + 2] = i[2], e[n + 3] = i[3], e[n + 4] = i[4], e[n + 5] = i[5], e[n + 6] = i[6], e[n + 7] = i[7], e[n + 8] = i[8], e[n + 9] = i[9], e[n + 10] = i[10], e[n + 11] = i[11], e[n + 12] = i[12], e[n + 13] = i[13], e[n + 14] = i[14], e[n + 15] = i[15], e;
  }
}
const ma = new _r(), Hi = new li(), Bg = new _r(0, 0, 0), Ng = new _r(1, 1, 1), Mo = new _r(), Iu = new _r(), Oi = new _r(), Th = new li(), kh = new Fs();
class js {
  constructor(e = 0, n = 0, i = 0, u = js.DefaultOrder) {
    this.isEuler = true, this._x = e, this._y = n, this._z = i, this._order = u;
  }
  get x() {
    return this._x;
  }
  set x(e) {
    this._x = e, this._onChangeCallback();
  }
  get y() {
    return this._y;
  }
  set y(e) {
    this._y = e, this._onChangeCallback();
  }
  get z() {
    return this._z;
  }
  set z(e) {
    this._z = e, this._onChangeCallback();
  }
  get order() {
    return this._order;
  }
  set order(e) {
    this._order = e, this._onChangeCallback();
  }
  set(e, n, i, u = this._order) {
    return this._x = e, this._y = n, this._z = i, this._order = u, this._onChangeCallback(), this;
  }
  clone() {
    return new this.constructor(this._x, this._y, this._z, this._order);
  }
  copy(e) {
    return this._x = e._x, this._y = e._y, this._z = e._z, this._order = e._order, this._onChangeCallback(), this;
  }
  setFromRotationMatrix(e, n = this._order, i = true) {
    const u = e.elements, y = u[0], t = u[4], o = u[8], s = u[1], c = u[5], h = u[9], f = u[2], r = u[6], m = u[10];
    switch (n) {
      case "XYZ":
        this._y = Math.asin(Ci(o, -1, 1)), Math.abs(o) < 0.9999999 ? (this._x = Math.atan2(-h, m), this._z = Math.atan2(-t, y)) : (this._x = Math.atan2(r, c), this._z = 0);
        break;
      case "YXZ":
        this._x = Math.asin(-Ci(h, -1, 1)), Math.abs(h) < 0.9999999 ? (this._y = Math.atan2(o, m), this._z = Math.atan2(s, c)) : (this._y = Math.atan2(-f, y), this._z = 0);
        break;
      case "ZXY":
        this._x = Math.asin(Ci(r, -1, 1)), Math.abs(r) < 0.9999999 ? (this._y = Math.atan2(-f, m), this._z = Math.atan2(-t, c)) : (this._y = 0, this._z = Math.atan2(s, y));
        break;
      case "ZYX":
        this._y = Math.asin(-Ci(f, -1, 1)), Math.abs(f) < 0.9999999 ? (this._x = Math.atan2(r, m), this._z = Math.atan2(s, y)) : (this._x = 0, this._z = Math.atan2(-t, c));
        break;
      case "YZX":
        this._z = Math.asin(Ci(s, -1, 1)), Math.abs(s) < 0.9999999 ? (this._x = Math.atan2(-h, c), this._y = Math.atan2(-f, y)) : (this._x = 0, this._y = Math.atan2(o, m));
        break;
      case "XZY":
        this._z = Math.asin(-Ci(t, -1, 1)), Math.abs(t) < 0.9999999 ? (this._x = Math.atan2(r, c), this._y = Math.atan2(o, y)) : (this._x = Math.atan2(-h, m), this._y = 0);
        break;
      default:
        console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: " + n);
    }
    return this._order = n, i === true && this._onChangeCallback(), this;
  }
  setFromQuaternion(e, n, i) {
    return Th.makeRotationFromQuaternion(e), this.setFromRotationMatrix(Th, n, i);
  }
  setFromVector3(e, n = this._order) {
    return this.set(e.x, e.y, e.z, n);
  }
  reorder(e) {
    return kh.setFromEuler(this), this.setFromQuaternion(kh, e);
  }
  equals(e) {
    return e._x === this._x && e._y === this._y && e._z === this._z && e._order === this._order;
  }
  fromArray(e) {
    return this._x = e[0], this._y = e[1], this._z = e[2], e[3] !== void 0 && (this._order = e[3]), this._onChangeCallback(), this;
  }
  toArray(e = [], n = 0) {
    return e[n] = this._x, e[n + 1] = this._y, e[n + 2] = this._z, e[n + 3] = this._order, e;
  }
  _onChange(e) {
    return this._onChangeCallback = e, this;
  }
  _onChangeCallback() {
  }
  *[Symbol.iterator]() {
    yield this._x, yield this._y, yield this._z, yield this._order;
  }
  toVector3() {
    console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead");
  }
}
js.DefaultOrder = "XYZ";
js.RotationOrders = ["XYZ", "YZX", "ZXY", "XZY", "YXZ", "ZYX"];
class Sm {
  constructor() {
    this.mask = 1;
  }
  set(e) {
    this.mask = (1 << e | 0) >>> 0;
  }
  enable(e) {
    this.mask |= 1 << e | 0;
  }
  enableAll() {
    this.mask = -1;
  }
  toggle(e) {
    this.mask ^= 1 << e | 0;
  }
  disable(e) {
    this.mask &= ~(1 << e | 0);
  }
  disableAll() {
    this.mask = 0;
  }
  test(e) {
    return (this.mask & e.mask) !== 0;
  }
  isEnabled(e) {
    return (this.mask & (1 << e | 0)) !== 0;
  }
}
let Dg = 0;
const Oh = new _r(), ya = new Fs(), po = new li(), Lu = new _r(), gs = new _r(), Fg = new _r(), Ug = new Fs(), Ph = new _r(1, 0, 0), Ch = new _r(0, 1, 0), Rh = new _r(0, 0, 1), jg = { type: "added" }, Mh = { type: "removed" };
class wi extends Ba {
  constructor() {
    super(), this.isObject3D = true, Object.defineProperty(this, "id", { value: Dg++ }), this.uuid = Ds(), this.name = "", this.type = "Object3D", this.parent = null, this.children = [], this.up = wi.DefaultUp.clone();
    const e = new _r(), n = new js(), i = new Fs(), u = new _r(1, 1, 1);
    function y() {
      i.setFromEuler(n, false);
    }
    function t() {
      n.setFromQuaternion(i, void 0, false);
    }
    n._onChange(y), i._onChange(t), Object.defineProperties(this, { position: { configurable: true, enumerable: true, value: e }, rotation: { configurable: true, enumerable: true, value: n }, quaternion: { configurable: true, enumerable: true, value: i }, scale: { configurable: true, enumerable: true, value: u }, modelViewMatrix: { value: new li() }, normalMatrix: { value: new Vi() } }), this.matrix = new li(), this.matrixWorld = new li(), this.matrixAutoUpdate = wi.DefaultMatrixAutoUpdate, this.matrixWorldNeedsUpdate = false, this.layers = new Sm(), this.visible = true, this.castShadow = false, this.receiveShadow = false, this.frustumCulled = true, this.renderOrder = 0, this.animations = [], this.userData = {};
  }
  onBeforeRender() {
  }
  onAfterRender() {
  }
  applyMatrix4(e) {
    this.matrixAutoUpdate && this.updateMatrix(), this.matrix.premultiply(e), this.matrix.decompose(this.position, this.quaternion, this.scale);
  }
  applyQuaternion(e) {
    return this.quaternion.premultiply(e), this;
  }
  setRotationFromAxisAngle(e, n) {
    this.quaternion.setFromAxisAngle(e, n);
  }
  setRotationFromEuler(e) {
    this.quaternion.setFromEuler(e, true);
  }
  setRotationFromMatrix(e) {
    this.quaternion.setFromRotationMatrix(e);
  }
  setRotationFromQuaternion(e) {
    this.quaternion.copy(e);
  }
  rotateOnAxis(e, n) {
    return ya.setFromAxisAngle(e, n), this.quaternion.multiply(ya), this;
  }
  rotateOnWorldAxis(e, n) {
    return ya.setFromAxisAngle(e, n), this.quaternion.premultiply(ya), this;
  }
  rotateX(e) {
    return this.rotateOnAxis(Ph, e);
  }
  rotateY(e) {
    return this.rotateOnAxis(Ch, e);
  }
  rotateZ(e) {
    return this.rotateOnAxis(Rh, e);
  }
  translateOnAxis(e, n) {
    return Oh.copy(e).applyQuaternion(this.quaternion), this.position.add(Oh.multiplyScalar(n)), this;
  }
  translateX(e) {
    return this.translateOnAxis(Ph, e);
  }
  translateY(e) {
    return this.translateOnAxis(Ch, e);
  }
  translateZ(e) {
    return this.translateOnAxis(Rh, e);
  }
  localToWorld(e) {
    return e.applyMatrix4(this.matrixWorld);
  }
  worldToLocal(e) {
    return e.applyMatrix4(po.copy(this.matrixWorld).invert());
  }
  lookAt(e, n, i) {
    e.isVector3 ? Lu.copy(e) : Lu.set(e, n, i);
    const u = this.parent;
    this.updateWorldMatrix(true, false), gs.setFromMatrixPosition(this.matrixWorld), this.isCamera || this.isLight ? po.lookAt(gs, Lu, this.up) : po.lookAt(Lu, gs, this.up), this.quaternion.setFromRotationMatrix(po), u && (po.extractRotation(u.matrixWorld), ya.setFromRotationMatrix(po), this.quaternion.premultiply(ya.invert()));
  }
  add(e) {
    if (arguments.length > 1) {
      for (let n = 0; n < arguments.length; n++) this.add(arguments[n]);
      return this;
    }
    return e === this ? (console.error("THREE.Object3D.add: object can't be added as a child of itself.", e), this) : (e && e.isObject3D ? (e.parent !== null && e.parent.remove(e), e.parent = this, this.children.push(e), e.dispatchEvent(jg)) : console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.", e), this);
  }
  remove(e) {
    if (arguments.length > 1) {
      for (let i = 0; i < arguments.length; i++) this.remove(arguments[i]);
      return this;
    }
    const n = this.children.indexOf(e);
    return n !== -1 && (e.parent = null, this.children.splice(n, 1), e.dispatchEvent(Mh)), this;
  }
  removeFromParent() {
    const e = this.parent;
    return e !== null && e.remove(this), this;
  }
  clear() {
    for (let e = 0; e < this.children.length; e++) {
      const n = this.children[e];
      n.parent = null, n.dispatchEvent(Mh);
    }
    return this.children.length = 0, this;
  }
  attach(e) {
    return this.updateWorldMatrix(true, false), po.copy(this.matrixWorld).invert(), e.parent !== null && (e.parent.updateWorldMatrix(true, false), po.multiply(e.parent.matrixWorld)), e.applyMatrix4(po), this.add(e), e.updateWorldMatrix(false, true), this;
  }
  getObjectById(e) {
    return this.getObjectByProperty("id", e);
  }
  getObjectByName(e) {
    return this.getObjectByProperty("name", e);
  }
  getObjectByProperty(e, n) {
    if (this[e] === n) return this;
    for (let i = 0, u = this.children.length; i < u; i++) {
      const y = this.children[i].getObjectByProperty(e, n);
      if (y !== void 0) return y;
    }
  }
  getWorldPosition(e) {
    return this.updateWorldMatrix(true, false), e.setFromMatrixPosition(this.matrixWorld);
  }
  getWorldQuaternion(e) {
    return this.updateWorldMatrix(true, false), this.matrixWorld.decompose(gs, e, Fg), e;
  }
  getWorldScale(e) {
    return this.updateWorldMatrix(true, false), this.matrixWorld.decompose(gs, Ug, e), e;
  }
  getWorldDirection(e) {
    this.updateWorldMatrix(true, false);
    const n = this.matrixWorld.elements;
    return e.set(n[8], n[9], n[10]).normalize();
  }
  raycast() {
  }
  traverse(e) {
    e(this);
    const n = this.children;
    for (let i = 0, u = n.length; i < u; i++) n[i].traverse(e);
  }
  traverseVisible(e) {
    if (this.visible === false) return;
    e(this);
    const n = this.children;
    for (let i = 0, u = n.length; i < u; i++) n[i].traverseVisible(e);
  }
  traverseAncestors(e) {
    const n = this.parent;
    n !== null && (e(n), n.traverseAncestors(e));
  }
  updateMatrix() {
    this.matrix.compose(this.position, this.quaternion, this.scale), this.matrixWorldNeedsUpdate = true;
  }
  updateMatrixWorld(e) {
    this.matrixAutoUpdate && this.updateMatrix(), (this.matrixWorldNeedsUpdate || e) && (this.parent === null ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), this.matrixWorldNeedsUpdate = false, e = true);
    const n = this.children;
    for (let i = 0, u = n.length; i < u; i++) n[i].updateMatrixWorld(e);
  }
  updateWorldMatrix(e, n) {
    const i = this.parent;
    if (e === true && i !== null && i.updateWorldMatrix(true, false), this.matrixAutoUpdate && this.updateMatrix(), this.parent === null ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), n === true) {
      const u = this.children;
      for (let y = 0, t = u.length; y < t; y++) u[y].updateWorldMatrix(false, true);
    }
  }
  toJSON(e) {
    const n = e === void 0 || typeof e == "string", i = {};
    n && (e = { geometries: {}, materials: {}, textures: {}, images: {}, shapes: {}, skeletons: {}, animations: {}, nodes: {} }, i.metadata = { version: 4.5, type: "Object", generator: "Object3D.toJSON" });
    const u = {};
    u.uuid = this.uuid, u.type = this.type, this.name !== "" && (u.name = this.name), this.castShadow === true && (u.castShadow = true), this.receiveShadow === true && (u.receiveShadow = true), this.visible === false && (u.visible = false), this.frustumCulled === false && (u.frustumCulled = false), this.renderOrder !== 0 && (u.renderOrder = this.renderOrder), JSON.stringify(this.userData) !== "{}" && (u.userData = this.userData), u.layers = this.layers.mask, u.matrix = this.matrix.toArray(), this.matrixAutoUpdate === false && (u.matrixAutoUpdate = false), this.isInstancedMesh && (u.type = "InstancedMesh", u.count = this.count, u.instanceMatrix = this.instanceMatrix.toJSON(), this.instanceColor !== null && (u.instanceColor = this.instanceColor.toJSON()));
    function y(o, s) {
      return o[s.uuid] === void 0 && (o[s.uuid] = s.toJSON(e)), s.uuid;
    }
    if (this.isScene) this.background && (this.background.isColor ? u.background = this.background.toJSON() : this.background.isTexture && (u.background = this.background.toJSON(e).uuid)), this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true && (u.environment = this.environment.toJSON(e).uuid);
    else if (this.isMesh || this.isLine || this.isPoints) {
      u.geometry = y(e.geometries, this.geometry);
      const o = this.geometry.parameters;
      if (o !== void 0 && o.shapes !== void 0) {
        const s = o.shapes;
        if (Array.isArray(s)) for (let c = 0, h = s.length; c < h; c++) {
          const f = s[c];
          y(e.shapes, f);
        }
        else y(e.shapes, s);
      }
    }
    if (this.isSkinnedMesh && (u.bindMode = this.bindMode, u.bindMatrix = this.bindMatrix.toArray(), this.skeleton !== void 0 && (y(e.skeletons, this.skeleton), u.skeleton = this.skeleton.uuid)), this.material !== void 0) if (Array.isArray(this.material)) {
      const o = [];
      for (let s = 0, c = this.material.length; s < c; s++) o.push(y(e.materials, this.material[s]));
      u.material = o;
    } else u.material = y(e.materials, this.material);
    if (this.children.length > 0) {
      u.children = [];
      for (let o = 0; o < this.children.length; o++) u.children.push(this.children[o].toJSON(e).object);
    }
    if (this.animations.length > 0) {
      u.animations = [];
      for (let o = 0; o < this.animations.length; o++) {
        const s = this.animations[o];
        u.animations.push(y(e.animations, s));
      }
    }
    if (n) {
      const o = t(e.geometries), s = t(e.materials), c = t(e.textures), h = t(e.images), f = t(e.shapes), r = t(e.skeletons), m = t(e.animations), g = t(e.nodes);
      o.length > 0 && (i.geometries = o), s.length > 0 && (i.materials = s), c.length > 0 && (i.textures = c), h.length > 0 && (i.images = h), f.length > 0 && (i.shapes = f), r.length > 0 && (i.skeletons = r), m.length > 0 && (i.animations = m), g.length > 0 && (i.nodes = g);
    }
    return i.object = u, i;
    function t(o) {
      const s = [];
      for (const c in o) {
        const h = o[c];
        delete h.metadata, s.push(h);
      }
      return s;
    }
  }
  clone(e) {
    return new this.constructor().copy(this, e);
  }
  copy(e, n = true) {
    if (this.name = e.name, this.up.copy(e.up), this.position.copy(e.position), this.rotation.order = e.rotation.order, this.quaternion.copy(e.quaternion), this.scale.copy(e.scale), this.matrix.copy(e.matrix), this.matrixWorld.copy(e.matrixWorld), this.matrixAutoUpdate = e.matrixAutoUpdate, this.matrixWorldNeedsUpdate = e.matrixWorldNeedsUpdate, this.layers.mask = e.layers.mask, this.visible = e.visible, this.castShadow = e.castShadow, this.receiveShadow = e.receiveShadow, this.frustumCulled = e.frustumCulled, this.renderOrder = e.renderOrder, this.userData = JSON.parse(JSON.stringify(e.userData)), n === true) for (let i = 0; i < e.children.length; i++) {
      const u = e.children[i];
      this.add(u.clone());
    }
    return this;
  }
}
wi.DefaultUp = new _r(0, 1, 0);
wi.DefaultMatrixAutoUpdate = true;
const Gi = new _r(), ho = new _r(), ll = new _r(), mo = new _r(), ga = new _r(), va = new _r(), Ih = new _r(), fl = new _r(), pl = new _r(), hl = new _r();
class Eo {
  constructor(e = new _r(), n = new _r(), i = new _r()) {
    this.a = e, this.b = n, this.c = i;
  }
  static getNormal(e, n, i, u) {
    u.subVectors(i, n), Gi.subVectors(e, n), u.cross(Gi);
    const y = u.lengthSq();
    return y > 0 ? u.multiplyScalar(1 / Math.sqrt(y)) : u.set(0, 0, 0);
  }
  static getBarycoord(e, n, i, u, y) {
    Gi.subVectors(u, n), ho.subVectors(i, n), ll.subVectors(e, n);
    const t = Gi.dot(Gi), o = Gi.dot(ho), s = Gi.dot(ll), c = ho.dot(ho), h = ho.dot(ll), f = t * c - o * o;
    if (f === 0) return y.set(-2, -1, -1);
    const r = 1 / f, m = (c * s - o * h) * r, g = (t * h - o * s) * r;
    return y.set(1 - m - g, g, m);
  }
  static containsPoint(e, n, i, u) {
    return this.getBarycoord(e, n, i, u, mo), mo.x >= 0 && mo.y >= 0 && mo.x + mo.y <= 1;
  }
  static getUV(e, n, i, u, y, t, o, s) {
    return this.getBarycoord(e, n, i, u, mo), s.set(0, 0), s.addScaledVector(y, mo.x), s.addScaledVector(t, mo.y), s.addScaledVector(o, mo.z), s;
  }
  static isFrontFacing(e, n, i, u) {
    return Gi.subVectors(i, n), ho.subVectors(e, n), Gi.cross(ho).dot(u) < 0;
  }
  set(e, n, i) {
    return this.a.copy(e), this.b.copy(n), this.c.copy(i), this;
  }
  setFromPointsAndIndices(e, n, i, u) {
    return this.a.copy(e[n]), this.b.copy(e[i]), this.c.copy(e[u]), this;
  }
  setFromAttributeAndIndices(e, n, i, u) {
    return this.a.fromBufferAttribute(e, n), this.b.fromBufferAttribute(e, i), this.c.fromBufferAttribute(e, u), this;
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(e) {
    return this.a.copy(e.a), this.b.copy(e.b), this.c.copy(e.c), this;
  }
  getArea() {
    return Gi.subVectors(this.c, this.b), ho.subVectors(this.a, this.b), Gi.cross(ho).length() * 0.5;
  }
  getMidpoint(e) {
    return e.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);
  }
  getNormal(e) {
    return Eo.getNormal(this.a, this.b, this.c, e);
  }
  getPlane(e) {
    return e.setFromCoplanarPoints(this.a, this.b, this.c);
  }
  getBarycoord(e, n) {
    return Eo.getBarycoord(e, this.a, this.b, this.c, n);
  }
  getUV(e, n, i, u, y) {
    return Eo.getUV(e, this.a, this.b, this.c, n, i, u, y);
  }
  containsPoint(e) {
    return Eo.containsPoint(e, this.a, this.b, this.c);
  }
  isFrontFacing(e) {
    return Eo.isFrontFacing(this.a, this.b, this.c, e);
  }
  intersectsBox(e) {
    return e.intersectsTriangle(this);
  }
  closestPointToPoint(e, n) {
    const i = this.a, u = this.b, y = this.c;
    let t, o;
    ga.subVectors(u, i), va.subVectors(y, i), fl.subVectors(e, i);
    const s = ga.dot(fl), c = va.dot(fl);
    if (s <= 0 && c <= 0) return n.copy(i);
    pl.subVectors(e, u);
    const h = ga.dot(pl), f = va.dot(pl);
    if (h >= 0 && f <= h) return n.copy(u);
    const r = s * f - h * c;
    if (r <= 0 && s >= 0 && h <= 0) return t = s / (s - h), n.copy(i).addScaledVector(ga, t);
    hl.subVectors(e, y);
    const m = ga.dot(hl), g = va.dot(hl);
    if (g >= 0 && m <= g) return n.copy(y);
    const a = m * c - s * g;
    if (a <= 0 && c >= 0 && g <= 0) return o = c / (c - g), n.copy(i).addScaledVector(va, o);
    const l = h * g - m * f;
    if (l <= 0 && f - h >= 0 && m - g >= 0) return Ih.subVectors(y, u), o = (f - h) / (f - h + (m - g)), n.copy(u).addScaledVector(Ih, o);
    const d = 1 / (l + a + r);
    return t = a * d, o = r * d, n.copy(i).addScaledVector(ga, t).addScaledVector(va, o);
  }
  equals(e) {
    return e.a.equals(this.a) && e.b.equals(this.b) && e.c.equals(this.c);
  }
}
let Vg = 0;
class ua extends Ba {
  constructor() {
    super(), this.isMaterial = true, Object.defineProperty(this, "id", { value: Vg++ }), this.uuid = Ds(), this.name = "", this.type = "Material", this.blending = 1, this.side = 0, this.vertexColors = false, this.opacity = 1, this.transparent = false, this.blendSrc = 204, this.blendDst = 205, this.blendEquation = 100, this.blendSrcAlpha = null, this.blendDstAlpha = null, this.blendEquationAlpha = null, this.depthFunc = 3, this.depthTest = true, this.depthWrite = true, this.stencilWriteMask = 255, this.stencilFunc = 519, this.stencilRef = 0, this.stencilFuncMask = 255, this.stencilFail = 7680, this.stencilZFail = 7680, this.stencilZPass = 7680, this.stencilWrite = false, this.clippingPlanes = null, this.clipIntersection = false, this.clipShadows = false, this.shadowSide = null, this.colorWrite = true, this.precision = null, this.polygonOffset = false, this.polygonOffsetFactor = 0, this.polygonOffsetUnits = 0, this.dithering = false, this.alphaToCoverage = false, this.premultipliedAlpha = false, this.visible = true, this.toneMapped = true, this.userData = {}, this.version = 0, this._alphaTest = 0;
  }
  get alphaTest() {
    return this._alphaTest;
  }
  set alphaTest(e) {
    this._alphaTest > 0 != e > 0 && this.version++, this._alphaTest = e;
  }
  onBuild() {
  }
  onBeforeRender() {
  }
  onBeforeCompile() {
  }
  customProgramCacheKey() {
    return this.onBeforeCompile.toString();
  }
  setValues(e) {
    if (e !== void 0) for (const n in e) {
      const i = e[n];
      if (i === void 0) {
        console.warn("THREE.Material: '" + n + "' parameter is undefined.");
        continue;
      }
      if (n === "shading") {
        console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."), this.flatShading = i === 1;
        continue;
      }
      const u = this[n];
      if (u === void 0) {
        console.warn("THREE." + this.type + ": '" + n + "' is not a property of this material.");
        continue;
      }
      u && u.isColor ? u.set(i) : u && u.isVector3 && i && i.isVector3 ? u.copy(i) : this[n] = i;
    }
  }
  toJSON(e) {
    const n = e === void 0 || typeof e == "string";
    n && (e = { textures: {}, images: {} });
    const i = { metadata: { version: 4.5, type: "Material", generator: "Material.toJSON" } };
    i.uuid = this.uuid, i.type = this.type, this.name !== "" && (i.name = this.name), this.color && this.color.isColor && (i.color = this.color.getHex()), this.roughness !== void 0 && (i.roughness = this.roughness), this.metalness !== void 0 && (i.metalness = this.metalness), this.sheen !== void 0 && (i.sheen = this.sheen), this.sheenColor && this.sheenColor.isColor && (i.sheenColor = this.sheenColor.getHex()), this.sheenRoughness !== void 0 && (i.sheenRoughness = this.sheenRoughness), this.emissive && this.emissive.isColor && (i.emissive = this.emissive.getHex()), this.emissiveIntensity && this.emissiveIntensity !== 1 && (i.emissiveIntensity = this.emissiveIntensity), this.specular && this.specular.isColor && (i.specular = this.specular.getHex()), this.specularIntensity !== void 0 && (i.specularIntensity = this.specularIntensity), this.specularColor && this.specularColor.isColor && (i.specularColor = this.specularColor.getHex()), this.shininess !== void 0 && (i.shininess = this.shininess), this.clearcoat !== void 0 && (i.clearcoat = this.clearcoat), this.clearcoatRoughness !== void 0 && (i.clearcoatRoughness = this.clearcoatRoughness), this.clearcoatMap && this.clearcoatMap.isTexture && (i.clearcoatMap = this.clearcoatMap.toJSON(e).uuid), this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture && (i.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(e).uuid), this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture && (i.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(e).uuid, i.clearcoatNormalScale = this.clearcoatNormalScale.toArray()), this.iridescence !== void 0 && (i.iridescence = this.iridescence), this.iridescenceIOR !== void 0 && (i.iridescenceIOR = this.iridescenceIOR), this.iridescenceThicknessRange !== void 0 && (i.iridescenceThicknessRange = this.iridescenceThicknessRange), this.iridescenceMap && this.iridescenceMap.isTexture && (i.iridescenceMap = this.iridescenceMap.toJSON(e).uuid), this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture && (i.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON(e).uuid), this.map && this.map.isTexture && (i.map = this.map.toJSON(e).uuid), this.matcap && this.matcap.isTexture && (i.matcap = this.matcap.toJSON(e).uuid), this.alphaMap && this.alphaMap.isTexture && (i.alphaMap = this.alphaMap.toJSON(e).uuid), this.lightMap && this.lightMap.isTexture && (i.lightMap = this.lightMap.toJSON(e).uuid, i.lightMapIntensity = this.lightMapIntensity), this.aoMap && this.aoMap.isTexture && (i.aoMap = this.aoMap.toJSON(e).uuid, i.aoMapIntensity = this.aoMapIntensity), this.bumpMap && this.bumpMap.isTexture && (i.bumpMap = this.bumpMap.toJSON(e).uuid, i.bumpScale = this.bumpScale), this.normalMap && this.normalMap.isTexture && (i.normalMap = this.normalMap.toJSON(e).uuid, i.normalMapType = this.normalMapType, i.normalScale = this.normalScale.toArray()), this.displacementMap && this.displacementMap.isTexture && (i.displacementMap = this.displacementMap.toJSON(e).uuid, i.displacementScale = this.displacementScale, i.displacementBias = this.displacementBias), this.roughnessMap && this.roughnessMap.isTexture && (i.roughnessMap = this.roughnessMap.toJSON(e).uuid), this.metalnessMap && this.metalnessMap.isTexture && (i.metalnessMap = this.metalnessMap.toJSON(e).uuid), this.emissiveMap && this.emissiveMap.isTexture && (i.emissiveMap = this.emissiveMap.toJSON(e).uuid), this.specularMap && this.specularMap.isTexture && (i.specularMap = this.specularMap.toJSON(e).uuid), this.specularIntensityMap && this.specularIntensityMap.isTexture && (i.specularIntensityMap = this.specularIntensityMap.toJSON(e).uuid), this.specularColorMap && this.specularColorMap.isTexture && (i.specularColorMap = this.specularColorMap.toJSON(e).uuid), this.envMap && this.envMap.isTexture && (i.envMap = this.envMap.toJSON(e).uuid, this.combine !== void 0 && (i.combine = this.combine)), this.envMapIntensity !== void 0 && (i.envMapIntensity = this.envMapIntensity), this.reflectivity !== void 0 && (i.reflectivity = this.reflectivity), this.refractionRatio !== void 0 && (i.refractionRatio = this.refractionRatio), this.gradientMap && this.gradientMap.isTexture && (i.gradientMap = this.gradientMap.toJSON(e).uuid), this.transmission !== void 0 && (i.transmission = this.transmission), this.transmissionMap && this.transmissionMap.isTexture && (i.transmissionMap = this.transmissionMap.toJSON(e).uuid), this.thickness !== void 0 && (i.thickness = this.thickness), this.thicknessMap && this.thicknessMap.isTexture && (i.thicknessMap = this.thicknessMap.toJSON(e).uuid), this.attenuationDistance !== void 0 && (i.attenuationDistance = this.attenuationDistance), this.attenuationColor !== void 0 && (i.attenuationColor = this.attenuationColor.getHex()), this.size !== void 0 && (i.size = this.size), this.shadowSide !== null && (i.shadowSide = this.shadowSide), this.sizeAttenuation !== void 0 && (i.sizeAttenuation = this.sizeAttenuation), this.blending !== 1 && (i.blending = this.blending), this.side !== 0 && (i.side = this.side), this.vertexColors && (i.vertexColors = true), this.opacity < 1 && (i.opacity = this.opacity), this.transparent === true && (i.transparent = this.transparent), i.depthFunc = this.depthFunc, i.depthTest = this.depthTest, i.depthWrite = this.depthWrite, i.colorWrite = this.colorWrite, i.stencilWrite = this.stencilWrite, i.stencilWriteMask = this.stencilWriteMask, i.stencilFunc = this.stencilFunc, i.stencilRef = this.stencilRef, i.stencilFuncMask = this.stencilFuncMask, i.stencilFail = this.stencilFail, i.stencilZFail = this.stencilZFail, i.stencilZPass = this.stencilZPass, this.rotation !== void 0 && this.rotation !== 0 && (i.rotation = this.rotation), this.polygonOffset === true && (i.polygonOffset = true), this.polygonOffsetFactor !== 0 && (i.polygonOffsetFactor = this.polygonOffsetFactor), this.polygonOffsetUnits !== 0 && (i.polygonOffsetUnits = this.polygonOffsetUnits), this.linewidth !== void 0 && this.linewidth !== 1 && (i.linewidth = this.linewidth), this.dashSize !== void 0 && (i.dashSize = this.dashSize), this.gapSize !== void 0 && (i.gapSize = this.gapSize), this.scale !== void 0 && (i.scale = this.scale), this.dithering === true && (i.dithering = true), this.alphaTest > 0 && (i.alphaTest = this.alphaTest), this.alphaToCoverage === true && (i.alphaToCoverage = this.alphaToCoverage), this.premultipliedAlpha === true && (i.premultipliedAlpha = this.premultipliedAlpha), this.wireframe === true && (i.wireframe = this.wireframe), this.wireframeLinewidth > 1 && (i.wireframeLinewidth = this.wireframeLinewidth), this.wireframeLinecap !== "round" && (i.wireframeLinecap = this.wireframeLinecap), this.wireframeLinejoin !== "round" && (i.wireframeLinejoin = this.wireframeLinejoin), this.flatShading === true && (i.flatShading = this.flatShading), this.visible === false && (i.visible = false), this.toneMapped === false && (i.toneMapped = false), this.fog === false && (i.fog = false), JSON.stringify(this.userData) !== "{}" && (i.userData = this.userData);
    function u(y) {
      const t = [];
      for (const o in y) {
        const s = y[o];
        delete s.metadata, t.push(s);
      }
      return t;
    }
    if (n) {
      const y = u(e.textures), t = u(e.images);
      y.length > 0 && (i.textures = y), t.length > 0 && (i.images = t);
    }
    return i;
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(e) {
    this.name = e.name, this.blending = e.blending, this.side = e.side, this.vertexColors = e.vertexColors, this.opacity = e.opacity, this.transparent = e.transparent, this.blendSrc = e.blendSrc, this.blendDst = e.blendDst, this.blendEquation = e.blendEquation, this.blendSrcAlpha = e.blendSrcAlpha, this.blendDstAlpha = e.blendDstAlpha, this.blendEquationAlpha = e.blendEquationAlpha, this.depthFunc = e.depthFunc, this.depthTest = e.depthTest, this.depthWrite = e.depthWrite, this.stencilWriteMask = e.stencilWriteMask, this.stencilFunc = e.stencilFunc, this.stencilRef = e.stencilRef, this.stencilFuncMask = e.stencilFuncMask, this.stencilFail = e.stencilFail, this.stencilZFail = e.stencilZFail, this.stencilZPass = e.stencilZPass, this.stencilWrite = e.stencilWrite;
    const n = e.clippingPlanes;
    let i = null;
    if (n !== null) {
      const u = n.length;
      i = new Array(u);
      for (let y = 0; y !== u; ++y) i[y] = n[y].clone();
    }
    return this.clippingPlanes = i, this.clipIntersection = e.clipIntersection, this.clipShadows = e.clipShadows, this.shadowSide = e.shadowSide, this.colorWrite = e.colorWrite, this.precision = e.precision, this.polygonOffset = e.polygonOffset, this.polygonOffsetFactor = e.polygonOffsetFactor, this.polygonOffsetUnits = e.polygonOffsetUnits, this.dithering = e.dithering, this.alphaTest = e.alphaTest, this.alphaToCoverage = e.alphaToCoverage, this.premultipliedAlpha = e.premultipliedAlpha, this.visible = e.visible, this.toneMapped = e.toneMapped, this.userData = JSON.parse(JSON.stringify(e.userData)), this;
  }
  dispose() {
    this.dispatchEvent({ type: "dispose" });
  }
  set needsUpdate(e) {
    e === true && this.version++;
  }
}
class _m extends ua {
  constructor(e) {
    super(), this.isMeshBasicMaterial = true, this.type = "MeshBasicMaterial", this.color = new Mn(16777215), this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = 0, this.reflectivity = 1, this.refractionRatio = 0.98, this.wireframe = false, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.fog = true, this.setValues(e);
  }
  copy(e) {
    return super.copy(e), this.color.copy(e.color), this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.fog = e.fog, this;
  }
}
const Jn = new _r(), Bu = new In();
class io {
  constructor(e, n, i) {
    if (Array.isArray(e)) throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
    this.isBufferAttribute = true, this.name = "", this.array = e, this.itemSize = n, this.count = e !== void 0 ? e.length / n : 0, this.normalized = i === true, this.usage = 35044, this.updateRange = { offset: 0, count: -1 }, this.version = 0;
  }
  onUploadCallback() {
  }
  set needsUpdate(e) {
    e === true && this.version++;
  }
  setUsage(e) {
    return this.usage = e, this;
  }
  copy(e) {
    return this.name = e.name, this.array = new e.array.constructor(e.array), this.itemSize = e.itemSize, this.count = e.count, this.normalized = e.normalized, this.usage = e.usage, this;
  }
  copyAt(e, n, i) {
    e *= this.itemSize, i *= n.itemSize;
    for (let u = 0, y = this.itemSize; u < y; u++) this.array[e + u] = n.array[i + u];
    return this;
  }
  copyArray(e) {
    return this.array.set(e), this;
  }
  copyColorsArray(e) {
    const n = this.array;
    let i = 0;
    for (let u = 0, y = e.length; u < y; u++) {
      let t = e[u];
      t === void 0 && (console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined", u), t = new Mn()), n[i++] = t.r, n[i++] = t.g, n[i++] = t.b;
    }
    return this;
  }
  copyVector2sArray(e) {
    const n = this.array;
    let i = 0;
    for (let u = 0, y = e.length; u < y; u++) {
      let t = e[u];
      t === void 0 && (console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined", u), t = new In()), n[i++] = t.x, n[i++] = t.y;
    }
    return this;
  }
  copyVector3sArray(e) {
    const n = this.array;
    let i = 0;
    for (let u = 0, y = e.length; u < y; u++) {
      let t = e[u];
      t === void 0 && (console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined", u), t = new _r()), n[i++] = t.x, n[i++] = t.y, n[i++] = t.z;
    }
    return this;
  }
  copyVector4sArray(e) {
    const n = this.array;
    let i = 0;
    for (let u = 0, y = e.length; u < y; u++) {
      let t = e[u];
      t === void 0 && (console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined", u), t = new ci()), n[i++] = t.x, n[i++] = t.y, n[i++] = t.z, n[i++] = t.w;
    }
    return this;
  }
  applyMatrix3(e) {
    if (this.itemSize === 2) for (let n = 0, i = this.count; n < i; n++) Bu.fromBufferAttribute(this, n), Bu.applyMatrix3(e), this.setXY(n, Bu.x, Bu.y);
    else if (this.itemSize === 3) for (let n = 0, i = this.count; n < i; n++) Jn.fromBufferAttribute(this, n), Jn.applyMatrix3(e), this.setXYZ(n, Jn.x, Jn.y, Jn.z);
    return this;
  }
  applyMatrix4(e) {
    for (let n = 0, i = this.count; n < i; n++) Jn.fromBufferAttribute(this, n), Jn.applyMatrix4(e), this.setXYZ(n, Jn.x, Jn.y, Jn.z);
    return this;
  }
  applyNormalMatrix(e) {
    for (let n = 0, i = this.count; n < i; n++) Jn.fromBufferAttribute(this, n), Jn.applyNormalMatrix(e), this.setXYZ(n, Jn.x, Jn.y, Jn.z);
    return this;
  }
  transformDirection(e) {
    for (let n = 0, i = this.count; n < i; n++) Jn.fromBufferAttribute(this, n), Jn.transformDirection(e), this.setXYZ(n, Jn.x, Jn.y, Jn.z);
    return this;
  }
  set(e, n = 0) {
    return this.array.set(e, n), this;
  }
  getX(e) {
    return this.array[e * this.itemSize];
  }
  setX(e, n) {
    return this.array[e * this.itemSize] = n, this;
  }
  getY(e) {
    return this.array[e * this.itemSize + 1];
  }
  setY(e, n) {
    return this.array[e * this.itemSize + 1] = n, this;
  }
  getZ(e) {
    return this.array[e * this.itemSize + 2];
  }
  setZ(e, n) {
    return this.array[e * this.itemSize + 2] = n, this;
  }
  getW(e) {
    return this.array[e * this.itemSize + 3];
  }
  setW(e, n) {
    return this.array[e * this.itemSize + 3] = n, this;
  }
  setXY(e, n, i) {
    return e *= this.itemSize, this.array[e + 0] = n, this.array[e + 1] = i, this;
  }
  setXYZ(e, n, i, u) {
    return e *= this.itemSize, this.array[e + 0] = n, this.array[e + 1] = i, this.array[e + 2] = u, this;
  }
  setXYZW(e, n, i, u, y) {
    return e *= this.itemSize, this.array[e + 0] = n, this.array[e + 1] = i, this.array[e + 2] = u, this.array[e + 3] = y, this;
  }
  onUpload(e) {
    return this.onUploadCallback = e, this;
  }
  clone() {
    return new this.constructor(this.array, this.itemSize).copy(this);
  }
  toJSON() {
    const e = { itemSize: this.itemSize, type: this.array.constructor.name, array: Array.from(this.array), normalized: this.normalized };
    return this.name !== "" && (e.name = this.name), this.usage !== 35044 && (e.usage = this.usage), (this.updateRange.offset !== 0 || this.updateRange.count !== -1) && (e.updateRange = this.updateRange), e;
  }
}
class Em extends io {
  constructor(e, n, i) {
    super(new Uint16Array(e), n, i);
  }
}
class Am extends io {
  constructor(e, n, i) {
    super(new Uint32Array(e), n, i);
  }
}
class yi extends io {
  constructor(e, n, i) {
    super(new Float32Array(e), n, i);
  }
}
let qg = 0;
const Fi = new li(), dl = new wi(), ba = new _r(), Pi = new Us(), vs = new Us(), fi = new _r();
class oo extends Ba {
  constructor() {
    super(), this.isBufferGeometry = true, Object.defineProperty(this, "id", { value: qg++ }), this.uuid = Ds(), this.name = "", this.type = "BufferGeometry", this.index = null, this.attributes = {}, this.morphAttributes = {}, this.morphTargetsRelative = false, this.groups = [], this.boundingBox = null, this.boundingSphere = null, this.drawRange = { start: 0, count: 1 / 0 }, this.userData = {};
  }
  getIndex() {
    return this.index;
  }
  setIndex(e) {
    return Array.isArray(e) ? this.index = new (ym(e) ? Am : Em)(e, 1) : this.index = e, this;
  }
  getAttribute(e) {
    return this.attributes[e];
  }
  setAttribute(e, n) {
    return this.attributes[e] = n, this;
  }
  deleteAttribute(e) {
    return delete this.attributes[e], this;
  }
  hasAttribute(e) {
    return this.attributes[e] !== void 0;
  }
  addGroup(e, n, i = 0) {
    this.groups.push({ start: e, count: n, materialIndex: i });
  }
  clearGroups() {
    this.groups = [];
  }
  setDrawRange(e, n) {
    this.drawRange.start = e, this.drawRange.count = n;
  }
  applyMatrix4(e) {
    const n = this.attributes.position;
    n !== void 0 && (n.applyMatrix4(e), n.needsUpdate = true);
    const i = this.attributes.normal;
    if (i !== void 0) {
      const y = new Vi().getNormalMatrix(e);
      i.applyNormalMatrix(y), i.needsUpdate = true;
    }
    const u = this.attributes.tangent;
    return u !== void 0 && (u.transformDirection(e), u.needsUpdate = true), this.boundingBox !== null && this.computeBoundingBox(), this.boundingSphere !== null && this.computeBoundingSphere(), this;
  }
  applyQuaternion(e) {
    return Fi.makeRotationFromQuaternion(e), this.applyMatrix4(Fi), this;
  }
  rotateX(e) {
    return Fi.makeRotationX(e), this.applyMatrix4(Fi), this;
  }
  rotateY(e) {
    return Fi.makeRotationY(e), this.applyMatrix4(Fi), this;
  }
  rotateZ(e) {
    return Fi.makeRotationZ(e), this.applyMatrix4(Fi), this;
  }
  translate(e, n, i) {
    return Fi.makeTranslation(e, n, i), this.applyMatrix4(Fi), this;
  }
  scale(e, n, i) {
    return Fi.makeScale(e, n, i), this.applyMatrix4(Fi), this;
  }
  lookAt(e) {
    return dl.lookAt(e), dl.updateMatrix(), this.applyMatrix4(dl.matrix), this;
  }
  center() {
    return this.computeBoundingBox(), this.boundingBox.getCenter(ba).negate(), this.translate(ba.x, ba.y, ba.z), this;
  }
  setFromPoints(e) {
    const n = [];
    for (let i = 0, u = e.length; i < u; i++) {
      const y = e[i];
      n.push(y.x, y.y, y.z || 0);
    }
    return this.setAttribute("position", new yi(n, 3)), this;
  }
  computeBoundingBox() {
    this.boundingBox === null && (this.boundingBox = new Us());
    const e = this.attributes.position, n = this.morphAttributes.position;
    if (e && e.isGLBufferAttribute) {
      console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".', this), this.boundingBox.set(new _r(-1 / 0, -1 / 0, -1 / 0), new _r(1 / 0, 1 / 0, 1 / 0));
      return;
    }
    if (e !== void 0) {
      if (this.boundingBox.setFromBufferAttribute(e), n) for (let i = 0, u = n.length; i < u; i++) {
        const y = n[i];
        Pi.setFromBufferAttribute(y), this.morphTargetsRelative ? (fi.addVectors(this.boundingBox.min, Pi.min), this.boundingBox.expandByPoint(fi), fi.addVectors(this.boundingBox.max, Pi.max), this.boundingBox.expandByPoint(fi)) : (this.boundingBox.expandByPoint(Pi.min), this.boundingBox.expandByPoint(Pi.max));
      }
    } else this.boundingBox.makeEmpty();
    (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) && console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.', this);
  }
  computeBoundingSphere() {
    this.boundingSphere === null && (this.boundingSphere = new Bs());
    const e = this.attributes.position, n = this.morphAttributes.position;
    if (e && e.isGLBufferAttribute) {
      console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".', this), this.boundingSphere.set(new _r(), 1 / 0);
      return;
    }
    if (e) {
      const i = this.boundingSphere.center;
      if (Pi.setFromBufferAttribute(e), n) for (let y = 0, t = n.length; y < t; y++) {
        const o = n[y];
        vs.setFromBufferAttribute(o), this.morphTargetsRelative ? (fi.addVectors(Pi.min, vs.min), Pi.expandByPoint(fi), fi.addVectors(Pi.max, vs.max), Pi.expandByPoint(fi)) : (Pi.expandByPoint(vs.min), Pi.expandByPoint(vs.max));
      }
      Pi.getCenter(i);
      let u = 0;
      for (let y = 0, t = e.count; y < t; y++) fi.fromBufferAttribute(e, y), u = Math.max(u, i.distanceToSquared(fi));
      if (n) for (let y = 0, t = n.length; y < t; y++) {
        const o = n[y], s = this.morphTargetsRelative;
        for (let c = 0, h = o.count; c < h; c++) fi.fromBufferAttribute(o, c), s && (ba.fromBufferAttribute(e, c), fi.add(ba)), u = Math.max(u, i.distanceToSquared(fi));
      }
      this.boundingSphere.radius = Math.sqrt(u), isNaN(this.boundingSphere.radius) && console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.', this);
    }
  }
  computeTangents() {
    const e = this.index, n = this.attributes;
    if (e === null || n.position === void 0 || n.normal === void 0 || n.uv === void 0) {
      console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");
      return;
    }
    const i = e.array, u = n.position.array, y = n.normal.array, t = n.uv.array, o = u.length / 3;
    this.hasAttribute("tangent") === false && this.setAttribute("tangent", new io(new Float32Array(4 * o), 4));
    const s = this.getAttribute("tangent").array, c = [], h = [];
    for (let q = 0; q < o; q++) c[q] = new _r(), h[q] = new _r();
    const f = new _r(), r = new _r(), m = new _r(), g = new In(), a = new In(), l = new In(), d = new _r(), b = new _r();
    function S(q, N, H) {
      f.fromArray(u, q * 3), r.fromArray(u, N * 3), m.fromArray(u, H * 3), g.fromArray(t, q * 2), a.fromArray(t, N * 2), l.fromArray(t, H * 2), r.sub(f), m.sub(f), a.sub(g), l.sub(g);
      const _ = 1 / (a.x * l.y - l.x * a.y);
      !isFinite(_) || (d.copy(r).multiplyScalar(l.y).addScaledVector(m, -a.y).multiplyScalar(_), b.copy(m).multiplyScalar(a.x).addScaledVector(r, -l.x).multiplyScalar(_), c[q].add(d), c[N].add(d), c[H].add(d), h[q].add(b), h[N].add(b), h[H].add(b));
    }
    let E = this.groups;
    E.length === 0 && (E = [{ start: 0, count: i.length }]);
    for (let q = 0, N = E.length; q < N; ++q) {
      const H = E[q], _ = H.start, x = H.count;
      for (let L = _, j = _ + x; L < j; L += 3) S(i[L + 0], i[L + 1], i[L + 2]);
    }
    const R = new _r(), k = new _r(), w = new _r(), F = new _r();
    function I(q) {
      w.fromArray(y, q * 3), F.copy(w);
      const N = c[q];
      R.copy(N), R.sub(w.multiplyScalar(w.dot(N))).normalize(), k.crossVectors(F, N);
      const H = k.dot(h[q]) < 0 ? -1 : 1;
      s[q * 4] = R.x, s[q * 4 + 1] = R.y, s[q * 4 + 2] = R.z, s[q * 4 + 3] = H;
    }
    for (let q = 0, N = E.length; q < N; ++q) {
      const H = E[q], _ = H.start, x = H.count;
      for (let L = _, j = _ + x; L < j; L += 3) I(i[L + 0]), I(i[L + 1]), I(i[L + 2]);
    }
  }
  computeVertexNormals() {
    const e = this.index, n = this.getAttribute("position");
    if (n !== void 0) {
      let i = this.getAttribute("normal");
      if (i === void 0) i = new io(new Float32Array(n.count * 3), 3), this.setAttribute("normal", i);
      else for (let r = 0, m = i.count; r < m; r++) i.setXYZ(r, 0, 0, 0);
      const u = new _r(), y = new _r(), t = new _r(), o = new _r(), s = new _r(), c = new _r(), h = new _r(), f = new _r();
      if (e) for (let r = 0, m = e.count; r < m; r += 3) {
        const g = e.getX(r + 0), a = e.getX(r + 1), l = e.getX(r + 2);
        u.fromBufferAttribute(n, g), y.fromBufferAttribute(n, a), t.fromBufferAttribute(n, l), h.subVectors(t, y), f.subVectors(u, y), h.cross(f), o.fromBufferAttribute(i, g), s.fromBufferAttribute(i, a), c.fromBufferAttribute(i, l), o.add(h), s.add(h), c.add(h), i.setXYZ(g, o.x, o.y, o.z), i.setXYZ(a, s.x, s.y, s.z), i.setXYZ(l, c.x, c.y, c.z);
      }
      else for (let r = 0, m = n.count; r < m; r += 3) u.fromBufferAttribute(n, r + 0), y.fromBufferAttribute(n, r + 1), t.fromBufferAttribute(n, r + 2), h.subVectors(t, y), f.subVectors(u, y), h.cross(f), i.setXYZ(r + 0, h.x, h.y, h.z), i.setXYZ(r + 1, h.x, h.y, h.z), i.setXYZ(r + 2, h.x, h.y, h.z);
      this.normalizeNormals(), i.needsUpdate = true;
    }
  }
  merge(e, n) {
    if (!(e && e.isBufferGeometry)) {
      console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.", e);
      return;
    }
    n === void 0 && (n = 0, console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));
    const i = this.attributes;
    for (const u in i) {
      if (e.attributes[u] === void 0) continue;
      const y = i[u].array, t = e.attributes[u], o = t.array, s = t.itemSize * n, c = Math.min(o.length, y.length - s);
      for (let h = 0, f = s; h < c; h++, f++) y[f] = o[h];
    }
    return this;
  }
  normalizeNormals() {
    const e = this.attributes.normal;
    for (let n = 0, i = e.count; n < i; n++) fi.fromBufferAttribute(e, n), fi.normalize(), e.setXYZ(n, fi.x, fi.y, fi.z);
  }
  toNonIndexed() {
    function e(o, s) {
      const c = o.array, h = o.itemSize, f = o.normalized, r = new c.constructor(s.length * h);
      let m = 0, g = 0;
      for (let a = 0, l = s.length; a < l; a++) {
        o.isInterleavedBufferAttribute ? m = s[a] * o.data.stride + o.offset : m = s[a] * h;
        for (let d = 0; d < h; d++) r[g++] = c[m++];
      }
      return new io(r, h, f);
    }
    if (this.index === null) return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."), this;
    const n = new oo(), i = this.index.array, u = this.attributes;
    for (const o in u) {
      const s = u[o], c = e(s, i);
      n.setAttribute(o, c);
    }
    const y = this.morphAttributes;
    for (const o in y) {
      const s = [], c = y[o];
      for (let h = 0, f = c.length; h < f; h++) {
        const r = c[h], m = e(r, i);
        s.push(m);
      }
      n.morphAttributes[o] = s;
    }
    n.morphTargetsRelative = this.morphTargetsRelative;
    const t = this.groups;
    for (let o = 0, s = t.length; o < s; o++) {
      const c = t[o];
      n.addGroup(c.start, c.count, c.materialIndex);
    }
    return n;
  }
  toJSON() {
    const e = { metadata: { version: 4.5, type: "BufferGeometry", generator: "BufferGeometry.toJSON" } };
    if (e.uuid = this.uuid, e.type = this.type, this.name !== "" && (e.name = this.name), Object.keys(this.userData).length > 0 && (e.userData = this.userData), this.parameters !== void 0) {
      const s = this.parameters;
      for (const c in s) s[c] !== void 0 && (e[c] = s[c]);
      return e;
    }
    e.data = { attributes: {} };
    const n = this.index;
    n !== null && (e.data.index = { type: n.array.constructor.name, array: Array.prototype.slice.call(n.array) });
    const i = this.attributes;
    for (const s in i) {
      const c = i[s];
      e.data.attributes[s] = c.toJSON(e.data);
    }
    const u = {};
    let y = false;
    for (const s in this.morphAttributes) {
      const c = this.morphAttributes[s], h = [];
      for (let f = 0, r = c.length; f < r; f++) {
        const m = c[f];
        h.push(m.toJSON(e.data));
      }
      h.length > 0 && (u[s] = h, y = true);
    }
    y && (e.data.morphAttributes = u, e.data.morphTargetsRelative = this.morphTargetsRelative);
    const t = this.groups;
    t.length > 0 && (e.data.groups = JSON.parse(JSON.stringify(t)));
    const o = this.boundingSphere;
    return o !== null && (e.data.boundingSphere = { center: o.center.toArray(), radius: o.radius }), e;
  }
  clone() {
    return new this.constructor().copy(this);
  }
  copy(e) {
    this.index = null, this.attributes = {}, this.morphAttributes = {}, this.groups = [], this.boundingBox = null, this.boundingSphere = null;
    const n = {};
    this.name = e.name;
    const i = e.index;
    i !== null && this.setIndex(i.clone(n));
    const u = e.attributes;
    for (const c in u) {
      const h = u[c];
      this.setAttribute(c, h.clone(n));
    }
    const y = e.morphAttributes;
    for (const c in y) {
      const h = [], f = y[c];
      for (let r = 0, m = f.length; r < m; r++) h.push(f[r].clone(n));
      this.morphAttributes[c] = h;
    }
    this.morphTargetsRelative = e.morphTargetsRelative;
    const t = e.groups;
    for (let c = 0, h = t.length; c < h; c++) {
      const f = t[c];
      this.addGroup(f.start, f.count, f.materialIndex);
    }
    const o = e.boundingBox;
    o !== null && (this.boundingBox = o.clone());
    const s = e.boundingSphere;
    return s !== null && (this.boundingSphere = s.clone()), this.drawRange.start = e.drawRange.start, this.drawRange.count = e.drawRange.count, this.userData = e.userData, e.parameters !== void 0 && (this.parameters = Object.assign({}, e.parameters)), this;
  }
  dispose() {
    this.dispatchEvent({ type: "dispose" });
  }
}
const Lh = new li(), wa = new Lg(), ml = new Bs(), Io = new _r(), Lo = new _r(), Bo = new _r(), yl = new _r(), gl = new _r(), vl = new _r(), Nu = new _r(), Du = new _r(), Fu = new _r(), Uu = new In(), ju = new In(), Vu = new In(), bl = new _r(), qu = new _r();
class no extends wi {
  constructor(e = new oo(), n = new _m()) {
    super(), this.isMesh = true, this.type = "Mesh", this.geometry = e, this.material = n, this.updateMorphTargets();
  }
  copy(e, n) {
    return super.copy(e, n), e.morphTargetInfluences !== void 0 && (this.morphTargetInfluences = e.morphTargetInfluences.slice()), e.morphTargetDictionary !== void 0 && (this.morphTargetDictionary = Object.assign({}, e.morphTargetDictionary)), this.material = e.material, this.geometry = e.geometry, this;
  }
  updateMorphTargets() {
    const e = this.geometry.morphAttributes, n = Object.keys(e);
    if (n.length > 0) {
      const i = e[n[0]];
      if (i !== void 0) {
        this.morphTargetInfluences = [], this.morphTargetDictionary = {};
        for (let u = 0, y = i.length; u < y; u++) {
          const t = i[u].name || String(u);
          this.morphTargetInfluences.push(0), this.morphTargetDictionary[t] = u;
        }
      }
    }
  }
  raycast(e, n) {
    const i = this.geometry, u = this.material, y = this.matrixWorld;
    if (u === void 0 || (i.boundingSphere === null && i.computeBoundingSphere(), ml.copy(i.boundingSphere), ml.applyMatrix4(y), e.ray.intersectsSphere(ml) === false) || (Lh.copy(y).invert(), wa.copy(e.ray).applyMatrix4(Lh), i.boundingBox !== null && wa.intersectsBox(i.boundingBox) === false)) return;
    let t;
    const o = i.index, s = i.attributes.position, c = i.morphAttributes.position, h = i.morphTargetsRelative, f = i.attributes.uv, r = i.attributes.uv2, m = i.groups, g = i.drawRange;
    if (o !== null) if (Array.isArray(u)) for (let a = 0, l = m.length; a < l; a++) {
      const d = m[a], b = u[d.materialIndex], S = Math.max(d.start, g.start), E = Math.min(o.count, Math.min(d.start + d.count, g.start + g.count));
      for (let R = S, k = E; R < k; R += 3) {
        const w = o.getX(R), F = o.getX(R + 1), I = o.getX(R + 2);
        t = zu(this, b, e, wa, s, c, h, f, r, w, F, I), t && (t.faceIndex = Math.floor(R / 3), t.face.materialIndex = d.materialIndex, n.push(t));
      }
    }
    else {
      const a = Math.max(0, g.start), l = Math.min(o.count, g.start + g.count);
      for (let d = a, b = l; d < b; d += 3) {
        const S = o.getX(d), E = o.getX(d + 1), R = o.getX(d + 2);
        t = zu(this, u, e, wa, s, c, h, f, r, S, E, R), t && (t.faceIndex = Math.floor(d / 3), n.push(t));
      }
    }
    else if (s !== void 0) if (Array.isArray(u)) for (let a = 0, l = m.length; a < l; a++) {
      const d = m[a], b = u[d.materialIndex], S = Math.max(d.start, g.start), E = Math.min(s.count, Math.min(d.start + d.count, g.start + g.count));
      for (let R = S, k = E; R < k; R += 3) {
        const w = R, F = R + 1, I = R + 2;
        t = zu(this, b, e, wa, s, c, h, f, r, w, F, I), t && (t.faceIndex = Math.floor(R / 3), t.face.materialIndex = d.materialIndex, n.push(t));
      }
    }
    else {
      const a = Math.max(0, g.start), l = Math.min(s.count, g.start + g.count);
      for (let d = a, b = l; d < b; d += 3) {
        const S = d, E = d + 1, R = d + 2;
        t = zu(this, u, e, wa, s, c, h, f, r, S, E, R), t && (t.faceIndex = Math.floor(d / 3), n.push(t));
      }
    }
  }
}
function zg(v, e, n, i, u, y, t, o) {
  let s;
  if (e.side === 1 ? s = i.intersectTriangle(t, y, u, true, o) : s = i.intersectTriangle(u, y, t, e.side !== 2, o), s === null) return null;
  qu.copy(o), qu.applyMatrix4(v.matrixWorld);
  const c = n.ray.origin.distanceTo(qu);
  return c < n.near || c > n.far ? null : { distance: c, point: qu.clone(), object: v };
}
function zu(v, e, n, i, u, y, t, o, s, c, h, f) {
  Io.fromBufferAttribute(u, c), Lo.fromBufferAttribute(u, h), Bo.fromBufferAttribute(u, f);
  const r = v.morphTargetInfluences;
  if (y && r) {
    Nu.set(0, 0, 0), Du.set(0, 0, 0), Fu.set(0, 0, 0);
    for (let g = 0, a = y.length; g < a; g++) {
      const l = r[g], d = y[g];
      l !== 0 && (yl.fromBufferAttribute(d, c), gl.fromBufferAttribute(d, h), vl.fromBufferAttribute(d, f), t ? (Nu.addScaledVector(yl, l), Du.addScaledVector(gl, l), Fu.addScaledVector(vl, l)) : (Nu.addScaledVector(yl.sub(Io), l), Du.addScaledVector(gl.sub(Lo), l), Fu.addScaledVector(vl.sub(Bo), l)));
    }
    Io.add(Nu), Lo.add(Du), Bo.add(Fu);
  }
  v.isSkinnedMesh && (v.boneTransform(c, Io), v.boneTransform(h, Lo), v.boneTransform(f, Bo));
  const m = zg(v, e, n, i, Io, Lo, Bo, bl);
  if (m) {
    o && (Uu.fromBufferAttribute(o, c), ju.fromBufferAttribute(o, h), Vu.fromBufferAttribute(o, f), m.uv = Eo.getUV(bl, Io, Lo, Bo, Uu, ju, Vu, new In())), s && (Uu.fromBufferAttribute(s, c), ju.fromBufferAttribute(s, h), Vu.fromBufferAttribute(s, f), m.uv2 = Eo.getUV(bl, Io, Lo, Bo, Uu, ju, Vu, new In()));
    const g = { a: c, b: h, c: f, normal: new _r(), materialIndex: 0 };
    Eo.getNormal(Io, Lo, Bo, g.normal), m.face = g;
  }
  return m;
}
class Vs extends oo {
  constructor(e = 1, n = 1, i = 1, u = 1, y = 1, t = 1) {
    super(), this.type = "BoxGeometry", this.parameters = { width: e, height: n, depth: i, widthSegments: u, heightSegments: y, depthSegments: t };
    const o = this;
    u = Math.floor(u), y = Math.floor(y), t = Math.floor(t);
    const s = [], c = [], h = [], f = [];
    let r = 0, m = 0;
    g("z", "y", "x", -1, -1, i, n, e, t, y, 0), g("z", "y", "x", 1, -1, i, n, -e, t, y, 1), g("x", "z", "y", 1, 1, e, i, n, u, t, 2), g("x", "z", "y", 1, -1, e, i, -n, u, t, 3), g("x", "y", "z", 1, -1, e, n, i, u, y, 4), g("x", "y", "z", -1, -1, e, n, -i, u, y, 5), this.setIndex(s), this.setAttribute("position", new yi(c, 3)), this.setAttribute("normal", new yi(h, 3)), this.setAttribute("uv", new yi(f, 2));
    function g(a, l, d, b, S, E, R, k, w, F, I) {
      const q = E / w, N = R / F, H = E / 2, _ = R / 2, x = k / 2, L = w + 1, j = F + 1;
      let z = 0, Z = 0;
      const ue = new _r();
      for (let $ = 0; $ < j; $++) {
        const X = $ * N - _;
        for (let J = 0; J < L; J++) {
          const B = J * q - H;
          ue[a] = B * b, ue[l] = X * S, ue[d] = x, c.push(ue.x, ue.y, ue.z), ue[a] = 0, ue[l] = 0, ue[d] = k > 0 ? 1 : -1, h.push(ue.x, ue.y, ue.z), f.push(J / w), f.push(1 - $ / F), z += 1;
        }
      }
      for (let $ = 0; $ < F; $++) for (let X = 0; X < w; X++) {
        const J = r + X + L * $, B = r + X + L * ($ + 1), Q = r + (X + 1) + L * ($ + 1), ne = r + (X + 1) + L * $;
        s.push(J, B, ne), s.push(B, Q, ne), Z += 6;
      }
      o.addGroup(m, Z, I), m += Z, r += z;
    }
  }
  static fromJSON(e) {
    return new Vs(e.width, e.height, e.depth, e.widthSegments, e.heightSegments, e.depthSegments);
  }
}
function Pa(v) {
  const e = {};
  for (const n in v) {
    e[n] = {};
    for (const i in v[n]) {
      const u = v[n][i];
      u && (u.isColor || u.isMatrix3 || u.isMatrix4 || u.isVector2 || u.isVector3 || u.isVector4 || u.isTexture || u.isQuaternion) ? e[n][i] = u.clone() : Array.isArray(u) ? e[n][i] = u.slice() : e[n][i] = u;
    }
  }
  return e;
}
function mi(v) {
  const e = {};
  for (let n = 0; n < v.length; n++) {
    const i = Pa(v[n]);
    for (const u in i) e[u] = i[u];
  }
  return e;
}
function Hg(v) {
  const e = [];
  for (let n = 0; n < v.length; n++) e.push(v[n].clone());
  return e;
}
const Gg = { clone: Pa, merge: mi };
var Wg = `void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`, Kg = `void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;
class oa extends ua {
  constructor(e) {
    super(), this.isShaderMaterial = true, this.type = "ShaderMaterial", this.defines = {}, this.uniforms = {}, this.uniformsGroups = [], this.vertexShader = Wg, this.fragmentShader = Kg, this.linewidth = 1, this.wireframe = false, this.wireframeLinewidth = 1, this.fog = false, this.lights = false, this.clipping = false, this.extensions = { derivatives: false, fragDepth: false, drawBuffers: false, shaderTextureLOD: false }, this.defaultAttributeValues = { color: [1, 1, 1], uv: [0, 0], uv2: [0, 0] }, this.index0AttributeName = void 0, this.uniformsNeedUpdate = false, this.glslVersion = null, e !== void 0 && (e.attributes !== void 0 && console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."), this.setValues(e));
  }
  copy(e) {
    return super.copy(e), this.fragmentShader = e.fragmentShader, this.vertexShader = e.vertexShader, this.uniforms = Pa(e.uniforms), this.uniformsGroups = Hg(e.uniformsGroups), this.defines = Object.assign({}, e.defines), this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.fog = e.fog, this.lights = e.lights, this.clipping = e.clipping, this.extensions = Object.assign({}, e.extensions), this.glslVersion = e.glslVersion, this;
  }
  toJSON(e) {
    const n = super.toJSON(e);
    n.glslVersion = this.glslVersion, n.uniforms = {};
    for (const u in this.uniforms) {
      const y = this.uniforms[u].value;
      y && y.isTexture ? n.uniforms[u] = { type: "t", value: y.toJSON(e).uuid } : y && y.isColor ? n.uniforms[u] = { type: "c", value: y.getHex() } : y && y.isVector2 ? n.uniforms[u] = { type: "v2", value: y.toArray() } : y && y.isVector3 ? n.uniforms[u] = { type: "v3", value: y.toArray() } : y && y.isVector4 ? n.uniforms[u] = { type: "v4", value: y.toArray() } : y && y.isMatrix3 ? n.uniforms[u] = { type: "m3", value: y.toArray() } : y && y.isMatrix4 ? n.uniforms[u] = { type: "m4", value: y.toArray() } : n.uniforms[u] = { value: y };
    }
    Object.keys(this.defines).length > 0 && (n.defines = this.defines), n.vertexShader = this.vertexShader, n.fragmentShader = this.fragmentShader;
    const i = {};
    for (const u in this.extensions) this.extensions[u] === true && (i[u] = true);
    return Object.keys(i).length > 0 && (n.extensions = i), n;
  }
}
class xm extends wi {
  constructor() {
    super(), this.isCamera = true, this.type = "Camera", this.matrixWorldInverse = new li(), this.projectionMatrix = new li(), this.projectionMatrixInverse = new li();
  }
  copy(e, n) {
    return super.copy(e, n), this.matrixWorldInverse.copy(e.matrixWorldInverse), this.projectionMatrix.copy(e.projectionMatrix), this.projectionMatrixInverse.copy(e.projectionMatrixInverse), this;
  }
  getWorldDirection(e) {
    this.updateWorldMatrix(true, false);
    const n = this.matrixWorld.elements;
    return e.set(-n[8], -n[9], -n[10]).normalize();
  }
  updateMatrixWorld(e) {
    super.updateMatrixWorld(e), this.matrixWorldInverse.copy(this.matrixWorld).invert();
  }
  updateWorldMatrix(e, n) {
    super.updateWorldMatrix(e, n), this.matrixWorldInverse.copy(this.matrixWorld).invert();
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
class Ri extends xm {
  constructor(e = 50, n = 1, i = 0.1, u = 2e3) {
    super(), this.isPerspectiveCamera = true, this.type = "PerspectiveCamera", this.fov = e, this.zoom = 1, this.near = i, this.far = u, this.focus = 10, this.aspect = n, this.view = null, this.filmGauge = 35, this.filmOffset = 0, this.updateProjectionMatrix();
  }
  copy(e, n) {
    return super.copy(e, n), this.fov = e.fov, this.zoom = e.zoom, this.near = e.near, this.far = e.far, this.focus = e.focus, this.aspect = e.aspect, this.view = e.view === null ? null : Object.assign({}, e.view), this.filmGauge = e.filmGauge, this.filmOffset = e.filmOffset, this;
  }
  setFocalLength(e) {
    const n = 0.5 * this.getFilmHeight() / e;
    this.fov = Fl * 2 * Math.atan(n), this.updateProjectionMatrix();
  }
  getFocalLength() {
    const e = Math.tan(Zc * 0.5 * this.fov);
    return 0.5 * this.getFilmHeight() / e;
  }
  getEffectiveFOV() {
    return Fl * 2 * Math.atan(Math.tan(Zc * 0.5 * this.fov) / this.zoom);
  }
  getFilmWidth() {
    return this.filmGauge * Math.min(this.aspect, 1);
  }
  getFilmHeight() {
    return this.filmGauge / Math.max(this.aspect, 1);
  }
  setViewOffset(e, n, i, u, y, t) {
    this.aspect = e / n, this.view === null && (this.view = { enabled: true, fullWidth: 1, fullHeight: 1, offsetX: 0, offsetY: 0, width: 1, height: 1 }), this.view.enabled = true, this.view.fullWidth = e, this.view.fullHeight = n, this.view.offsetX = i, this.view.offsetY = u, this.view.width = y, this.view.height = t, this.updateProjectionMatrix();
  }
  clearViewOffset() {
    this.view !== null && (this.view.enabled = false), this.updateProjectionMatrix();
  }
  updateProjectionMatrix() {
    const e = this.near;
    let n = e * Math.tan(Zc * 0.5 * this.fov) / this.zoom, i = 2 * n, u = this.aspect * i, y = -0.5 * u;
    const t = this.view;
    if (this.view !== null && this.view.enabled) {
      const s = t.fullWidth, c = t.fullHeight;
      y += t.offsetX * u / s, n -= t.offsetY * i / c, u *= t.width / s, i *= t.height / c;
    }
    const o = this.filmOffset;
    o !== 0 && (y += e * o / this.getFilmWidth()), this.projectionMatrix.makePerspective(y, y + u, n, n - i, e, this.far), this.projectionMatrixInverse.copy(this.projectionMatrix).invert();
  }
  toJSON(e) {
    const n = super.toJSON(e);
    return n.object.fov = this.fov, n.object.zoom = this.zoom, n.object.near = this.near, n.object.far = this.far, n.object.focus = this.focus, n.object.aspect = this.aspect, this.view !== null && (n.object.view = Object.assign({}, this.view)), n.object.filmGauge = this.filmGauge, n.object.filmOffset = this.filmOffset, n;
  }
}
const Sa = 90, _a = 1;
class Xg extends wi {
  constructor(e, n, i) {
    if (super(), this.type = "CubeCamera", i.isWebGLCubeRenderTarget !== true) {
      console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");
      return;
    }
    this.renderTarget = i;
    const u = new Ri(Sa, _a, e, n);
    u.layers = this.layers, u.up.set(0, -1, 0), u.lookAt(new _r(1, 0, 0)), this.add(u);
    const y = new Ri(Sa, _a, e, n);
    y.layers = this.layers, y.up.set(0, -1, 0), y.lookAt(new _r(-1, 0, 0)), this.add(y);
    const t = new Ri(Sa, _a, e, n);
    t.layers = this.layers, t.up.set(0, 0, 1), t.lookAt(new _r(0, 1, 0)), this.add(t);
    const o = new Ri(Sa, _a, e, n);
    o.layers = this.layers, o.up.set(0, 0, -1), o.lookAt(new _r(0, -1, 0)), this.add(o);
    const s = new Ri(Sa, _a, e, n);
    s.layers = this.layers, s.up.set(0, -1, 0), s.lookAt(new _r(0, 0, 1)), this.add(s);
    const c = new Ri(Sa, _a, e, n);
    c.layers = this.layers, c.up.set(0, -1, 0), c.lookAt(new _r(0, 0, -1)), this.add(c);
  }
  update(e, n) {
    this.parent === null && this.updateMatrixWorld();
    const i = this.renderTarget, [u, y, t, o, s, c] = this.children, h = e.getRenderTarget(), f = e.toneMapping, r = e.xr.enabled;
    e.toneMapping = 0, e.xr.enabled = false;
    const m = i.texture.generateMipmaps;
    i.texture.generateMipmaps = false, e.setRenderTarget(i, 0), e.render(n, u), e.setRenderTarget(i, 1), e.render(n, y), e.setRenderTarget(i, 2), e.render(n, t), e.setRenderTarget(i, 3), e.render(n, o), e.setRenderTarget(i, 4), e.render(n, s), i.texture.generateMipmaps = m, e.setRenderTarget(i, 5), e.render(n, c), e.setRenderTarget(h), e.toneMapping = f, e.xr.enabled = r, i.texture.needsPMREMUpdate = true;
  }
}
class Tm extends Mi {
  constructor(e, n, i, u, y, t, o, s, c, h) {
    e = e !== void 0 ? e : [], n = n !== void 0 ? n : 301, super(e, n, i, u, y, t, o, s, c, h), this.isCubeTexture = true, this.flipY = false;
  }
  get images() {
    return this.image;
  }
  set images(e) {
    this.image = e;
  }
}
class $g extends ia {
  constructor(e, n = {}) {
    super(e, e, n), this.isWebGLCubeRenderTarget = true;
    const i = { width: e, height: e, depth: 1 }, u = [i, i, i, i, i, i];
    this.texture = new Tm(u, n.mapping, n.wrapS, n.wrapT, n.magFilter, n.minFilter, n.format, n.type, n.anisotropy, n.encoding), this.texture.isRenderTargetTexture = true, this.texture.generateMipmaps = n.generateMipmaps !== void 0 ? n.generateMipmaps : false, this.texture.minFilter = n.minFilter !== void 0 ? n.minFilter : 1006;
  }
  fromEquirectangularTexture(e, n) {
    this.texture.type = n.type, this.texture.encoding = n.encoding, this.texture.generateMipmaps = n.generateMipmaps, this.texture.minFilter = n.minFilter, this.texture.magFilter = n.magFilter;
    const i = { uniforms: { tEquirect: { value: null } }, vertexShader: `

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`, fragmentShader: `

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			` }, u = new Vs(5, 5, 5), y = new oa({ name: "CubemapFromEquirect", uniforms: Pa(i.uniforms), vertexShader: i.vertexShader, fragmentShader: i.fragmentShader, side: 1, blending: 0 });
    y.uniforms.tEquirect.value = n;
    const t = new no(u, y), o = n.minFilter;
    return n.minFilter === 1008 && (n.minFilter = 1006), new Xg(1, 10, this).update(e, t), n.minFilter = o, t.geometry.dispose(), t.material.dispose(), this;
  }
  clear(e, n, i, u) {
    const y = e.getRenderTarget();
    for (let t = 0; t < 6; t++) e.setRenderTarget(this, t), e.clear(n, i, u);
    e.setRenderTarget(y);
  }
}
const wl = new _r(), Yg = new _r(), Qg = new Vi();
class $o {
  constructor(e = new _r(1, 0, 0), n = 0) {
    this.isPlane = true, this.normal = e, this.constant = n;
  }
  set(e, n) {
    return this.normal.copy(e), this.constant = n, this;
  }
  setComponents(e, n, i, u) {
    return this.normal.set(e, n, i), this.constant = u, this;
  }
  setFromNormalAndCoplanarPoint(e, n) {
    return this.normal.copy(e), this.constant = -n.dot(this.normal), this;
  }
  setFromCoplanarPoints(e, n, i) {
    const u = wl.subVectors(i, n).cross(Yg.subVectors(e, n)).normalize();
    return this.setFromNormalAndCoplanarPoint(u, e), this;
  }
  copy(e) {
    return this.normal.copy(e.normal), this.constant = e.constant, this;
  }
  normalize() {
    const e = 1 / this.normal.length();
    return this.normal.multiplyScalar(e), this.constant *= e, this;
  }
  negate() {
    return this.constant *= -1, this.normal.negate(), this;
  }
  distanceToPoint(e) {
    return this.normal.dot(e) + this.constant;
  }
  distanceToSphere(e) {
    return this.distanceToPoint(e.center) - e.radius;
  }
  projectPoint(e, n) {
    return n.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e);
  }
  intersectLine(e, n) {
    const i = e.delta(wl), u = this.normal.dot(i);
    if (u === 0) return this.distanceToPoint(e.start) === 0 ? n.copy(e.start) : null;
    const y = -(e.start.dot(this.normal) + this.constant) / u;
    return y < 0 || y > 1 ? null : n.copy(i).multiplyScalar(y).add(e.start);
  }
  intersectsLine(e) {
    const n = this.distanceToPoint(e.start), i = this.distanceToPoint(e.end);
    return n < 0 && i > 0 || i < 0 && n > 0;
  }
  intersectsBox(e) {
    return e.intersectsPlane(this);
  }
  intersectsSphere(e) {
    return e.intersectsPlane(this);
  }
  coplanarPoint(e) {
    return e.copy(this.normal).multiplyScalar(-this.constant);
  }
  applyMatrix4(e, n) {
    const i = n || Qg.getNormalMatrix(e), u = this.coplanarPoint(wl).applyMatrix4(e), y = this.normal.applyMatrix3(i).normalize();
    return this.constant = -u.dot(y), this;
  }
  translate(e) {
    return this.constant -= e.dot(this.normal), this;
  }
  equals(e) {
    return e.normal.equals(this.normal) && e.constant === this.constant;
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
const Ea = new Bs(), Hu = new _r();
class sf {
  constructor(e = new $o(), n = new $o(), i = new $o(), u = new $o(), y = new $o(), t = new $o()) {
    this.planes = [e, n, i, u, y, t];
  }
  set(e, n, i, u, y, t) {
    const o = this.planes;
    return o[0].copy(e), o[1].copy(n), o[2].copy(i), o[3].copy(u), o[4].copy(y), o[5].copy(t), this;
  }
  copy(e) {
    const n = this.planes;
    for (let i = 0; i < 6; i++) n[i].copy(e.planes[i]);
    return this;
  }
  setFromProjectionMatrix(e) {
    const n = this.planes, i = e.elements, u = i[0], y = i[1], t = i[2], o = i[3], s = i[4], c = i[5], h = i[6], f = i[7], r = i[8], m = i[9], g = i[10], a = i[11], l = i[12], d = i[13], b = i[14], S = i[15];
    return n[0].setComponents(o - u, f - s, a - r, S - l).normalize(), n[1].setComponents(o + u, f + s, a + r, S + l).normalize(), n[2].setComponents(o + y, f + c, a + m, S + d).normalize(), n[3].setComponents(o - y, f - c, a - m, S - d).normalize(), n[4].setComponents(o - t, f - h, a - g, S - b).normalize(), n[5].setComponents(o + t, f + h, a + g, S + b).normalize(), this;
  }
  intersectsObject(e) {
    const n = e.geometry;
    return n.boundingSphere === null && n.computeBoundingSphere(), Ea.copy(n.boundingSphere).applyMatrix4(e.matrixWorld), this.intersectsSphere(Ea);
  }
  intersectsSprite(e) {
    return Ea.center.set(0, 0, 0), Ea.radius = 0.7071067811865476, Ea.applyMatrix4(e.matrixWorld), this.intersectsSphere(Ea);
  }
  intersectsSphere(e) {
    const n = this.planes, i = e.center, u = -e.radius;
    for (let y = 0; y < 6; y++) if (n[y].distanceToPoint(i) < u) return false;
    return true;
  }
  intersectsBox(e) {
    const n = this.planes;
    for (let i = 0; i < 6; i++) {
      const u = n[i];
      if (Hu.x = u.normal.x > 0 ? e.max.x : e.min.x, Hu.y = u.normal.y > 0 ? e.max.y : e.min.y, Hu.z = u.normal.z > 0 ? e.max.z : e.min.z, u.distanceToPoint(Hu) < 0) return false;
    }
    return true;
  }
  containsPoint(e) {
    const n = this.planes;
    for (let i = 0; i < 6; i++) if (n[i].distanceToPoint(e) < 0) return false;
    return true;
  }
  clone() {
    return new this.constructor().copy(this);
  }
}
function km() {
  let v = null, e = false, n = null, i = null;
  function u(y, t) {
    n(y, t), i = v.requestAnimationFrame(u);
  }
  return { start: function() {
    e !== true && n !== null && (i = v.requestAnimationFrame(u), e = true);
  }, stop: function() {
    v.cancelAnimationFrame(i), e = false;
  }, setAnimationLoop: function(y) {
    n = y;
  }, setContext: function(y) {
    v = y;
  } };
}
function Zg(v, e) {
  const n = e.isWebGL2, i = /* @__PURE__ */ new WeakMap();
  function u(c, h) {
    const f = c.array, r = c.usage, m = v.createBuffer();
    v.bindBuffer(h, m), v.bufferData(h, f, r), c.onUploadCallback();
    let g;
    if (f instanceof Float32Array) g = 5126;
    else if (f instanceof Uint16Array) if (c.isFloat16BufferAttribute) if (n) g = 5131;
    else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");
    else g = 5123;
    else if (f instanceof Int16Array) g = 5122;
    else if (f instanceof Uint32Array) g = 5125;
    else if (f instanceof Int32Array) g = 5124;
    else if (f instanceof Int8Array) g = 5120;
    else if (f instanceof Uint8Array) g = 5121;
    else if (f instanceof Uint8ClampedArray) g = 5121;
    else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: " + f);
    return { buffer: m, type: g, bytesPerElement: f.BYTES_PER_ELEMENT, version: c.version };
  }
  function y(c, h, f) {
    const r = h.array, m = h.updateRange;
    v.bindBuffer(f, c), m.count === -1 ? v.bufferSubData(f, 0, r) : (n ? v.bufferSubData(f, m.offset * r.BYTES_PER_ELEMENT, r, m.offset, m.count) : v.bufferSubData(f, m.offset * r.BYTES_PER_ELEMENT, r.subarray(m.offset, m.offset + m.count)), m.count = -1);
  }
  function t(c) {
    return c.isInterleavedBufferAttribute && (c = c.data), i.get(c);
  }
  function o(c) {
    c.isInterleavedBufferAttribute && (c = c.data);
    const h = i.get(c);
    h && (v.deleteBuffer(h.buffer), i.delete(c));
  }
  function s(c, h) {
    if (c.isGLBufferAttribute) {
      const r = i.get(c);
      (!r || r.version < c.version) && i.set(c, { buffer: c.buffer, type: c.type, bytesPerElement: c.elementSize, version: c.version });
      return;
    }
    c.isInterleavedBufferAttribute && (c = c.data);
    const f = i.get(c);
    f === void 0 ? i.set(c, u(c, h)) : f.version < c.version && (y(f.buffer, c, h), f.version = c.version);
  }
  return { get: t, remove: o, update: s };
}
class Ac extends oo {
  constructor(e = 1, n = 1, i = 1, u = 1) {
    super(), this.type = "PlaneGeometry", this.parameters = { width: e, height: n, widthSegments: i, heightSegments: u };
    const y = e / 2, t = n / 2, o = Math.floor(i), s = Math.floor(u), c = o + 1, h = s + 1, f = e / o, r = n / s, m = [], g = [], a = [], l = [];
    for (let d = 0; d < h; d++) {
      const b = d * r - t;
      for (let S = 0; S < c; S++) {
        const E = S * f - y;
        g.push(E, -b, 0), a.push(0, 0, 1), l.push(S / o), l.push(1 - d / s);
      }
    }
    for (let d = 0; d < s; d++) for (let b = 0; b < o; b++) {
      const S = b + c * d, E = b + c * (d + 1), R = b + 1 + c * (d + 1), k = b + 1 + c * d;
      m.push(S, E, k), m.push(E, R, k);
    }
    this.setIndex(m), this.setAttribute("position", new yi(g, 3)), this.setAttribute("normal", new yi(a, 3)), this.setAttribute("uv", new yi(l, 2));
  }
  static fromJSON(e) {
    return new Ac(e.width, e.height, e.widthSegments, e.heightSegments);
  }
}
var Jg = `#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`, ev = `#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`, tv = `#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`, rv = `#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`, nv = `#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`, iv = `#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`, ov = "vec3 transformed = vec3( position );", av = `vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`, sv = `vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
#ifdef USE_IRIDESCENCE
	vec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`, uv = `#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`, cv = `#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`, lv = `#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`, fv = `#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`, pv = `#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`, hv = `#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`, dv = `#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`, mv = `#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`, yv = `#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`, gv = `#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`, vv = `#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`, bv = `#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define r0 1.0
	#define v0 0.339
	#define m0 - 2.0
	#define r1 0.8
	#define v1 0.276
	#define m1 - 1.0
	#define r4 0.4
	#define v4 0.046
	#define m4 2.0
	#define r5 0.305
	#define v5 0.016
	#define m5 3.0
	#define r6 0.21
	#define v6 0.0038
	#define m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= r1 ) {
			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;
		} else if ( roughness >= r4 ) {
			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;
		} else if ( roughness >= r5 ) {
			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;
		} else if ( roughness >= r6 ) {
			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`, wv = `vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`, Sv = `#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`, _v = `#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`, Ev = `#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`, Av = `#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`, xv = "gl_FragColor = linearToOutputTexel( gl_FragColor );", Tv = `vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`, kv = `#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`, Ov = `#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`, Pv = `#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`, Cv = `#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`, Rv = `#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`, Mv = `#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`, Iv = `#ifdef USE_FOG
	varying float vFogDepth;
#endif`, Lv = `#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`, Bv = `#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`, Nv = `#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`, Dv = `#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`, Fv = `#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`, Uv = `vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
vIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );
#ifdef DOUBLE_SIDED
	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );
#endif
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointLightInfo( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotLightInfo( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalLightInfo( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );
		#endif
	}
	#pragma unroll_loop_end
#endif`, jv = `uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`, Vv = `#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`, qv = `ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`, zv = `varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`, Hv = `BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`, Gv = `varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`, Wv = `PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`, Kv = `struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	#ifdef USE_IRIDESCENCE
		reflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );
	#else
		reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`, Xv = `
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`, $v = `#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`, Yv = `#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`, Qv = `#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`, Zv = `#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`, Jv = `#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`, e0 = `#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`, t0 = `#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`, r0 = `#ifdef USE_MAP
	uniform sampler2D map;
#endif`, n0 = `#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`, i0 = `#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`, o0 = `float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`, a0 = `#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`, s0 = `#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`, u0 = `#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`, c0 = `#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`, l0 = `#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`, f0 = `float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`, p0 = `#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`, h0 = `#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`, d0 = `#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`, m0 = `#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`, y0 = `#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`, g0 = `#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`, v0 = `#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`, b0 = `#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`, w0 = `#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`, S0 = `#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`, _0 = `vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`, E0 = `#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`, A0 = `vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`, x0 = `#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`, T0 = `#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`, k0 = `float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`, O0 = `#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`, P0 = `#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`, C0 = `#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`, R0 = `#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`, M0 = `float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`, I0 = `#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`, L0 = `#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`, B0 = `#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`, N0 = `#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`, D0 = `float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`, F0 = `#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`, U0 = `#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`, j0 = `#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`, V0 = `#ifdef USE_TRANSMISSION
	float transmissionAlpha = 1.0;
	float transmissionFactor = transmission;
	float thicknessFactor = thickness;
	#ifdef USE_TRANSMISSIONMAP
		transmissionFactor *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		thicknessFactor *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,
		attenuationColor, attenuationDistance );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );
	transmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );
#endif`, q0 = `#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef texture2DLodEXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( attenuationDistance == 0.0 ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`, z0 = `#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`, H0 = `#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`, G0 = `#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`, W0 = `#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`, K0 = `#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`, X0 = `#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`, $0 = `#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;
const Y0 = `varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`, Q0 = `uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	gl_FragColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		gl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );
	#endif
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`, Z0 = `varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`, J0 = `#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`, eb = `#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`, tb = `#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`, rb = `#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`, nb = `#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`, ib = `varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`, ob = `uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`, ab = `uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`, sb = `uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`, ub = `#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`, cb = `uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, lb = `#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`, fb = `uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, pb = `#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`, hb = `#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, db = `#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`, mb = `#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`, yb = `#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`, gb = `#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, vb = `#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`, bb = `#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, wb = `#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`, Sb = `#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`, _b = `uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`, Eb = `uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`, Ab = `#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`, xb = `uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`, Tb = `uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`, kb = `uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`, kn = { alphamap_fragment: Jg, alphamap_pars_fragment: ev, alphatest_fragment: tv, alphatest_pars_fragment: rv, aomap_fragment: nv, aomap_pars_fragment: iv, begin_vertex: ov, beginnormal_vertex: av, bsdfs: sv, iridescence_fragment: uv, bumpmap_pars_fragment: cv, clipping_planes_fragment: lv, clipping_planes_pars_fragment: fv, clipping_planes_pars_vertex: pv, clipping_planes_vertex: hv, color_fragment: dv, color_pars_fragment: mv, color_pars_vertex: yv, color_vertex: gv, common: vv, cube_uv_reflection_fragment: bv, defaultnormal_vertex: wv, displacementmap_pars_vertex: Sv, displacementmap_vertex: _v, emissivemap_fragment: Ev, emissivemap_pars_fragment: Av, encodings_fragment: xv, encodings_pars_fragment: Tv, envmap_fragment: kv, envmap_common_pars_fragment: Ov, envmap_pars_fragment: Pv, envmap_pars_vertex: Cv, envmap_physical_pars_fragment: Vv, envmap_vertex: Rv, fog_vertex: Mv, fog_pars_vertex: Iv, fog_fragment: Lv, fog_pars_fragment: Bv, gradientmap_pars_fragment: Nv, lightmap_fragment: Dv, lightmap_pars_fragment: Fv, lights_lambert_vertex: Uv, lights_pars_begin: jv, lights_toon_fragment: qv, lights_toon_pars_fragment: zv, lights_phong_fragment: Hv, lights_phong_pars_fragment: Gv, lights_physical_fragment: Wv, lights_physical_pars_fragment: Kv, lights_fragment_begin: Xv, lights_fragment_maps: $v, lights_fragment_end: Yv, logdepthbuf_fragment: Qv, logdepthbuf_pars_fragment: Zv, logdepthbuf_pars_vertex: Jv, logdepthbuf_vertex: e0, map_fragment: t0, map_pars_fragment: r0, map_particle_fragment: n0, map_particle_pars_fragment: i0, metalnessmap_fragment: o0, metalnessmap_pars_fragment: a0, morphcolor_vertex: s0, morphnormal_vertex: u0, morphtarget_pars_vertex: c0, morphtarget_vertex: l0, normal_fragment_begin: f0, normal_fragment_maps: p0, normal_pars_fragment: h0, normal_pars_vertex: d0, normal_vertex: m0, normalmap_pars_fragment: y0, clearcoat_normal_fragment_begin: g0, clearcoat_normal_fragment_maps: v0, clearcoat_pars_fragment: b0, iridescence_pars_fragment: w0, output_fragment: S0, packing: _0, premultiplied_alpha_fragment: E0, project_vertex: A0, dithering_fragment: x0, dithering_pars_fragment: T0, roughnessmap_fragment: k0, roughnessmap_pars_fragment: O0, shadowmap_pars_fragment: P0, shadowmap_pars_vertex: C0, shadowmap_vertex: R0, shadowmask_pars_fragment: M0, skinbase_vertex: I0, skinning_pars_vertex: L0, skinning_vertex: B0, skinnormal_vertex: N0, specularmap_fragment: D0, specularmap_pars_fragment: F0, tonemapping_fragment: U0, tonemapping_pars_fragment: j0, transmission_fragment: V0, transmission_pars_fragment: q0, uv_pars_fragment: z0, uv_pars_vertex: H0, uv_vertex: G0, uv2_pars_fragment: W0, uv2_pars_vertex: K0, uv2_vertex: X0, worldpos_vertex: $0, background_vert: Y0, background_frag: Q0, cube_vert: Z0, cube_frag: J0, depth_vert: eb, depth_frag: tb, distanceRGBA_vert: rb, distanceRGBA_frag: nb, equirect_vert: ib, equirect_frag: ob, linedashed_vert: ab, linedashed_frag: sb, meshbasic_vert: ub, meshbasic_frag: cb, meshlambert_vert: lb, meshlambert_frag: fb, meshmatcap_vert: pb, meshmatcap_frag: hb, meshnormal_vert: db, meshnormal_frag: mb, meshphong_vert: yb, meshphong_frag: gb, meshphysical_vert: vb, meshphysical_frag: bb, meshtoon_vert: wb, meshtoon_frag: Sb, points_vert: _b, points_frag: Eb, shadow_vert: Ab, shadow_frag: xb, sprite_vert: Tb, sprite_frag: kb }, an = { common: { diffuse: { value: new Mn(16777215) }, opacity: { value: 1 }, map: { value: null }, uvTransform: { value: new Vi() }, uv2Transform: { value: new Vi() }, alphaMap: { value: null }, alphaTest: { value: 0 } }, specularmap: { specularMap: { value: null } }, envmap: { envMap: { value: null }, flipEnvMap: { value: -1 }, reflectivity: { value: 1 }, ior: { value: 1.5 }, refractionRatio: { value: 0.98 } }, aomap: { aoMap: { value: null }, aoMapIntensity: { value: 1 } }, lightmap: { lightMap: { value: null }, lightMapIntensity: { value: 1 } }, emissivemap: { emissiveMap: { value: null } }, bumpmap: { bumpMap: { value: null }, bumpScale: { value: 1 } }, normalmap: { normalMap: { value: null }, normalScale: { value: new In(1, 1) } }, displacementmap: { displacementMap: { value: null }, displacementScale: { value: 1 }, displacementBias: { value: 0 } }, roughnessmap: { roughnessMap: { value: null } }, metalnessmap: { metalnessMap: { value: null } }, gradientmap: { gradientMap: { value: null } }, fog: { fogDensity: { value: 25e-5 }, fogNear: { value: 1 }, fogFar: { value: 2e3 }, fogColor: { value: new Mn(16777215) } }, lights: { ambientLightColor: { value: [] }, lightProbe: { value: [] }, directionalLights: { value: [], properties: { direction: {}, color: {} } }, directionalLightShadows: { value: [], properties: { shadowBias: {}, shadowNormalBias: {}, shadowRadius: {}, shadowMapSize: {} } }, directionalShadowMap: { value: [] }, directionalShadowMatrix: { value: [] }, spotLights: { value: [], properties: { color: {}, position: {}, direction: {}, distance: {}, coneCos: {}, penumbraCos: {}, decay: {} } }, spotLightShadows: { value: [], properties: { shadowBias: {}, shadowNormalBias: {}, shadowRadius: {}, shadowMapSize: {} } }, spotShadowMap: { value: [] }, spotShadowMatrix: { value: [] }, pointLights: { value: [], properties: { color: {}, position: {}, decay: {}, distance: {} } }, pointLightShadows: { value: [], properties: { shadowBias: {}, shadowNormalBias: {}, shadowRadius: {}, shadowMapSize: {}, shadowCameraNear: {}, shadowCameraFar: {} } }, pointShadowMap: { value: [] }, pointShadowMatrix: { value: [] }, hemisphereLights: { value: [], properties: { direction: {}, skyColor: {}, groundColor: {} } }, rectAreaLights: { value: [], properties: { color: {}, position: {}, width: {}, height: {} } }, ltc_1: { value: null }, ltc_2: { value: null } }, points: { diffuse: { value: new Mn(16777215) }, opacity: { value: 1 }, size: { value: 1 }, scale: { value: 1 }, map: { value: null }, alphaMap: { value: null }, alphaTest: { value: 0 }, uvTransform: { value: new Vi() } }, sprite: { diffuse: { value: new Mn(16777215) }, opacity: { value: 1 }, center: { value: new In(0.5, 0.5) }, rotation: { value: 0 }, map: { value: null }, alphaMap: { value: null }, alphaTest: { value: 0 }, uvTransform: { value: new Vi() } } }, ro = { basic: { uniforms: mi([an.common, an.specularmap, an.envmap, an.aomap, an.lightmap, an.fog]), vertexShader: kn.meshbasic_vert, fragmentShader: kn.meshbasic_frag }, lambert: { uniforms: mi([an.common, an.specularmap, an.envmap, an.aomap, an.lightmap, an.emissivemap, an.fog, an.lights, { emissive: { value: new Mn(0) } }]), vertexShader: kn.meshlambert_vert, fragmentShader: kn.meshlambert_frag }, phong: { uniforms: mi([an.common, an.specularmap, an.envmap, an.aomap, an.lightmap, an.emissivemap, an.bumpmap, an.normalmap, an.displacementmap, an.fog, an.lights, { emissive: { value: new Mn(0) }, specular: { value: new Mn(1118481) }, shininess: { value: 30 } }]), vertexShader: kn.meshphong_vert, fragmentShader: kn.meshphong_frag }, standard: { uniforms: mi([an.common, an.envmap, an.aomap, an.lightmap, an.emissivemap, an.bumpmap, an.normalmap, an.displacementmap, an.roughnessmap, an.metalnessmap, an.fog, an.lights, { emissive: { value: new Mn(0) }, roughness: { value: 1 }, metalness: { value: 0 }, envMapIntensity: { value: 1 } }]), vertexShader: kn.meshphysical_vert, fragmentShader: kn.meshphysical_frag }, toon: { uniforms: mi([an.common, an.aomap, an.lightmap, an.emissivemap, an.bumpmap, an.normalmap, an.displacementmap, an.gradientmap, an.fog, an.lights, { emissive: { value: new Mn(0) } }]), vertexShader: kn.meshtoon_vert, fragmentShader: kn.meshtoon_frag }, matcap: { uniforms: mi([an.common, an.bumpmap, an.normalmap, an.displacementmap, an.fog, { matcap: { value: null } }]), vertexShader: kn.meshmatcap_vert, fragmentShader: kn.meshmatcap_frag }, points: { uniforms: mi([an.points, an.fog]), vertexShader: kn.points_vert, fragmentShader: kn.points_frag }, dashed: { uniforms: mi([an.common, an.fog, { scale: { value: 1 }, dashSize: { value: 1 }, totalSize: { value: 2 } }]), vertexShader: kn.linedashed_vert, fragmentShader: kn.linedashed_frag }, depth: { uniforms: mi([an.common, an.displacementmap]), vertexShader: kn.depth_vert, fragmentShader: kn.depth_frag }, normal: { uniforms: mi([an.common, an.bumpmap, an.normalmap, an.displacementmap, { opacity: { value: 1 } }]), vertexShader: kn.meshnormal_vert, fragmentShader: kn.meshnormal_frag }, sprite: { uniforms: mi([an.sprite, an.fog]), vertexShader: kn.sprite_vert, fragmentShader: kn.sprite_frag }, background: { uniforms: { uvTransform: { value: new Vi() }, t2D: { value: null } }, vertexShader: kn.background_vert, fragmentShader: kn.background_frag }, cube: { uniforms: mi([an.envmap, { opacity: { value: 1 } }]), vertexShader: kn.cube_vert, fragmentShader: kn.cube_frag }, equirect: { uniforms: { tEquirect: { value: null } }, vertexShader: kn.equirect_vert, fragmentShader: kn.equirect_frag }, distanceRGBA: { uniforms: mi([an.common, an.displacementmap, { referencePosition: { value: new _r() }, nearDistance: { value: 1 }, farDistance: { value: 1e3 } }]), vertexShader: kn.distanceRGBA_vert, fragmentShader: kn.distanceRGBA_frag }, shadow: { uniforms: mi([an.lights, an.fog, { color: { value: new Mn(0) }, opacity: { value: 1 } }]), vertexShader: kn.shadow_vert, fragmentShader: kn.shadow_frag } };
ro.physical = { uniforms: mi([ro.standard.uniforms, { clearcoat: { value: 0 }, clearcoatMap: { value: null }, clearcoatRoughness: { value: 0 }, clearcoatRoughnessMap: { value: null }, clearcoatNormalScale: { value: new In(1, 1) }, clearcoatNormalMap: { value: null }, iridescence: { value: 0 }, iridescenceMap: { value: null }, iridescenceIOR: { value: 1.3 }, iridescenceThicknessMinimum: { value: 100 }, iridescenceThicknessMaximum: { value: 400 }, iridescenceThicknessMap: { value: null }, sheen: { value: 0 }, sheenColor: { value: new Mn(0) }, sheenColorMap: { value: null }, sheenRoughness: { value: 1 }, sheenRoughnessMap: { value: null }, transmission: { value: 0 }, transmissionMap: { value: null }, transmissionSamplerSize: { value: new In() }, transmissionSamplerMap: { value: null }, thickness: { value: 0 }, thicknessMap: { value: null }, attenuationDistance: { value: 0 }, attenuationColor: { value: new Mn(0) }, specularIntensity: { value: 1 }, specularIntensityMap: { value: null }, specularColor: { value: new Mn(1, 1, 1) }, specularColorMap: { value: null } }]), vertexShader: kn.meshphysical_vert, fragmentShader: kn.meshphysical_frag };
function Ob(v, e, n, i, u, y) {
  const t = new Mn(0);
  let o = u === true ? 0 : 1, s, c, h = null, f = 0, r = null;
  function m(a, l) {
    let d = false, b = l.isScene === true ? l.background : null;
    b && b.isTexture && (b = e.get(b));
    const S = v.xr, E = S.getSession && S.getSession();
    E && E.environmentBlendMode === "additive" && (b = null), b === null ? g(t, o) : b && b.isColor && (g(b, 1), d = true), (v.autoClear || d) && v.clear(v.autoClearColor, v.autoClearDepth, v.autoClearStencil), b && (b.isCubeTexture || b.mapping === 306) ? (c === void 0 && (c = new no(new Vs(1, 1, 1), new oa({ name: "BackgroundCubeMaterial", uniforms: Pa(ro.cube.uniforms), vertexShader: ro.cube.vertexShader, fragmentShader: ro.cube.fragmentShader, side: 1, depthTest: false, depthWrite: false, fog: false })), c.geometry.deleteAttribute("normal"), c.geometry.deleteAttribute("uv"), c.onBeforeRender = function(R, k, w) {
      this.matrixWorld.copyPosition(w.matrixWorld);
    }, Object.defineProperty(c.material, "envMap", { get: function() {
      return this.uniforms.envMap.value;
    } }), i.update(c)), c.material.uniforms.envMap.value = b, c.material.uniforms.flipEnvMap.value = b.isCubeTexture && b.isRenderTargetTexture === false ? -1 : 1, (h !== b || f !== b.version || r !== v.toneMapping) && (c.material.needsUpdate = true, h = b, f = b.version, r = v.toneMapping), c.layers.enableAll(), a.unshift(c, c.geometry, c.material, 0, 0, null)) : b && b.isTexture && (s === void 0 && (s = new no(new Ac(2, 2), new oa({ name: "BackgroundMaterial", uniforms: Pa(ro.background.uniforms), vertexShader: ro.background.vertexShader, fragmentShader: ro.background.fragmentShader, side: 0, depthTest: false, depthWrite: false, fog: false })), s.geometry.deleteAttribute("normal"), Object.defineProperty(s.material, "map", { get: function() {
      return this.uniforms.t2D.value;
    } }), i.update(s)), s.material.uniforms.t2D.value = b, b.matrixAutoUpdate === true && b.updateMatrix(), s.material.uniforms.uvTransform.value.copy(b.matrix), (h !== b || f !== b.version || r !== v.toneMapping) && (s.material.needsUpdate = true, h = b, f = b.version, r = v.toneMapping), s.layers.enableAll(), a.unshift(s, s.geometry, s.material, 0, 0, null));
  }
  function g(a, l) {
    n.buffers.color.setClear(a.r, a.g, a.b, l, y);
  }
  return { getClearColor: function() {
    return t;
  }, setClearColor: function(a, l = 1) {
    t.set(a), o = l, g(t, o);
  }, getClearAlpha: function() {
    return o;
  }, setClearAlpha: function(a) {
    o = a, g(t, o);
  }, render: m };
}
function Pb(v, e, n, i) {
  const u = v.getParameter(34921), y = i.isWebGL2 ? null : e.get("OES_vertex_array_object"), t = i.isWebGL2 || y !== null, o = {}, s = l(null);
  let c = s, h = false;
  function f(x, L, j, z, Z) {
    let ue = false;
    if (t) {
      const $ = a(z, j, L);
      c !== $ && (c = $, m(c.object)), ue = d(x, z, j, Z), ue && b(x, z, j, Z);
    } else {
      const $ = L.wireframe === true;
      (c.geometry !== z.id || c.program !== j.id || c.wireframe !== $) && (c.geometry = z.id, c.program = j.id, c.wireframe = $, ue = true);
    }
    Z !== null && n.update(Z, 34963), (ue || h) && (h = false, F(x, L, j, z), Z !== null && v.bindBuffer(34963, n.get(Z).buffer));
  }
  function r() {
    return i.isWebGL2 ? v.createVertexArray() : y.createVertexArrayOES();
  }
  function m(x) {
    return i.isWebGL2 ? v.bindVertexArray(x) : y.bindVertexArrayOES(x);
  }
  function g(x) {
    return i.isWebGL2 ? v.deleteVertexArray(x) : y.deleteVertexArrayOES(x);
  }
  function a(x, L, j) {
    const z = j.wireframe === true;
    let Z = o[x.id];
    Z === void 0 && (Z = {}, o[x.id] = Z);
    let ue = Z[L.id];
    ue === void 0 && (ue = {}, Z[L.id] = ue);
    let $ = ue[z];
    return $ === void 0 && ($ = l(r()), ue[z] = $), $;
  }
  function l(x) {
    const L = [], j = [], z = [];
    for (let Z = 0; Z < u; Z++) L[Z] = 0, j[Z] = 0, z[Z] = 0;
    return { geometry: null, program: null, wireframe: false, newAttributes: L, enabledAttributes: j, attributeDivisors: z, object: x, attributes: {}, index: null };
  }
  function d(x, L, j, z) {
    const Z = c.attributes, ue = L.attributes;
    let $ = 0;
    const X = j.getAttributes();
    for (const J in X) if (X[J].location >= 0) {
      const B = Z[J];
      let Q = ue[J];
      if (Q === void 0 && (J === "instanceMatrix" && x.instanceMatrix && (Q = x.instanceMatrix), J === "instanceColor" && x.instanceColor && (Q = x.instanceColor)), B === void 0 || B.attribute !== Q || Q && B.data !== Q.data) return true;
      $++;
    }
    return c.attributesNum !== $ || c.index !== z;
  }
  function b(x, L, j, z) {
    const Z = {}, ue = L.attributes;
    let $ = 0;
    const X = j.getAttributes();
    for (const J in X) if (X[J].location >= 0) {
      let B = ue[J];
      B === void 0 && (J === "instanceMatrix" && x.instanceMatrix && (B = x.instanceMatrix), J === "instanceColor" && x.instanceColor && (B = x.instanceColor));
      const Q = {};
      Q.attribute = B, B && B.data && (Q.data = B.data), Z[J] = Q, $++;
    }
    c.attributes = Z, c.attributesNum = $, c.index = z;
  }
  function S() {
    const x = c.newAttributes;
    for (let L = 0, j = x.length; L < j; L++) x[L] = 0;
  }
  function E(x) {
    R(x, 0);
  }
  function R(x, L) {
    const j = c.newAttributes, z = c.enabledAttributes, Z = c.attributeDivisors;
    j[x] = 1, z[x] === 0 && (v.enableVertexAttribArray(x), z[x] = 1), Z[x] !== L && ((i.isWebGL2 ? v : e.get("ANGLE_instanced_arrays"))[i.isWebGL2 ? "vertexAttribDivisor" : "vertexAttribDivisorANGLE"](x, L), Z[x] = L);
  }
  function k() {
    const x = c.newAttributes, L = c.enabledAttributes;
    for (let j = 0, z = L.length; j < z; j++) L[j] !== x[j] && (v.disableVertexAttribArray(j), L[j] = 0);
  }
  function w(x, L, j, z, Z, ue) {
    i.isWebGL2 === true && (j === 5124 || j === 5125) ? v.vertexAttribIPointer(x, L, j, Z, ue) : v.vertexAttribPointer(x, L, j, z, Z, ue);
  }
  function F(x, L, j, z) {
    if (i.isWebGL2 === false && (x.isInstancedMesh || z.isInstancedBufferGeometry) && e.get("ANGLE_instanced_arrays") === null) return;
    S();
    const Z = z.attributes, ue = j.getAttributes(), $ = L.defaultAttributeValues;
    for (const X in ue) {
      const J = ue[X];
      if (J.location >= 0) {
        let B = Z[X];
        if (B === void 0 && (X === "instanceMatrix" && x.instanceMatrix && (B = x.instanceMatrix), X === "instanceColor" && x.instanceColor && (B = x.instanceColor)), B !== void 0) {
          const Q = B.normalized, ne = B.itemSize, K = n.get(B);
          if (K === void 0) continue;
          const ie = K.buffer, ce = K.type, ye = K.bytesPerElement;
          if (B.isInterleavedBufferAttribute) {
            const oe = B.data, se = oe.stride, re = B.offset;
            if (oe.isInstancedInterleavedBuffer) {
              for (let ge = 0; ge < J.locationSize; ge++) R(J.location + ge, oe.meshPerAttribute);
              x.isInstancedMesh !== true && z._maxInstanceCount === void 0 && (z._maxInstanceCount = oe.meshPerAttribute * oe.count);
            } else for (let ge = 0; ge < J.locationSize; ge++) E(J.location + ge);
            v.bindBuffer(34962, ie);
            for (let ge = 0; ge < J.locationSize; ge++) w(J.location + ge, ne / J.locationSize, ce, Q, se * ye, (re + ne / J.locationSize * ge) * ye);
          } else {
            if (B.isInstancedBufferAttribute) {
              for (let oe = 0; oe < J.locationSize; oe++) R(J.location + oe, B.meshPerAttribute);
              x.isInstancedMesh !== true && z._maxInstanceCount === void 0 && (z._maxInstanceCount = B.meshPerAttribute * B.count);
            } else for (let oe = 0; oe < J.locationSize; oe++) E(J.location + oe);
            v.bindBuffer(34962, ie);
            for (let oe = 0; oe < J.locationSize; oe++) w(J.location + oe, ne / J.locationSize, ce, Q, ne * ye, ne / J.locationSize * oe * ye);
          }
        } else if ($ !== void 0) {
          const Q = $[X];
          if (Q !== void 0) switch (Q.length) {
            case 2:
              v.vertexAttrib2fv(J.location, Q);
              break;
            case 3:
              v.vertexAttrib3fv(J.location, Q);
              break;
            case 4:
              v.vertexAttrib4fv(J.location, Q);
              break;
            default:
              v.vertexAttrib1fv(J.location, Q);
          }
        }
      }
    }
    k();
  }
  function I() {
    H();
    for (const x in o) {
      const L = o[x];
      for (const j in L) {
        const z = L[j];
        for (const Z in z) g(z[Z].object), delete z[Z];
        delete L[j];
      }
      delete o[x];
    }
  }
  function q(x) {
    if (o[x.id] === void 0) return;
    const L = o[x.id];
    for (const j in L) {
      const z = L[j];
      for (const Z in z) g(z[Z].object), delete z[Z];
      delete L[j];
    }
    delete o[x.id];
  }
  function N(x) {
    for (const L in o) {
      const j = o[L];
      if (j[x.id] === void 0) continue;
      const z = j[x.id];
      for (const Z in z) g(z[Z].object), delete z[Z];
      delete j[x.id];
    }
  }
  function H() {
    _(), h = true, c !== s && (c = s, m(c.object));
  }
  function _() {
    s.geometry = null, s.program = null, s.wireframe = false;
  }
  return { setup: f, reset: H, resetDefaultState: _, dispose: I, releaseStatesOfGeometry: q, releaseStatesOfProgram: N, initAttributes: S, enableAttribute: E, disableUnusedAttributes: k };
}
function Cb(v, e, n, i) {
  const u = i.isWebGL2;
  let y;
  function t(c) {
    y = c;
  }
  function o(c, h) {
    v.drawArrays(y, c, h), n.update(h, y, 1);
  }
  function s(c, h, f) {
    if (f === 0) return;
    let r, m;
    if (u) r = v, m = "drawArraysInstanced";
    else if (r = e.get("ANGLE_instanced_arrays"), m = "drawArraysInstancedANGLE", r === null) {
      console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
      return;
    }
    r[m](y, c, h, f), n.update(h, y, f);
  }
  this.setMode = t, this.render = o, this.renderInstances = s;
}
function Rb(v, e, n) {
  let i;
  function u() {
    if (i !== void 0) return i;
    if (e.has("EXT_texture_filter_anisotropic") === true) {
      const w = e.get("EXT_texture_filter_anisotropic");
      i = v.getParameter(w.MAX_TEXTURE_MAX_ANISOTROPY_EXT);
    } else i = 0;
    return i;
  }
  function y(w) {
    if (w === "highp") {
      if (v.getShaderPrecisionFormat(35633, 36338).precision > 0 && v.getShaderPrecisionFormat(35632, 36338).precision > 0) return "highp";
      w = "mediump";
    }
    return w === "mediump" && v.getShaderPrecisionFormat(35633, 36337).precision > 0 && v.getShaderPrecisionFormat(35632, 36337).precision > 0 ? "mediump" : "lowp";
  }
  const t = typeof WebGL2RenderingContext < "u" && v instanceof WebGL2RenderingContext || typeof WebGL2ComputeRenderingContext < "u" && v instanceof WebGL2ComputeRenderingContext;
  let o = n.precision !== void 0 ? n.precision : "highp";
  const s = y(o);
  s !== o && (console.warn("THREE.WebGLRenderer:", o, "not supported, using", s, "instead."), o = s);
  const c = t || e.has("WEBGL_draw_buffers"), h = n.logarithmicDepthBuffer === true, f = v.getParameter(34930), r = v.getParameter(35660), m = v.getParameter(3379), g = v.getParameter(34076), a = v.getParameter(34921), l = v.getParameter(36347), d = v.getParameter(36348), b = v.getParameter(36349), S = r > 0, E = t || e.has("OES_texture_float"), R = S && E, k = t ? v.getParameter(36183) : 0;
  return { isWebGL2: t, drawBuffers: c, getMaxAnisotropy: u, getMaxPrecision: y, precision: o, logarithmicDepthBuffer: h, maxTextures: f, maxVertexTextures: r, maxTextureSize: m, maxCubemapSize: g, maxAttributes: a, maxVertexUniforms: l, maxVaryings: d, maxFragmentUniforms: b, vertexTextures: S, floatFragmentTextures: E, floatVertexTextures: R, maxSamples: k };
}
function Mb(v) {
  const e = this;
  let n = null, i = 0, u = false, y = false;
  const t = new $o(), o = new Vi(), s = { value: null, needsUpdate: false };
  this.uniform = s, this.numPlanes = 0, this.numIntersection = 0, this.init = function(f, r, m) {
    const g = f.length !== 0 || r || i !== 0 || u;
    return u = r, n = h(f, m, 0), i = f.length, g;
  }, this.beginShadows = function() {
    y = true, h(null);
  }, this.endShadows = function() {
    y = false, c();
  }, this.setState = function(f, r, m) {
    const g = f.clippingPlanes, a = f.clipIntersection, l = f.clipShadows, d = v.get(f);
    if (!u || g === null || g.length === 0 || y && !l) y ? h(null) : c();
    else {
      const b = y ? 0 : i, S = b * 4;
      let E = d.clippingState || null;
      s.value = E, E = h(g, r, S, m);
      for (let R = 0; R !== S; ++R) E[R] = n[R];
      d.clippingState = E, this.numIntersection = a ? this.numPlanes : 0, this.numPlanes += b;
    }
  };
  function c() {
    s.value !== n && (s.value = n, s.needsUpdate = i > 0), e.numPlanes = i, e.numIntersection = 0;
  }
  function h(f, r, m, g) {
    const a = f !== null ? f.length : 0;
    let l = null;
    if (a !== 0) {
      if (l = s.value, g !== true || l === null) {
        const d = m + a * 4, b = r.matrixWorldInverse;
        o.getNormalMatrix(b), (l === null || l.length < d) && (l = new Float32Array(d));
        for (let S = 0, E = m; S !== a; ++S, E += 4) t.copy(f[S]).applyMatrix4(b, o), t.normal.toArray(l, E), l[E + 3] = t.constant;
      }
      s.value = l, s.needsUpdate = true;
    }
    return e.numPlanes = a, e.numIntersection = 0, l;
  }
}
function Ib(v) {
  let e = /* @__PURE__ */ new WeakMap();
  function n(t, o) {
    return o === 303 ? t.mapping = 301 : o === 304 && (t.mapping = 302), t;
  }
  function i(t) {
    if (t && t.isTexture && t.isRenderTargetTexture === false) {
      const o = t.mapping;
      if (o === 303 || o === 304) if (e.has(t)) {
        const s = e.get(t).texture;
        return n(s, t.mapping);
      } else {
        const s = t.image;
        if (s && s.height > 0) {
          const c = new $g(s.height / 2);
          return c.fromEquirectangularTexture(v, t), e.set(t, c), t.addEventListener("dispose", u), n(c.texture, t.mapping);
        } else return null;
      }
    }
    return t;
  }
  function u(t) {
    const o = t.target;
    o.removeEventListener("dispose", u);
    const s = e.get(o);
    s !== void 0 && (e.delete(o), s.dispose());
  }
  function y() {
    e = /* @__PURE__ */ new WeakMap();
  }
  return { get: i, dispose: y };
}
class Lb extends xm {
  constructor(e = -1, n = 1, i = 1, u = -1, y = 0.1, t = 2e3) {
    super(), this.isOrthographicCamera = true, this.type = "OrthographicCamera", this.zoom = 1, this.view = null, this.left = e, this.right = n, this.top = i, this.bottom = u, this.near = y, this.far = t, this.updateProjectionMatrix();
  }
  copy(e, n) {
    return super.copy(e, n), this.left = e.left, this.right = e.right, this.top = e.top, this.bottom = e.bottom, this.near = e.near, this.far = e.far, this.zoom = e.zoom, this.view = e.view === null ? null : Object.assign({}, e.view), this;
  }
  setViewOffset(e, n, i, u, y, t) {
    this.view === null && (this.view = { enabled: true, fullWidth: 1, fullHeight: 1, offsetX: 0, offsetY: 0, width: 1, height: 1 }), this.view.enabled = true, this.view.fullWidth = e, this.view.fullHeight = n, this.view.offsetX = i, this.view.offsetY = u, this.view.width = y, this.view.height = t, this.updateProjectionMatrix();
  }
  clearViewOffset() {
    this.view !== null && (this.view.enabled = false), this.updateProjectionMatrix();
  }
  updateProjectionMatrix() {
    const e = (this.right - this.left) / (2 * this.zoom), n = (this.top - this.bottom) / (2 * this.zoom), i = (this.right + this.left) / 2, u = (this.top + this.bottom) / 2;
    let y = i - e, t = i + e, o = u + n, s = u - n;
    if (this.view !== null && this.view.enabled) {
      const c = (this.right - this.left) / this.view.fullWidth / this.zoom, h = (this.top - this.bottom) / this.view.fullHeight / this.zoom;
      y += c * this.view.offsetX, t = y + c * this.view.width, o -= h * this.view.offsetY, s = o - h * this.view.height;
    }
    this.projectionMatrix.makeOrthographic(y, t, o, s, this.near, this.far), this.projectionMatrixInverse.copy(this.projectionMatrix).invert();
  }
  toJSON(e) {
    const n = super.toJSON(e);
    return n.object.zoom = this.zoom, n.object.left = this.left, n.object.right = this.right, n.object.top = this.top, n.object.bottom = this.bottom, n.object.near = this.near, n.object.far = this.far, this.view !== null && (n.object.view = Object.assign({}, this.view)), n;
  }
}
const ka = 4, Bh = [0.125, 0.215, 0.35, 0.446, 0.526, 0.582], Qo = 20, Sl = new Lb(), Nh = new Mn();
let _l = null;
const Yo = (1 + Math.sqrt(5)) / 2, Aa = 1 / Yo, Dh = [new _r(1, 1, 1), new _r(-1, 1, 1), new _r(1, 1, -1), new _r(-1, 1, -1), new _r(0, Yo, Aa), new _r(0, Yo, -Aa), new _r(Aa, 0, Yo), new _r(-Aa, 0, Yo), new _r(Yo, Aa, 0), new _r(-Yo, Aa, 0)];
class Fh {
  constructor(e) {
    this._renderer = e, this._pingPongRenderTarget = null, this._lodMax = 0, this._cubeSize = 0, this._lodPlanes = [], this._sizeLods = [], this._sigmas = [], this._blurMaterial = null, this._cubemapMaterial = null, this._equirectMaterial = null, this._compileMaterial(this._blurMaterial);
  }
  fromScene(e, n = 0, i = 0.1, u = 100) {
    _l = this._renderer.getRenderTarget(), this._setSize(256);
    const y = this._allocateTargets();
    return y.depthBuffer = true, this._sceneToCubeUV(e, i, u, y), n > 0 && this._blur(y, 0, 0, n), this._applyPMREM(y), this._cleanup(y), y;
  }
  fromEquirectangular(e, n = null) {
    return this._fromTexture(e, n);
  }
  fromCubemap(e, n = null) {
    return this._fromTexture(e, n);
  }
  compileCubemapShader() {
    this._cubemapMaterial === null && (this._cubemapMaterial = Vh(), this._compileMaterial(this._cubemapMaterial));
  }
  compileEquirectangularShader() {
    this._equirectMaterial === null && (this._equirectMaterial = jh(), this._compileMaterial(this._equirectMaterial));
  }
  dispose() {
    this._dispose(), this._cubemapMaterial !== null && this._cubemapMaterial.dispose(), this._equirectMaterial !== null && this._equirectMaterial.dispose();
  }
  _setSize(e) {
    this._lodMax = Math.floor(Math.log2(e)), this._cubeSize = Math.pow(2, this._lodMax);
  }
  _dispose() {
    this._blurMaterial !== null && this._blurMaterial.dispose(), this._pingPongRenderTarget !== null && this._pingPongRenderTarget.dispose();
    for (let e = 0; e < this._lodPlanes.length; e++) this._lodPlanes[e].dispose();
  }
  _cleanup(e) {
    this._renderer.setRenderTarget(_l), e.scissorTest = false, Gu(e, 0, 0, e.width, e.height);
  }
  _fromTexture(e, n) {
    e.mapping === 301 || e.mapping === 302 ? this._setSize(e.image.length === 0 ? 16 : e.image[0].width || e.image[0].image.width) : this._setSize(e.image.width / 4), _l = this._renderer.getRenderTarget();
    const i = n || this._allocateTargets();
    return this._textureToCubeUV(e, i), this._applyPMREM(i), this._cleanup(i), i;
  }
  _allocateTargets() {
    const e = 3 * Math.max(this._cubeSize, 112), n = 4 * this._cubeSize, i = { magFilter: 1006, minFilter: 1006, generateMipmaps: false, type: 1016, format: 1023, encoding: 3e3, depthBuffer: false }, u = Uh(e, n, i);
    if (this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== e) {
      this._pingPongRenderTarget !== null && this._dispose(), this._pingPongRenderTarget = Uh(e, n, i);
      const { _lodMax: y } = this;
      ({ sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = Bb(y)), this._blurMaterial = Nb(y, e, n);
    }
    return u;
  }
  _compileMaterial(e) {
    const n = new no(this._lodPlanes[0], e);
    this._renderer.compile(n, Sl);
  }
  _sceneToCubeUV(e, n, i, u) {
    const y = new Ri(90, 1, n, i), t = [1, -1, 1, 1, 1, 1], o = [1, 1, 1, -1, -1, -1], s = this._renderer, c = s.autoClear, h = s.toneMapping;
    s.getClearColor(Nh), s.toneMapping = 0, s.autoClear = false;
    const f = new _m({ name: "PMREM.Background", side: 1, depthWrite: false, depthTest: false }), r = new no(new Vs(), f);
    let m = false;
    const g = e.background;
    g ? g.isColor && (f.color.copy(g), e.background = null, m = true) : (f.color.copy(Nh), m = true);
    for (let a = 0; a < 6; a++) {
      const l = a % 3;
      l === 0 ? (y.up.set(0, t[a], 0), y.lookAt(o[a], 0, 0)) : l === 1 ? (y.up.set(0, 0, t[a]), y.lookAt(0, o[a], 0)) : (y.up.set(0, t[a], 0), y.lookAt(0, 0, o[a]));
      const d = this._cubeSize;
      Gu(u, l * d, a > 2 ? d : 0, d, d), s.setRenderTarget(u), m && s.render(r, y), s.render(e, y);
    }
    r.geometry.dispose(), r.material.dispose(), s.toneMapping = h, s.autoClear = c, e.background = g;
  }
  _textureToCubeUV(e, n) {
    const i = this._renderer, u = e.mapping === 301 || e.mapping === 302;
    u ? (this._cubemapMaterial === null && (this._cubemapMaterial = Vh()), this._cubemapMaterial.uniforms.flipEnvMap.value = e.isRenderTargetTexture === false ? -1 : 1) : this._equirectMaterial === null && (this._equirectMaterial = jh());
    const y = u ? this._cubemapMaterial : this._equirectMaterial, t = new no(this._lodPlanes[0], y), o = y.uniforms;
    o.envMap.value = e;
    const s = this._cubeSize;
    Gu(n, 0, 0, 3 * s, 2 * s), i.setRenderTarget(n), i.render(t, Sl);
  }
  _applyPMREM(e) {
    const n = this._renderer, i = n.autoClear;
    n.autoClear = false;
    for (let u = 1; u < this._lodPlanes.length; u++) {
      const y = Math.sqrt(this._sigmas[u] * this._sigmas[u] - this._sigmas[u - 1] * this._sigmas[u - 1]), t = Dh[(u - 1) % Dh.length];
      this._blur(e, u - 1, u, y, t);
    }
    n.autoClear = i;
  }
  _blur(e, n, i, u, y) {
    const t = this._pingPongRenderTarget;
    this._halfBlur(e, t, n, i, u, "latitudinal", y), this._halfBlur(t, e, i, i, u, "longitudinal", y);
  }
  _halfBlur(e, n, i, u, y, t, o) {
    const s = this._renderer, c = this._blurMaterial;
    t !== "latitudinal" && t !== "longitudinal" && console.error("blur direction must be either latitudinal or longitudinal!");
    const h = 3, f = new no(this._lodPlanes[u], c), r = c.uniforms, m = this._sizeLods[i] - 1, g = isFinite(y) ? Math.PI / (2 * m) : 2 * Math.PI / (2 * Qo - 1), a = y / g, l = isFinite(y) ? 1 + Math.floor(h * a) : Qo;
    l > Qo && console.warn(`sigmaRadians, ${y}, is too large and will clip, as it requested ${l} samples when the maximum is set to ${Qo}`);
    const d = [];
    let b = 0;
    for (let w = 0; w < Qo; ++w) {
      const F = w / a, I = Math.exp(-F * F / 2);
      d.push(I), w === 0 ? b += I : w < l && (b += 2 * I);
    }
    for (let w = 0; w < d.length; w++) d[w] = d[w] / b;
    r.envMap.value = e.texture, r.samples.value = l, r.weights.value = d, r.latitudinal.value = t === "latitudinal", o && (r.poleAxis.value = o);
    const { _lodMax: S } = this;
    r.dTheta.value = g, r.mipInt.value = S - i;
    const E = this._sizeLods[u], R = 3 * E * (u > S - ka ? u - S + ka : 0), k = 4 * (this._cubeSize - E);
    Gu(n, R, k, 3 * E, 2 * E), s.setRenderTarget(n), s.render(f, Sl);
  }
}
function Bb(v) {
  const e = [], n = [], i = [];
  let u = v;
  const y = v - ka + 1 + Bh.length;
  for (let t = 0; t < y; t++) {
    const o = Math.pow(2, u);
    n.push(o);
    let s = 1 / o;
    t > v - ka ? s = Bh[t - v + ka - 1] : t === 0 && (s = 0), i.push(s);
    const c = 1 / (o - 2), h = -c, f = 1 + c, r = [h, h, f, h, f, f, h, h, f, f, h, f], m = 6, g = 6, a = 3, l = 2, d = 1, b = new Float32Array(a * g * m), S = new Float32Array(l * g * m), E = new Float32Array(d * g * m);
    for (let k = 0; k < m; k++) {
      const w = k % 3 * 2 / 3 - 1, F = k > 2 ? 0 : -1, I = [w, F, 0, w + 2 / 3, F, 0, w + 2 / 3, F + 1, 0, w, F, 0, w + 2 / 3, F + 1, 0, w, F + 1, 0];
      b.set(I, a * g * k), S.set(r, l * g * k);
      const q = [k, k, k, k, k, k];
      E.set(q, d * g * k);
    }
    const R = new oo();
    R.setAttribute("position", new io(b, a)), R.setAttribute("uv", new io(S, l)), R.setAttribute("faceIndex", new io(E, d)), e.push(R), u > ka && u--;
  }
  return { lodPlanes: e, sizeLods: n, sigmas: i };
}
function Uh(v, e, n) {
  const i = new ia(v, e, n);
  return i.texture.mapping = 306, i.texture.name = "PMREM.cubeUv", i.scissorTest = true, i;
}
function Gu(v, e, n, i, u) {
  v.viewport.set(e, n, i, u), v.scissor.set(e, n, i, u);
}
function Nb(v, e, n) {
  const i = new Float32Array(Qo), u = new _r(0, 1, 0);
  return new oa({ name: "SphericalGaussianBlur", defines: { n: Qo, CUBEUV_TEXEL_WIDTH: 1 / e, CUBEUV_TEXEL_HEIGHT: 1 / n, CUBEUV_MAX_MIP: `${v}.0` }, uniforms: { envMap: { value: null }, samples: { value: 1 }, weights: { value: i }, latitudinal: { value: false }, dTheta: { value: 0 }, mipInt: { value: 0 }, poleAxis: { value: u } }, vertexShader: uf(), fragmentShader: `

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`, blending: 0, depthTest: false, depthWrite: false });
}
function jh() {
  return new oa({ name: "EquirectangularToCubeUV", uniforms: { envMap: { value: null } }, vertexShader: uf(), fragmentShader: `

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`, blending: 0, depthTest: false, depthWrite: false });
}
function Vh() {
  return new oa({ name: "CubemapToCubeUV", uniforms: { envMap: { value: null }, flipEnvMap: { value: -1 } }, vertexShader: uf(), fragmentShader: `

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`, blending: 0, depthTest: false, depthWrite: false });
}
function uf() {
  return `

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`;
}
function Db(v) {
  let e = /* @__PURE__ */ new WeakMap(), n = null;
  function i(o) {
    if (o && o.isTexture) {
      const s = o.mapping, c = s === 303 || s === 304, h = s === 301 || s === 302;
      if (c || h) if (o.isRenderTargetTexture && o.needsPMREMUpdate === true) {
        o.needsPMREMUpdate = false;
        let f = e.get(o);
        return n === null && (n = new Fh(v)), f = c ? n.fromEquirectangular(o, f) : n.fromCubemap(o, f), e.set(o, f), f.texture;
      } else {
        if (e.has(o)) return e.get(o).texture;
        {
          const f = o.image;
          if (c && f && f.height > 0 || h && f && u(f)) {
            n === null && (n = new Fh(v));
            const r = c ? n.fromEquirectangular(o) : n.fromCubemap(o);
            return e.set(o, r), o.addEventListener("dispose", y), r.texture;
          } else return null;
        }
      }
    }
    return o;
  }
  function u(o) {
    let s = 0;
    const c = 6;
    for (let h = 0; h < c; h++) o[h] !== void 0 && s++;
    return s === c;
  }
  function y(o) {
    const s = o.target;
    s.removeEventListener("dispose", y);
    const c = e.get(s);
    c !== void 0 && (e.delete(s), c.dispose());
  }
  function t() {
    e = /* @__PURE__ */ new WeakMap(), n !== null && (n.dispose(), n = null);
  }
  return { get: i, dispose: t };
}
function Fb(v) {
  const e = {};
  function n(i) {
    if (e[i] !== void 0) return e[i];
    let u;
    switch (i) {
      case "WEBGL_depth_texture":
        u = v.getExtension("WEBGL_depth_texture") || v.getExtension("MOZ_WEBGL_depth_texture") || v.getExtension("WEBKIT_WEBGL_depth_texture");
        break;
      case "EXT_texture_filter_anisotropic":
        u = v.getExtension("EXT_texture_filter_anisotropic") || v.getExtension("MOZ_EXT_texture_filter_anisotropic") || v.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
        break;
      case "WEBGL_compressed_texture_s3tc":
        u = v.getExtension("WEBGL_compressed_texture_s3tc") || v.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || v.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
        break;
      case "WEBGL_compressed_texture_pvrtc":
        u = v.getExtension("WEBGL_compressed_texture_pvrtc") || v.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
        break;
      default:
        u = v.getExtension(i);
    }
    return e[i] = u, u;
  }
  return { has: function(i) {
    return n(i) !== null;
  }, init: function(i) {
    i.isWebGL2 ? n("EXT_color_buffer_float") : (n("WEBGL_depth_texture"), n("OES_texture_float"), n("OES_texture_half_float"), n("OES_texture_half_float_linear"), n("OES_standard_derivatives"), n("OES_element_index_uint"), n("OES_vertex_array_object"), n("ANGLE_instanced_arrays")), n("OES_texture_float_linear"), n("EXT_color_buffer_half_float"), n("WEBGL_multisampled_render_to_texture");
  }, get: function(i) {
    const u = n(i);
    return u === null && console.warn("THREE.WebGLRenderer: " + i + " extension not supported."), u;
  } };
}
function Ub(v, e, n, i) {
  const u = {}, y = /* @__PURE__ */ new WeakMap();
  function t(f) {
    const r = f.target;
    r.index !== null && e.remove(r.index);
    for (const g in r.attributes) e.remove(r.attributes[g]);
    r.removeEventListener("dispose", t), delete u[r.id];
    const m = y.get(r);
    m && (e.remove(m), y.delete(r)), i.releaseStatesOfGeometry(r), r.isInstancedBufferGeometry === true && delete r._maxInstanceCount, n.memory.geometries--;
  }
  function o(f, r) {
    return u[r.id] === true || (r.addEventListener("dispose", t), u[r.id] = true, n.memory.geometries++), r;
  }
  function s(f) {
    const r = f.attributes;
    for (const g in r) e.update(r[g], 34962);
    const m = f.morphAttributes;
    for (const g in m) {
      const a = m[g];
      for (let l = 0, d = a.length; l < d; l++) e.update(a[l], 34962);
    }
  }
  function c(f) {
    const r = [], m = f.index, g = f.attributes.position;
    let a = 0;
    if (m !== null) {
      const b = m.array;
      a = m.version;
      for (let S = 0, E = b.length; S < E; S += 3) {
        const R = b[S + 0], k = b[S + 1], w = b[S + 2];
        r.push(R, k, k, w, w, R);
      }
    } else {
      const b = g.array;
      a = g.version;
      for (let S = 0, E = b.length / 3 - 1; S < E; S += 3) {
        const R = S + 0, k = S + 1, w = S + 2;
        r.push(R, k, k, w, w, R);
      }
    }
    const l = new (ym(r) ? Am : Em)(r, 1);
    l.version = a;
    const d = y.get(f);
    d && e.remove(d), y.set(f, l);
  }
  function h(f) {
    const r = y.get(f);
    if (r) {
      const m = f.index;
      m !== null && r.version < m.version && c(f);
    } else c(f);
    return y.get(f);
  }
  return { get: o, update: s, getWireframeAttribute: h };
}
function jb(v, e, n, i) {
  const u = i.isWebGL2;
  let y;
  function t(r) {
    y = r;
  }
  let o, s;
  function c(r) {
    o = r.type, s = r.bytesPerElement;
  }
  function h(r, m) {
    v.drawElements(y, m, o, r * s), n.update(m, y, 1);
  }
  function f(r, m, g) {
    if (g === 0) return;
    let a, l;
    if (u) a = v, l = "drawElementsInstanced";
    else if (a = e.get("ANGLE_instanced_arrays"), l = "drawElementsInstancedANGLE", a === null) {
      console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
      return;
    }
    a[l](y, m, o, r * s, g), n.update(m, y, g);
  }
  this.setMode = t, this.setIndex = c, this.render = h, this.renderInstances = f;
}
function Vb(v) {
  const e = { geometries: 0, textures: 0 }, n = { frame: 0, calls: 0, triangles: 0, points: 0, lines: 0 };
  function i(y, t, o) {
    switch (n.calls++, t) {
      case 4:
        n.triangles += o * (y / 3);
        break;
      case 1:
        n.lines += o * (y / 2);
        break;
      case 3:
        n.lines += o * (y - 1);
        break;
      case 2:
        n.lines += o * y;
        break;
      case 0:
        n.points += o * y;
        break;
      default:
        console.error("THREE.WebGLInfo: Unknown draw mode:", t);
        break;
    }
  }
  function u() {
    n.frame++, n.calls = 0, n.triangles = 0, n.points = 0, n.lines = 0;
  }
  return { memory: e, render: n, programs: null, autoReset: true, reset: u, update: i };
}
function qb(v, e) {
  return v[0] - e[0];
}
function zb(v, e) {
  return Math.abs(e[1]) - Math.abs(v[1]);
}
function El(v, e) {
  let n = 1;
  const i = e.isInterleavedBufferAttribute ? e.data.array : e.array;
  i instanceof Int8Array ? n = 127 : i instanceof Uint8Array ? n = 255 : i instanceof Uint16Array ? n = 65535 : i instanceof Int16Array ? n = 32767 : i instanceof Int32Array ? n = 2147483647 : console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ", i), v.divideScalar(n);
}
function Hb(v, e, n) {
  const i = {}, u = new Float32Array(8), y = /* @__PURE__ */ new WeakMap(), t = new ci(), o = [];
  for (let c = 0; c < 8; c++) o[c] = [c, 0];
  function s(c, h, f, r) {
    const m = c.morphTargetInfluences;
    if (e.isWebGL2 === true) {
      const g = h.morphAttributes.position || h.morphAttributes.normal || h.morphAttributes.color, a = g !== void 0 ? g.length : 0;
      let l = y.get(h);
      if (l === void 0 || l.count !== a) {
        let S = function() {
          x.dispose(), y.delete(h), h.removeEventListener("dispose", S);
        };
        l !== void 0 && l.texture.dispose();
        const E = h.morphAttributes.position !== void 0, R = h.morphAttributes.normal !== void 0, k = h.morphAttributes.color !== void 0, w = h.morphAttributes.position || [], F = h.morphAttributes.normal || [], I = h.morphAttributes.color || [];
        let q = 0;
        E === true && (q = 1), R === true && (q = 2), k === true && (q = 3);
        let N = h.attributes.position.count * q, H = 1;
        N > e.maxTextureSize && (H = Math.ceil(N / e.maxTextureSize), N = e.maxTextureSize);
        const _ = new Float32Array(N * H * 4 * a), x = new wm(_, N, H, a);
        x.type = 1015, x.needsUpdate = true;
        const L = q * 4;
        for (let j = 0; j < a; j++) {
          const z = w[j], Z = F[j], ue = I[j], $ = N * H * 4 * j;
          for (let X = 0; X < z.count; X++) {
            const J = X * L;
            E === true && (t.fromBufferAttribute(z, X), z.normalized === true && El(t, z), _[$ + J + 0] = t.x, _[$ + J + 1] = t.y, _[$ + J + 2] = t.z, _[$ + J + 3] = 0), R === true && (t.fromBufferAttribute(Z, X), Z.normalized === true && El(t, Z), _[$ + J + 4] = t.x, _[$ + J + 5] = t.y, _[$ + J + 6] = t.z, _[$ + J + 7] = 0), k === true && (t.fromBufferAttribute(ue, X), ue.normalized === true && El(t, ue), _[$ + J + 8] = t.x, _[$ + J + 9] = t.y, _[$ + J + 10] = t.z, _[$ + J + 11] = ue.itemSize === 4 ? t.w : 1);
          }
        }
        l = { count: a, texture: x, size: new In(N, H) }, y.set(h, l), h.addEventListener("dispose", S);
      }
      let d = 0;
      for (let S = 0; S < m.length; S++) d += m[S];
      const b = h.morphTargetsRelative ? 1 : 1 - d;
      r.getUniforms().setValue(v, "morphTargetBaseInfluence", b), r.getUniforms().setValue(v, "morphTargetInfluences", m), r.getUniforms().setValue(v, "morphTargetsTexture", l.texture, n), r.getUniforms().setValue(v, "morphTargetsTextureSize", l.size);
    } else {
      const g = m === void 0 ? 0 : m.length;
      let a = i[h.id];
      if (a === void 0 || a.length !== g) {
        a = [];
        for (let E = 0; E < g; E++) a[E] = [E, 0];
        i[h.id] = a;
      }
      for (let E = 0; E < g; E++) {
        const R = a[E];
        R[0] = E, R[1] = m[E];
      }
      a.sort(zb);
      for (let E = 0; E < 8; E++) E < g && a[E][1] ? (o[E][0] = a[E][0], o[E][1] = a[E][1]) : (o[E][0] = Number.MAX_SAFE_INTEGER, o[E][1] = 0);
      o.sort(qb);
      const l = h.morphAttributes.position, d = h.morphAttributes.normal;
      let b = 0;
      for (let E = 0; E < 8; E++) {
        const R = o[E], k = R[0], w = R[1];
        k !== Number.MAX_SAFE_INTEGER && w ? (l && h.getAttribute("morphTarget" + E) !== l[k] && h.setAttribute("morphTarget" + E, l[k]), d && h.getAttribute("morphNormal" + E) !== d[k] && h.setAttribute("morphNormal" + E, d[k]), u[E] = w, b += w) : (l && h.hasAttribute("morphTarget" + E) === true && h.deleteAttribute("morphTarget" + E), d && h.hasAttribute("morphNormal" + E) === true && h.deleteAttribute("morphNormal" + E), u[E] = 0);
      }
      const S = h.morphTargetsRelative ? 1 : 1 - b;
      r.getUniforms().setValue(v, "morphTargetBaseInfluence", S), r.getUniforms().setValue(v, "morphTargetInfluences", u);
    }
  }
  return { update: s };
}
function Gb(v, e, n, i) {
  let u = /* @__PURE__ */ new WeakMap();
  function y(s) {
    const c = i.render.frame, h = s.geometry, f = e.get(s, h);
    return u.get(f) !== c && (e.update(f), u.set(f, c)), s.isInstancedMesh && (s.hasEventListener("dispose", o) === false && s.addEventListener("dispose", o), n.update(s.instanceMatrix, 34962), s.instanceColor !== null && n.update(s.instanceColor, 34962)), f;
  }
  function t() {
    u = /* @__PURE__ */ new WeakMap();
  }
  function o(s) {
    const c = s.target;
    c.removeEventListener("dispose", o), n.remove(c.instanceMatrix), c.instanceColor !== null && n.remove(c.instanceColor);
  }
  return { update: y, dispose: t };
}
const Om = new Mi(), Pm = new wm(), Cm = new Mg(), Rm = new Tm(), qh = [], zh = [], Hh = new Float32Array(16), Gh = new Float32Array(9), Wh = new Float32Array(4);
function Na(v, e, n) {
  const i = v[0];
  if (i <= 0 || i > 0) return v;
  const u = e * n;
  let y = qh[u];
  if (y === void 0 && (y = new Float32Array(u), qh[u] = y), e !== 0) {
    i.toArray(y, 0);
    for (let t = 1, o = 0; t !== e; ++t) o += n, v[t].toArray(y, o);
  }
  return y;
}
function Si(v, e) {
  if (v.length !== e.length) return false;
  for (let n = 0, i = v.length; n < i; n++) if (v[n] !== e[n]) return false;
  return true;
}
function _i(v, e) {
  for (let n = 0, i = e.length; n < i; n++) v[n] = e[n];
}
function xc(v, e) {
  let n = zh[e];
  n === void 0 && (n = new Int32Array(e), zh[e] = n);
  for (let i = 0; i !== e; ++i) n[i] = v.allocateTextureUnit();
  return n;
}
function Wb(v, e) {
  const n = this.cache;
  n[0] !== e && (v.uniform1f(this.addr, e), n[0] = e);
}
function Kb(v, e) {
  const n = this.cache;
  if (e.x !== void 0) (n[0] !== e.x || n[1] !== e.y) && (v.uniform2f(this.addr, e.x, e.y), n[0] = e.x, n[1] = e.y);
  else {
    if (Si(n, e)) return;
    v.uniform2fv(this.addr, e), _i(n, e);
  }
}
function Xb(v, e) {
  const n = this.cache;
  if (e.x !== void 0) (n[0] !== e.x || n[1] !== e.y || n[2] !== e.z) && (v.uniform3f(this.addr, e.x, e.y, e.z), n[0] = e.x, n[1] = e.y, n[2] = e.z);
  else if (e.r !== void 0) (n[0] !== e.r || n[1] !== e.g || n[2] !== e.b) && (v.uniform3f(this.addr, e.r, e.g, e.b), n[0] = e.r, n[1] = e.g, n[2] = e.b);
  else {
    if (Si(n, e)) return;
    v.uniform3fv(this.addr, e), _i(n, e);
  }
}
function $b(v, e) {
  const n = this.cache;
  if (e.x !== void 0) (n[0] !== e.x || n[1] !== e.y || n[2] !== e.z || n[3] !== e.w) && (v.uniform4f(this.addr, e.x, e.y, e.z, e.w), n[0] = e.x, n[1] = e.y, n[2] = e.z, n[3] = e.w);
  else {
    if (Si(n, e)) return;
    v.uniform4fv(this.addr, e), _i(n, e);
  }
}
function Yb(v, e) {
  const n = this.cache, i = e.elements;
  if (i === void 0) {
    if (Si(n, e)) return;
    v.uniformMatrix2fv(this.addr, false, e), _i(n, e);
  } else {
    if (Si(n, i)) return;
    Wh.set(i), v.uniformMatrix2fv(this.addr, false, Wh), _i(n, i);
  }
}
function Qb(v, e) {
  const n = this.cache, i = e.elements;
  if (i === void 0) {
    if (Si(n, e)) return;
    v.uniformMatrix3fv(this.addr, false, e), _i(n, e);
  } else {
    if (Si(n, i)) return;
    Gh.set(i), v.uniformMatrix3fv(this.addr, false, Gh), _i(n, i);
  }
}
function Zb(v, e) {
  const n = this.cache, i = e.elements;
  if (i === void 0) {
    if (Si(n, e)) return;
    v.uniformMatrix4fv(this.addr, false, e), _i(n, e);
  } else {
    if (Si(n, i)) return;
    Hh.set(i), v.uniformMatrix4fv(this.addr, false, Hh), _i(n, i);
  }
}
function Jb(v, e) {
  const n = this.cache;
  n[0] !== e && (v.uniform1i(this.addr, e), n[0] = e);
}
function ew(v, e) {
  const n = this.cache;
  Si(n, e) || (v.uniform2iv(this.addr, e), _i(n, e));
}
function tw(v, e) {
  const n = this.cache;
  Si(n, e) || (v.uniform3iv(this.addr, e), _i(n, e));
}
function rw(v, e) {
  const n = this.cache;
  Si(n, e) || (v.uniform4iv(this.addr, e), _i(n, e));
}
function nw(v, e) {
  const n = this.cache;
  n[0] !== e && (v.uniform1ui(this.addr, e), n[0] = e);
}
function iw(v, e) {
  const n = this.cache;
  Si(n, e) || (v.uniform2uiv(this.addr, e), _i(n, e));
}
function ow(v, e) {
  const n = this.cache;
  Si(n, e) || (v.uniform3uiv(this.addr, e), _i(n, e));
}
function aw(v, e) {
  const n = this.cache;
  Si(n, e) || (v.uniform4uiv(this.addr, e), _i(n, e));
}
function sw(v, e, n) {
  const i = this.cache, u = n.allocateTextureUnit();
  i[0] !== u && (v.uniform1i(this.addr, u), i[0] = u), n.setTexture2D(e || Om, u);
}
function uw(v, e, n) {
  const i = this.cache, u = n.allocateTextureUnit();
  i[0] !== u && (v.uniform1i(this.addr, u), i[0] = u), n.setTexture3D(e || Cm, u);
}
function cw(v, e, n) {
  const i = this.cache, u = n.allocateTextureUnit();
  i[0] !== u && (v.uniform1i(this.addr, u), i[0] = u), n.setTextureCube(e || Rm, u);
}
function lw(v, e, n) {
  const i = this.cache, u = n.allocateTextureUnit();
  i[0] !== u && (v.uniform1i(this.addr, u), i[0] = u), n.setTexture2DArray(e || Pm, u);
}
function fw(v) {
  switch (v) {
    case 5126:
      return Wb;
    case 35664:
      return Kb;
    case 35665:
      return Xb;
    case 35666:
      return $b;
    case 35674:
      return Yb;
    case 35675:
      return Qb;
    case 35676:
      return Zb;
    case 5124:
    case 35670:
      return Jb;
    case 35667:
    case 35671:
      return ew;
    case 35668:
    case 35672:
      return tw;
    case 35669:
    case 35673:
      return rw;
    case 5125:
      return nw;
    case 36294:
      return iw;
    case 36295:
      return ow;
    case 36296:
      return aw;
    case 35678:
    case 36198:
    case 36298:
    case 36306:
    case 35682:
      return sw;
    case 35679:
    case 36299:
    case 36307:
      return uw;
    case 35680:
    case 36300:
    case 36308:
    case 36293:
      return cw;
    case 36289:
    case 36303:
    case 36311:
    case 36292:
      return lw;
  }
}
function pw(v, e) {
  v.uniform1fv(this.addr, e);
}
function hw(v, e) {
  const n = Na(e, this.size, 2);
  v.uniform2fv(this.addr, n);
}
function dw(v, e) {
  const n = Na(e, this.size, 3);
  v.uniform3fv(this.addr, n);
}
function mw(v, e) {
  const n = Na(e, this.size, 4);
  v.uniform4fv(this.addr, n);
}
function yw(v, e) {
  const n = Na(e, this.size, 4);
  v.uniformMatrix2fv(this.addr, false, n);
}
function gw(v, e) {
  const n = Na(e, this.size, 9);
  v.uniformMatrix3fv(this.addr, false, n);
}
function vw(v, e) {
  const n = Na(e, this.size, 16);
  v.uniformMatrix4fv(this.addr, false, n);
}
function bw(v, e) {
  v.uniform1iv(this.addr, e);
}
function ww(v, e) {
  v.uniform2iv(this.addr, e);
}
function Sw(v, e) {
  v.uniform3iv(this.addr, e);
}
function _w(v, e) {
  v.uniform4iv(this.addr, e);
}
function Ew(v, e) {
  v.uniform1uiv(this.addr, e);
}
function Aw(v, e) {
  v.uniform2uiv(this.addr, e);
}
function xw(v, e) {
  v.uniform3uiv(this.addr, e);
}
function Tw(v, e) {
  v.uniform4uiv(this.addr, e);
}
function kw(v, e, n) {
  const i = e.length, u = xc(n, i);
  v.uniform1iv(this.addr, u);
  for (let y = 0; y !== i; ++y) n.setTexture2D(e[y] || Om, u[y]);
}
function Ow(v, e, n) {
  const i = e.length, u = xc(n, i);
  v.uniform1iv(this.addr, u);
  for (let y = 0; y !== i; ++y) n.setTexture3D(e[y] || Cm, u[y]);
}
function Pw(v, e, n) {
  const i = e.length, u = xc(n, i);
  v.uniform1iv(this.addr, u);
  for (let y = 0; y !== i; ++y) n.setTextureCube(e[y] || Rm, u[y]);
}
function Cw(v, e, n) {
  const i = e.length, u = xc(n, i);
  v.uniform1iv(this.addr, u);
  for (let y = 0; y !== i; ++y) n.setTexture2DArray(e[y] || Pm, u[y]);
}
function Rw(v) {
  switch (v) {
    case 5126:
      return pw;
    case 35664:
      return hw;
    case 35665:
      return dw;
    case 35666:
      return mw;
    case 35674:
      return yw;
    case 35675:
      return gw;
    case 35676:
      return vw;
    case 5124:
    case 35670:
      return bw;
    case 35667:
    case 35671:
      return ww;
    case 35668:
    case 35672:
      return Sw;
    case 35669:
    case 35673:
      return _w;
    case 5125:
      return Ew;
    case 36294:
      return Aw;
    case 36295:
      return xw;
    case 36296:
      return Tw;
    case 35678:
    case 36198:
    case 36298:
    case 36306:
    case 35682:
      return kw;
    case 35679:
    case 36299:
    case 36307:
      return Ow;
    case 35680:
    case 36300:
    case 36308:
    case 36293:
      return Pw;
    case 36289:
    case 36303:
    case 36311:
    case 36292:
      return Cw;
  }
}
class Mw {
  constructor(e, n, i) {
    this.id = e, this.addr = i, this.cache = [], this.setValue = fw(n.type);
  }
}
class Iw {
  constructor(e, n, i) {
    this.id = e, this.addr = i, this.cache = [], this.size = n.size, this.setValue = Rw(n.type);
  }
}
class Lw {
  constructor(e) {
    this.id = e, this.seq = [], this.map = {};
  }
  setValue(e, n, i) {
    const u = this.seq;
    for (let y = 0, t = u.length; y !== t; ++y) {
      const o = u[y];
      o.setValue(e, n[o.id], i);
    }
  }
}
const Al = /(\w+)(\])?(\[|\.)?/g;
function Kh(v, e) {
  v.seq.push(e), v.map[e.id] = e;
}
function Bw(v, e, n) {
  const i = v.name, u = i.length;
  for (Al.lastIndex = 0; ; ) {
    const y = Al.exec(i), t = Al.lastIndex;
    let o = y[1];
    const s = y[2] === "]", c = y[3];
    if (s && (o = o | 0), c === void 0 || c === "[" && t + 2 === u) {
      Kh(n, c === void 0 ? new Mw(o, v, e) : new Iw(o, v, e));
      break;
    } else {
      let h = n.map[o];
      h === void 0 && (h = new Lw(o), Kh(n, h)), n = h;
    }
  }
}
class lc {
  constructor(e, n) {
    this.seq = [], this.map = {};
    const i = e.getProgramParameter(n, 35718);
    for (let u = 0; u < i; ++u) {
      const y = e.getActiveUniform(n, u), t = e.getUniformLocation(n, y.name);
      Bw(y, t, this);
    }
  }
  setValue(e, n, i, u) {
    const y = this.map[n];
    y !== void 0 && y.setValue(e, i, u);
  }
  setOptional(e, n, i) {
    const u = n[i];
    u !== void 0 && this.setValue(e, i, u);
  }
  static upload(e, n, i, u) {
    for (let y = 0, t = n.length; y !== t; ++y) {
      const o = n[y], s = i[o.id];
      s.needsUpdate !== false && o.setValue(e, s.value, u);
    }
  }
  static seqWithValue(e, n) {
    const i = [];
    for (let u = 0, y = e.length; u !== y; ++u) {
      const t = e[u];
      t.id in n && i.push(t);
    }
    return i;
  }
}
function Xh(v, e, n) {
  const i = v.createShader(e);
  return v.shaderSource(i, n), v.compileShader(i), i;
}
let Nw = 0;
function Dw(v, e) {
  const n = v.split(`
`), i = [], u = Math.max(e - 6, 0), y = Math.min(e + 6, n.length);
  for (let t = u; t < y; t++) {
    const o = t + 1;
    i.push(`${o === e ? ">" : " "} ${o}: ${n[t]}`);
  }
  return i.join(`
`);
}
function Fw(v) {
  switch (v) {
    case 3e3:
      return ["Linear", "( value )"];
    case 3001:
      return ["sRGB", "( value )"];
    default:
      return console.warn("THREE.WebGLProgram: Unsupported encoding:", v), ["Linear", "( value )"];
  }
}
function $h(v, e, n) {
  const i = v.getShaderParameter(e, 35713), u = v.getShaderInfoLog(e).trim();
  if (i && u === "") return "";
  const y = /ERROR: 0:(\d+)/.exec(u);
  if (y) {
    const t = parseInt(y[1]);
    return n.toUpperCase() + `

` + u + `

` + Dw(v.getShaderSource(e), t);
  } else return u;
}
function Uw(v, e) {
  const n = Fw(e);
  return "vec4 " + v + "( vec4 value ) { return LinearTo" + n[0] + n[1] + "; }";
}
function jw(v, e) {
  let n;
  switch (e) {
    case 1:
      n = "Linear";
      break;
    case 2:
      n = "Reinhard";
      break;
    case 3:
      n = "OptimizedCineon";
      break;
    case 4:
      n = "ACESFilmic";
      break;
    case 5:
      n = "Custom";
      break;
    default:
      console.warn("THREE.WebGLProgram: Unsupported toneMapping:", e), n = "Linear";
  }
  return "vec3 " + v + "( vec3 color ) { return " + n + "ToneMapping( color ); }";
}
function Vw(v) {
  return [v.extensionDerivatives || v.envMapCubeUVHeight || v.bumpMap || v.tangentSpaceNormalMap || v.clearcoatNormalMap || v.flatShading || v.shaderID === "physical" ? "#extension GL_OES_standard_derivatives : enable" : "", (v.extensionFragDepth || v.logarithmicDepthBuffer) && v.rendererExtensionFragDepth ? "#extension GL_EXT_frag_depth : enable" : "", v.extensionDrawBuffers && v.rendererExtensionDrawBuffers ? "#extension GL_EXT_draw_buffers : require" : "", (v.extensionShaderTextureLOD || v.envMap || v.transmission) && v.rendererExtensionShaderTextureLod ? "#extension GL_EXT_shader_texture_lod : enable" : ""].filter(Ms).join(`
`);
}
function qw(v) {
  const e = [];
  for (const n in v) {
    const i = v[n];
    i !== false && e.push("#define " + n + " " + i);
  }
  return e.join(`
`);
}
function zw(v, e) {
  const n = {}, i = v.getProgramParameter(e, 35721);
  for (let u = 0; u < i; u++) {
    const y = v.getActiveAttrib(e, u), t = y.name;
    let o = 1;
    y.type === 35674 && (o = 2), y.type === 35675 && (o = 3), y.type === 35676 && (o = 4), n[t] = { type: y.type, location: v.getAttribLocation(e, t), locationSize: o };
  }
  return n;
}
function Ms(v) {
  return v !== "";
}
function Yh(v, e) {
  return v.replace(/NUM_DIR_LIGHTS/g, e.numDirLights).replace(/NUM_SPOT_LIGHTS/g, e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, e.numPointLights).replace(/NUM_HEMI_LIGHTS/g, e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g, e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g, e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g, e.numPointLightShadows);
}
function Qh(v, e) {
  return v.replace(/NUM_CLIPPING_PLANES/g, e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, e.numClippingPlanes - e.numClipIntersection);
}
const Hw = /^[ \t]*#include +<([\w\d./]+)>/gm;
function jl(v) {
  return v.replace(Hw, Gw);
}
function Gw(v, e) {
  const n = kn[e];
  if (n === void 0) throw new Error("Can not resolve #include <" + e + ">");
  return jl(n);
}
const Ww = /#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g, Kw = /#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;
function Zh(v) {
  return v.replace(Kw, Mm).replace(Ww, Xw);
}
function Xw(v, e, n, i) {
  return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."), Mm(v, e, n, i);
}
function Mm(v, e, n, i) {
  let u = "";
  for (let y = parseInt(e); y < parseInt(n); y++) u += i.replace(/\[\s*i\s*\]/g, "[ " + y + " ]").replace(/UNROLLED_LOOP_INDEX/g, y);
  return u;
}
function Jh(v) {
  let e = "precision " + v.precision + ` float;
precision ` + v.precision + " int;";
  return v.precision === "highp" ? e += `
#define HIGH_PRECISION` : v.precision === "mediump" ? e += `
#define MEDIUM_PRECISION` : v.precision === "lowp" && (e += `
#define LOW_PRECISION`), e;
}
function $w(v) {
  let e = "SHADOWMAP_TYPE_BASIC";
  return v.shadowMapType === 1 ? e = "SHADOWMAP_TYPE_PCF" : v.shadowMapType === 2 ? e = "SHADOWMAP_TYPE_PCF_SOFT" : v.shadowMapType === 3 && (e = "SHADOWMAP_TYPE_VSM"), e;
}
function Yw(v) {
  let e = "ENVMAP_TYPE_CUBE";
  if (v.envMap) switch (v.envMapMode) {
    case 301:
    case 302:
      e = "ENVMAP_TYPE_CUBE";
      break;
    case 306:
      e = "ENVMAP_TYPE_CUBE_UV";
      break;
  }
  return e;
}
function Qw(v) {
  let e = "ENVMAP_MODE_REFLECTION";
  if (v.envMap) switch (v.envMapMode) {
    case 302:
      e = "ENVMAP_MODE_REFRACTION";
      break;
  }
  return e;
}
function Zw(v) {
  let e = "ENVMAP_BLENDING_NONE";
  if (v.envMap) switch (v.combine) {
    case 0:
      e = "ENVMAP_BLENDING_MULTIPLY";
      break;
    case 1:
      e = "ENVMAP_BLENDING_MIX";
      break;
    case 2:
      e = "ENVMAP_BLENDING_ADD";
      break;
  }
  return e;
}
function Jw(v) {
  const e = v.envMapCubeUVHeight;
  if (e === null) return null;
  const n = Math.log2(e) - 2, i = 1 / e;
  return { texelWidth: 1 / (3 * Math.max(Math.pow(2, n), 7 * 16)), texelHeight: i, maxMip: n };
}
function e1(v, e, n, i) {
  const u = v.getContext(), y = n.defines;
  let t = n.vertexShader, o = n.fragmentShader;
  const s = $w(n), c = Yw(n), h = Qw(n), f = Zw(n), r = Jw(n), m = n.isWebGL2 ? "" : Vw(n), g = qw(y), a = u.createProgram();
  let l, d, b = n.glslVersion ? "#version " + n.glslVersion + `
` : "";
  n.isRawShaderMaterial ? (l = [g].filter(Ms).join(`
`), l.length > 0 && (l += `
`), d = [m, g].filter(Ms).join(`
`), d.length > 0 && (d += `
`)) : (l = [Jh(n), "#define SHADER_NAME " + n.shaderName, g, n.instancing ? "#define USE_INSTANCING" : "", n.instancingColor ? "#define USE_INSTANCING_COLOR" : "", n.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "", n.useFog && n.fog ? "#define USE_FOG" : "", n.useFog && n.fogExp2 ? "#define FOG_EXP2" : "", n.map ? "#define USE_MAP" : "", n.envMap ? "#define USE_ENVMAP" : "", n.envMap ? "#define " + h : "", n.lightMap ? "#define USE_LIGHTMAP" : "", n.aoMap ? "#define USE_AOMAP" : "", n.emissiveMap ? "#define USE_EMISSIVEMAP" : "", n.bumpMap ? "#define USE_BUMPMAP" : "", n.normalMap ? "#define USE_NORMALMAP" : "", n.normalMap && n.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "", n.normalMap && n.tangentSpaceNormalMap ? "#define TANGENTSPACE_NORMALMAP" : "", n.clearcoatMap ? "#define USE_CLEARCOATMAP" : "", n.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "", n.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "", n.iridescenceMap ? "#define USE_IRIDESCENCEMAP" : "", n.iridescenceThicknessMap ? "#define USE_IRIDESCENCE_THICKNESSMAP" : "", n.displacementMap && n.supportsVertexTextures ? "#define USE_DISPLACEMENTMAP" : "", n.specularMap ? "#define USE_SPECULARMAP" : "", n.specularIntensityMap ? "#define USE_SPECULARINTENSITYMAP" : "", n.specularColorMap ? "#define USE_SPECULARCOLORMAP" : "", n.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", n.metalnessMap ? "#define USE_METALNESSMAP" : "", n.alphaMap ? "#define USE_ALPHAMAP" : "", n.transmission ? "#define USE_TRANSMISSION" : "", n.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "", n.thicknessMap ? "#define USE_THICKNESSMAP" : "", n.sheenColorMap ? "#define USE_SHEENCOLORMAP" : "", n.sheenRoughnessMap ? "#define USE_SHEENROUGHNESSMAP" : "", n.vertexTangents ? "#define USE_TANGENT" : "", n.vertexColors ? "#define USE_COLOR" : "", n.vertexAlphas ? "#define USE_COLOR_ALPHA" : "", n.vertexUvs ? "#define USE_UV" : "", n.uvsVertexOnly ? "#define UVS_VERTEX_ONLY" : "", n.flatShading ? "#define FLAT_SHADED" : "", n.skinning ? "#define USE_SKINNING" : "", n.morphTargets ? "#define USE_MORPHTARGETS" : "", n.morphNormals && n.flatShading === false ? "#define USE_MORPHNORMALS" : "", n.morphColors && n.isWebGL2 ? "#define USE_MORPHCOLORS" : "", n.morphTargetsCount > 0 && n.isWebGL2 ? "#define MORPHTARGETS_TEXTURE" : "", n.morphTargetsCount > 0 && n.isWebGL2 ? "#define MORPHTARGETS_TEXTURE_STRIDE " + n.morphTextureStride : "", n.morphTargetsCount > 0 && n.isWebGL2 ? "#define MORPHTARGETS_COUNT " + n.morphTargetsCount : "", n.doubleSided ? "#define DOUBLE_SIDED" : "", n.flipSided ? "#define FLIP_SIDED" : "", n.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", n.shadowMapEnabled ? "#define " + s : "", n.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "", n.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", n.logarithmicDepthBuffer && n.rendererExtensionFragDepth ? "#define USE_LOGDEPTHBUF_EXT" : "", "uniform mat4 modelMatrix;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform mat4 viewMatrix;", "uniform mat3 normalMatrix;", "uniform vec3 cameraPosition;", "uniform bool isOrthographic;", "#ifdef USE_INSTANCING", "	attribute mat4 instanceMatrix;", "#endif", "#ifdef USE_INSTANCING_COLOR", "	attribute vec3 instanceColor;", "#endif", "attribute vec3 position;", "attribute vec3 normal;", "attribute vec2 uv;", "#ifdef USE_TANGENT", "	attribute vec4 tangent;", "#endif", "#if defined( USE_COLOR_ALPHA )", "	attribute vec4 color;", "#elif defined( USE_COLOR )", "	attribute vec3 color;", "#endif", "#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )", "	attribute vec3 morphTarget0;", "	attribute vec3 morphTarget1;", "	attribute vec3 morphTarget2;", "	attribute vec3 morphTarget3;", "	#ifdef USE_MORPHNORMALS", "		attribute vec3 morphNormal0;", "		attribute vec3 morphNormal1;", "		attribute vec3 morphNormal2;", "		attribute vec3 morphNormal3;", "	#else", "		attribute vec3 morphTarget4;", "		attribute vec3 morphTarget5;", "		attribute vec3 morphTarget6;", "		attribute vec3 morphTarget7;", "	#endif", "#endif", "#ifdef USE_SKINNING", "	attribute vec4 skinIndex;", "	attribute vec4 skinWeight;", "#endif", `
`].filter(Ms).join(`
`), d = [m, Jh(n), "#define SHADER_NAME " + n.shaderName, g, n.useFog && n.fog ? "#define USE_FOG" : "", n.useFog && n.fogExp2 ? "#define FOG_EXP2" : "", n.map ? "#define USE_MAP" : "", n.matcap ? "#define USE_MATCAP" : "", n.envMap ? "#define USE_ENVMAP" : "", n.envMap ? "#define " + c : "", n.envMap ? "#define " + h : "", n.envMap ? "#define " + f : "", r ? "#define CUBEUV_TEXEL_WIDTH " + r.texelWidth : "", r ? "#define CUBEUV_TEXEL_HEIGHT " + r.texelHeight : "", r ? "#define CUBEUV_MAX_MIP " + r.maxMip + ".0" : "", n.lightMap ? "#define USE_LIGHTMAP" : "", n.aoMap ? "#define USE_AOMAP" : "", n.emissiveMap ? "#define USE_EMISSIVEMAP" : "", n.bumpMap ? "#define USE_BUMPMAP" : "", n.normalMap ? "#define USE_NORMALMAP" : "", n.normalMap && n.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "", n.normalMap && n.tangentSpaceNormalMap ? "#define TANGENTSPACE_NORMALMAP" : "", n.clearcoat ? "#define USE_CLEARCOAT" : "", n.clearcoatMap ? "#define USE_CLEARCOATMAP" : "", n.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "", n.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "", n.iridescence ? "#define USE_IRIDESCENCE" : "", n.iridescenceMap ? "#define USE_IRIDESCENCEMAP" : "", n.iridescenceThicknessMap ? "#define USE_IRIDESCENCE_THICKNESSMAP" : "", n.specularMap ? "#define USE_SPECULARMAP" : "", n.specularIntensityMap ? "#define USE_SPECULARINTENSITYMAP" : "", n.specularColorMap ? "#define USE_SPECULARCOLORMAP" : "", n.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", n.metalnessMap ? "#define USE_METALNESSMAP" : "", n.alphaMap ? "#define USE_ALPHAMAP" : "", n.alphaTest ? "#define USE_ALPHATEST" : "", n.sheen ? "#define USE_SHEEN" : "", n.sheenColorMap ? "#define USE_SHEENCOLORMAP" : "", n.sheenRoughnessMap ? "#define USE_SHEENROUGHNESSMAP" : "", n.transmission ? "#define USE_TRANSMISSION" : "", n.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "", n.thicknessMap ? "#define USE_THICKNESSMAP" : "", n.decodeVideoTexture ? "#define DECODE_VIDEO_TEXTURE" : "", n.vertexTangents ? "#define USE_TANGENT" : "", n.vertexColors || n.instancingColor ? "#define USE_COLOR" : "", n.vertexAlphas ? "#define USE_COLOR_ALPHA" : "", n.vertexUvs ? "#define USE_UV" : "", n.uvsVertexOnly ? "#define UVS_VERTEX_ONLY" : "", n.gradientMap ? "#define USE_GRADIENTMAP" : "", n.flatShading ? "#define FLAT_SHADED" : "", n.doubleSided ? "#define DOUBLE_SIDED" : "", n.flipSided ? "#define FLIP_SIDED" : "", n.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", n.shadowMapEnabled ? "#define " + s : "", n.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "", n.physicallyCorrectLights ? "#define PHYSICALLY_CORRECT_LIGHTS" : "", n.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", n.logarithmicDepthBuffer && n.rendererExtensionFragDepth ? "#define USE_LOGDEPTHBUF_EXT" : "", "uniform mat4 viewMatrix;", "uniform vec3 cameraPosition;", "uniform bool isOrthographic;", n.toneMapping !== 0 ? "#define TONE_MAPPING" : "", n.toneMapping !== 0 ? kn.tonemapping_pars_fragment : "", n.toneMapping !== 0 ? jw("toneMapping", n.toneMapping) : "", n.dithering ? "#define DITHERING" : "", n.opaque ? "#define OPAQUE" : "", kn.encodings_pars_fragment, Uw("linearToOutputTexel", n.outputEncoding), n.useDepthPacking ? "#define DEPTH_PACKING " + n.depthPacking : "", `
`].filter(Ms).join(`
`)), t = jl(t), t = Yh(t, n), t = Qh(t, n), o = jl(o), o = Yh(o, n), o = Qh(o, n), t = Zh(t), o = Zh(o), n.isWebGL2 && n.isRawShaderMaterial !== true && (b = `#version 300 es
`, l = ["precision mediump sampler2DArray;", "#define attribute in", "#define varying out", "#define texture2D texture"].join(`
`) + `
` + l, d = ["#define varying in", n.glslVersion === _h ? "" : "layout(location = 0) out highp vec4 pc_fragColor;", n.glslVersion === _h ? "" : "#define gl_FragColor pc_fragColor", "#define gl_FragDepthEXT gl_FragDepth", "#define texture2D texture", "#define textureCube texture", "#define texture2DProj textureProj", "#define texture2DLodEXT textureLod", "#define texture2DProjLodEXT textureProjLod", "#define textureCubeLodEXT textureLod", "#define texture2DGradEXT textureGrad", "#define texture2DProjGradEXT textureProjGrad", "#define textureCubeGradEXT textureGrad"].join(`
`) + `
` + d);
  const S = b + l + t, E = b + d + o, R = Xh(u, 35633, S), k = Xh(u, 35632, E);
  if (u.attachShader(a, R), u.attachShader(a, k), n.index0AttributeName !== void 0 ? u.bindAttribLocation(a, 0, n.index0AttributeName) : n.morphTargets === true && u.bindAttribLocation(a, 0, "position"), u.linkProgram(a), v.debug.checkShaderErrors) {
    const I = u.getProgramInfoLog(a).trim(), q = u.getShaderInfoLog(R).trim(), N = u.getShaderInfoLog(k).trim();
    let H = true, _ = true;
    if (u.getProgramParameter(a, 35714) === false) {
      H = false;
      const x = $h(u, R, "vertex"), L = $h(u, k, "fragment");
      console.error("THREE.WebGLProgram: Shader Error " + u.getError() + " - VALIDATE_STATUS " + u.getProgramParameter(a, 35715) + `

Program Info Log: ` + I + `
` + x + `
` + L);
    } else I !== "" ? console.warn("THREE.WebGLProgram: Program Info Log:", I) : (q === "" || N === "") && (_ = false);
    _ && (this.diagnostics = { runnable: H, programLog: I, vertexShader: { log: q, prefix: l }, fragmentShader: { log: N, prefix: d } });
  }
  u.deleteShader(R), u.deleteShader(k);
  let w;
  this.getUniforms = function() {
    return w === void 0 && (w = new lc(u, a)), w;
  };
  let F;
  return this.getAttributes = function() {
    return F === void 0 && (F = zw(u, a)), F;
  }, this.destroy = function() {
    i.releaseStatesOfProgram(this), u.deleteProgram(a), this.program = void 0;
  }, this.name = n.shaderName, this.id = Nw++, this.cacheKey = e, this.usedTimes = 1, this.program = a, this.vertexShader = R, this.fragmentShader = k, this;
}
let t1 = 0;
class r1 {
  constructor() {
    this.shaderCache = /* @__PURE__ */ new Map(), this.materialCache = /* @__PURE__ */ new Map();
  }
  update(e) {
    const n = e.vertexShader, i = e.fragmentShader, u = this._getShaderStage(n), y = this._getShaderStage(i), t = this._getShaderCacheForMaterial(e);
    return t.has(u) === false && (t.add(u), u.usedTimes++), t.has(y) === false && (t.add(y), y.usedTimes++), this;
  }
  remove(e) {
    const n = this.materialCache.get(e);
    for (const i of n) i.usedTimes--, i.usedTimes === 0 && this.shaderCache.delete(i.code);
    return this.materialCache.delete(e), this;
  }
  getVertexShaderID(e) {
    return this._getShaderStage(e.vertexShader).id;
  }
  getFragmentShaderID(e) {
    return this._getShaderStage(e.fragmentShader).id;
  }
  dispose() {
    this.shaderCache.clear(), this.materialCache.clear();
  }
  _getShaderCacheForMaterial(e) {
    const n = this.materialCache;
    return n.has(e) === false && n.set(e, /* @__PURE__ */ new Set()), n.get(e);
  }
  _getShaderStage(e) {
    const n = this.shaderCache;
    if (n.has(e) === false) {
      const i = new n1(e);
      n.set(e, i);
    }
    return n.get(e);
  }
}
class n1 {
  constructor(e) {
    this.id = t1++, this.code = e, this.usedTimes = 0;
  }
}
function i1(v, e, n, i, u, y, t) {
  const o = new Sm(), s = new r1(), c = [], h = u.isWebGL2, f = u.logarithmicDepthBuffer, r = u.vertexTextures;
  let m = u.precision;
  const g = { MeshDepthMaterial: "depth", MeshDistanceMaterial: "distanceRGBA", MeshNormalMaterial: "normal", MeshBasicMaterial: "basic", MeshLambertMaterial: "lambert", MeshPhongMaterial: "phong", MeshToonMaterial: "toon", MeshStandardMaterial: "physical", MeshPhysicalMaterial: "physical", MeshMatcapMaterial: "matcap", LineBasicMaterial: "basic", LineDashedMaterial: "dashed", PointsMaterial: "points", ShadowMaterial: "shadow", SpriteMaterial: "sprite" };
  function a(F, I, q, N, H) {
    const _ = N.fog, x = H.geometry, L = F.isMeshStandardMaterial ? N.environment : null, j = (F.isMeshStandardMaterial ? n : e).get(F.envMap || L), z = j && j.mapping === 306 ? j.image.height : null, Z = g[F.type];
    F.precision !== null && (m = u.getMaxPrecision(F.precision), m !== F.precision && console.warn("THREE.WebGLProgram.getParameters:", F.precision, "not supported, using", m, "instead."));
    const ue = x.morphAttributes.position || x.morphAttributes.normal || x.morphAttributes.color, $ = ue !== void 0 ? ue.length : 0;
    let X = 0;
    x.morphAttributes.position !== void 0 && (X = 1), x.morphAttributes.normal !== void 0 && (X = 2), x.morphAttributes.color !== void 0 && (X = 3);
    let J, B, Q, ne;
    if (Z) {
      const oe = ro[Z];
      J = oe.vertexShader, B = oe.fragmentShader;
    } else J = F.vertexShader, B = F.fragmentShader, s.update(F), Q = s.getVertexShaderID(F), ne = s.getFragmentShaderID(F);
    const K = v.getRenderTarget(), ie = F.alphaTest > 0, ce = F.clearcoat > 0, ye = F.iridescence > 0;
    return { isWebGL2: h, shaderID: Z, shaderName: F.type, vertexShader: J, fragmentShader: B, defines: F.defines, customVertexShaderID: Q, customFragmentShaderID: ne, isRawShaderMaterial: F.isRawShaderMaterial === true, glslVersion: F.glslVersion, precision: m, instancing: H.isInstancedMesh === true, instancingColor: H.isInstancedMesh === true && H.instanceColor !== null, supportsVertexTextures: r, outputEncoding: K === null ? v.outputEncoding : K.isXRRenderTarget === true ? K.texture.encoding : 3e3, map: !!F.map, matcap: !!F.matcap, envMap: !!j, envMapMode: j && j.mapping, envMapCubeUVHeight: z, lightMap: !!F.lightMap, aoMap: !!F.aoMap, emissiveMap: !!F.emissiveMap, bumpMap: !!F.bumpMap, normalMap: !!F.normalMap, objectSpaceNormalMap: F.normalMapType === 1, tangentSpaceNormalMap: F.normalMapType === 0, decodeVideoTexture: !!F.map && F.map.isVideoTexture === true && F.map.encoding === 3001, clearcoat: ce, clearcoatMap: ce && !!F.clearcoatMap, clearcoatRoughnessMap: ce && !!F.clearcoatRoughnessMap, clearcoatNormalMap: ce && !!F.clearcoatNormalMap, iridescence: ye, iridescenceMap: ye && !!F.iridescenceMap, iridescenceThicknessMap: ye && !!F.iridescenceThicknessMap, displacementMap: !!F.displacementMap, roughnessMap: !!F.roughnessMap, metalnessMap: !!F.metalnessMap, specularMap: !!F.specularMap, specularIntensityMap: !!F.specularIntensityMap, specularColorMap: !!F.specularColorMap, opaque: F.transparent === false && F.blending === 1, alphaMap: !!F.alphaMap, alphaTest: ie, gradientMap: !!F.gradientMap, sheen: F.sheen > 0, sheenColorMap: !!F.sheenColorMap, sheenRoughnessMap: !!F.sheenRoughnessMap, transmission: F.transmission > 0, transmissionMap: !!F.transmissionMap, thicknessMap: !!F.thicknessMap, combine: F.combine, vertexTangents: !!F.normalMap && !!x.attributes.tangent, vertexColors: F.vertexColors, vertexAlphas: F.vertexColors === true && !!x.attributes.color && x.attributes.color.itemSize === 4, vertexUvs: !!F.map || !!F.bumpMap || !!F.normalMap || !!F.specularMap || !!F.alphaMap || !!F.emissiveMap || !!F.roughnessMap || !!F.metalnessMap || !!F.clearcoatMap || !!F.clearcoatRoughnessMap || !!F.clearcoatNormalMap || !!F.iridescenceMap || !!F.iridescenceThicknessMap || !!F.displacementMap || !!F.transmissionMap || !!F.thicknessMap || !!F.specularIntensityMap || !!F.specularColorMap || !!F.sheenColorMap || !!F.sheenRoughnessMap, uvsVertexOnly: !(F.map || F.bumpMap || F.normalMap || F.specularMap || F.alphaMap || F.emissiveMap || F.roughnessMap || F.metalnessMap || F.clearcoatNormalMap || F.iridescenceMap || F.iridescenceThicknessMap || F.transmission > 0 || F.transmissionMap || F.thicknessMap || F.specularIntensityMap || F.specularColorMap || F.sheen > 0 || F.sheenColorMap || F.sheenRoughnessMap) && !!F.displacementMap, fog: !!_, useFog: F.fog === true, fogExp2: _ && _.isFogExp2, flatShading: !!F.flatShading, sizeAttenuation: F.sizeAttenuation, logarithmicDepthBuffer: f, skinning: H.isSkinnedMesh === true, morphTargets: x.morphAttributes.position !== void 0, morphNormals: x.morphAttributes.normal !== void 0, morphColors: x.morphAttributes.color !== void 0, morphTargetsCount: $, morphTextureStride: X, numDirLights: I.directional.length, numPointLights: I.point.length, numSpotLights: I.spot.length, numRectAreaLights: I.rectArea.length, numHemiLights: I.hemi.length, numDirLightShadows: I.directionalShadowMap.length, numPointLightShadows: I.pointShadowMap.length, numSpotLightShadows: I.spotShadowMap.length, numClippingPlanes: t.numPlanes, numClipIntersection: t.numIntersection, dithering: F.dithering, shadowMapEnabled: v.shadowMap.enabled && q.length > 0, shadowMapType: v.shadowMap.type, toneMapping: F.toneMapped ? v.toneMapping : 0, physicallyCorrectLights: v.physicallyCorrectLights, premultipliedAlpha: F.premultipliedAlpha, doubleSided: F.side === 2, flipSided: F.side === 1, useDepthPacking: !!F.depthPacking, depthPacking: F.depthPacking || 0, index0AttributeName: F.index0AttributeName, extensionDerivatives: F.extensions && F.extensions.derivatives, extensionFragDepth: F.extensions && F.extensions.fragDepth, extensionDrawBuffers: F.extensions && F.extensions.drawBuffers, extensionShaderTextureLOD: F.extensions && F.extensions.shaderTextureLOD, rendererExtensionFragDepth: h || i.has("EXT_frag_depth"), rendererExtensionDrawBuffers: h || i.has("WEBGL_draw_buffers"), rendererExtensionShaderTextureLod: h || i.has("EXT_shader_texture_lod"), customProgramCacheKey: F.customProgramCacheKey() };
  }
  function l(F) {
    const I = [];
    if (F.shaderID ? I.push(F.shaderID) : (I.push(F.customVertexShaderID), I.push(F.customFragmentShaderID)), F.defines !== void 0) for (const q in F.defines) I.push(q), I.push(F.defines[q]);
    return F.isRawShaderMaterial === false && (d(I, F), b(I, F), I.push(v.outputEncoding)), I.push(F.customProgramCacheKey), I.join();
  }
  function d(F, I) {
    F.push(I.precision), F.push(I.outputEncoding), F.push(I.envMapMode), F.push(I.envMapCubeUVHeight), F.push(I.combine), F.push(I.vertexUvs), F.push(I.fogExp2), F.push(I.sizeAttenuation), F.push(I.morphTargetsCount), F.push(I.morphAttributeCount), F.push(I.numDirLights), F.push(I.numPointLights), F.push(I.numSpotLights), F.push(I.numHemiLights), F.push(I.numRectAreaLights), F.push(I.numDirLightShadows), F.push(I.numPointLightShadows), F.push(I.numSpotLightShadows), F.push(I.shadowMapType), F.push(I.toneMapping), F.push(I.numClippingPlanes), F.push(I.numClipIntersection), F.push(I.depthPacking);
  }
  function b(F, I) {
    o.disableAll(), I.isWebGL2 && o.enable(0), I.supportsVertexTextures && o.enable(1), I.instancing && o.enable(2), I.instancingColor && o.enable(3), I.map && o.enable(4), I.matcap && o.enable(5), I.envMap && o.enable(6), I.lightMap && o.enable(7), I.aoMap && o.enable(8), I.emissiveMap && o.enable(9), I.bumpMap && o.enable(10), I.normalMap && o.enable(11), I.objectSpaceNormalMap && o.enable(12), I.tangentSpaceNormalMap && o.enable(13), I.clearcoat && o.enable(14), I.clearcoatMap && o.enable(15), I.clearcoatRoughnessMap && o.enable(16), I.clearcoatNormalMap && o.enable(17), I.iridescence && o.enable(18), I.iridescenceMap && o.enable(19), I.iridescenceThicknessMap && o.enable(20), I.displacementMap && o.enable(21), I.specularMap && o.enable(22), I.roughnessMap && o.enable(23), I.metalnessMap && o.enable(24), I.gradientMap && o.enable(25), I.alphaMap && o.enable(26), I.alphaTest && o.enable(27), I.vertexColors && o.enable(28), I.vertexAlphas && o.enable(29), I.vertexUvs && o.enable(30), I.vertexTangents && o.enable(31), I.uvsVertexOnly && o.enable(32), I.fog && o.enable(33), F.push(o.mask), o.disableAll(), I.useFog && o.enable(0), I.flatShading && o.enable(1), I.logarithmicDepthBuffer && o.enable(2), I.skinning && o.enable(3), I.morphTargets && o.enable(4), I.morphNormals && o.enable(5), I.morphColors && o.enable(6), I.premultipliedAlpha && o.enable(7), I.shadowMapEnabled && o.enable(8), I.physicallyCorrectLights && o.enable(9), I.doubleSided && o.enable(10), I.flipSided && o.enable(11), I.useDepthPacking && o.enable(12), I.dithering && o.enable(13), I.specularIntensityMap && o.enable(14), I.specularColorMap && o.enable(15), I.transmission && o.enable(16), I.transmissionMap && o.enable(17), I.thicknessMap && o.enable(18), I.sheen && o.enable(19), I.sheenColorMap && o.enable(20), I.sheenRoughnessMap && o.enable(21), I.decodeVideoTexture && o.enable(22), I.opaque && o.enable(23), F.push(o.mask);
  }
  function S(F) {
    const I = g[F.type];
    let q;
    if (I) {
      const N = ro[I];
      q = Gg.clone(N.uniforms);
    } else q = F.uniforms;
    return q;
  }
  function E(F, I) {
    let q;
    for (let N = 0, H = c.length; N < H; N++) {
      const _ = c[N];
      if (_.cacheKey === I) {
        q = _, ++q.usedTimes;
        break;
      }
    }
    return q === void 0 && (q = new e1(v, I, F, y), c.push(q)), q;
  }
  function R(F) {
    if (--F.usedTimes === 0) {
      const I = c.indexOf(F);
      c[I] = c[c.length - 1], c.pop(), F.destroy();
    }
  }
  function k(F) {
    s.remove(F);
  }
  function w() {
    s.dispose();
  }
  return { getParameters: a, getProgramCacheKey: l, getUniforms: S, acquireProgram: E, releaseProgram: R, releaseShaderCache: k, programs: c, dispose: w };
}
function o1() {
  let v = /* @__PURE__ */ new WeakMap();
  function e(y) {
    let t = v.get(y);
    return t === void 0 && (t = {}, v.set(y, t)), t;
  }
  function n(y) {
    v.delete(y);
  }
  function i(y, t, o) {
    v.get(y)[t] = o;
  }
  function u() {
    v = /* @__PURE__ */ new WeakMap();
  }
  return { get: e, remove: n, update: i, dispose: u };
}
function a1(v, e) {
  return v.groupOrder !== e.groupOrder ? v.groupOrder - e.groupOrder : v.renderOrder !== e.renderOrder ? v.renderOrder - e.renderOrder : v.material.id !== e.material.id ? v.material.id - e.material.id : v.z !== e.z ? v.z - e.z : v.id - e.id;
}
function ed(v, e) {
  return v.groupOrder !== e.groupOrder ? v.groupOrder - e.groupOrder : v.renderOrder !== e.renderOrder ? v.renderOrder - e.renderOrder : v.z !== e.z ? e.z - v.z : v.id - e.id;
}
function td() {
  const v = [];
  let e = 0;
  const n = [], i = [], u = [];
  function y() {
    e = 0, n.length = 0, i.length = 0, u.length = 0;
  }
  function t(f, r, m, g, a, l) {
    let d = v[e];
    return d === void 0 ? (d = { id: f.id, object: f, geometry: r, material: m, groupOrder: g, renderOrder: f.renderOrder, z: a, group: l }, v[e] = d) : (d.id = f.id, d.object = f, d.geometry = r, d.material = m, d.groupOrder = g, d.renderOrder = f.renderOrder, d.z = a, d.group = l), e++, d;
  }
  function o(f, r, m, g, a, l) {
    const d = t(f, r, m, g, a, l);
    m.transmission > 0 ? i.push(d) : m.transparent === true ? u.push(d) : n.push(d);
  }
  function s(f, r, m, g, a, l) {
    const d = t(f, r, m, g, a, l);
    m.transmission > 0 ? i.unshift(d) : m.transparent === true ? u.unshift(d) : n.unshift(d);
  }
  function c(f, r) {
    n.length > 1 && n.sort(f || a1), i.length > 1 && i.sort(r || ed), u.length > 1 && u.sort(r || ed);
  }
  function h() {
    for (let f = e, r = v.length; f < r; f++) {
      const m = v[f];
      if (m.id === null) break;
      m.id = null, m.object = null, m.geometry = null, m.material = null, m.group = null;
    }
  }
  return { opaque: n, transmissive: i, transparent: u, init: y, push: o, unshift: s, finish: h, sort: c };
}
function s1() {
  let v = /* @__PURE__ */ new WeakMap();
  function e(i, u) {
    let y;
    return v.has(i) === false ? (y = new td(), v.set(i, [y])) : u >= v.get(i).length ? (y = new td(), v.get(i).push(y)) : y = v.get(i)[u], y;
  }
  function n() {
    v = /* @__PURE__ */ new WeakMap();
  }
  return { get: e, dispose: n };
}
function u1() {
  const v = {};
  return { get: function(e) {
    if (v[e.id] !== void 0) return v[e.id];
    let n;
    switch (e.type) {
      case "DirectionalLight":
        n = { direction: new _r(), color: new Mn() };
        break;
      case "SpotLight":
        n = { position: new _r(), direction: new _r(), color: new Mn(), distance: 0, coneCos: 0, penumbraCos: 0, decay: 0 };
        break;
      case "PointLight":
        n = { position: new _r(), color: new Mn(), distance: 0, decay: 0 };
        break;
      case "HemisphereLight":
        n = { direction: new _r(), skyColor: new Mn(), groundColor: new Mn() };
        break;
      case "RectAreaLight":
        n = { color: new Mn(), position: new _r(), halfWidth: new _r(), halfHeight: new _r() };
        break;
    }
    return v[e.id] = n, n;
  } };
}
function c1() {
  const v = {};
  return { get: function(e) {
    if (v[e.id] !== void 0) return v[e.id];
    let n;
    switch (e.type) {
      case "DirectionalLight":
        n = { shadowBias: 0, shadowNormalBias: 0, shadowRadius: 1, shadowMapSize: new In() };
        break;
      case "SpotLight":
        n = { shadowBias: 0, shadowNormalBias: 0, shadowRadius: 1, shadowMapSize: new In() };
        break;
      case "PointLight":
        n = { shadowBias: 0, shadowNormalBias: 0, shadowRadius: 1, shadowMapSize: new In(), shadowCameraNear: 1, shadowCameraFar: 1e3 };
        break;
    }
    return v[e.id] = n, n;
  } };
}
let l1 = 0;
function f1(v, e) {
  return (e.castShadow ? 1 : 0) - (v.castShadow ? 1 : 0);
}
function p1(v, e) {
  const n = new u1(), i = c1(), u = { version: 0, hash: { directionalLength: -1, pointLength: -1, spotLength: -1, rectAreaLength: -1, hemiLength: -1, numDirectionalShadows: -1, numPointShadows: -1, numSpotShadows: -1 }, ambient: [0, 0, 0], probe: [], directional: [], directionalShadow: [], directionalShadowMap: [], directionalShadowMatrix: [], spot: [], spotShadow: [], spotShadowMap: [], spotShadowMatrix: [], rectArea: [], rectAreaLTC1: null, rectAreaLTC2: null, point: [], pointShadow: [], pointShadowMap: [], pointShadowMatrix: [], hemi: [] };
  for (let h = 0; h < 9; h++) u.probe.push(new _r());
  const y = new _r(), t = new li(), o = new li();
  function s(h, f) {
    let r = 0, m = 0, g = 0;
    for (let I = 0; I < 9; I++) u.probe[I].set(0, 0, 0);
    let a = 0, l = 0, d = 0, b = 0, S = 0, E = 0, R = 0, k = 0;
    h.sort(f1);
    const w = f !== true ? Math.PI : 1;
    for (let I = 0, q = h.length; I < q; I++) {
      const N = h[I], H = N.color, _ = N.intensity, x = N.distance, L = N.shadow && N.shadow.map ? N.shadow.map.texture : null;
      if (N.isAmbientLight) r += H.r * _ * w, m += H.g * _ * w, g += H.b * _ * w;
      else if (N.isLightProbe) for (let j = 0; j < 9; j++) u.probe[j].addScaledVector(N.sh.coefficients[j], _);
      else if (N.isDirectionalLight) {
        const j = n.get(N);
        if (j.color.copy(N.color).multiplyScalar(N.intensity * w), N.castShadow) {
          const z = N.shadow, Z = i.get(N);
          Z.shadowBias = z.bias, Z.shadowNormalBias = z.normalBias, Z.shadowRadius = z.radius, Z.shadowMapSize = z.mapSize, u.directionalShadow[a] = Z, u.directionalShadowMap[a] = L, u.directionalShadowMatrix[a] = N.shadow.matrix, E++;
        }
        u.directional[a] = j, a++;
      } else if (N.isSpotLight) {
        const j = n.get(N);
        if (j.position.setFromMatrixPosition(N.matrixWorld), j.color.copy(H).multiplyScalar(_ * w), j.distance = x, j.coneCos = Math.cos(N.angle), j.penumbraCos = Math.cos(N.angle * (1 - N.penumbra)), j.decay = N.decay, N.castShadow) {
          const z = N.shadow, Z = i.get(N);
          Z.shadowBias = z.bias, Z.shadowNormalBias = z.normalBias, Z.shadowRadius = z.radius, Z.shadowMapSize = z.mapSize, u.spotShadow[d] = Z, u.spotShadowMap[d] = L, u.spotShadowMatrix[d] = N.shadow.matrix, k++;
        }
        u.spot[d] = j, d++;
      } else if (N.isRectAreaLight) {
        const j = n.get(N);
        j.color.copy(H).multiplyScalar(_), j.halfWidth.set(N.width * 0.5, 0, 0), j.halfHeight.set(0, N.height * 0.5, 0), u.rectArea[b] = j, b++;
      } else if (N.isPointLight) {
        const j = n.get(N);
        if (j.color.copy(N.color).multiplyScalar(N.intensity * w), j.distance = N.distance, j.decay = N.decay, N.castShadow) {
          const z = N.shadow, Z = i.get(N);
          Z.shadowBias = z.bias, Z.shadowNormalBias = z.normalBias, Z.shadowRadius = z.radius, Z.shadowMapSize = z.mapSize, Z.shadowCameraNear = z.camera.near, Z.shadowCameraFar = z.camera.far, u.pointShadow[l] = Z, u.pointShadowMap[l] = L, u.pointShadowMatrix[l] = N.shadow.matrix, R++;
        }
        u.point[l] = j, l++;
      } else if (N.isHemisphereLight) {
        const j = n.get(N);
        j.skyColor.copy(N.color).multiplyScalar(_ * w), j.groundColor.copy(N.groundColor).multiplyScalar(_ * w), u.hemi[S] = j, S++;
      }
    }
    b > 0 && (e.isWebGL2 || v.has("OES_texture_float_linear") === true ? (u.rectAreaLTC1 = an.LTC_FLOAT_1, u.rectAreaLTC2 = an.LTC_FLOAT_2) : v.has("OES_texture_half_float_linear") === true ? (u.rectAreaLTC1 = an.LTC_HALF_1, u.rectAreaLTC2 = an.LTC_HALF_2) : console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")), u.ambient[0] = r, u.ambient[1] = m, u.ambient[2] = g;
    const F = u.hash;
    (F.directionalLength !== a || F.pointLength !== l || F.spotLength !== d || F.rectAreaLength !== b || F.hemiLength !== S || F.numDirectionalShadows !== E || F.numPointShadows !== R || F.numSpotShadows !== k) && (u.directional.length = a, u.spot.length = d, u.rectArea.length = b, u.point.length = l, u.hemi.length = S, u.directionalShadow.length = E, u.directionalShadowMap.length = E, u.pointShadow.length = R, u.pointShadowMap.length = R, u.spotShadow.length = k, u.spotShadowMap.length = k, u.directionalShadowMatrix.length = E, u.pointShadowMatrix.length = R, u.spotShadowMatrix.length = k, F.directionalLength = a, F.pointLength = l, F.spotLength = d, F.rectAreaLength = b, F.hemiLength = S, F.numDirectionalShadows = E, F.numPointShadows = R, F.numSpotShadows = k, u.version = l1++);
  }
  function c(h, f) {
    let r = 0, m = 0, g = 0, a = 0, l = 0;
    const d = f.matrixWorldInverse;
    for (let b = 0, S = h.length; b < S; b++) {
      const E = h[b];
      if (E.isDirectionalLight) {
        const R = u.directional[r];
        R.direction.setFromMatrixPosition(E.matrixWorld), y.setFromMatrixPosition(E.target.matrixWorld), R.direction.sub(y), R.direction.transformDirection(d), r++;
      } else if (E.isSpotLight) {
        const R = u.spot[g];
        R.position.setFromMatrixPosition(E.matrixWorld), R.position.applyMatrix4(d), R.direction.setFromMatrixPosition(E.matrixWorld), y.setFromMatrixPosition(E.target.matrixWorld), R.direction.sub(y), R.direction.transformDirection(d), g++;
      } else if (E.isRectAreaLight) {
        const R = u.rectArea[a];
        R.position.setFromMatrixPosition(E.matrixWorld), R.position.applyMatrix4(d), o.identity(), t.copy(E.matrixWorld), t.premultiply(d), o.extractRotation(t), R.halfWidth.set(E.width * 0.5, 0, 0), R.halfHeight.set(0, E.height * 0.5, 0), R.halfWidth.applyMatrix4(o), R.halfHeight.applyMatrix4(o), a++;
      } else if (E.isPointLight) {
        const R = u.point[m];
        R.position.setFromMatrixPosition(E.matrixWorld), R.position.applyMatrix4(d), m++;
      } else if (E.isHemisphereLight) {
        const R = u.hemi[l];
        R.direction.setFromMatrixPosition(E.matrixWorld), R.direction.transformDirection(d), l++;
      }
    }
  }
  return { setup: s, setupView: c, state: u };
}
function rd(v, e) {
  const n = new p1(v, e), i = [], u = [];
  function y() {
    i.length = 0, u.length = 0;
  }
  function t(h) {
    i.push(h);
  }
  function o(h) {
    u.push(h);
  }
  function s(h) {
    n.setup(i, h);
  }
  function c(h) {
    n.setupView(i, h);
  }
  return { init: y, state: { lightsArray: i, shadowsArray: u, lights: n }, setupLights: s, setupLightsView: c, pushLight: t, pushShadow: o };
}
function h1(v, e) {
  let n = /* @__PURE__ */ new WeakMap();
  function i(y, t = 0) {
    let o;
    return n.has(y) === false ? (o = new rd(v, e), n.set(y, [o])) : t >= n.get(y).length ? (o = new rd(v, e), n.get(y).push(o)) : o = n.get(y)[t], o;
  }
  function u() {
    n = /* @__PURE__ */ new WeakMap();
  }
  return { get: i, dispose: u };
}
class d1 extends ua {
  constructor(e) {
    super(), this.isMeshDepthMaterial = true, this.type = "MeshDepthMaterial", this.depthPacking = 3200, this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.wireframe = false, this.wireframeLinewidth = 1, this.setValues(e);
  }
  copy(e) {
    return super.copy(e), this.depthPacking = e.depthPacking, this.map = e.map, this.alphaMap = e.alphaMap, this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this;
  }
}
class m1 extends ua {
  constructor(e) {
    super(), this.isMeshDistanceMaterial = true, this.type = "MeshDistanceMaterial", this.referencePosition = new _r(), this.nearDistance = 1, this.farDistance = 1e3, this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.setValues(e);
  }
  copy(e) {
    return super.copy(e), this.referencePosition.copy(e.referencePosition), this.nearDistance = e.nearDistance, this.farDistance = e.farDistance, this.map = e.map, this.alphaMap = e.alphaMap, this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this;
  }
}
const y1 = `void main() {
	gl_Position = vec4( position, 1.0 );
}`, g1 = `uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;
function v1(v, e, n) {
  let i = new sf();
  const u = new In(), y = new In(), t = new ci(), o = new d1({ depthPacking: 3201 }), s = new m1(), c = {}, h = n.maxTextureSize, f = { 0: 1, 1: 0, 2: 2 }, r = new oa({ defines: { VSM_SAMPLES: 8 }, uniforms: { shadow_pass: { value: null }, resolution: { value: new In() }, radius: { value: 4 } }, vertexShader: y1, fragmentShader: g1 }), m = r.clone();
  m.defines.HORIZONTAL_PASS = 1;
  const g = new oo();
  g.setAttribute("position", new io(new Float32Array([-1, -1, 0.5, 3, -1, 0.5, -1, 3, 0.5]), 3));
  const a = new no(g, r), l = this;
  this.enabled = false, this.autoUpdate = true, this.needsUpdate = false, this.type = 1, this.render = function(E, R, k) {
    if (l.enabled === false || l.autoUpdate === false && l.needsUpdate === false || E.length === 0) return;
    const w = v.getRenderTarget(), F = v.getActiveCubeFace(), I = v.getActiveMipmapLevel(), q = v.state;
    q.setBlending(0), q.buffers.color.setClear(1, 1, 1, 1), q.buffers.depth.setTest(true), q.setScissorTest(false);
    for (let N = 0, H = E.length; N < H; N++) {
      const _ = E[N], x = _.shadow;
      if (x === void 0) {
        console.warn("THREE.WebGLShadowMap:", _, "has no shadow.");
        continue;
      }
      if (x.autoUpdate === false && x.needsUpdate === false) continue;
      u.copy(x.mapSize);
      const L = x.getFrameExtents();
      if (u.multiply(L), y.copy(x.mapSize), (u.x > h || u.y > h) && (u.x > h && (y.x = Math.floor(h / L.x), u.x = y.x * L.x, x.mapSize.x = y.x), u.y > h && (y.y = Math.floor(h / L.y), u.y = y.y * L.y, x.mapSize.y = y.y)), x.map === null) {
        const z = this.type !== 3 ? { minFilter: 1003, magFilter: 1003 } : {};
        x.map = new ia(u.x, u.y, z), x.map.texture.name = _.name + ".shadowMap", x.camera.updateProjectionMatrix();
      }
      v.setRenderTarget(x.map), v.clear();
      const j = x.getViewportCount();
      for (let z = 0; z < j; z++) {
        const Z = x.getViewport(z);
        t.set(y.x * Z.x, y.y * Z.y, y.x * Z.z, y.y * Z.w), q.viewport(t), x.updateMatrices(_, z), i = x.getFrustum(), S(R, k, x.camera, _, this.type);
      }
      x.isPointLightShadow !== true && this.type === 3 && d(x, k), x.needsUpdate = false;
    }
    l.needsUpdate = false, v.setRenderTarget(w, F, I);
  };
  function d(E, R) {
    const k = e.update(a);
    r.defines.VSM_SAMPLES !== E.blurSamples && (r.defines.VSM_SAMPLES = E.blurSamples, m.defines.VSM_SAMPLES = E.blurSamples, r.needsUpdate = true, m.needsUpdate = true), E.mapPass === null && (E.mapPass = new ia(u.x, u.y)), r.uniforms.shadow_pass.value = E.map.texture, r.uniforms.resolution.value = E.mapSize, r.uniforms.radius.value = E.radius, v.setRenderTarget(E.mapPass), v.clear(), v.renderBufferDirect(R, null, k, r, a, null), m.uniforms.shadow_pass.value = E.mapPass.texture, m.uniforms.resolution.value = E.mapSize, m.uniforms.radius.value = E.radius, v.setRenderTarget(E.map), v.clear(), v.renderBufferDirect(R, null, k, m, a, null);
  }
  function b(E, R, k, w, F, I) {
    let q = null;
    const N = k.isPointLight === true ? E.customDistanceMaterial : E.customDepthMaterial;
    if (N !== void 0 ? q = N : q = k.isPointLight === true ? s : o, v.localClippingEnabled && R.clipShadows === true && Array.isArray(R.clippingPlanes) && R.clippingPlanes.length !== 0 || R.displacementMap && R.displacementScale !== 0 || R.alphaMap && R.alphaTest > 0) {
      const H = q.uuid, _ = R.uuid;
      let x = c[H];
      x === void 0 && (x = {}, c[H] = x);
      let L = x[_];
      L === void 0 && (L = q.clone(), x[_] = L), q = L;
    }
    return q.visible = R.visible, q.wireframe = R.wireframe, I === 3 ? q.side = R.shadowSide !== null ? R.shadowSide : R.side : q.side = R.shadowSide !== null ? R.shadowSide : f[R.side], q.alphaMap = R.alphaMap, q.alphaTest = R.alphaTest, q.clipShadows = R.clipShadows, q.clippingPlanes = R.clippingPlanes, q.clipIntersection = R.clipIntersection, q.displacementMap = R.displacementMap, q.displacementScale = R.displacementScale, q.displacementBias = R.displacementBias, q.wireframeLinewidth = R.wireframeLinewidth, q.linewidth = R.linewidth, k.isPointLight === true && q.isMeshDistanceMaterial === true && (q.referencePosition.setFromMatrixPosition(k.matrixWorld), q.nearDistance = w, q.farDistance = F), q;
  }
  function S(E, R, k, w, F) {
    if (E.visible === false) return;
    if (E.layers.test(R.layers) && (E.isMesh || E.isLine || E.isPoints) && (E.castShadow || E.receiveShadow && F === 3) && (!E.frustumCulled || i.intersectsObject(E))) {
      E.modelViewMatrix.multiplyMatrices(k.matrixWorldInverse, E.matrixWorld);
      const q = e.update(E), N = E.material;
      if (Array.isArray(N)) {
        const H = q.groups;
        for (let _ = 0, x = H.length; _ < x; _++) {
          const L = H[_], j = N[L.materialIndex];
          if (j && j.visible) {
            const z = b(E, j, w, k.near, k.far, F);
            v.renderBufferDirect(k, null, q, z, E, L);
          }
        }
      } else if (N.visible) {
        const H = b(E, N, w, k.near, k.far, F);
        v.renderBufferDirect(k, null, q, H, E, null);
      }
    }
    const I = E.children;
    for (let q = 0, N = I.length; q < N; q++) S(I[q], R, k, w, F);
  }
}
function b1(v, e, n) {
  const i = n.isWebGL2;
  function u() {
    let Ne = false;
    const ut = new ci();
    let Ze = null;
    const Et = new ci(0, 0, 0, 0);
    return { setMask: function(rr) {
      Ze !== rr && !Ne && (v.colorMask(rr, rr, rr, rr), Ze = rr);
    }, setLocked: function(rr) {
      Ne = rr;
    }, setClear: function(rr, je, Ge, at, Ae) {
      Ae === true && (rr *= at, je *= at, Ge *= at), ut.set(rr, je, Ge, at), Et.equals(ut) === false && (v.clearColor(rr, je, Ge, at), Et.copy(ut));
    }, reset: function() {
      Ne = false, Ze = null, Et.set(-1, 0, 0, 0);
    } };
  }
  function y() {
    let Ne = false, ut = null, Ze = null, Et = null;
    return { setTest: function(rr) {
      rr ? ie(2929) : ce(2929);
    }, setMask: function(rr) {
      ut !== rr && !Ne && (v.depthMask(rr), ut = rr);
    }, setFunc: function(rr) {
      if (Ze !== rr) {
        if (rr) switch (rr) {
          case 0:
            v.depthFunc(512);
            break;
          case 1:
            v.depthFunc(519);
            break;
          case 2:
            v.depthFunc(513);
            break;
          case 3:
            v.depthFunc(515);
            break;
          case 4:
            v.depthFunc(514);
            break;
          case 5:
            v.depthFunc(518);
            break;
          case 6:
            v.depthFunc(516);
            break;
          case 7:
            v.depthFunc(517);
            break;
          default:
            v.depthFunc(515);
        }
        else v.depthFunc(515);
        Ze = rr;
      }
    }, setLocked: function(rr) {
      Ne = rr;
    }, setClear: function(rr) {
      Et !== rr && (v.clearDepth(rr), Et = rr);
    }, reset: function() {
      Ne = false, ut = null, Ze = null, Et = null;
    } };
  }
  function t() {
    let Ne = false, ut = null, Ze = null, Et = null, rr = null, je = null, Ge = null, at = null, Ae = null;
    return { setTest: function(qe) {
      Ne || (qe ? ie(2960) : ce(2960));
    }, setMask: function(qe) {
      ut !== qe && !Ne && (v.stencilMask(qe), ut = qe);
    }, setFunc: function(qe, Ft, Dt) {
      (Ze !== qe || Et !== Ft || rr !== Dt) && (v.stencilFunc(qe, Ft, Dt), Ze = qe, Et = Ft, rr = Dt);
    }, setOp: function(qe, Ft, Dt) {
      (je !== qe || Ge !== Ft || at !== Dt) && (v.stencilOp(qe, Ft, Dt), je = qe, Ge = Ft, at = Dt);
    }, setLocked: function(qe) {
      Ne = qe;
    }, setClear: function(qe) {
      Ae !== qe && (v.clearStencil(qe), Ae = qe);
    }, reset: function() {
      Ne = false, ut = null, Ze = null, Et = null, rr = null, je = null, Ge = null, at = null, Ae = null;
    } };
  }
  const o = new u(), s = new y(), c = new t(), h = /* @__PURE__ */ new WeakMap(), f = /* @__PURE__ */ new WeakMap();
  let r = {}, m = {}, g = /* @__PURE__ */ new WeakMap(), a = [], l = null, d = false, b = null, S = null, E = null, R = null, k = null, w = null, F = null, I = false, q = null, N = null, H = null, _ = null, x = null;
  const L = v.getParameter(35661);
  let j = false, z = 0;
  const Z = v.getParameter(7938);
  Z.indexOf("WebGL") !== -1 ? (z = parseFloat(/^WebGL (\d)/.exec(Z)[1]), j = z >= 1) : Z.indexOf("OpenGL ES") !== -1 && (z = parseFloat(/^OpenGL ES (\d)/.exec(Z)[1]), j = z >= 2);
  let ue = null, $ = {};
  const X = v.getParameter(3088), J = v.getParameter(2978), B = new ci().fromArray(X), Q = new ci().fromArray(J);
  function ne(Ne, ut, Ze) {
    const Et = new Uint8Array(4), rr = v.createTexture();
    v.bindTexture(Ne, rr), v.texParameteri(Ne, 10241, 9728), v.texParameteri(Ne, 10240, 9728);
    for (let je = 0; je < Ze; je++) v.texImage2D(ut + je, 0, 6408, 1, 1, 0, 6408, 5121, Et);
    return rr;
  }
  const K = {};
  K[3553] = ne(3553, 3553, 1), K[34067] = ne(34067, 34069, 6), o.setClear(0, 0, 0, 1), s.setClear(1), c.setClear(0), ie(2929), s.setFunc(3), Oe(false), xe(1), ie(2884), Te(0);
  function ie(Ne) {
    r[Ne] !== true && (v.enable(Ne), r[Ne] = true);
  }
  function ce(Ne) {
    r[Ne] !== false && (v.disable(Ne), r[Ne] = false);
  }
  function ye(Ne, ut) {
    return m[Ne] !== ut ? (v.bindFramebuffer(Ne, ut), m[Ne] = ut, i && (Ne === 36009 && (m[36160] = ut), Ne === 36160 && (m[36009] = ut)), true) : false;
  }
  function oe(Ne, ut) {
    let Ze = a, Et = false;
    if (Ne) if (Ze = g.get(ut), Ze === void 0 && (Ze = [], g.set(ut, Ze)), Ne.isWebGLMultipleRenderTargets) {
      const rr = Ne.texture;
      if (Ze.length !== rr.length || Ze[0] !== 36064) {
        for (let je = 0, Ge = rr.length; je < Ge; je++) Ze[je] = 36064 + je;
        Ze.length = rr.length, Et = true;
      }
    } else Ze[0] !== 36064 && (Ze[0] = 36064, Et = true);
    else Ze[0] !== 1029 && (Ze[0] = 1029, Et = true);
    Et && (n.isWebGL2 ? v.drawBuffers(Ze) : e.get("WEBGL_draw_buffers").drawBuffersWEBGL(Ze));
  }
  function se(Ne) {
    return l !== Ne ? (v.useProgram(Ne), l = Ne, true) : false;
  }
  const re = { 100: 32774, 101: 32778, 102: 32779 };
  if (i) re[103] = 32775, re[104] = 32776;
  else {
    const Ne = e.get("EXT_blend_minmax");
    Ne !== null && (re[103] = Ne.MIN_EXT, re[104] = Ne.MAX_EXT);
  }
  const ge = { 200: 0, 201: 1, 202: 768, 204: 770, 210: 776, 208: 774, 206: 772, 203: 769, 205: 771, 209: 775, 207: 773 };
  function Te(Ne, ut, Ze, Et, rr, je, Ge, at) {
    if (Ne === 0) {
      d === true && (ce(3042), d = false);
      return;
    }
    if (d === false && (ie(3042), d = true), Ne !== 5) {
      if (Ne !== b || at !== I) {
        if ((S !== 100 || k !== 100) && (v.blendEquation(32774), S = 100, k = 100), at) switch (Ne) {
          case 1:
            v.blendFuncSeparate(1, 771, 1, 771);
            break;
          case 2:
            v.blendFunc(1, 1);
            break;
          case 3:
            v.blendFuncSeparate(0, 769, 0, 1);
            break;
          case 4:
            v.blendFuncSeparate(0, 768, 0, 770);
            break;
          default:
            console.error("THREE.WebGLState: Invalid blending: ", Ne);
            break;
        }
        else switch (Ne) {
          case 1:
            v.blendFuncSeparate(770, 771, 1, 771);
            break;
          case 2:
            v.blendFunc(770, 1);
            break;
          case 3:
            v.blendFuncSeparate(0, 769, 0, 1);
            break;
          case 4:
            v.blendFunc(0, 768);
            break;
          default:
            console.error("THREE.WebGLState: Invalid blending: ", Ne);
            break;
        }
        E = null, R = null, w = null, F = null, b = Ne, I = at;
      }
      return;
    }
    rr = rr || ut, je = je || Ze, Ge = Ge || Et, (ut !== S || rr !== k) && (v.blendEquationSeparate(re[ut], re[rr]), S = ut, k = rr), (Ze !== E || Et !== R || je !== w || Ge !== F) && (v.blendFuncSeparate(ge[Ze], ge[Et], ge[je], ge[Ge]), E = Ze, R = Et, w = je, F = Ge), b = Ne, I = null;
  }
  function pe(Ne, ut) {
    Ne.side === 2 ? ce(2884) : ie(2884);
    let Ze = Ne.side === 1;
    ut && (Ze = !Ze), Oe(Ze), Ne.blending === 1 && Ne.transparent === false ? Te(0) : Te(Ne.blending, Ne.blendEquation, Ne.blendSrc, Ne.blendDst, Ne.blendEquationAlpha, Ne.blendSrcAlpha, Ne.blendDstAlpha, Ne.premultipliedAlpha), s.setFunc(Ne.depthFunc), s.setTest(Ne.depthTest), s.setMask(Ne.depthWrite), o.setMask(Ne.colorWrite);
    const Et = Ne.stencilWrite;
    c.setTest(Et), Et && (c.setMask(Ne.stencilWriteMask), c.setFunc(Ne.stencilFunc, Ne.stencilRef, Ne.stencilFuncMask), c.setOp(Ne.stencilFail, Ne.stencilZFail, Ne.stencilZPass)), _e(Ne.polygonOffset, Ne.polygonOffsetFactor, Ne.polygonOffsetUnits), Ne.alphaToCoverage === true ? ie(32926) : ce(32926);
  }
  function Oe(Ne) {
    q !== Ne && (Ne ? v.frontFace(2304) : v.frontFace(2305), q = Ne);
  }
  function xe(Ne) {
    Ne !== 0 ? (ie(2884), Ne !== N && (Ne === 1 ? v.cullFace(1029) : Ne === 2 ? v.cullFace(1028) : v.cullFace(1032))) : ce(2884), N = Ne;
  }
  function Ve(Ne) {
    Ne !== H && (j && v.lineWidth(Ne), H = Ne);
  }
  function _e(Ne, ut, Ze) {
    Ne ? (ie(32823), (_ !== ut || x !== Ze) && (v.polygonOffset(ut, Ze), _ = ut, x = Ze)) : ce(32823);
  }
  function Be(Ne) {
    Ne ? ie(3089) : ce(3089);
  }
  function Qe(Ne) {
    Ne === void 0 && (Ne = 33984 + L - 1), ue !== Ne && (v.activeTexture(Ne), ue = Ne);
  }
  function ee(Ne, ut) {
    ue === null && Qe();
    let Ze = $[ue];
    Ze === void 0 && (Ze = { type: void 0, texture: void 0 }, $[ue] = Ze), (Ze.type !== Ne || Ze.texture !== ut) && (v.bindTexture(Ne, ut || K[Ne]), Ze.type = Ne, Ze.texture = ut);
  }
  function P() {
    const Ne = $[ue];
    Ne !== void 0 && Ne.type !== void 0 && (v.bindTexture(Ne.type, null), Ne.type = void 0, Ne.texture = void 0);
  }
  function T() {
    try {
      v.compressedTexImage2D.apply(v, arguments);
    } catch (Ne) {
      console.error("THREE.WebGLState:", Ne);
    }
  }
  function O() {
    try {
      v.texSubImage2D.apply(v, arguments);
    } catch (Ne) {
      console.error("THREE.WebGLState:", Ne);
    }
  }
  function V() {
    try {
      v.texSubImage3D.apply(v, arguments);
    } catch (Ne) {
      console.error("THREE.WebGLState:", Ne);
    }
  }
  function D() {
    try {
      v.compressedTexSubImage2D.apply(v, arguments);
    } catch (Ne) {
      console.error("THREE.WebGLState:", Ne);
    }
  }
  function C() {
    try {
      v.texStorage2D.apply(v, arguments);
    } catch (Ne) {
      console.error("THREE.WebGLState:", Ne);
    }
  }
  function p() {
    try {
      v.texStorage3D.apply(v, arguments);
    } catch (Ne) {
      console.error("THREE.WebGLState:", Ne);
    }
  }
  function A() {
    try {
      v.texImage2D.apply(v, arguments);
    } catch (Ne) {
      console.error("THREE.WebGLState:", Ne);
    }
  }
  function U() {
    try {
      v.texImage3D.apply(v, arguments);
    } catch (Ne) {
      console.error("THREE.WebGLState:", Ne);
    }
  }
  function Y(Ne) {
    B.equals(Ne) === false && (v.scissor(Ne.x, Ne.y, Ne.z, Ne.w), B.copy(Ne));
  }
  function ae(Ne) {
    Q.equals(Ne) === false && (v.viewport(Ne.x, Ne.y, Ne.z, Ne.w), Q.copy(Ne));
  }
  function W(Ne, ut) {
    let Ze = f.get(ut);
    Ze === void 0 && (Ze = /* @__PURE__ */ new WeakMap(), f.set(ut, Ze));
    let Et = Ze.get(Ne);
    Et === void 0 && (Et = v.getUniformBlockIndex(ut, Ne.name), Ze.set(Ne, Et));
  }
  function de(Ne, ut) {
    const Ze = f.get(ut).get(Ne);
    h.get(Ne) !== Ze && (v.uniformBlockBinding(ut, Ze, Ne.__bindingPointIndex), h.set(Ne, Ze));
  }
  function tt() {
    v.disable(3042), v.disable(2884), v.disable(2929), v.disable(32823), v.disable(3089), v.disable(2960), v.disable(32926), v.blendEquation(32774), v.blendFunc(1, 0), v.blendFuncSeparate(1, 0, 1, 0), v.colorMask(true, true, true, true), v.clearColor(0, 0, 0, 0), v.depthMask(true), v.depthFunc(513), v.clearDepth(1), v.stencilMask(4294967295), v.stencilFunc(519, 0, 4294967295), v.stencilOp(7680, 7680, 7680), v.clearStencil(0), v.cullFace(1029), v.frontFace(2305), v.polygonOffset(0, 0), v.activeTexture(33984), v.bindFramebuffer(36160, null), i === true && (v.bindFramebuffer(36009, null), v.bindFramebuffer(36008, null)), v.useProgram(null), v.lineWidth(1), v.scissor(0, 0, v.canvas.width, v.canvas.height), v.viewport(0, 0, v.canvas.width, v.canvas.height), r = {}, ue = null, $ = {}, m = {}, g = /* @__PURE__ */ new WeakMap(), a = [], l = null, d = false, b = null, S = null, E = null, R = null, k = null, w = null, F = null, I = false, q = null, N = null, H = null, _ = null, x = null, B.set(0, 0, v.canvas.width, v.canvas.height), Q.set(0, 0, v.canvas.width, v.canvas.height), o.reset(), s.reset(), c.reset();
  }
  return { buffers: { color: o, depth: s, stencil: c }, enable: ie, disable: ce, bindFramebuffer: ye, drawBuffers: oe, useProgram: se, setBlending: Te, setMaterial: pe, setFlipSided: Oe, setCullFace: xe, setLineWidth: Ve, setPolygonOffset: _e, setScissorTest: Be, activeTexture: Qe, bindTexture: ee, unbindTexture: P, compressedTexImage2D: T, texImage2D: A, texImage3D: U, updateUBOMapping: W, uniformBlockBinding: de, texStorage2D: C, texStorage3D: p, texSubImage2D: O, texSubImage3D: V, compressedTexSubImage2D: D, scissor: Y, viewport: ae, reset: tt };
}
function w1(v, e, n, i, u, y, t) {
  const o = u.isWebGL2, s = u.maxTextures, c = u.maxCubemapSize, h = u.maxTextureSize, f = u.maxSamples, r = e.has("WEBGL_multisampled_render_to_texture") ? e.get("WEBGL_multisampled_render_to_texture") : null, m = /OculusBrowser/g.test(navigator.userAgent), g = /* @__PURE__ */ new WeakMap();
  let a;
  const l = /* @__PURE__ */ new WeakMap();
  let d = false;
  try {
    d = typeof OffscreenCanvas < "u" && new OffscreenCanvas(1, 1).getContext("2d") !== null;
  } catch {
  }
  function b(ee, P) {
    return d ? new OffscreenCanvas(ee, P) : bc("canvas");
  }
  function S(ee, P, T, O) {
    let V = 1;
    if ((ee.width > O || ee.height > O) && (V = O / Math.max(ee.width, ee.height)), V < 1 || P === true) if (typeof HTMLImageElement < "u" && ee instanceof HTMLImageElement || typeof HTMLCanvasElement < "u" && ee instanceof HTMLCanvasElement || typeof ImageBitmap < "u" && ee instanceof ImageBitmap) {
      const D = P ? Ul : Math.floor, C = D(V * ee.width), p = D(V * ee.height);
      a === void 0 && (a = b(C, p));
      const A = T ? b(C, p) : a;
      return A.width = C, A.height = p, A.getContext("2d").drawImage(ee, 0, 0, C, p), console.warn("THREE.WebGLRenderer: Texture has been resized from (" + ee.width + "x" + ee.height + ") to (" + C + "x" + p + ")."), A;
    } else return "data" in ee && console.warn("THREE.WebGLRenderer: Image in DataTexture is too big (" + ee.width + "x" + ee.height + ")."), ee;
    return ee;
  }
  function E(ee) {
    return Eh(ee.width) && Eh(ee.height);
  }
  function R(ee) {
    return o ? false : ee.wrapS !== 1001 || ee.wrapT !== 1001 || ee.minFilter !== 1003 && ee.minFilter !== 1006;
  }
  function k(ee, P) {
    return ee.generateMipmaps && P && ee.minFilter !== 1003 && ee.minFilter !== 1006;
  }
  function w(ee) {
    v.generateMipmap(ee);
  }
  function F(ee, P, T, O, V = false) {
    if (o === false) return P;
    if (ee !== null) {
      if (v[ee] !== void 0) return v[ee];
      console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '" + ee + "'");
    }
    let D = P;
    return P === 6403 && (T === 5126 && (D = 33326), T === 5131 && (D = 33325), T === 5121 && (D = 33321)), P === 33319 && (T === 5126 && (D = 33328), T === 5131 && (D = 33327), T === 5121 && (D = 33323)), P === 6408 && (T === 5126 && (D = 34836), T === 5131 && (D = 34842), T === 5121 && (D = O === 3001 && V === false ? 35907 : 32856), T === 32819 && (D = 32854), T === 32820 && (D = 32855)), (D === 33325 || D === 33326 || D === 33327 || D === 33328 || D === 34842 || D === 34836) && e.get("EXT_color_buffer_float"), D;
  }
  function I(ee, P, T) {
    return k(ee, T) === true || ee.isFramebufferTexture && ee.minFilter !== 1003 && ee.minFilter !== 1006 ? Math.log2(Math.max(P.width, P.height)) + 1 : ee.mipmaps !== void 0 && ee.mipmaps.length > 0 ? ee.mipmaps.length : ee.isCompressedTexture && Array.isArray(ee.image) ? P.mipmaps.length : 1;
  }
  function q(ee) {
    return ee === 1003 || ee === 1004 || ee === 1005 ? 9728 : 9729;
  }
  function N(ee) {
    const P = ee.target;
    P.removeEventListener("dispose", N), _(P), P.isVideoTexture && g.delete(P);
  }
  function H(ee) {
    const P = ee.target;
    P.removeEventListener("dispose", H), L(P);
  }
  function _(ee) {
    const P = i.get(ee);
    if (P.__webglInit === void 0) return;
    const T = ee.source, O = l.get(T);
    if (O) {
      const V = O[P.__cacheKey];
      V.usedTimes--, V.usedTimes === 0 && x(ee), Object.keys(O).length === 0 && l.delete(T);
    }
    i.remove(ee);
  }
  function x(ee) {
    const P = i.get(ee);
    v.deleteTexture(P.__webglTexture);
    const T = ee.source, O = l.get(T);
    delete O[P.__cacheKey], t.memory.textures--;
  }
  function L(ee) {
    const P = ee.texture, T = i.get(ee), O = i.get(P);
    if (O.__webglTexture !== void 0 && (v.deleteTexture(O.__webglTexture), t.memory.textures--), ee.depthTexture && ee.depthTexture.dispose(), ee.isWebGLCubeRenderTarget) for (let V = 0; V < 6; V++) v.deleteFramebuffer(T.__webglFramebuffer[V]), T.__webglDepthbuffer && v.deleteRenderbuffer(T.__webglDepthbuffer[V]);
    else {
      if (v.deleteFramebuffer(T.__webglFramebuffer), T.__webglDepthbuffer && v.deleteRenderbuffer(T.__webglDepthbuffer), T.__webglMultisampledFramebuffer && v.deleteFramebuffer(T.__webglMultisampledFramebuffer), T.__webglColorRenderbuffer) for (let V = 0; V < T.__webglColorRenderbuffer.length; V++) T.__webglColorRenderbuffer[V] && v.deleteRenderbuffer(T.__webglColorRenderbuffer[V]);
      T.__webglDepthRenderbuffer && v.deleteRenderbuffer(T.__webglDepthRenderbuffer);
    }
    if (ee.isWebGLMultipleRenderTargets) for (let V = 0, D = P.length; V < D; V++) {
      const C = i.get(P[V]);
      C.__webglTexture && (v.deleteTexture(C.__webglTexture), t.memory.textures--), i.remove(P[V]);
    }
    i.remove(P), i.remove(ee);
  }
  let j = 0;
  function z() {
    j = 0;
  }
  function Z() {
    const ee = j;
    return ee >= s && console.warn("THREE.WebGLTextures: Trying to use " + ee + " texture units while this GPU supports only " + s), j += 1, ee;
  }
  function ue(ee) {
    const P = [];
    return P.push(ee.wrapS), P.push(ee.wrapT), P.push(ee.magFilter), P.push(ee.minFilter), P.push(ee.anisotropy), P.push(ee.internalFormat), P.push(ee.format), P.push(ee.type), P.push(ee.generateMipmaps), P.push(ee.premultiplyAlpha), P.push(ee.flipY), P.push(ee.unpackAlignment), P.push(ee.encoding), P.join();
  }
  function $(ee, P) {
    const T = i.get(ee);
    if (ee.isVideoTexture && Be(ee), ee.isRenderTargetTexture === false && ee.version > 0 && T.__version !== ee.version) {
      const O = ee.image;
      if (O === null) console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");
      else if (O.complete === false) console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");
      else {
        ce(T, ee, P);
        return;
      }
    }
    n.activeTexture(33984 + P), n.bindTexture(3553, T.__webglTexture);
  }
  function X(ee, P) {
    const T = i.get(ee);
    if (ee.version > 0 && T.__version !== ee.version) {
      ce(T, ee, P);
      return;
    }
    n.activeTexture(33984 + P), n.bindTexture(35866, T.__webglTexture);
  }
  function J(ee, P) {
    const T = i.get(ee);
    if (ee.version > 0 && T.__version !== ee.version) {
      ce(T, ee, P);
      return;
    }
    n.activeTexture(33984 + P), n.bindTexture(32879, T.__webglTexture);
  }
  function B(ee, P) {
    const T = i.get(ee);
    if (ee.version > 0 && T.__version !== ee.version) {
      ye(T, ee, P);
      return;
    }
    n.activeTexture(33984 + P), n.bindTexture(34067, T.__webglTexture);
  }
  const Q = { 1e3: 10497, 1001: 33071, 1002: 33648 }, ne = { 1003: 9728, 1004: 9984, 1005: 9986, 1006: 9729, 1007: 9985, 1008: 9987 };
  function K(ee, P, T) {
    if (T ? (v.texParameteri(ee, 10242, Q[P.wrapS]), v.texParameteri(ee, 10243, Q[P.wrapT]), (ee === 32879 || ee === 35866) && v.texParameteri(ee, 32882, Q[P.wrapR]), v.texParameteri(ee, 10240, ne[P.magFilter]), v.texParameteri(ee, 10241, ne[P.minFilter])) : (v.texParameteri(ee, 10242, 33071), v.texParameteri(ee, 10243, 33071), (ee === 32879 || ee === 35866) && v.texParameteri(ee, 32882, 33071), (P.wrapS !== 1001 || P.wrapT !== 1001) && console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."), v.texParameteri(ee, 10240, q(P.magFilter)), v.texParameteri(ee, 10241, q(P.minFilter)), P.minFilter !== 1003 && P.minFilter !== 1006 && console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")), e.has("EXT_texture_filter_anisotropic") === true) {
      const O = e.get("EXT_texture_filter_anisotropic");
      if (P.type === 1015 && e.has("OES_texture_float_linear") === false || o === false && P.type === 1016 && e.has("OES_texture_half_float_linear") === false) return;
      (P.anisotropy > 1 || i.get(P).__currentAnisotropy) && (v.texParameterf(ee, O.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(P.anisotropy, u.getMaxAnisotropy())), i.get(P).__currentAnisotropy = P.anisotropy);
    }
  }
  function ie(ee, P) {
    let T = false;
    ee.__webglInit === void 0 && (ee.__webglInit = true, P.addEventListener("dispose", N));
    const O = P.source;
    let V = l.get(O);
    V === void 0 && (V = {}, l.set(O, V));
    const D = ue(P);
    if (D !== ee.__cacheKey) {
      V[D] === void 0 && (V[D] = { texture: v.createTexture(), usedTimes: 0 }, t.memory.textures++, T = true), V[D].usedTimes++;
      const C = V[ee.__cacheKey];
      C !== void 0 && (V[ee.__cacheKey].usedTimes--, C.usedTimes === 0 && x(P)), ee.__cacheKey = D, ee.__webglTexture = V[D].texture;
    }
    return T;
  }
  function ce(ee, P, T) {
    let O = 3553;
    P.isDataArrayTexture && (O = 35866), P.isData3DTexture && (O = 32879);
    const V = ie(ee, P), D = P.source;
    if (n.activeTexture(33984 + T), n.bindTexture(O, ee.__webglTexture), D.version !== D.__currentVersion || V === true) {
      v.pixelStorei(37440, P.flipY), v.pixelStorei(37441, P.premultiplyAlpha), v.pixelStorei(3317, P.unpackAlignment), v.pixelStorei(37443, 0);
      const C = R(P) && E(P.image) === false;
      let p = S(P.image, C, false, h);
      p = Qe(P, p);
      const A = E(p) || o, U = y.convert(P.format, P.encoding);
      let Y = y.convert(P.type), ae = F(P.internalFormat, U, Y, P.encoding, P.isVideoTexture);
      K(O, P, A);
      let W;
      const de = P.mipmaps, tt = o && P.isVideoTexture !== true, Ne = D.__currentVersion === void 0 || V === true, ut = I(P, p, A);
      if (P.isDepthTexture) ae = 6402, o ? P.type === 1015 ? ae = 36012 : P.type === 1014 ? ae = 33190 : P.type === 1020 ? ae = 35056 : ae = 33189 : P.type === 1015 && console.error("WebGLRenderer: Floating point depth texture requires WebGL2."), P.format === 1026 && ae === 6402 && P.type !== 1012 && P.type !== 1014 && (console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."), P.type = 1014, Y = y.convert(P.type)), P.format === 1027 && ae === 6402 && (ae = 34041, P.type !== 1020 && (console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."), P.type = 1020, Y = y.convert(P.type))), Ne && (tt ? n.texStorage2D(3553, 1, ae, p.width, p.height) : n.texImage2D(3553, 0, ae, p.width, p.height, 0, U, Y, null));
      else if (P.isDataTexture) if (de.length > 0 && A) {
        tt && Ne && n.texStorage2D(3553, ut, ae, de[0].width, de[0].height);
        for (let Ze = 0, Et = de.length; Ze < Et; Ze++) W = de[Ze], tt ? n.texSubImage2D(3553, Ze, 0, 0, W.width, W.height, U, Y, W.data) : n.texImage2D(3553, Ze, ae, W.width, W.height, 0, U, Y, W.data);
        P.generateMipmaps = false;
      } else tt ? (Ne && n.texStorage2D(3553, ut, ae, p.width, p.height), n.texSubImage2D(3553, 0, 0, 0, p.width, p.height, U, Y, p.data)) : n.texImage2D(3553, 0, ae, p.width, p.height, 0, U, Y, p.data);
      else if (P.isCompressedTexture) {
        tt && Ne && n.texStorage2D(3553, ut, ae, de[0].width, de[0].height);
        for (let Ze = 0, Et = de.length; Ze < Et; Ze++) W = de[Ze], P.format !== 1023 ? U !== null ? tt ? n.compressedTexSubImage2D(3553, Ze, 0, 0, W.width, W.height, U, W.data) : n.compressedTexImage2D(3553, Ze, ae, W.width, W.height, 0, W.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()") : tt ? n.texSubImage2D(3553, Ze, 0, 0, W.width, W.height, U, Y, W.data) : n.texImage2D(3553, Ze, ae, W.width, W.height, 0, U, Y, W.data);
      } else if (P.isDataArrayTexture) tt ? (Ne && n.texStorage3D(35866, ut, ae, p.width, p.height, p.depth), n.texSubImage3D(35866, 0, 0, 0, 0, p.width, p.height, p.depth, U, Y, p.data)) : n.texImage3D(35866, 0, ae, p.width, p.height, p.depth, 0, U, Y, p.data);
      else if (P.isData3DTexture) tt ? (Ne && n.texStorage3D(32879, ut, ae, p.width, p.height, p.depth), n.texSubImage3D(32879, 0, 0, 0, 0, p.width, p.height, p.depth, U, Y, p.data)) : n.texImage3D(32879, 0, ae, p.width, p.height, p.depth, 0, U, Y, p.data);
      else if (P.isFramebufferTexture) {
        if (Ne) if (tt) n.texStorage2D(3553, ut, ae, p.width, p.height);
        else {
          let Ze = p.width, Et = p.height;
          for (let rr = 0; rr < ut; rr++) n.texImage2D(3553, rr, ae, Ze, Et, 0, U, Y, null), Ze >>= 1, Et >>= 1;
        }
      } else if (de.length > 0 && A) {
        tt && Ne && n.texStorage2D(3553, ut, ae, de[0].width, de[0].height);
        for (let Ze = 0, Et = de.length; Ze < Et; Ze++) W = de[Ze], tt ? n.texSubImage2D(3553, Ze, 0, 0, U, Y, W) : n.texImage2D(3553, Ze, ae, U, Y, W);
        P.generateMipmaps = false;
      } else tt ? (Ne && n.texStorage2D(3553, ut, ae, p.width, p.height), n.texSubImage2D(3553, 0, 0, 0, U, Y, p)) : n.texImage2D(3553, 0, ae, U, Y, p);
      k(P, A) && w(O), D.__currentVersion = D.version, P.onUpdate && P.onUpdate(P);
    }
    ee.__version = P.version;
  }
  function ye(ee, P, T) {
    if (P.image.length !== 6) return;
    const O = ie(ee, P), V = P.source;
    if (n.activeTexture(33984 + T), n.bindTexture(34067, ee.__webglTexture), V.version !== V.__currentVersion || O === true) {
      v.pixelStorei(37440, P.flipY), v.pixelStorei(37441, P.premultiplyAlpha), v.pixelStorei(3317, P.unpackAlignment), v.pixelStorei(37443, 0);
      const D = P.isCompressedTexture || P.image[0].isCompressedTexture, C = P.image[0] && P.image[0].isDataTexture, p = [];
      for (let Ze = 0; Ze < 6; Ze++) !D && !C ? p[Ze] = S(P.image[Ze], false, true, c) : p[Ze] = C ? P.image[Ze].image : P.image[Ze], p[Ze] = Qe(P, p[Ze]);
      const A = p[0], U = E(A) || o, Y = y.convert(P.format, P.encoding), ae = y.convert(P.type), W = F(P.internalFormat, Y, ae, P.encoding), de = o && P.isVideoTexture !== true, tt = V.__currentVersion === void 0 || O === true;
      let Ne = I(P, A, U);
      K(34067, P, U);
      let ut;
      if (D) {
        de && tt && n.texStorage2D(34067, Ne, W, A.width, A.height);
        for (let Ze = 0; Ze < 6; Ze++) {
          ut = p[Ze].mipmaps;
          for (let Et = 0; Et < ut.length; Et++) {
            const rr = ut[Et];
            P.format !== 1023 ? Y !== null ? de ? n.compressedTexSubImage2D(34069 + Ze, Et, 0, 0, rr.width, rr.height, Y, rr.data) : n.compressedTexImage2D(34069 + Ze, Et, W, rr.width, rr.height, 0, rr.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()") : de ? n.texSubImage2D(34069 + Ze, Et, 0, 0, rr.width, rr.height, Y, ae, rr.data) : n.texImage2D(34069 + Ze, Et, W, rr.width, rr.height, 0, Y, ae, rr.data);
          }
        }
      } else {
        ut = P.mipmaps, de && tt && (ut.length > 0 && Ne++, n.texStorage2D(34067, Ne, W, p[0].width, p[0].height));
        for (let Ze = 0; Ze < 6; Ze++) if (C) {
          de ? n.texSubImage2D(34069 + Ze, 0, 0, 0, p[Ze].width, p[Ze].height, Y, ae, p[Ze].data) : n.texImage2D(34069 + Ze, 0, W, p[Ze].width, p[Ze].height, 0, Y, ae, p[Ze].data);
          for (let Et = 0; Et < ut.length; Et++) {
            const rr = ut[Et].image[Ze].image;
            de ? n.texSubImage2D(34069 + Ze, Et + 1, 0, 0, rr.width, rr.height, Y, ae, rr.data) : n.texImage2D(34069 + Ze, Et + 1, W, rr.width, rr.height, 0, Y, ae, rr.data);
          }
        } else {
          de ? n.texSubImage2D(34069 + Ze, 0, 0, 0, Y, ae, p[Ze]) : n.texImage2D(34069 + Ze, 0, W, Y, ae, p[Ze]);
          for (let Et = 0; Et < ut.length; Et++) {
            const rr = ut[Et];
            de ? n.texSubImage2D(34069 + Ze, Et + 1, 0, 0, Y, ae, rr.image[Ze]) : n.texImage2D(34069 + Ze, Et + 1, W, Y, ae, rr.image[Ze]);
          }
        }
      }
      k(P, U) && w(34067), V.__currentVersion = V.version, P.onUpdate && P.onUpdate(P);
    }
    ee.__version = P.version;
  }
  function oe(ee, P, T, O, V) {
    const D = y.convert(T.format, T.encoding), C = y.convert(T.type), p = F(T.internalFormat, D, C, T.encoding);
    i.get(P).__hasExternalTextures || (V === 32879 || V === 35866 ? n.texImage3D(V, 0, p, P.width, P.height, P.depth, 0, D, C, null) : n.texImage2D(V, 0, p, P.width, P.height, 0, D, C, null)), n.bindFramebuffer(36160, ee), _e(P) ? r.framebufferTexture2DMultisampleEXT(36160, O, V, i.get(T).__webglTexture, 0, Ve(P)) : v.framebufferTexture2D(36160, O, V, i.get(T).__webglTexture, 0), n.bindFramebuffer(36160, null);
  }
  function se(ee, P, T) {
    if (v.bindRenderbuffer(36161, ee), P.depthBuffer && !P.stencilBuffer) {
      let O = 33189;
      if (T || _e(P)) {
        const V = P.depthTexture;
        V && V.isDepthTexture && (V.type === 1015 ? O = 36012 : V.type === 1014 && (O = 33190));
        const D = Ve(P);
        _e(P) ? r.renderbufferStorageMultisampleEXT(36161, D, O, P.width, P.height) : v.renderbufferStorageMultisample(36161, D, O, P.width, P.height);
      } else v.renderbufferStorage(36161, O, P.width, P.height);
      v.framebufferRenderbuffer(36160, 36096, 36161, ee);
    } else if (P.depthBuffer && P.stencilBuffer) {
      const O = Ve(P);
      T && _e(P) === false ? v.renderbufferStorageMultisample(36161, O, 35056, P.width, P.height) : _e(P) ? r.renderbufferStorageMultisampleEXT(36161, O, 35056, P.width, P.height) : v.renderbufferStorage(36161, 34041, P.width, P.height), v.framebufferRenderbuffer(36160, 33306, 36161, ee);
    } else {
      const O = P.isWebGLMultipleRenderTargets === true ? P.texture : [P.texture];
      for (let V = 0; V < O.length; V++) {
        const D = O[V], C = y.convert(D.format, D.encoding), p = y.convert(D.type), A = F(D.internalFormat, C, p, D.encoding), U = Ve(P);
        T && _e(P) === false ? v.renderbufferStorageMultisample(36161, U, A, P.width, P.height) : _e(P) ? r.renderbufferStorageMultisampleEXT(36161, U, A, P.width, P.height) : v.renderbufferStorage(36161, A, P.width, P.height);
      }
    }
    v.bindRenderbuffer(36161, null);
  }
  function re(ee, P) {
    if (P && P.isWebGLCubeRenderTarget) throw new Error("Depth Texture with cube render targets is not supported");
    if (n.bindFramebuffer(36160, ee), !(P.depthTexture && P.depthTexture.isDepthTexture)) throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
    (!i.get(P.depthTexture).__webglTexture || P.depthTexture.image.width !== P.width || P.depthTexture.image.height !== P.height) && (P.depthTexture.image.width = P.width, P.depthTexture.image.height = P.height, P.depthTexture.needsUpdate = true), $(P.depthTexture, 0);
    const T = i.get(P.depthTexture).__webglTexture, O = Ve(P);
    if (P.depthTexture.format === 1026) _e(P) ? r.framebufferTexture2DMultisampleEXT(36160, 36096, 3553, T, 0, O) : v.framebufferTexture2D(36160, 36096, 3553, T, 0);
    else if (P.depthTexture.format === 1027) _e(P) ? r.framebufferTexture2DMultisampleEXT(36160, 33306, 3553, T, 0, O) : v.framebufferTexture2D(36160, 33306, 3553, T, 0);
    else throw new Error("Unknown depthTexture format");
  }
  function ge(ee) {
    const P = i.get(ee), T = ee.isWebGLCubeRenderTarget === true;
    if (ee.depthTexture && !P.__autoAllocateDepthBuffer) {
      if (T) throw new Error("target.depthTexture not supported in Cube render targets");
      re(P.__webglFramebuffer, ee);
    } else if (T) {
      P.__webglDepthbuffer = [];
      for (let O = 0; O < 6; O++) n.bindFramebuffer(36160, P.__webglFramebuffer[O]), P.__webglDepthbuffer[O] = v.createRenderbuffer(), se(P.__webglDepthbuffer[O], ee, false);
    } else n.bindFramebuffer(36160, P.__webglFramebuffer), P.__webglDepthbuffer = v.createRenderbuffer(), se(P.__webglDepthbuffer, ee, false);
    n.bindFramebuffer(36160, null);
  }
  function Te(ee, P, T) {
    const O = i.get(ee);
    P !== void 0 && oe(O.__webglFramebuffer, ee, ee.texture, 36064, 3553), T !== void 0 && ge(ee);
  }
  function pe(ee) {
    const P = ee.texture, T = i.get(ee), O = i.get(P);
    ee.addEventListener("dispose", H), ee.isWebGLMultipleRenderTargets !== true && (O.__webglTexture === void 0 && (O.__webglTexture = v.createTexture()), O.__version = P.version, t.memory.textures++);
    const V = ee.isWebGLCubeRenderTarget === true, D = ee.isWebGLMultipleRenderTargets === true, C = E(ee) || o;
    if (V) {
      T.__webglFramebuffer = [];
      for (let p = 0; p < 6; p++) T.__webglFramebuffer[p] = v.createFramebuffer();
    } else {
      if (T.__webglFramebuffer = v.createFramebuffer(), D) if (u.drawBuffers) {
        const p = ee.texture;
        for (let A = 0, U = p.length; A < U; A++) {
          const Y = i.get(p[A]);
          Y.__webglTexture === void 0 && (Y.__webglTexture = v.createTexture(), t.memory.textures++);
        }
      } else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");
      if (o && ee.samples > 0 && _e(ee) === false) {
        const p = D ? P : [P];
        T.__webglMultisampledFramebuffer = v.createFramebuffer(), T.__webglColorRenderbuffer = [], n.bindFramebuffer(36160, T.__webglMultisampledFramebuffer);
        for (let A = 0; A < p.length; A++) {
          const U = p[A];
          T.__webglColorRenderbuffer[A] = v.createRenderbuffer(), v.bindRenderbuffer(36161, T.__webglColorRenderbuffer[A]);
          const Y = y.convert(U.format, U.encoding), ae = y.convert(U.type), W = F(U.internalFormat, Y, ae, U.encoding), de = Ve(ee);
          v.renderbufferStorageMultisample(36161, de, W, ee.width, ee.height), v.framebufferRenderbuffer(36160, 36064 + A, 36161, T.__webglColorRenderbuffer[A]);
        }
        v.bindRenderbuffer(36161, null), ee.depthBuffer && (T.__webglDepthRenderbuffer = v.createRenderbuffer(), se(T.__webglDepthRenderbuffer, ee, true)), n.bindFramebuffer(36160, null);
      }
    }
    if (V) {
      n.bindTexture(34067, O.__webglTexture), K(34067, P, C);
      for (let p = 0; p < 6; p++) oe(T.__webglFramebuffer[p], ee, P, 36064, 34069 + p);
      k(P, C) && w(34067), n.unbindTexture();
    } else if (D) {
      const p = ee.texture;
      for (let A = 0, U = p.length; A < U; A++) {
        const Y = p[A], ae = i.get(Y);
        n.bindTexture(3553, ae.__webglTexture), K(3553, Y, C), oe(T.__webglFramebuffer, ee, Y, 36064 + A, 3553), k(Y, C) && w(3553);
      }
      n.unbindTexture();
    } else {
      let p = 3553;
      (ee.isWebGL3DRenderTarget || ee.isWebGLArrayRenderTarget) && (o ? p = ee.isWebGL3DRenderTarget ? 32879 : 35866 : console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")), n.bindTexture(p, O.__webglTexture), K(p, P, C), oe(T.__webglFramebuffer, ee, P, 36064, p), k(P, C) && w(p), n.unbindTexture();
    }
    ee.depthBuffer && ge(ee);
  }
  function Oe(ee) {
    const P = E(ee) || o, T = ee.isWebGLMultipleRenderTargets === true ? ee.texture : [ee.texture];
    for (let O = 0, V = T.length; O < V; O++) {
      const D = T[O];
      if (k(D, P)) {
        const C = ee.isWebGLCubeRenderTarget ? 34067 : 3553, p = i.get(D).__webglTexture;
        n.bindTexture(C, p), w(C), n.unbindTexture();
      }
    }
  }
  function xe(ee) {
    if (o && ee.samples > 0 && _e(ee) === false) {
      const P = ee.isWebGLMultipleRenderTargets ? ee.texture : [ee.texture], T = ee.width, O = ee.height;
      let V = 16384;
      const D = [], C = ee.stencilBuffer ? 33306 : 36096, p = i.get(ee), A = ee.isWebGLMultipleRenderTargets === true;
      if (A) for (let U = 0; U < P.length; U++) n.bindFramebuffer(36160, p.__webglMultisampledFramebuffer), v.framebufferRenderbuffer(36160, 36064 + U, 36161, null), n.bindFramebuffer(36160, p.__webglFramebuffer), v.framebufferTexture2D(36009, 36064 + U, 3553, null, 0);
      n.bindFramebuffer(36008, p.__webglMultisampledFramebuffer), n.bindFramebuffer(36009, p.__webglFramebuffer);
      for (let U = 0; U < P.length; U++) {
        D.push(36064 + U), ee.depthBuffer && D.push(C);
        const Y = p.__ignoreDepthValues !== void 0 ? p.__ignoreDepthValues : false;
        if (Y === false && (ee.depthBuffer && (V |= 256), ee.stencilBuffer && (V |= 1024)), A && v.framebufferRenderbuffer(36008, 36064, 36161, p.__webglColorRenderbuffer[U]), Y === true && (v.invalidateFramebuffer(36008, [C]), v.invalidateFramebuffer(36009, [C])), A) {
          const ae = i.get(P[U]).__webglTexture;
          v.framebufferTexture2D(36009, 36064, 3553, ae, 0);
        }
        v.blitFramebuffer(0, 0, T, O, 0, 0, T, O, V, 9728), m && v.invalidateFramebuffer(36008, D);
      }
      if (n.bindFramebuffer(36008, null), n.bindFramebuffer(36009, null), A) for (let U = 0; U < P.length; U++) {
        n.bindFramebuffer(36160, p.__webglMultisampledFramebuffer), v.framebufferRenderbuffer(36160, 36064 + U, 36161, p.__webglColorRenderbuffer[U]);
        const Y = i.get(P[U]).__webglTexture;
        n.bindFramebuffer(36160, p.__webglFramebuffer), v.framebufferTexture2D(36009, 36064 + U, 3553, Y, 0);
      }
      n.bindFramebuffer(36009, p.__webglMultisampledFramebuffer);
    }
  }
  function Ve(ee) {
    return Math.min(f, ee.samples);
  }
  function _e(ee) {
    const P = i.get(ee);
    return o && ee.samples > 0 && e.has("WEBGL_multisampled_render_to_texture") === true && P.__useRenderToTexture !== false;
  }
  function Be(ee) {
    const P = t.render.frame;
    g.get(ee) !== P && (g.set(ee, P), ee.update());
  }
  function Qe(ee, P) {
    const T = ee.encoding, O = ee.format, V = ee.type;
    return ee.isCompressedTexture === true || ee.isVideoTexture === true || ee.format === 1035 || T !== 3e3 && (T === 3001 ? o === false ? e.has("EXT_sRGB") === true && O === 1023 ? (ee.format = 1035, ee.minFilter = 1006, ee.generateMipmaps = false) : P = vm.sRGBToLinear(P) : (O !== 1023 || V !== 1009) && console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.") : console.error("THREE.WebGLTextures: Unsupported texture encoding:", T)), P;
  }
  this.allocateTextureUnit = Z, this.resetTextureUnits = z, this.setTexture2D = $, this.setTexture2DArray = X, this.setTexture3D = J, this.setTextureCube = B, this.rebindTextures = Te, this.setupRenderTarget = pe, this.updateRenderTargetMipmap = Oe, this.updateMultisampleRenderTarget = xe, this.setupDepthRenderbuffer = ge, this.setupFrameBufferTexture = oe, this.useMultisampledRTT = _e;
}
function S1(v, e, n) {
  const i = n.isWebGL2;
  function u(y, t = null) {
    let o;
    if (y === 1009) return 5121;
    if (y === 1017) return 32819;
    if (y === 1018) return 32820;
    if (y === 1010) return 5120;
    if (y === 1011) return 5122;
    if (y === 1012) return 5123;
    if (y === 1013) return 5124;
    if (y === 1014) return 5125;
    if (y === 1015) return 5126;
    if (y === 1016) return i ? 5131 : (o = e.get("OES_texture_half_float"), o !== null ? o.HALF_FLOAT_OES : null);
    if (y === 1021) return 6406;
    if (y === 1023) return 6408;
    if (y === 1024) return 6409;
    if (y === 1025) return 6410;
    if (y === 1026) return 6402;
    if (y === 1027) return 34041;
    if (y === 1028) return 6403;
    if (y === 1022) return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"), 6408;
    if (y === 1035) return o = e.get("EXT_sRGB"), o !== null ? o.SRGB_ALPHA_EXT : null;
    if (y === 1029) return 36244;
    if (y === 1030) return 33319;
    if (y === 1031) return 33320;
    if (y === 1033) return 36249;
    if (y === 33776 || y === 33777 || y === 33778 || y === 33779) if (t === 3001) if (o = e.get("WEBGL_compressed_texture_s3tc_srgb"), o !== null) {
      if (y === 33776) return o.COMPRESSED_SRGB_S3TC_DXT1_EXT;
      if (y === 33777) return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;
      if (y === 33778) return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;
      if (y === 33779) return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;
    } else return null;
    else if (o = e.get("WEBGL_compressed_texture_s3tc"), o !== null) {
      if (y === 33776) return o.COMPRESSED_RGB_S3TC_DXT1_EXT;
      if (y === 33777) return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;
      if (y === 33778) return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;
      if (y === 33779) return o.COMPRESSED_RGBA_S3TC_DXT5_EXT;
    } else return null;
    if (y === 35840 || y === 35841 || y === 35842 || y === 35843) if (o = e.get("WEBGL_compressed_texture_pvrtc"), o !== null) {
      if (y === 35840) return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
      if (y === 35841) return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
      if (y === 35842) return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
      if (y === 35843) return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;
    } else return null;
    if (y === 36196) return o = e.get("WEBGL_compressed_texture_etc1"), o !== null ? o.COMPRESSED_RGB_ETC1_WEBGL : null;
    if (y === 37492 || y === 37496) if (o = e.get("WEBGL_compressed_texture_etc"), o !== null) {
      if (y === 37492) return t === 3001 ? o.COMPRESSED_SRGB8_ETC2 : o.COMPRESSED_RGB8_ETC2;
      if (y === 37496) return t === 3001 ? o.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : o.COMPRESSED_RGBA8_ETC2_EAC;
    } else return null;
    if (y === 37808 || y === 37809 || y === 37810 || y === 37811 || y === 37812 || y === 37813 || y === 37814 || y === 37815 || y === 37816 || y === 37817 || y === 37818 || y === 37819 || y === 37820 || y === 37821) if (o = e.get("WEBGL_compressed_texture_astc"), o !== null) {
      if (y === 37808) return t === 3001 ? o.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : o.COMPRESSED_RGBA_ASTC_4x4_KHR;
      if (y === 37809) return t === 3001 ? o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : o.COMPRESSED_RGBA_ASTC_5x4_KHR;
      if (y === 37810) return t === 3001 ? o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : o.COMPRESSED_RGBA_ASTC_5x5_KHR;
      if (y === 37811) return t === 3001 ? o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : o.COMPRESSED_RGBA_ASTC_6x5_KHR;
      if (y === 37812) return t === 3001 ? o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : o.COMPRESSED_RGBA_ASTC_6x6_KHR;
      if (y === 37813) return t === 3001 ? o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : o.COMPRESSED_RGBA_ASTC_8x5_KHR;
      if (y === 37814) return t === 3001 ? o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : o.COMPRESSED_RGBA_ASTC_8x6_KHR;
      if (y === 37815) return t === 3001 ? o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : o.COMPRESSED_RGBA_ASTC_8x8_KHR;
      if (y === 37816) return t === 3001 ? o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : o.COMPRESSED_RGBA_ASTC_10x5_KHR;
      if (y === 37817) return t === 3001 ? o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : o.COMPRESSED_RGBA_ASTC_10x6_KHR;
      if (y === 37818) return t === 3001 ? o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : o.COMPRESSED_RGBA_ASTC_10x8_KHR;
      if (y === 37819) return t === 3001 ? o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : o.COMPRESSED_RGBA_ASTC_10x10_KHR;
      if (y === 37820) return t === 3001 ? o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : o.COMPRESSED_RGBA_ASTC_12x10_KHR;
      if (y === 37821) return t === 3001 ? o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : o.COMPRESSED_RGBA_ASTC_12x12_KHR;
    } else return null;
    if (y === 36492) if (o = e.get("EXT_texture_compression_bptc"), o !== null) {
      if (y === 36492) return t === 3001 ? o.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : o.COMPRESSED_RGBA_BPTC_UNORM_EXT;
    } else return null;
    return y === 1020 ? i ? 34042 : (o = e.get("WEBGL_depth_texture"), o !== null ? o.UNSIGNED_INT_24_8_WEBGL : null) : v[y] !== void 0 ? v[y] : null;
  }
  return { convert: u };
}
class _1 extends Ri {
  constructor(e = []) {
    super(), this.isArrayCamera = true, this.cameras = e;
  }
}
class Wu extends wi {
  constructor() {
    super(), this.isGroup = true, this.type = "Group";
  }
}
const E1 = { type: "move" };
class xl {
  constructor() {
    this._targetRay = null, this._grip = null, this._hand = null;
  }
  getHandSpace() {
    return this._hand === null && (this._hand = new Wu(), this._hand.matrixAutoUpdate = false, this._hand.visible = false, this._hand.joints = {}, this._hand.inputState = { pinching: false }), this._hand;
  }
  getTargetRaySpace() {
    return this._targetRay === null && (this._targetRay = new Wu(), this._targetRay.matrixAutoUpdate = false, this._targetRay.visible = false, this._targetRay.hasLinearVelocity = false, this._targetRay.linearVelocity = new _r(), this._targetRay.hasAngularVelocity = false, this._targetRay.angularVelocity = new _r()), this._targetRay;
  }
  getGripSpace() {
    return this._grip === null && (this._grip = new Wu(), this._grip.matrixAutoUpdate = false, this._grip.visible = false, this._grip.hasLinearVelocity = false, this._grip.linearVelocity = new _r(), this._grip.hasAngularVelocity = false, this._grip.angularVelocity = new _r()), this._grip;
  }
  dispatchEvent(e) {
    return this._targetRay !== null && this._targetRay.dispatchEvent(e), this._grip !== null && this._grip.dispatchEvent(e), this._hand !== null && this._hand.dispatchEvent(e), this;
  }
  disconnect(e) {
    return this.dispatchEvent({ type: "disconnected", data: e }), this._targetRay !== null && (this._targetRay.visible = false), this._grip !== null && (this._grip.visible = false), this._hand !== null && (this._hand.visible = false), this;
  }
  update(e, n, i) {
    let u = null, y = null, t = null;
    const o = this._targetRay, s = this._grip, c = this._hand;
    if (e && n.session.visibilityState !== "visible-blurred") {
      if (c && e.hand) {
        t = true;
        for (const a of e.hand.values()) {
          const l = n.getJointPose(a, i);
          if (c.joints[a.jointName] === void 0) {
            const b = new Wu();
            b.matrixAutoUpdate = false, b.visible = false, c.joints[a.jointName] = b, c.add(b);
          }
          const d = c.joints[a.jointName];
          l !== null && (d.matrix.fromArray(l.transform.matrix), d.matrix.decompose(d.position, d.rotation, d.scale), d.jointRadius = l.radius), d.visible = l !== null;
        }
        const h = c.joints["index-finger-tip"], f = c.joints["thumb-tip"], r = h.position.distanceTo(f.position), m = 0.02, g = 5e-3;
        c.inputState.pinching && r > m + g ? (c.inputState.pinching = false, this.dispatchEvent({ type: "pinchend", handedness: e.handedness, target: this })) : !c.inputState.pinching && r <= m - g && (c.inputState.pinching = true, this.dispatchEvent({ type: "pinchstart", handedness: e.handedness, target: this }));
      } else s !== null && e.gripSpace && (y = n.getPose(e.gripSpace, i), y !== null && (s.matrix.fromArray(y.transform.matrix), s.matrix.decompose(s.position, s.rotation, s.scale), y.linearVelocity ? (s.hasLinearVelocity = true, s.linearVelocity.copy(y.linearVelocity)) : s.hasLinearVelocity = false, y.angularVelocity ? (s.hasAngularVelocity = true, s.angularVelocity.copy(y.angularVelocity)) : s.hasAngularVelocity = false));
      o !== null && (u = n.getPose(e.targetRaySpace, i), u === null && y !== null && (u = y), u !== null && (o.matrix.fromArray(u.transform.matrix), o.matrix.decompose(o.position, o.rotation, o.scale), u.linearVelocity ? (o.hasLinearVelocity = true, o.linearVelocity.copy(u.linearVelocity)) : o.hasLinearVelocity = false, u.angularVelocity ? (o.hasAngularVelocity = true, o.angularVelocity.copy(u.angularVelocity)) : o.hasAngularVelocity = false, this.dispatchEvent(E1)));
    }
    return o !== null && (o.visible = u !== null), s !== null && (s.visible = y !== null), c !== null && (c.visible = t !== null), this;
  }
}
class A1 extends Mi {
  constructor(e, n, i, u, y, t, o, s, c, h) {
    if (h = h !== void 0 ? h : 1026, h !== 1026 && h !== 1027) throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");
    i === void 0 && h === 1026 && (i = 1014), i === void 0 && h === 1027 && (i = 1020), super(null, u, y, t, o, s, h, i, c), this.isDepthTexture = true, this.image = { width: e, height: n }, this.magFilter = o !== void 0 ? o : 1003, this.minFilter = s !== void 0 ? s : 1003, this.flipY = false, this.generateMipmaps = false;
  }
}
class x1 extends Ba {
  constructor(e, n) {
    super();
    const i = this;
    let u = null, y = 1, t = null, o = "local-floor", s = null, c = null, h = null, f = null, r = null, m = null;
    const g = n.getContextAttributes();
    let a = null, l = null;
    const d = [], b = [], S = new Ri();
    S.layers.enable(1), S.viewport = new ci();
    const E = new Ri();
    E.layers.enable(2), E.viewport = new ci();
    const R = [S, E], k = new _1();
    k.layers.enable(1), k.layers.enable(2);
    let w = null, F = null;
    this.cameraAutoUpdate = true, this.enabled = false, this.isPresenting = false, this.getController = function(ue) {
      let $ = d[ue];
      return $ === void 0 && ($ = new xl(), d[ue] = $), $.getTargetRaySpace();
    }, this.getControllerGrip = function(ue) {
      let $ = d[ue];
      return $ === void 0 && ($ = new xl(), d[ue] = $), $.getGripSpace();
    }, this.getHand = function(ue) {
      let $ = d[ue];
      return $ === void 0 && ($ = new xl(), d[ue] = $), $.getHandSpace();
    };
    function I(ue) {
      const $ = b.indexOf(ue.inputSource);
      if ($ === -1) return;
      const X = d[$];
      X !== void 0 && X.dispatchEvent({ type: ue.type, data: ue.inputSource });
    }
    function q() {
      u.removeEventListener("select", I), u.removeEventListener("selectstart", I), u.removeEventListener("selectend", I), u.removeEventListener("squeeze", I), u.removeEventListener("squeezestart", I), u.removeEventListener("squeezeend", I), u.removeEventListener("end", q), u.removeEventListener("inputsourceschange", N);
      for (let ue = 0; ue < d.length; ue++) {
        const $ = b[ue];
        $ !== null && (b[ue] = null, d[ue].disconnect($));
      }
      w = null, F = null, e.setRenderTarget(a), r = null, f = null, h = null, u = null, l = null, Z.stop(), i.isPresenting = false, i.dispatchEvent({ type: "sessionend" });
    }
    this.setFramebufferScaleFactor = function(ue) {
      y = ue, i.isPresenting === true && console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.");
    }, this.setReferenceSpaceType = function(ue) {
      o = ue, i.isPresenting === true && console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.");
    }, this.getReferenceSpace = function() {
      return s || t;
    }, this.setReferenceSpace = function(ue) {
      s = ue;
    }, this.getBaseLayer = function() {
      return f !== null ? f : r;
    }, this.getBinding = function() {
      return h;
    }, this.getFrame = function() {
      return m;
    }, this.getSession = function() {
      return u;
    }, this.setSession = async function(ue) {
      if (u = ue, u !== null) {
        if (a = e.getRenderTarget(), u.addEventListener("select", I), u.addEventListener("selectstart", I), u.addEventListener("selectend", I), u.addEventListener("squeeze", I), u.addEventListener("squeezestart", I), u.addEventListener("squeezeend", I), u.addEventListener("end", q), u.addEventListener("inputsourceschange", N), g.xrCompatible !== true && await n.makeXRCompatible(), u.renderState.layers === void 0 || e.capabilities.isWebGL2 === false) {
          const $ = { antialias: u.renderState.layers === void 0 ? g.antialias : true, alpha: g.alpha, depth: g.depth, stencil: g.stencil, framebufferScaleFactor: y };
          r = new XRWebGLLayer(u, n, $), u.updateRenderState({ baseLayer: r }), l = new ia(r.framebufferWidth, r.framebufferHeight, { format: 1023, type: 1009, encoding: e.outputEncoding });
        } else {
          let $ = null, X = null, J = null;
          g.depth && (J = g.stencil ? 35056 : 33190, $ = g.stencil ? 1027 : 1026, X = g.stencil ? 1020 : 1014);
          const B = { colorFormat: 32856, depthFormat: J, scaleFactor: y };
          h = new XRWebGLBinding(u, n), f = h.createProjectionLayer(B), u.updateRenderState({ layers: [f] }), l = new ia(f.textureWidth, f.textureHeight, { format: 1023, type: 1009, depthTexture: new A1(f.textureWidth, f.textureHeight, X, void 0, void 0, void 0, void 0, void 0, void 0, $), stencilBuffer: g.stencil, encoding: e.outputEncoding, samples: g.antialias ? 4 : 0 });
          const Q = e.properties.get(l);
          Q.__ignoreDepthValues = f.ignoreDepthValues;
        }
        l.isXRRenderTarget = true, this.setFoveation(1), s = null, t = await u.requestReferenceSpace(o), Z.setContext(u), Z.start(), i.isPresenting = true, i.dispatchEvent({ type: "sessionstart" });
      }
    };
    function N(ue) {
      for (let $ = 0; $ < ue.removed.length; $++) {
        const X = ue.removed[$], J = b.indexOf(X);
        J >= 0 && (b[J] = null, d[J].dispatchEvent({ type: "disconnected", data: X }));
      }
      for (let $ = 0; $ < ue.added.length; $++) {
        const X = ue.added[$];
        let J = b.indexOf(X);
        if (J === -1) {
          for (let Q = 0; Q < d.length; Q++) if (Q >= b.length) {
            b.push(X), J = Q;
            break;
          } else if (b[Q] === null) {
            b[Q] = X, J = Q;
            break;
          }
          if (J === -1) break;
        }
        const B = d[J];
        B && B.dispatchEvent({ type: "connected", data: X });
      }
    }
    const H = new _r(), _ = new _r();
    function x(ue, $, X) {
      H.setFromMatrixPosition($.matrixWorld), _.setFromMatrixPosition(X.matrixWorld);
      const J = H.distanceTo(_), B = $.projectionMatrix.elements, Q = X.projectionMatrix.elements, ne = B[14] / (B[10] - 1), K = B[14] / (B[10] + 1), ie = (B[9] + 1) / B[5], ce = (B[9] - 1) / B[5], ye = (B[8] - 1) / B[0], oe = (Q[8] + 1) / Q[0], se = ne * ye, re = ne * oe, ge = J / (-ye + oe), Te = ge * -ye;
      $.matrixWorld.decompose(ue.position, ue.quaternion, ue.scale), ue.translateX(Te), ue.translateZ(ge), ue.matrixWorld.compose(ue.position, ue.quaternion, ue.scale), ue.matrixWorldInverse.copy(ue.matrixWorld).invert();
      const pe = ne + ge, Oe = K + ge, xe = se - Te, Ve = re + (J - Te), _e = ie * K / Oe * pe, Be = ce * K / Oe * pe;
      ue.projectionMatrix.makePerspective(xe, Ve, _e, Be, pe, Oe);
    }
    function L(ue, $) {
      $ === null ? ue.matrixWorld.copy(ue.matrix) : ue.matrixWorld.multiplyMatrices($.matrixWorld, ue.matrix), ue.matrixWorldInverse.copy(ue.matrixWorld).invert();
    }
    this.updateCamera = function(ue) {
      if (u === null) return;
      k.near = E.near = S.near = ue.near, k.far = E.far = S.far = ue.far, (w !== k.near || F !== k.far) && (u.updateRenderState({ depthNear: k.near, depthFar: k.far }), w = k.near, F = k.far);
      const $ = ue.parent, X = k.cameras;
      L(k, $);
      for (let B = 0; B < X.length; B++) L(X[B], $);
      k.matrixWorld.decompose(k.position, k.quaternion, k.scale), ue.position.copy(k.position), ue.quaternion.copy(k.quaternion), ue.scale.copy(k.scale), ue.matrix.copy(k.matrix), ue.matrixWorld.copy(k.matrixWorld);
      const J = ue.children;
      for (let B = 0, Q = J.length; B < Q; B++) J[B].updateMatrixWorld(true);
      X.length === 2 ? x(k, S, E) : k.projectionMatrix.copy(S.projectionMatrix);
    }, this.getCamera = function() {
      return k;
    }, this.getFoveation = function() {
      if (f !== null) return f.fixedFoveation;
      if (r !== null) return r.fixedFoveation;
    }, this.setFoveation = function(ue) {
      f !== null && (f.fixedFoveation = ue), r !== null && r.fixedFoveation !== void 0 && (r.fixedFoveation = ue);
    };
    let j = null;
    function z(ue, $) {
      if (c = $.getViewerPose(s || t), m = $, c !== null) {
        const X = c.views;
        r !== null && (e.setRenderTargetFramebuffer(l, r.framebuffer), e.setRenderTarget(l));
        let J = false;
        X.length !== k.cameras.length && (k.cameras.length = 0, J = true);
        for (let B = 0; B < X.length; B++) {
          const Q = X[B];
          let ne = null;
          if (r !== null) ne = r.getViewport(Q);
          else {
            const ie = h.getViewSubImage(f, Q);
            ne = ie.viewport, B === 0 && (e.setRenderTargetTextures(l, ie.colorTexture, f.ignoreDepthValues ? void 0 : ie.depthStencilTexture), e.setRenderTarget(l));
          }
          let K = R[B];
          K === void 0 && (K = new Ri(), K.layers.enable(B), K.viewport = new ci(), R[B] = K), K.matrix.fromArray(Q.transform.matrix), K.projectionMatrix.fromArray(Q.projectionMatrix), K.viewport.set(ne.x, ne.y, ne.width, ne.height), B === 0 && k.matrix.copy(K.matrix), J === true && k.cameras.push(K);
        }
      }
      for (let X = 0; X < d.length; X++) {
        const J = b[X], B = d[X];
        J !== null && B !== void 0 && B.update(J, $, s || t);
      }
      j && j(ue, $), m = null;
    }
    const Z = new km();
    Z.setAnimationLoop(z), this.setAnimationLoop = function(ue) {
      j = ue;
    }, this.dispose = function() {
    };
  }
}
function T1(v, e) {
  function n(a, l) {
    a.fogColor.value.copy(l.color), l.isFog ? (a.fogNear.value = l.near, a.fogFar.value = l.far) : l.isFogExp2 && (a.fogDensity.value = l.density);
  }
  function i(a, l, d, b, S) {
    l.isMeshBasicMaterial || l.isMeshLambertMaterial ? u(a, l) : l.isMeshToonMaterial ? (u(a, l), h(a, l)) : l.isMeshPhongMaterial ? (u(a, l), c(a, l)) : l.isMeshStandardMaterial ? (u(a, l), f(a, l), l.isMeshPhysicalMaterial && r(a, l, S)) : l.isMeshMatcapMaterial ? (u(a, l), m(a, l)) : l.isMeshDepthMaterial ? u(a, l) : l.isMeshDistanceMaterial ? (u(a, l), g(a, l)) : l.isMeshNormalMaterial ? u(a, l) : l.isLineBasicMaterial ? (y(a, l), l.isLineDashedMaterial && t(a, l)) : l.isPointsMaterial ? o(a, l, d, b) : l.isSpriteMaterial ? s(a, l) : l.isShadowMaterial ? (a.color.value.copy(l.color), a.opacity.value = l.opacity) : l.isShaderMaterial && (l.uniformsNeedUpdate = false);
  }
  function u(a, l) {
    a.opacity.value = l.opacity, l.color && a.diffuse.value.copy(l.color), l.emissive && a.emissive.value.copy(l.emissive).multiplyScalar(l.emissiveIntensity), l.map && (a.map.value = l.map), l.alphaMap && (a.alphaMap.value = l.alphaMap), l.bumpMap && (a.bumpMap.value = l.bumpMap, a.bumpScale.value = l.bumpScale, l.side === 1 && (a.bumpScale.value *= -1)), l.displacementMap && (a.displacementMap.value = l.displacementMap, a.displacementScale.value = l.displacementScale, a.displacementBias.value = l.displacementBias), l.emissiveMap && (a.emissiveMap.value = l.emissiveMap), l.normalMap && (a.normalMap.value = l.normalMap, a.normalScale.value.copy(l.normalScale), l.side === 1 && a.normalScale.value.negate()), l.specularMap && (a.specularMap.value = l.specularMap), l.alphaTest > 0 && (a.alphaTest.value = l.alphaTest);
    const d = e.get(l).envMap;
    if (d && (a.envMap.value = d, a.flipEnvMap.value = d.isCubeTexture && d.isRenderTargetTexture === false ? -1 : 1, a.reflectivity.value = l.reflectivity, a.ior.value = l.ior, a.refractionRatio.value = l.refractionRatio), l.lightMap) {
      a.lightMap.value = l.lightMap;
      const E = v.physicallyCorrectLights !== true ? Math.PI : 1;
      a.lightMapIntensity.value = l.lightMapIntensity * E;
    }
    l.aoMap && (a.aoMap.value = l.aoMap, a.aoMapIntensity.value = l.aoMapIntensity);
    let b;
    l.map ? b = l.map : l.specularMap ? b = l.specularMap : l.displacementMap ? b = l.displacementMap : l.normalMap ? b = l.normalMap : l.bumpMap ? b = l.bumpMap : l.roughnessMap ? b = l.roughnessMap : l.metalnessMap ? b = l.metalnessMap : l.alphaMap ? b = l.alphaMap : l.emissiveMap ? b = l.emissiveMap : l.clearcoatMap ? b = l.clearcoatMap : l.clearcoatNormalMap ? b = l.clearcoatNormalMap : l.clearcoatRoughnessMap ? b = l.clearcoatRoughnessMap : l.iridescenceMap ? b = l.iridescenceMap : l.iridescenceThicknessMap ? b = l.iridescenceThicknessMap : l.specularIntensityMap ? b = l.specularIntensityMap : l.specularColorMap ? b = l.specularColorMap : l.transmissionMap ? b = l.transmissionMap : l.thicknessMap ? b = l.thicknessMap : l.sheenColorMap ? b = l.sheenColorMap : l.sheenRoughnessMap && (b = l.sheenRoughnessMap), b !== void 0 && (b.isWebGLRenderTarget && (b = b.texture), b.matrixAutoUpdate === true && b.updateMatrix(), a.uvTransform.value.copy(b.matrix));
    let S;
    l.aoMap ? S = l.aoMap : l.lightMap && (S = l.lightMap), S !== void 0 && (S.isWebGLRenderTarget && (S = S.texture), S.matrixAutoUpdate === true && S.updateMatrix(), a.uv2Transform.value.copy(S.matrix));
  }
  function y(a, l) {
    a.diffuse.value.copy(l.color), a.opacity.value = l.opacity;
  }
  function t(a, l) {
    a.dashSize.value = l.dashSize, a.totalSize.value = l.dashSize + l.gapSize, a.scale.value = l.scale;
  }
  function o(a, l, d, b) {
    a.diffuse.value.copy(l.color), a.opacity.value = l.opacity, a.size.value = l.size * d, a.scale.value = b * 0.5, l.map && (a.map.value = l.map), l.alphaMap && (a.alphaMap.value = l.alphaMap), l.alphaTest > 0 && (a.alphaTest.value = l.alphaTest);
    let S;
    l.map ? S = l.map : l.alphaMap && (S = l.alphaMap), S !== void 0 && (S.matrixAutoUpdate === true && S.updateMatrix(), a.uvTransform.value.copy(S.matrix));
  }
  function s(a, l) {
    a.diffuse.value.copy(l.color), a.opacity.value = l.opacity, a.rotation.value = l.rotation, l.map && (a.map.value = l.map), l.alphaMap && (a.alphaMap.value = l.alphaMap), l.alphaTest > 0 && (a.alphaTest.value = l.alphaTest);
    let d;
    l.map ? d = l.map : l.alphaMap && (d = l.alphaMap), d !== void 0 && (d.matrixAutoUpdate === true && d.updateMatrix(), a.uvTransform.value.copy(d.matrix));
  }
  function c(a, l) {
    a.specular.value.copy(l.specular), a.shininess.value = Math.max(l.shininess, 1e-4);
  }
  function h(a, l) {
    l.gradientMap && (a.gradientMap.value = l.gradientMap);
  }
  function f(a, l) {
    a.roughness.value = l.roughness, a.metalness.value = l.metalness, l.roughnessMap && (a.roughnessMap.value = l.roughnessMap), l.metalnessMap && (a.metalnessMap.value = l.metalnessMap), e.get(l).envMap && (a.envMapIntensity.value = l.envMapIntensity);
  }
  function r(a, l, d) {
    a.ior.value = l.ior, l.sheen > 0 && (a.sheenColor.value.copy(l.sheenColor).multiplyScalar(l.sheen), a.sheenRoughness.value = l.sheenRoughness, l.sheenColorMap && (a.sheenColorMap.value = l.sheenColorMap), l.sheenRoughnessMap && (a.sheenRoughnessMap.value = l.sheenRoughnessMap)), l.clearcoat > 0 && (a.clearcoat.value = l.clearcoat, a.clearcoatRoughness.value = l.clearcoatRoughness, l.clearcoatMap && (a.clearcoatMap.value = l.clearcoatMap), l.clearcoatRoughnessMap && (a.clearcoatRoughnessMap.value = l.clearcoatRoughnessMap), l.clearcoatNormalMap && (a.clearcoatNormalScale.value.copy(l.clearcoatNormalScale), a.clearcoatNormalMap.value = l.clearcoatNormalMap, l.side === 1 && a.clearcoatNormalScale.value.negate())), l.iridescence > 0 && (a.iridescence.value = l.iridescence, a.iridescenceIOR.value = l.iridescenceIOR, a.iridescenceThicknessMinimum.value = l.iridescenceThicknessRange[0], a.iridescenceThicknessMaximum.value = l.iridescenceThicknessRange[1], l.iridescenceMap && (a.iridescenceMap.value = l.iridescenceMap), l.iridescenceThicknessMap && (a.iridescenceThicknessMap.value = l.iridescenceThicknessMap)), l.transmission > 0 && (a.transmission.value = l.transmission, a.transmissionSamplerMap.value = d.texture, a.transmissionSamplerSize.value.set(d.width, d.height), l.transmissionMap && (a.transmissionMap.value = l.transmissionMap), a.thickness.value = l.thickness, l.thicknessMap && (a.thicknessMap.value = l.thicknessMap), a.attenuationDistance.value = l.attenuationDistance, a.attenuationColor.value.copy(l.attenuationColor)), a.specularIntensity.value = l.specularIntensity, a.specularColor.value.copy(l.specularColor), l.specularIntensityMap && (a.specularIntensityMap.value = l.specularIntensityMap), l.specularColorMap && (a.specularColorMap.value = l.specularColorMap);
  }
  function m(a, l) {
    l.matcap && (a.matcap.value = l.matcap);
  }
  function g(a, l) {
    a.referencePosition.value.copy(l.referencePosition), a.nearDistance.value = l.nearDistance, a.farDistance.value = l.farDistance;
  }
  return { refreshFogUniforms: n, refreshMaterialUniforms: i };
}
function k1(v, e, n, i) {
  let u = {}, y = {}, t = [];
  const o = n.isWebGL2 ? v.getParameter(35375) : 0;
  function s(b, S) {
    const E = S.program;
    i.uniformBlockBinding(b, E);
  }
  function c(b, S) {
    let E = u[b.id];
    E === void 0 && (g(b), E = h(b), u[b.id] = E, b.addEventListener("dispose", l));
    const R = S.program;
    i.updateUBOMapping(b, R);
    const k = e.render.frame;
    y[b.id] !== k && (r(b), y[b.id] = k);
  }
  function h(b) {
    const S = f();
    b.__bindingPointIndex = S;
    const E = v.createBuffer(), R = b.__size, k = b.usage;
    return v.bindBuffer(35345, E), v.bufferData(35345, R, k), v.bindBuffer(35345, null), v.bindBufferBase(35345, S, E), E;
  }
  function f() {
    for (let b = 0; b < o; b++) if (t.indexOf(b) === -1) return t.push(b), b;
    return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."), 0;
  }
  function r(b) {
    const S = u[b.id], E = b.uniforms, R = b.__cache;
    v.bindBuffer(35345, S);
    for (let k = 0, w = E.length; k < w; k++) {
      const F = E[k];
      if (m(F, k, R) === true) {
        const I = F.value, q = F.__offset;
        typeof I == "number" ? (F.__data[0] = I, v.bufferSubData(35345, q, F.__data)) : (F.value.isMatrix3 ? (F.__data[0] = F.value.elements[0], F.__data[1] = F.value.elements[1], F.__data[2] = F.value.elements[2], F.__data[3] = F.value.elements[0], F.__data[4] = F.value.elements[3], F.__data[5] = F.value.elements[4], F.__data[6] = F.value.elements[5], F.__data[7] = F.value.elements[0], F.__data[8] = F.value.elements[6], F.__data[9] = F.value.elements[7], F.__data[10] = F.value.elements[8], F.__data[11] = F.value.elements[0]) : I.toArray(F.__data), v.bufferSubData(35345, q, F.__data));
      }
    }
    v.bindBuffer(35345, null);
  }
  function m(b, S, E) {
    const R = b.value;
    if (E[S] === void 0) return typeof R == "number" ? E[S] = R : E[S] = R.clone(), true;
    if (typeof R == "number") {
      if (E[S] !== R) return E[S] = R, true;
    } else {
      const k = E[S];
      if (k.equals(R) === false) return k.copy(R), true;
    }
    return false;
  }
  function g(b) {
    const S = b.uniforms;
    let E = 0;
    const R = 16;
    let k = 0;
    for (let w = 0, F = S.length; w < F; w++) {
      const I = S[w], q = a(I);
      if (I.__data = new Float32Array(q.storage / Float32Array.BYTES_PER_ELEMENT), I.__offset = E, w > 0) {
        k = E % R;
        const N = R - k;
        k !== 0 && N - q.boundary < 0 && (E += R - k, I.__offset = E);
      }
      E += q.storage;
    }
    return k = E % R, k > 0 && (E += R - k), b.__size = E, b.__cache = {}, this;
  }
  function a(b) {
    const S = b.value, E = { boundary: 0, storage: 0 };
    return typeof S == "number" ? (E.boundary = 4, E.storage = 4) : S.isVector2 ? (E.boundary = 8, E.storage = 8) : S.isVector3 || S.isColor ? (E.boundary = 16, E.storage = 12) : S.isVector4 ? (E.boundary = 16, E.storage = 16) : S.isMatrix3 ? (E.boundary = 48, E.storage = 48) : S.isMatrix4 ? (E.boundary = 64, E.storage = 64) : S.isTexture ? console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.") : console.warn("THREE.WebGLRenderer: Unsupported uniform value type.", S), E;
  }
  function l(b) {
    const S = b.target;
    S.removeEventListener("dispose", l);
    const E = t.indexOf(S.__bindingPointIndex);
    t.splice(E, 1), v.deleteBuffer(u[S.id]), delete u[S.id], delete y[S.id];
  }
  function d() {
    for (const b in u) v.deleteBuffer(u[b]);
    t = [], u = {}, y = {};
  }
  return { bind: s, update: c, dispose: d };
}
function O1() {
  const v = bc("canvas");
  return v.style.display = "block", v;
}
function Im(v = {}) {
  this.isWebGLRenderer = true;
  const e = v.canvas !== void 0 ? v.canvas : O1(), n = v.context !== void 0 ? v.context : null, i = v.depth !== void 0 ? v.depth : true, u = v.stencil !== void 0 ? v.stencil : true, y = v.antialias !== void 0 ? v.antialias : false, t = v.premultipliedAlpha !== void 0 ? v.premultipliedAlpha : true, o = v.preserveDrawingBuffer !== void 0 ? v.preserveDrawingBuffer : false, s = v.powerPreference !== void 0 ? v.powerPreference : "default", c = v.failIfMajorPerformanceCaveat !== void 0 ? v.failIfMajorPerformanceCaveat : false;
  let h;
  n !== null ? h = n.getContextAttributes().alpha : h = v.alpha !== void 0 ? v.alpha : false;
  let f = null, r = null;
  const m = [], g = [];
  this.domElement = e, this.debug = { checkShaderErrors: true }, this.autoClear = true, this.autoClearColor = true, this.autoClearDepth = true, this.autoClearStencil = true, this.sortObjects = true, this.clippingPlanes = [], this.localClippingEnabled = false, this.outputEncoding = 3e3, this.physicallyCorrectLights = false, this.toneMapping = 0, this.toneMappingExposure = 1, Object.defineProperties(this, { gammaFactor: { get: function() {
    return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."), 2;
  }, set: function() {
    console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.");
  } } });
  const a = this;
  let l = false, d = 0, b = 0, S = null, E = -1, R = null;
  const k = new ci(), w = new ci();
  let F = null, I = e.width, q = e.height, N = 1, H = null, _ = null;
  const x = new ci(0, 0, I, q), L = new ci(0, 0, I, q);
  let j = false;
  const z = new sf();
  let Z = false, ue = false, $ = null;
  const X = new li(), J = new In(), B = new _r(), Q = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };
  function ne() {
    return S === null ? N : 1;
  }
  let K = n;
  function ie(le, te) {
    for (let Le = 0; Le < le.length; Le++) {
      const nt = le[Le], ft = e.getContext(nt, te);
      if (ft !== null) return ft;
    }
    return null;
  }
  try {
    const le = { alpha: true, depth: i, stencil: u, antialias: y, premultipliedAlpha: t, preserveDrawingBuffer: o, powerPreference: s, failIfMajorPerformanceCaveat: c };
    if ("setAttribute" in e && e.setAttribute("data-engine", `three.js r${af}`), e.addEventListener("webglcontextlost", W, false), e.addEventListener("webglcontextrestored", de, false), e.addEventListener("webglcontextcreationerror", tt, false), K === null) {
      const te = ["webgl2", "webgl", "experimental-webgl"];
      if (a.isWebGL1Renderer === true && te.shift(), K = ie(te, le), K === null) throw ie(te) ? new Error("Error creating WebGL context with your selected attributes.") : new Error("Error creating WebGL context.");
    }
    K.getShaderPrecisionFormat === void 0 && (K.getShaderPrecisionFormat = function() {
      return { rangeMin: 1, rangeMax: 1, precision: 1 };
    });
  } catch (le) {
    throw console.error("THREE.WebGLRenderer: " + le.message), le;
  }
  let ce, ye, oe, se, re, ge, Te, pe, Oe, xe, Ve, _e, Be, Qe, ee, P, T, O, V, D, C, p, A, U;
  function Y() {
    ce = new Fb(K), ye = new Rb(K, ce, v), ce.init(ye), p = new S1(K, ce, ye), oe = new b1(K, ce, ye), se = new Vb(), re = new o1(), ge = new w1(K, ce, oe, re, ye, p, se), Te = new Ib(a), pe = new Db(a), Oe = new Zg(K, ye), A = new Pb(K, ce, Oe, ye), xe = new Ub(K, Oe, se, A), Ve = new Gb(K, xe, Oe, se), V = new Hb(K, ye, ge), P = new Mb(re), _e = new i1(a, Te, pe, ce, ye, A, P), Be = new T1(a, re), Qe = new s1(), ee = new h1(ce, ye), O = new Ob(a, Te, oe, Ve, h, t), T = new v1(a, Ve, ye), U = new k1(K, se, ye, oe), D = new Cb(K, ce, se, ye), C = new jb(K, ce, se, ye), se.programs = _e.programs, a.capabilities = ye, a.extensions = ce, a.properties = re, a.renderLists = Qe, a.shadowMap = T, a.state = oe, a.info = se;
  }
  Y();
  const ae = new x1(a, K);
  this.xr = ae, this.getContext = function() {
    return K;
  }, this.getContextAttributes = function() {
    return K.getContextAttributes();
  }, this.forceContextLoss = function() {
    const le = ce.get("WEBGL_lose_context");
    le && le.loseContext();
  }, this.forceContextRestore = function() {
    const le = ce.get("WEBGL_lose_context");
    le && le.restoreContext();
  }, this.getPixelRatio = function() {
    return N;
  }, this.setPixelRatio = function(le) {
    le !== void 0 && (N = le, this.setSize(I, q, false));
  }, this.getSize = function(le) {
    return le.set(I, q);
  }, this.setSize = function(le, te, Le) {
    if (ae.isPresenting) {
      console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");
      return;
    }
    I = le, q = te, e.width = Math.floor(le * N), e.height = Math.floor(te * N), Le !== false && (e.style.width = le + "px", e.style.height = te + "px"), this.setViewport(0, 0, le, te);
  }, this.getDrawingBufferSize = function(le) {
    return le.set(I * N, q * N).floor();
  }, this.setDrawingBufferSize = function(le, te, Le) {
    I = le, q = te, N = Le, e.width = Math.floor(le * Le), e.height = Math.floor(te * Le), this.setViewport(0, 0, le, te);
  }, this.getCurrentViewport = function(le) {
    return le.copy(k);
  }, this.getViewport = function(le) {
    return le.copy(x);
  }, this.setViewport = function(le, te, Le, nt) {
    le.isVector4 ? x.set(le.x, le.y, le.z, le.w) : x.set(le, te, Le, nt), oe.viewport(k.copy(x).multiplyScalar(N).floor());
  }, this.getScissor = function(le) {
    return le.copy(L);
  }, this.setScissor = function(le, te, Le, nt) {
    le.isVector4 ? L.set(le.x, le.y, le.z, le.w) : L.set(le, te, Le, nt), oe.scissor(w.copy(L).multiplyScalar(N).floor());
  }, this.getScissorTest = function() {
    return j;
  }, this.setScissorTest = function(le) {
    oe.setScissorTest(j = le);
  }, this.setOpaqueSort = function(le) {
    H = le;
  }, this.setTransparentSort = function(le) {
    _ = le;
  }, this.getClearColor = function(le) {
    return le.copy(O.getClearColor());
  }, this.setClearColor = function() {
    O.setClearColor.apply(O, arguments);
  }, this.getClearAlpha = function() {
    return O.getClearAlpha();
  }, this.setClearAlpha = function() {
    O.setClearAlpha.apply(O, arguments);
  }, this.clear = function(le = true, te = true, Le = true) {
    let nt = 0;
    le && (nt |= 16384), te && (nt |= 256), Le && (nt |= 1024), K.clear(nt);
  }, this.clearColor = function() {
    this.clear(true, false, false);
  }, this.clearDepth = function() {
    this.clear(false, true, false);
  }, this.clearStencil = function() {
    this.clear(false, false, true);
  }, this.dispose = function() {
    e.removeEventListener("webglcontextlost", W, false), e.removeEventListener("webglcontextrestored", de, false), e.removeEventListener("webglcontextcreationerror", tt, false), Qe.dispose(), ee.dispose(), re.dispose(), Te.dispose(), pe.dispose(), Ve.dispose(), A.dispose(), U.dispose(), _e.dispose(), ae.dispose(), ae.removeEventListener("sessionstart", je), ae.removeEventListener("sessionend", Ge), $ && ($.dispose(), $ = null), at.stop();
  };
  function W(le) {
    le.preventDefault(), console.log("THREE.WebGLRenderer: Context Lost."), l = true;
  }
  function de() {
    console.log("THREE.WebGLRenderer: Context Restored."), l = false;
    const le = se.autoReset, te = T.enabled, Le = T.autoUpdate, nt = T.needsUpdate, ft = T.type;
    Y(), se.autoReset = le, T.enabled = te, T.autoUpdate = Le, T.needsUpdate = nt, T.type = ft;
  }
  function tt(le) {
    console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ", le.statusMessage);
  }
  function Ne(le) {
    const te = le.target;
    te.removeEventListener("dispose", Ne), ut(te);
  }
  function ut(le) {
    Ze(le), re.remove(le);
  }
  function Ze(le) {
    const te = re.get(le).programs;
    te !== void 0 && (te.forEach(function(Le) {
      _e.releaseProgram(Le);
    }), le.isShaderMaterial && _e.releaseShaderCache(le));
  }
  this.renderBufferDirect = function(le, te, Le, nt, ft, zt) {
    te === null && (te = Q);
    const st = ft.isMesh && ft.matrixWorld.determinant() < 0, ct = Ur(le, te, Le, nt, ft);
    oe.setMaterial(nt, st);
    let yt = Le.index;
    const Zt = Le.attributes.position;
    if (yt === null) {
      if (Zt === void 0 || Zt.count === 0) return;
    } else if (yt.count === 0) return;
    let Ct = 1;
    nt.wireframe === true && (yt = xe.getWireframeAttribute(Le), Ct = 2), A.setup(ft, nt, ct, Le, yt);
    let Lt, Wt = D;
    yt !== null && (Lt = Oe.get(yt), Wt = C, Wt.setIndex(Lt));
    const vr = yt !== null ? yt.count : Zt.count, ar = Le.drawRange.start * Ct, sr = Le.drawRange.count * Ct, gr = zt !== null ? zt.start * Ct : 0, Tr = zt !== null ? zt.count * Ct : 1 / 0, Mr = Math.max(ar, gr), Nr = Math.min(vr, ar + sr, gr + Tr) - 1, Lr = Math.max(0, Nr - Mr + 1);
    if (Lr !== 0) {
      if (ft.isMesh) nt.wireframe === true ? (oe.setLineWidth(nt.wireframeLinewidth * ne()), Wt.setMode(1)) : Wt.setMode(4);
      else if (ft.isLine) {
        let jr = nt.linewidth;
        jr === void 0 && (jr = 1), oe.setLineWidth(jr * ne()), ft.isLineSegments ? Wt.setMode(1) : ft.isLineLoop ? Wt.setMode(2) : Wt.setMode(3);
      } else ft.isPoints ? Wt.setMode(0) : ft.isSprite && Wt.setMode(4);
      if (ft.isInstancedMesh) Wt.renderInstances(Mr, Lr, ft.count);
      else if (Le.isInstancedBufferGeometry) {
        const jr = Math.min(Le.instanceCount, Le._maxInstanceCount);
        Wt.renderInstances(Mr, Lr, jr);
      } else Wt.render(Mr, Lr);
    }
  }, this.compile = function(le, te) {
    r = ee.get(le), r.init(), g.push(r), le.traverseVisible(function(Le) {
      Le.isLight && Le.layers.test(te.layers) && (r.pushLight(Le), Le.castShadow && r.pushShadow(Le));
    }), r.setupLights(a.physicallyCorrectLights), le.traverse(function(Le) {
      const nt = Le.material;
      if (nt) if (Array.isArray(nt)) for (let ft = 0; ft < nt.length; ft++) {
        const zt = nt[ft];
        Nt(zt, le, Le);
      }
      else Nt(nt, le, Le);
    }), g.pop(), r = null;
  };
  let Et = null;
  function rr(le) {
    Et && Et(le);
  }
  function je() {
    at.stop();
  }
  function Ge() {
    at.start();
  }
  const at = new km();
  at.setAnimationLoop(rr), typeof self < "u" && at.setContext(self), this.setAnimationLoop = function(le) {
    Et = le, ae.setAnimationLoop(le), le === null ? at.stop() : at.start();
  }, ae.addEventListener("sessionstart", je), ae.addEventListener("sessionend", Ge), this.render = function(le, te) {
    if (te !== void 0 && te.isCamera !== true) {
      console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");
      return;
    }
    if (l === true) return;
    le.autoUpdate === true && le.updateMatrixWorld(), te.parent === null && te.updateMatrixWorld(), ae.enabled === true && ae.isPresenting === true && (ae.cameraAutoUpdate === true && ae.updateCamera(te), te = ae.getCamera()), le.isScene === true && le.onBeforeRender(a, le, te, S), r = ee.get(le, g.length), r.init(), g.push(r), X.multiplyMatrices(te.projectionMatrix, te.matrixWorldInverse), z.setFromProjectionMatrix(X), ue = this.localClippingEnabled, Z = P.init(this.clippingPlanes, ue, te), f = Qe.get(le, m.length), f.init(), m.push(f), Ae(le, te, 0, a.sortObjects), f.finish(), a.sortObjects === true && f.sort(H, _), Z === true && P.beginShadows();
    const Le = r.state.shadowsArray;
    if (T.render(Le, le, te), Z === true && P.endShadows(), this.info.autoReset === true && this.info.reset(), O.render(f, le), r.setupLights(a.physicallyCorrectLights), te.isArrayCamera) {
      const nt = te.cameras;
      for (let ft = 0, zt = nt.length; ft < zt; ft++) {
        const st = nt[ft];
        qe(f, le, st, st.viewport);
      }
    } else qe(f, le, te);
    S !== null && (ge.updateMultisampleRenderTarget(S), ge.updateRenderTargetMipmap(S)), le.isScene === true && le.onAfterRender(a, le, te), A.resetDefaultState(), E = -1, R = null, g.pop(), g.length > 0 ? r = g[g.length - 1] : r = null, m.pop(), m.length > 0 ? f = m[m.length - 1] : f = null;
  };
  function Ae(le, te, Le, nt) {
    if (le.visible === false) return;
    if (le.layers.test(te.layers)) {
      if (le.isGroup) Le = le.renderOrder;
      else if (le.isLOD) le.autoUpdate === true && le.update(te);
      else if (le.isLight) r.pushLight(le), le.castShadow && r.pushShadow(le);
      else if (le.isSprite) {
        if (!le.frustumCulled || z.intersectsSprite(le)) {
          nt && B.setFromMatrixPosition(le.matrixWorld).applyMatrix4(X);
          const zt = Ve.update(le), st = le.material;
          st.visible && f.push(le, zt, st, Le, B.z, null);
        }
      } else if ((le.isMesh || le.isLine || le.isPoints) && (le.isSkinnedMesh && le.skeleton.frame !== se.render.frame && (le.skeleton.update(), le.skeleton.frame = se.render.frame), !le.frustumCulled || z.intersectsObject(le))) {
        nt && B.setFromMatrixPosition(le.matrixWorld).applyMatrix4(X);
        const zt = Ve.update(le), st = le.material;
        if (Array.isArray(st)) {
          const ct = zt.groups;
          for (let yt = 0, Zt = ct.length; yt < Zt; yt++) {
            const Ct = ct[yt], Lt = st[Ct.materialIndex];
            Lt && Lt.visible && f.push(le, zt, Lt, Le, B.z, Ct);
          }
        } else st.visible && f.push(le, zt, st, Le, B.z, null);
      }
    }
    const ft = le.children;
    for (let zt = 0, st = ft.length; zt < st; zt++) Ae(ft[zt], te, Le, nt);
  }
  function qe(le, te, Le, nt) {
    const ft = le.opaque, zt = le.transmissive, st = le.transparent;
    r.setupLightsView(Le), zt.length > 0 && Ft(ft, te, Le), nt && oe.viewport(k.copy(nt)), ft.length > 0 && Dt(ft, te, Le), zt.length > 0 && Dt(zt, te, Le), st.length > 0 && Dt(st, te, Le), oe.buffers.depth.setTest(true), oe.buffers.depth.setMask(true), oe.buffers.color.setMask(true), oe.setPolygonOffset(false);
  }
  function Ft(le, te, Le) {
    const nt = ye.isWebGL2;
    $ === null && ($ = new ia(1, 1, { generateMipmaps: true, type: ce.has("EXT_color_buffer_half_float") ? 1016 : 1009, minFilter: 1008, samples: nt && y === true ? 4 : 0 })), a.getDrawingBufferSize(J), nt ? $.setSize(J.x, J.y) : $.setSize(Ul(J.x), Ul(J.y));
    const ft = a.getRenderTarget();
    a.setRenderTarget($), a.clear();
    const zt = a.toneMapping;
    a.toneMapping = 0, Dt(le, te, Le), a.toneMapping = zt, ge.updateMultisampleRenderTarget($), ge.updateRenderTargetMipmap($), a.setRenderTarget(ft);
  }
  function Dt(le, te, Le) {
    const nt = te.isScene === true ? te.overrideMaterial : null;
    for (let ft = 0, zt = le.length; ft < zt; ft++) {
      const st = le[ft], ct = st.object, yt = st.geometry, Zt = nt === null ? st.material : nt, Ct = st.group;
      ct.layers.test(Le.layers) && wr(ct, te, Le, yt, Zt, Ct);
    }
  }
  function wr(le, te, Le, nt, ft, zt) {
    le.onBeforeRender(a, te, Le, nt, ft, zt), le.modelViewMatrix.multiplyMatrices(Le.matrixWorldInverse, le.matrixWorld), le.normalMatrix.getNormalMatrix(le.modelViewMatrix), ft.onBeforeRender(a, te, Le, nt, le, zt), ft.transparent === true && ft.side === 2 ? (ft.side = 1, ft.needsUpdate = true, a.renderBufferDirect(Le, te, nt, ft, le, zt), ft.side = 0, ft.needsUpdate = true, a.renderBufferDirect(Le, te, nt, ft, le, zt), ft.side = 2) : a.renderBufferDirect(Le, te, nt, ft, le, zt), le.onAfterRender(a, te, Le, nt, ft, zt);
  }
  function Nt(le, te, Le) {
    te.isScene !== true && (te = Q);
    const nt = re.get(le), ft = r.state.lights, zt = r.state.shadowsArray, st = ft.state.version, ct = _e.getParameters(le, ft.state, zt, te, Le), yt = _e.getProgramCacheKey(ct);
    let Zt = nt.programs;
    nt.environment = le.isMeshStandardMaterial ? te.environment : null, nt.fog = te.fog, nt.envMap = (le.isMeshStandardMaterial ? pe : Te).get(le.envMap || nt.environment), Zt === void 0 && (le.addEventListener("dispose", Ne), Zt = /* @__PURE__ */ new Map(), nt.programs = Zt);
    let Ct = Zt.get(yt);
    if (Ct !== void 0) {
      if (nt.currentProgram === Ct && nt.lightsStateVersion === st) return yr(le, ct), Ct;
    } else ct.uniforms = _e.getUniforms(le), le.onBuild(Le, ct, a), le.onBeforeCompile(ct, a), Ct = _e.acquireProgram(ct, yt), Zt.set(yt, Ct), nt.uniforms = ct.uniforms;
    const Lt = nt.uniforms;
    (!le.isShaderMaterial && !le.isRawShaderMaterial || le.clipping === true) && (Lt.clippingPlanes = P.uniform), yr(le, ct), nt.needsLights = $e(le), nt.lightsStateVersion = st, nt.needsLights && (Lt.ambientLightColor.value = ft.state.ambient, Lt.lightProbe.value = ft.state.probe, Lt.directionalLights.value = ft.state.directional, Lt.directionalLightShadows.value = ft.state.directionalShadow, Lt.spotLights.value = ft.state.spot, Lt.spotLightShadows.value = ft.state.spotShadow, Lt.rectAreaLights.value = ft.state.rectArea, Lt.ltc_1.value = ft.state.rectAreaLTC1, Lt.ltc_2.value = ft.state.rectAreaLTC2, Lt.pointLights.value = ft.state.point, Lt.pointLightShadows.value = ft.state.pointShadow, Lt.hemisphereLights.value = ft.state.hemi, Lt.directionalShadowMap.value = ft.state.directionalShadowMap, Lt.directionalShadowMatrix.value = ft.state.directionalShadowMatrix, Lt.spotShadowMap.value = ft.state.spotShadowMap, Lt.spotShadowMatrix.value = ft.state.spotShadowMatrix, Lt.pointShadowMap.value = ft.state.pointShadowMap, Lt.pointShadowMatrix.value = ft.state.pointShadowMatrix);
    const Wt = Ct.getUniforms(), vr = lc.seqWithValue(Wt.seq, Lt);
    return nt.currentProgram = Ct, nt.uniformsList = vr, Ct;
  }
  function yr(le, te) {
    const Le = re.get(le);
    Le.outputEncoding = te.outputEncoding, Le.instancing = te.instancing, Le.skinning = te.skinning, Le.morphTargets = te.morphTargets, Le.morphNormals = te.morphNormals, Le.morphColors = te.morphColors, Le.morphTargetsCount = te.morphTargetsCount, Le.numClippingPlanes = te.numClippingPlanes, Le.numIntersection = te.numClipIntersection, Le.vertexAlphas = te.vertexAlphas, Le.vertexTangents = te.vertexTangents, Le.toneMapping = te.toneMapping;
  }
  function Ur(le, te, Le, nt, ft) {
    te.isScene !== true && (te = Q), ge.resetTextureUnits();
    const zt = te.fog, st = nt.isMeshStandardMaterial ? te.environment : null, ct = S === null ? a.outputEncoding : S.isXRRenderTarget === true ? S.texture.encoding : 3e3, yt = (nt.isMeshStandardMaterial ? pe : Te).get(nt.envMap || st), Zt = nt.vertexColors === true && !!Le.attributes.color && Le.attributes.color.itemSize === 4, Ct = !!nt.normalMap && !!Le.attributes.tangent, Lt = !!Le.morphAttributes.position, Wt = !!Le.morphAttributes.normal, vr = !!Le.morphAttributes.color, ar = nt.toneMapped ? a.toneMapping : 0, sr = Le.morphAttributes.position || Le.morphAttributes.normal || Le.morphAttributes.color, gr = sr !== void 0 ? sr.length : 0, Tr = re.get(nt), Mr = r.state.lights;
    if (Z === true && (ue === true || le !== R)) {
      const we = le === R && nt.id === E;
      P.setState(nt, le, we);
    }
    let Nr = false;
    nt.version === Tr.__version ? (Tr.needsLights && Tr.lightsStateVersion !== Mr.state.version || Tr.outputEncoding !== ct || ft.isInstancedMesh && Tr.instancing === false || !ft.isInstancedMesh && Tr.instancing === true || ft.isSkinnedMesh && Tr.skinning === false || !ft.isSkinnedMesh && Tr.skinning === true || Tr.envMap !== yt || nt.fog === true && Tr.fog !== zt || Tr.numClippingPlanes !== void 0 && (Tr.numClippingPlanes !== P.numPlanes || Tr.numIntersection !== P.numIntersection) || Tr.vertexAlphas !== Zt || Tr.vertexTangents !== Ct || Tr.morphTargets !== Lt || Tr.morphNormals !== Wt || Tr.morphColors !== vr || Tr.toneMapping !== ar || ye.isWebGL2 === true && Tr.morphTargetsCount !== gr) && (Nr = true) : (Nr = true, Tr.__version = nt.version);
    let Lr = Tr.currentProgram;
    Nr === true && (Lr = Nt(nt, te, ft));
    let jr = false, Hr = false, kr = false;
    const Xt = Lr.getUniforms(), Qt = Tr.uniforms;
    if (oe.useProgram(Lr.program) && (jr = true, Hr = true, kr = true), nt.id !== E && (E = nt.id, Hr = true), jr || R !== le) {
      if (Xt.setValue(K, "projectionMatrix", le.projectionMatrix), ye.logarithmicDepthBuffer && Xt.setValue(K, "logDepthBufFC", 2 / (Math.log(le.far + 1) / Math.LN2)), R !== le && (R = le, Hr = true, kr = true), nt.isShaderMaterial || nt.isMeshPhongMaterial || nt.isMeshToonMaterial || nt.isMeshStandardMaterial || nt.envMap) {
        const we = Xt.map.cameraPosition;
        we !== void 0 && we.setValue(K, B.setFromMatrixPosition(le.matrixWorld));
      }
      (nt.isMeshPhongMaterial || nt.isMeshToonMaterial || nt.isMeshLambertMaterial || nt.isMeshBasicMaterial || nt.isMeshStandardMaterial || nt.isShaderMaterial) && Xt.setValue(K, "isOrthographic", le.isOrthographicCamera === true), (nt.isMeshPhongMaterial || nt.isMeshToonMaterial || nt.isMeshLambertMaterial || nt.isMeshBasicMaterial || nt.isMeshStandardMaterial || nt.isShaderMaterial || nt.isShadowMaterial || ft.isSkinnedMesh) && Xt.setValue(K, "viewMatrix", le.matrixWorldInverse);
    }
    if (ft.isSkinnedMesh) {
      Xt.setOptional(K, ft, "bindMatrix"), Xt.setOptional(K, ft, "bindMatrixInverse");
      const we = ft.skeleton;
      we && (ye.floatVertexTextures ? (we.boneTexture === null && we.computeBoneTexture(), Xt.setValue(K, "boneTexture", we.boneTexture, ge), Xt.setValue(K, "boneTextureSize", we.boneTextureSize)) : console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."));
    }
    const br = Le.morphAttributes;
    if ((br.position !== void 0 || br.normal !== void 0 || br.color !== void 0 && ye.isWebGL2 === true) && V.update(ft, Le, nt, Lr), (Hr || Tr.receiveShadow !== ft.receiveShadow) && (Tr.receiveShadow = ft.receiveShadow, Xt.setValue(K, "receiveShadow", ft.receiveShadow)), Hr && (Xt.setValue(K, "toneMappingExposure", a.toneMappingExposure), Tr.needsLights && Pe(Qt, kr), zt && nt.fog === true && Be.refreshFogUniforms(Qt, zt), Be.refreshMaterialUniforms(Qt, nt, N, q, $), lc.upload(K, Tr.uniformsList, Qt, ge)), nt.isShaderMaterial && nt.uniformsNeedUpdate === true && (lc.upload(K, Tr.uniformsList, Qt, ge), nt.uniformsNeedUpdate = false), nt.isSpriteMaterial && Xt.setValue(K, "center", ft.center), Xt.setValue(K, "modelViewMatrix", ft.modelViewMatrix), Xt.setValue(K, "normalMatrix", ft.normalMatrix), Xt.setValue(K, "modelMatrix", ft.matrixWorld), nt.isShaderMaterial || nt.isRawShaderMaterial) {
      const we = nt.uniformsGroups;
      for (let me = 0, ze = we.length; me < ze; me++) if (ye.isWebGL2) {
        const rt = we[me];
        U.update(rt, Lr), U.bind(rt, Lr);
      } else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.");
    }
    return Lr;
  }
  function Pe(le, te) {
    le.ambientLightColor.needsUpdate = te, le.lightProbe.needsUpdate = te, le.directionalLights.needsUpdate = te, le.directionalLightShadows.needsUpdate = te, le.pointLights.needsUpdate = te, le.pointLightShadows.needsUpdate = te, le.spotLights.needsUpdate = te, le.spotLightShadows.needsUpdate = te, le.rectAreaLights.needsUpdate = te, le.hemisphereLights.needsUpdate = te;
  }
  function $e(le) {
    return le.isMeshLambertMaterial || le.isMeshToonMaterial || le.isMeshPhongMaterial || le.isMeshStandardMaterial || le.isShadowMaterial || le.isShaderMaterial && le.lights === true;
  }
  this.getActiveCubeFace = function() {
    return d;
  }, this.getActiveMipmapLevel = function() {
    return b;
  }, this.getRenderTarget = function() {
    return S;
  }, this.setRenderTargetTextures = function(le, te, Le) {
    re.get(le.texture).__webglTexture = te, re.get(le.depthTexture).__webglTexture = Le;
    const nt = re.get(le);
    nt.__hasExternalTextures = true, nt.__hasExternalTextures && (nt.__autoAllocateDepthBuffer = Le === void 0, nt.__autoAllocateDepthBuffer || ce.has("WEBGL_multisampled_render_to_texture") === true && (console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"), nt.__useRenderToTexture = false));
  }, this.setRenderTargetFramebuffer = function(le, te) {
    const Le = re.get(le);
    Le.__webglFramebuffer = te, Le.__useDefaultFramebuffer = te === void 0;
  }, this.setRenderTarget = function(le, te = 0, Le = 0) {
    S = le, d = te, b = Le;
    let nt = true;
    if (le) {
      const ct = re.get(le);
      ct.__useDefaultFramebuffer !== void 0 ? (oe.bindFramebuffer(36160, null), nt = false) : ct.__webglFramebuffer === void 0 ? ge.setupRenderTarget(le) : ct.__hasExternalTextures && ge.rebindTextures(le, re.get(le.texture).__webglTexture, re.get(le.depthTexture).__webglTexture);
    }
    let ft = null, zt = false, st = false;
    if (le) {
      const ct = le.texture;
      (ct.isData3DTexture || ct.isDataArrayTexture) && (st = true);
      const yt = re.get(le).__webglFramebuffer;
      le.isWebGLCubeRenderTarget ? (ft = yt[te], zt = true) : ye.isWebGL2 && le.samples > 0 && ge.useMultisampledRTT(le) === false ? ft = re.get(le).__webglMultisampledFramebuffer : ft = yt, k.copy(le.viewport), w.copy(le.scissor), F = le.scissorTest;
    } else k.copy(x).multiplyScalar(N).floor(), w.copy(L).multiplyScalar(N).floor(), F = j;
    if (oe.bindFramebuffer(36160, ft) && ye.drawBuffers && nt && oe.drawBuffers(le, ft), oe.viewport(k), oe.scissor(w), oe.setScissorTest(F), zt) {
      const ct = re.get(le.texture);
      K.framebufferTexture2D(36160, 36064, 34069 + te, ct.__webglTexture, Le);
    } else if (st) {
      const ct = re.get(le.texture), yt = te || 0;
      K.framebufferTextureLayer(36160, 36064, ct.__webglTexture, Le || 0, yt);
    }
    E = -1;
  }, this.readRenderTargetPixels = function(le, te, Le, nt, ft, zt, st) {
    if (!(le && le.isWebGLRenderTarget)) {
      console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");
      return;
    }
    let ct = re.get(le).__webglFramebuffer;
    if (le.isWebGLCubeRenderTarget && st !== void 0 && (ct = ct[st]), ct) {
      oe.bindFramebuffer(36160, ct);
      try {
        const yt = le.texture, Zt = yt.format, Ct = yt.type;
        if (Zt !== 1023 && p.convert(Zt) !== K.getParameter(35739)) {
          console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");
          return;
        }
        const Lt = Ct === 1016 && (ce.has("EXT_color_buffer_half_float") || ye.isWebGL2 && ce.has("EXT_color_buffer_float"));
        if (Ct !== 1009 && p.convert(Ct) !== K.getParameter(35738) && !(Ct === 1015 && (ye.isWebGL2 || ce.has("OES_texture_float") || ce.has("WEBGL_color_buffer_float"))) && !Lt) {
          console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");
          return;
        }
        te >= 0 && te <= le.width - nt && Le >= 0 && Le <= le.height - ft && K.readPixels(te, Le, nt, ft, p.convert(Zt), p.convert(Ct), zt);
      } finally {
        const yt = S !== null ? re.get(S).__webglFramebuffer : null;
        oe.bindFramebuffer(36160, yt);
      }
    }
  }, this.copyFramebufferToTexture = function(le, te, Le = 0) {
    const nt = Math.pow(2, -Le), ft = Math.floor(te.image.width * nt), zt = Math.floor(te.image.height * nt);
    ge.setTexture2D(te, 0), K.copyTexSubImage2D(3553, Le, 0, 0, le.x, le.y, ft, zt), oe.unbindTexture();
  }, this.copyTextureToTexture = function(le, te, Le, nt = 0) {
    const ft = te.image.width, zt = te.image.height, st = p.convert(Le.format), ct = p.convert(Le.type);
    ge.setTexture2D(Le, 0), K.pixelStorei(37440, Le.flipY), K.pixelStorei(37441, Le.premultiplyAlpha), K.pixelStorei(3317, Le.unpackAlignment), te.isDataTexture ? K.texSubImage2D(3553, nt, le.x, le.y, ft, zt, st, ct, te.image.data) : te.isCompressedTexture ? K.compressedTexSubImage2D(3553, nt, le.x, le.y, te.mipmaps[0].width, te.mipmaps[0].height, st, te.mipmaps[0].data) : K.texSubImage2D(3553, nt, le.x, le.y, st, ct, te.image), nt === 0 && Le.generateMipmaps && K.generateMipmap(3553), oe.unbindTexture();
  }, this.copyTextureToTexture3D = function(le, te, Le, nt, ft = 0) {
    if (a.isWebGL1Renderer) {
      console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");
      return;
    }
    const zt = le.max.x - le.min.x + 1, st = le.max.y - le.min.y + 1, ct = le.max.z - le.min.z + 1, yt = p.convert(nt.format), Zt = p.convert(nt.type);
    let Ct;
    if (nt.isData3DTexture) ge.setTexture3D(nt, 0), Ct = 32879;
    else if (nt.isDataArrayTexture) ge.setTexture2DArray(nt, 0), Ct = 35866;
    else {
      console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");
      return;
    }
    K.pixelStorei(37440, nt.flipY), K.pixelStorei(37441, nt.premultiplyAlpha), K.pixelStorei(3317, nt.unpackAlignment);
    const Lt = K.getParameter(3314), Wt = K.getParameter(32878), vr = K.getParameter(3316), ar = K.getParameter(3315), sr = K.getParameter(32877), gr = Le.isCompressedTexture ? Le.mipmaps[0] : Le.image;
    K.pixelStorei(3314, gr.width), K.pixelStorei(32878, gr.height), K.pixelStorei(3316, le.min.x), K.pixelStorei(3315, le.min.y), K.pixelStorei(32877, le.min.z), Le.isDataTexture || Le.isData3DTexture ? K.texSubImage3D(Ct, ft, te.x, te.y, te.z, zt, st, ct, yt, Zt, gr.data) : Le.isCompressedTexture ? (console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."), K.compressedTexSubImage3D(Ct, ft, te.x, te.y, te.z, zt, st, ct, yt, gr.data)) : K.texSubImage3D(Ct, ft, te.x, te.y, te.z, zt, st, ct, yt, Zt, gr), K.pixelStorei(3314, Lt), K.pixelStorei(32878, Wt), K.pixelStorei(3316, vr), K.pixelStorei(3315, ar), K.pixelStorei(32877, sr), ft === 0 && nt.generateMipmaps && K.generateMipmap(Ct), oe.unbindTexture();
  }, this.initTexture = function(le) {
    le.isCubeTexture ? ge.setTextureCube(le, 0) : le.isData3DTexture ? ge.setTexture3D(le, 0) : le.isDataArrayTexture ? ge.setTexture2DArray(le, 0) : ge.setTexture2D(le, 0), oe.unbindTexture();
  }, this.resetState = function() {
    d = 0, b = 0, S = null, oe.reset(), A.reset();
  }, typeof __THREE_DEVTOOLS__ < "u" && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe", { detail: this }));
}
class P1 extends Im {
}
P1.prototype.isWebGL1Renderer = true;
class C1 extends wi {
  constructor() {
    super(), this.isScene = true, this.type = "Scene", this.background = null, this.environment = null, this.fog = null, this.overrideMaterial = null, this.autoUpdate = true, typeof __THREE_DEVTOOLS__ < "u" && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe", { detail: this }));
  }
  copy(e, n) {
    return super.copy(e, n), e.background !== null && (this.background = e.background.clone()), e.environment !== null && (this.environment = e.environment.clone()), e.fog !== null && (this.fog = e.fog.clone()), e.overrideMaterial !== null && (this.overrideMaterial = e.overrideMaterial.clone()), this.autoUpdate = e.autoUpdate, this.matrixAutoUpdate = e.matrixAutoUpdate, this;
  }
  toJSON(e) {
    const n = super.toJSON(e);
    return this.fog !== null && (n.object.fog = this.fog.toJSON()), n;
  }
}
class nd extends Mi {
  constructor(e, n, i, u, y, t, o, s, c) {
    super(e, n, i, u, y, t, o, s, c), this.isCanvasTexture = true, this.needsUpdate = true;
  }
}
class cf extends oo {
  constructor(e = 1, n = 1, i = 1, u = 8, y = 1, t = false, o = 0, s = Math.PI * 2) {
    super(), this.type = "CylinderGeometry", this.parameters = { radiusTop: e, radiusBottom: n, height: i, radialSegments: u, heightSegments: y, openEnded: t, thetaStart: o, thetaLength: s };
    const c = this;
    u = Math.floor(u), y = Math.floor(y);
    const h = [], f = [], r = [], m = [];
    let g = 0;
    const a = [], l = i / 2;
    let d = 0;
    b(), t === false && (e > 0 && S(true), n > 0 && S(false)), this.setIndex(h), this.setAttribute("position", new yi(f, 3)), this.setAttribute("normal", new yi(r, 3)), this.setAttribute("uv", new yi(m, 2));
    function b() {
      const E = new _r(), R = new _r();
      let k = 0;
      const w = (n - e) / i;
      for (let F = 0; F <= y; F++) {
        const I = [], q = F / y, N = q * (n - e) + e;
        for (let H = 0; H <= u; H++) {
          const _ = H / u, x = _ * s + o, L = Math.sin(x), j = Math.cos(x);
          R.x = N * L, R.y = -q * i + l, R.z = N * j, f.push(R.x, R.y, R.z), E.set(L, w, j).normalize(), r.push(E.x, E.y, E.z), m.push(_, 1 - q), I.push(g++);
        }
        a.push(I);
      }
      for (let F = 0; F < u; F++) for (let I = 0; I < y; I++) {
        const q = a[I][F], N = a[I + 1][F], H = a[I + 1][F + 1], _ = a[I][F + 1];
        h.push(q, N, _), h.push(N, H, _), k += 6;
      }
      c.addGroup(d, k, 0), d += k;
    }
    function S(E) {
      const R = g, k = new In(), w = new _r();
      let F = 0;
      const I = E === true ? e : n, q = E === true ? 1 : -1;
      for (let H = 1; H <= u; H++) f.push(0, l * q, 0), r.push(0, q, 0), m.push(0.5, 0.5), g++;
      const N = g;
      for (let H = 0; H <= u; H++) {
        const _ = H / u * s + o, x = Math.cos(_), L = Math.sin(_);
        w.x = I * L, w.y = l * q, w.z = I * x, f.push(w.x, w.y, w.z), r.push(0, q, 0), k.x = x * 0.5 + 0.5, k.y = L * 0.5 * q + 0.5, m.push(k.x, k.y), g++;
      }
      for (let H = 0; H < u; H++) {
        const _ = R + H, x = N + H;
        E === true ? h.push(x, x + 1, _) : h.push(x + 1, x, _), F += 3;
      }
      c.addGroup(d, F, E === true ? 1 : 2), d += F;
    }
  }
  static fromJSON(e) {
    return new cf(e.radiusTop, e.radiusBottom, e.height, e.radialSegments, e.heightSegments, e.openEnded, e.thetaStart, e.thetaLength);
  }
}
class R1 extends ua {
  constructor(e) {
    super(), this.isShadowMaterial = true, this.type = "ShadowMaterial", this.color = new Mn(0), this.transparent = true, this.fog = true, this.setValues(e);
  }
  copy(e) {
    return super.copy(e), this.color.copy(e.color), this.fog = e.fog, this;
  }
}
class M1 extends ua {
  constructor(e) {
    super(), this.isMeshStandardMaterial = true, this.defines = { STANDARD: "" }, this.type = "MeshStandardMaterial", this.color = new Mn(16777215), this.roughness = 1, this.metalness = 0, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new Mn(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = 0, this.normalScale = new In(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.roughnessMap = null, this.metalnessMap = null, this.alphaMap = null, this.envMap = null, this.envMapIntensity = 1, this.wireframe = false, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.flatShading = false, this.fog = true, this.setValues(e);
  }
  copy(e) {
    return super.copy(e), this.defines = { STANDARD: "" }, this.color.copy(e.color), this.roughness = e.roughness, this.metalness = e.metalness, this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.roughnessMap = e.roughnessMap, this.metalnessMap = e.metalnessMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.envMapIntensity = e.envMapIntensity, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.flatShading = e.flatShading, this.fog = e.fog, this;
  }
}
class I1 extends ua {
  constructor(e) {
    super(), this.isMeshPhongMaterial = true, this.type = "MeshPhongMaterial", this.color = new Mn(16777215), this.specular = new Mn(1118481), this.shininess = 30, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new Mn(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = 0, this.normalScale = new In(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = 0, this.reflectivity = 1, this.refractionRatio = 0.98, this.wireframe = false, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.flatShading = false, this.fog = true, this.setValues(e);
  }
  copy(e) {
    return super.copy(e), this.color.copy(e.color), this.specular.copy(e.specular), this.shininess = e.shininess, this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.flatShading = e.flatShading, this.fog = e.fog, this;
  }
}
class Lm extends wi {
  constructor(e, n = 1) {
    super(), this.isLight = true, this.type = "Light", this.color = new Mn(e), this.intensity = n;
  }
  dispose() {
  }
  copy(e, n) {
    return super.copy(e, n), this.color.copy(e.color), this.intensity = e.intensity, this;
  }
  toJSON(e) {
    const n = super.toJSON(e);
    return n.object.color = this.color.getHex(), n.object.intensity = this.intensity, this.groundColor !== void 0 && (n.object.groundColor = this.groundColor.getHex()), this.distance !== void 0 && (n.object.distance = this.distance), this.angle !== void 0 && (n.object.angle = this.angle), this.decay !== void 0 && (n.object.decay = this.decay), this.penumbra !== void 0 && (n.object.penumbra = this.penumbra), this.shadow !== void 0 && (n.object.shadow = this.shadow.toJSON()), n;
  }
}
class L1 extends Lm {
  constructor(e, n, i) {
    super(e, i), this.isHemisphereLight = true, this.type = "HemisphereLight", this.position.copy(wi.DefaultUp), this.updateMatrix(), this.groundColor = new Mn(n);
  }
  copy(e, n) {
    return super.copy(e, n), this.groundColor.copy(e.groundColor), this;
  }
}
const id = new li(), od = new _r(), ad = new _r();
class B1 {
  constructor(e) {
    this.camera = e, this.bias = 0, this.normalBias = 0, this.radius = 1, this.blurSamples = 8, this.mapSize = new In(512, 512), this.map = null, this.mapPass = null, this.matrix = new li(), this.autoUpdate = true, this.needsUpdate = false, this._frustum = new sf(), this._frameExtents = new In(1, 1), this._viewportCount = 1, this._viewports = [new ci(0, 0, 1, 1)];
  }
  getViewportCount() {
    return this._viewportCount;
  }
  getFrustum() {
    return this._frustum;
  }
  updateMatrices(e) {
    const n = this.camera, i = this.matrix;
    od.setFromMatrixPosition(e.matrixWorld), n.position.copy(od), ad.setFromMatrixPosition(e.target.matrixWorld), n.lookAt(ad), n.updateMatrixWorld(), id.multiplyMatrices(n.projectionMatrix, n.matrixWorldInverse), this._frustum.setFromProjectionMatrix(id), i.set(0.5, 0, 0, 0.5, 0, 0.5, 0, 0.5, 0, 0, 0.5, 0.5, 0, 0, 0, 1), i.multiply(n.projectionMatrix), i.multiply(n.matrixWorldInverse);
  }
  getViewport(e) {
    return this._viewports[e];
  }
  getFrameExtents() {
    return this._frameExtents;
  }
  dispose() {
    this.map && this.map.dispose(), this.mapPass && this.mapPass.dispose();
  }
  copy(e) {
    return this.camera = e.camera.clone(), this.bias = e.bias, this.radius = e.radius, this.mapSize.copy(e.mapSize), this;
  }
  clone() {
    return new this.constructor().copy(this);
  }
  toJSON() {
    const e = {};
    return this.bias !== 0 && (e.bias = this.bias), this.normalBias !== 0 && (e.normalBias = this.normalBias), this.radius !== 1 && (e.radius = this.radius), (this.mapSize.x !== 512 || this.mapSize.y !== 512) && (e.mapSize = this.mapSize.toArray()), e.camera = this.camera.toJSON(false).object, delete e.camera.matrix, e;
  }
}
class N1 extends B1 {
  constructor() {
    super(new Ri(50, 1, 0.5, 500)), this.isSpotLightShadow = true, this.focus = 1;
  }
  updateMatrices(e) {
    const n = this.camera, i = Fl * 2 * e.angle * this.focus, u = this.mapSize.width / this.mapSize.height, y = e.distance || n.far;
    (i !== n.fov || u !== n.aspect || y !== n.far) && (n.fov = i, n.aspect = u, n.far = y, n.updateProjectionMatrix()), super.updateMatrices(e);
  }
  copy(e) {
    return super.copy(e), this.focus = e.focus, this;
  }
}
class D1 extends Lm {
  constructor(e, n, i = 0, u = Math.PI / 3, y = 0, t = 1) {
    super(e, n), this.isSpotLight = true, this.type = "SpotLight", this.position.copy(wi.DefaultUp), this.updateMatrix(), this.target = new wi(), this.distance = i, this.angle = u, this.penumbra = y, this.decay = t, this.shadow = new N1();
  }
  get power() {
    return this.intensity * Math.PI;
  }
  set power(e) {
    this.intensity = e / Math.PI;
  }
  dispose() {
    this.shadow.dispose();
  }
  copy(e, n) {
    return super.copy(e, n), this.distance = e.distance, this.angle = e.angle, this.penumbra = e.penumbra, this.decay = e.decay, this.target = e.target.clone(), this.shadow = e.shadow.clone(), this;
  }
}
typeof __THREE_DEVTOOLS__ < "u" && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register", { detail: { revision: af } }));
typeof window < "u" && (window.__THREE__ ? console.warn("WARNING: Multiple instances of Three.js being imported.") : window.__THREE__ = af);
class Xi {
  constructor(e) {
    e === void 0 && (e = [0, 0, 0, 0, 0, 0, 0, 0, 0]), this.elements = e;
  }
  identity() {
    const e = this.elements;
    e[0] = 1, e[1] = 0, e[2] = 0, e[3] = 0, e[4] = 1, e[5] = 0, e[6] = 0, e[7] = 0, e[8] = 1;
  }
  setZero() {
    const e = this.elements;
    e[0] = 0, e[1] = 0, e[2] = 0, e[3] = 0, e[4] = 0, e[5] = 0, e[6] = 0, e[7] = 0, e[8] = 0;
  }
  setTrace(e) {
    const n = this.elements;
    n[0] = e.x, n[4] = e.y, n[8] = e.z;
  }
  getTrace(e) {
    e === void 0 && (e = new lt());
    const n = this.elements;
    return e.x = n[0], e.y = n[4], e.z = n[8], e;
  }
  vmult(e, n) {
    n === void 0 && (n = new lt());
    const i = this.elements, u = e.x, y = e.y, t = e.z;
    return n.x = i[0] * u + i[1] * y + i[2] * t, n.y = i[3] * u + i[4] * y + i[5] * t, n.z = i[6] * u + i[7] * y + i[8] * t, n;
  }
  smult(e) {
    for (let n = 0; n < this.elements.length; n++) this.elements[n] *= e;
  }
  mmult(e, n) {
    n === void 0 && (n = new Xi());
    const i = this.elements, u = e.elements, y = n.elements, t = i[0], o = i[1], s = i[2], c = i[3], h = i[4], f = i[5], r = i[6], m = i[7], g = i[8], a = u[0], l = u[1], d = u[2], b = u[3], S = u[4], E = u[5], R = u[6], k = u[7], w = u[8];
    return y[0] = t * a + o * b + s * R, y[1] = t * l + o * S + s * k, y[2] = t * d + o * E + s * w, y[3] = c * a + h * b + f * R, y[4] = c * l + h * S + f * k, y[5] = c * d + h * E + f * w, y[6] = r * a + m * b + g * R, y[7] = r * l + m * S + g * k, y[8] = r * d + m * E + g * w, n;
  }
  scale(e, n) {
    n === void 0 && (n = new Xi());
    const i = this.elements, u = n.elements;
    for (let y = 0; y !== 3; y++) u[3 * y + 0] = e.x * i[3 * y + 0], u[3 * y + 1] = e.y * i[3 * y + 1], u[3 * y + 2] = e.z * i[3 * y + 2];
    return n;
  }
  solve(e, n) {
    n === void 0 && (n = new lt());
    const i = 3, u = 4, y = [];
    let t, o;
    for (t = 0; t < i * u; t++) y.push(0);
    for (t = 0; t < 3; t++) for (o = 0; o < 3; o++) y[t + u * o] = this.elements[t + 3 * o];
    y[3 + 4 * 0] = e.x, y[3 + 4 * 1] = e.y, y[3 + 4 * 2] = e.z;
    let s = 3;
    const c = s;
    let h;
    const f = 4;
    let r;
    do {
      if (t = c - s, y[t + u * t] === 0) {
        for (o = t + 1; o < c; o++) if (y[t + u * o] !== 0) {
          h = f;
          do
            r = f - h, y[r + u * t] += y[r + u * o];
          while (--h);
          break;
        }
      }
      if (y[t + u * t] !== 0) for (o = t + 1; o < c; o++) {
        const m = y[t + u * o] / y[t + u * t];
        h = f;
        do
          r = f - h, y[r + u * o] = r <= t ? 0 : y[r + u * o] - y[r + u * t] * m;
        while (--h);
      }
    } while (--s);
    if (n.z = y[2 * u + 3] / y[2 * u + 2], n.y = (y[1 * u + 3] - y[1 * u + 2] * n.z) / y[1 * u + 1], n.x = (y[0 * u + 3] - y[0 * u + 2] * n.z - y[0 * u + 1] * n.y) / y[0 * u + 0], isNaN(n.x) || isNaN(n.y) || isNaN(n.z) || n.x === 1 / 0 || n.y === 1 / 0 || n.z === 1 / 0) throw `Could not solve equation! Got x=[${n.toString()}], b=[${e.toString()}], A=[${this.toString()}]`;
    return n;
  }
  e(e, n, i) {
    if (i === void 0) return this.elements[n + 3 * e];
    this.elements[n + 3 * e] = i;
  }
  copy(e) {
    for (let n = 0; n < e.elements.length; n++) this.elements[n] = e.elements[n];
    return this;
  }
  toString() {
    let e = "";
    const n = ",";
    for (let i = 0; i < 9; i++) e += this.elements[i] + n;
    return e;
  }
  reverse(e) {
    e === void 0 && (e = new Xi());
    const n = 3, i = 6, u = F1;
    let y, t;
    for (y = 0; y < 3; y++) for (t = 0; t < 3; t++) u[y + i * t] = this.elements[y + 3 * t];
    u[3 + 6 * 0] = 1, u[3 + 6 * 1] = 0, u[3 + 6 * 2] = 0, u[4 + 6 * 0] = 0, u[4 + 6 * 1] = 1, u[4 + 6 * 2] = 0, u[5 + 6 * 0] = 0, u[5 + 6 * 1] = 0, u[5 + 6 * 2] = 1;
    let o = 3;
    const s = o;
    let c;
    const h = i;
    let f;
    do {
      if (y = s - o, u[y + i * y] === 0) {
        for (t = y + 1; t < s; t++) if (u[y + i * t] !== 0) {
          c = h;
          do
            f = h - c, u[f + i * y] += u[f + i * t];
          while (--c);
          break;
        }
      }
      if (u[y + i * y] !== 0) for (t = y + 1; t < s; t++) {
        const r = u[y + i * t] / u[y + i * y];
        c = h;
        do
          f = h - c, u[f + i * t] = f <= y ? 0 : u[f + i * t] - u[f + i * y] * r;
        while (--c);
      }
    } while (--o);
    y = 2;
    do {
      t = y - 1;
      do {
        const r = u[y + i * t] / u[y + i * y];
        c = i;
        do
          f = i - c, u[f + i * t] = u[f + i * t] - u[f + i * y] * r;
        while (--c);
      } while (t--);
    } while (--y);
    y = 2;
    do {
      const r = 1 / u[y + i * y];
      c = i;
      do
        f = i - c, u[f + i * y] = u[f + i * y] * r;
      while (--c);
    } while (y--);
    y = 2;
    do {
      t = 2;
      do {
        if (f = u[n + t + i * y], isNaN(f) || f === 1 / 0) throw `Could not reverse! A=[${this.toString()}]`;
        e.e(y, t, f);
      } while (t--);
    } while (y--);
    return e;
  }
  setRotationFromQuaternion(e) {
    const n = e.x, i = e.y, u = e.z, y = e.w, t = n + n, o = i + i, s = u + u, c = n * t, h = n * o, f = n * s, r = i * o, m = i * s, g = u * s, a = y * t, l = y * o, d = y * s, b = this.elements;
    return b[3 * 0 + 0] = 1 - (r + g), b[3 * 0 + 1] = h - d, b[3 * 0 + 2] = f + l, b[3 * 1 + 0] = h + d, b[3 * 1 + 1] = 1 - (c + g), b[3 * 1 + 2] = m - a, b[3 * 2 + 0] = f - l, b[3 * 2 + 1] = m + a, b[3 * 2 + 2] = 1 - (c + r), this;
  }
  transpose(e) {
    e === void 0 && (e = new Xi());
    const n = this.elements, i = e.elements;
    let u;
    return i[0] = n[0], i[4] = n[4], i[8] = n[8], u = n[1], i[1] = n[3], i[3] = u, u = n[2], i[2] = n[6], i[6] = u, u = n[5], i[5] = n[7], i[7] = u, e;
  }
}
const F1 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
class lt {
  constructor(e, n, i) {
    e === void 0 && (e = 0), n === void 0 && (n = 0), i === void 0 && (i = 0), this.x = e, this.y = n, this.z = i;
  }
  cross(e, n) {
    n === void 0 && (n = new lt());
    const i = e.x, u = e.y, y = e.z, t = this.x, o = this.y, s = this.z;
    return n.x = o * y - s * u, n.y = s * i - t * y, n.z = t * u - o * i, n;
  }
  set(e, n, i) {
    return this.x = e, this.y = n, this.z = i, this;
  }
  setZero() {
    this.x = this.y = this.z = 0;
  }
  vadd(e, n) {
    if (n) n.x = e.x + this.x, n.y = e.y + this.y, n.z = e.z + this.z;
    else return new lt(this.x + e.x, this.y + e.y, this.z + e.z);
  }
  vsub(e, n) {
    if (n) n.x = this.x - e.x, n.y = this.y - e.y, n.z = this.z - e.z;
    else return new lt(this.x - e.x, this.y - e.y, this.z - e.z);
  }
  crossmat() {
    return new Xi([0, -this.z, this.y, this.z, 0, -this.x, -this.y, this.x, 0]);
  }
  normalize() {
    const e = this.x, n = this.y, i = this.z, u = Math.sqrt(e * e + n * n + i * i);
    if (u > 0) {
      const y = 1 / u;
      this.x *= y, this.y *= y, this.z *= y;
    } else this.x = 0, this.y = 0, this.z = 0;
    return u;
  }
  unit(e) {
    e === void 0 && (e = new lt());
    const n = this.x, i = this.y, u = this.z;
    let y = Math.sqrt(n * n + i * i + u * u);
    return y > 0 ? (y = 1 / y, e.x = n * y, e.y = i * y, e.z = u * y) : (e.x = 1, e.y = 0, e.z = 0), e;
  }
  length() {
    const e = this.x, n = this.y, i = this.z;
    return Math.sqrt(e * e + n * n + i * i);
  }
  lengthSquared() {
    return this.dot(this);
  }
  distanceTo(e) {
    const n = this.x, i = this.y, u = this.z, y = e.x, t = e.y, o = e.z;
    return Math.sqrt((y - n) * (y - n) + (t - i) * (t - i) + (o - u) * (o - u));
  }
  distanceSquared(e) {
    const n = this.x, i = this.y, u = this.z, y = e.x, t = e.y, o = e.z;
    return (y - n) * (y - n) + (t - i) * (t - i) + (o - u) * (o - u);
  }
  scale(e, n) {
    n === void 0 && (n = new lt());
    const i = this.x, u = this.y, y = this.z;
    return n.x = e * i, n.y = e * u, n.z = e * y, n;
  }
  vmul(e, n) {
    return n === void 0 && (n = new lt()), n.x = e.x * this.x, n.y = e.y * this.y, n.z = e.z * this.z, n;
  }
  addScaledVector(e, n, i) {
    return i === void 0 && (i = new lt()), i.x = this.x + e * n.x, i.y = this.y + e * n.y, i.z = this.z + e * n.z, i;
  }
  dot(e) {
    return this.x * e.x + this.y * e.y + this.z * e.z;
  }
  isZero() {
    return this.x === 0 && this.y === 0 && this.z === 0;
  }
  negate(e) {
    return e === void 0 && (e = new lt()), e.x = -this.x, e.y = -this.y, e.z = -this.z, e;
  }
  tangents(e, n) {
    const i = this.length();
    if (i > 0) {
      const u = U1, y = 1 / i;
      u.set(this.x * y, this.y * y, this.z * y);
      const t = j1;
      Math.abs(u.x) < 0.9 ? (t.set(1, 0, 0), u.cross(t, e)) : (t.set(0, 1, 0), u.cross(t, e)), u.cross(e, n);
    } else e.set(1, 0, 0), n.set(0, 1, 0);
  }
  toString() {
    return `${this.x},${this.y},${this.z}`;
  }
  toArray() {
    return [this.x, this.y, this.z];
  }
  copy(e) {
    return this.x = e.x, this.y = e.y, this.z = e.z, this;
  }
  lerp(e, n, i) {
    const u = this.x, y = this.y, t = this.z;
    i.x = u + (e.x - u) * n, i.y = y + (e.y - y) * n, i.z = t + (e.z - t) * n;
  }
  almostEquals(e, n) {
    return n === void 0 && (n = 1e-6), !(Math.abs(this.x - e.x) > n || Math.abs(this.y - e.y) > n || Math.abs(this.z - e.z) > n);
  }
  almostZero(e) {
    return e === void 0 && (e = 1e-6), !(Math.abs(this.x) > e || Math.abs(this.y) > e || Math.abs(this.z) > e);
  }
  isAntiparallelTo(e, n) {
    return this.negate(sd), sd.almostEquals(e, n);
  }
  clone() {
    return new lt(this.x, this.y, this.z);
  }
}
lt.ZERO = new lt(0, 0, 0);
lt.UNIT_X = new lt(1, 0, 0);
lt.UNIT_Y = new lt(0, 1, 0);
lt.UNIT_Z = new lt(0, 0, 1);
const U1 = new lt(), j1 = new lt(), sd = new lt();
class Li {
  constructor(e) {
    e === void 0 && (e = {}), this.lowerBound = new lt(), this.upperBound = new lt(), e.lowerBound && this.lowerBound.copy(e.lowerBound), e.upperBound && this.upperBound.copy(e.upperBound);
  }
  setFromPoints(e, n, i, u) {
    const y = this.lowerBound, t = this.upperBound, o = i;
    y.copy(e[0]), o && o.vmult(y, y), t.copy(y);
    for (let s = 1; s < e.length; s++) {
      let c = e[s];
      o && (o.vmult(c, ud), c = ud), c.x > t.x && (t.x = c.x), c.x < y.x && (y.x = c.x), c.y > t.y && (t.y = c.y), c.y < y.y && (y.y = c.y), c.z > t.z && (t.z = c.z), c.z < y.z && (y.z = c.z);
    }
    return n && (n.vadd(y, y), n.vadd(t, t)), u && (y.x -= u, y.y -= u, y.z -= u, t.x += u, t.y += u, t.z += u), this;
  }
  copy(e) {
    return this.lowerBound.copy(e.lowerBound), this.upperBound.copy(e.upperBound), this;
  }
  clone() {
    return new Li().copy(this);
  }
  extend(e) {
    this.lowerBound.x = Math.min(this.lowerBound.x, e.lowerBound.x), this.upperBound.x = Math.max(this.upperBound.x, e.upperBound.x), this.lowerBound.y = Math.min(this.lowerBound.y, e.lowerBound.y), this.upperBound.y = Math.max(this.upperBound.y, e.upperBound.y), this.lowerBound.z = Math.min(this.lowerBound.z, e.lowerBound.z), this.upperBound.z = Math.max(this.upperBound.z, e.upperBound.z);
  }
  overlaps(e) {
    const n = this.lowerBound, i = this.upperBound, u = e.lowerBound, y = e.upperBound, t = u.x <= i.x && i.x <= y.x || n.x <= y.x && y.x <= i.x, o = u.y <= i.y && i.y <= y.y || n.y <= y.y && y.y <= i.y, s = u.z <= i.z && i.z <= y.z || n.z <= y.z && y.z <= i.z;
    return t && o && s;
  }
  volume() {
    const e = this.lowerBound, n = this.upperBound;
    return (n.x - e.x) * (n.y - e.y) * (n.z - e.z);
  }
  contains(e) {
    const n = this.lowerBound, i = this.upperBound, u = e.lowerBound, y = e.upperBound;
    return n.x <= u.x && i.x >= y.x && n.y <= u.y && i.y >= y.y && n.z <= u.z && i.z >= y.z;
  }
  getCorners(e, n, i, u, y, t, o, s) {
    const c = this.lowerBound, h = this.upperBound;
    e.copy(c), n.set(h.x, c.y, c.z), i.set(h.x, h.y, c.z), u.set(c.x, h.y, h.z), y.set(h.x, c.y, h.z), t.set(c.x, h.y, c.z), o.set(c.x, c.y, h.z), s.copy(h);
  }
  toLocalFrame(e, n) {
    const i = cd, u = i[0], y = i[1], t = i[2], o = i[3], s = i[4], c = i[5], h = i[6], f = i[7];
    this.getCorners(u, y, t, o, s, c, h, f);
    for (let r = 0; r !== 8; r++) {
      const m = i[r];
      e.pointToLocal(m, m);
    }
    return n.setFromPoints(i);
  }
  toWorldFrame(e, n) {
    const i = cd, u = i[0], y = i[1], t = i[2], o = i[3], s = i[4], c = i[5], h = i[6], f = i[7];
    this.getCorners(u, y, t, o, s, c, h, f);
    for (let r = 0; r !== 8; r++) {
      const m = i[r];
      e.pointToWorld(m, m);
    }
    return n.setFromPoints(i);
  }
  overlapsRay(e) {
    const { direction: n, from: i } = e, u = 1 / n.x, y = 1 / n.y, t = 1 / n.z, o = (this.lowerBound.x - i.x) * u, s = (this.upperBound.x - i.x) * u, c = (this.lowerBound.y - i.y) * y, h = (this.upperBound.y - i.y) * y, f = (this.lowerBound.z - i.z) * t, r = (this.upperBound.z - i.z) * t, m = Math.max(Math.max(Math.min(o, s), Math.min(c, h)), Math.min(f, r)), g = Math.min(Math.min(Math.max(o, s), Math.max(c, h)), Math.max(f, r));
    return !(g < 0 || m > g);
  }
}
const ud = new lt(), cd = [new lt(), new lt(), new lt(), new lt(), new lt(), new lt(), new lt(), new lt()];
class ld {
  constructor() {
    this.matrix = [];
  }
  get(e, n) {
    let { index: i } = e, { index: u } = n;
    if (u > i) {
      const y = u;
      u = i, i = y;
    }
    return this.matrix[(i * (i + 1) >> 1) + u - 1];
  }
  set(e, n, i) {
    let { index: u } = e, { index: y } = n;
    if (y > u) {
      const t = y;
      y = u, u = t;
    }
    this.matrix[(u * (u + 1) >> 1) + y - 1] = i ? 1 : 0;
  }
  reset() {
    for (let e = 0, n = this.matrix.length; e !== n; e++) this.matrix[e] = 0;
  }
  setNumObjects(e) {
    this.matrix.length = e * (e - 1) >> 1;
  }
}
class Bm {
  addEventListener(e, n) {
    this._listeners === void 0 && (this._listeners = {});
    const i = this._listeners;
    return i[e] === void 0 && (i[e] = []), i[e].includes(n) || i[e].push(n), this;
  }
  hasEventListener(e, n) {
    if (this._listeners === void 0) return false;
    const i = this._listeners;
    return !!(i[e] !== void 0 && i[e].includes(n));
  }
  hasAnyEventListener(e) {
    return this._listeners === void 0 ? false : this._listeners[e] !== void 0;
  }
  removeEventListener(e, n) {
    if (this._listeners === void 0) return this;
    const i = this._listeners;
    if (i[e] === void 0) return this;
    const u = i[e].indexOf(n);
    return u !== -1 && i[e].splice(u, 1), this;
  }
  dispatchEvent(e) {
    if (this._listeners === void 0) return this;
    const n = this._listeners[e.type];
    if (n !== void 0) {
      e.target = this;
      for (let i = 0, u = n.length; i < u; i++) n[i].call(this, e);
    }
    return this;
  }
}
class ti {
  constructor(e, n, i, u) {
    e === void 0 && (e = 0), n === void 0 && (n = 0), i === void 0 && (i = 0), u === void 0 && (u = 1), this.x = e, this.y = n, this.z = i, this.w = u;
  }
  set(e, n, i, u) {
    return this.x = e, this.y = n, this.z = i, this.w = u, this;
  }
  toString() {
    return `${this.x},${this.y},${this.z},${this.w}`;
  }
  toArray() {
    return [this.x, this.y, this.z, this.w];
  }
  setFromAxisAngle(e, n) {
    const i = Math.sin(n * 0.5);
    return this.x = e.x * i, this.y = e.y * i, this.z = e.z * i, this.w = Math.cos(n * 0.5), this;
  }
  toAxisAngle(e) {
    e === void 0 && (e = new lt()), this.normalize();
    const n = 2 * Math.acos(this.w), i = Math.sqrt(1 - this.w * this.w);
    return i < 1e-3 ? (e.x = this.x, e.y = this.y, e.z = this.z) : (e.x = this.x / i, e.y = this.y / i, e.z = this.z / i), [e, n];
  }
  setFromVectors(e, n) {
    if (e.isAntiparallelTo(n)) {
      const i = V1, u = q1;
      e.tangents(i, u), this.setFromAxisAngle(i, Math.PI);
    } else {
      const i = e.cross(n);
      this.x = i.x, this.y = i.y, this.z = i.z, this.w = Math.sqrt(e.length() ** 2 * n.length() ** 2) + e.dot(n), this.normalize();
    }
    return this;
  }
  mult(e, n) {
    n === void 0 && (n = new ti());
    const i = this.x, u = this.y, y = this.z, t = this.w, o = e.x, s = e.y, c = e.z, h = e.w;
    return n.x = i * h + t * o + u * c - y * s, n.y = u * h + t * s + y * o - i * c, n.z = y * h + t * c + i * s - u * o, n.w = t * h - i * o - u * s - y * c, n;
  }
  inverse(e) {
    e === void 0 && (e = new ti());
    const n = this.x, i = this.y, u = this.z, y = this.w;
    this.conjugate(e);
    const t = 1 / (n * n + i * i + u * u + y * y);
    return e.x *= t, e.y *= t, e.z *= t, e.w *= t, e;
  }
  conjugate(e) {
    return e === void 0 && (e = new ti()), e.x = -this.x, e.y = -this.y, e.z = -this.z, e.w = this.w, e;
  }
  normalize() {
    let e = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
    return e === 0 ? (this.x = 0, this.y = 0, this.z = 0, this.w = 0) : (e = 1 / e, this.x *= e, this.y *= e, this.z *= e, this.w *= e), this;
  }
  normalizeFast() {
    const e = (3 - (this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w)) / 2;
    return e === 0 ? (this.x = 0, this.y = 0, this.z = 0, this.w = 0) : (this.x *= e, this.y *= e, this.z *= e, this.w *= e), this;
  }
  vmult(e, n) {
    n === void 0 && (n = new lt());
    const i = e.x, u = e.y, y = e.z, t = this.x, o = this.y, s = this.z, c = this.w, h = c * i + o * y - s * u, f = c * u + s * i - t * y, r = c * y + t * u - o * i, m = -t * i - o * u - s * y;
    return n.x = h * c + m * -t + f * -s - r * -o, n.y = f * c + m * -o + r * -t - h * -s, n.z = r * c + m * -s + h * -o - f * -t, n;
  }
  copy(e) {
    return this.x = e.x, this.y = e.y, this.z = e.z, this.w = e.w, this;
  }
  toEuler(e, n) {
    n === void 0 && (n = "YZX");
    let i, u, y;
    const t = this.x, o = this.y, s = this.z, c = this.w;
    switch (n) {
      case "YZX":
        const h = t * o + s * c;
        if (h > 0.499 && (i = 2 * Math.atan2(t, c), u = Math.PI / 2, y = 0), h < -0.499 && (i = -2 * Math.atan2(t, c), u = -Math.PI / 2, y = 0), i === void 0) {
          const f = t * t, r = o * o, m = s * s;
          i = Math.atan2(2 * o * c - 2 * t * s, 1 - 2 * r - 2 * m), u = Math.asin(2 * h), y = Math.atan2(2 * t * c - 2 * o * s, 1 - 2 * f - 2 * m);
        }
        break;
      default:
        throw new Error(`Euler order ${n} not supported yet.`);
    }
    e.y = i, e.z = u, e.x = y;
  }
  setFromEuler(e, n, i, u) {
    u === void 0 && (u = "XYZ");
    const y = Math.cos(e / 2), t = Math.cos(n / 2), o = Math.cos(i / 2), s = Math.sin(e / 2), c = Math.sin(n / 2), h = Math.sin(i / 2);
    return u === "XYZ" ? (this.x = s * t * o + y * c * h, this.y = y * c * o - s * t * h, this.z = y * t * h + s * c * o, this.w = y * t * o - s * c * h) : u === "YXZ" ? (this.x = s * t * o + y * c * h, this.y = y * c * o - s * t * h, this.z = y * t * h - s * c * o, this.w = y * t * o + s * c * h) : u === "ZXY" ? (this.x = s * t * o - y * c * h, this.y = y * c * o + s * t * h, this.z = y * t * h + s * c * o, this.w = y * t * o - s * c * h) : u === "ZYX" ? (this.x = s * t * o - y * c * h, this.y = y * c * o + s * t * h, this.z = y * t * h - s * c * o, this.w = y * t * o + s * c * h) : u === "YZX" ? (this.x = s * t * o + y * c * h, this.y = y * c * o + s * t * h, this.z = y * t * h - s * c * o, this.w = y * t * o - s * c * h) : u === "XZY" && (this.x = s * t * o - y * c * h, this.y = y * c * o - s * t * h, this.z = y * t * h + s * c * o, this.w = y * t * o + s * c * h), this;
  }
  clone() {
    return new ti(this.x, this.y, this.z, this.w);
  }
  slerp(e, n, i) {
    i === void 0 && (i = new ti());
    const u = this.x, y = this.y, t = this.z, o = this.w;
    let s = e.x, c = e.y, h = e.z, f = e.w, r, m, g, a, l;
    return m = u * s + y * c + t * h + o * f, m < 0 && (m = -m, s = -s, c = -c, h = -h, f = -f), 1 - m > 1e-6 ? (r = Math.acos(m), g = Math.sin(r), a = Math.sin((1 - n) * r) / g, l = Math.sin(n * r) / g) : (a = 1 - n, l = n), i.x = a * u + l * s, i.y = a * y + l * c, i.z = a * t + l * h, i.w = a * o + l * f, i;
  }
  integrate(e, n, i, u) {
    u === void 0 && (u = new ti());
    const y = e.x * i.x, t = e.y * i.y, o = e.z * i.z, s = this.x, c = this.y, h = this.z, f = this.w, r = n * 0.5;
    return u.x += r * (y * f + t * h - o * c), u.y += r * (t * f + o * s - y * h), u.z += r * (o * f + y * c - t * s), u.w += r * (-y * s - t * c - o * h), u;
  }
}
const V1 = new lt(), q1 = new lt(), z1 = { SPHERE: 1, PLANE: 2, BOX: 4, COMPOUND: 8, CONVEXPOLYHEDRON: 16, HEIGHTFIELD: 32, PARTICLE: 64, CYLINDER: 128, TRIMESH: 256 };
class hn {
  constructor(e) {
    e === void 0 && (e = {}), this.id = hn.idCounter++, this.type = e.type || 0, this.boundingSphereRadius = 0, this.collisionResponse = e.collisionResponse ? e.collisionResponse : true, this.collisionFilterGroup = e.collisionFilterGroup !== void 0 ? e.collisionFilterGroup : 1, this.collisionFilterMask = e.collisionFilterMask !== void 0 ? e.collisionFilterMask : -1, this.material = e.material ? e.material : null, this.body = null;
  }
  updateBoundingSphereRadius() {
    throw `computeBoundingSphereRadius() not implemented for shape type ${this.type}`;
  }
  volume() {
    throw `volume() not implemented for shape type ${this.type}`;
  }
  calculateLocalInertia(e, n) {
    throw `calculateLocalInertia() not implemented for shape type ${this.type}`;
  }
  calculateWorldAABB(e, n, i, u) {
    throw `calculateWorldAABB() not implemented for shape type ${this.type}`;
  }
}
hn.idCounter = 0;
hn.types = z1;
class Fn {
  constructor(e) {
    e === void 0 && (e = {}), this.position = new lt(), this.quaternion = new ti(), e.position && this.position.copy(e.position), e.quaternion && this.quaternion.copy(e.quaternion);
  }
  pointToLocal(e, n) {
    return Fn.pointToLocalFrame(this.position, this.quaternion, e, n);
  }
  pointToWorld(e, n) {
    return Fn.pointToWorldFrame(this.position, this.quaternion, e, n);
  }
  vectorToWorldFrame(e, n) {
    return n === void 0 && (n = new lt()), this.quaternion.vmult(e, n), n;
  }
  static pointToLocalFrame(e, n, i, u) {
    return u === void 0 && (u = new lt()), i.vsub(e, u), n.conjugate(fd), fd.vmult(u, u), u;
  }
  static pointToWorldFrame(e, n, i, u) {
    return u === void 0 && (u = new lt()), n.vmult(i, u), u.vadd(e, u), u;
  }
  static vectorToWorldFrame(e, n, i) {
    return i === void 0 && (i = new lt()), e.vmult(n, i), i;
  }
  static vectorToLocalFrame(e, n, i, u) {
    return u === void 0 && (u = new lt()), n.w *= -1, n.vmult(i, u), n.w *= -1, u;
  }
}
const fd = new ti();
class ta extends hn {
  constructor(e) {
    e === void 0 && (e = {});
    const { vertices: n = [], faces: i = [], normals: u = [], axes: y, boundingSphereRadius: t } = e;
    super({ type: hn.types.CONVEXPOLYHEDRON }), this.vertices = n, this.faces = i, this.faceNormals = u, this.faceNormals.length === 0 && this.computeNormals(), t ? this.boundingSphereRadius = t : this.updateBoundingSphereRadius(), this.worldVertices = [], this.worldVerticesNeedsUpdate = true, this.worldFaceNormals = [], this.worldFaceNormalsNeedsUpdate = true, this.uniqueAxes = y ? y.slice() : null, this.uniqueEdges = [], this.computeEdges();
  }
  computeEdges() {
    const e = this.faces, n = this.vertices, i = this.uniqueEdges;
    i.length = 0;
    const u = new lt();
    for (let y = 0; y !== e.length; y++) {
      const t = e[y], o = t.length;
      for (let s = 0; s !== o; s++) {
        const c = (s + 1) % o;
        n[t[s]].vsub(n[t[c]], u), u.normalize();
        let h = false;
        for (let f = 0; f !== i.length; f++) if (i[f].almostEquals(u) || i[f].almostEquals(u)) {
          h = true;
          break;
        }
        h || i.push(u.clone());
      }
    }
  }
  computeNormals() {
    this.faceNormals.length = this.faces.length;
    for (let e = 0; e < this.faces.length; e++) {
      for (let u = 0; u < this.faces[e].length; u++) if (!this.vertices[this.faces[e][u]]) throw new Error(`Vertex ${this.faces[e][u]} not found!`);
      const n = this.faceNormals[e] || new lt();
      this.getFaceNormal(e, n), n.negate(n), this.faceNormals[e] = n;
      const i = this.vertices[this.faces[e][0]];
      if (n.dot(i) < 0) {
        console.error(`.faceNormals[${e}] = Vec3(${n.toString()}) looks like it points into the shape? The vertices follow. Make sure they are ordered CCW around the normal, using the right hand rule.`);
        for (let u = 0; u < this.faces[e].length; u++) console.warn(`.vertices[${this.faces[e][u]}] = Vec3(${this.vertices[this.faces[e][u]].toString()})`);
      }
    }
  }
  getFaceNormal(e, n) {
    const i = this.faces[e], u = this.vertices[i[0]], y = this.vertices[i[1]], t = this.vertices[i[2]];
    ta.computeNormal(u, y, t, n);
  }
  static computeNormal(e, n, i, u) {
    const y = new lt(), t = new lt();
    n.vsub(e, t), i.vsub(n, y), y.cross(t, u), u.isZero() || u.normalize();
  }
  clipAgainstHull(e, n, i, u, y, t, o, s, c) {
    const h = new lt();
    let f = -1, r = -Number.MAX_VALUE;
    for (let g = 0; g < i.faces.length; g++) {
      h.copy(i.faceNormals[g]), y.vmult(h, h);
      const a = h.dot(t);
      a > r && (r = a, f = g);
    }
    const m = [];
    for (let g = 0; g < i.faces[f].length; g++) {
      const a = i.vertices[i.faces[f][g]], l = new lt();
      l.copy(a), y.vmult(l, l), u.vadd(l, l), m.push(l);
    }
    f >= 0 && this.clipFaceAgainstHull(t, e, n, m, o, s, c);
  }
  findSeparatingAxis(e, n, i, u, y, t, o, s) {
    const c = new lt(), h = new lt(), f = new lt(), r = new lt(), m = new lt(), g = new lt();
    let a = Number.MAX_VALUE;
    const l = this;
    if (l.uniqueAxes) for (let d = 0; d !== l.uniqueAxes.length; d++) {
      i.vmult(l.uniqueAxes[d], c);
      const b = l.testSepAxis(c, e, n, i, u, y);
      if (b === false) return false;
      b < a && (a = b, t.copy(c));
    }
    else {
      const d = o ? o.length : l.faces.length;
      for (let b = 0; b < d; b++) {
        const S = o ? o[b] : b;
        c.copy(l.faceNormals[S]), i.vmult(c, c);
        const E = l.testSepAxis(c, e, n, i, u, y);
        if (E === false) return false;
        E < a && (a = E, t.copy(c));
      }
    }
    if (e.uniqueAxes) for (let d = 0; d !== e.uniqueAxes.length; d++) {
      y.vmult(e.uniqueAxes[d], h);
      const b = l.testSepAxis(h, e, n, i, u, y);
      if (b === false) return false;
      b < a && (a = b, t.copy(h));
    }
    else {
      const d = s ? s.length : e.faces.length;
      for (let b = 0; b < d; b++) {
        const S = s ? s[b] : b;
        h.copy(e.faceNormals[S]), y.vmult(h, h);
        const E = l.testSepAxis(h, e, n, i, u, y);
        if (E === false) return false;
        E < a && (a = E, t.copy(h));
      }
    }
    for (let d = 0; d !== l.uniqueEdges.length; d++) {
      i.vmult(l.uniqueEdges[d], r);
      for (let b = 0; b !== e.uniqueEdges.length; b++) if (y.vmult(e.uniqueEdges[b], m), r.cross(m, g), !g.almostZero()) {
        g.normalize();
        const S = l.testSepAxis(g, e, n, i, u, y);
        if (S === false) return false;
        S < a && (a = S, t.copy(g));
      }
    }
    return u.vsub(n, f), f.dot(t) > 0 && t.negate(t), true;
  }
  testSepAxis(e, n, i, u, y, t) {
    const o = this;
    ta.project(o, e, i, u, Tl), ta.project(n, e, y, t, kl);
    const s = Tl[0], c = Tl[1], h = kl[0], f = kl[1];
    if (s < f || h < c) return false;
    const r = s - f, m = h - c;
    return r < m ? r : m;
  }
  calculateLocalInertia(e, n) {
    const i = new lt(), u = new lt();
    this.computeLocalAABB(u, i);
    const y = i.x - u.x, t = i.y - u.y, o = i.z - u.z;
    n.x = 1 / 12 * e * (2 * t * 2 * t + 2 * o * 2 * o), n.y = 1 / 12 * e * (2 * y * 2 * y + 2 * o * 2 * o), n.z = 1 / 12 * e * (2 * t * 2 * t + 2 * y * 2 * y);
  }
  getPlaneConstantOfFace(e) {
    const n = this.faces[e], i = this.faceNormals[e], u = this.vertices[n[0]];
    return -i.dot(u);
  }
  clipFaceAgainstHull(e, n, i, u, y, t, o) {
    const s = new lt(), c = new lt(), h = new lt(), f = new lt(), r = new lt(), m = new lt(), g = new lt(), a = new lt(), l = this, d = [], b = u, S = d;
    let E = -1, R = Number.MAX_VALUE;
    for (let q = 0; q < l.faces.length; q++) {
      s.copy(l.faceNormals[q]), i.vmult(s, s);
      const N = s.dot(e);
      N < R && (R = N, E = q);
    }
    if (E < 0) return;
    const k = l.faces[E];
    k.connectedFaces = [];
    for (let q = 0; q < l.faces.length; q++) for (let N = 0; N < l.faces[q].length; N++) k.indexOf(l.faces[q][N]) !== -1 && q !== E && k.connectedFaces.indexOf(q) === -1 && k.connectedFaces.push(q);
    const w = k.length;
    for (let q = 0; q < w; q++) {
      const N = l.vertices[k[q]], H = l.vertices[k[(q + 1) % w]];
      N.vsub(H, c), h.copy(c), i.vmult(h, h), n.vadd(h, h), f.copy(this.faceNormals[E]), i.vmult(f, f), n.vadd(f, f), h.cross(f, r), r.negate(r), m.copy(N), i.vmult(m, m), n.vadd(m, m);
      const _ = k.connectedFaces[q];
      g.copy(this.faceNormals[_]);
      const x = this.getPlaneConstantOfFace(_);
      a.copy(g), i.vmult(a, a);
      const L = x - a.dot(n);
      for (this.clipFaceAgainstPlane(b, S, a, L); b.length; ) b.shift();
      for (; S.length; ) b.push(S.shift());
    }
    g.copy(this.faceNormals[E]);
    const F = this.getPlaneConstantOfFace(E);
    a.copy(g), i.vmult(a, a);
    const I = F - a.dot(n);
    for (let q = 0; q < b.length; q++) {
      let N = a.dot(b[q]) + I;
      if (N <= y && (N = y), N <= t) {
        const H = b[q];
        if (N <= 1e-6) {
          const _ = { point: H, normal: a, depth: N };
          o.push(_);
        }
      }
    }
  }
  clipFaceAgainstPlane(e, n, i, u) {
    let y, t;
    const o = e.length;
    if (o < 2) return n;
    let s = e[e.length - 1], c = e[0];
    y = i.dot(s) + u;
    for (let h = 0; h < o; h++) {
      if (c = e[h], t = i.dot(c) + u, y < 0) if (t < 0) {
        const f = new lt();
        f.copy(c), n.push(f);
      } else {
        const f = new lt();
        s.lerp(c, y / (y - t), f), n.push(f);
      }
      else if (t < 0) {
        const f = new lt();
        s.lerp(c, y / (y - t), f), n.push(f), n.push(c);
      }
      s = c, y = t;
    }
    return n;
  }
  computeWorldVertices(e, n) {
    for (; this.worldVertices.length < this.vertices.length; ) this.worldVertices.push(new lt());
    const i = this.vertices, u = this.worldVertices;
    for (let y = 0; y !== this.vertices.length; y++) n.vmult(i[y], u[y]), e.vadd(u[y], u[y]);
    this.worldVerticesNeedsUpdate = false;
  }
  computeLocalAABB(e, n) {
    const i = this.vertices;
    e.set(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE), n.set(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE);
    for (let u = 0; u < this.vertices.length; u++) {
      const y = i[u];
      y.x < e.x ? e.x = y.x : y.x > n.x && (n.x = y.x), y.y < e.y ? e.y = y.y : y.y > n.y && (n.y = y.y), y.z < e.z ? e.z = y.z : y.z > n.z && (n.z = y.z);
    }
  }
  computeWorldFaceNormals(e) {
    const n = this.faceNormals.length;
    for (; this.worldFaceNormals.length < n; ) this.worldFaceNormals.push(new lt());
    const i = this.faceNormals, u = this.worldFaceNormals;
    for (let y = 0; y !== n; y++) e.vmult(i[y], u[y]);
    this.worldFaceNormalsNeedsUpdate = false;
  }
  updateBoundingSphereRadius() {
    let e = 0;
    const n = this.vertices;
    for (let i = 0; i !== n.length; i++) {
      const u = n[i].lengthSquared();
      u > e && (e = u);
    }
    this.boundingSphereRadius = Math.sqrt(e);
  }
  calculateWorldAABB(e, n, i, u) {
    const y = this.vertices;
    let t, o, s, c, h, f, r = new lt();
    for (let m = 0; m < y.length; m++) {
      r.copy(y[m]), n.vmult(r, r), e.vadd(r, r);
      const g = r;
      (t === void 0 || g.x < t) && (t = g.x), (c === void 0 || g.x > c) && (c = g.x), (o === void 0 || g.y < o) && (o = g.y), (h === void 0 || g.y > h) && (h = g.y), (s === void 0 || g.z < s) && (s = g.z), (f === void 0 || g.z > f) && (f = g.z);
    }
    i.set(t, o, s), u.set(c, h, f);
  }
  volume() {
    return 4 * Math.PI * this.boundingSphereRadius / 3;
  }
  getAveragePointLocal(e) {
    e === void 0 && (e = new lt());
    const n = this.vertices;
    for (let i = 0; i < n.length; i++) e.vadd(n[i], e);
    return e.scale(1 / n.length, e), e;
  }
  transformAllPoints(e, n) {
    const i = this.vertices.length, u = this.vertices;
    if (n) {
      for (let y = 0; y < i; y++) {
        const t = u[y];
        n.vmult(t, t);
      }
      for (let y = 0; y < this.faceNormals.length; y++) {
        const t = this.faceNormals[y];
        n.vmult(t, t);
      }
    }
    if (e) for (let y = 0; y < i; y++) {
      const t = u[y];
      t.vadd(e, t);
    }
  }
  pointIsInside(e) {
    const n = this.vertices, i = this.faces, u = this.faceNormals, y = null, t = new lt();
    this.getAveragePointLocal(t);
    for (let o = 0; o < this.faces.length; o++) {
      let s = u[o];
      const c = n[i[o][0]], h = new lt();
      e.vsub(c, h);
      const f = s.dot(h), r = new lt();
      t.vsub(c, r);
      const m = s.dot(r);
      if (f < 0 && m > 0 || f > 0 && m < 0) return false;
    }
    return y ? 1 : -1;
  }
  static project(e, n, i, u, y) {
    const t = e.vertices.length, o = H1;
    let s = 0, c = 0;
    const h = G1, f = e.vertices;
    h.setZero(), Fn.vectorToLocalFrame(i, u, n, o), Fn.pointToLocalFrame(i, u, h, h);
    const r = h.dot(o);
    c = s = f[0].dot(o);
    for (let m = 1; m < t; m++) {
      const g = f[m].dot(o);
      g > s && (s = g), g < c && (c = g);
    }
    if (c -= r, s -= r, c > s) {
      const m = c;
      c = s, s = m;
    }
    y[0] = s, y[1] = c;
  }
}
const Tl = [], kl = [];
new lt();
const H1 = new lt(), G1 = new lt();
class lf extends hn {
  constructor(e) {
    super({ type: hn.types.BOX }), this.halfExtents = e, this.convexPolyhedronRepresentation = null, this.updateConvexPolyhedronRepresentation(), this.updateBoundingSphereRadius();
  }
  updateConvexPolyhedronRepresentation() {
    const e = this.halfExtents.x, n = this.halfExtents.y, i = this.halfExtents.z, u = lt, y = [new u(-e, -n, -i), new u(e, -n, -i), new u(e, n, -i), new u(-e, n, -i), new u(-e, -n, i), new u(e, -n, i), new u(e, n, i), new u(-e, n, i)], t = [[3, 2, 1, 0], [4, 5, 6, 7], [5, 4, 0, 1], [2, 3, 7, 6], [0, 4, 7, 3], [1, 2, 6, 5]], o = [new u(0, 0, 1), new u(0, 1, 0), new u(1, 0, 0)], s = new ta({ vertices: y, faces: t, axes: o });
    this.convexPolyhedronRepresentation = s, s.material = this.material;
  }
  calculateLocalInertia(e, n) {
    return n === void 0 && (n = new lt()), lf.calculateInertia(this.halfExtents, e, n), n;
  }
  static calculateInertia(e, n, i) {
    const u = e;
    i.x = 1 / 12 * n * (2 * u.y * 2 * u.y + 2 * u.z * 2 * u.z), i.y = 1 / 12 * n * (2 * u.x * 2 * u.x + 2 * u.z * 2 * u.z), i.z = 1 / 12 * n * (2 * u.y * 2 * u.y + 2 * u.x * 2 * u.x);
  }
  getSideNormals(e, n) {
    const i = e, u = this.halfExtents;
    if (i[0].set(u.x, 0, 0), i[1].set(0, u.y, 0), i[2].set(0, 0, u.z), i[3].set(-u.x, 0, 0), i[4].set(0, -u.y, 0), i[5].set(0, 0, -u.z), n !== void 0) for (let y = 0; y !== i.length; y++) n.vmult(i[y], i[y]);
    return i;
  }
  volume() {
    return 8 * this.halfExtents.x * this.halfExtents.y * this.halfExtents.z;
  }
  updateBoundingSphereRadius() {
    this.boundingSphereRadius = this.halfExtents.length();
  }
  forEachWorldCorner(e, n, i) {
    const u = this.halfExtents, y = [[u.x, u.y, u.z], [-u.x, u.y, u.z], [-u.x, -u.y, u.z], [-u.x, -u.y, -u.z], [u.x, -u.y, -u.z], [u.x, u.y, -u.z], [-u.x, u.y, -u.z], [u.x, -u.y, u.z]];
    for (let t = 0; t < y.length; t++) No.set(y[t][0], y[t][1], y[t][2]), n.vmult(No, No), e.vadd(No, No), i(No.x, No.y, No.z);
  }
  calculateWorldAABB(e, n, i, u) {
    const y = this.halfExtents;
    Ji[0].set(y.x, y.y, y.z), Ji[1].set(-y.x, y.y, y.z), Ji[2].set(-y.x, -y.y, y.z), Ji[3].set(-y.x, -y.y, -y.z), Ji[4].set(y.x, -y.y, -y.z), Ji[5].set(y.x, y.y, -y.z), Ji[6].set(-y.x, y.y, -y.z), Ji[7].set(y.x, -y.y, y.z);
    const t = Ji[0];
    n.vmult(t, t), e.vadd(t, t), u.copy(t), i.copy(t);
    for (let o = 1; o < 8; o++) {
      const s = Ji[o];
      n.vmult(s, s), e.vadd(s, s);
      const c = s.x, h = s.y, f = s.z;
      c > u.x && (u.x = c), h > u.y && (u.y = h), f > u.z && (u.z = f), c < i.x && (i.x = c), h < i.y && (i.y = h), f < i.z && (i.z = f);
    }
  }
}
const No = new lt(), Ji = [new lt(), new lt(), new lt(), new lt(), new lt(), new lt(), new lt(), new lt()], ff = { DYNAMIC: 1, STATIC: 2, KINEMATIC: 4 }, pf = { AWAKE: 0, SLEEPY: 1, SLEEPING: 2 };
class nn extends Bm {
  constructor(e) {
    e === void 0 && (e = {}), super(), this.id = nn.idCounter++, this.index = -1, this.world = null, this.vlambda = new lt(), this.collisionFilterGroup = typeof e.collisionFilterGroup == "number" ? e.collisionFilterGroup : 1, this.collisionFilterMask = typeof e.collisionFilterMask == "number" ? e.collisionFilterMask : -1, this.collisionResponse = typeof e.collisionResponse == "boolean" ? e.collisionResponse : true, this.position = new lt(), this.previousPosition = new lt(), this.interpolatedPosition = new lt(), this.initPosition = new lt(), e.position && (this.position.copy(e.position), this.previousPosition.copy(e.position), this.interpolatedPosition.copy(e.position), this.initPosition.copy(e.position)), this.velocity = new lt(), e.velocity && this.velocity.copy(e.velocity), this.initVelocity = new lt(), this.force = new lt();
    const n = typeof e.mass == "number" ? e.mass : 0;
    this.mass = n, this.invMass = n > 0 ? 1 / n : 0, this.material = e.material || null, this.linearDamping = typeof e.linearDamping == "number" ? e.linearDamping : 0.01, this.type = n <= 0 ? nn.STATIC : nn.DYNAMIC, typeof e.type == typeof nn.STATIC && (this.type = e.type), this.allowSleep = typeof e.allowSleep < "u" ? e.allowSleep : true, this.sleepState = nn.AWAKE, this.sleepSpeedLimit = typeof e.sleepSpeedLimit < "u" ? e.sleepSpeedLimit : 0.1, this.sleepTimeLimit = typeof e.sleepTimeLimit < "u" ? e.sleepTimeLimit : 1, this.timeLastSleepy = 0, this.wakeUpAfterNarrowphase = false, this.torque = new lt(), this.quaternion = new ti(), this.initQuaternion = new ti(), this.previousQuaternion = new ti(), this.interpolatedQuaternion = new ti(), e.quaternion && (this.quaternion.copy(e.quaternion), this.initQuaternion.copy(e.quaternion), this.previousQuaternion.copy(e.quaternion), this.interpolatedQuaternion.copy(e.quaternion)), this.angularVelocity = new lt(), e.angularVelocity && this.angularVelocity.copy(e.angularVelocity), this.initAngularVelocity = new lt(), this.shapes = [], this.shapeOffsets = [], this.shapeOrientations = [], this.inertia = new lt(), this.invInertia = new lt(), this.invInertiaWorld = new Xi(), this.invMassSolve = 0, this.invInertiaSolve = new lt(), this.invInertiaWorldSolve = new Xi(), this.fixedRotation = typeof e.fixedRotation < "u" ? e.fixedRotation : false, this.angularDamping = typeof e.angularDamping < "u" ? e.angularDamping : 0.01, this.linearFactor = new lt(1, 1, 1), e.linearFactor && this.linearFactor.copy(e.linearFactor), this.angularFactor = new lt(1, 1, 1), e.angularFactor && this.angularFactor.copy(e.angularFactor), this.aabb = new Li(), this.aabbNeedsUpdate = true, this.boundingRadius = 0, this.wlambda = new lt(), this.isTrigger = !!e.isTrigger, e.shape && this.addShape(e.shape), this.updateMassProperties();
  }
  wakeUp() {
    const e = this.sleepState;
    this.sleepState = nn.AWAKE, this.wakeUpAfterNarrowphase = false, e === nn.SLEEPING && this.dispatchEvent(nn.wakeupEvent);
  }
  sleep() {
    this.sleepState = nn.SLEEPING, this.velocity.set(0, 0, 0), this.angularVelocity.set(0, 0, 0), this.wakeUpAfterNarrowphase = false;
  }
  sleepTick(e) {
    if (this.allowSleep) {
      const n = this.sleepState, i = this.velocity.lengthSquared() + this.angularVelocity.lengthSquared(), u = this.sleepSpeedLimit ** 2;
      n === nn.AWAKE && i < u ? (this.sleepState = nn.SLEEPY, this.timeLastSleepy = e, this.dispatchEvent(nn.sleepyEvent)) : n === nn.SLEEPY && i > u ? this.wakeUp() : n === nn.SLEEPY && e - this.timeLastSleepy > this.sleepTimeLimit && (this.sleep(), this.dispatchEvent(nn.sleepEvent));
    }
  }
  updateSolveMassProperties() {
    this.sleepState === nn.SLEEPING || this.type === nn.KINEMATIC ? (this.invMassSolve = 0, this.invInertiaSolve.setZero(), this.invInertiaWorldSolve.setZero()) : (this.invMassSolve = this.invMass, this.invInertiaSolve.copy(this.invInertia), this.invInertiaWorldSolve.copy(this.invInertiaWorld));
  }
  pointToLocalFrame(e, n) {
    return n === void 0 && (n = new lt()), e.vsub(this.position, n), this.quaternion.conjugate().vmult(n, n), n;
  }
  vectorToLocalFrame(e, n) {
    return n === void 0 && (n = new lt()), this.quaternion.conjugate().vmult(e, n), n;
  }
  pointToWorldFrame(e, n) {
    return n === void 0 && (n = new lt()), this.quaternion.vmult(e, n), n.vadd(this.position, n), n;
  }
  vectorToWorldFrame(e, n) {
    return n === void 0 && (n = new lt()), this.quaternion.vmult(e, n), n;
  }
  addShape(e, n, i) {
    const u = new lt(), y = new ti();
    return n && u.copy(n), i && y.copy(i), this.shapes.push(e), this.shapeOffsets.push(u), this.shapeOrientations.push(y), this.updateMassProperties(), this.updateBoundingRadius(), this.aabbNeedsUpdate = true, e.body = this, this;
  }
  removeShape(e) {
    const n = this.shapes.indexOf(e);
    return n === -1 ? (console.warn("Shape does not belong to the body"), this) : (this.shapes.splice(n, 1), this.shapeOffsets.splice(n, 1), this.shapeOrientations.splice(n, 1), this.updateMassProperties(), this.updateBoundingRadius(), this.aabbNeedsUpdate = true, e.body = null, this);
  }
  updateBoundingRadius() {
    const e = this.shapes, n = this.shapeOffsets, i = e.length;
    let u = 0;
    for (let y = 0; y !== i; y++) {
      const t = e[y];
      t.updateBoundingSphereRadius();
      const o = n[y].length(), s = t.boundingSphereRadius;
      o + s > u && (u = o + s);
    }
    this.boundingRadius = u;
  }
  updateAABB() {
    const e = this.shapes, n = this.shapeOffsets, i = this.shapeOrientations, u = e.length, y = W1, t = K1, o = this.quaternion, s = this.aabb, c = X1;
    for (let h = 0; h !== u; h++) {
      const f = e[h];
      o.vmult(n[h], y), y.vadd(this.position, y), o.mult(i[h], t), f.calculateWorldAABB(y, t, c.lowerBound, c.upperBound), h === 0 ? s.copy(c) : s.extend(c);
    }
    this.aabbNeedsUpdate = false;
  }
  updateInertiaWorld(e) {
    const n = this.invInertia;
    if (!(n.x === n.y && n.y === n.z && !e)) {
      const i = $1, u = Y1;
      i.setRotationFromQuaternion(this.quaternion), i.transpose(u), i.scale(n, i), i.mmult(u, this.invInertiaWorld);
    }
  }
  applyForce(e, n) {
    if (n === void 0 && (n = new lt()), this.type !== nn.DYNAMIC) return;
    this.sleepState === nn.SLEEPING && this.wakeUp();
    const i = Q1;
    n.cross(e, i), this.force.vadd(e, this.force), this.torque.vadd(i, this.torque);
  }
  applyLocalForce(e, n) {
    if (n === void 0 && (n = new lt()), this.type !== nn.DYNAMIC) return;
    const i = Z1, u = J1;
    this.vectorToWorldFrame(e, i), this.vectorToWorldFrame(n, u), this.applyForce(i, u);
  }
  applyTorque(e) {
    this.type === nn.DYNAMIC && (this.sleepState === nn.SLEEPING && this.wakeUp(), this.torque.vadd(e, this.torque));
  }
  applyImpulse(e, n) {
    if (n === void 0 && (n = new lt()), this.type !== nn.DYNAMIC) return;
    this.sleepState === nn.SLEEPING && this.wakeUp();
    const i = n, u = eS;
    u.copy(e), u.scale(this.invMass, u), this.velocity.vadd(u, this.velocity);
    const y = tS;
    i.cross(e, y), this.invInertiaWorld.vmult(y, y), this.angularVelocity.vadd(y, this.angularVelocity);
  }
  applyLocalImpulse(e, n) {
    if (n === void 0 && (n = new lt()), this.type !== nn.DYNAMIC) return;
    const i = rS, u = nS;
    this.vectorToWorldFrame(e, i), this.vectorToWorldFrame(n, u), this.applyImpulse(i, u);
  }
  updateMassProperties() {
    const e = iS;
    this.invMass = this.mass > 0 ? 1 / this.mass : 0;
    const n = this.inertia, i = this.fixedRotation;
    this.updateAABB(), e.set((this.aabb.upperBound.x - this.aabb.lowerBound.x) / 2, (this.aabb.upperBound.y - this.aabb.lowerBound.y) / 2, (this.aabb.upperBound.z - this.aabb.lowerBound.z) / 2), lf.calculateInertia(e, this.mass, n), this.invInertia.set(n.x > 0 && !i ? 1 / n.x : 0, n.y > 0 && !i ? 1 / n.y : 0, n.z > 0 && !i ? 1 / n.z : 0), this.updateInertiaWorld(true);
  }
  getVelocityAtWorldPoint(e, n) {
    const i = new lt();
    return e.vsub(this.position, i), this.angularVelocity.cross(i, n), this.velocity.vadd(n, n), n;
  }
  integrate(e, n, i) {
    if (this.previousPosition.copy(this.position), this.previousQuaternion.copy(this.quaternion), !(this.type === nn.DYNAMIC || this.type === nn.KINEMATIC) || this.sleepState === nn.SLEEPING) return;
    const u = this.velocity, y = this.angularVelocity, t = this.position, o = this.force, s = this.torque, c = this.quaternion, h = this.invMass, f = this.invInertiaWorld, r = this.linearFactor, m = h * e;
    u.x += o.x * m * r.x, u.y += o.y * m * r.y, u.z += o.z * m * r.z;
    const g = f.elements, a = this.angularFactor, l = s.x * a.x, d = s.y * a.y, b = s.z * a.z;
    y.x += e * (g[0] * l + g[1] * d + g[2] * b), y.y += e * (g[3] * l + g[4] * d + g[5] * b), y.z += e * (g[6] * l + g[7] * d + g[8] * b), t.x += u.x * e, t.y += u.y * e, t.z += u.z * e, c.integrate(this.angularVelocity, e, this.angularFactor, c), n && (i ? c.normalizeFast() : c.normalize()), this.aabbNeedsUpdate = true, this.updateInertiaWorld();
  }
}
nn.idCounter = 0;
nn.COLLIDE_EVENT_NAME = "collide";
nn.DYNAMIC = ff.DYNAMIC;
nn.STATIC = ff.STATIC;
nn.KINEMATIC = ff.KINEMATIC;
nn.AWAKE = pf.AWAKE;
nn.SLEEPY = pf.SLEEPY;
nn.SLEEPING = pf.SLEEPING;
nn.wakeupEvent = { type: "wakeup" };
nn.sleepyEvent = { type: "sleepy" };
nn.sleepEvent = { type: "sleep" };
const W1 = new lt(), K1 = new ti(), X1 = new Li(), $1 = new Xi(), Y1 = new Xi();
new Xi();
const Q1 = new lt(), Z1 = new lt(), J1 = new lt(), eS = new lt(), tS = new lt(), rS = new lt(), nS = new lt(), iS = new lt();
class oS {
  constructor() {
    this.world = null, this.useBoundingBoxes = false, this.dirty = true;
  }
  collisionPairs(e, n, i) {
    throw new Error("collisionPairs not implemented for this BroadPhase class!");
  }
  needBroadphaseCollision(e, n) {
    return !((e.collisionFilterGroup & n.collisionFilterMask) === 0 || (n.collisionFilterGroup & e.collisionFilterMask) === 0 || ((e.type & nn.STATIC) !== 0 || e.sleepState === nn.SLEEPING) && ((n.type & nn.STATIC) !== 0 || n.sleepState === nn.SLEEPING));
  }
  intersectionTest(e, n, i, u) {
    this.useBoundingBoxes ? this.doBoundingBoxBroadphase(e, n, i, u) : this.doBoundingSphereBroadphase(e, n, i, u);
  }
  doBoundingSphereBroadphase(e, n, i, u) {
    const y = aS;
    n.position.vsub(e.position, y);
    const t = (e.boundingRadius + n.boundingRadius) ** 2;
    y.lengthSquared() < t && (i.push(e), u.push(n));
  }
  doBoundingBoxBroadphase(e, n, i, u) {
    e.aabbNeedsUpdate && e.updateAABB(), n.aabbNeedsUpdate && n.updateAABB(), e.aabb.overlaps(n.aabb) && (i.push(e), u.push(n));
  }
  makePairsUnique(e, n) {
    const i = sS, u = uS, y = cS, t = e.length;
    for (let o = 0; o !== t; o++) u[o] = e[o], y[o] = n[o];
    e.length = 0, n.length = 0;
    for (let o = 0; o !== t; o++) {
      const s = u[o].id, c = y[o].id, h = s < c ? `${s},${c}` : `${c},${s}`;
      i[h] = o, i.keys.push(h);
    }
    for (let o = 0; o !== i.keys.length; o++) {
      const s = i.keys.pop(), c = i[s];
      e.push(u[c]), n.push(y[c]), delete i[s];
    }
  }
  setWorld(e) {
  }
  static boundingSphereCheck(e, n) {
    const i = new lt();
    e.position.vsub(n.position, i);
    const u = e.shapes[0], y = n.shapes[0];
    return Math.pow(u.boundingSphereRadius + y.boundingSphereRadius, 2) > i.lengthSquared();
  }
  aabbQuery(e, n, i) {
    return console.warn(".aabbQuery is not implemented in this Broadphase subclass."), [];
  }
}
const aS = new lt();
new lt();
new ti();
new lt();
const sS = { keys: [] }, uS = [], cS = [];
new lt();
new lt();
new lt();
class Nm extends oS {
  constructor() {
    super();
  }
  collisionPairs(e, n, i) {
    const u = e.bodies, y = u.length;
    let t, o;
    for (let s = 0; s !== y; s++) for (let c = 0; c !== s; c++) t = u[s], o = u[c], this.needBroadphaseCollision(t, o) && this.intersectionTest(t, o, n, i);
  }
  aabbQuery(e, n, i) {
    i === void 0 && (i = []);
    for (let u = 0; u < e.bodies.length; u++) {
      const y = e.bodies[u];
      y.aabbNeedsUpdate && y.updateAABB(), y.aabb.overlaps(n) && i.push(y);
    }
    return i;
  }
}
class wc {
  constructor() {
    this.rayFromWorld = new lt(), this.rayToWorld = new lt(), this.hitNormalWorld = new lt(), this.hitPointWorld = new lt(), this.hasHit = false, this.shape = null, this.body = null, this.hitFaceIndex = -1, this.distance = -1, this.shouldStop = false;
  }
  reset() {
    this.rayFromWorld.setZero(), this.rayToWorld.setZero(), this.hitNormalWorld.setZero(), this.hitPointWorld.setZero(), this.hasHit = false, this.shape = null, this.body = null, this.hitFaceIndex = -1, this.distance = -1, this.shouldStop = false;
  }
  abort() {
    this.shouldStop = true;
  }
  set(e, n, i, u, y, t, o) {
    this.rayFromWorld.copy(e), this.rayToWorld.copy(n), this.hitNormalWorld.copy(i), this.hitPointWorld.copy(u), this.shape = y, this.body = t, this.distance = o;
  }
}
let Dm, Fm, Um, jm, Vm, qm, zm;
const hf = { CLOSEST: 1, ANY: 2, ALL: 4 };
Dm = hn.types.SPHERE;
Fm = hn.types.PLANE;
Um = hn.types.BOX;
jm = hn.types.CYLINDER;
Vm = hn.types.CONVEXPOLYHEDRON;
qm = hn.types.HEIGHTFIELD;
zm = hn.types.TRIMESH;
class ei {
  get [Dm]() {
    return this._intersectSphere;
  }
  get [Fm]() {
    return this._intersectPlane;
  }
  get [Um]() {
    return this._intersectBox;
  }
  get [jm]() {
    return this._intersectConvex;
  }
  get [Vm]() {
    return this._intersectConvex;
  }
  get [qm]() {
    return this._intersectHeightfield;
  }
  get [zm]() {
    return this._intersectTrimesh;
  }
  constructor(e, n) {
    e === void 0 && (e = new lt()), n === void 0 && (n = new lt()), this.from = e.clone(), this.to = n.clone(), this.direction = new lt(), this.precision = 1e-4, this.checkCollisionResponse = true, this.skipBackfaces = false, this.collisionFilterMask = -1, this.collisionFilterGroup = -1, this.mode = ei.ANY, this.result = new wc(), this.hasHit = false, this.callback = (i) => {
    };
  }
  intersectWorld(e, n) {
    return this.mode = n.mode || ei.ANY, this.result = n.result || new wc(), this.skipBackfaces = !!n.skipBackfaces, this.collisionFilterMask = typeof n.collisionFilterMask < "u" ? n.collisionFilterMask : -1, this.collisionFilterGroup = typeof n.collisionFilterGroup < "u" ? n.collisionFilterGroup : -1, this.checkCollisionResponse = typeof n.checkCollisionResponse < "u" ? n.checkCollisionResponse : true, n.from && this.from.copy(n.from), n.to && this.to.copy(n.to), this.callback = n.callback || (() => {
    }), this.hasHit = false, this.result.reset(), this.updateDirection(), this.getAABB(pd), Ol.length = 0, e.broadphase.aabbQuery(e, pd, Ol), this.intersectBodies(Ol), this.hasHit;
  }
  intersectBody(e, n) {
    n && (this.result = n, this.updateDirection());
    const i = this.checkCollisionResponse;
    if (i && !e.collisionResponse || (this.collisionFilterGroup & e.collisionFilterMask) === 0 || (e.collisionFilterGroup & this.collisionFilterMask) === 0) return;
    const u = lS, y = fS;
    for (let t = 0, o = e.shapes.length; t < o; t++) {
      const s = e.shapes[t];
      if (!(i && !s.collisionResponse) && (e.quaternion.mult(e.shapeOrientations[t], y), e.quaternion.vmult(e.shapeOffsets[t], u), u.vadd(e.position, u), this.intersectShape(s, y, u, e), this.result.shouldStop)) break;
    }
  }
  intersectBodies(e, n) {
    n && (this.result = n, this.updateDirection());
    for (let i = 0, u = e.length; !this.result.shouldStop && i < u; i++) this.intersectBody(e[i]);
  }
  updateDirection() {
    this.to.vsub(this.from, this.direction), this.direction.normalize();
  }
  intersectShape(e, n, i, u) {
    const y = this.from;
    if (xS(y, this.direction, i) > e.boundingSphereRadius) return;
    const t = this[e.type];
    t && t.call(this, e, n, i, u, e);
  }
  _intersectBox(e, n, i, u, y) {
    return this._intersectConvex(e.convexPolyhedronRepresentation, n, i, u, y);
  }
  _intersectPlane(e, n, i, u, y) {
    const t = this.from, o = this.to, s = this.direction, c = new lt(0, 0, 1);
    n.vmult(c, c);
    const h = new lt();
    t.vsub(i, h);
    const f = h.dot(c);
    o.vsub(i, h);
    const r = h.dot(c);
    if (f * r > 0 || t.distanceTo(o) < f) return;
    const m = c.dot(s);
    if (Math.abs(m) < this.precision) return;
    const g = new lt(), a = new lt(), l = new lt();
    t.vsub(i, g);
    const d = -c.dot(g) / m;
    s.scale(d, a), t.vadd(a, l), this.reportIntersection(c, l, y, u, -1);
  }
  getAABB(e) {
    const { lowerBound: n, upperBound: i } = e, u = this.to, y = this.from;
    n.x = Math.min(u.x, y.x), n.y = Math.min(u.y, y.y), n.z = Math.min(u.z, y.z), i.x = Math.max(u.x, y.x), i.y = Math.max(u.y, y.y), i.z = Math.max(u.z, y.z);
  }
  _intersectHeightfield(e, n, i, u, y) {
    e.data, e.elementSize;
    const t = pS;
    t.from.copy(this.from), t.to.copy(this.to), Fn.pointToLocalFrame(i, n, t.from, t.from), Fn.pointToLocalFrame(i, n, t.to, t.to), t.updateDirection();
    const o = hS;
    let s, c, h, f;
    s = c = 0, h = f = e.data.length - 1;
    const r = new Li();
    t.getAABB(r), e.getIndexOfPosition(r.lowerBound.x, r.lowerBound.y, o, true), s = Math.max(s, o[0]), c = Math.max(c, o[1]), e.getIndexOfPosition(r.upperBound.x, r.upperBound.y, o, true), h = Math.min(h, o[0] + 1), f = Math.min(f, o[1] + 1);
    for (let m = s; m < h; m++) for (let g = c; g < f; g++) {
      if (this.result.shouldStop) return;
      if (e.getAabbAtIndex(m, g, r), !!r.overlapsRay(t)) {
        if (e.getConvexTrianglePillar(m, g, false), Fn.pointToWorldFrame(i, n, e.pillarOffset, Ku), this._intersectConvex(e.pillarConvex, n, Ku, u, y, hd), this.result.shouldStop) return;
        e.getConvexTrianglePillar(m, g, true), Fn.pointToWorldFrame(i, n, e.pillarOffset, Ku), this._intersectConvex(e.pillarConvex, n, Ku, u, y, hd);
      }
    }
  }
  _intersectSphere(e, n, i, u, y) {
    const t = this.from, o = this.to, s = e.radius, c = (o.x - t.x) ** 2 + (o.y - t.y) ** 2 + (o.z - t.z) ** 2, h = 2 * ((o.x - t.x) * (t.x - i.x) + (o.y - t.y) * (t.y - i.y) + (o.z - t.z) * (t.z - i.z)), f = (t.x - i.x) ** 2 + (t.y - i.y) ** 2 + (t.z - i.z) ** 2 - s ** 2, r = h ** 2 - 4 * c * f, m = dS, g = mS;
    if (!(r < 0)) if (r === 0) t.lerp(o, r, m), m.vsub(i, g), g.normalize(), this.reportIntersection(g, m, y, u, -1);
    else {
      const a = (-h - Math.sqrt(r)) / (2 * c), l = (-h + Math.sqrt(r)) / (2 * c);
      if (a >= 0 && a <= 1 && (t.lerp(o, a, m), m.vsub(i, g), g.normalize(), this.reportIntersection(g, m, y, u, -1)), this.result.shouldStop) return;
      l >= 0 && l <= 1 && (t.lerp(o, l, m), m.vsub(i, g), g.normalize(), this.reportIntersection(g, m, y, u, -1));
    }
  }
  _intersectConvex(e, n, i, u, y, t) {
    const o = yS, s = dd, c = t && t.faceList || null, h = e.faces, f = e.vertices, r = e.faceNormals, m = this.direction, g = this.from, a = this.to, l = g.distanceTo(a), d = c ? c.length : h.length, b = this.result;
    for (let S = 0; !b.shouldStop && S < d; S++) {
      const E = c ? c[S] : S, R = h[E], k = r[E], w = n, F = i;
      s.copy(f[R[0]]), w.vmult(s, s), s.vadd(F, s), s.vsub(g, s), w.vmult(k, o);
      const I = m.dot(o);
      if (Math.abs(I) < this.precision) continue;
      const q = o.dot(s) / I;
      if (!(q < 0)) {
        m.scale(q, Ai), Ai.vadd(g, Ai), Wi.copy(f[R[0]]), w.vmult(Wi, Wi), F.vadd(Wi, Wi);
        for (let N = 1; !b.shouldStop && N < R.length - 1; N++) {
          eo.copy(f[R[N]]), to.copy(f[R[N + 1]]), w.vmult(eo, eo), w.vmult(to, to), F.vadd(eo, eo), F.vadd(to, to);
          const H = Ai.distanceTo(g);
          !(ei.pointInTriangle(Ai, Wi, eo, to) || ei.pointInTriangle(Ai, eo, Wi, to)) || H > l || this.reportIntersection(o, Ai, y, u, E);
        }
      }
    }
  }
  _intersectTrimesh(e, n, i, u, y, t) {
    const o = gS, s = ES, c = AS, h = dd, f = vS, r = bS, m = wS, g = _S, a = SS, l = e.indices;
    e.vertices;
    const d = this.from, b = this.to, S = this.direction;
    c.position.copy(i), c.quaternion.copy(n), Fn.vectorToLocalFrame(i, n, S, f), Fn.pointToLocalFrame(i, n, d, r), Fn.pointToLocalFrame(i, n, b, m), m.x *= e.scale.x, m.y *= e.scale.y, m.z *= e.scale.z, r.x *= e.scale.x, r.y *= e.scale.y, r.z *= e.scale.z, m.vsub(r, f), f.normalize();
    const E = r.distanceSquared(m);
    e.tree.rayQuery(this, c, s);
    for (let R = 0, k = s.length; !this.result.shouldStop && R !== k; R++) {
      const w = s[R];
      e.getNormal(w, o), e.getVertex(l[w * 3], Wi), Wi.vsub(r, h);
      const F = f.dot(o), I = o.dot(h) / F;
      if (I < 0) continue;
      f.scale(I, Ai), Ai.vadd(r, Ai), e.getVertex(l[w * 3 + 1], eo), e.getVertex(l[w * 3 + 2], to);
      const q = Ai.distanceSquared(r);
      !(ei.pointInTriangle(Ai, eo, Wi, to) || ei.pointInTriangle(Ai, Wi, eo, to)) || q > E || (Fn.vectorToWorldFrame(n, o, a), Fn.pointToWorldFrame(i, n, Ai, g), this.reportIntersection(a, g, y, u, w));
    }
    s.length = 0;
  }
  reportIntersection(e, n, i, u, y) {
    const t = this.from, o = this.to, s = t.distanceTo(n), c = this.result;
    if (!(this.skipBackfaces && e.dot(this.direction) > 0)) switch (c.hitFaceIndex = typeof y < "u" ? y : -1, this.mode) {
      case ei.ALL:
        this.hasHit = true, c.set(t, o, e, n, i, u, s), c.hasHit = true, this.callback(c);
        break;
      case ei.CLOSEST:
        (s < c.distance || !c.hasHit) && (this.hasHit = true, c.hasHit = true, c.set(t, o, e, n, i, u, s));
        break;
      case ei.ANY:
        this.hasHit = true, c.hasHit = true, c.set(t, o, e, n, i, u, s), c.shouldStop = true;
        break;
    }
  }
  static pointInTriangle(e, n, i, u) {
    u.vsub(n, Zo), i.vsub(n, bs), e.vsub(n, Pl);
    const y = Zo.dot(Zo), t = Zo.dot(bs), o = Zo.dot(Pl), s = bs.dot(bs), c = bs.dot(Pl);
    let h, f;
    return (h = s * o - t * c) >= 0 && (f = y * c - t * o) >= 0 && h + f < y * s - t * t;
  }
}
ei.CLOSEST = hf.CLOSEST;
ei.ANY = hf.ANY;
ei.ALL = hf.ALL;
const pd = new Li(), Ol = [], bs = new lt(), Pl = new lt(), lS = new lt(), fS = new ti(), Ai = new lt(), Wi = new lt(), eo = new lt(), to = new lt();
new lt();
new wc();
const hd = { faceList: [0] }, Ku = new lt(), pS = new ei(), hS = [], dS = new lt(), mS = new lt(), yS = new lt();
new lt();
new lt();
const dd = new lt(), gS = new lt(), vS = new lt(), bS = new lt(), wS = new lt(), SS = new lt(), _S = new lt();
new Li();
const ES = [], AS = new Fn(), Zo = new lt(), Xu = new lt();
function xS(v, e, n) {
  n.vsub(v, Zo);
  const i = Zo.dot(e);
  return e.scale(i, Xu), Xu.vadd(v, Xu), n.distanceTo(Xu);
}
class TS {
  static defaults(e, n) {
    e === void 0 && (e = {});
    for (let i in n) i in e || (e[i] = n[i]);
    return e;
  }
}
class md {
  constructor() {
    this.spatial = new lt(), this.rotational = new lt();
  }
  multiplyElement(e) {
    return e.spatial.dot(this.spatial) + e.rotational.dot(this.rotational);
  }
  multiplyVectors(e, n) {
    return e.dot(this.spatial) + n.dot(this.rotational);
  }
}
class qs {
  constructor(e, n, i, u) {
    i === void 0 && (i = -1e6), u === void 0 && (u = 1e6), this.id = qs.idCounter++, this.minForce = i, this.maxForce = u, this.bi = e, this.bj = n, this.a = 0, this.b = 0, this.eps = 0, this.jacobianElementA = new md(), this.jacobianElementB = new md(), this.enabled = true, this.multiplier = 0, this.setSpookParams(1e7, 4, 1 / 60);
  }
  setSpookParams(e, n, i) {
    const u = n, y = e, t = i;
    this.a = 4 / (t * (1 + 4 * u)), this.b = 4 * u / (1 + 4 * u), this.eps = 4 / (t * t * y * (1 + 4 * u));
  }
  computeB(e, n, i) {
    const u = this.computeGW(), y = this.computeGq(), t = this.computeGiMf();
    return -y * e - u * n - t * i;
  }
  computeGq() {
    const e = this.jacobianElementA, n = this.jacobianElementB, i = this.bi, u = this.bj, y = i.position, t = u.position;
    return e.spatial.dot(y) + n.spatial.dot(t);
  }
  computeGW() {
    const e = this.jacobianElementA, n = this.jacobianElementB, i = this.bi, u = this.bj, y = i.velocity, t = u.velocity, o = i.angularVelocity, s = u.angularVelocity;
    return e.multiplyVectors(y, o) + n.multiplyVectors(t, s);
  }
  computeGWlambda() {
    const e = this.jacobianElementA, n = this.jacobianElementB, i = this.bi, u = this.bj, y = i.vlambda, t = u.vlambda, o = i.wlambda, s = u.wlambda;
    return e.multiplyVectors(y, o) + n.multiplyVectors(t, s);
  }
  computeGiMf() {
    const e = this.jacobianElementA, n = this.jacobianElementB, i = this.bi, u = this.bj, y = i.force, t = i.torque, o = u.force, s = u.torque, c = i.invMassSolve, h = u.invMassSolve;
    return y.scale(c, yd), o.scale(h, gd), i.invInertiaWorldSolve.vmult(t, vd), u.invInertiaWorldSolve.vmult(s, bd), e.multiplyVectors(yd, vd) + n.multiplyVectors(gd, bd);
  }
  computeGiMGt() {
    const e = this.jacobianElementA, n = this.jacobianElementB, i = this.bi, u = this.bj, y = i.invMassSolve, t = u.invMassSolve, o = i.invInertiaWorldSolve, s = u.invInertiaWorldSolve;
    let c = y + t;
    return o.vmult(e.rotational, $u), c += $u.dot(e.rotational), s.vmult(n.rotational, $u), c += $u.dot(n.rotational), c;
  }
  addToWlambda(e) {
    const n = this.jacobianElementA, i = this.jacobianElementB, u = this.bi, y = this.bj, t = kS;
    u.vlambda.addScaledVector(u.invMassSolve * e, n.spatial, u.vlambda), y.vlambda.addScaledVector(y.invMassSolve * e, i.spatial, y.vlambda), u.invInertiaWorldSolve.vmult(n.rotational, t), u.wlambda.addScaledVector(e, t, u.wlambda), y.invInertiaWorldSolve.vmult(i.rotational, t), y.wlambda.addScaledVector(e, t, y.wlambda);
  }
  computeC() {
    return this.computeGiMGt() + this.eps;
  }
}
qs.idCounter = 0;
const yd = new lt(), gd = new lt(), vd = new lt(), bd = new lt(), $u = new lt(), kS = new lt();
class OS extends qs {
  constructor(e, n, i) {
    i === void 0 && (i = 1e6), super(e, n, 0, i), this.restitution = 0, this.ri = new lt(), this.rj = new lt(), this.ni = new lt();
  }
  computeB(e) {
    const n = this.a, i = this.b, u = this.bi, y = this.bj, t = this.ri, o = this.rj, s = PS, c = CS, h = u.velocity, f = u.angularVelocity;
    u.force, u.torque;
    const r = y.velocity, m = y.angularVelocity;
    y.force, y.torque;
    const g = RS, a = this.jacobianElementA, l = this.jacobianElementB, d = this.ni;
    t.cross(d, s), o.cross(d, c), d.negate(a.spatial), s.negate(a.rotational), l.spatial.copy(d), l.rotational.copy(c), g.copy(y.position), g.vadd(o, g), g.vsub(u.position, g), g.vsub(t, g);
    const b = d.dot(g), S = this.restitution + 1, E = S * r.dot(d) - S * h.dot(d) + m.dot(c) - f.dot(s), R = this.computeGiMf();
    return -b * n - E * i - e * R;
  }
  getImpactVelocityAlongNormal() {
    const e = MS, n = IS, i = LS, u = BS, y = NS;
    return this.bi.position.vadd(this.ri, i), this.bj.position.vadd(this.rj, u), this.bi.getVelocityAtWorldPoint(i, e), this.bj.getVelocityAtWorldPoint(u, n), e.vsub(n, y), this.ni.dot(y);
  }
}
const PS = new lt(), CS = new lt(), RS = new lt(), MS = new lt(), IS = new lt(), LS = new lt(), BS = new lt(), NS = new lt();
new lt();
new lt();
new lt();
new lt();
new lt();
new lt();
new lt();
new lt();
new lt();
new lt();
class wd extends qs {
  constructor(e, n, i) {
    super(e, n, -i, i), this.ri = new lt(), this.rj = new lt(), this.t = new lt();
  }
  computeB(e) {
    this.a;
    const n = this.b;
    this.bi, this.bj;
    const i = this.ri, u = this.rj, y = DS, t = FS, o = this.t;
    i.cross(o, y), u.cross(o, t);
    const s = this.jacobianElementA, c = this.jacobianElementB;
    o.negate(s.spatial), y.negate(s.rotational), c.spatial.copy(o), c.rotational.copy(t);
    const h = this.computeGW(), f = this.computeGiMf();
    return -h * n - e * f;
  }
}
const DS = new lt(), FS = new lt();
class ra {
  constructor(e, n, i) {
    i = TS.defaults(i, { friction: 0.3, restitution: 0.3, contactEquationStiffness: 1e7, contactEquationRelaxation: 3, frictionEquationStiffness: 1e7, frictionEquationRelaxation: 3 }), this.id = ra.idCounter++, this.materials = [e, n], this.friction = i.friction, this.restitution = i.restitution, this.contactEquationStiffness = i.contactEquationStiffness, this.contactEquationRelaxation = i.contactEquationRelaxation, this.frictionEquationStiffness = i.frictionEquationStiffness, this.frictionEquationRelaxation = i.frictionEquationRelaxation;
  }
}
ra.idCounter = 0;
class na {
  constructor(e) {
    e === void 0 && (e = {});
    let n = "";
    typeof e == "string" && (n = e, e = {}), this.name = n, this.id = na.idCounter++, this.friction = typeof e.friction < "u" ? e.friction : -1, this.restitution = typeof e.restitution < "u" ? e.restitution : -1;
  }
}
na.idCounter = 0;
new lt();
new lt();
new lt();
new lt();
new lt();
new lt();
new lt();
new lt();
new lt();
new lt();
new lt();
new lt();
new lt();
new lt();
new lt();
new lt();
new lt();
new lt();
new lt();
new ei();
new lt();
new lt();
new lt();
new lt(1, 0, 0), new lt(0, 1, 0), new lt(0, 0, 1);
new lt();
new lt();
new lt();
new lt();
new lt();
new lt();
new lt();
new lt();
new lt();
new lt();
new lt();
new lt();
new lt();
new lt();
new lt();
new lt();
new lt();
new lt();
new lt();
new lt();
class US extends ta {
  constructor(e, n, i, u) {
    if (e === void 0 && (e = 1), n === void 0 && (n = 1), i === void 0 && (i = 1), u === void 0 && (u = 8), e < 0) throw new Error("The cylinder radiusTop cannot be negative.");
    if (n < 0) throw new Error("The cylinder radiusBottom cannot be negative.");
    const y = u, t = [], o = [], s = [], c = [], h = [], f = Math.cos, r = Math.sin;
    t.push(new lt(-n * r(0), -i * 0.5, n * f(0))), c.push(0), t.push(new lt(-e * r(0), i * 0.5, e * f(0))), h.push(1);
    for (let g = 0; g < y; g++) {
      const a = 2 * Math.PI / y * (g + 1), l = 2 * Math.PI / y * (g + 0.5);
      g < y - 1 ? (t.push(new lt(-n * r(a), -i * 0.5, n * f(a))), c.push(2 * g + 2), t.push(new lt(-e * r(a), i * 0.5, e * f(a))), h.push(2 * g + 3), s.push([2 * g, 2 * g + 1, 2 * g + 3, 2 * g + 2])) : s.push([2 * g, 2 * g + 1, 1, 0]), (y % 2 === 1 || g < y / 2) && o.push(new lt(-r(l), 0, f(l)));
    }
    s.push(c), o.push(new lt(0, 1, 0));
    const m = [];
    for (let g = 0; g < h.length; g++) m.push(h[h.length - g - 1]);
    s.push(m), super({ vertices: t, faces: s, axes: o }), this.type = hn.types.CYLINDER, this.radiusTop = e, this.radiusBottom = n, this.height = i, this.numSegments = u;
  }
}
class ws extends hn {
  constructor() {
    super({ type: hn.types.PLANE }), this.worldNormal = new lt(), this.worldNormalNeedsUpdate = true, this.boundingSphereRadius = Number.MAX_VALUE;
  }
  computeWorldNormal(e) {
    const n = this.worldNormal;
    n.set(0, 0, 1), e.vmult(n, n), this.worldNormalNeedsUpdate = false;
  }
  calculateLocalInertia(e, n) {
    return n === void 0 && (n = new lt()), n;
  }
  volume() {
    return Number.MAX_VALUE;
  }
  calculateWorldAABB(e, n, i, u) {
    yo.set(0, 0, 1), n.vmult(yo, yo);
    const y = Number.MAX_VALUE;
    i.set(-y, -y, -y), u.set(y, y, y), yo.x === 1 ? u.x = e.x : yo.x === -1 && (i.x = e.x), yo.y === 1 ? u.y = e.y : yo.y === -1 && (i.y = e.y), yo.z === 1 ? u.z = e.z : yo.z === -1 && (i.z = e.z);
  }
  updateBoundingSphereRadius() {
    this.boundingSphereRadius = Number.MAX_VALUE;
  }
}
const yo = new lt();
new lt();
new lt();
new lt();
new lt();
new lt();
new lt();
new lt();
new lt();
new lt();
new lt();
new Li();
new lt();
new Li();
new lt();
new lt();
new lt();
new lt();
new lt();
new lt();
new lt();
new Li();
new lt();
new Fn();
new Li();
class jS {
  constructor() {
    this.equations = [];
  }
  solve(e, n) {
    return 0;
  }
  addEquation(e) {
    e.enabled && !e.bi.isTrigger && !e.bj.isTrigger && this.equations.push(e);
  }
  removeEquation(e) {
    const n = this.equations, i = n.indexOf(e);
    i !== -1 && n.splice(i, 1);
  }
  removeAllEquations() {
    this.equations.length = 0;
  }
}
class VS extends jS {
  constructor() {
    super(), this.iterations = 10, this.tolerance = 1e-7;
  }
  solve(e, n) {
    let i = 0;
    const u = this.iterations, y = this.tolerance * this.tolerance, t = this.equations, o = t.length, s = n.bodies, c = s.length, h = e;
    let f, r, m, g, a, l;
    if (o !== 0) for (let E = 0; E !== c; E++) s[E].updateSolveMassProperties();
    const d = zS, b = HS, S = qS;
    d.length = o, b.length = o, S.length = o;
    for (let E = 0; E !== o; E++) {
      const R = t[E];
      S[E] = 0, b[E] = R.computeB(h), d[E] = 1 / R.computeC();
    }
    if (o !== 0) {
      for (let k = 0; k !== c; k++) {
        const w = s[k], F = w.vlambda, I = w.wlambda;
        F.set(0, 0, 0), I.set(0, 0, 0);
      }
      for (i = 0; i !== u; i++) {
        g = 0;
        for (let k = 0; k !== o; k++) {
          const w = t[k];
          f = b[k], r = d[k], l = S[k], a = w.computeGWlambda(), m = r * (f - a - w.eps * l), l + m < w.minForce ? m = w.minForce - l : l + m > w.maxForce && (m = w.maxForce - l), S[k] += m, g += m > 0 ? m : -m, w.addToWlambda(m);
        }
        if (g * g < y) break;
      }
      for (let k = 0; k !== c; k++) {
        const w = s[k], F = w.velocity, I = w.angularVelocity;
        w.vlambda.vmul(w.linearFactor, w.vlambda), F.vadd(w.vlambda, F), w.wlambda.vmul(w.angularFactor, w.wlambda), I.vadd(w.wlambda, I);
      }
      let E = t.length;
      const R = 1 / h;
      for (; E--; ) t[E].multiplier = S[E] * R;
    }
    return i;
  }
}
const qS = [], zS = [], HS = [];
class GS {
  constructor() {
    this.objects = [], this.type = Object;
  }
  release() {
    const e = arguments.length;
    for (let n = 0; n !== e; n++) this.objects.push(n < 0 || arguments.length <= n ? void 0 : arguments[n]);
    return this;
  }
  get() {
    return this.objects.length === 0 ? this.constructObject() : this.objects.pop();
  }
  constructObject() {
    throw new Error("constructObject() not implemented in this Pool subclass yet!");
  }
  resize(e) {
    const n = this.objects;
    for (; n.length > e; ) n.pop();
    for (; n.length < e; ) n.push(this.constructObject());
    return this;
  }
}
class WS extends GS {
  constructor() {
    super(...arguments), this.type = lt;
  }
  constructObject() {
    return new lt();
  }
}
const Wn = { sphereSphere: hn.types.SPHERE, spherePlane: hn.types.SPHERE | hn.types.PLANE, boxBox: hn.types.BOX | hn.types.BOX, sphereBox: hn.types.SPHERE | hn.types.BOX, planeBox: hn.types.PLANE | hn.types.BOX, convexConvex: hn.types.CONVEXPOLYHEDRON, sphereConvex: hn.types.SPHERE | hn.types.CONVEXPOLYHEDRON, planeConvex: hn.types.PLANE | hn.types.CONVEXPOLYHEDRON, boxConvex: hn.types.BOX | hn.types.CONVEXPOLYHEDRON, sphereHeightfield: hn.types.SPHERE | hn.types.HEIGHTFIELD, boxHeightfield: hn.types.BOX | hn.types.HEIGHTFIELD, convexHeightfield: hn.types.CONVEXPOLYHEDRON | hn.types.HEIGHTFIELD, sphereParticle: hn.types.PARTICLE | hn.types.SPHERE, planeParticle: hn.types.PLANE | hn.types.PARTICLE, boxParticle: hn.types.BOX | hn.types.PARTICLE, convexParticle: hn.types.PARTICLE | hn.types.CONVEXPOLYHEDRON, cylinderCylinder: hn.types.CYLINDER, sphereCylinder: hn.types.SPHERE | hn.types.CYLINDER, planeCylinder: hn.types.PLANE | hn.types.CYLINDER, boxCylinder: hn.types.BOX | hn.types.CYLINDER, convexCylinder: hn.types.CONVEXPOLYHEDRON | hn.types.CYLINDER, heightfieldCylinder: hn.types.HEIGHTFIELD | hn.types.CYLINDER, particleCylinder: hn.types.PARTICLE | hn.types.CYLINDER, sphereTrimesh: hn.types.SPHERE | hn.types.TRIMESH, planeTrimesh: hn.types.PLANE | hn.types.TRIMESH };
class KS {
  get [Wn.sphereSphere]() {
    return this.sphereSphere;
  }
  get [Wn.spherePlane]() {
    return this.spherePlane;
  }
  get [Wn.boxBox]() {
    return this.boxBox;
  }
  get [Wn.sphereBox]() {
    return this.sphereBox;
  }
  get [Wn.planeBox]() {
    return this.planeBox;
  }
  get [Wn.convexConvex]() {
    return this.convexConvex;
  }
  get [Wn.sphereConvex]() {
    return this.sphereConvex;
  }
  get [Wn.planeConvex]() {
    return this.planeConvex;
  }
  get [Wn.boxConvex]() {
    return this.boxConvex;
  }
  get [Wn.sphereHeightfield]() {
    return this.sphereHeightfield;
  }
  get [Wn.boxHeightfield]() {
    return this.boxHeightfield;
  }
  get [Wn.convexHeightfield]() {
    return this.convexHeightfield;
  }
  get [Wn.sphereParticle]() {
    return this.sphereParticle;
  }
  get [Wn.planeParticle]() {
    return this.planeParticle;
  }
  get [Wn.boxParticle]() {
    return this.boxParticle;
  }
  get [Wn.convexParticle]() {
    return this.convexParticle;
  }
  get [Wn.cylinderCylinder]() {
    return this.convexConvex;
  }
  get [Wn.sphereCylinder]() {
    return this.sphereConvex;
  }
  get [Wn.planeCylinder]() {
    return this.planeConvex;
  }
  get [Wn.boxCylinder]() {
    return this.boxConvex;
  }
  get [Wn.convexCylinder]() {
    return this.convexConvex;
  }
  get [Wn.heightfieldCylinder]() {
    return this.heightfieldCylinder;
  }
  get [Wn.particleCylinder]() {
    return this.particleCylinder;
  }
  get [Wn.sphereTrimesh]() {
    return this.sphereTrimesh;
  }
  get [Wn.planeTrimesh]() {
    return this.planeTrimesh;
  }
  constructor(e) {
    this.contactPointPool = [], this.frictionEquationPool = [], this.result = [], this.frictionResult = [], this.v3pool = new WS(), this.world = e, this.currentContactMaterial = e.defaultContactMaterial, this.enableFrictionReduction = false;
  }
  createContactEquation(e, n, i, u, y, t) {
    let o;
    this.contactPointPool.length ? (o = this.contactPointPool.pop(), o.bi = e, o.bj = n) : o = new OS(e, n), o.enabled = e.collisionResponse && n.collisionResponse && i.collisionResponse && u.collisionResponse;
    const s = this.currentContactMaterial;
    o.restitution = s.restitution, o.setSpookParams(s.contactEquationStiffness, s.contactEquationRelaxation, this.world.dt);
    const c = i.material || e.material, h = u.material || n.material;
    return c && h && c.restitution >= 0 && h.restitution >= 0 && (o.restitution = c.restitution * h.restitution), o.si = y || i, o.sj = t || u, o;
  }
  createFrictionEquationsFromContact(e, n) {
    const i = e.bi, u = e.bj, y = e.si, t = e.sj, o = this.world, s = this.currentContactMaterial;
    let c = s.friction;
    const h = y.material || i.material, f = t.material || u.material;
    if (h && f && h.friction >= 0 && f.friction >= 0 && (c = h.friction * f.friction), c > 0) {
      const r = c * (o.frictionGravity || o.gravity).length();
      let m = i.invMass + u.invMass;
      m > 0 && (m = 1 / m);
      const g = this.frictionEquationPool, a = g.length ? g.pop() : new wd(i, u, r * m), l = g.length ? g.pop() : new wd(i, u, r * m);
      return a.bi = l.bi = i, a.bj = l.bj = u, a.minForce = l.minForce = -r * m, a.maxForce = l.maxForce = r * m, a.ri.copy(e.ri), a.rj.copy(e.rj), l.ri.copy(e.ri), l.rj.copy(e.rj), e.ni.tangents(a.t, l.t), a.setSpookParams(s.frictionEquationStiffness, s.frictionEquationRelaxation, o.dt), l.setSpookParams(s.frictionEquationStiffness, s.frictionEquationRelaxation, o.dt), a.enabled = l.enabled = e.enabled, n.push(a, l), true;
    }
    return false;
  }
  createFrictionFromAverage(e) {
    let n = this.result[this.result.length - 1];
    if (!this.createFrictionEquationsFromContact(n, this.frictionResult) || e === 1) return;
    const i = this.frictionResult[this.frictionResult.length - 2], u = this.frictionResult[this.frictionResult.length - 1];
    Wo.setZero(), xa.setZero(), Ta.setZero();
    const y = n.bi;
    n.bj;
    for (let o = 0; o !== e; o++) n = this.result[this.result.length - 1 - o], n.bi !== y ? (Wo.vadd(n.ni, Wo), xa.vadd(n.ri, xa), Ta.vadd(n.rj, Ta)) : (Wo.vsub(n.ni, Wo), xa.vadd(n.rj, xa), Ta.vadd(n.ri, Ta));
    const t = 1 / e;
    xa.scale(t, i.ri), Ta.scale(t, i.rj), u.ri.copy(i.ri), u.rj.copy(i.rj), Wo.normalize(), Wo.tangents(i.t, u.t);
  }
  getContacts(e, n, i, u, y, t, o) {
    this.contactPointPool = y, this.frictionEquationPool = o, this.result = u, this.frictionResult = t;
    const s = YS, c = QS, h = XS, f = $S;
    for (let r = 0, m = e.length; r !== m; r++) {
      const g = e[r], a = n[r];
      let l = null;
      g.material && a.material && (l = i.getContactMaterial(g.material, a.material) || null);
      const d = g.type & nn.KINEMATIC && a.type & nn.STATIC || g.type & nn.STATIC && a.type & nn.KINEMATIC || g.type & nn.KINEMATIC && a.type & nn.KINEMATIC;
      for (let b = 0; b < g.shapes.length; b++) {
        g.quaternion.mult(g.shapeOrientations[b], s), g.quaternion.vmult(g.shapeOffsets[b], h), h.vadd(g.position, h);
        const S = g.shapes[b];
        for (let E = 0; E < a.shapes.length; E++) {
          a.quaternion.mult(a.shapeOrientations[E], c), a.quaternion.vmult(a.shapeOffsets[E], f), f.vadd(a.position, f);
          const R = a.shapes[E];
          if (!(S.collisionFilterMask & R.collisionFilterGroup && R.collisionFilterMask & S.collisionFilterGroup) || h.distanceTo(f) > S.boundingSphereRadius + R.boundingSphereRadius) continue;
          let k = null;
          S.material && R.material && (k = i.getContactMaterial(S.material, R.material) || null), this.currentContactMaterial = k || l || i.defaultContactMaterial;
          const w = S.type | R.type, F = this[w];
          if (F) {
            let I = false;
            S.type < R.type ? I = F.call(this, S, R, h, f, s, c, g, a, S, R, d) : I = F.call(this, R, S, f, h, c, s, a, g, S, R, d), I && d && (i.shapeOverlapKeeper.set(S.id, R.id), i.bodyOverlapKeeper.set(g.id, a.id));
          }
        }
      }
    }
  }
  sphereSphere(e, n, i, u, y, t, o, s, c, h, f) {
    if (f) return i.distanceSquared(u) < (e.radius + n.radius) ** 2;
    const r = this.createContactEquation(o, s, e, n, c, h);
    u.vsub(i, r.ni), r.ni.normalize(), r.ri.copy(r.ni), r.rj.copy(r.ni), r.ri.scale(e.radius, r.ri), r.rj.scale(-n.radius, r.rj), r.ri.vadd(i, r.ri), r.ri.vsub(o.position, r.ri), r.rj.vadd(u, r.rj), r.rj.vsub(s.position, r.rj), this.result.push(r), this.createFrictionEquationsFromContact(r, this.frictionResult);
  }
  spherePlane(e, n, i, u, y, t, o, s, c, h, f) {
    const r = this.createContactEquation(o, s, e, n, c, h);
    if (r.ni.set(0, 0, 1), t.vmult(r.ni, r.ni), r.ni.negate(r.ni), r.ni.normalize(), r.ni.scale(e.radius, r.ri), i.vsub(u, Yu), r.ni.scale(r.ni.dot(Yu), Sd), Yu.vsub(Sd, r.rj), -Yu.dot(r.ni) <= e.radius) {
      if (f) return true;
      const m = r.ri, g = r.rj;
      m.vadd(i, m), m.vsub(o.position, m), g.vadd(u, g), g.vsub(s.position, g), this.result.push(r), this.createFrictionEquationsFromContact(r, this.frictionResult);
    }
  }
  boxBox(e, n, i, u, y, t, o, s, c, h, f) {
    return e.convexPolyhedronRepresentation.material = e.material, n.convexPolyhedronRepresentation.material = n.material, e.convexPolyhedronRepresentation.collisionResponse = e.collisionResponse, n.convexPolyhedronRepresentation.collisionResponse = n.collisionResponse, this.convexConvex(e.convexPolyhedronRepresentation, n.convexPolyhedronRepresentation, i, u, y, t, o, s, e, n, f);
  }
  sphereBox(e, n, i, u, y, t, o, s, c, h, f) {
    const r = this.v3pool, m = E_;
    i.vsub(u, Qu), n.getSideNormals(m, t);
    const g = e.radius;
    let a = false;
    const l = x_, d = T_, b = k_;
    let S = null, E = 0, R = 0, k = 0, w = null;
    for (let j = 0, z = m.length; j !== z && a === false; j++) {
      const Z = w_;
      Z.copy(m[j]);
      const ue = Z.length();
      Z.normalize();
      const $ = Qu.dot(Z);
      if ($ < ue + g && $ > 0) {
        const X = S_, J = __;
        X.copy(m[(j + 1) % 3]), J.copy(m[(j + 2) % 3]);
        const B = X.length(), Q = J.length();
        X.normalize(), J.normalize();
        const ne = Qu.dot(X), K = Qu.dot(J);
        if (ne < B && ne > -B && K < Q && K > -Q) {
          const ie = Math.abs($ - ue - g);
          if ((w === null || ie < w) && (w = ie, R = ne, k = K, S = ue, l.copy(Z), d.copy(X), b.copy(J), E++, f)) return true;
        }
      }
    }
    if (E) {
      a = true;
      const j = this.createContactEquation(o, s, e, n, c, h);
      l.scale(-g, j.ri), j.ni.copy(l), j.ni.negate(j.ni), l.scale(S, l), d.scale(R, d), l.vadd(d, l), b.scale(k, b), l.vadd(b, j.rj), j.ri.vadd(i, j.ri), j.ri.vsub(o.position, j.ri), j.rj.vadd(u, j.rj), j.rj.vsub(s.position, j.rj), this.result.push(j), this.createFrictionEquationsFromContact(j, this.frictionResult);
    }
    let F = r.get();
    const I = A_;
    for (let j = 0; j !== 2 && !a; j++) for (let z = 0; z !== 2 && !a; z++) for (let Z = 0; Z !== 2 && !a; Z++) if (F.set(0, 0, 0), j ? F.vadd(m[0], F) : F.vsub(m[0], F), z ? F.vadd(m[1], F) : F.vsub(m[1], F), Z ? F.vadd(m[2], F) : F.vsub(m[2], F), u.vadd(F, I), I.vsub(i, I), I.lengthSquared() < g * g) {
      if (f) return true;
      a = true;
      const ue = this.createContactEquation(o, s, e, n, c, h);
      ue.ri.copy(I), ue.ri.normalize(), ue.ni.copy(ue.ri), ue.ri.scale(g, ue.ri), ue.rj.copy(F), ue.ri.vadd(i, ue.ri), ue.ri.vsub(o.position, ue.ri), ue.rj.vadd(u, ue.rj), ue.rj.vsub(s.position, ue.rj), this.result.push(ue), this.createFrictionEquationsFromContact(ue, this.frictionResult);
    }
    r.release(F), F = null;
    const q = r.get(), N = r.get(), H = r.get(), _ = r.get(), x = r.get(), L = m.length;
    for (let j = 0; j !== L && !a; j++) for (let z = 0; z !== L && !a; z++) if (j % 3 !== z % 3) {
      m[z].cross(m[j], q), q.normalize(), m[j].vadd(m[z], N), H.copy(i), H.vsub(N, H), H.vsub(u, H);
      const Z = H.dot(q);
      q.scale(Z, _);
      let ue = 0;
      for (; ue === j % 3 || ue === z % 3; ) ue++;
      x.copy(i), x.vsub(_, x), x.vsub(N, x), x.vsub(u, x);
      const $ = Math.abs(Z), X = x.length();
      if ($ < m[ue].length() && X < g) {
        if (f) return true;
        a = true;
        const J = this.createContactEquation(o, s, e, n, c, h);
        N.vadd(_, J.rj), J.rj.copy(J.rj), x.negate(J.ni), J.ni.normalize(), J.ri.copy(J.rj), J.ri.vadd(u, J.ri), J.ri.vsub(i, J.ri), J.ri.normalize(), J.ri.scale(g, J.ri), J.ri.vadd(i, J.ri), J.ri.vsub(o.position, J.ri), J.rj.vadd(u, J.rj), J.rj.vsub(s.position, J.rj), this.result.push(J), this.createFrictionEquationsFromContact(J, this.frictionResult);
      }
    }
    r.release(q, N, H, _, x);
  }
  planeBox(e, n, i, u, y, t, o, s, c, h, f) {
    return n.convexPolyhedronRepresentation.material = n.material, n.convexPolyhedronRepresentation.collisionResponse = n.collisionResponse, n.convexPolyhedronRepresentation.id = n.id, this.planeConvex(e, n.convexPolyhedronRepresentation, i, u, y, t, o, s, e, n, f);
  }
  convexConvex(e, n, i, u, y, t, o, s, c, h, f, r, m) {
    const g = q_;
    if (!(i.distanceTo(u) > e.boundingSphereRadius + n.boundingSphereRadius) && e.findSeparatingAxis(n, i, y, u, t, g, r, m)) {
      const a = [], l = z_;
      e.clipAgainstHull(i, y, n, u, t, g, -100, 100, a);
      let d = 0;
      for (let b = 0; b !== a.length; b++) {
        if (f) return true;
        const S = this.createContactEquation(o, s, e, n, c, h), E = S.ri, R = S.rj;
        g.negate(S.ni), a[b].normal.negate(l), l.scale(a[b].depth, l), a[b].point.vadd(l, E), R.copy(a[b].point), E.vsub(i, E), R.vsub(u, R), E.vadd(i, E), E.vsub(o.position, E), R.vadd(u, R), R.vsub(s.position, R), this.result.push(S), d++, this.enableFrictionReduction || this.createFrictionEquationsFromContact(S, this.frictionResult);
      }
      this.enableFrictionReduction && d && this.createFrictionFromAverage(d);
    }
  }
  sphereConvex(e, n, i, u, y, t, o, s, c, h, f) {
    const r = this.v3pool;
    i.vsub(u, O_);
    const m = n.faceNormals, g = n.faces, a = n.vertices, l = e.radius;
    let d = false;
    for (let b = 0; b !== a.length; b++) {
      const S = a[b], E = M_;
      t.vmult(S, E), u.vadd(E, E);
      const R = R_;
      if (E.vsub(i, R), R.lengthSquared() < l * l) {
        if (f) return true;
        d = true;
        const k = this.createContactEquation(o, s, e, n, c, h);
        k.ri.copy(R), k.ri.normalize(), k.ni.copy(k.ri), k.ri.scale(l, k.ri), E.vsub(u, k.rj), k.ri.vadd(i, k.ri), k.ri.vsub(o.position, k.ri), k.rj.vadd(u, k.rj), k.rj.vsub(s.position, k.rj), this.result.push(k), this.createFrictionEquationsFromContact(k, this.frictionResult);
        return;
      }
    }
    for (let b = 0, S = g.length; b !== S && d === false; b++) {
      const E = m[b], R = g[b], k = I_;
      t.vmult(E, k);
      const w = L_;
      t.vmult(a[R[0]], w), w.vadd(u, w);
      const F = B_;
      k.scale(-l, F), i.vadd(F, F);
      const I = N_;
      F.vsub(w, I);
      const q = I.dot(k), N = D_;
      if (i.vsub(w, N), q < 0 && N.dot(k) > 0) {
        const H = [];
        for (let _ = 0, x = R.length; _ !== x; _++) {
          const L = r.get();
          t.vmult(a[R[_]], L), u.vadd(L, L), H.push(L);
        }
        if (b_(H, k, i)) {
          if (f) return true;
          d = true;
          const _ = this.createContactEquation(o, s, e, n, c, h);
          k.scale(-l, _.ri), k.negate(_.ni);
          const x = r.get();
          k.scale(-q, x);
          const L = r.get();
          k.scale(-l, L), i.vsub(u, _.rj), _.rj.vadd(L, _.rj), _.rj.vadd(x, _.rj), _.rj.vadd(u, _.rj), _.rj.vsub(s.position, _.rj), _.ri.vadd(i, _.ri), _.ri.vsub(o.position, _.ri), r.release(x), r.release(L), this.result.push(_), this.createFrictionEquationsFromContact(_, this.frictionResult);
          for (let j = 0, z = H.length; j !== z; j++) r.release(H[j]);
          return;
        } else for (let _ = 0; _ !== R.length; _++) {
          const x = r.get(), L = r.get();
          t.vmult(a[R[(_ + 1) % R.length]], x), t.vmult(a[R[(_ + 2) % R.length]], L), u.vadd(x, x), u.vadd(L, L);
          const j = P_;
          L.vsub(x, j);
          const z = C_;
          j.unit(z);
          const Z = r.get(), ue = r.get();
          i.vsub(x, ue);
          const $ = ue.dot(z);
          z.scale($, Z), Z.vadd(x, Z);
          const X = r.get();
          if (Z.vsub(i, X), $ > 0 && $ * $ < j.lengthSquared() && X.lengthSquared() < l * l) {
            if (f) return true;
            const J = this.createContactEquation(o, s, e, n, c, h);
            Z.vsub(u, J.rj), Z.vsub(i, J.ni), J.ni.normalize(), J.ni.scale(l, J.ri), J.rj.vadd(u, J.rj), J.rj.vsub(s.position, J.rj), J.ri.vadd(i, J.ri), J.ri.vsub(o.position, J.ri), this.result.push(J), this.createFrictionEquationsFromContact(J, this.frictionResult);
            for (let B = 0, Q = H.length; B !== Q; B++) r.release(H[B]);
            r.release(x), r.release(L), r.release(Z), r.release(X), r.release(ue);
            return;
          }
          r.release(x), r.release(L), r.release(Z), r.release(X), r.release(ue);
        }
        for (let _ = 0, x = H.length; _ !== x; _++) r.release(H[_]);
      }
    }
  }
  planeConvex(e, n, i, u, y, t, o, s, c, h, f) {
    const r = F_, m = U_;
    m.set(0, 0, 1), y.vmult(m, m);
    let g = 0;
    const a = j_;
    for (let l = 0; l !== n.vertices.length; l++) if (r.copy(n.vertices[l]), t.vmult(r, r), u.vadd(r, r), r.vsub(i, a), m.dot(a) <= 0) {
      if (f) return true;
      const d = this.createContactEquation(o, s, e, n, c, h), b = V_;
      m.scale(m.dot(a), b), r.vsub(b, b), b.vsub(i, d.ri), d.ni.copy(m), r.vsub(u, d.rj), d.ri.vadd(i, d.ri), d.ri.vsub(o.position, d.ri), d.rj.vadd(u, d.rj), d.rj.vsub(s.position, d.rj), this.result.push(d), g++, this.enableFrictionReduction || this.createFrictionEquationsFromContact(d, this.frictionResult);
    }
    this.enableFrictionReduction && g && this.createFrictionFromAverage(g);
  }
  boxConvex(e, n, i, u, y, t, o, s, c, h, f) {
    return e.convexPolyhedronRepresentation.material = e.material, e.convexPolyhedronRepresentation.collisionResponse = e.collisionResponse, this.convexConvex(e.convexPolyhedronRepresentation, n, i, u, y, t, o, s, e, n, f);
  }
  sphereHeightfield(e, n, i, u, y, t, o, s, c, h, f) {
    const r = n.data, m = e.radius, g = n.elementSize, a = tE, l = eE;
    Fn.pointToLocalFrame(u, t, i, l);
    let d = Math.floor((l.x - m) / g) - 1, b = Math.ceil((l.x + m) / g) + 1, S = Math.floor((l.y - m) / g) - 1, E = Math.ceil((l.y + m) / g) + 1;
    if (b < 0 || E < 0 || d > r.length || S > r[0].length) return;
    d < 0 && (d = 0), b < 0 && (b = 0), S < 0 && (S = 0), E < 0 && (E = 0), d >= r.length && (d = r.length - 1), b >= r.length && (b = r.length - 1), E >= r[0].length && (E = r[0].length - 1), S >= r[0].length && (S = r[0].length - 1);
    const R = [];
    n.getRectMinMax(d, S, b, E, R);
    const k = R[0], w = R[1];
    if (l.z - m > w || l.z + m < k) return;
    const F = this.result;
    for (let I = d; I < b; I++) for (let q = S; q < E; q++) {
      const N = F.length;
      let H = false;
      if (n.getConvexTrianglePillar(I, q, false), Fn.pointToWorldFrame(u, t, n.pillarOffset, a), i.distanceTo(a) < n.pillarConvex.boundingSphereRadius + e.boundingSphereRadius && (H = this.sphereConvex(e, n.pillarConvex, i, a, y, t, o, s, e, n, f)), f && H || (n.getConvexTrianglePillar(I, q, true), Fn.pointToWorldFrame(u, t, n.pillarOffset, a), i.distanceTo(a) < n.pillarConvex.boundingSphereRadius + e.boundingSphereRadius && (H = this.sphereConvex(e, n.pillarConvex, i, a, y, t, o, s, e, n, f)), f && H)) return true;
      if (F.length - N > 2) return;
    }
  }
  boxHeightfield(e, n, i, u, y, t, o, s, c, h, f) {
    return e.convexPolyhedronRepresentation.material = e.material, e.convexPolyhedronRepresentation.collisionResponse = e.collisionResponse, this.convexHeightfield(e.convexPolyhedronRepresentation, n, i, u, y, t, o, s, e, n, f);
  }
  convexHeightfield(e, n, i, u, y, t, o, s, c, h, f) {
    const r = n.data, m = n.elementSize, g = e.boundingSphereRadius, a = Z_, l = J_, d = Q_;
    Fn.pointToLocalFrame(u, t, i, d);
    let b = Math.floor((d.x - g) / m) - 1, S = Math.ceil((d.x + g) / m) + 1, E = Math.floor((d.y - g) / m) - 1, R = Math.ceil((d.y + g) / m) + 1;
    if (S < 0 || R < 0 || b > r.length || E > r[0].length) return;
    b < 0 && (b = 0), S < 0 && (S = 0), E < 0 && (E = 0), R < 0 && (R = 0), b >= r.length && (b = r.length - 1), S >= r.length && (S = r.length - 1), R >= r[0].length && (R = r[0].length - 1), E >= r[0].length && (E = r[0].length - 1);
    const k = [];
    n.getRectMinMax(b, E, S, R, k);
    const w = k[0], F = k[1];
    if (!(d.z - g > F || d.z + g < w)) for (let I = b; I < S; I++) for (let q = E; q < R; q++) {
      let N = false;
      if (n.getConvexTrianglePillar(I, q, false), Fn.pointToWorldFrame(u, t, n.pillarOffset, a), i.distanceTo(a) < n.pillarConvex.boundingSphereRadius + e.boundingSphereRadius && (N = this.convexConvex(e, n.pillarConvex, i, a, y, t, o, s, null, null, f, l, null)), f && N || (n.getConvexTrianglePillar(I, q, true), Fn.pointToWorldFrame(u, t, n.pillarOffset, a), i.distanceTo(a) < n.pillarConvex.boundingSphereRadius + e.boundingSphereRadius && (N = this.convexConvex(e, n.pillarConvex, i, a, y, t, o, s, null, null, f, l, null)), f && N)) return true;
    }
  }
  sphereParticle(e, n, i, u, y, t, o, s, c, h, f) {
    const r = K_;
    if (r.set(0, 0, 1), u.vsub(i, r), r.lengthSquared() <= e.radius * e.radius) {
      if (f) return true;
      const m = this.createContactEquation(s, o, n, e, c, h);
      r.normalize(), m.rj.copy(r), m.rj.scale(e.radius, m.rj), m.ni.copy(r), m.ni.negate(m.ni), m.ri.set(0, 0, 0), this.result.push(m), this.createFrictionEquationsFromContact(m, this.frictionResult);
    }
  }
  planeParticle(e, n, i, u, y, t, o, s, c, h, f) {
    const r = H_;
    r.set(0, 0, 1), o.quaternion.vmult(r, r);
    const m = G_;
    if (u.vsub(o.position, m), r.dot(m) <= 0) {
      if (f) return true;
      const g = this.createContactEquation(s, o, n, e, c, h);
      g.ni.copy(r), g.ni.negate(g.ni), g.ri.set(0, 0, 0);
      const a = W_;
      r.scale(r.dot(u), a), u.vsub(a, a), g.rj.copy(a), this.result.push(g), this.createFrictionEquationsFromContact(g, this.frictionResult);
    }
  }
  boxParticle(e, n, i, u, y, t, o, s, c, h, f) {
    return e.convexPolyhedronRepresentation.material = e.material, e.convexPolyhedronRepresentation.collisionResponse = e.collisionResponse, this.convexParticle(e.convexPolyhedronRepresentation, n, i, u, y, t, o, s, e, n, f);
  }
  convexParticle(e, n, i, u, y, t, o, s, c, h, f) {
    let r = -1;
    const m = $_, g = Y_;
    let a = null;
    const l = X_;
    if (l.copy(u), l.vsub(i, l), y.conjugate(_d), _d.vmult(l, l), e.pointIsInside(l)) {
      e.worldVerticesNeedsUpdate && e.computeWorldVertices(i, y), e.worldFaceNormalsNeedsUpdate && e.computeWorldFaceNormals(y);
      for (let d = 0, b = e.faces.length; d !== b; d++) {
        const S = [e.worldVertices[e.faces[d][0]]], E = e.worldFaceNormals[d];
        u.vsub(S[0], Ed);
        const R = -E.dot(Ed);
        if (a === null || Math.abs(R) < Math.abs(a)) {
          if (f) return true;
          a = R, r = d, m.copy(E);
        }
      }
      if (r !== -1) {
        const d = this.createContactEquation(s, o, n, e, c, h);
        m.scale(a, g), g.vadd(u, g), g.vsub(i, g), d.rj.copy(g), m.negate(d.ni), d.ri.set(0, 0, 0);
        const b = d.ri, S = d.rj;
        b.vadd(u, b), b.vsub(s.position, b), S.vadd(i, S), S.vsub(o.position, S), this.result.push(d), this.createFrictionEquationsFromContact(d, this.frictionResult);
      } else console.warn("Point found inside convex, but did not find penetrating face!");
    }
  }
  heightfieldCylinder(e, n, i, u, y, t, o, s, c, h, f) {
    return this.convexHeightfield(n, e, u, i, t, y, s, o, c, h, f);
  }
  particleCylinder(e, n, i, u, y, t, o, s, c, h, f) {
    return this.convexParticle(n, e, u, i, t, y, s, o, c, h, f);
  }
  sphereTrimesh(e, n, i, u, y, t, o, s, c, h, f) {
    const r = o_, m = a_, g = s_, a = u_, l = c_, d = l_, b = d_, S = i_, E = r_, R = m_;
    Fn.pointToLocalFrame(u, t, i, l);
    const k = e.radius;
    b.lowerBound.set(l.x - k, l.y - k, l.z - k), b.upperBound.set(l.x + k, l.y + k, l.z + k), n.getTrianglesInAABB(b, R);
    const w = n_, F = e.radius * e.radius;
    for (let _ = 0; _ < R.length; _++) for (let x = 0; x < 3; x++) if (n.getVertex(n.indices[R[_] * 3 + x], w), w.vsub(l, E), E.lengthSquared() <= F) {
      if (S.copy(w), Fn.pointToWorldFrame(u, t, S, w), w.vsub(i, E), f) return true;
      let L = this.createContactEquation(o, s, e, n, c, h);
      L.ni.copy(E), L.ni.normalize(), L.ri.copy(L.ni), L.ri.scale(e.radius, L.ri), L.ri.vadd(i, L.ri), L.ri.vsub(o.position, L.ri), L.rj.copy(w), L.rj.vsub(s.position, L.rj), this.result.push(L), this.createFrictionEquationsFromContact(L, this.frictionResult);
    }
    for (let _ = 0; _ < R.length; _++) for (let x = 0; x < 3; x++) {
      n.getVertex(n.indices[R[_] * 3 + x], r), n.getVertex(n.indices[R[_] * 3 + (x + 1) % 3], m), m.vsub(r, g), l.vsub(m, d);
      const L = d.dot(g);
      l.vsub(r, d);
      let j = d.dot(g);
      if (j > 0 && L < 0 && (l.vsub(r, d), a.copy(g), a.normalize(), j = d.dot(a), a.scale(j, d), d.vadd(r, d), d.distanceTo(l) < e.radius)) {
        if (f) return true;
        const z = this.createContactEquation(o, s, e, n, c, h);
        d.vsub(l, z.ni), z.ni.normalize(), z.ni.scale(e.radius, z.ri), z.ri.vadd(i, z.ri), z.ri.vsub(o.position, z.ri), Fn.pointToWorldFrame(u, t, d, d), d.vsub(s.position, z.rj), Fn.vectorToWorldFrame(t, z.ni, z.ni), Fn.vectorToWorldFrame(t, z.ri, z.ri), this.result.push(z), this.createFrictionEquationsFromContact(z, this.frictionResult);
      }
    }
    const I = f_, q = p_, N = h_, H = t_;
    for (let _ = 0, x = R.length; _ !== x; _++) {
      n.getTriangleVertices(R[_], I, q, N), n.getNormal(R[_], H), l.vsub(I, d);
      let L = d.dot(H);
      if (H.scale(L, d), l.vsub(d, d), L = d.distanceTo(l), ei.pointInTriangle(d, I, q, N) && L < e.radius) {
        if (f) return true;
        let j = this.createContactEquation(o, s, e, n, c, h);
        d.vsub(l, j.ni), j.ni.normalize(), j.ni.scale(e.radius, j.ri), j.ri.vadd(i, j.ri), j.ri.vsub(o.position, j.ri), Fn.pointToWorldFrame(u, t, d, d), d.vsub(s.position, j.rj), Fn.vectorToWorldFrame(t, j.ni, j.ni), Fn.vectorToWorldFrame(t, j.ri, j.ri), this.result.push(j), this.createFrictionEquationsFromContact(j, this.frictionResult);
      }
    }
    R.length = 0;
  }
  planeTrimesh(e, n, i, u, y, t, o, s, c, h, f) {
    const r = new lt(), m = ZS;
    m.set(0, 0, 1), y.vmult(m, m);
    for (let g = 0; g < n.vertices.length / 3; g++) {
      n.getVertex(g, r);
      const a = new lt();
      a.copy(r), Fn.pointToWorldFrame(u, t, a, r);
      const l = JS;
      if (r.vsub(i, l), m.dot(l) <= 0) {
        if (f) return true;
        const d = this.createContactEquation(o, s, e, n, c, h);
        d.ni.copy(m);
        const b = e_;
        m.scale(l.dot(m), b), r.vsub(b, b), d.ri.copy(b), d.ri.vsub(o.position, d.ri), d.rj.copy(r), d.rj.vsub(s.position, d.rj), this.result.push(d), this.createFrictionEquationsFromContact(d, this.frictionResult);
      }
    }
  }
}
const Wo = new lt(), xa = new lt(), Ta = new lt(), XS = new lt(), $S = new lt(), YS = new ti(), QS = new ti(), ZS = new lt(), JS = new lt(), e_ = new lt(), t_ = new lt(), r_ = new lt();
new lt();
const n_ = new lt(), i_ = new lt(), o_ = new lt(), a_ = new lt(), s_ = new lt(), u_ = new lt(), c_ = new lt(), l_ = new lt(), f_ = new lt(), p_ = new lt(), h_ = new lt(), d_ = new Li(), m_ = [], Yu = new lt(), Sd = new lt(), y_ = new lt(), g_ = new lt(), v_ = new lt();
function b_(v, e, n) {
  let i = null;
  const u = v.length;
  for (let y = 0; y !== u; y++) {
    const t = v[y], o = y_;
    v[(y + 1) % u].vsub(t, o);
    const s = g_;
    o.cross(e, s);
    const c = v_;
    n.vsub(t, c);
    const h = s.dot(c);
    if (i === null || h > 0 && i === true || h <= 0 && i === false) {
      i === null && (i = h > 0);
      continue;
    } else return false;
  }
  return true;
}
const Qu = new lt(), w_ = new lt(), S_ = new lt(), __ = new lt(), E_ = [new lt(), new lt(), new lt(), new lt(), new lt(), new lt()], A_ = new lt(), x_ = new lt(), T_ = new lt(), k_ = new lt(), O_ = new lt(), P_ = new lt(), C_ = new lt(), R_ = new lt(), M_ = new lt(), I_ = new lt(), L_ = new lt(), B_ = new lt(), N_ = new lt(), D_ = new lt();
new lt();
new lt();
const F_ = new lt(), U_ = new lt(), j_ = new lt(), V_ = new lt(), q_ = new lt(), z_ = new lt(), H_ = new lt(), G_ = new lt(), W_ = new lt(), K_ = new lt(), _d = new ti(), X_ = new lt();
new lt();
const $_ = new lt(), Ed = new lt(), Y_ = new lt(), Q_ = new lt(), Z_ = new lt(), J_ = [0], eE = new lt(), tE = new lt();
class Ad {
  constructor() {
    this.current = [], this.previous = [];
  }
  getKey(e, n) {
    if (n < e) {
      const i = n;
      n = e, e = i;
    }
    return e << 16 | n;
  }
  set(e, n) {
    const i = this.getKey(e, n), u = this.current;
    let y = 0;
    for (; i > u[y]; ) y++;
    if (i !== u[y]) {
      for (let t = u.length - 1; t >= y; t--) u[t + 1] = u[t];
      u[y] = i;
    }
  }
  tick() {
    const e = this.current;
    this.current = this.previous, this.previous = e, this.current.length = 0;
  }
  getDiff(e, n) {
    const i = this.current, u = this.previous, y = i.length, t = u.length;
    let o = 0;
    for (let s = 0; s < y; s++) {
      let c = false;
      const h = i[s];
      for (; h > u[o]; ) o++;
      c = h === u[o], c || xd(e, h);
    }
    o = 0;
    for (let s = 0; s < t; s++) {
      let c = false;
      const h = u[s];
      for (; h > i[o]; ) o++;
      c = i[o] === h, c || xd(n, h);
    }
  }
}
function xd(v, e) {
  v.push((e & 4294901760) >> 16, e & 65535);
}
const Cl = (v, e) => v < e ? `${v}-${e}` : `${e}-${v}`;
class rE {
  constructor() {
    this.data = { keys: [] };
  }
  get(e, n) {
    const i = Cl(e, n);
    return this.data[i];
  }
  set(e, n, i) {
    const u = Cl(e, n);
    this.get(e, n) || this.data.keys.push(u), this.data[u] = i;
  }
  delete(e, n) {
    const i = Cl(e, n), u = this.data.keys.indexOf(i);
    u !== -1 && this.data.keys.splice(u, 1), delete this.data[i];
  }
  reset() {
    const e = this.data, n = e.keys;
    for (; n.length > 0; ) {
      const i = n.pop();
      delete e[i];
    }
  }
}
class nE extends Bm {
  constructor(e) {
    e === void 0 && (e = {}), super(), this.dt = -1, this.allowSleep = !!e.allowSleep, this.contacts = [], this.frictionEquations = [], this.quatNormalizeSkip = e.quatNormalizeSkip !== void 0 ? e.quatNormalizeSkip : 0, this.quatNormalizeFast = e.quatNormalizeFast !== void 0 ? e.quatNormalizeFast : false, this.time = 0, this.stepnumber = 0, this.default_dt = 1 / 60, this.nextId = 0, this.gravity = new lt(), e.gravity && this.gravity.copy(e.gravity), e.frictionGravity && (this.frictionGravity = new lt(), this.frictionGravity.copy(e.frictionGravity)), this.broadphase = e.broadphase !== void 0 ? e.broadphase : new Nm(), this.bodies = [], this.hasActiveBodies = false, this.solver = e.solver !== void 0 ? e.solver : new VS(), this.constraints = [], this.narrowphase = new KS(this), this.collisionMatrix = new ld(), this.collisionMatrixPrevious = new ld(), this.bodyOverlapKeeper = new Ad(), this.shapeOverlapKeeper = new Ad(), this.contactmaterials = [], this.contactMaterialTable = new rE(), this.defaultMaterial = new na("default"), this.defaultContactMaterial = new ra(this.defaultMaterial, this.defaultMaterial, { friction: 0.3, restitution: 0 }), this.doProfiling = false, this.profile = { solve: 0, makeContactConstraints: 0, broadphase: 0, integrate: 0, narrowphase: 0 }, this.accumulator = 0, this.subsystems = [], this.addBodyEvent = { type: "addBody", body: null }, this.removeBodyEvent = { type: "removeBody", body: null }, this.idToBodyMap = {}, this.broadphase.setWorld(this);
  }
  getContactMaterial(e, n) {
    return this.contactMaterialTable.get(e.id, n.id);
  }
  collisionMatrixTick() {
    const e = this.collisionMatrixPrevious;
    this.collisionMatrixPrevious = this.collisionMatrix, this.collisionMatrix = e, this.collisionMatrix.reset(), this.bodyOverlapKeeper.tick(), this.shapeOverlapKeeper.tick();
  }
  addConstraint(e) {
    this.constraints.push(e);
  }
  removeConstraint(e) {
    const n = this.constraints.indexOf(e);
    n !== -1 && this.constraints.splice(n, 1);
  }
  rayTest(e, n, i) {
    i instanceof wc ? this.raycastClosest(e, n, { skipBackfaces: true }, i) : this.raycastAll(e, n, { skipBackfaces: true }, i);
  }
  raycastAll(e, n, i, u) {
    return i === void 0 && (i = {}), i.mode = ei.ALL, i.from = e, i.to = n, i.callback = u, Rl.intersectWorld(this, i);
  }
  raycastAny(e, n, i, u) {
    return i === void 0 && (i = {}), i.mode = ei.ANY, i.from = e, i.to = n, i.result = u, Rl.intersectWorld(this, i);
  }
  raycastClosest(e, n, i, u) {
    return i === void 0 && (i = {}), i.mode = ei.CLOSEST, i.from = e, i.to = n, i.result = u, Rl.intersectWorld(this, i);
  }
  addBody(e) {
    this.bodies.includes(e) || (e.index = this.bodies.length, this.bodies.push(e), e.world = this, e.initPosition.copy(e.position), e.initVelocity.copy(e.velocity), e.timeLastSleepy = this.time, e instanceof nn && (e.initAngularVelocity.copy(e.angularVelocity), e.initQuaternion.copy(e.quaternion)), this.collisionMatrix.setNumObjects(this.bodies.length), this.addBodyEvent.body = e, this.idToBodyMap[e.id] = e, this.dispatchEvent(this.addBodyEvent));
  }
  removeBody(e) {
    e.world = null;
    const n = this.bodies.length - 1, i = this.bodies, u = i.indexOf(e);
    if (u !== -1) {
      i.splice(u, 1);
      for (let y = 0; y !== i.length; y++) i[y].index = y;
      this.collisionMatrix.setNumObjects(n), this.removeBodyEvent.body = e, delete this.idToBodyMap[e.id], this.dispatchEvent(this.removeBodyEvent);
    }
  }
  getBodyById(e) {
    return this.idToBodyMap[e];
  }
  getShapeById(e) {
    const n = this.bodies;
    for (let i = 0; i < n.length; i++) {
      const u = n[i].shapes;
      for (let y = 0; y < u.length; y++) {
        const t = u[y];
        if (t.id === e) return t;
      }
    }
    return null;
  }
  addContactMaterial(e) {
    this.contactmaterials.push(e), this.contactMaterialTable.set(e.materials[0].id, e.materials[1].id, e);
  }
  removeContactMaterial(e) {
    const n = this.contactmaterials.indexOf(e);
    n !== -1 && (this.contactmaterials.splice(n, 1), this.contactMaterialTable.delete(e.materials[0].id, e.materials[1].id));
  }
  fixedStep(e, n) {
    e === void 0 && (e = 1 / 60), n === void 0 && (n = 10);
    const i = ui.now() / 1e3;
    if (!this.lastCallTime) this.step(e, void 0, n);
    else {
      const u = i - this.lastCallTime;
      this.step(e, u, n);
    }
    this.lastCallTime = i;
  }
  step(e, n, i) {
    if (i === void 0 && (i = 10), n === void 0) this.internalStep(e), this.time += e;
    else {
      this.accumulator += n;
      const u = ui.now();
      let y = 0;
      for (; this.accumulator >= e && y < i && (this.internalStep(e), this.accumulator -= e, y++, !(ui.now() - u > e * 1e3)); ) ;
      this.accumulator = this.accumulator % e;
      const t = this.accumulator / e;
      for (let o = 0; o !== this.bodies.length; o++) {
        const s = this.bodies[o];
        s.previousPosition.lerp(s.position, t, s.interpolatedPosition), s.previousQuaternion.slerp(s.quaternion, t, s.interpolatedQuaternion), s.previousQuaternion.normalize();
      }
      this.time += n;
    }
  }
  internalStep(e) {
    this.dt = e;
    const n = this.contacts, i = uE, u = cE, y = this.bodies.length, t = this.bodies, o = this.solver, s = this.gravity, c = this.doProfiling, h = this.profile, f = nn.DYNAMIC;
    let r = -1 / 0;
    const m = this.constraints, g = sE;
    s.length();
    const a = s.x, l = s.y, d = s.z;
    let b = 0;
    for (c && (r = ui.now()), b = 0; b !== y; b++) {
      const H = t[b];
      if (H.type === f) {
        const _ = H.force, x = H.mass;
        _.x += x * a, _.y += x * l, _.z += x * d;
      }
    }
    for (let H = 0, _ = this.subsystems.length; H !== _; H++) this.subsystems[H].update();
    c && (r = ui.now()), i.length = 0, u.length = 0, this.broadphase.collisionPairs(this, i, u), c && (h.broadphase = ui.now() - r);
    let S = m.length;
    for (b = 0; b !== S; b++) {
      const H = m[b];
      if (!H.collideConnected) for (let _ = i.length - 1; _ >= 0; _ -= 1) (H.bodyA === i[_] && H.bodyB === u[_] || H.bodyB === i[_] && H.bodyA === u[_]) && (i.splice(_, 1), u.splice(_, 1));
    }
    this.collisionMatrixTick(), c && (r = ui.now());
    const E = aE, R = n.length;
    for (b = 0; b !== R; b++) E.push(n[b]);
    n.length = 0;
    const k = this.frictionEquations.length;
    for (b = 0; b !== k; b++) g.push(this.frictionEquations[b]);
    for (this.frictionEquations.length = 0, this.narrowphase.getContacts(i, u, this, n, E, this.frictionEquations, g), c && (h.narrowphase = ui.now() - r), c && (r = ui.now()), b = 0; b < this.frictionEquations.length; b++) o.addEquation(this.frictionEquations[b]);
    const w = n.length;
    for (let H = 0; H !== w; H++) {
      const _ = n[H], x = _.bi, L = _.bj, j = _.si, z = _.sj;
      let Z;
      if (x.material && L.material ? Z = this.getContactMaterial(x.material, L.material) || this.defaultContactMaterial : Z = this.defaultContactMaterial, Z.friction, x.material && L.material && (x.material.friction >= 0 && L.material.friction >= 0 && x.material.friction * L.material.friction, x.material.restitution >= 0 && L.material.restitution >= 0 && (_.restitution = x.material.restitution * L.material.restitution)), o.addEquation(_), x.allowSleep && x.type === nn.DYNAMIC && x.sleepState === nn.SLEEPING && L.sleepState === nn.AWAKE && L.type !== nn.STATIC) {
        const ue = L.velocity.lengthSquared() + L.angularVelocity.lengthSquared(), $ = L.sleepSpeedLimit ** 2;
        ue >= $ * 2 && (x.wakeUpAfterNarrowphase = true);
      }
      if (L.allowSleep && L.type === nn.DYNAMIC && L.sleepState === nn.SLEEPING && x.sleepState === nn.AWAKE && x.type !== nn.STATIC) {
        const ue = x.velocity.lengthSquared() + x.angularVelocity.lengthSquared(), $ = x.sleepSpeedLimit ** 2;
        ue >= $ * 2 && (L.wakeUpAfterNarrowphase = true);
      }
      this.collisionMatrix.set(x, L, true), this.collisionMatrixPrevious.get(x, L) || (Ss.body = L, Ss.contact = _, x.dispatchEvent(Ss), Ss.body = x, L.dispatchEvent(Ss)), this.bodyOverlapKeeper.set(x.id, L.id), this.shapeOverlapKeeper.set(j.id, z.id);
    }
    for (this.emitContactEvents(), c && (h.makeContactConstraints = ui.now() - r, r = ui.now()), b = 0; b !== y; b++) {
      const H = t[b];
      H.wakeUpAfterNarrowphase && (H.wakeUp(), H.wakeUpAfterNarrowphase = false);
    }
    for (S = m.length, b = 0; b !== S; b++) {
      const H = m[b];
      H.update();
      for (let _ = 0, x = H.equations.length; _ !== x; _++) {
        const L = H.equations[_];
        o.addEquation(L);
      }
    }
    o.solve(e, this), c && (h.solve = ui.now() - r), o.removeAllEquations();
    const F = Math.pow;
    for (b = 0; b !== y; b++) {
      const H = t[b];
      if (H.type & f) {
        const _ = F(1 - H.linearDamping, e), x = H.velocity;
        x.scale(_, x);
        const L = H.angularVelocity;
        if (L) {
          const j = F(1 - H.angularDamping, e);
          L.scale(j, L);
        }
      }
    }
    this.dispatchEvent(oE), c && (r = ui.now());
    const I = this.stepnumber % (this.quatNormalizeSkip + 1) === 0, q = this.quatNormalizeFast;
    for (b = 0; b !== y; b++) t[b].integrate(e, I, q);
    this.clearForces(), this.broadphase.dirty = true, c && (h.integrate = ui.now() - r), this.stepnumber += 1, this.dispatchEvent(iE);
    let N = true;
    if (this.allowSleep) for (N = false, b = 0; b !== y; b++) {
      const H = t[b];
      H.sleepTick(this.time), H.sleepState !== nn.SLEEPING && (N = true);
    }
    this.hasActiveBodies = N;
  }
  emitContactEvents() {
    const e = this.hasAnyEventListener("beginContact"), n = this.hasAnyEventListener("endContact");
    if ((e || n) && this.bodyOverlapKeeper.getDiff(go, vo), e) {
      for (let y = 0, t = go.length; y < t; y += 2) _s.bodyA = this.getBodyById(go[y]), _s.bodyB = this.getBodyById(go[y + 1]), this.dispatchEvent(_s);
      _s.bodyA = _s.bodyB = null;
    }
    if (n) {
      for (let y = 0, t = vo.length; y < t; y += 2) Es.bodyA = this.getBodyById(vo[y]), Es.bodyB = this.getBodyById(vo[y + 1]), this.dispatchEvent(Es);
      Es.bodyA = Es.bodyB = null;
    }
    go.length = vo.length = 0;
    const i = this.hasAnyEventListener("beginShapeContact"), u = this.hasAnyEventListener("endShapeContact");
    if ((i || u) && this.shapeOverlapKeeper.getDiff(go, vo), i) {
      for (let y = 0, t = go.length; y < t; y += 2) {
        const o = this.getShapeById(go[y]), s = this.getShapeById(go[y + 1]);
        bo.shapeA = o, bo.shapeB = s, o && (bo.bodyA = o.body), s && (bo.bodyB = s.body), this.dispatchEvent(bo);
      }
      bo.bodyA = bo.bodyB = bo.shapeA = bo.shapeB = null;
    }
    if (u) {
      for (let y = 0, t = vo.length; y < t; y += 2) {
        const o = this.getShapeById(vo[y]), s = this.getShapeById(vo[y + 1]);
        wo.shapeA = o, wo.shapeB = s, o && (wo.bodyA = o.body), s && (wo.bodyB = s.body), this.dispatchEvent(wo);
      }
      wo.bodyA = wo.bodyB = wo.shapeA = wo.shapeB = null;
    }
  }
  clearForces() {
    const e = this.bodies, n = e.length;
    for (let i = 0; i !== n; i++) {
      const u = e[i];
      u.force, u.torque, u.force.set(0, 0, 0), u.torque.set(0, 0, 0);
    }
  }
}
new Li();
const Rl = new ei(), ui = globalThis.performance || {};
if (!ui.now) {
  let v = Date.now();
  ui.timing && ui.timing.navigationStart && (v = ui.timing.navigationStart), ui.now = () => Date.now() - v;
}
new lt();
const iE = { type: "postStep" }, oE = { type: "preStep" }, Ss = { type: nn.COLLIDE_EVENT_NAME, body: null, contact: null }, aE = [], sE = [], uE = [], cE = [], go = [], vo = [], _s = { type: "beginContact", bodyA: null, bodyB: null }, Es = { type: "endContact", bodyA: null, bodyB: null }, bo = { type: "beginShapeContact", bodyA: null, bodyB: null, shapeA: null, shapeB: null }, wo = { type: "endShapeContact", bodyA: null, bodyB: null, shapeA: null, shapeB: null };
class Td {
  constructor(e) {
    typeof e == "object" && (e = e.notation), this.set = [], this.setkeys = [], this.setid = 0, this.groups = [], this.totalDice = 0, this.op = "", this.constant = null, this.result = [], this.error = false, this.boost = 1, this.notation = "", this.vectors = [], (!e || e == "0") && (this.error = true), this.parseNotation(e);
  }
  parseNotation(e) {
    if (e) {
      let r = e.split("!").length - 1 || 0;
      r > 0 && (this.boost = Math.min(Math.max(r, 0), 3) * 4), e = e.split("!").join(""), e = e.split(" ").join("");
      let m = e.split("(").length - 1, g = e.split(")").length - 1;
      m != g && (this.error = true);
    }
    const n = this.notation.length > 0 ? "+" : "";
    this.notation += n + e;
    let i = e.split("@"), u = i[0], y = new RegExp(/(\+|\-|\*|\/|\%|\^|){0,1}()(\d*)([a-z]+\d+|[a-z]+|)(?:\{([a-z]+)(.*?|)\}|)()/, "i"), t = new RegExp(/(\b)*(\-\d+|\d+)(\b)*/, "gi"), o, s = 0, c = 30, h = 0, f = 0;
    for (; !this.error && u.length > 0 && (o = y.exec(u)) !== null && s < c; ) {
      s++, u = u.substring(o[0].length);
      let r = o[1], m = o[2] && o[2].length > 0, g = o[3], a = o[4], l = o[5] || "", d = o[6] || "", b = o[7] && o[7].length > 0, S = true;
      m && (h += o[2].length), d = d.split(","), (!d || d.length < 1) && (d = ""), d.shift(), s == 1 && u.length == 0 && !a && r && g ? (a = "d20", this.op = r, this.constant = parseInt(g), g = 1) : s > 1 && u.length == 0 && !a && (this.op = r, this.constant = parseInt(g), S = false), S && this.addSet(g, a, f, h, l, d, r), b && (h -= o[7].length, f += o[7].length);
    }
    !this.error && i[1] && (o = i[1].match(t)) !== null && this.result.push(...o);
  }
  stringify(e = true) {
    let n = "";
    if (this.set.length < 1) return n;
    for (let i = 0; i < this.set.length; i++) {
      let u = this.set[i];
      n += i > 0 && u.op ? u.op : "", n += u.num + u.type, u.func && (n += "{", n += u.func ? u.func : "", n += u.args ? "," + (Array.isArray(u.args) ? u.args.join(",") : u.args) : "", n += "}");
    }
    return n += this.constant ? this.op + "" + Math.abs(this.constant) : "", e && this.result && this.result.length > 0 && (n += "@" + this.result.join(",")), this.boost > 1 && (n += "!".repeat(this.boost / 4)), n;
  }
  addSet(e, n, i = 0, u = 0, y = "", t = "", o = "+") {
    e = Math.abs(parseInt(e || 1));
    let s = o + "" + n + i + u + y + t, c = this.setkeys[s] != null, h = {};
    c && (h = this.set[this.setkeys[s] - 1]), e > 0 && (h.num = c ? e + h.num : e, h.type = n, h.sid = this.setid, h.gid = i, h.glvl = u, y && (h.func = y), t && (h.args = t), o && (h.op = o), c ? this.set[this.setkeys[s] - 1] = h : this.setkeys[s] = this.set.push(h)), c || ++this.setid;
  }
  static mergeNotation(e, n) {
    return { ...e, constant: e.constant + n.constant, notation: e.notation + "+" + n.notation, set: [...e.set, ...n.set], totalDice: e.vectors.length + n.vectors.length, vectors: [...e.vectors, ...n.vectors] };
  }
}
const Ml = { d2: { name: "d2", labels: ["1", "2"], values: [1, 2], inertia: 8, mass: 400, scale: 0.9, system: "dweird" }, dc: { type: "d2", name: "Coin", labels: ["textures/silvercoin/tail.png", "textures/silvercoin/heads.png"], setBumpMaps: ["textures/silvercoin/tail_bump.png", "textures/silvercoin/heads_bump.png"], values: [0, 1], inertia: 8, mass: 400, scale: 0.9, colorset: "coin_silver" }, d1: { name: "One-sided Dice", type: "d6", labels: ["1"], values: [1, 1], scale: 0.9, system: "dweird" }, d3: { name: "Three-Sided Dice", type: "d6", labels: ["1", "2", "3"], values: [1, 3], scale: 0.9, system: "dweird" }, df: { name: "Fudge Dice", type: "d6", labels: ["-", "0", "+"], values: [-1, 1], scale: 0.9, system: "dweird" }, d4: { name: "Four-Sided Dice", labels: ["1", "2", "3", "4"], values: [1, 4], inertia: 5, scale: 1.2 }, d6: { name: "Six-Sided Dice (Numbers)", labels: ["1", "2", "3", "4", "5", "6"], values: [1, 6], scale: 0.9 }, dpip: { name: "Six-Sided Dice (Pips)", type: "d6", labels: [`   
 \u2B24 
   `, `\u2B24  
   
  \u2B24`, `\u2B24  
 \u2B24 
  \u2B24`, `\u2B24 \u2B24
   
\u2B24 \u2B24`, `\u2B24 \u2B24
 \u2B24 
\u2B24 \u2B24`, `\u2B24 \u2B24
\u2B24 \u2B24
\u2B24 \u2B24`], values: [1, 6], scale: 0.9, font: "monospace" }, dsex: { name: "Sex-Sided Emoji Dice", type: "d6", labels: ["\u{1F346}", "\u{1F351}", "\u{1F44C}", "\u{1F4A6}", "\u{1F64F}", "\u{1F4A5}"], values: [1, 6], scale: 0.9, display: "labels", system: "dweird" }, dpoker: { name: "Poker Dice (9-Ace)", type: "d6", labels: ["A", "9", "10", "J", "Q", "K"], values: [1, 6], scale: 0.9, display: "labels", system: "dweird", font: "Times New Roman" }, dspanpoker: { name: "Spanish Poker Dice (7-Ace)", type: "d8", labels: ["A", "7", "8", "9", "10", "J", "Q", "K"], values: [1, 8], display: "labels", system: "dweird", font: "Times New Roman" }, disotope: { name: "Radioactive Twelve-Sided Dice", type: "d12", labels: ["", "", "", "", "", "", "", "", "", "", "", "\u2622\uFE0F"], values: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], mass: 350, inertia: 8, scale: 0.9, system: "dweird" }, dsuit: { name: "Four-Suited Dice", type: "d4", labels: ["\u2660\uFE0F", "\u2665\uFE0F", "\u2666\uFE0F", "\u2663\uFE0F"], values: [1, 4], inertia: 5, scale: 1.2, display: "labels", system: "dweird" }, d8: { name: "Eight-Sided Dice", labels: ["1", "2", "3", "4", "5", "6", "7", "8"], values: [1, 8] }, d10: { name: "Ten-Sided Dice (Single Digit)", labels: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "0"], values: [1, 10], mass: 350, inertia: 9, scale: 0.9 }, d100: { name: "Ten-Sided Dice (Tens Digit)", type: "d10", labels: ["10", "20", "30", "40", "50", "60", "70", "80", "90", "00"], values: [10, 100, 10], mass: 350, inertia: 9, scale: 0.9 }, d12: { name: "Twelve-Sided Dice", labels: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], values: [1, 12], mass: 350, inertia: 8, scale: 0.9 }, d20: { name: "Twenty-Sided Dice", labels: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20"], values: [1, 20], mass: 400, inertia: 6 }, dabi: { name: "Star Wars RPG: Ability Dice", type: "d8", labels: ["s", "a", `s
a`, `s
s`, "a", "s", `a
a`, ""], values: [1, 8], font: "SWRPG-Symbol-Regular", color: "#00FF00", colorset: "swrpg_abi", display: "labels", system: "swrpg" }, ddif: { name: "Star Wars RPG: Difficulty Dice", type: "d8", labels: ["t", "f", `f
t`, "t", "", `t
t`, `f
f`, "t"], values: [1, 8], font: "SWRPG-Symbol-Regular", color: "#8000FC", colorset: "swrpg_dif", display: "labels", system: "swrpg" }, dpro: { name: "Star Wars RPG: Proficiency Dice", type: "d12", labels: [`a
a`, "a", `a
a`, "x", "s", `s
a`, "s", `s
a`, `s
s`, `s
a`, `s
s`, ""], values: [1, 12], mass: 350, inertia: 8, scale: 0.9, font: "SWRPG-Symbol-Regular", color: "#FFFF00", colorset: "swrpg_pro", display: "labels", system: "swrpg" }, dcha: { name: "Star Wars RPG: Challenge Dice", type: "d12", labels: [`t
t`, "t", `t
t`, "t", `t
f`, "f", `t
f`, "f", `f
f`, "y", `f
f`, ""], values: [1, 12], mass: 350, inertia: 8, scale: 0.9, font: "SWRPG-Symbol-Regular", color: "#FF0000", colorset: "swrpg_cha", display: "labels", system: "swrpg" }, dfor: { name: "Star Wars RPG: Force Dice", type: "d12", labels: ["z", `Z
Z`, "z", `Z
Z`, "z", `Z
Z`, "z", "Z", "z", "Z", "z", `z
z`], values: [1, 12], mass: 350, inertia: 8, scale: 0.9, font: "SWRPG-Symbol-Regular", color: "#FFFFFF", colorset: "swrpg_for", display: "labels", system: "swrpg" }, dboo: { name: "Star Wars RPG: Boost Dice", type: "d6", labels: [`s  
  a`, `a  
  a`, "s", "a", "", ""], values: [1, 6], scale: 0.9, font: "SWRPG-Symbol-Regular", color: "#00FFFF", colorset: "swrpg_boo", display: "labels", system: "swrpg" }, dset: { name: "Star Wars RPG: Setback Dice", type: "d6", labels: ["", "t", "f"], values: [1, 3], scale: 0.9, font: "SWRPG-Symbol-Regular", color: "#111111", colorset: "swrpg_set", display: "labels", system: "swrpg" }, swar: { name: "Star Wars Armada: Red Attack Dice", type: "d8", labels: ["F", "F", `F
F`, "E", "E", "G", "", ""], values: [1, 8], font: "Armada-Symbol-Regular", color: "#FF0000", colorset: "swa_red", display: "labels", system: "swarmada" }, swab: { name: "Star Wars Armada: Blue Attack Dice", type: "d8", labels: ["F", "F", "F", "F", "E", "E", "G", "G"], values: [1, 8], font: "Armada-Symbol-Regular", color: "#0000FF", colorset: "swa_blue", display: "labels", system: "swarmada" }, swak: { name: "Star Wars Armada: Black Attack Dice", type: "d8", labels: ["F", "F", "F", "F", `F
E`, `F
E`, "", ""], values: [1, 8], font: "Armada-Symbol-Regular", color: "#111111", colorset: "swa_black", display: "labels", system: "swarmada" }, xwatk: { name: "Star Wars X-Wing: Red Attack Dice", type: "d8", labels: ["c", "d", "d", "d", "f", "f", "", ""], values: [1, 8], font: "XWing-Symbol-Regular", color: "#FF0000", colorset: "xwing_red", display: "labels", system: "xwing" }, xwdef: { name: "Star Wars X-Wing: Green Defense Dice", type: "d8", labels: ["e", "e", "e", "f", "f", "", "", ""], values: [1, 8], font: "XWing-Symbol-Regular", color: "#00FF00", colorset: "xwing_green", display: "labels", system: "xwing" }, swlar: { name: "Star Wars Legion: Red Attack Dice", type: "d8", labels: ["h", "h", "h", "h", "h", "c", "o", ""], values: [1, 8], font: "Legion-Symbol-Regular", color: "#FF0000", colorset: "swl_atkred", display: "labels", system: "legion" }, swlab: { name: "Star Wars Legion: Black Attack Dice", type: "d8", labels: ["h", "h", "h", "", "", "c", "o", ""], values: [1, 8], font: "Legion-Symbol-Regular", color: "#111111", colorset: "swl_atkblack", display: "labels", system: "legion" }, swlaw: { name: "Star Wars Legion: White Attack Dice", type: "d8", labels: ["h", "", "", "", "", "c", "o", ""], values: [1, 8], font: "Legion-Symbol-Regular", color: "#FFFFFF", colorset: "swl_atkwhite", display: "labels", system: "legion" }, swldr: { name: "Star Wars Legion: Red Defense Dice", type: "d6", labels: ["s", "s", "s", "d", "", ""], values: [1, 6], scale: 0.9, font: "Legion-Symbol-Regular", color: "#FF0000", colorset: "swl_defred", display: "labels", system: "legion" }, swldw: { name: "Star Wars Legion: White Defense Dice", type: "d6", labels: ["s", "", "", "d", "", ""], values: [1, 6], scale: 0.9, font: "Legion-Symbol-Regular", color: "#FFFFFF", colorset: "swl_defwhite", display: "labels", system: "legion" } }, Ui = { d4: { vertices: [[1, 1, 1], [-1, -1, 1], [-1, 1, -1], [1, -1, -1]], faces: [[1, 0, 2, 1], [0, 1, 3, 2], [0, 3, 2, 3], [1, 2, 3, 4]] }, d6: { vertices: [[-1, -1, -1], [1, -1, -1], [1, 1, -1], [-1, 1, -1], [-1, -1, 1], [1, -1, 1], [1, 1, 1], [-1, 1, 1]], faces: [[0, 3, 2, 1, 1], [1, 2, 6, 5, 2], [0, 1, 5, 4, 3], [3, 7, 6, 2, 4], [0, 4, 7, 3, 5], [4, 5, 6, 7, 6]] }, d8: { vertices: [[1, 0, 0], [-1, 0, 0], [0, 1, 0], [0, -1, 0], [0, 0, 1], [0, 0, -1]], faces: [[0, 2, 4, 1], [0, 4, 3, 2], [0, 3, 5, 3], [0, 5, 2, 4], [1, 3, 4, 5], [1, 4, 2, 6], [1, 2, 5, 7], [1, 5, 3, 8]] }, d10: { vertices: [[1, 0, -0.105], [0.809, 0.5877, 0.105], [0.309, 0.951, -0.105], [-0.309, 0.951, 0.105], [-0.809, 0.5877, -0.105], [-1, 0, 0.105], [-0.809, -0.587, -0.105], [-0.309, -0.951, 0.105], [0.309, -0.951, -0.105], [0.809, -0.5877, 0.105], [0, 0, -1], [0, 0, 1]], faces: [[5, 6, 7, 11, 0], [4, 3, 2, 10, 1], [1, 2, 3, 11, 2], [0, 9, 8, 10, 3], [7, 8, 9, 11, 4], [8, 7, 6, 10, 5], [9, 0, 1, 11, 6], [2, 1, 0, 10, 7], [3, 4, 5, 11, 8], [6, 5, 4, 10, 9]] }, d12: { vertices: [[0, 0.618, 1.618], [0, 0.618, -1.618], [0, -0.618, 1.618], [0, -0.618, -1.618], [1.618, 0, 0.618], [1.618, 0, -0.618], [-1.618, 0, 0.618], [-1.618, 0, -0.618], [0.618, 1.618, 0], [0.618, -1.618, 0], [-0.618, 1.618, 0], [-0.618, -1.618, 0], [1, 1, 1], [1, 1, -1], [1, -1, 1], [1, -1, -1], [-1, 1, 1], [-1, 1, -1], [-1, -1, 1], [-1, -1, -1]], faces: [[2, 14, 4, 12, 0, 1], [15, 9, 11, 19, 3, 2], [16, 10, 17, 7, 6, 3], [6, 7, 19, 11, 18, 4], [6, 18, 2, 0, 16, 5], [18, 11, 9, 14, 2, 6], [1, 17, 10, 8, 13, 7], [1, 13, 5, 15, 3, 8], [13, 8, 12, 4, 5, 9], [5, 4, 14, 9, 15, 10], [0, 12, 8, 10, 16, 11], [3, 19, 7, 17, 1, 12]] }, d20: { vertices: [[-1, 1.618, 0], [1, 1.618, 0], [-1, -1.618, 0], [1, -1.618, 0], [0, -1, 1.618], [0, 1, 1.618], [0, -1, -1.618], [0, 1, -1.618], [1.618, 0, -1], [1.618, 0, 1], [-1.618, 0, -1], [-1.618, 0, 1]], faces: [[0, 11, 5, 1], [0, 5, 1, 2], [0, 1, 7, 3], [0, 7, 10, 4], [0, 10, 11, 5], [1, 5, 9, 6], [5, 11, 4, 7], [11, 10, 2, 8], [10, 7, 6, 9], [7, 1, 8, 10], [3, 9, 4, 11], [3, 4, 2, 12], [3, 2, 6, 13], [3, 6, 8, 14], [3, 8, 9, 15], [4, 9, 5, 16], [2, 4, 11, 17], [6, 2, 10, 18], [8, 6, 7, 19], [9, 8, 1, 20]] } }, lE = { name: "", scale: 1, font: "Arial", color: "", labels: [], valueMap: [], values: [], normals: [], mass: 300, inertia: 13, geometry: null, display: "values", system: "d20" };
class fE {
  constructor(e) {
    if (!Ml.hasOwnProperty(e)) return console.error("dice type unavailable");
    Object.assign(this, lE, Ml[e]), this.shape = Ml[e].type || e, this.type = e, this.setLabels(this.labels), this.setValues(this.values[0], this.values[1], this.values[2]), this.setValueMap(this.valueMap), this.bumpMaps && this.setBumpMaps(this.bumpMaps);
  }
  setValues(e = 1, n = 20, i = 1) {
    this.values = this.range(e, n, i);
  }
  setValueMap(e) {
    for (let n = 0; n < this.values.length; n++) {
      let i = this.values[n];
      e[i] != null && (this.valueMap[i] = e[i]);
    }
  }
  registerFaces(e, n = "labels") {
    let i;
    if (n == "labels" ? i = this.labels : i = this.normals, i.unshift(""), ["d2", "d10"].includes(this.shape) || i.unshift(""), this.shape == "d4") {
      let u = e[0], y = e[1], t = e[2], o = e[3];
      this.labels = [[[], [0, 0, 0], [y, o, t], [u, t, o], [y, u, o], [u, y, t]], [[], [0, 0, 0], [y, t, o], [t, u, o], [y, o, u], [t, y, u]], [[], [0, 0, 0], [o, t, y], [t, o, u], [o, y, u], [t, u, y]], [[], [0, 0, 0], [o, y, t], [u, o, t], [o, u, y], [u, t, y]]];
    } else Array.prototype.push.apply(i, e);
  }
  setLabels(e) {
    this.loadTextures(e, this.registerFaces.bind(this), "labels");
  }
  setBumpMaps(e) {
    this.loadTextures(e, this.registerFaces.bind(this), "bump");
  }
  loadTextures(e, n, i) {
    let u = 0, y = e.length, t = /\.(PNG|JPG|GIF|WEBP)$/i, o = Array(e.length), s = false;
    for (let c = 0; c < y; c++) {
      if (e[c] == "" || !e[c].match(t)) {
        o[c] = e[c], ++u;
        continue;
      }
      s = true, o[c] = new Image(), o[c].onload = function() {
        ++u >= y && n(o, i);
      }, o[c].src = e[c];
    }
    s || n(o, i);
  }
  range(e, n, i = 1) {
    for (var u = [e], y = e; y < n; ) u.push(y += i || 1);
    return u;
  }
}
const pE = { none: { name: "Plastic" }, perfectmetal: { name: "Perfect Metal", color: 14540253, roughness: 0, metalness: 1, envMapIntensity: 1 }, metal: { name: "Metal", color: 14540253, roughness: 0.5, metalness: 0.6, envMapIntensity: 1 }, wood: { name: "Wood", color: 14540253, roughness: 0.9, metalness: 0, envMapIntensity: 1 }, glass: { name: "Glass", color: 14540253, roughness: 0.1, metalness: 0, envMapIntensity: 1 } }, hE = { baseScale: 100, bumpMapping: true }, Is = class {
  constructor(v) {
    this.geometries = {}, this.materials_cache = {}, this.cache_hits = 0, this.cache_misses = 0, this.label_color = "", this.dice_color = "", this.edge_color = "", this.label_outline = "", this.dice_texture = "", this.dice_material = "", this.material_options = { specular: 16777215, color: 11908533, shininess: 5, flatShading: true }, Object.assign(this, hE, v);
  }
  updateConfig(v = {}) {
    Object.assign(this, v), v.scale && this.scaleGeometry();
  }
  setBumpMapping(v) {
    this.bumpMapping = v, this.materials_cache = {};
  }
  create(v) {
    let e = this.get(v);
    if (!e) return null;
    let n = this.geometries[v];
    if (n || (n = this.createGeometry(e.shape, e.scale * this.baseScale), this.geometries[v] = n), !n) return null;
    this.setMaterialInfo();
    let i = new no(n, this.createMaterials(e, this.baseScale / 2, 1));
    switch (i.result = [], i.shape = e.shape, i.rerolls = 0, i.resultReason = "natural", i.mass = e.mass, i.getFaceValue = function() {
      let u = this.resultReason, y = new _r(0, 0, this.shape == "d4" ? -1 : 1), t, o = Math.PI * 2, s = this.geometry.getAttribute("normal").array;
      for (let g = 0, a = this.geometry.groups.length; g < a; ++g) {
        let l = this.geometry.groups[g];
        if (l.materialIndex == 0) continue;
        let d = g * 9, b = new _r(s[d], s[d + 1], s[d + 2]).clone().applyQuaternion(this.body.quaternion).angleTo(y);
        b < o && (o = b, t = l);
      }
      let c = t.materialIndex - 1, h = 2;
      const f = Is.dice[this.notation.type];
      if (this.shape == "d4") {
        let g = c - 1 == 0 ? 5 : c;
        return { value: c, label: f.labels[c - 1][g][0], reason: u };
      }
      ["d10", "d2"].includes(this.shape) && (c += 1, h -= 1);
      let r = f.values[(c - 1) % f.values.length], m = f.labels[(c - 1) % (f.labels.length - 2) + h];
      return { value: r, label: m, reason: u };
    }, i.storeRolledValue = function(u) {
      this.resultReason = u || this.resultReason, this.result.push(this.getFaceValue());
    }, i.getLastValue = function() {
      return !this.result || this.result.length < 1 ? { value: void 0, label: "", reason: "" } : this.result[this.result.length - 1];
    }, i.ignoreLastValue = function(u) {
      let y = this.getLastValue();
      y.value !== void 0 && (y.ignore = u, this.setLastValue(y));
    }, i.setLastValue = function(u) {
      if (!(!this.result || this.result.length < 1) && !(!u || u.length < 1)) return this.result[this.result.length - 1] = u;
    }, e.color && (i.material[0].color = new Mn(e.color), i.material[0].emissive = new Mn(e.color), i.material[0].emissiveIntensity = 1, i.material[0].needsUpdate = true), e.values.length) {
      case 1:
        return this.fixmaterials(i, 1);
      case 2:
        return this.fixmaterials(i, 2);
      case 3:
        return this.fixmaterials(i, 3);
      default:
        return i;
    }
  }
  get(v) {
    let e;
    return Is.dice.hasOwnProperty(v) ? e = Is.dice[v] : (e = new fE(v), Is.dice[v] = e), e;
  }
  getGeometry(v) {
    return this.geometries[v];
  }
  scaleGeometry() {
  }
  createMaterials(v, e, n, i = true, u = 0) {
    let y = [], t = v.labels;
    v.shape == "d4" && (t = v.labels[u], e = this.baseScale / 2, n = this.baseScale * 2);
    for (var o = 0; o < t.length; ++o) {
      var s;
      this.dice_material != "none" ? (s = new M1(pE[this.dice_material]), s.envMapIntensity = 0) : s = new I1(this.material_options);
      let c;
      if (o == 0) {
        let h = { name: "none" };
        this.dice_texture_rand.composite != "source-over" && (h = this.dice_texture_rand), c = this.createTextMaterial(v, t, o, e, n, h, this.label_color_rand, this.label_outline_rand, this.edge_color_rand, i), s.map = c.composite;
      } else if (c = this.createTextMaterial(v, t, o, e, n, this.dice_texture_rand, this.label_color_rand, this.label_outline_rand, this.dice_color_rand, i), s.map = c.composite, this.bumpMapping) {
        {
          let h = 0.75;
          e > 35 && (h = 1), e > 40 && (h = 2.5), e > 45 && (h = 4), s.bumpScale = h;
        }
        c.bump && (s.bumpMap = c.bump), v.shape != "d4" && v.normals[o] && (s.bumpMap = new Mi(v.normals[o]), s.bumpScale = 4, s.bumpMap.needsUpdate = true);
      }
      s.opacity = 1, s.transparent = true, s.depthTest = false, s.needUpdate = true, y.push(s);
    }
    return y;
  }
  createTextMaterial(v, e, n, i, u, y, t, o, s, c) {
    if (e[n] === void 0) return null;
    y = y || this.dice_texture_rand, t = t || this.label_color_rand, o = o || this.label_outline_rand, s = s || this.dice_color_rand, c = c ?? true;
    let h = e[n], f = false, r = h;
    h instanceof HTMLImageElement ? r = h.src : h instanceof Array && h.forEach((w) => {
      r += w.src;
    });
    let m = v.type + r + n + y.name + t + o + s;
    if (v.shape == "d4" && (m = v.type + r + y.name + t + o + s), c && this.materials_cache[m] != null) return this.cache_hits++, this.materials_cache[m];
    let g = document.createElement("canvas"), a = g.getContext("2d", { alpha: true });
    a.globalAlpha = 0, a.clearRect(0, 0, g.width, g.height);
    let l = document.createElement("canvas"), d = l.getContext("2d", { alpha: true });
    d.globalAlpha = 0, d.clearRect(0, 0, l.width, l.height);
    let b;
    if (v.shape == "d4" ? b = this.calc_texture_size(i + u) * 4 : b = this.calc_texture_size(i + i * 2 * u) * 4, g.width = g.height = b, l.width = l.height = b, a.fillStyle = s, a.fillRect(0, 0, g.width, g.height), d.fillStyle = "#FFFFFF", d.fillRect(0, 0, l.width, l.height), y.texture && y.name != "" && y.name != "none" ? (a.globalCompositeOperation = y.composite || "source-over", a.drawImage(y.texture, 0, 0, g.width, g.height), a.globalCompositeOperation = "source-over", y.bump && (d.globalCompositeOperation = "source-over", d.drawImage(y.bump, 0, 0, g.width, g.height))) : a.globalCompositeOperation = "source-over", a.globalCompositeOperation = "source-over", a.textAlign = "center", a.textBaseline = "middle", d.textAlign = "center", d.textBaseline = "middle", v.shape != "d4") {
      let w = { d8: { even: -7.5, odd: -127.5 }, d10: { all: -6 }, d12: { all: 5 }, d20: { all: -7.5 } }[v.shape];
      if (w) {
        let F;
        if (w.hasOwnProperty("all") ? F = w.all : n > 0 && n % 2 != 0 ? F = w.odd : F = w.even, F && F != 0) {
          var S = g.width / 2, E = g.height / 2;
          a.translate(S, E), a.rotate(F * (Math.PI / 180)), a.translate(-S, -E), d.translate(S, E), d.rotate(F * (Math.PI / 180)), d.translate(-S, -E);
        }
      }
      if (h instanceof HTMLImageElement) f = true, a.drawImage(h, 0, 0, h.width, h.height, 0, 0, g.width, g.height);
      else {
        let F = b / (1 + 2 * u), I = g.height / 2 + 10, q = g.width / 2;
        v.shape == "d10" ? (F = F * 0.75, I = I * 1.15 - 10) : v.shape == "d20" && (q = q * 0.98), a.font = F + "pt " + v.font, d.font = F + "pt " + v.font;
        let N = a.measureText("M").width * 1.4, H = h.split(`
`);
        H.length > 1 && (F = F / H.length, a.font = F + "pt " + v.font, d.font = F + "pt " + v.font, N = a.measureText("M").width * 1.2, I -= N * H.length / 2);
        for (let _ = 0, x = H.length; _ < x; _++) {
          let L = H[_].trim();
          o != "none" && o != s && (a.strokeStyle = o, a.lineWidth = 5, a.strokeText(H[_], q, I), d.strokeStyle = "#000000", d.lineWidth = 5, d.strokeText(H[_], q, I), (L == "6" || L == "9") && (a.strokeText("  .", q, I), d.strokeText("  .", q, I))), a.fillStyle = t, a.fillText(H[_], q, I), d.fillStyle = "#000000", d.fillText(H[_], q, I), (L == "6" || L == "9") && (a.fillText("  .", q, I), d.fillText("  .", q, I)), I += N * 1.5;
        }
      }
    } else {
      var S = g.width / 2, E = g.height / 2;
      a.font = b / 128 * 24 + "pt " + v.font, d.font = b / 128 * 24 + "pt " + v.font;
      for (let I = 0; I < h.length; I++) {
        if (h[I] instanceof HTMLImageElement) {
          let q = h[I].width / g.width;
          a.drawImage(h[I], 0, 0, h[I].width, h[I].height, 100 / q, 25 / q, 60 / q, 60 / q);
        } else o != "none" && o != s && (a.strokeStyle = o, a.lineWidth = 5, a.strokeText(h[I], S, E - b * 0.3), d.strokeStyle = "#000000", d.lineWidth = 5, d.strokeText(h[I], S, E - b * 0.3)), a.fillStyle = t, a.fillText(h[I], S, E - b * 0.3), d.fillStyle = "#000000", d.fillText(h[I], S, E - b * 0.3);
        a.translate(S, E), a.rotate(Math.PI * 2 / 3), a.translate(-S, -E), d.translate(S, E), d.rotate(Math.PI * 2 / 3), d.translate(-S, -E);
      }
    }
    var R = new nd(g), k;
    return f ? k = null : k = new nd(l), c && (this.cache_misses++, this.materials_cache[m] = { composite: R, bump: k }), { composite: R, bump: k };
  }
  applyColorSet(v) {
    var e;
    this.colordata = v, this.label_color = v.foreground, this.dice_color = v.background, this.label_outline = v.outline, this.dice_texture = v.texture, this.dice_material = ((e = v == null ? void 0 : v.texture) == null ? void 0 : e.material) || "none", this.edge_color = v.hasOwnProperty("edge") ? v.edge : v.background;
  }
  setMaterialInfo(v = "") {
    let e = this.colordata, n = this.dice_texture, i = this.dice_material;
    if (this.dice_color_rand = "", this.label_color_rand = "", this.label_outline_rand = "", this.dice_texture_rand = "", this.dice_material_rand = "", this.edge_color_rand = "", Array.isArray(this.dice_color)) {
      var u = Math.floor(Math.random() * this.dice_color.length);
      Array.isArray(this.label_color) && this.label_color.length == this.dice_color.length && (this.label_color_rand = this.label_color[u], Array.isArray(this.label_outline) && this.label_outline.length == this.label_color.length && (this.label_outline_rand = this.label_outline[u])), Array.isArray(this.dice_texture) && this.dice_texture.length == this.dice_color.length && (this.dice_texture_rand = this.dice_texture[u], this.dice_material_rand = this.dice_texture_rand.material), Array.isArray(this.edge_color) && this.edge_color.length == this.dice_color.length && (this.edge_color_rand = this.edge_color[u]), this.dice_color_rand = this.dice_color[u];
    } else this.dice_color_rand = this.dice_color;
    if (this.edge_color_rand == "") if (Array.isArray(this.edge_color)) {
      var u = Math.floor(Math.random() * this.edge_color.length);
      this.edge_color_rand = this.edge_color[u];
    } else this.edge_color_rand = this.edge_color;
    if (this.label_color_rand == "" && Array.isArray(this.label_color)) {
      var u = this.label_color[Math.floor(Math.random() * this.label_color.length)];
      Array.isArray(this.label_outline) && this.label_outline.length == this.label_color.length && (this.label_outline_rand = this.label_outline[u]), this.label_color_rand = this.label_color[u];
    } else this.label_color_rand == "" && (this.label_color_rand = this.label_color);
    if (this.label_outline_rand == "" && Array.isArray(this.label_outline)) {
      var u = this.label_outline[Math.floor(Math.random() * this.label_outline.length)];
      this.label_outline_rand = this.label_outline[u];
    } else this.label_outline_rand == "" && (this.label_outline_rand = this.label_outline);
    this.dice_texture_rand == "" && Array.isArray(this.dice_texture) ? (this.dice_texture_rand = this.dice_texture[Math.floor(Math.random() * this.dice_texture.length)], this.dice_material_rand = this.dice_texture_rand.material || this.dice_material) : this.dice_texture_rand == "" && (this.dice_texture_rand = this.dice_texture, this.dice_material_rand = this.dice_texture_rand.material || this.dice_material), this.dice_material_rand == "" && Array.isArray(this.dice_material) ? this.dice_material_rand = this.dice_material[Math.floor(Math.random() * this.dice_material.length)] : this.dice_material_rand == "" && (this.dice_material_rand = this.dice_material), this.colordata && this.colordata.id != e.id && this.applyColorSet(e, n, i);
  }
  calc_texture_size(v) {
    return Math.pow(2, Math.floor(Math.log(v) / Math.log(2)));
  }
  createGeometry(v, e, n = false) {
    const i = n ? "create_shape" : "create_geom";
    switch (v) {
      case "d2":
        var u = new cf(1 * e, 1 * e, 0.1 * e, 32);
        return u.cannon_shape = new US(1 * e, 1 * e, 0.1 * e, 8), u;
      case "d4":
        return this[i](Ui.d4.vertices, Ui.d4.faces, e, -0.1, Math.PI * 7 / 6, 0.96);
      case "d6":
        return this[i](Ui.d6.vertices, Ui.d6.faces, e, 0.1, Math.PI / 4, 0.96);
      case "d8":
        return this[i](Ui.d8.vertices, Ui.d8.faces, e, 0, -Math.PI / 4 / 2, 0.965);
      case "d10":
        return this[i](Ui.d10.vertices, Ui.d10.faces, e, 0.3, Math.PI, 0.945);
      case "d12":
        return this[i](Ui.d12.vertices, Ui.d12.faces, e, 0.2, -Math.PI / 4 / 2, 0.968);
      case "d20":
        return this[i](Ui.d20.vertices, Ui.d20.faces, e, -0.2, -Math.PI / 4 / 2, 0.955);
      default:
        return console.error(`Geometry for ${v} is not available`), null;
    }
  }
  fixmaterials(v, e) {
    for (let i = 0, u = v.geometry.groups.length; i < u; ++i) {
      var n = v.geometry.groups[i].materialIndex - 2;
      if (n < e) continue;
      let y = n % e;
      v.geometry.groups[i].materialIndex = y + 2;
    }
    return v.geometry.elementsNeedUpdate = true, v;
  }
  create_shape(v, e, n) {
    for (var i = new Array(v.length), u = 0; u < v.length; ++u) i[u] = new _r().fromArray(v[u]).normalize();
    for (var y = new Array(v.length), t = new Array(e.length), u = 0; u < i.length; ++u) {
      var o = i[u];
      y[u] = new lt(o.x * n, o.y * n, o.z * n);
    }
    for (var u = 0; u < e.length; ++u) t[u] = e[u].slice(0, e[u].length - 1);
    return new ta({ vertices: y, faces: t });
  }
  make_geom(v, e, n, i, u) {
    let y = new oo();
    for (let m = 0; m < v.length; ++m) v[m] = v[m].multiplyScalar(n);
    let t = [];
    const o = [], s = [], c = new _r(), h = new _r();
    let f, r = 0;
    for (let m = 0; m < e.length; ++m) {
      let g = e[m], a = g.length - 1, l = Math.PI * 2 / a;
      f = g[a] + 1;
      for (let b = 0; b < a - 2; ++b) t.push(...v[g[0]].toArray()), t.push(...v[g[b + 1]].toArray()), t.push(...v[g[b + 2]].toArray()), c.subVectors(v[g[b + 2]], v[g[b + 1]]), h.subVectors(v[g[0]], v[g[b + 1]]), c.cross(h), c.normalize(), o.push(...c.toArray()), o.push(...c.toArray()), o.push(...c.toArray()), s.push((Math.cos(u) + 1 + i) / 2 / (1 + i), (Math.sin(u) + 1 + i) / 2 / (1 + i)), s.push((Math.cos(l * (b + 1) + u) + 1 + i) / 2 / (1 + i), (Math.sin(l * (b + 1) + u) + 1 + i) / 2 / (1 + i)), s.push((Math.cos(l * (b + 2) + u) + 1 + i) / 2 / (1 + i), (Math.sin(l * (b + 2) + u) + 1 + i) / 2 / (1 + i));
      let d = (a - 2) * 3;
      for (let b = 0; b < d / 3; b++) y.addGroup(r, 3, f), r += 3;
    }
    return y.setAttribute("position", new yi(t, 3)), y.setAttribute("normal", new yi(o, 3)), y.setAttribute("uv", new yi(s, 2)), y.boundingSphere = new Bs(new _r(), n), y;
  }
  make_d10_geom(v, e, n, i, u) {
    let y = new oo();
    for (let b = 0; b < v.length; ++b) v[b] = v[b].multiplyScalar(n);
    let t = [];
    const o = [], s = [], c = new _r(), h = new _r();
    let f, r = 0;
    for (let b = 0; b < e.length; ++b) {
      let S = e[b], E = S.length - 1, R = Math.PI * 2 / E;
      f = S[E] + 1;
      var m = 0.65, g = 0.85, a = 1 - 1 * g, l = 1 - 0.895 / 1.105 * g, d = 1;
      for (let w = 0; w < E - 2; ++w) t.push(...v[S[0]].toArray()), t.push(...v[S[w + 1]].toArray()), t.push(...v[S[w + 2]].toArray()), c.subVectors(v[S[w + 2]], v[S[w + 1]]), h.subVectors(v[S[0]], v[S[w + 1]]), c.cross(h), c.normalize(), o.push(...c.toArray()), o.push(...c.toArray()), o.push(...c.toArray()), e[b][e[b].length - 1] == -1 || w >= 2 ? (s.push((Math.cos(u) + 1 + i) / 2 / (1 + i), (Math.sin(u) + 1 + i) / 2 / (1 + i)), s.push((Math.cos(R * (w + 1) + u) + 1 + i) / 2 / (1 + i), (Math.sin(R * (w + 1) + u) + 1 + i) / 2 / (1 + i)), s.push((Math.cos(R * (w + 2) + u) + 1 + i) / 2 / (1 + i), (Math.sin(R * (w + 2) + u) + 1 + i) / 2 / (1 + i))) : w == 0 ? (s.push(0.5 - m / 2, l), s.push(0.5, a), s.push(0.5 + m / 2, l)) : w == 1 && (s.push(0.5 - m / 2, l), s.push(0.5 + m / 2, l), s.push(0.5, d));
      let k = (E - 2) * 3;
      for (let w = 0; w < k / 3; w++) y.addGroup(r, 3, f), r += 3;
    }
    return y.setAttribute("position", new yi(t, 3)), y.setAttribute("normal", new yi(o, 3)), y.setAttribute("uv", new yi(s, 2)), y.boundingSphere = new Bs(new _r(), n), y;
  }
  chamfer_geom(v, e, n) {
    for (var i = [], u = [], y = new Array(v.length), t = 0; t < v.length; ++t) y[t] = [];
    for (var t = 0; t < e.length; ++t) {
      for (var o = e[t], s = o.length - 1, c = new _r(), h = new Array(s), f = 0; f < s; ++f) {
        var r = v[o[f]].clone();
        c.add(r), y[o[f]].push(h[f] = i.push(r) - 1);
      }
      c.divideScalar(s);
      for (var f = 0; f < s; ++f) {
        var r = i[h[f]];
        r.subVectors(r, c).multiplyScalar(n).addVectors(r, c);
      }
      h.push(o[s]), u.push(h);
    }
    for (var t = 0; t < e.length - 1; ++t) for (var f = t + 1; f < e.length; ++f) {
      for (var m = [], g = -1, a = 0; a < e[t].length - 1; ++a) {
        var l = e[f].indexOf(e[t][a]);
        l >= 0 && l < e[f].length - 1 && (g >= 0 && a != g + 1 ? m.unshift([t, a], [f, l]) : m.push([t, a], [f, l]), g = a);
      }
      m.length == 4 && u.push([u[m[0][0]][m[0][1]], u[m[1][0]][m[1][1]], u[m[3][0]][m[3][1]], u[m[2][0]][m[2][1]], -1]);
    }
    for (var t = 0; t < y.length; ++t) {
      for (var d = y[t], h = [d[0]], b = d.length - 1; b; ) {
        for (var a = e.length; a < u.length; ++a) {
          var S = u[a].indexOf(h[h.length - 1]);
          if (S >= 0 && S < 4) {
            --S == -1 && (S = 3);
            var E = u[a][S];
            if (d.indexOf(E) >= 0) {
              h.push(E);
              break;
            }
          }
        }
        --b;
      }
      h.push(-1), u.push(h);
    }
    return { vectors: i, faces: u };
  }
  create_geom(v, e, n, i, u, y) {
    for (var t = new Array(v.length), o = 0; o < v.length; ++o) t[o] = new _r().fromArray(v[o]).normalize();
    var s = this.chamfer_geom(t, e, y);
    if (e.length != 10) var c = this.make_geom(s.vectors, s.faces, n, i, u);
    else var c = this.make_d10_geom(s.vectors, s.faces, n, i, u);
    return c.cannon_shape = this.create_shape(v, e, n), c.name = "d" + e.length, c;
  }
};
let Hm = Is;
Pg(Hm, "dice", {});
const Il = { cloudy: { name: "Clouds (Transparent)", composite: "destination-in", source: "textures/cloudy.webp", source_bump: "textures/cloudy.alt.webp" }, cloudy_2: { name: "Clouds", composite: "multiply", source: "textures/cloudy.alt.webp", source_bump: "textures/cloudy.alt.webp" }, fire: { name: "Fire", composite: "multiply", source: "textures/fire.webp", source_bump: "textures/fire.webp", material: "metal" }, marble: { name: "Marble", composite: "multiply", source: "textures/marble.webp", source_bump: "", material: "glass" }, water: { name: "Water", composite: "destination-in", source: "textures/water.webp", source_bump: "textures/water.webp", material: "glass" }, ice: { name: "Ice", composite: "destination-in", source: "textures/ice.webp", source_bump: "textures/ice.webp", material: "glass" }, paper: { name: "Paper", composite: "multiply", source: "textures/paper.webp", source_bump: "textures/paper-bump.webp", material: "wood" }, speckles: { name: "Speckles", composite: "multiply", source: "textures/speckles.webp", source_bump: "textures/speckles.webp", material: "none" }, glitter: { name: "Glitter", composite: "multiply", source: "textures/glitter.webp", source_bump: "textures/glitter-bump.webp", material: "none" }, glitter_2: { name: "Glitter (Transparent)", composite: "destination-in", source: "textures/glitter-alpha.webp", source_bump: "", material: "none" }, stars: { name: "Stars", composite: "multiply", source: "textures/stars.webp", source_bump: "textures/stars.webp", material: "none" }, stainedglass: { name: "Stained Glass", composite: "multiply", source: "textures/stainedglass.webp", source_bump: "textures/stainedglass-bump.webp", material: "glass" }, wood: { name: "Wood", composite: "multiply", source: "textures/wood.webp", source_bump: "textures/wood.webp", material: "wood" }, metal: { name: "Stainless Steel", composite: "multiply", source: "textures/metal.webp", source_bump: "textures/metal-bump.webp", material: "metal" }, skulls: { name: "Skulls", composite: "multiply", source: "textures/skulls.webp", source_bump: "textures/skulls.webp" }, leopard: { name: "Leopard", composite: "multiply", source: "textures/leopard.webp", source_bump: "textures/leopard.webp", material: "wood" }, tiger: { name: "Tiger", composite: "multiply", source: "textures/tiger.webp", source_bump: "textures/tiger.webp", material: "wood" }, cheetah: { name: "Cheetah", composite: "multiply", source: "textures/cheetah.webp", source_bump: "textures/cheetah.webp", material: "wood" }, dragon: { name: "Dragon", composite: "multiply", source: "textures/dragon.webp", source_bump: "textures/dragon-bump.webp", material: "none" }, lizard: { name: "Lizard", composite: "multiply", source: "textures/lizard.webp", source_bump: "textures/lizard.webp", material: "none" }, bird: { name: "Bird", composite: "multiply", source: "textures/feather.webp", source_bump: "textures/feather-bump.webp", material: "wood" }, astral: { name: "Astral Sea", composite: "multiply", source: "textures/astral.webp", source_bump: "textures/stars.webp", material: "none" }, acleaf: { name: "AC Leaf", composite: "multiply", source: "textures/acleaf.webp", source_bump: "textures/acleaf.webp", material: "none" }, thecage: { name: "Nicholas Cage", composite: "multiply", source: "textures/thecage.webp", source_bump: "", material: "metal" }, isabelle: { name: "Isabelle", composite: "source-over", source: "textures/isabelle.webp", source_bump: "", material: "none" }, bronze01: { name: "bronze01", composite: "difference", source: "textures/bronze01.webp", source_bump: "", material: "metal" }, bronze02: { name: "bronze02", composite: "difference", source: "textures/bronze02.webp", source_bump: "", material: "metal" }, bronze03: { name: "bronze03", composite: "difference", source: "textures/bronze03.webp", source_bump: "", material: "metal" }, bronze03a: { name: "bronze03a", composite: "difference", source: "textures/bronze03a.webp", source_bump: "", material: "metal" }, bronze03b: { name: "bronze03b", composite: "difference", source: "textures/bronze03b.webp", source_bump: "", material: "metal" }, bronze04: { name: "bronze04", composite: "difference", source: "textures/bronze04.webp", source_bump: "", material: "metal" }, none: { name: "none", composite: "source-over", source: "", source_bump: "", material: "" }, "": { name: "~ Preset ~", composite: "source-over", source: "", source_bump: "", material: "" } }, kd = { coin_default: { name: "Gold Coin", description: "Gold Dragonhead Coin", category: "Other", foreground: "#f6c928", background: "#f6c928", outline: "none", texture: "metal" }, coin_silver: { name: "Silver Coin", description: "Gold Dragonhead Coin", category: "Other", foreground: "#f6c928", background: "#f6c928", outline: "none", texture: "metal" }, radiant: { name: "Radiant", category: "Damage Types", foreground: "#F9B333", background: "#FFFFFF", outline: "", texture: "paper", description: "Radiant" }, fire: { name: "Fire", category: "Damage Types", foreground: "#f8d84f", background: ["#f8d84f", "#f9b02d", "#f43c04", "#910200", "#4c1009"], outline: "black", texture: "fire", description: "Fire" }, ice: { name: "Ice", category: "Damage Types", foreground: "#60E9FF", background: ["#214fa3", "#3c6ac1", "#253f70", "#0b56e2", "#09317a"], outline: "black", texture: "ice", description: "Ice" }, poison: { name: "Poison", category: "Damage Types", foreground: "#D6A8FF", background: ["#313866", "#504099", "#66409e", "#934fc3", "#c949fc"], outline: "black", texture: "cloudy", description: "Poison" }, acid: { name: "Acid", category: "Damage Types", foreground: "#A9FF70", background: ["#a6ff00", "#83b625", "#5ace04", "#69f006", "#b0f006", "#93bc25"], outline: "black", texture: "marble", description: "Acid" }, thunder: { name: "Thunder", category: "Damage Types", foreground: "#FFC500", background: "#7D7D7D", outline: "black", texture: "cloudy", description: "Thunder" }, lightning: { name: "Lightning", category: "Damage Types", foreground: "#FFC500", background: ["#f17105", "#f3ca40", "#eddea4", "#df9a57", "#dea54b"], outline: "#7D7D7D", texture: "ice", description: "Lightning" }, air: { name: "Air", category: "Damage Types", foreground: "#ffffff", background: ["#d0e5ea", "#c3dee5", "#a4ccd6", "#8dafb7", "#80a4ad"], outline: "black", texture: "cloudy", description: "Air" }, water: { name: "Water", category: "Damage Types", foreground: "#60E9FF", background: ["#87b8c4", "#77a6b2", "#6b98a3", "#5b8691", "#4b757f"], outline: "black", texture: "water", description: "Water" }, earth: { name: "Earth", category: "Damage Types", foreground: "#6C9943", background: ["#346804", "#184200", "#527f22", "#3a1d04", "#56341a", "#331c17", "#5a352a", "#302210"], outline: "black", texture: "speckles", description: "Earth" }, force: { name: "Force", category: "Damage Types", foreground: "white", background: ["#FF97FF", "#FF68FF", "#C651C6"], outline: "#570000", texture: "stars", description: "Force" }, psychic: { name: "Psychic", category: "Damage Types", foreground: "#D6A8FF", background: ["#313866", "#504099", "#66409E", "#934FC3", "#C949FC", "#313866"], outline: "black", texture: "speckles", description: "Psychic" }, necrotic: { name: "Necrotic", category: "Damage Types", foreground: "#ffffff", background: "#6F0000", outline: "black", texture: "skulls", description: "Necrotic" }, breebaby: { name: "Pastel Sunset", category: "Custom Sets", foreground: ["#5E175E", "#564A5E", "#45455E", "#3D5A5E", "#1E595E", "#5E3F3D", "#5E1E29", "#283C5E", "#25295E"], background: ["#FE89CF", "#DFD4F2", "#C2C2E8", "#CCE7FA", "#A1D9FC", "#F3C3C2", "#EB8993", "#8EA1D2", "#7477AD"], outline: "white", texture: "marble", description: "Pastel Sunset, for Breyanna" }, pinkdreams: { name: "Pink Dreams", category: "Custom Sets", foreground: "white", background: ["#ff007c", "#df73ff", "#f400a1", "#df00ff", "#ff33cc"], outline: "#570000", texture: "skulls", description: "Pink Dreams, for Ethan" }, inspired: { name: "Inspired", category: "Custom Sets", foreground: "#FFD800", background: "#C4C4B6", outline: "#8E8E86", texture: "none", description: "Inspired, for Austin" }, bloodmoon: { name: "Blood Moon", category: "Custom Sets", foreground: "#CDB800", background: "#6F0000", outline: "black", texture: "marble", description: "Blood Moon, for Jared" }, starynight: { name: "Stary Night", category: "Custom Sets", foreground: "#4F708F", background: ["#091636", "#233660", "#4F708F", "#8597AD", "#E2E2E2"], outline: "white", texture: "speckles", description: "Stary Night, for Mai" }, glitterparty: { name: "Glitter Party", category: "Custom Sets", foreground: "white", background: ["#FFB5F5", "#7FC9FF", "#A17FFF"], outline: "none", texture: "glitter", description: "Glitter Party, for Austin" }, astralsea: { name: "Astral Sea", category: "Custom Sets", foreground: "#565656", background: "white", outline: "none", texture: "astral", description: "The Astral Sea, for Austin" }, bronze: { name: "Thylean Bronze", description: "Thylean Bronze by @SpencerThayer", category: "Custom Sets", foreground: ["#FF9159", "#FFB066", "#FFBF59", "#FFD059"], background: ["#705206", "#7A4E06", "#643100", "#7A2D06"], outline: ["#3D2D03", "#472D04", "#301700", "#471A04"], edge: ["#FF5D0D", "#FF7B00", "#FFA20D", "#FFBA0D"], texture: ["bronze01", "bronze02", "bronze03", "bronze03a", "bronze03b", "bronze04"] }, dragons: { name: "Here be Dragons", category: "Custom Sets", foreground: "#FFFFFF", background: ["#B80000", "#4D5A5A", "#5BB8FF", "#7E934E", "#FFFFFF", "#F6ED7C", "#7797A3", "#A78437", "#862C1A", "#FFDF8A"], outline: "black", texture: ["dragon", "lizard"], description: "Here be Dragons" }, birdup: { name: "Bird Up", category: "Custom Sets", foreground: "#FFFFFF", background: ["#F11602", "#FFC000", "#6EC832", "#0094BC", "#05608D", "#FEABB3", "#F75680", "#F3F0DF", "#C7A57F"], outline: "black", texture: "bird", description: "Bird Up!" }, tigerking: { name: "Tiger King", category: "Other", foreground: "#ffffff", background: "#FFCC40", outline: "black", texture: ["leopard", "tiger", "cheetah"], description: "Leopard Print" }, covid: { name: "COViD", category: "Other", foreground: "#A9FF70", background: ["#a6ff00", "#83b625", "#5ace04", "#69f006", "#b0f006", "#93bc25"], outline: "black", texture: "fire", description: "Covid-19" }, acleaf: { name: "Animal Crossing", category: "Other", foreground: "#00FF00", background: "#07540A", outline: "black", texture: "acleaf", description: "Animal Crossing Leaf" }, isabelle: { name: "Isabelle", category: "Other", foreground: "white", background: "#FEE5CC", outline: "black", texture: "isabelle", description: "Isabelle" }, thecage: { name: "Nicholas Cage", category: "Other", foreground: "#ffffff", background: "#ffffff", outline: "black", texture: "thecage", description: "Nicholas Cage" }, test: { name: "Test", category: "Colors", foreground: ["#00FF00", "#0000FF", "#FF0000"], background: ["#FF0000", "#00FF00", "#0000FF"], outline: "black", texture: "none", description: "Test" }, rainbow: { name: "Rainblow", category: "Colors", foreground: ["#FF5959", "#FFA74F", "#FFFF56", "#59FF59", "#2374FF", "#00FFFF", "#FF59FF"], background: ["#900000", "#CE3900", "#BCBC00", "#00B500", "#00008E", "#008282", "#A500A5"], outline: "black", texture: "none", description: "Rainblow" }, black: { name: "Black", category: "Colors", foreground: "#ffffff", background: "#000000", outline: "black", texture: "none", description: "Black" }, white: { name: "White", category: "Colors", foreground: "#000000", background: "#FFFFFF", outline: "#FFFFFF", texture: "none", description: "White" }, swrpg_abi: { name: "Star Wars RPG - Ability", category: "Star Wars\u2122 RPG", foreground: "#00FF00", background: ["#3D9238", "#52B848", "#5EAC56", "#9ECB9A"], outline: "#000000", texture: "cloudy_2", description: "Star Wars\u2122 RPG Ability Dice" }, swrpg_pro: { name: "Star Wars RPG - Proficiency", category: "Star Wars\u2122 RPG", foreground: "#FFFF00", background: ["#CABB1C", "#F9E33B", "#FFE900", "#F0E49D"], outline: "#000000", texture: "paper", description: "Star Wars\u2122 RPG Proficiency Dice" }, swrpg_dif: { name: "Star Wars RPG - Difficulty", category: "Star Wars\u2122 RPG", foreground: "#8000FC", background: ["#39165F", "#664B84", "#50247E", "#745F88"], outline: "#000000", texture: "cloudy_2", description: "Star Wars\u2122 RPG Difficulty Dice" }, swrpg_cha: { name: "Star Wars RPG - Challenge", category: "Star Wars\u2122 RPG", foreground: "#FF0000", background: ["#A91F32", "#EB4254", "#E51836", "#BA3645"], outline: "#000000", texture: "paper", description: "Star Wars\u2122 RPG Challenge Dice" }, swrpg_boo: { name: "Star Wars RPG - Boost", category: "Star Wars\u2122 RPG", foreground: "#00FFFF", background: ["#4B9DC6", "#689FC4", "#85CFF2", "#8FC0D8"], outline: "#000000", texture: "glitter", description: "Star Wars\u2122 RPG Boost Dice" }, swrpg_set: { name: "Star Wars RPG - Setback", category: "Star Wars\u2122 RPG", foreground: "#111111", background: ["#252223", "#241F21", "#282828", "#111111"], outline: "#ffffff", texture: "glitter", description: "Star Wars\u2122 RPG Setback Dice" }, swrpg_for: { name: "Star Wars RPG - Force", category: "Star Wars\u2122 RPG", foreground: "#000000", background: ["#F3F3F3", "#D3D3D3", "#BABABA", "#FFFFFF"], outline: "#FFFFFF", texture: "stars", description: "Star Wars\u2122 RPG Force Dice" }, swa_red: { name: "Armada Attack - Red", category: "Star Wars\u2122 Armada", foreground: "#ffffff", background: ["#440D19", "#8A1425", "#C72336", "#C04551"], outline: "none", texture: "stainedglass", description: "Star Wars\u2122 Armada Red Attack Dice" }, swa_blue: { name: "Armada Attack - Blue", category: "Star Wars\u2122 Armada", foreground: "#ffffff", background: ["#212642", "#28286E", "#2B348C", "#3D4BB5", "#5D64AB"], outline: "none", texture: "stainedglass", description: "Star Wars\u2122 Armada Blue Attack Dice" }, swa_black: { name: "Armada Attack - Black", category: "Star Wars\u2122 Armada", foreground: "#ffffff", background: ["#252223", "#241F21", "#282828", "#111111"], outline: "none", texture: "stainedglass", description: "Star Wars\u2122 Armada Black Attack Dice" }, xwing_red: { name: "X-Wing Attack - Red", category: "Star Wars\u2122 X-Wing", foreground: "#ffffff", background: ["#440D19", "#8A1425", "#C72336", "#C04551"], outline: "none", texture: "stars", description: "Star Wars\u2122 X-Wing Red Attack Dice" }, xwing_green: { name: "X-Wing Attack - Green", category: "Star Wars\u2122 X-Wing", foreground: "#ffffff", background: ["#3D9238", "#52B848", "#5EAC56", "#9ECB9A"], outline: "none", texture: "stars", description: "Star Wars\u2122 X-Wing Green Attack Dice" }, swl_atkred: { name: "Legion Attack - Red", category: "Star Wars\u2122 Legion", foreground: "#ffffff", background: ["#440D19", "#8A1425", "#C72336", "#C04551"], outline: "none", texture: "fire", description: "Star Wars\u2122 Legion Red Attack Dice" }, swl_atkblack: { name: "Legion Attack - Black", category: "Star Wars\u2122 Legion", foreground: "#ffffff", background: ["#252223", "#241F21", "#282828", "#111111"], outline: "none", texture: "fire", description: "Star Wars\u2122 Legion Black Attack Dice" }, swl_atkwhite: { name: "Legion Attack - White", category: "Star Wars\u2122 Legion", foreground: "#000000", background: ["#ffffff", "#DFF4FA", "#BCBCBC", "#F1EDE2", "#F2ECE0"], outline: "none", texture: "fire", description: "Star Wars\u2122 Legion White Attack Dice" }, swl_defred: { name: "Legion Defense - Red", category: "Star Wars\u2122 Legion", foreground: "#ffffff", background: ["#440D19", "#8A1425", "#C72336", "#C04551"], outline: "none", texture: "fire", description: "Star Wars\u2122 Legion Red Defense Dice" }, swl_defwhite: { name: "Legion Defense - White", category: "Star Wars\u2122 Legion", foreground: "#000000", background: ["#ffffff", "#DFF4FA", "#BCBCBC", "#F1EDE2", "#F2ECE0"], outline: "none", texture: "fire", description: "Star Wars\u2122 Legion White Defense Dice" } };
class dE {
  constructor(e = {}) {
    this.colorsets = [], this.assetPath = e.assetPath;
  }
  async ImageLoader(e) {
    if (Array.isArray(e)) {
      for (let n = 0, i = e.length; n < i; n++) e[n] = await this.ImageLoader(e[n]);
      return e;
    }
    return e.source && e.source != "" && (e.texture = await this.loadImage(e.source)), e.source_bump && e.source_bump != "" && (e.bump = await this.loadImage(e.source_bump)), e;
  }
  loadImage(e) {
    return new Promise((n, i) => {
      let u = new Image();
      u.onload = () => n(u), u.crossOrigin = "anonymous", u.src = this.assetPath + e, u.onerror = (y) => i(y);
    }).catch((n) => {
      console.error("Unable to load image texture");
    });
  }
  async getColorSet(e) {
    let n, i;
    if (typeof e == "string" && (n = e), typeof e == "object" && (n = e.colorset), this.colorsets.hasOwnProperty(n)) return this.colorsets[n];
    let u = kd[n];
    return i = e.texture || u.texture, u.texture = this.getTexture(i), u.texture = await this.ImageLoader(u.texture), e.material && (u.texture.material = e.material), this.colorsets[n] = u, u;
  }
  async makeColorSet(e = {}) {
    if (this.colorsets.hasOwnProperty(e.name)) return this.colorsets[e.name];
    let n = kd.white, i = Object.assign({}, n, e), u = this.getTexture(i.texture);
    return i.texture = await this.ImageLoader(u), e.material && (i.texture.material = e.material), i.name.toLowerCase() === "white" && (i.name = `${Date.now()}`), this.colorsets[i.name] = i, i;
  }
  getTexture(e) {
    if (Array.isArray(e)) {
      let n = [];
      for (let i = 0, u = e.length; i < u; i++) n.push(this.getTexture(e[i]));
      return n;
    }
    return Il.hasOwnProperty(e) ? Il[e] : Il.none;
  }
}
const mE = { default: { name: "Solid Color", author: "MajorVictory", showColorPicker: true, surface: "wood_tray", colors: { fg: "#9794ff", bg: "#0b1a3e" }, cubeMap: ["envmap.jpg", "envmap.jpg", "envmap.jpg", "envmap.jpg", "envmap.jpg", "envmap.jpg"] }, "blue-felt": { name: "Blue Felt", author: "MajorVictory", showColorPicker: true, surface: "felt", colors: { fg: "#9794ff", bg: "#0b1a3e" }, cubeMap: ["envmap.jpg", "envmap.jpg", "envmap.jpg", "envmap.jpg", "envmap.jpg", "envmap.jpg"] }, "red-felt": { name: "Red Felt", author: "MajorVictory", showColorPicker: true, surface: "felt", colors: { fg: "#ff9494", bg: "#4d1e1e" }, cubeMap: ["envmap.jpg", "envmap.jpg", "envmap.jpg", "envmap.jpg", "envmap.jpg", "envmap.jpg"] }, "green-felt": { name: "Green Felt", author: "MajorVictory", showColorPicker: true, surface: "felt", colors: { fg: "#97ff94", bg: "#244d1e" }, cubeMap: ["envmap.jpg", "envmap.jpg", "envmap.jpg", "envmap.jpg", "envmap.jpg", "envmap.jpg"] }, taverntable: { name: "Old Tavern Table", author: "MajorVictory", showColorPicker: true, surface: "wood_table", colors: { fg: "#9794ff", bg: "#0b1a3e" }, cubeMap: ["px.png", "nx.png", "py.png", "ny.png", "pz.png", "nz.png"] }, mahogany: { name: "(Mah-Hog-Any)", author: "MajorVictory", showColorPicker: true, surface: "wood_table", colors: { fg: "#9794ff", bg: "#0b1a3e" }, cubeMap: ["px.png", "nx.png", "py.png", "ny.png", "pz.png", "nz.png"] }, stainless: { name: "Stainless Steel", author: "MajorVictory", showColorPicker: true, surface: "metal", colors: { fg: "#9794ff", bg: "#0b1a3e" }, cubeMap: ["px.png", "nx.png", "py.png", "ny.png", "pz.png", "nz.png"] }, cyberpunk: { name: "Neo-New-Future-City", author: "MajorVictory", showColorPicker: true, surface: "metal", colors: { fg: "#3494A6", bg: "#440B28" }, cubeMap: ["px.png", "nx.png", "py.png", "ny.png", "pz.png", "nz.png"] }, cagetown: { name: "Cage Town", author: "MajorVictory", showColorPicker: true, surface: "wood_table", colors: { fg: "#D7A866", bg: "#282811" }, cubeMap: ["px.png", "nx.png", "py.png", "ny.png", "pz.png", "nz.png"] } }, yE = (v) => {
  let e;
  return function() {
    let n = this, i = arguments;
    e && window.cancelAnimationFrame(e), e = window.requestAnimationFrame(function() {
      v.apply(n, i);
    });
  };
}, gE = { assetPath: "./", framerate: 1 / 60, sounds: false, volume: 100, color_spotlight: 15720405, shadows: true, theme_surface: "green-felt", sound_dieMaterial: "plastic", theme_customColorset: null, theme_colorset: "white", theme_texture: "", theme_material: "glass", gravity_multiplier: 400, light_intensity: 0.7, baseScale: 100, strength: 1, iterationLimit: 1e3, onRollComplete: () => {
}, onRerollComplete: () => {
}, onAddDiceComplete: () => {
}, onRemoveDiceComplete: () => {
} };
class vE {
  constructor(e, n = {}) {
    this.initialized = false, this.container = document.querySelector(e), this.dimensions = new In(this.container.clientWidth, this.container.clientHeight), this.adaptive_timestep = false, this.last_time = 0, this.running = false, this.rolling = false, this.threadid, this.display = { currentWidth: null, currentHeight: null, containerWidth: null, containerHeight: null, aspect: null, scale: null }, this.cameraHeight = { max: null, close: null, medium: null, far: null }, this.scene = new C1(), this.world = new nE(), this.dice_body_material = new na(), this.sounds_table = {}, this.sounds_dice = [], this.lastSoundType = "", this.lastSoundStep = 0, this.lastSound = 0, this.iteration, this.renderer, this.barrier, this.camera, this.light, this.light_amb, this.desk, this.box_body = {}, this.bodies = [], this.meshes = [], this.diceList = [], this.notationVectors = null, this.dieIndex = 0, this.soundDelay = 10, this.animstate = "", this.selector = { animate: true, rotate: true, intersected: null, dice: [] }, Object.assign(this, gE, n), this.DiceColors = new dE({ assetPath: this.assetPath }), this.DiceFactory = new Hm({ baseScale: this.baseScale }), this.DiceFactory.setBumpMapping(true), this.surface = mE[this.theme_surface].surface;
  }
  enableShadows() {
    this.shadows = true, this.renderer && (this.renderer.shadowMap.enabled = this.shadows), this.light && (this.light.castShadow = this.shadows), this.desk && (this.desk.receiveShadow = this.shadows);
  }
  disableShadows() {
    this.shadows = false, this.renderer && (this.renderer.shadowMap.enabled = this.shadows), this.light && (this.light.castShadow = this.shadows), this.desk && (this.desk.receiveShadow = this.shadows);
  }
  async initialize() {
    this.renderer = new Im({ antialias: true, alpha: true }), this.container.appendChild(this.renderer.domElement), this.renderer.shadowMap.enabled = this.shadows, this.renderer.shadowMap.type = 2, this.renderer.setClearColor(0, 0), this.setDimensions(this.dimensions), this.world.gravity.set(0, 0, -9.8 * this.gravity_multiplier), this.world.broadphase = new Nm(), this.world.solver.iterations = 14, this.world.allowSleep = true, this.makeWorldBox(), this.resizeWorld(), await this.loadTheme({ colorset: this.theme_colorset, texture: this.theme_texture, material: this.theme_material }).catch((e) => {
      throw new Error("Unable to load theme");
    }), this.sounds && await this.loadSounds().catch((e) => {
      throw new Error("Unable to load sounds");
    }), this.initialized = true, this.renderer.render(this.scene, this.camera);
  }
  makeWorldBox() {
    Object.keys(this.box_body).length && (this.world.removeBody(this.box_body.desk), this.world.removeBody(this.box_body.topWall), this.world.removeBody(this.box_body.bottomWall), this.world.removeBody(this.box_body.leftWall), this.world.removeBody(this.box_body.rightWall));
    const e = new na(), n = new na();
    this.world.addContactMaterial(new ra(e, this.dice_body_material, { mass: 0, friction: 0.6, restitution: 0.5 })), this.world.addContactMaterial(new ra(n, this.dice_body_material, { mass: 0, friction: 0.6, restitution: 1 })), this.world.addContactMaterial(new ra(this.dice_body_material, this.dice_body_material, { mass: 0, friction: 0.6, restitution: 0.5 })), this.box_body.desk = new nn({ allowSleep: false, mass: 0, shape: new ws(), material: e }), this.world.addBody(this.box_body.desk), this.box_body.topWall = new nn({ allowSleep: false, mass: 0, shape: new ws(), material: n }), this.box_body.topWall.quaternion.setFromAxisAngle(new lt(1, 0, 0), Math.PI / 2), this.box_body.topWall.position.set(0, this.display.containerHeight * 0.93, 0), this.world.addBody(this.box_body.topWall), this.box_body.bottomWall = new nn({ allowSleep: false, mass: 0, shape: new ws(), material: n }), this.box_body.bottomWall.quaternion.setFromAxisAngle(new lt(1, 0, 0), -Math.PI / 2), this.box_body.bottomWall.position.set(0, -this.display.containerHeight * 0.93, 0), this.world.addBody(this.box_body.bottomWall), this.box_body.leftWall = new nn({ allowSleep: false, mass: 0, shape: new ws(), material: n }), this.box_body.leftWall.quaternion.setFromAxisAngle(new lt(0, 1, 0), -Math.PI / 2), this.box_body.leftWall.position.set(this.display.containerWidth * 0.93, 0, 0), this.world.addBody(this.box_body.leftWall), this.box_body.rightWall = new nn({ allowSleep: false, mass: 0, shape: new ws(), material: n }), this.box_body.rightWall.quaternion.setFromAxisAngle(new lt(0, 1, 0), Math.PI / 2), this.box_body.rightWall.position.set(-this.display.containerWidth * 0.93, 0, 0), this.world.addBody(this.box_body.rightWall);
  }
  async loadTheme(e) {
    let n;
    this.theme_customColorset ? n = await this.DiceColors.makeColorSet(this.theme_customColorset) : n = await this.DiceColors.getColorSet(e), this.DiceFactory.applyColorSet(n), this.colorData = n;
  }
  async loadSounds() {
    let e = { felt: 7, wood_table: 7, wood_tray: 7, metal: 9 }, n = { coin: 6, metal: 12, plastic: 15, wood: 12 };
    const i = this.colorData.texture.material.match(/wood|metal/g);
    if (this.sound_dieMaterial = i ? this.colorData.texture.material : "plastic", !this.sounds_table.hasOwnProperty(this.surface)) {
      this.sounds_table[this.surface] = [];
      let u = e[this.surface];
      for (let y = 1; y <= u; ++y) {
        const t = await this.loadAudio(this.assetPath + "sounds/surfaces/surface_" + this.surface + y + ".mp3");
        this.sounds_table[this.surface].push(t);
      }
    }
    if (!this.sounds_dice.hasOwnProperty("coin")) {
      this.sounds_dice.coin = [];
      let u = n.coin;
      for (let y = 1; y <= u; ++y) {
        const t = await this.loadAudio(this.assetPath + "sounds/dicehit/dicehit_coin" + y + ".mp3");
        this.sounds_dice.coin.push(t);
      }
    }
    if (!this.sounds_dice.hasOwnProperty(this.sound_dieMaterial)) {
      this.sounds_dice[this.sound_dieMaterial] = [];
      let u = n[this.sound_dieMaterial];
      for (let y = 1; y <= u; ++y) {
        const t = await this.loadAudio(this.assetPath + "sounds/dicehit/dicehit_" + this.sound_dieMaterial + y + ".mp3");
        this.sounds_dice[this.sound_dieMaterial].push(t);
      }
    }
  }
  loadAudio(e) {
    return new Promise((n, i) => {
      let u = new Audio();
      u.oncanplaythrough = () => n(u), u.crossOrigin = "anonymous", u.src = e, u.onerror = (y) => i(y);
    }).catch((n) => {
      console.error("Unable to load audio");
    });
  }
  async updateConfig(e = {}) {
    Object.apply(this, e), this.theme_customColorset = e.theme_customColorset ? e.theme_customColorset : null, e.theme_colorset && (this.theme_colorset = e.theme_colorset), e.theme_texture && (this.theme_texture = e.theme_texture), e.theme_material && (this.theme_material = e.theme_material), (e.theme_colorset || e.theme_texture || e.theme_material || e.theme_customColorset) && await this.loadTheme({ colorset: this.theme_colorset, texture: this.theme_texture, material: this.theme_material });
  }
  setDimensions(e) {
    switch (this.display.currentWidth = this.container.clientWidth / 2, this.display.currentHeight = this.container.clientHeight / 2, e ? (this.display.containerWidth = e.x, this.display.containerHeight = e.y) : (this.display.containerWidth = this.display.currentWidth, this.display.containerHeight = this.display.currentHeight), this.display.aspect = Math.min(this.display.currentWidth / this.display.containerWidth, this.display.currentHeight / this.display.containerHeight), this.display.scale = Math.sqrt(this.display.containerWidth * this.display.containerWidth + this.display.containerHeight * this.display.containerHeight) / 13, this.makeWorldBox(), this.renderer.setSize(this.display.currentWidth * 2, this.display.currentHeight * 2), this.cameraHeight.max = this.display.currentHeight / this.display.aspect / Math.tan(10 * Math.PI / 180), this.cameraHeight.medium = this.cameraHeight.max / 1.5, this.cameraHeight.far = this.cameraHeight.max, this.cameraHeight.close = this.cameraHeight.max / 2, this.camera && this.scene.remove(this.camera), this.camera = new Ri(20, this.display.currentWidth / this.display.currentHeight, 1, this.cameraHeight.max * 1.3), this.animstate) {
      case "selector":
        this.camera.position.z = this.selector.dice.length > 9 ? this.cameraHeight.far : this.selector.dice.length < 6 ? this.cameraHeight.close : this.cameraHeight.medium;
        break;
      case "throw":
      case "afterthrow":
      default:
        this.camera.position.z = this.cameraHeight.far;
    }
    this.camera.lookAt(new _r(0, 0, 0));
    const n = Math.max(this.display.containerWidth, this.display.containerHeight);
    this.light && this.scene.remove(this.light), this.light_amb && this.scene.remove(this.light_amb), this.light = new D1(this.color_spotlight, this.light_intensity), this.light.position.set(-n / 2, n / 2, n * 3), this.light.target.position.set(0, 0, 0), this.light.distance = n * 5, this.light.angle = Math.PI / 4, this.light.castShadow = this.shadows, this.light.shadow.camera.near = n / 10, this.light.shadow.camera.far = n * 5, this.light.shadow.camera.fov = 50, this.light.shadow.bias = 1e-3, this.light.shadow.mapSize.width = 1024, this.light.shadow.mapSize.height = 1024, this.scene.add(this.light), this.light_amb = new L1(16777147, 6776689, this.light_intensity), this.scene.add(this.light_amb), this.desk && this.scene.remove(this.desk);
    let i = new R1();
    i.opacity = 0.5, this.desk = new no(new Ac(this.display.containerWidth * 6, this.display.containerHeight * 6, 1, 1), i), this.desk.receiveShadow = this.shadows, this.scene.add(this.desk), this.renderer.render(this.scene, this.camera);
  }
  resizeWorld() {
    const e = yE(() => {
      const n = this.renderer.domElement, i = this.container.clientWidth, u = this.container.clientHeight, y = n.width !== i || n.height !== u;
      return y && this.setDimensions(new In(this.container.clientWidth, this.container.clientHeight)), y;
    });
    window.addEventListener("resize", e);
  }
  vectorRand({ x: e, y: n }) {
    let i = Math.random() * Math.PI / 5 - Math.PI / 5 / 2, u = { x: e * Math.cos(i) - n * Math.sin(i), y: e * Math.sin(i) + n * Math.cos(i) };
    return u.x == 0 && (u.x = 0.01), u.y == 0 && (u.y = 0.01), u;
  }
  getNotationVectors(e, n, i, u) {
    let y = new Td(e);
    for (let t in y.set) {
      const o = this.DiceFactory.get(y.set[t].type);
      let s = y.set[t].num, c = y.set[t].op, h = y.set[t].sid, f = y.set[t].gid, r = y.set[t].glvl, m = y.set[t].func, g = y.set[t].args;
      for (let a = 0; a < s; a++) {
        let l = this.vectorRand(n);
        l.x /= u, l.y /= u;
        let d = { x: this.display.containerWidth * (l.x > 0 ? -1 : 1) * 0.9, y: this.display.containerHeight * (l.y > 0 ? -1 : 1) * 0.9, z: Math.random() * 200 + 200 }, b = Math.abs(l.x / l.y);
        b > 1 ? d.y /= b : d.x *= b;
        let S = this.vectorRand(n);
        S.x /= u, S.y /= u;
        let E, R, k;
        o.shape != "d2" ? (E = { x: S.x * i, y: S.y * i, z: -10 }, R = { x: -(Math.random() * l.y * 5 + o.inertia * l.y), y: Math.random() * l.x * 5 + o.inertia * l.x, z: 0 }, k = { x: Math.random(), y: Math.random(), z: Math.random(), a: Math.random() }) : (E = { x: S.x * i / 10, y: S.y * i / 10, z: 3e3 }, R = { x: 12 * o.inertia, y: 1 * o.inertia, z: 0 }, k = { x: 1, y: 1, z: Math.random(), a: Math.random() }), y.vectors.push({ index: this.dieIndex++, type: o.type, op: c, sid: h, gid: f, glvl: r, func: m, args: g, pos: d, velocity: E, angle: R, axis: k });
      }
    }
    return y;
  }
  swapDiceFace(e, n) {
    const i = this.DiceFactory.get(e.notation.type);
    if (e.resultReason = "forced", i.shape == "d4") {
      this.swapDiceFace_D4(e, n);
      return;
    }
    i.values;
    let u = parseInt(e.getLastValue().value);
    n = parseInt(n), e.notation.type == "d10" && u == 0 && (u = 10), e.notation.type == "d100" && u == 0 && (u = 100), e.notation.type == "d100" && u > 0 && u < 10 && (u *= 10), e.notation.type == "d10" && n == 0 && (n = 10), e.notation.type == "d100" && n == 0 && (n = 100), e.notation.type == "d100" && n > 0 && n < 10 && (n *= 10);
    let y = i.values.indexOf(u), t = i.values.indexOf(n);
    if (y < 0 || t < 0 || y == t) return;
    let o = e.geometry.clone(), s = [], c = [], h = 2;
    i.shape == "d10" && (h = 1);
    let f, r = t + h;
    i.shape != "d2" ? (f = y + h, r = t + h) : (f = y + 1, r = t + 1);
    for (var m = 0, g = o.groups.length; m < g; ++m) {
      const a = o.groups[m].materialIndex;
      if (a == f) {
        s.push(m);
        continue;
      }
      if (a == r) {
        c.push(m);
        continue;
      }
    }
    if (!(s.length <= 0 || c.length <= 0)) {
      for (let a = 0, l = c.length; a < l; a++) o.groups[c[a]].materialIndex = f;
      for (let a = 0, l = s.length; a < l; a++) o.groups[s[a]].materialIndex = r;
      e.geometry = o, e.result = [];
    }
  }
  swapDiceFace_D4(e, n) {
    const i = this.DiceFactory.get(e.notation.type);
    let u = parseInt(e.getLastValue().value);
    if (n = parseInt(n), !(u >= 1 && u <= 4)) return;
    let y = n - u, t = e.geometry.clone();
    for (let o = 0, s = t.groups.length; o < s; ++o) {
      const c = t.groups[o];
      let h = c.materialIndex;
      if (h != 0) {
        for (h += y - 1; h > 4; ) h -= 4;
        for (; h < 1; ) h += 4;
        c.materialIndex = h + 1;
      }
    }
    y != 0 && (y < 0 && (y += 4), e.material = this.DiceFactory.createMaterials(i, 0, 0, false, y)), e.geometry = t;
  }
  spawnDice(e, n = false) {
    const { pos: i, axis: u, angle: y, velocity: t } = e;
    let o;
    if (n) o = n, o.stopped = 0, this.world.removeBody(o.body);
    else {
      if (o = this.DiceFactory.create(e.type, this.colorData), !o) return;
      o.notation = e, o.result = [], o.stopped = 0, o.castShadow = this.shadows, this.scene.add(o), this.diceList.push(o);
    }
    o.body = new nn({ allowSleep: true, sleepSpeedLimit: 75, sleepTimeLimit: 0.9, mass: o.mass, shape: o.geometry.cannon_shape, material: this.dice_body_material }), o.body.type = nn.DYNAMIC, o.body.position.set(i.x, i.y, i.z), o.body.quaternion.setFromAxisAngle(new lt(u.x, u.y, u.z), u.a * Math.PI * 2), o.body.angularVelocity.set(y.x, y.y, y.z), o.body.velocity.set(t.x, t.y, t.z), o.body.linearDamping = 0.1, o.body.angularDamping = 0.1, o.body.diceShape = o.shape, o.body.sleepState = 0, o.body.addEventListener("collide", this.eventCollide.bind(this)), this.world.addBody(o.body);
  }
  eventCollide({ body: e, target: n }) {
    if (this.animstate == "simulate" || !this.sounds || !e || this.volume <= 0) return;
    let i = Date.now(), u = e.mass > 0 ? "dice" : "table";
    if (!((this.lastSoundStep == e.world.stepnumber || this.lastSound > i) && u != "dice") && !((this.lastSoundStep == e.world.stepnumber || this.lastSound > i) && u == "dice" && this.lastSoundType == "dice")) {
      if (e.mass > 0) {
        let y = e.velocity.length();
        if (y < 250) return;
        let t;
        e.diceShape === "d2" ? t = this.sounds_dice.coin[Math.floor(Math.random() * this.sounds_dice.coin.length)] : t = this.sounds_dice[this.sound_dieMaterial][Math.floor(Math.random() * this.sounds_dice[this.sound_dieMaterial].length)], t && (t.volume = Math.min(y / 8e3, this.volume / 100), t.play().catch((o) => {
        })), this.lastSoundType = "dice";
      } else {
        let y = n.velocity.length();
        if (y < 250) return;
        let t = this.surface, o = this.sounds_table[t], s = o[Math.floor(Math.random() * o.length)];
        s && (s.volume = Math.min(y / 8e3, this.volume / 100), s.play().catch((c) => {
        })), this.lastSoundType = "table";
      }
      this.lastSoundStep = e.world.stepnumber, this.lastSound = i + this.soundDelay;
    }
  }
  checkForRethrow(e) {
    return e.notation.func && e.notation.func.toLowerCase(), false;
  }
  throwFinished() {
    const e = this.iteration > this.iterationLimit;
    for (let n = 0, i = this.diceList.length; n < i; ++n) {
      const u = this.diceList[n], y = nn.SLEEPING;
      if (u.body.sleepState < y && !e) return false;
      if (u.body.sleepState == y || e) {
        if (u.body.type === nn.KINEMATIC) continue;
        let t = false;
        if (u.result.length == 0 ? (u.storeRolledValue(u.resultReason), t = this.checkForRethrow(u)) : u.result.length > 0 && u.rerolling && (u.rerolling = false, u.storeRolledValue("reroll"), t = this.checkForRethrow(u)), t) return u.rerolls += 1, u.rerolling = true, u.body.wakeUp(), u.body.type = nn.DYNAMIC, u.body.angularVelocity = new lt(25, 25, 25), u.body.velocity = new lt(0, 0, 3e3), false;
        u.rerolling = false, u.body.type = nn.KINEMATIC;
      }
    }
    return true;
  }
  simulateThrow() {
    for (this.animstate = "simulate", this.iteration = 0, this.rolling = true; !this.throwFinished(true); ) ++this.iteration, this.world.step(this.framerate);
  }
  animateThrow(e, n) {
    this.animstate = "throw";
    let i = Date.now();
    this.last_time = this.last_time || i - this.framerate * 1e3;
    let u = (i - this.last_time) / 1e3;
    ++this.iteration;
    let y = Math.floor(u / this.framerate);
    for (let t = 0; t < y; t++) this.world.step(this.framerate), ++this.steps;
    for (let t in this.scene.children) {
      let o = this.scene.children[t];
      o.body != null && (o.position.copy(o.body.position), o.quaternion.copy(o.body.quaternion));
    }
    if (this.renderer.render(this.scene, this.camera), this.last_time = this.last_time + y * this.framerate * 1e3, this.running == e && this.throwFinished()) {
      this.running = false, this.rolling = false, n && n.call(this, this.notationVectors), this.running = Date.now(), this.animateAfterThrow(this.running);
      return;
    }
    this.running == e && ((t, o, s, c, h) => {
      !s && u < this.framerate ? setTimeout(() => {
        requestAnimationFrame(() => {
          t.call(this, o, c, h);
        });
      }, (this.framerate - u) * 1e3) : requestAnimationFrame(() => {
        t.call(this, o, c, h);
      });
    }).bind(this)(this.animateThrow, e, this.adaptive_timestep, n);
  }
  animateAfterThrow(e) {
    this.animstate = "afterthrow";
    let n = Date.now(), i = (n - this.last_time) / 1e3;
    i > 3 && (i = this.framerate), this.running = false, this.last_time = n, this.renderer.render(this.scene, this.camera), this.running == e && ((u, y, t) => {
      !t && i < this.framerate ? setTimeout(() => {
        requestAnimationFrame(() => {
          u.call(this, y);
        });
      }, (this.framerate - i) * 1e3) : requestAnimationFrame(() => {
        u.call(this, y);
      });
    }).bind(this)(this.animateAfterThrow, e, this.adaptive_timestep);
  }
  startClickThrow(e) {
    this.rolling && (this.clearDice(), this.rolling = false);
    let n = { x: (Math.random() * 2 - 0.5) * this.display.currentWidth, y: -(Math.random() * 2 - 0.5) * this.display.currentHeight }, i = Math.sqrt(n.x * n.x + n.y * n.y) + 100, u = (Math.random() + 3) * i * this.strength;
    return this.getNotationVectors(e, n, u, i);
  }
  clearDice() {
    this.running = false;
    let e;
    for (; e = this.diceList.pop(); ) this.scene.remove(e), e.body && this.world.removeBody(e.body);
    this.renderer.render(this.scene, this.camera), setTimeout(() => {
      this.renderer.render(this.scene, this.camera);
    }, 100);
  }
  getDiceResults(e) {
    if (e !== void 0) return { type: this.diceList[e].shape, sides: parseInt(this.diceList[e].shape.substring(1)), id: e, ...this.diceList[e].result.at(-1) };
    let n = 0;
    const i = this.notationVectors.constant ? parseInt(`${this.notationVectors.op}${this.notationVectors.constant}`) : 0;
    let u = i;
    return { notation: this.notationVectors.notation, sets: this.notationVectors.set.map((y) => {
      const t = n + y.num - 1;
      let o = 0;
      const s = [];
      for (let h = n; h <= t; h++) {
        if (this.diceList[n].result.at(-1).reason === "remove") {
          n++;
          continue;
        }
        s.push({ type: y.type, sides: parseInt(y.type.substring(1)), id: n, ...this.diceList[n].result.at(-1) }), o += this.diceList[n].result.at(-1).value, n++;
      }
      const c = { num: y.num, type: y.type, sides: parseInt(y.type.substring(1)), rolls: s, total: o };
      return u += o, c;
    }), modifier: i, total: u };
  }
  async roll(e) {
    if (this.notationVectors = this.startClickThrow(e), this.notationVectors) return new Promise((n, i) => {
      this.rollDice(() => {
        const u = this.getDiceResults();
        this.onRollComplete(u);
        const y = new CustomEvent("rollComplete", { detail: u });
        document.dispatchEvent(y), n(u);
      });
    });
  }
  async reroll(e) {
    return this.rolling = true, this.running = Date.now(), this.iteration = 0, new Promise((n, i) => {
      e.forEach((u) => {
        const y = this.diceList[u];
        y.rerolls += 1, y.rerolling = true, y.body.wakeUp(), y.body.type = nn.DYNAMIC, y.body.angularVelocity = new lt(25, 25, 25), y.body.velocity = new lt(0, 0, 3e3);
      }), this.animateThrow(this.running, () => {
        const u = e.map((t) => this.getDiceResults(t));
        this.onRerollComplete(u);
        const y = new CustomEvent("rerollComplete", { detail: u });
        document.dispatchEvent(y), n(u);
      });
    });
  }
  async add(e) {
    let n = this.diceList.length;
    if (!n) return this.roll(e);
    let i = this.startClickThrow(e), u = [];
    for (let y = 0, t = i.vectors.length; y < t; ++y) this.spawnDice(i.vectors[y]);
    this.simulateThrow(), this.steps = 0, this.iteration = 0;
    for (let y = 0, t = i.vectors.length; y < t; ++y) {
      const o = n + y;
      !this.diceList[o] || (this.spawnDice(i.vectors[y], this.diceList[o]), u.push(o));
    }
    if (i.result && i.result.length > 0) for (let y = 0; y < i.result.length; y++) {
      const t = n + y;
      let o = this.diceList[t];
      !o || o.getLastValue().value != i.result[y] && this.swapDiceFace(o, i.result[y]);
    }
    return this.notationVectors = Td.mergeNotation(this.notationVectors, i), new Promise((y, t) => {
      const o = () => {
        const s = u.map((h) => this.getDiceResults(h));
        this.onAddDiceComplete(s);
        const c = new CustomEvent("addDiceComplete", { detail: s });
        document.dispatchEvent(c), y(s);
      };
      this.rolling = true, this.running = Date.now(), this.last_time = 0, this.animateThrow(this.running, o);
    });
  }
  async remove(e) {
    return new Promise((n, i) => {
      const u = [];
      e.forEach((t) => {
        const o = this.diceList[t];
        o.body && this.world.removeBody(o.body), this.scene.remove(o), o.storeRolledValue("remove"), u.push(this.getDiceResults(t));
      }), this.renderer.render(this.scene, this.camera), this.onRemoveDiceComplete(u);
      const y = new CustomEvent("removeDiceComplete", { detail: u });
      document.dispatchEvent(y), n(u);
    });
  }
  rollDice(e) {
    if (this.notationVectors.error) {
      e.call(this);
      return;
    }
    this.clearDice();
    for (let n = 0, i = this.notationVectors.vectors.length; n < i; ++n) this.spawnDice(this.notationVectors.vectors[n]);
    this.simulateThrow(), this.steps = 0, this.iteration = 0;
    for (let n = 0, i = this.diceList.length; n < i; ++n) !this.diceList[n] || this.spawnDice(this.notationVectors.vectors[n], this.diceList[n]);
    if (this.notationVectors.result && this.notationVectors.result.length > 0) for (let n = 0; n < this.notationVectors.result.length; n++) {
      let i = this.diceList[n];
      !i || i.getLastValue().value != this.notationVectors.result[n] && this.swapDiceFace(i, this.notationVectors.result[n]);
    }
    this.rolling = true, this.running = Date.now(), this.last_time = 0, this.animateThrow(this.running, e);
  }
}
var Ll = {}, As = {}, Ko = {}, Od;
function df() {
  if (Od) return Ko;
  Od = 1, Object.defineProperty(Ko, "__esModule", { value: true }), Ko.Ok = Ko.Err = void 0;
  function v(t) {
    "@babel/helpers - typeof";
    return v = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(o) {
      return typeof o;
    } : function(o) {
      return o && typeof Symbol == "function" && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
    }, v(t);
  }
  function e(t, o) {
    if (!(t instanceof o)) throw new TypeError("Cannot call a class as a function");
  }
  function n(t, o) {
    for (var s = 0; s < o.length; s++) {
      var c = o[s];
      c.enumerable = c.enumerable || false, c.configurable = true, "value" in c && (c.writable = true), Object.defineProperty(t, u(c.key), c);
    }
  }
  function i(t, o, s) {
    return o && n(t.prototype, o), Object.defineProperty(t, "prototype", { writable: false }), t;
  }
  function u(t) {
    var o = y(t, "string");
    return v(o) == "symbol" ? o : o + "";
  }
  function y(t, o) {
    if (v(t) != "object" || !t) return t;
    var s = t[Symbol.toPrimitive];
    if (s !== void 0) {
      var c = s.call(t, o);
      if (v(c) != "object") return c;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return String(t);
  }
  return Ko.Ok = function() {
    function t(o) {
      e(this, t), this.value = o;
    }
    return i(t, [{ key: "unwrapErr", value: function() {
      throw new Error("No error");
    } }, { key: "unwrap", value: function() {
      return this.value;
    } }, { key: "isOk", value: function() {
      return true;
    } }, { key: "isErr", value: function() {
      return false;
    } }]);
  }(), Ko.Err = function() {
    function t(o) {
      e(this, t), this.error = o;
    }
    return i(t, [{ key: "unwrapErr", value: function() {
      return this.error;
    } }, { key: "unwrap", value: function() {
      throw new Error(this.error.message);
    } }, { key: "isOk", value: function() {
      return false;
    } }, { key: "isErr", value: function() {
      return true;
    } }]);
  }(), Ko;
}
var So = {}, Xo = {}, Pd;
function Tc() {
  return Pd || (Pd = 1, Object.defineProperty(Xo, "__esModule", { value: true }), Xo.NULL_ACCOUNT = Xo.DEFAULT_TIMEOUT = void 0, To(), Xo.DEFAULT_TIMEOUT = 5 * 60, Xo.NULL_ACCOUNT = "GAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWHF"), Xo;
}
var Cd;
function mf() {
  if (Cd) return So;
  Cd = 1, Object.defineProperty(So, "__esModule", { value: true }), So.contractErrorPattern = void 0, So.getAccount = h, So.implementsToString = s, So.processSpecEntryStream = c, So.withExponentialBackoff = t;
  var v = To(), e = Tc();
  function n() {
    n = function() {
      return m;
    };
    var r, m = {}, g = Object.prototype, a = g.hasOwnProperty, l = Object.defineProperty || function(ce, ye, oe) {
      ce[ye] = oe.value;
    }, d = typeof Symbol == "function" ? Symbol : {}, b = d.iterator || "@@iterator", S = d.asyncIterator || "@@asyncIterator", E = d.toStringTag || "@@toStringTag";
    function R(ce, ye, oe) {
      return Object.defineProperty(ce, ye, { value: oe, enumerable: true, configurable: true, writable: true }), ce[ye];
    }
    try {
      R({}, "");
    } catch {
      R = function(oe, se, re) {
        return oe[se] = re;
      };
    }
    function k(ce, ye, oe, se) {
      var re = ye && ye.prototype instanceof _ ? ye : _, ge = Object.create(re.prototype), Te = new K(se || []);
      return l(ge, "_invoke", { value: J(ce, oe, Te) }), ge;
    }
    function w(ce, ye, oe) {
      try {
        return { type: "normal", arg: ce.call(ye, oe) };
      } catch (se) {
        return { type: "throw", arg: se };
      }
    }
    m.wrap = k;
    var F = "suspendedStart", I = "suspendedYield", q = "executing", N = "completed", H = {};
    function _() {
    }
    function x() {
    }
    function L() {
    }
    var j = {};
    R(j, b, function() {
      return this;
    });
    var z = Object.getPrototypeOf, Z = z && z(z(ie([])));
    Z && Z !== g && a.call(Z, b) && (j = Z);
    var ue = L.prototype = _.prototype = Object.create(j);
    function $(ce) {
      ["next", "throw", "return"].forEach(function(ye) {
        R(ce, ye, function(oe) {
          return this._invoke(ye, oe);
        });
      });
    }
    function X(ce, ye) {
      function oe(re, ge, Te, pe) {
        var Oe = w(ce[re], ce, ge);
        if (Oe.type !== "throw") {
          var xe = Oe.arg, Ve = xe.value;
          return Ve && i(Ve) == "object" && a.call(Ve, "__await") ? ye.resolve(Ve.__await).then(function(_e) {
            oe("next", _e, Te, pe);
          }, function(_e) {
            oe("throw", _e, Te, pe);
          }) : ye.resolve(Ve).then(function(_e) {
            xe.value = _e, Te(xe);
          }, function(_e) {
            return oe("throw", _e, Te, pe);
          });
        }
        pe(Oe.arg);
      }
      var se;
      l(this, "_invoke", { value: function(ge, Te) {
        function pe() {
          return new ye(function(Oe, xe) {
            oe(ge, Te, Oe, xe);
          });
        }
        return se = se ? se.then(pe, pe) : pe();
      } });
    }
    function J(ce, ye, oe) {
      var se = F;
      return function(re, ge) {
        if (se === q) throw Error("Generator is already running");
        if (se === N) {
          if (re === "throw") throw ge;
          return { value: r, done: true };
        }
        for (oe.method = re, oe.arg = ge; ; ) {
          var Te = oe.delegate;
          if (Te) {
            var pe = B(Te, oe);
            if (pe) {
              if (pe === H) continue;
              return pe;
            }
          }
          if (oe.method === "next") oe.sent = oe._sent = oe.arg;
          else if (oe.method === "throw") {
            if (se === F) throw se = N, oe.arg;
            oe.dispatchException(oe.arg);
          } else oe.method === "return" && oe.abrupt("return", oe.arg);
          se = q;
          var Oe = w(ce, ye, oe);
          if (Oe.type === "normal") {
            if (se = oe.done ? N : I, Oe.arg === H) continue;
            return { value: Oe.arg, done: oe.done };
          }
          Oe.type === "throw" && (se = N, oe.method = "throw", oe.arg = Oe.arg);
        }
      };
    }
    function B(ce, ye) {
      var oe = ye.method, se = ce.iterator[oe];
      if (se === r) return ye.delegate = null, oe === "throw" && ce.iterator.return && (ye.method = "return", ye.arg = r, B(ce, ye), ye.method === "throw") || oe !== "return" && (ye.method = "throw", ye.arg = new TypeError("The iterator does not provide a '" + oe + "' method")), H;
      var re = w(se, ce.iterator, ye.arg);
      if (re.type === "throw") return ye.method = "throw", ye.arg = re.arg, ye.delegate = null, H;
      var ge = re.arg;
      return ge ? ge.done ? (ye[ce.resultName] = ge.value, ye.next = ce.nextLoc, ye.method !== "return" && (ye.method = "next", ye.arg = r), ye.delegate = null, H) : ge : (ye.method = "throw", ye.arg = new TypeError("iterator result is not an object"), ye.delegate = null, H);
    }
    function Q(ce) {
      var ye = { tryLoc: ce[0] };
      1 in ce && (ye.catchLoc = ce[1]), 2 in ce && (ye.finallyLoc = ce[2], ye.afterLoc = ce[3]), this.tryEntries.push(ye);
    }
    function ne(ce) {
      var ye = ce.completion || {};
      ye.type = "normal", delete ye.arg, ce.completion = ye;
    }
    function K(ce) {
      this.tryEntries = [{ tryLoc: "root" }], ce.forEach(Q, this), this.reset(true);
    }
    function ie(ce) {
      if (ce || ce === "") {
        var ye = ce[b];
        if (ye) return ye.call(ce);
        if (typeof ce.next == "function") return ce;
        if (!isNaN(ce.length)) {
          var oe = -1, se = function re() {
            for (; ++oe < ce.length; ) if (a.call(ce, oe)) return re.value = ce[oe], re.done = false, re;
            return re.value = r, re.done = true, re;
          };
          return se.next = se;
        }
      }
      throw new TypeError(i(ce) + " is not iterable");
    }
    return x.prototype = L, l(ue, "constructor", { value: L, configurable: true }), l(L, "constructor", { value: x, configurable: true }), x.displayName = R(L, E, "GeneratorFunction"), m.isGeneratorFunction = function(ce) {
      var ye = typeof ce == "function" && ce.constructor;
      return !!ye && (ye === x || (ye.displayName || ye.name) === "GeneratorFunction");
    }, m.mark = function(ce) {
      return Object.setPrototypeOf ? Object.setPrototypeOf(ce, L) : (ce.__proto__ = L, R(ce, E, "GeneratorFunction")), ce.prototype = Object.create(ue), ce;
    }, m.awrap = function(ce) {
      return { __await: ce };
    }, $(X.prototype), R(X.prototype, S, function() {
      return this;
    }), m.AsyncIterator = X, m.async = function(ce, ye, oe, se, re) {
      re === void 0 && (re = Promise);
      var ge = new X(k(ce, ye, oe, se), re);
      return m.isGeneratorFunction(ye) ? ge : ge.next().then(function(Te) {
        return Te.done ? Te.value : ge.next();
      });
    }, $(ue), R(ue, E, "Generator"), R(ue, b, function() {
      return this;
    }), R(ue, "toString", function() {
      return "[object Generator]";
    }), m.keys = function(ce) {
      var ye = Object(ce), oe = [];
      for (var se in ye) oe.push(se);
      return oe.reverse(), function re() {
        for (; oe.length; ) {
          var ge = oe.pop();
          if (ge in ye) return re.value = ge, re.done = false, re;
        }
        return re.done = true, re;
      };
    }, m.values = ie, K.prototype = { constructor: K, reset: function(ye) {
      if (this.prev = 0, this.next = 0, this.sent = this._sent = r, this.done = false, this.delegate = null, this.method = "next", this.arg = r, this.tryEntries.forEach(ne), !ye) for (var oe in this) oe.charAt(0) === "t" && a.call(this, oe) && !isNaN(+oe.slice(1)) && (this[oe] = r);
    }, stop: function() {
      this.done = true;
      var ye = this.tryEntries[0].completion;
      if (ye.type === "throw") throw ye.arg;
      return this.rval;
    }, dispatchException: function(ye) {
      if (this.done) throw ye;
      var oe = this;
      function se(xe, Ve) {
        return Te.type = "throw", Te.arg = ye, oe.next = xe, Ve && (oe.method = "next", oe.arg = r), !!Ve;
      }
      for (var re = this.tryEntries.length - 1; re >= 0; --re) {
        var ge = this.tryEntries[re], Te = ge.completion;
        if (ge.tryLoc === "root") return se("end");
        if (ge.tryLoc <= this.prev) {
          var pe = a.call(ge, "catchLoc"), Oe = a.call(ge, "finallyLoc");
          if (pe && Oe) {
            if (this.prev < ge.catchLoc) return se(ge.catchLoc, true);
            if (this.prev < ge.finallyLoc) return se(ge.finallyLoc);
          } else if (pe) {
            if (this.prev < ge.catchLoc) return se(ge.catchLoc, true);
          } else {
            if (!Oe) throw Error("try statement without catch or finally");
            if (this.prev < ge.finallyLoc) return se(ge.finallyLoc);
          }
        }
      }
    }, abrupt: function(ye, oe) {
      for (var se = this.tryEntries.length - 1; se >= 0; --se) {
        var re = this.tryEntries[se];
        if (re.tryLoc <= this.prev && a.call(re, "finallyLoc") && this.prev < re.finallyLoc) {
          var ge = re;
          break;
        }
      }
      ge && (ye === "break" || ye === "continue") && ge.tryLoc <= oe && oe <= ge.finallyLoc && (ge = null);
      var Te = ge ? ge.completion : {};
      return Te.type = ye, Te.arg = oe, ge ? (this.method = "next", this.next = ge.finallyLoc, H) : this.complete(Te);
    }, complete: function(ye, oe) {
      if (ye.type === "throw") throw ye.arg;
      return ye.type === "break" || ye.type === "continue" ? this.next = ye.arg : ye.type === "return" ? (this.rval = this.arg = ye.arg, this.method = "return", this.next = "end") : ye.type === "normal" && oe && (this.next = oe), H;
    }, finish: function(ye) {
      for (var oe = this.tryEntries.length - 1; oe >= 0; --oe) {
        var se = this.tryEntries[oe];
        if (se.finallyLoc === ye) return this.complete(se.completion, se.afterLoc), ne(se), H;
      }
    }, catch: function(ye) {
      for (var oe = this.tryEntries.length - 1; oe >= 0; --oe) {
        var se = this.tryEntries[oe];
        if (se.tryLoc === ye) {
          var re = se.completion;
          if (re.type === "throw") {
            var ge = re.arg;
            ne(se);
          }
          return ge;
        }
      }
      throw Error("illegal catch attempt");
    }, delegateYield: function(ye, oe, se) {
      return this.delegate = { iterator: ie(ye), resultName: oe, nextLoc: se }, this.method === "next" && (this.arg = r), H;
    } }, m;
  }
  function i(r) {
    "@babel/helpers - typeof";
    return i = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(m) {
      return typeof m;
    } : function(m) {
      return m && typeof Symbol == "function" && m.constructor === Symbol && m !== Symbol.prototype ? "symbol" : typeof m;
    }, i(r);
  }
  function u(r, m, g, a, l, d, b) {
    try {
      var S = r[d](b), E = S.value;
    } catch (R) {
      return void g(R);
    }
    S.done ? m(E) : Promise.resolve(E).then(a, l);
  }
  function y(r) {
    return function() {
      var m = this, g = arguments;
      return new Promise(function(a, l) {
        var d = r.apply(m, g);
        function b(E) {
          u(d, a, l, b, S, "next", E);
        }
        function S(E) {
          u(d, a, l, b, S, "throw", E);
        }
        b(void 0);
      });
    };
  }
  function t(r, m, g) {
    return o.apply(this, arguments);
  }
  function o() {
    return o = y(n().mark(function r(m, g, a) {
      var l, d, b, S, E, R, k, w = arguments;
      return n().wrap(function(I) {
        for (; ; ) switch (I.prev = I.next) {
          case 0:
            return l = w.length > 3 && w[3] !== void 0 ? w[3] : 1.5, d = w.length > 4 && w[4] !== void 0 ? w[4] : false, b = [], S = 0, I.t0 = b, I.next = 7, m();
          case 7:
            if (I.t1 = I.sent, I.t0.push.call(I.t0, I.t1), g(b[b.length - 1])) {
              I.next = 11;
              break;
            }
            return I.abrupt("return", b);
          case 11:
            E = new Date(Date.now() + a * 1e3).valueOf(), R = 1e3, k = R;
          case 14:
            if (!(Date.now() < E && g(b[b.length - 1]))) {
              I.next = 30;
              break;
            }
            return S += 1, d && console.info("Waiting ".concat(R, "ms before trying again (bringing the total wait time to ").concat(k, "ms so far, of total ").concat(a * 1e3, "ms)")), I.next = 19, new Promise(function(q) {
              return setTimeout(q, R);
            });
          case 19:
            return R *= l, new Date(Date.now() + R).valueOf() > E && (R = E - Date.now(), d && console.info("was gonna wait too long; new waitTime: ".concat(R, "ms"))), k = R + k, I.t2 = b, I.next = 25, m(b[b.length - 1]);
          case 25:
            I.t3 = I.sent, I.t2.push.call(I.t2, I.t3), d && g(b[b.length - 1]) && console.info("".concat(S, ". Called ").concat(m, "; ").concat(b.length, " prev attempts. Most recent: ").concat(JSON.stringify(b[b.length - 1], null, 2))), I.next = 14;
            break;
          case 30:
            return I.abrupt("return", b);
          case 31:
          case "end":
            return I.stop();
        }
      }, r);
    })), o.apply(this, arguments);
  }
  So.contractErrorPattern = /Error\(Contract, #(\d+)\)/;
  function s(r) {
    return i(r) === "object" && r !== null && "toString" in r;
  }
  function c(r) {
    for (var m = new v.cereal.XdrReader(r), g = []; !m.eof; ) g.push(v.xdr.ScSpecEntry.read(m));
    return g;
  }
  function h(r, m) {
    return f.apply(this, arguments);
  }
  function f() {
    return f = y(n().mark(function r(m, g) {
      return n().wrap(function(l) {
        for (; ; ) switch (l.prev = l.next) {
          case 0:
            return l.abrupt("return", m.publicKey ? g.getAccount(m.publicKey) : new v.Account(e.NULL_ACCOUNT, "0"));
          case 1:
          case "end":
            return l.stop();
        }
      }, r);
    })), f.apply(this, arguments);
  }
  return So;
}
var xs = {}, Rd;
function Gm() {
  if (Rd) return xs;
  Rd = 1, Object.defineProperty(xs, "__esModule", { value: true }), xs.SentTransaction = void 0;
  var v = Ec(), e = Ra(), n = mf(), i = Tc(), u;
  function y(q, N, H) {
    return N = g(N), t(q, f() ? Reflect.construct(N, H || [], g(q).constructor) : N.apply(q, H));
  }
  function t(q, N) {
    if (N && (a(N) == "object" || typeof N == "function")) return N;
    if (N !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
    return o(q);
  }
  function o(q) {
    if (q === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return q;
  }
  function s(q, N) {
    if (typeof N != "function" && N !== null) throw new TypeError("Super expression must either be null or a function");
    q.prototype = Object.create(N && N.prototype, { constructor: { value: q, writable: true, configurable: true } }), Object.defineProperty(q, "prototype", { writable: false }), N && m(q, N);
  }
  function c(q) {
    var N = typeof Map == "function" ? /* @__PURE__ */ new Map() : void 0;
    return c = function(_) {
      if (_ === null || !r(_)) return _;
      if (typeof _ != "function") throw new TypeError("Super expression must either be null or a function");
      if (N !== void 0) {
        if (N.has(_)) return N.get(_);
        N.set(_, x);
      }
      function x() {
        return h(_, arguments, g(this).constructor);
      }
      return x.prototype = Object.create(_.prototype, { constructor: { value: x, enumerable: false, writable: true, configurable: true } }), m(x, _);
    }, c(q);
  }
  function h(q, N, H) {
    if (f()) return Reflect.construct.apply(null, arguments);
    var _ = [null];
    _.push.apply(_, N);
    var x = new (q.bind.apply(q, _))();
    return H && m(x, H.prototype), x;
  }
  function f() {
    try {
      var q = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
      }));
    } catch {
    }
    return (f = function() {
      return !!q;
    })();
  }
  function r(q) {
    try {
      return Function.toString.call(q).indexOf("[native code]") !== -1;
    } catch {
      return typeof q == "function";
    }
  }
  function m(q, N) {
    return m = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(H, _) {
      return H.__proto__ = _, H;
    }, m(q, N);
  }
  function g(q) {
    return g = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(N) {
      return N.__proto__ || Object.getPrototypeOf(N);
    }, g(q);
  }
  function a(q) {
    "@babel/helpers - typeof";
    return a = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(N) {
      return typeof N;
    } : function(N) {
      return N && typeof Symbol == "function" && N.constructor === Symbol && N !== Symbol.prototype ? "symbol" : typeof N;
    }, a(q);
  }
  function l() {
    l = function() {
      return N;
    };
    var q, N = {}, H = Object.prototype, _ = H.hasOwnProperty, x = Object.defineProperty || function(ee, P, T) {
      ee[P] = T.value;
    }, L = typeof Symbol == "function" ? Symbol : {}, j = L.iterator || "@@iterator", z = L.asyncIterator || "@@asyncIterator", Z = L.toStringTag || "@@toStringTag";
    function ue(ee, P, T) {
      return Object.defineProperty(ee, P, { value: T, enumerable: true, configurable: true, writable: true }), ee[P];
    }
    try {
      ue({}, "");
    } catch {
      ue = function(T, O, V) {
        return T[O] = V;
      };
    }
    function $(ee, P, T, O) {
      var V = P && P.prototype instanceof ie ? P : ie, D = Object.create(V.prototype), C = new Be(O || []);
      return x(D, "_invoke", { value: Oe(ee, T, C) }), D;
    }
    function X(ee, P, T) {
      try {
        return { type: "normal", arg: ee.call(P, T) };
      } catch (O) {
        return { type: "throw", arg: O };
      }
    }
    N.wrap = $;
    var J = "suspendedStart", B = "suspendedYield", Q = "executing", ne = "completed", K = {};
    function ie() {
    }
    function ce() {
    }
    function ye() {
    }
    var oe = {};
    ue(oe, j, function() {
      return this;
    });
    var se = Object.getPrototypeOf, re = se && se(se(Qe([])));
    re && re !== H && _.call(re, j) && (oe = re);
    var ge = ye.prototype = ie.prototype = Object.create(oe);
    function Te(ee) {
      ["next", "throw", "return"].forEach(function(P) {
        ue(ee, P, function(T) {
          return this._invoke(P, T);
        });
      });
    }
    function pe(ee, P) {
      function T(V, D, C, p) {
        var A = X(ee[V], ee, D);
        if (A.type !== "throw") {
          var U = A.arg, Y = U.value;
          return Y && a(Y) == "object" && _.call(Y, "__await") ? P.resolve(Y.__await).then(function(ae) {
            T("next", ae, C, p);
          }, function(ae) {
            T("throw", ae, C, p);
          }) : P.resolve(Y).then(function(ae) {
            U.value = ae, C(U);
          }, function(ae) {
            return T("throw", ae, C, p);
          });
        }
        p(A.arg);
      }
      var O;
      x(this, "_invoke", { value: function(D, C) {
        function p() {
          return new P(function(A, U) {
            T(D, C, A, U);
          });
        }
        return O = O ? O.then(p, p) : p();
      } });
    }
    function Oe(ee, P, T) {
      var O = J;
      return function(V, D) {
        if (O === Q) throw Error("Generator is already running");
        if (O === ne) {
          if (V === "throw") throw D;
          return { value: q, done: true };
        }
        for (T.method = V, T.arg = D; ; ) {
          var C = T.delegate;
          if (C) {
            var p = xe(C, T);
            if (p) {
              if (p === K) continue;
              return p;
            }
          }
          if (T.method === "next") T.sent = T._sent = T.arg;
          else if (T.method === "throw") {
            if (O === J) throw O = ne, T.arg;
            T.dispatchException(T.arg);
          } else T.method === "return" && T.abrupt("return", T.arg);
          O = Q;
          var A = X(ee, P, T);
          if (A.type === "normal") {
            if (O = T.done ? ne : B, A.arg === K) continue;
            return { value: A.arg, done: T.done };
          }
          A.type === "throw" && (O = ne, T.method = "throw", T.arg = A.arg);
        }
      };
    }
    function xe(ee, P) {
      var T = P.method, O = ee.iterator[T];
      if (O === q) return P.delegate = null, T === "throw" && ee.iterator.return && (P.method = "return", P.arg = q, xe(ee, P), P.method === "throw") || T !== "return" && (P.method = "throw", P.arg = new TypeError("The iterator does not provide a '" + T + "' method")), K;
      var V = X(O, ee.iterator, P.arg);
      if (V.type === "throw") return P.method = "throw", P.arg = V.arg, P.delegate = null, K;
      var D = V.arg;
      return D ? D.done ? (P[ee.resultName] = D.value, P.next = ee.nextLoc, P.method !== "return" && (P.method = "next", P.arg = q), P.delegate = null, K) : D : (P.method = "throw", P.arg = new TypeError("iterator result is not an object"), P.delegate = null, K);
    }
    function Ve(ee) {
      var P = { tryLoc: ee[0] };
      1 in ee && (P.catchLoc = ee[1]), 2 in ee && (P.finallyLoc = ee[2], P.afterLoc = ee[3]), this.tryEntries.push(P);
    }
    function _e(ee) {
      var P = ee.completion || {};
      P.type = "normal", delete P.arg, ee.completion = P;
    }
    function Be(ee) {
      this.tryEntries = [{ tryLoc: "root" }], ee.forEach(Ve, this), this.reset(true);
    }
    function Qe(ee) {
      if (ee || ee === "") {
        var P = ee[j];
        if (P) return P.call(ee);
        if (typeof ee.next == "function") return ee;
        if (!isNaN(ee.length)) {
          var T = -1, O = function V() {
            for (; ++T < ee.length; ) if (_.call(ee, T)) return V.value = ee[T], V.done = false, V;
            return V.value = q, V.done = true, V;
          };
          return O.next = O;
        }
      }
      throw new TypeError(a(ee) + " is not iterable");
    }
    return ce.prototype = ye, x(ge, "constructor", { value: ye, configurable: true }), x(ye, "constructor", { value: ce, configurable: true }), ce.displayName = ue(ye, Z, "GeneratorFunction"), N.isGeneratorFunction = function(ee) {
      var P = typeof ee == "function" && ee.constructor;
      return !!P && (P === ce || (P.displayName || P.name) === "GeneratorFunction");
    }, N.mark = function(ee) {
      return Object.setPrototypeOf ? Object.setPrototypeOf(ee, ye) : (ee.__proto__ = ye, ue(ee, Z, "GeneratorFunction")), ee.prototype = Object.create(ge), ee;
    }, N.awrap = function(ee) {
      return { __await: ee };
    }, Te(pe.prototype), ue(pe.prototype, z, function() {
      return this;
    }), N.AsyncIterator = pe, N.async = function(ee, P, T, O, V) {
      V === void 0 && (V = Promise);
      var D = new pe($(ee, P, T, O), V);
      return N.isGeneratorFunction(P) ? D : D.next().then(function(C) {
        return C.done ? C.value : D.next();
      });
    }, Te(ge), ue(ge, Z, "Generator"), ue(ge, j, function() {
      return this;
    }), ue(ge, "toString", function() {
      return "[object Generator]";
    }), N.keys = function(ee) {
      var P = Object(ee), T = [];
      for (var O in P) T.push(O);
      return T.reverse(), function V() {
        for (; T.length; ) {
          var D = T.pop();
          if (D in P) return V.value = D, V.done = false, V;
        }
        return V.done = true, V;
      };
    }, N.values = Qe, Be.prototype = { constructor: Be, reset: function(P) {
      if (this.prev = 0, this.next = 0, this.sent = this._sent = q, this.done = false, this.delegate = null, this.method = "next", this.arg = q, this.tryEntries.forEach(_e), !P) for (var T in this) T.charAt(0) === "t" && _.call(this, T) && !isNaN(+T.slice(1)) && (this[T] = q);
    }, stop: function() {
      this.done = true;
      var P = this.tryEntries[0].completion;
      if (P.type === "throw") throw P.arg;
      return this.rval;
    }, dispatchException: function(P) {
      if (this.done) throw P;
      var T = this;
      function O(U, Y) {
        return C.type = "throw", C.arg = P, T.next = U, Y && (T.method = "next", T.arg = q), !!Y;
      }
      for (var V = this.tryEntries.length - 1; V >= 0; --V) {
        var D = this.tryEntries[V], C = D.completion;
        if (D.tryLoc === "root") return O("end");
        if (D.tryLoc <= this.prev) {
          var p = _.call(D, "catchLoc"), A = _.call(D, "finallyLoc");
          if (p && A) {
            if (this.prev < D.catchLoc) return O(D.catchLoc, true);
            if (this.prev < D.finallyLoc) return O(D.finallyLoc);
          } else if (p) {
            if (this.prev < D.catchLoc) return O(D.catchLoc, true);
          } else {
            if (!A) throw Error("try statement without catch or finally");
            if (this.prev < D.finallyLoc) return O(D.finallyLoc);
          }
        }
      }
    }, abrupt: function(P, T) {
      for (var O = this.tryEntries.length - 1; O >= 0; --O) {
        var V = this.tryEntries[O];
        if (V.tryLoc <= this.prev && _.call(V, "finallyLoc") && this.prev < V.finallyLoc) {
          var D = V;
          break;
        }
      }
      D && (P === "break" || P === "continue") && D.tryLoc <= T && T <= D.finallyLoc && (D = null);
      var C = D ? D.completion : {};
      return C.type = P, C.arg = T, D ? (this.method = "next", this.next = D.finallyLoc, K) : this.complete(C);
    }, complete: function(P, T) {
      if (P.type === "throw") throw P.arg;
      return P.type === "break" || P.type === "continue" ? this.next = P.arg : P.type === "return" ? (this.rval = this.arg = P.arg, this.method = "return", this.next = "end") : P.type === "normal" && T && (this.next = T), K;
    }, finish: function(P) {
      for (var T = this.tryEntries.length - 1; T >= 0; --T) {
        var O = this.tryEntries[T];
        if (O.finallyLoc === P) return this.complete(O.completion, O.afterLoc), _e(O), K;
      }
    }, catch: function(P) {
      for (var T = this.tryEntries.length - 1; T >= 0; --T) {
        var O = this.tryEntries[T];
        if (O.tryLoc === P) {
          var V = O.completion;
          if (V.type === "throw") {
            var D = V.arg;
            _e(O);
          }
          return D;
        }
      }
      throw Error("illegal catch attempt");
    }, delegateYield: function(P, T, O) {
      return this.delegate = { iterator: Qe(P), resultName: T, nextLoc: O }, this.method === "next" && (this.arg = q), K;
    } }, N;
  }
  function d(q, N, H, _, x, L, j) {
    try {
      var z = q[L](j), Z = z.value;
    } catch (ue) {
      return void H(ue);
    }
    z.done ? N(Z) : Promise.resolve(Z).then(_, x);
  }
  function b(q) {
    return function() {
      var N = this, H = arguments;
      return new Promise(function(_, x) {
        var L = q.apply(N, H);
        function j(Z) {
          d(L, _, x, j, z, "next", Z);
        }
        function z(Z) {
          d(L, _, x, j, z, "throw", Z);
        }
        j(void 0);
      });
    };
  }
  function S(q, N) {
    if (!(q instanceof N)) throw new TypeError("Cannot call a class as a function");
  }
  function E(q, N) {
    for (var H = 0; H < N.length; H++) {
      var _ = N[H];
      _.enumerable = _.enumerable || false, _.configurable = true, "value" in _ && (_.writable = true), Object.defineProperty(q, w(_.key), _);
    }
  }
  function R(q, N, H) {
    return N && E(q.prototype, N), Object.defineProperty(q, "prototype", { writable: false }), q;
  }
  function k(q, N, H) {
    return (N = w(N)) in q ? Object.defineProperty(q, N, { value: H, enumerable: true, configurable: true, writable: true }) : q[N] = H, q;
  }
  function w(q) {
    var N = F(q, "string");
    return a(N) == "symbol" ? N : N + "";
  }
  function F(q, N) {
    if (a(q) != "object" || !q) return q;
    var H = q[Symbol.toPrimitive];
    if (H !== void 0) {
      var _ = H.call(q, N);
      if (a(_) != "object") return _;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (N === "string" ? String : Number)(q);
  }
  var I = xs.SentTransaction = function() {
    function q(N) {
      var H = this, _;
      S(this, q), k(this, "send", b(l().mark(function x() {
        var L, j, z;
        return l().wrap(function(ue) {
          for (; ; ) switch (ue.prev = ue.next) {
            case 0:
              return ue.next = 2, H.server.sendTransaction(H.assembled.signed);
            case 2:
              if (H.sendTransactionResponse = ue.sent, H.sendTransactionResponse.status === "PENDING") {
                ue.next = 5;
                break;
              }
              throw new q.Errors.SendFailed(`Sending the transaction to the network failed!
`.concat(JSON.stringify(H.sendTransactionResponse, null, 2)));
            case 5:
              return j = H.sendTransactionResponse.hash, z = (L = H.assembled.options.timeoutInSeconds) !== null && L !== void 0 ? L : i.DEFAULT_TIMEOUT, ue.next = 9, (0, n.withExponentialBackoff)(function() {
                return H.server.getTransaction(j);
              }, function($) {
                return $.status === e.Api.GetTransactionStatus.NOT_FOUND;
              }, z);
            case 9:
              if (H.getTransactionResponseAll = ue.sent, H.getTransactionResponse = H.getTransactionResponseAll[H.getTransactionResponseAll.length - 1], H.getTransactionResponse.status !== e.Api.GetTransactionStatus.NOT_FOUND) {
                ue.next = 13;
                break;
              }
              throw new q.Errors.TransactionStillPending("Waited ".concat(z, " seconds for transaction to complete, but it did not. ") + "Returning anyway. Check the transaction status manually. " + "Sent transaction: ".concat(JSON.stringify(H.sendTransactionResponse, null, 2), `
`) + "All attempts to get the result: ".concat(JSON.stringify(H.getTransactionResponseAll, null, 2)));
            case 13:
              return ue.abrupt("return", H);
            case 14:
            case "end":
              return ue.stop();
          }
        }, x);
      }))), this.assembled = N, this.server = new v.Server(this.assembled.options.rpcUrl, { allowHttp: (_ = this.assembled.options.allowHttp) !== null && _ !== void 0 ? _ : false });
    }
    return R(q, [{ key: "result", get: function() {
      if ("getTransactionResponse" in this && this.getTransactionResponse) {
        if ("returnValue" in this.getTransactionResponse) return this.assembled.options.parseResultXdr(this.getTransactionResponse.returnValue);
        throw new Error("Transaction failed! Cannot parse result.");
      }
      if (this.sendTransactionResponse) {
        var H, _ = (H = this.sendTransactionResponse.errorResult) === null || H === void 0 ? void 0 : H.result();
        throw _ ? new q.Errors.SendFailed("Transaction simulation looked correct, but attempting to send the transaction failed. Check `simulation` and `sendTransactionResponseAll` to troubleshoot. Decoded `sendTransactionResponse.errorResultXdr`: ".concat(_)) : new q.Errors.SendResultOnly("Transaction was sent to the network, but not yet awaited. No result to show. Await transaction completion with `getTransaction(sendTransactionResponse.hash)`");
      }
      throw new Error("Sending transaction failed: ".concat(JSON.stringify(this.assembled.signed)));
    } }]);
  }();
  return u = I, k(I, "Errors", { SendFailed: function(q) {
    function N() {
      return S(this, N), y(this, N, arguments);
    }
    return s(N, q), R(N);
  }(c(Error)), SendResultOnly: function(q) {
    function N() {
      return S(this, N), y(this, N, arguments);
    }
    return s(N, q), R(N);
  }(c(Error)), TransactionStillPending: function(q) {
    function N() {
      return S(this, N), y(this, N, arguments);
    }
    return s(N, q), R(N);
  }(c(Error)) }), k(I, "init", function() {
    var q = b(l().mark(function N(H) {
      var _, x;
      return l().wrap(function(j) {
        for (; ; ) switch (j.prev = j.next) {
          case 0:
            return _ = new u(H), j.next = 3, _.send();
          case 3:
            return x = j.sent, j.abrupt("return", x);
          case 5:
          case "end":
            return j.stop();
        }
      }, N);
    }));
    return function(N) {
      return q.apply(this, arguments);
    };
  }()), xs;
}
var Md;
function Wm() {
  if (Md) return As;
  Md = 1, Object.defineProperty(As, "__esModule", { value: true }), As.AssembledTransaction = void 0;
  var v = To(), e = Ec(), n = Ra(), i = of(), u = df(), y = mf(), t = Tc(), o = Gm();
  function s(K, ie, ce) {
    return ie = d(ie), c(K, g() ? Reflect.construct(ie, ce || [], d(K).constructor) : ie.apply(K, ce));
  }
  function c(K, ie) {
    if (ie && (b(ie) == "object" || typeof ie == "function")) return ie;
    if (ie !== void 0) throw new TypeError("Derived constructors may only return object or undefined");
    return h(K);
  }
  function h(K) {
    if (K === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return K;
  }
  function f(K, ie) {
    if (typeof ie != "function" && ie !== null) throw new TypeError("Super expression must either be null or a function");
    K.prototype = Object.create(ie && ie.prototype, { constructor: { value: K, writable: true, configurable: true } }), Object.defineProperty(K, "prototype", { writable: false }), ie && l(K, ie);
  }
  function r(K) {
    var ie = typeof Map == "function" ? /* @__PURE__ */ new Map() : void 0;
    return r = function(ye) {
      if (ye === null || !a(ye)) return ye;
      if (typeof ye != "function") throw new TypeError("Super expression must either be null or a function");
      if (ie !== void 0) {
        if (ie.has(ye)) return ie.get(ye);
        ie.set(ye, oe);
      }
      function oe() {
        return m(ye, arguments, d(this).constructor);
      }
      return oe.prototype = Object.create(ye.prototype, { constructor: { value: oe, enumerable: false, writable: true, configurable: true } }), l(oe, ye);
    }, r(K);
  }
  function m(K, ie, ce) {
    if (g()) return Reflect.construct.apply(null, arguments);
    var ye = [null];
    ye.push.apply(ye, ie);
    var oe = new (K.bind.apply(K, ye))();
    return ce && l(oe, ce.prototype), oe;
  }
  function g() {
    try {
      var K = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
      }));
    } catch {
    }
    return (g = function() {
      return !!K;
    })();
  }
  function a(K) {
    try {
      return Function.toString.call(K).indexOf("[native code]") !== -1;
    } catch {
      return typeof K == "function";
    }
  }
  function l(K, ie) {
    return l = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(ce, ye) {
      return ce.__proto__ = ye, ce;
    }, l(K, ie);
  }
  function d(K) {
    return d = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(ie) {
      return ie.__proto__ || Object.getPrototypeOf(ie);
    }, d(K);
  }
  function b(K) {
    "@babel/helpers - typeof";
    return b = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(ie) {
      return typeof ie;
    } : function(ie) {
      return ie && typeof Symbol == "function" && ie.constructor === Symbol && ie !== Symbol.prototype ? "symbol" : typeof ie;
    }, b(K);
  }
  function S(K, ie) {
    var ce = Object.keys(K);
    if (Object.getOwnPropertySymbols) {
      var ye = Object.getOwnPropertySymbols(K);
      ie && (ye = ye.filter(function(oe) {
        return Object.getOwnPropertyDescriptor(K, oe).enumerable;
      })), ce.push.apply(ce, ye);
    }
    return ce;
  }
  function E(K) {
    for (var ie = 1; ie < arguments.length; ie++) {
      var ce = arguments[ie] != null ? arguments[ie] : {};
      ie % 2 ? S(Object(ce), true).forEach(function(ye) {
        J(K, ye, ce[ye]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(K, Object.getOwnPropertyDescriptors(ce)) : S(Object(ce)).forEach(function(ye) {
        Object.defineProperty(K, ye, Object.getOwnPropertyDescriptor(ce, ye));
      });
    }
    return K;
  }
  function R(K, ie) {
    return F(K) || w(K, ie) || _(K, ie) || k();
  }
  function k() {
    throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
  }
  function w(K, ie) {
    var ce = K == null ? null : typeof Symbol < "u" && K[Symbol.iterator] || K["@@iterator"];
    if (ce != null) {
      var ye, oe, se, re, ge = [], Te = true, pe = false;
      try {
        if (se = (ce = ce.call(K)).next, ie !== 0) for (; !(Te = (ye = se.call(ce)).done) && (ge.push(ye.value), ge.length !== ie); Te = true) ;
      } catch (Oe) {
        pe = true, oe = Oe;
      } finally {
        try {
          if (!Te && ce.return != null && (re = ce.return(), Object(re) !== re)) return;
        } finally {
          if (pe) throw oe;
        }
      }
      return ge;
    }
  }
  function F(K) {
    if (Array.isArray(K)) return K;
  }
  function I(K, ie) {
    var ce = typeof Symbol < "u" && K[Symbol.iterator] || K["@@iterator"];
    if (!ce) {
      if (Array.isArray(K) || (ce = _(K)) || ie) {
        ce && (K = ce);
        var ye = 0, oe = function() {
        };
        return { s: oe, n: function() {
          return ye >= K.length ? { done: true } : { done: false, value: K[ye++] };
        }, e: function(pe) {
          throw pe;
        }, f: oe };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var se, re = true, ge = false;
    return { s: function() {
      ce = ce.call(K);
    }, n: function() {
      var pe = ce.next();
      return re = pe.done, pe;
    }, e: function(pe) {
      ge = true, se = pe;
    }, f: function() {
      try {
        re || ce.return == null || ce.return();
      } finally {
        if (ge) throw se;
      }
    } };
  }
  function q() {
    q = function() {
      return ie;
    };
    var K, ie = {}, ce = Object.prototype, ye = ce.hasOwnProperty, oe = Object.defineProperty || function(ut, Ze, Et) {
      ut[Ze] = Et.value;
    }, se = typeof Symbol == "function" ? Symbol : {}, re = se.iterator || "@@iterator", ge = se.asyncIterator || "@@asyncIterator", Te = se.toStringTag || "@@toStringTag";
    function pe(ut, Ze, Et) {
      return Object.defineProperty(ut, Ze, { value: Et, enumerable: true, configurable: true, writable: true }), ut[Ze];
    }
    try {
      pe({}, "");
    } catch {
      pe = function(Et, rr, je) {
        return Et[rr] = je;
      };
    }
    function Oe(ut, Ze, Et, rr) {
      var je = Ze && Ze.prototype instanceof P ? Ze : P, Ge = Object.create(je.prototype), at = new tt(rr || []);
      return oe(Ge, "_invoke", { value: Y(ut, Et, at) }), Ge;
    }
    function xe(ut, Ze, Et) {
      try {
        return { type: "normal", arg: ut.call(Ze, Et) };
      } catch (rr) {
        return { type: "throw", arg: rr };
      }
    }
    ie.wrap = Oe;
    var Ve = "suspendedStart", _e = "suspendedYield", Be = "executing", Qe = "completed", ee = {};
    function P() {
    }
    function T() {
    }
    function O() {
    }
    var V = {};
    pe(V, re, function() {
      return this;
    });
    var D = Object.getPrototypeOf, C = D && D(D(Ne([])));
    C && C !== ce && ye.call(C, re) && (V = C);
    var p = O.prototype = P.prototype = Object.create(V);
    function A(ut) {
      ["next", "throw", "return"].forEach(function(Ze) {
        pe(ut, Ze, function(Et) {
          return this._invoke(Ze, Et);
        });
      });
    }
    function U(ut, Ze) {
      function Et(je, Ge, at, Ae) {
        var qe = xe(ut[je], ut, Ge);
        if (qe.type !== "throw") {
          var Ft = qe.arg, Dt = Ft.value;
          return Dt && b(Dt) == "object" && ye.call(Dt, "__await") ? Ze.resolve(Dt.__await).then(function(wr) {
            Et("next", wr, at, Ae);
          }, function(wr) {
            Et("throw", wr, at, Ae);
          }) : Ze.resolve(Dt).then(function(wr) {
            Ft.value = wr, at(Ft);
          }, function(wr) {
            return Et("throw", wr, at, Ae);
          });
        }
        Ae(qe.arg);
      }
      var rr;
      oe(this, "_invoke", { value: function(Ge, at) {
        function Ae() {
          return new Ze(function(qe, Ft) {
            Et(Ge, at, qe, Ft);
          });
        }
        return rr = rr ? rr.then(Ae, Ae) : Ae();
      } });
    }
    function Y(ut, Ze, Et) {
      var rr = Ve;
      return function(je, Ge) {
        if (rr === Be) throw Error("Generator is already running");
        if (rr === Qe) {
          if (je === "throw") throw Ge;
          return { value: K, done: true };
        }
        for (Et.method = je, Et.arg = Ge; ; ) {
          var at = Et.delegate;
          if (at) {
            var Ae = ae(at, Et);
            if (Ae) {
              if (Ae === ee) continue;
              return Ae;
            }
          }
          if (Et.method === "next") Et.sent = Et._sent = Et.arg;
          else if (Et.method === "throw") {
            if (rr === Ve) throw rr = Qe, Et.arg;
            Et.dispatchException(Et.arg);
          } else Et.method === "return" && Et.abrupt("return", Et.arg);
          rr = Be;
          var qe = xe(ut, Ze, Et);
          if (qe.type === "normal") {
            if (rr = Et.done ? Qe : _e, qe.arg === ee) continue;
            return { value: qe.arg, done: Et.done };
          }
          qe.type === "throw" && (rr = Qe, Et.method = "throw", Et.arg = qe.arg);
        }
      };
    }
    function ae(ut, Ze) {
      var Et = Ze.method, rr = ut.iterator[Et];
      if (rr === K) return Ze.delegate = null, Et === "throw" && ut.iterator.return && (Ze.method = "return", Ze.arg = K, ae(ut, Ze), Ze.method === "throw") || Et !== "return" && (Ze.method = "throw", Ze.arg = new TypeError("The iterator does not provide a '" + Et + "' method")), ee;
      var je = xe(rr, ut.iterator, Ze.arg);
      if (je.type === "throw") return Ze.method = "throw", Ze.arg = je.arg, Ze.delegate = null, ee;
      var Ge = je.arg;
      return Ge ? Ge.done ? (Ze[ut.resultName] = Ge.value, Ze.next = ut.nextLoc, Ze.method !== "return" && (Ze.method = "next", Ze.arg = K), Ze.delegate = null, ee) : Ge : (Ze.method = "throw", Ze.arg = new TypeError("iterator result is not an object"), Ze.delegate = null, ee);
    }
    function W(ut) {
      var Ze = { tryLoc: ut[0] };
      1 in ut && (Ze.catchLoc = ut[1]), 2 in ut && (Ze.finallyLoc = ut[2], Ze.afterLoc = ut[3]), this.tryEntries.push(Ze);
    }
    function de(ut) {
      var Ze = ut.completion || {};
      Ze.type = "normal", delete Ze.arg, ut.completion = Ze;
    }
    function tt(ut) {
      this.tryEntries = [{ tryLoc: "root" }], ut.forEach(W, this), this.reset(true);
    }
    function Ne(ut) {
      if (ut || ut === "") {
        var Ze = ut[re];
        if (Ze) return Ze.call(ut);
        if (typeof ut.next == "function") return ut;
        if (!isNaN(ut.length)) {
          var Et = -1, rr = function je() {
            for (; ++Et < ut.length; ) if (ye.call(ut, Et)) return je.value = ut[Et], je.done = false, je;
            return je.value = K, je.done = true, je;
          };
          return rr.next = rr;
        }
      }
      throw new TypeError(b(ut) + " is not iterable");
    }
    return T.prototype = O, oe(p, "constructor", { value: O, configurable: true }), oe(O, "constructor", { value: T, configurable: true }), T.displayName = pe(O, Te, "GeneratorFunction"), ie.isGeneratorFunction = function(ut) {
      var Ze = typeof ut == "function" && ut.constructor;
      return !!Ze && (Ze === T || (Ze.displayName || Ze.name) === "GeneratorFunction");
    }, ie.mark = function(ut) {
      return Object.setPrototypeOf ? Object.setPrototypeOf(ut, O) : (ut.__proto__ = O, pe(ut, Te, "GeneratorFunction")), ut.prototype = Object.create(p), ut;
    }, ie.awrap = function(ut) {
      return { __await: ut };
    }, A(U.prototype), pe(U.prototype, ge, function() {
      return this;
    }), ie.AsyncIterator = U, ie.async = function(ut, Ze, Et, rr, je) {
      je === void 0 && (je = Promise);
      var Ge = new U(Oe(ut, Ze, Et, rr), je);
      return ie.isGeneratorFunction(Ze) ? Ge : Ge.next().then(function(at) {
        return at.done ? at.value : Ge.next();
      });
    }, A(p), pe(p, Te, "Generator"), pe(p, re, function() {
      return this;
    }), pe(p, "toString", function() {
      return "[object Generator]";
    }), ie.keys = function(ut) {
      var Ze = Object(ut), Et = [];
      for (var rr in Ze) Et.push(rr);
      return Et.reverse(), function je() {
        for (; Et.length; ) {
          var Ge = Et.pop();
          if (Ge in Ze) return je.value = Ge, je.done = false, je;
        }
        return je.done = true, je;
      };
    }, ie.values = Ne, tt.prototype = { constructor: tt, reset: function(Ze) {
      if (this.prev = 0, this.next = 0, this.sent = this._sent = K, this.done = false, this.delegate = null, this.method = "next", this.arg = K, this.tryEntries.forEach(de), !Ze) for (var Et in this) Et.charAt(0) === "t" && ye.call(this, Et) && !isNaN(+Et.slice(1)) && (this[Et] = K);
    }, stop: function() {
      this.done = true;
      var Ze = this.tryEntries[0].completion;
      if (Ze.type === "throw") throw Ze.arg;
      return this.rval;
    }, dispatchException: function(Ze) {
      if (this.done) throw Ze;
      var Et = this;
      function rr(Ft, Dt) {
        return at.type = "throw", at.arg = Ze, Et.next = Ft, Dt && (Et.method = "next", Et.arg = K), !!Dt;
      }
      for (var je = this.tryEntries.length - 1; je >= 0; --je) {
        var Ge = this.tryEntries[je], at = Ge.completion;
        if (Ge.tryLoc === "root") return rr("end");
        if (Ge.tryLoc <= this.prev) {
          var Ae = ye.call(Ge, "catchLoc"), qe = ye.call(Ge, "finallyLoc");
          if (Ae && qe) {
            if (this.prev < Ge.catchLoc) return rr(Ge.catchLoc, true);
            if (this.prev < Ge.finallyLoc) return rr(Ge.finallyLoc);
          } else if (Ae) {
            if (this.prev < Ge.catchLoc) return rr(Ge.catchLoc, true);
          } else {
            if (!qe) throw Error("try statement without catch or finally");
            if (this.prev < Ge.finallyLoc) return rr(Ge.finallyLoc);
          }
        }
      }
    }, abrupt: function(Ze, Et) {
      for (var rr = this.tryEntries.length - 1; rr >= 0; --rr) {
        var je = this.tryEntries[rr];
        if (je.tryLoc <= this.prev && ye.call(je, "finallyLoc") && this.prev < je.finallyLoc) {
          var Ge = je;
          break;
        }
      }
      Ge && (Ze === "break" || Ze === "continue") && Ge.tryLoc <= Et && Et <= Ge.finallyLoc && (Ge = null);
      var at = Ge ? Ge.completion : {};
      return at.type = Ze, at.arg = Et, Ge ? (this.method = "next", this.next = Ge.finallyLoc, ee) : this.complete(at);
    }, complete: function(Ze, Et) {
      if (Ze.type === "throw") throw Ze.arg;
      return Ze.type === "break" || Ze.type === "continue" ? this.next = Ze.arg : Ze.type === "return" ? (this.rval = this.arg = Ze.arg, this.method = "return", this.next = "end") : Ze.type === "normal" && Et && (this.next = Et), ee;
    }, finish: function(Ze) {
      for (var Et = this.tryEntries.length - 1; Et >= 0; --Et) {
        var rr = this.tryEntries[Et];
        if (rr.finallyLoc === Ze) return this.complete(rr.completion, rr.afterLoc), de(rr), ee;
      }
    }, catch: function(Ze) {
      for (var Et = this.tryEntries.length - 1; Et >= 0; --Et) {
        var rr = this.tryEntries[Et];
        if (rr.tryLoc === Ze) {
          var je = rr.completion;
          if (je.type === "throw") {
            var Ge = je.arg;
            de(rr);
          }
          return Ge;
        }
      }
      throw Error("illegal catch attempt");
    }, delegateYield: function(Ze, Et, rr) {
      return this.delegate = { iterator: Ne(Ze), resultName: Et, nextLoc: rr }, this.method === "next" && (this.arg = K), ee;
    } }, ie;
  }
  function N(K) {
    return L(K) || x(K) || _(K) || H();
  }
  function H() {
    throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
  }
  function _(K, ie) {
    if (K) {
      if (typeof K == "string") return j(K, ie);
      var ce = {}.toString.call(K).slice(8, -1);
      return ce === "Object" && K.constructor && (ce = K.constructor.name), ce === "Map" || ce === "Set" ? Array.from(K) : ce === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(ce) ? j(K, ie) : void 0;
    }
  }
  function x(K) {
    if (typeof Symbol < "u" && K[Symbol.iterator] != null || K["@@iterator"] != null) return Array.from(K);
  }
  function L(K) {
    if (Array.isArray(K)) return j(K);
  }
  function j(K, ie) {
    (ie == null || ie > K.length) && (ie = K.length);
    for (var ce = 0, ye = Array(ie); ce < ie; ce++) ye[ce] = K[ce];
    return ye;
  }
  function z(K, ie, ce, ye, oe, se, re) {
    try {
      var ge = K[se](re), Te = ge.value;
    } catch (pe) {
      return void ce(pe);
    }
    ge.done ? ie(Te) : Promise.resolve(Te).then(ye, oe);
  }
  function Z(K) {
    return function() {
      var ie = this, ce = arguments;
      return new Promise(function(ye, oe) {
        var se = K.apply(ie, ce);
        function re(Te) {
          z(se, ye, oe, re, ge, "next", Te);
        }
        function ge(Te) {
          z(se, ye, oe, re, ge, "throw", Te);
        }
        re(void 0);
      });
    };
  }
  function ue(K, ie) {
    if (!(K instanceof ie)) throw new TypeError("Cannot call a class as a function");
  }
  function $(K, ie) {
    for (var ce = 0; ce < ie.length; ce++) {
      var ye = ie[ce];
      ye.enumerable = ye.enumerable || false, ye.configurable = true, "value" in ye && (ye.writable = true), Object.defineProperty(K, B(ye.key), ye);
    }
  }
  function X(K, ie, ce) {
    return ie && $(K.prototype, ie), ce && $(K, ce), Object.defineProperty(K, "prototype", { writable: false }), K;
  }
  function J(K, ie, ce) {
    return (ie = B(ie)) in K ? Object.defineProperty(K, ie, { value: ce, enumerable: true, configurable: true, writable: true }) : K[ie] = ce, K;
  }
  function B(K) {
    var ie = Q(K, "string");
    return b(ie) == "symbol" ? ie : ie + "";
  }
  function Q(K, ie) {
    if (b(K) != "object" || !K) return K;
    var ce = K[Symbol.toPrimitive];
    if (ce !== void 0) {
      var ye = ce.call(K, ie);
      if (b(ye) != "object") return ye;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (ie === "string" ? String : Number)(K);
  }
  var ne = As.AssembledTransaction = function() {
    function K(ie) {
      var ce = this, ye, oe;
      ue(this, K), J(this, "simulate", Z(q().mark(function se() {
        var re, ge, Te, pe, Oe, xe, Ve, _e, Be = arguments;
        return q().wrap(function(ee) {
          for (; ; ) switch (ee.prev = ee.next) {
            case 0:
              if (re = Be.length > 0 && Be[0] !== void 0 ? Be[0] : {}, ge = re.restore, ce.built) {
                ee.next = 5;
                break;
              }
              if (ce.raw) {
                ee.next = 4;
                break;
              }
              throw new Error("Transaction has not yet been assembled; call `AssembledTransaction.build` first.");
            case 4:
              ce.built = ce.raw.build();
            case 5:
              return ge = ge ?? ce.options.restore, delete ce.simulationResult, delete ce.simulationTransactionData, ee.next = 10, ce.server.simulateTransaction(ce.built);
            case 10:
              if (ce.simulation = ee.sent, !(ge && n.Api.isSimulationRestore(ce.simulation))) {
                ee.next = 25;
                break;
              }
              return ee.next = 14, (0, y.getAccount)(ce.options, ce.server);
            case 14:
              return Te = ee.sent, ee.next = 17, ce.restoreFootprint(ce.simulation.restorePreamble, Te);
            case 17:
              if (pe = ee.sent, pe.status !== n.Api.GetTransactionStatus.SUCCESS) {
                ee.next = 24;
                break;
              }
              return _e = new v.Contract(ce.options.contractId), ce.raw = new v.TransactionBuilder(Te, { fee: (Oe = ce.options.fee) !== null && Oe !== void 0 ? Oe : v.BASE_FEE, networkPassphrase: ce.options.networkPassphrase }).addOperation(_e.call.apply(_e, [ce.options.method].concat(N((xe = ce.options.args) !== null && xe !== void 0 ? xe : [])))).setTimeout((Ve = ce.options.timeoutInSeconds) !== null && Ve !== void 0 ? Ve : t.DEFAULT_TIMEOUT), ee.next = 23, ce.simulate();
            case 23:
              return ee.abrupt("return", ce);
            case 24:
              throw new K.Errors.RestorationFailure(`Automatic restore failed! You set 'restore: true' but the attempted restore did not work. Result:
`.concat(JSON.stringify(pe)));
            case 25:
              return n.Api.isSimulationSuccess(ce.simulation) && (ce.built = (0, i.assembleTransaction)(ce.built, ce.simulation).build()), ee.abrupt("return", ce);
            case 27:
            case "end":
              return ee.stop();
          }
        }, se);
      }))), J(this, "sign", Z(q().mark(function se() {
        var re, ge, Te, pe, Oe, xe, Ve, _e, Be, Qe, ee, P, T = arguments;
        return q().wrap(function(V) {
          for (; ; ) switch (V.prev = V.next) {
            case 0:
              if (ge = T.length > 0 && T[0] !== void 0 ? T[0] : {}, Te = ge.force, pe = Te === void 0 ? false : Te, Oe = ge.signTransaction, xe = Oe === void 0 ? ce.options.signTransaction : Oe, ce.built) {
                V.next = 3;
                break;
              }
              throw new Error("Transaction has not yet been simulated");
            case 3:
              if (!(!pe && ce.isReadCall)) {
                V.next = 5;
                break;
              }
              throw new K.Errors.NoSignatureNeeded("This is a read call. It requires no signature or sending. Use `force: true` to sign and send anyway.");
            case 5:
              if (xe) {
                V.next = 7;
                break;
              }
              throw new K.Errors.NoSigner("You must provide a signTransaction function, either when calling `signAndSend` or when initializing your Client");
            case 7:
              if (Ve = ce.needsNonInvokerSigningBy().filter(function(D) {
                return !D.startsWith("C");
              }), !Ve.length) {
                V.next = 10;
                break;
              }
              throw new K.Errors.NeedsMoreSignatures("Transaction requires signatures from ".concat(Ve, ". ") + "See `needsNonInvokerSigningBy` for details.");
            case 10:
              return _e = (re = ce.options.timeoutInSeconds) !== null && re !== void 0 ? re : t.DEFAULT_TIMEOUT, ce.built = v.TransactionBuilder.cloneFrom(ce.built, { fee: ce.built.fee, timebounds: void 0, sorobanData: ce.simulationData.transactionData }).setTimeout(_e).build(), Be = { networkPassphrase: ce.options.networkPassphrase }, ce.options.address && (Be.address = ce.options.address), ce.options.submit !== void 0 && (Be.submit = ce.options.submit), ce.options.submitUrl && (Be.submitUrl = ce.options.submitUrl), V.next = 18, xe(ce.built.toXDR(), Be);
            case 18:
              Qe = V.sent, ee = Qe.signedTxXdr, P = Qe.error, ce.handleWalletError(P), ce.signed = v.TransactionBuilder.fromXDR(ee, ce.options.networkPassphrase);
            case 23:
            case "end":
              return V.stop();
          }
        }, se);
      }))), J(this, "signAndSend", Z(q().mark(function se() {
        var re, ge, Te, pe, Oe, xe, Ve = arguments;
        return q().wrap(function(Be) {
          for (; ; ) switch (Be.prev = Be.next) {
            case 0:
              if (re = Ve.length > 0 && Ve[0] !== void 0 ? Ve[0] : {}, ge = re.force, Te = ge === void 0 ? false : ge, pe = re.signTransaction, Oe = pe === void 0 ? ce.options.signTransaction : pe, ce.signed) {
                Be.next = 10;
                break;
              }
              return xe = ce.options.submit, ce.options.submit && (ce.options.submit = false), Be.prev = 4, Be.next = 7, ce.sign({ force: Te, signTransaction: Oe });
            case 7:
              return Be.prev = 7, ce.options.submit = xe, Be.finish(7);
            case 10:
              return Be.abrupt("return", ce.send());
            case 11:
            case "end":
              return Be.stop();
          }
        }, se, null, [[4, , 7, 10]]);
      }))), J(this, "needsNonInvokerSigningBy", function() {
        var se, re = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, ge = re.includeAlreadySigned, Te = ge === void 0 ? false : ge;
        if (!ce.built) throw new Error("Transaction has not yet been simulated");
        if (!("operations" in ce.built)) throw new Error("Unexpected Transaction type; no operations: ".concat(JSON.stringify(ce.built)));
        var pe = ce.built.operations[0];
        return N(new Set(((se = pe.auth) !== null && se !== void 0 ? se : []).filter(function(Oe) {
          return Oe.credentials().switch() === v.xdr.SorobanCredentialsType.sorobanCredentialsAddress() && (Te || Oe.credentials().address().signature().switch().name === "scvVoid");
        }).map(function(Oe) {
          return v.Address.fromScAddress(Oe.credentials().address().address()).toString();
        })));
      }), J(this, "signAuthEntries", Z(q().mark(function se() {
        var re, ge, Te, pe, Oe, xe, Ve, _e, Be, Qe, ee, P, T, O, V, D, C, p = arguments;
        return q().wrap(function(U) {
          for (; ; ) switch (U.prev = U.next) {
            case 0:
              if (ge = p.length > 0 && p[0] !== void 0 ? p[0] : {}, Te = ge.expiration, pe = Te === void 0 ? Z(q().mark(function Y() {
                return q().wrap(function(W) {
                  for (; ; ) switch (W.prev = W.next) {
                    case 0:
                      return W.next = 2, ce.server.getLatestLedger();
                    case 2:
                      return W.t0 = W.sent.sequence, W.abrupt("return", W.t0 + 100);
                    case 4:
                    case "end":
                      return W.stop();
                  }
                }, Y);
              }))() : Te, Oe = ge.signAuthEntry, xe = Oe === void 0 ? ce.options.signAuthEntry : Oe, Ve = ge.address, _e = Ve === void 0 ? ce.options.publicKey : Ve, Be = ge.authorizeEntry, Qe = Be === void 0 ? v.authorizeEntry : Be, ce.built) {
                U.next = 3;
                break;
              }
              throw new Error("Transaction has not yet been assembled or simulated");
            case 3:
              if (Qe !== v.authorizeEntry) {
                U.next = 11;
                break;
              }
              if (ee = ce.needsNonInvokerSigningBy(), ee.length !== 0) {
                U.next = 7;
                break;
              }
              throw new K.Errors.NoUnsignedNonInvokerAuthEntries("No unsigned non-invoker auth entries; maybe you already signed?");
            case 7:
              if (ee.indexOf(_e ?? "") !== -1) {
                U.next = 9;
                break;
              }
              throw new K.Errors.NoSignatureNeeded('No auth entries for public key "'.concat(_e, '"'));
            case 9:
              if (xe) {
                U.next = 11;
                break;
              }
              throw new K.Errors.NoSigner("You must provide `signAuthEntry` or a custom `authorizeEntry`");
            case 11:
              P = ce.built.operations[0], T = (re = P.auth) !== null && re !== void 0 ? re : [], O = I(T.entries()), U.prev = 14, D = q().mark(function Y() {
                var ae, W, de, tt, Ne, ut;
                return q().wrap(function(Et) {
                  for (; ; ) switch (Et.prev = Et.next) {
                    case 0:
                      if (ae = R(V.value, 2), W = ae[0], de = ae[1], tt = v.xdr.SorobanCredentials.fromXDR(de.credentials().toXDR()), tt.switch() === v.xdr.SorobanCredentialsType.sorobanCredentialsAddress()) {
                        Et.next = 4;
                        break;
                      }
                      return Et.abrupt("return", 0);
                    case 4:
                      if (Ne = v.Address.fromScAddress(tt.address().address()).toString(), Ne === _e) {
                        Et.next = 7;
                        break;
                      }
                      return Et.abrupt("return", 0);
                    case 7:
                      return ut = xe ?? Promise.resolve, Et.t0 = Qe, Et.t1 = de, Et.t2 = function() {
                        var rr = Z(q().mark(function je(Ge) {
                          var at, Ae, qe;
                          return q().wrap(function(Dt) {
                            for (; ; ) switch (Dt.prev = Dt.next) {
                              case 0:
                                return Dt.next = 2, ut(Ge.toXDR("base64"), { address: _e });
                              case 2:
                                return at = Dt.sent, Ae = at.signedAuthEntry, qe = at.error, ce.handleWalletError(qe), Dt.abrupt("return", Buffer.from(Ae, "base64"));
                              case 7:
                              case "end":
                                return Dt.stop();
                            }
                          }, je);
                        }));
                        return function(je) {
                          return rr.apply(this, arguments);
                        };
                      }(), Et.next = 13, pe;
                    case 13:
                      return Et.t3 = Et.sent, Et.t4 = ce.options.networkPassphrase, Et.next = 17, (0, Et.t0)(Et.t1, Et.t2, Et.t3, Et.t4);
                    case 17:
                      T[W] = Et.sent;
                    case 18:
                    case "end":
                      return Et.stop();
                  }
                }, Y);
              }), O.s();
            case 17:
              if ((V = O.n()).done) {
                U.next = 24;
                break;
              }
              return U.delegateYield(D(), "t0", 19);
            case 19:
              if (C = U.t0, C !== 0) {
                U.next = 22;
                break;
              }
              return U.abrupt("continue", 22);
            case 22:
              U.next = 17;
              break;
            case 24:
              U.next = 29;
              break;
            case 26:
              U.prev = 26, U.t1 = U.catch(14), O.e(U.t1);
            case 29:
              return U.prev = 29, O.f(), U.finish(29);
            case 32:
            case "end":
              return U.stop();
          }
        }, se, null, [[14, 26, 29, 32]]);
      }))), this.options = ie, this.options.simulate = (ye = this.options.simulate) !== null && ye !== void 0 ? ye : true, this.server = new e.Server(this.options.rpcUrl, { allowHttp: (oe = this.options.allowHttp) !== null && oe !== void 0 ? oe : false });
    }
    return X(K, [{ key: "toJSON", value: function() {
      var ce;
      return JSON.stringify({ method: this.options.method, tx: (ce = this.built) === null || ce === void 0 ? void 0 : ce.toXDR(), simulationResult: { auth: this.simulationData.result.auth.map(function(ye) {
        return ye.toXDR("base64");
      }), retval: this.simulationData.result.retval.toXDR("base64") }, simulationTransactionData: this.simulationData.transactionData.toXDR("base64") });
    } }, { key: "toXDR", value: function() {
      var ce;
      if (!this.built) throw new Error("Transaction has not yet been simulated; call `AssembledTransaction.simulate` first.");
      return (ce = this.built) === null || ce === void 0 ? void 0 : ce.toEnvelope().toXDR("base64");
    } }, { key: "handleWalletError", value: function(ce) {
      if (ce) {
        var ye = ce.message, oe = ce.code, se = "".concat(ye).concat(ce.ext ? " (".concat(ce.ext.join(", "), ")") : "");
        switch (oe) {
          case -1:
            throw new K.Errors.InternalWalletError(se);
          case -2:
            throw new K.Errors.ExternalServiceError(se);
          case -3:
            throw new K.Errors.InvalidClientRequest(se);
          case -4:
            throw new K.Errors.UserRejected(se);
          default:
            throw new Error("Unhandled error: ".concat(se));
        }
      }
    } }, { key: "simulationData", get: function() {
      var ce;
      if (this.simulationResult && this.simulationTransactionData) return { result: this.simulationResult, transactionData: this.simulationTransactionData };
      var ye = this.simulation;
      if (!ye) throw new K.Errors.NotYetSimulated("Transaction has not yet been simulated");
      if (n.Api.isSimulationError(ye)) throw new K.Errors.SimulationFailed('Transaction simulation failed: "'.concat(ye.error, '"'));
      if (n.Api.isSimulationRestore(ye)) throw new K.Errors.ExpiredState("You need to restore some contract state before you can invoke this method.\nYou can set `restore` to true in the method options in order to automatically restore the contract state when needed.");
      return this.simulationResult = (ce = ye.result) !== null && ce !== void 0 ? ce : { auth: [], retval: v.xdr.ScVal.scvVoid() }, this.simulationTransactionData = ye.transactionData.build(), { result: this.simulationResult, transactionData: this.simulationTransactionData };
    } }, { key: "result", get: function() {
      try {
        if (!this.simulationData.result) throw new Error("No simulation result!");
        return this.options.parseResultXdr(this.simulationData.result.retval);
      } catch (ye) {
        if (!(0, y.implementsToString)(ye)) throw ye;
        var ce = this.parseError(ye.toString());
        if (ce) return ce;
        throw ye;
      }
    } }, { key: "parseError", value: function(ce) {
      if (this.options.errorTypes) {
        var ye = ce.match(y.contractErrorPattern);
        if (ye) {
          var oe = parseInt(ye[1], 10), se = this.options.errorTypes[oe];
          if (se) return new u.Err(se);
        }
      }
    } }, { key: "send", value: function() {
      var ie = Z(q().mark(function ye() {
        var oe;
        return q().wrap(function(re) {
          for (; ; ) switch (re.prev = re.next) {
            case 0:
              if (this.signed) {
                re.next = 2;
                break;
              }
              throw new Error("The transaction has not yet been signed. Run `sign` first, or use `signAndSend` instead.");
            case 2:
              return re.next = 4, o.SentTransaction.init(this);
            case 4:
              return oe = re.sent, re.abrupt("return", oe);
            case 6:
            case "end":
              return re.stop();
          }
        }, ye, this);
      }));
      function ce() {
        return ie.apply(this, arguments);
      }
      return ce;
    }() }, { key: "isReadCall", get: function() {
      var ce = this.simulationData.result.auth.length, ye = this.simulationData.transactionData.resources().footprint().readWrite().length;
      return ce === 0 && ye === 0;
    } }, { key: "restoreFootprint", value: function() {
      var ie = Z(q().mark(function ye(oe, se) {
        var re, ge;
        return q().wrap(function(pe) {
          for (; ; ) switch (pe.prev = pe.next) {
            case 0:
              if (this.options.signTransaction) {
                pe.next = 2;
                break;
              }
              throw new Error("For automatic restore to work you must provide a signTransaction function when initializing your Client");
            case 2:
              if (se == null) {
                pe.next = 6;
                break;
              }
              pe.t0 = se, pe.next = 9;
              break;
            case 6:
              return pe.next = 8, (0, y.getAccount)(this.options, this.server);
            case 8:
              pe.t0 = pe.sent;
            case 9:
              return se = pe.t0, pe.next = 12, K.buildFootprintRestoreTransaction(E({}, this.options), oe.transactionData, se, oe.minResourceFee);
            case 12:
              return re = pe.sent, pe.next = 15, re.signAndSend();
            case 15:
              if (ge = pe.sent, ge.getTransactionResponse) {
                pe.next = 18;
                break;
              }
              throw new K.Errors.RestorationFailure(`The attempt at automatic restore failed. 
`.concat(JSON.stringify(ge)));
            case 18:
              return pe.abrupt("return", ge.getTransactionResponse);
            case 19:
            case "end":
              return pe.stop();
          }
        }, ye, this);
      }));
      function ce(ye, oe) {
        return ie.apply(this, arguments);
      }
      return ce;
    }() }], [{ key: "fromJSON", value: function(ce, ye) {
      var oe = ye.tx, se = ye.simulationResult, re = ye.simulationTransactionData, ge = new K(ce);
      return ge.built = v.TransactionBuilder.fromXDR(oe, ce.networkPassphrase), ge.simulationResult = { auth: se.auth.map(function(Te) {
        return v.xdr.SorobanAuthorizationEntry.fromXDR(Te, "base64");
      }), retval: v.xdr.ScVal.fromXDR(se.retval, "base64") }, ge.simulationTransactionData = v.xdr.SorobanTransactionData.fromXDR(re, "base64"), ge;
    } }, { key: "fromXDR", value: function(ce, ye, oe) {
      var se, re = v.xdr.TransactionEnvelope.fromXDR(ye, "base64"), ge = v.TransactionBuilder.fromXDR(re, ce.networkPassphrase), Te = ge.operations[0];
      if (!(Te != null && (se = Te.func) !== null && se !== void 0 && se.value) || typeof Te.func.value != "function") throw new Error("Could not extract the method from the transaction envelope.");
      var pe = Te.func.value();
      if (!(pe != null && pe.functionName)) throw new Error("Could not extract the method name from the transaction envelope.");
      var Oe = pe.functionName().toString("utf-8"), xe = new K(E(E({}, ce), {}, { method: Oe, parseResultXdr: function(_e) {
        return oe.funcResToNative(Oe, _e);
      } }));
      return xe.built = ge, xe;
    } }, { key: "build", value: function(ce) {
      var ye, oe = new v.Contract(ce.contractId);
      return K.buildWithOp(oe.call.apply(oe, [ce.method].concat(N((ye = ce.args) !== null && ye !== void 0 ? ye : []))), ce);
    } }, { key: "buildWithOp", value: function() {
      var ie = Z(q().mark(function ye(oe, se) {
        var re, ge, Te, pe;
        return q().wrap(function(xe) {
          for (; ; ) switch (xe.prev = xe.next) {
            case 0:
              return Te = new K(se), xe.next = 3, (0, y.getAccount)(se, Te.server);
            case 3:
              if (pe = xe.sent, Te.raw = new v.TransactionBuilder(pe, { fee: (re = se.fee) !== null && re !== void 0 ? re : v.BASE_FEE, networkPassphrase: se.networkPassphrase }).setTimeout((ge = se.timeoutInSeconds) !== null && ge !== void 0 ? ge : t.DEFAULT_TIMEOUT).addOperation(oe), !se.simulate) {
                xe.next = 8;
                break;
              }
              return xe.next = 8, Te.simulate();
            case 8:
              return xe.abrupt("return", Te);
            case 9:
            case "end":
              return xe.stop();
          }
        }, ye);
      }));
      function ce(ye, oe) {
        return ie.apply(this, arguments);
      }
      return ce;
    }() }, { key: "buildFootprintRestoreTransaction", value: function() {
      var ie = Z(q().mark(function ye(oe, se, re, ge) {
        var Te, pe;
        return q().wrap(function(xe) {
          for (; ; ) switch (xe.prev = xe.next) {
            case 0:
              return pe = new K(oe), pe.raw = new v.TransactionBuilder(re, { fee: ge, networkPassphrase: oe.networkPassphrase }).setSorobanData(se instanceof v.SorobanDataBuilder ? se.build() : se).addOperation(v.Operation.restoreFootprint({})).setTimeout((Te = oe.timeoutInSeconds) !== null && Te !== void 0 ? Te : t.DEFAULT_TIMEOUT), xe.next = 4, pe.simulate({ restore: false });
            case 4:
              return xe.abrupt("return", pe);
            case 5:
            case "end":
              return xe.stop();
          }
        }, ye);
      }));
      function ce(ye, oe, se, re) {
        return ie.apply(this, arguments);
      }
      return ce;
    }() }]);
  }();
  return J(ne, "Errors", { ExpiredState: function(K) {
    function ie() {
      return ue(this, ie), s(this, ie, arguments);
    }
    return f(ie, K), X(ie);
  }(r(Error)), RestorationFailure: function(K) {
    function ie() {
      return ue(this, ie), s(this, ie, arguments);
    }
    return f(ie, K), X(ie);
  }(r(Error)), NeedsMoreSignatures: function(K) {
    function ie() {
      return ue(this, ie), s(this, ie, arguments);
    }
    return f(ie, K), X(ie);
  }(r(Error)), NoSignatureNeeded: function(K) {
    function ie() {
      return ue(this, ie), s(this, ie, arguments);
    }
    return f(ie, K), X(ie);
  }(r(Error)), NoUnsignedNonInvokerAuthEntries: function(K) {
    function ie() {
      return ue(this, ie), s(this, ie, arguments);
    }
    return f(ie, K), X(ie);
  }(r(Error)), NoSigner: function(K) {
    function ie() {
      return ue(this, ie), s(this, ie, arguments);
    }
    return f(ie, K), X(ie);
  }(r(Error)), NotYetSimulated: function(K) {
    function ie() {
      return ue(this, ie), s(this, ie, arguments);
    }
    return f(ie, K), X(ie);
  }(r(Error)), FakeAccount: function(K) {
    function ie() {
      return ue(this, ie), s(this, ie, arguments);
    }
    return f(ie, K), X(ie);
  }(r(Error)), SimulationFailed: function(K) {
    function ie() {
      return ue(this, ie), s(this, ie, arguments);
    }
    return f(ie, K), X(ie);
  }(r(Error)), InternalWalletError: function(K) {
    function ie() {
      return ue(this, ie), s(this, ie, arguments);
    }
    return f(ie, K), X(ie);
  }(r(Error)), ExternalServiceError: function(K) {
    function ie() {
      return ue(this, ie), s(this, ie, arguments);
    }
    return f(ie, K), X(ie);
  }(r(Error)), InvalidClientRequest: function(K) {
    function ie() {
      return ue(this, ie), s(this, ie, arguments);
    }
    return f(ie, K), X(ie);
  }(r(Error)), UserRejected: function(K) {
    function ie() {
      return ue(this, ie), s(this, ie, arguments);
    }
    return f(ie, K), X(ie);
  }(r(Error)) }), As;
}
var Ts = {}, Id;
function bE() {
  if (Id) return Ts;
  Id = 1;
  function v(y) {
    "@babel/helpers - typeof";
    return v = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t) {
      return typeof t;
    } : function(t) {
      return t && typeof Symbol == "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
    }, v(y);
  }
  Object.defineProperty(Ts, "__esModule", { value: true }), Ts.basicNodeSigner = void 0;
  var e = To();
  function n() {
    n = function() {
      return t;
    };
    var y, t = {}, o = Object.prototype, s = o.hasOwnProperty, c = Object.defineProperty || function(X, J, B) {
      X[J] = B.value;
    }, h = typeof Symbol == "function" ? Symbol : {}, f = h.iterator || "@@iterator", r = h.asyncIterator || "@@asyncIterator", m = h.toStringTag || "@@toStringTag";
    function g(X, J, B) {
      return Object.defineProperty(X, J, { value: B, enumerable: true, configurable: true, writable: true }), X[J];
    }
    try {
      g({}, "");
    } catch {
      g = function(B, Q, ne) {
        return B[Q] = ne;
      };
    }
    function a(X, J, B, Q) {
      var ne = J && J.prototype instanceof k ? J : k, K = Object.create(ne.prototype), ie = new ue(Q || []);
      return c(K, "_invoke", { value: L(X, B, ie) }), K;
    }
    function l(X, J, B) {
      try {
        return { type: "normal", arg: X.call(J, B) };
      } catch (Q) {
        return { type: "throw", arg: Q };
      }
    }
    t.wrap = a;
    var d = "suspendedStart", b = "suspendedYield", S = "executing", E = "completed", R = {};
    function k() {
    }
    function w() {
    }
    function F() {
    }
    var I = {};
    g(I, f, function() {
      return this;
    });
    var q = Object.getPrototypeOf, N = q && q(q($([])));
    N && N !== o && s.call(N, f) && (I = N);
    var H = F.prototype = k.prototype = Object.create(I);
    function _(X) {
      ["next", "throw", "return"].forEach(function(J) {
        g(X, J, function(B) {
          return this._invoke(J, B);
        });
      });
    }
    function x(X, J) {
      function B(ne, K, ie, ce) {
        var ye = l(X[ne], X, K);
        if (ye.type !== "throw") {
          var oe = ye.arg, se = oe.value;
          return se && v(se) == "object" && s.call(se, "__await") ? J.resolve(se.__await).then(function(re) {
            B("next", re, ie, ce);
          }, function(re) {
            B("throw", re, ie, ce);
          }) : J.resolve(se).then(function(re) {
            oe.value = re, ie(oe);
          }, function(re) {
            return B("throw", re, ie, ce);
          });
        }
        ce(ye.arg);
      }
      var Q;
      c(this, "_invoke", { value: function(K, ie) {
        function ce() {
          return new J(function(ye, oe) {
            B(K, ie, ye, oe);
          });
        }
        return Q = Q ? Q.then(ce, ce) : ce();
      } });
    }
    function L(X, J, B) {
      var Q = d;
      return function(ne, K) {
        if (Q === S) throw Error("Generator is already running");
        if (Q === E) {
          if (ne === "throw") throw K;
          return { value: y, done: true };
        }
        for (B.method = ne, B.arg = K; ; ) {
          var ie = B.delegate;
          if (ie) {
            var ce = j(ie, B);
            if (ce) {
              if (ce === R) continue;
              return ce;
            }
          }
          if (B.method === "next") B.sent = B._sent = B.arg;
          else if (B.method === "throw") {
            if (Q === d) throw Q = E, B.arg;
            B.dispatchException(B.arg);
          } else B.method === "return" && B.abrupt("return", B.arg);
          Q = S;
          var ye = l(X, J, B);
          if (ye.type === "normal") {
            if (Q = B.done ? E : b, ye.arg === R) continue;
            return { value: ye.arg, done: B.done };
          }
          ye.type === "throw" && (Q = E, B.method = "throw", B.arg = ye.arg);
        }
      };
    }
    function j(X, J) {
      var B = J.method, Q = X.iterator[B];
      if (Q === y) return J.delegate = null, B === "throw" && X.iterator.return && (J.method = "return", J.arg = y, j(X, J), J.method === "throw") || B !== "return" && (J.method = "throw", J.arg = new TypeError("The iterator does not provide a '" + B + "' method")), R;
      var ne = l(Q, X.iterator, J.arg);
      if (ne.type === "throw") return J.method = "throw", J.arg = ne.arg, J.delegate = null, R;
      var K = ne.arg;
      return K ? K.done ? (J[X.resultName] = K.value, J.next = X.nextLoc, J.method !== "return" && (J.method = "next", J.arg = y), J.delegate = null, R) : K : (J.method = "throw", J.arg = new TypeError("iterator result is not an object"), J.delegate = null, R);
    }
    function z(X) {
      var J = { tryLoc: X[0] };
      1 in X && (J.catchLoc = X[1]), 2 in X && (J.finallyLoc = X[2], J.afterLoc = X[3]), this.tryEntries.push(J);
    }
    function Z(X) {
      var J = X.completion || {};
      J.type = "normal", delete J.arg, X.completion = J;
    }
    function ue(X) {
      this.tryEntries = [{ tryLoc: "root" }], X.forEach(z, this), this.reset(true);
    }
    function $(X) {
      if (X || X === "") {
        var J = X[f];
        if (J) return J.call(X);
        if (typeof X.next == "function") return X;
        if (!isNaN(X.length)) {
          var B = -1, Q = function ne() {
            for (; ++B < X.length; ) if (s.call(X, B)) return ne.value = X[B], ne.done = false, ne;
            return ne.value = y, ne.done = true, ne;
          };
          return Q.next = Q;
        }
      }
      throw new TypeError(v(X) + " is not iterable");
    }
    return w.prototype = F, c(H, "constructor", { value: F, configurable: true }), c(F, "constructor", { value: w, configurable: true }), w.displayName = g(F, m, "GeneratorFunction"), t.isGeneratorFunction = function(X) {
      var J = typeof X == "function" && X.constructor;
      return !!J && (J === w || (J.displayName || J.name) === "GeneratorFunction");
    }, t.mark = function(X) {
      return Object.setPrototypeOf ? Object.setPrototypeOf(X, F) : (X.__proto__ = F, g(X, m, "GeneratorFunction")), X.prototype = Object.create(H), X;
    }, t.awrap = function(X) {
      return { __await: X };
    }, _(x.prototype), g(x.prototype, r, function() {
      return this;
    }), t.AsyncIterator = x, t.async = function(X, J, B, Q, ne) {
      ne === void 0 && (ne = Promise);
      var K = new x(a(X, J, B, Q), ne);
      return t.isGeneratorFunction(J) ? K : K.next().then(function(ie) {
        return ie.done ? ie.value : K.next();
      });
    }, _(H), g(H, m, "Generator"), g(H, f, function() {
      return this;
    }), g(H, "toString", function() {
      return "[object Generator]";
    }), t.keys = function(X) {
      var J = Object(X), B = [];
      for (var Q in J) B.push(Q);
      return B.reverse(), function ne() {
        for (; B.length; ) {
          var K = B.pop();
          if (K in J) return ne.value = K, ne.done = false, ne;
        }
        return ne.done = true, ne;
      };
    }, t.values = $, ue.prototype = { constructor: ue, reset: function(J) {
      if (this.prev = 0, this.next = 0, this.sent = this._sent = y, this.done = false, this.delegate = null, this.method = "next", this.arg = y, this.tryEntries.forEach(Z), !J) for (var B in this) B.charAt(0) === "t" && s.call(this, B) && !isNaN(+B.slice(1)) && (this[B] = y);
    }, stop: function() {
      this.done = true;
      var J = this.tryEntries[0].completion;
      if (J.type === "throw") throw J.arg;
      return this.rval;
    }, dispatchException: function(J) {
      if (this.done) throw J;
      var B = this;
      function Q(oe, se) {
        return ie.type = "throw", ie.arg = J, B.next = oe, se && (B.method = "next", B.arg = y), !!se;
      }
      for (var ne = this.tryEntries.length - 1; ne >= 0; --ne) {
        var K = this.tryEntries[ne], ie = K.completion;
        if (K.tryLoc === "root") return Q("end");
        if (K.tryLoc <= this.prev) {
          var ce = s.call(K, "catchLoc"), ye = s.call(K, "finallyLoc");
          if (ce && ye) {
            if (this.prev < K.catchLoc) return Q(K.catchLoc, true);
            if (this.prev < K.finallyLoc) return Q(K.finallyLoc);
          } else if (ce) {
            if (this.prev < K.catchLoc) return Q(K.catchLoc, true);
          } else {
            if (!ye) throw Error("try statement without catch or finally");
            if (this.prev < K.finallyLoc) return Q(K.finallyLoc);
          }
        }
      }
    }, abrupt: function(J, B) {
      for (var Q = this.tryEntries.length - 1; Q >= 0; --Q) {
        var ne = this.tryEntries[Q];
        if (ne.tryLoc <= this.prev && s.call(ne, "finallyLoc") && this.prev < ne.finallyLoc) {
          var K = ne;
          break;
        }
      }
      K && (J === "break" || J === "continue") && K.tryLoc <= B && B <= K.finallyLoc && (K = null);
      var ie = K ? K.completion : {};
      return ie.type = J, ie.arg = B, K ? (this.method = "next", this.next = K.finallyLoc, R) : this.complete(ie);
    }, complete: function(J, B) {
      if (J.type === "throw") throw J.arg;
      return J.type === "break" || J.type === "continue" ? this.next = J.arg : J.type === "return" ? (this.rval = this.arg = J.arg, this.method = "return", this.next = "end") : J.type === "normal" && B && (this.next = B), R;
    }, finish: function(J) {
      for (var B = this.tryEntries.length - 1; B >= 0; --B) {
        var Q = this.tryEntries[B];
        if (Q.finallyLoc === J) return this.complete(Q.completion, Q.afterLoc), Z(Q), R;
      }
    }, catch: function(J) {
      for (var B = this.tryEntries.length - 1; B >= 0; --B) {
        var Q = this.tryEntries[B];
        if (Q.tryLoc === J) {
          var ne = Q.completion;
          if (ne.type === "throw") {
            var K = ne.arg;
            Z(Q);
          }
          return K;
        }
      }
      throw Error("illegal catch attempt");
    }, delegateYield: function(J, B, Q) {
      return this.delegate = { iterator: $(J), resultName: B, nextLoc: Q }, this.method === "next" && (this.arg = y), R;
    } }, t;
  }
  function i(y, t, o, s, c, h, f) {
    try {
      var r = y[h](f), m = r.value;
    } catch (g) {
      return void o(g);
    }
    r.done ? t(m) : Promise.resolve(m).then(s, c);
  }
  function u(y) {
    return function() {
      var t = this, o = arguments;
      return new Promise(function(s, c) {
        var h = y.apply(t, o);
        function f(m) {
          i(h, s, c, f, r, "next", m);
        }
        function r(m) {
          i(h, s, c, f, r, "throw", m);
        }
        f(void 0);
      });
    };
  }
  return Ts.basicNodeSigner = function(t, o) {
    return { signTransaction: function() {
      var s = u(n().mark(function h(f, r) {
        var m;
        return n().wrap(function(a) {
          for (; ; ) switch (a.prev = a.next) {
            case 0:
              return m = e.TransactionBuilder.fromXDR(f, (r == null ? void 0 : r.networkPassphrase) || o), m.sign(t), a.abrupt("return", { signedTxXdr: m.toXDR(), signerAddress: t.publicKey() });
            case 3:
            case "end":
              return a.stop();
          }
        }, h);
      }));
      function c(h, f) {
        return s.apply(this, arguments);
      }
      return c;
    }(), signAuthEntry: function() {
      var s = u(n().mark(function h(f) {
        var r;
        return n().wrap(function(g) {
          for (; ; ) switch (g.prev = g.next) {
            case 0:
              return r = t.sign((0, e.hash)(Buffer.from(f, "base64"))).toString("base64"), g.abrupt("return", { signedAuthEntry: r, signerAddress: t.publicKey() });
            case 2:
            case "end":
              return g.stop();
          }
        }, h);
      }));
      function c(h) {
        return s.apply(this, arguments);
      }
      return c;
    }() };
  }, Ts;
}
var ks = {}, Os = {}, Ld;
function Km() {
  if (Ld) return Os;
  Ld = 1, Object.defineProperty(Os, "__esModule", { value: true }), Os.Spec = void 0;
  var v = To(), e = df();
  function n(_, x) {
    var L = Object.keys(_);
    if (Object.getOwnPropertySymbols) {
      var j = Object.getOwnPropertySymbols(_);
      x && (j = j.filter(function(z) {
        return Object.getOwnPropertyDescriptor(_, z).enumerable;
      })), L.push.apply(L, j);
    }
    return L;
  }
  function i(_) {
    for (var x = 1; x < arguments.length; x++) {
      var L = arguments[x] != null ? arguments[x] : {};
      x % 2 ? n(Object(L), true).forEach(function(j) {
        s(_, j, L[j]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(_, Object.getOwnPropertyDescriptors(L)) : n(Object(L)).forEach(function(j) {
        Object.defineProperty(_, j, Object.getOwnPropertyDescriptor(L, j));
      });
    }
    return _;
  }
  function u(_) {
    "@babel/helpers - typeof";
    return u = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(x) {
      return typeof x;
    } : function(x) {
      return x && typeof Symbol == "function" && x.constructor === Symbol && x !== Symbol.prototype ? "symbol" : typeof x;
    }, u(_);
  }
  function y(_, x) {
    if (!(_ instanceof x)) throw new TypeError("Cannot call a class as a function");
  }
  function t(_, x) {
    for (var L = 0; L < x.length; L++) {
      var j = x[L];
      j.enumerable = j.enumerable || false, j.configurable = true, "value" in j && (j.writable = true), Object.defineProperty(_, c(j.key), j);
    }
  }
  function o(_, x, L) {
    return x && t(_.prototype, x), Object.defineProperty(_, "prototype", { writable: false }), _;
  }
  function s(_, x, L) {
    return (x = c(x)) in _ ? Object.defineProperty(_, x, { value: L, enumerable: true, configurable: true, writable: true }) : _[x] = L, _;
  }
  function c(_) {
    var x = h(_, "string");
    return u(x) == "symbol" ? x : x + "";
  }
  function h(_, x) {
    if (u(_) != "object" || !_) return _;
    var L = _[Symbol.toPrimitive];
    if (L !== void 0) {
      var j = L.call(_, x);
      if (u(j) != "object") return j;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return String(_);
  }
  function f(_, x) {
    return l(_) || a(_, x) || m(_, x) || r();
  }
  function r() {
    throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
  }
  function m(_, x) {
    if (_) {
      if (typeof _ == "string") return g(_, x);
      var L = {}.toString.call(_).slice(8, -1);
      return L === "Object" && _.constructor && (L = _.constructor.name), L === "Map" || L === "Set" ? Array.from(_) : L === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(L) ? g(_, x) : void 0;
    }
  }
  function g(_, x) {
    (x == null || x > _.length) && (x = _.length);
    for (var L = 0, j = Array(x); L < x; L++) j[L] = _[L];
    return j;
  }
  function a(_, x) {
    var L = _ == null ? null : typeof Symbol < "u" && _[Symbol.iterator] || _["@@iterator"];
    if (L != null) {
      var j, z, Z, ue, $ = [], X = true, J = false;
      try {
        if (Z = (L = L.call(_)).next, x === 0) {
          if (Object(L) !== L) return;
          X = false;
        } else for (; !(X = (j = Z.call(L)).done) && ($.push(j.value), $.length !== x); X = true) ;
      } catch (B) {
        J = true, z = B;
      } finally {
        try {
          if (!X && L.return != null && (ue = L.return(), Object(ue) !== ue)) return;
        } finally {
          if (J) throw z;
        }
      }
      return $;
    }
  }
  function l(_) {
    if (Array.isArray(_)) return _;
  }
  function d(_) {
    var x = _.doc().toString(), L = _.cases(), j = [];
    L.forEach(function(Z) {
      var ue = Z.name().toString(), $ = Z.doc().toString();
      j.push({ description: $, title: ue, enum: [Z.value()], type: "number" });
    });
    var z = { oneOf: j };
    return x.length > 0 && (z.description = x), z;
  }
  function b(_) {
    return /^\d+$/.test(_.name().toString());
  }
  function S(_, x) {
    var L = x.name().toString(), j = Object.entries(_).find(function(z) {
      var Z = f(z, 1), ue = Z[0];
      return ue === L;
    });
    if (!j) throw new Error("Missing field ".concat(L));
    return j[1];
  }
  function E(_) {
    return function(L) {
      switch (L.switch().value) {
        case v.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseTupleV0().value: {
          var j = L.tupleCase();
          return j.name().toString() === _;
        }
        case v.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseVoidV0().value: {
          var z = L.voidCase();
          return z.name().toString() === _;
        }
        default:
          return false;
      }
    };
  }
  function R(_, x) {
    switch (x.value) {
      case v.xdr.ScSpecType.scSpecTypeString().value:
        return v.xdr.ScVal.scvString(_);
      case v.xdr.ScSpecType.scSpecTypeSymbol().value:
        return v.xdr.ScVal.scvSymbol(_);
      case v.xdr.ScSpecType.scSpecTypeAddress().value: {
        var L = v.Address.fromString(_);
        return v.xdr.ScVal.scvAddress(L.toScAddress());
      }
      case v.xdr.ScSpecType.scSpecTypeU64().value:
        return new v.XdrLargeInt("u64", _).toScVal();
      case v.xdr.ScSpecType.scSpecTypeI64().value:
        return new v.XdrLargeInt("i64", _).toScVal();
      case v.xdr.ScSpecType.scSpecTypeU128().value:
        return new v.XdrLargeInt("u128", _).toScVal();
      case v.xdr.ScSpecType.scSpecTypeI128().value:
        return new v.XdrLargeInt("i128", _).toScVal();
      case v.xdr.ScSpecType.scSpecTypeU256().value:
        return new v.XdrLargeInt("u256", _).toScVal();
      case v.xdr.ScSpecType.scSpecTypeI256().value:
        return new v.XdrLargeInt("i256", _).toScVal();
      case v.xdr.ScSpecType.scSpecTypeBytes().value:
      case v.xdr.ScSpecType.scSpecTypeBytesN().value:
        return v.xdr.ScVal.scvBytes(Buffer.from(_, "base64"));
      default:
        throw new TypeError("invalid type ".concat(x.name, " specified for string value"));
    }
  }
  var k = { U32: { type: "integer", minimum: 0, maximum: 4294967295 }, I32: { type: "integer", minimum: -2147483648, maximum: 2147483647 }, U64: { type: "string", pattern: "^([1-9][0-9]*|0)$", minLength: 1, maxLength: 20 }, I64: { type: "string", pattern: "^(-?[1-9][0-9]*|0)$", minLength: 1, maxLength: 21 }, U128: { type: "string", pattern: "^([1-9][0-9]*|0)$", minLength: 1, maxLength: 39 }, I128: { type: "string", pattern: "^(-?[1-9][0-9]*|0)$", minLength: 1, maxLength: 40 }, U256: { type: "string", pattern: "^([1-9][0-9]*|0)$", minLength: 1, maxLength: 78 }, I256: { type: "string", pattern: "^(-?[1-9][0-9]*|0)$", minLength: 1, maxLength: 79 }, Address: { type: "string", format: "address", description: "Address can be a public key or contract id" }, ScString: { type: "string", description: "ScString is a string" }, ScSymbol: { type: "string", description: "ScSymbol is a string" }, DataUrl: { type: "string", pattern: "^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$" } };
  function w(_) {
    var x = _.switch(), L = x.value, j;
    switch (L) {
      case v.xdr.ScSpecType.scSpecTypeVal().value: {
        j = "Val";
        break;
      }
      case v.xdr.ScSpecType.scSpecTypeBool().value:
        return { type: "boolean" };
      case v.xdr.ScSpecType.scSpecTypeVoid().value:
        return { type: "null" };
      case v.xdr.ScSpecType.scSpecTypeError().value: {
        j = "Error";
        break;
      }
      case v.xdr.ScSpecType.scSpecTypeU32().value: {
        j = "U32";
        break;
      }
      case v.xdr.ScSpecType.scSpecTypeI32().value: {
        j = "I32";
        break;
      }
      case v.xdr.ScSpecType.scSpecTypeU64().value: {
        j = "U64";
        break;
      }
      case v.xdr.ScSpecType.scSpecTypeI64().value: {
        j = "I64";
        break;
      }
      case v.xdr.ScSpecType.scSpecTypeTimepoint().value:
        throw new Error("Timepoint type not supported");
      case v.xdr.ScSpecType.scSpecTypeDuration().value:
        throw new Error("Duration not supported");
      case v.xdr.ScSpecType.scSpecTypeU128().value: {
        j = "U128";
        break;
      }
      case v.xdr.ScSpecType.scSpecTypeI128().value: {
        j = "I128";
        break;
      }
      case v.xdr.ScSpecType.scSpecTypeU256().value: {
        j = "U256";
        break;
      }
      case v.xdr.ScSpecType.scSpecTypeI256().value: {
        j = "I256";
        break;
      }
      case v.xdr.ScSpecType.scSpecTypeBytes().value: {
        j = "DataUrl";
        break;
      }
      case v.xdr.ScSpecType.scSpecTypeString().value: {
        j = "ScString";
        break;
      }
      case v.xdr.ScSpecType.scSpecTypeSymbol().value: {
        j = "ScSymbol";
        break;
      }
      case v.xdr.ScSpecType.scSpecTypeAddress().value: {
        j = "Address";
        break;
      }
      case v.xdr.ScSpecType.scSpecTypeOption().value: {
        var z = _.option();
        return w(z.valueType());
      }
      case v.xdr.ScSpecType.scSpecTypeResult().value:
        break;
      case v.xdr.ScSpecType.scSpecTypeVec().value: {
        var Z = _.vec(), ue = w(Z.elementType());
        return { type: "array", items: ue };
      }
      case v.xdr.ScSpecType.scSpecTypeMap().value: {
        var $ = _.map(), X = [w($.keyType()), w($.valueType())];
        return { type: "array", items: { type: "array", items: X, minItems: 2, maxItems: 2 } };
      }
      case v.xdr.ScSpecType.scSpecTypeTuple().value: {
        var J = _.tuple(), B = J.valueTypes().length, Q = B, ne = J.valueTypes().map(w);
        return { type: "array", items: ne, minItems: B, maxItems: Q };
      }
      case v.xdr.ScSpecType.scSpecTypeBytesN().value: {
        var K = _.bytesN();
        return { $ref: "#/definitions/DataUrl", maxLength: K.n() };
      }
      case v.xdr.ScSpecType.scSpecTypeUdt().value: {
        var ie = _.udt();
        j = ie.name().toString();
        break;
      }
    }
    return { $ref: "#/definitions/".concat(j) };
  }
  function F(_) {
    return _.switch().value !== v.xdr.ScSpecType.scSpecTypeOption().value;
  }
  function I(_) {
    var x = {}, L = [];
    _.forEach(function(z) {
      var Z = z.type(), ue = z.name().toString();
      x[ue] = w(Z), F(Z) && L.push(ue);
    });
    var j = { properties: x };
    return L.length > 0 && (j.required = L), j;
  }
  function q(_) {
    var x = _.fields();
    if (x.some(b)) {
      if (!x.every(b)) throw new Error("mixed numeric and non-numeric field names are not allowed");
      var L = x.map(function($, X) {
        return w(x[X].type());
      });
      return { type: "array", items: L, minItems: x.length, maxItems: x.length };
    }
    var j = _.doc().toString(), z = I(x), Z = z.properties, ue = z.required;
    return Z.additionalProperties = false, { description: j, properties: Z, required: ue, type: "object" };
  }
  function N(_) {
    var x = I(_.inputs()), L = x.properties, j = x.required, z = { additionalProperties: false, properties: L, type: "object" };
    (j == null ? void 0 : j.length) > 0 && (z.required = j);
    var Z = { properties: { args: z } }, ue = _.outputs(), $ = ue.length > 0 ? w(ue[0]) : w(v.xdr.ScSpecTypeDef.scSpecTypeVoid()), X = _.doc().toString();
    return X.length > 0 && (Z.description = X), Z.additionalProperties = false, $.additionalProperties = false, { input: Z, output: $ };
  }
  function H(_) {
    var x = _.doc().toString(), L = _.cases(), j = [];
    L.forEach(function(Z) {
      switch (Z.switch().value) {
        case v.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseVoidV0().value: {
          var ue = Z.voidCase(), $ = ue.name().toString();
          j.push({ type: "object", title: $, properties: { tag: $ }, additionalProperties: false, required: ["tag"] });
          break;
        }
        case v.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseTupleV0().value: {
          var X = Z.tupleCase(), J = X.name().toString();
          j.push({ type: "object", title: J, properties: { tag: J, values: { type: "array", items: X.type().map(w) } }, required: ["tag", "values"], additionalProperties: false });
        }
      }
    });
    var z = { oneOf: j };
    return x.length > 0 && (z.description = x), z;
  }
  return Os.Spec = function() {
    function _(x) {
      if (y(this, _), s(this, "entries", []), x.length === 0) throw new Error("Contract spec must have at least one entry");
      var L = x[0];
      typeof L == "string" ? this.entries = x.map(function(j) {
        return v.xdr.ScSpecEntry.fromXDR(j, "base64");
      }) : this.entries = x;
    }
    return o(_, [{ key: "funcs", value: function() {
      return this.entries.filter(function(L) {
        return L.switch().value === v.xdr.ScSpecEntryKind.scSpecEntryFunctionV0().value;
      }).map(function(L) {
        return L.functionV0();
      });
    } }, { key: "getFunc", value: function(L) {
      var j = this.findEntry(L);
      if (j.switch().value !== v.xdr.ScSpecEntryKind.scSpecEntryFunctionV0().value) throw new Error("".concat(L, " is not a function"));
      return j.functionV0();
    } }, { key: "funcArgsToScVals", value: function(L, j) {
      var z = this, Z = this.getFunc(L);
      return Z.inputs().map(function(ue) {
        return z.nativeToScVal(S(j, ue), ue.type());
      });
    } }, { key: "funcResToNative", value: function(L, j) {
      var z = typeof j == "string" ? v.xdr.ScVal.fromXDR(j, "base64") : j, Z = this.getFunc(L), ue = Z.outputs();
      if (ue.length === 0) {
        var $ = z.switch();
        if ($.value !== v.xdr.ScValType.scvVoid().value) throw new Error("Expected void, got ".concat($.name));
        return null;
      }
      if (ue.length > 1) throw new Error("Multiple outputs not supported");
      var X = ue[0];
      return X.switch().value === v.xdr.ScSpecType.scSpecTypeResult().value ? new e.Ok(this.scValToNative(z, X.result().okType())) : this.scValToNative(z, X);
    } }, { key: "findEntry", value: function(L) {
      var j = this.entries.find(function(z) {
        return z.value().name().toString() === L;
      });
      if (!j) throw new Error("no such entry: ".concat(L));
      return j;
    } }, { key: "nativeToScVal", value: function(L, j) {
      var z = this, Z = j.switch(), ue = Z.value;
      if (Z.value === v.xdr.ScSpecType.scSpecTypeUdt().value) {
        var $ = j.udt();
        return this.nativeToUdt(L, $.name().toString());
      }
      if (ue === v.xdr.ScSpecType.scSpecTypeOption().value) {
        var X = j.option();
        return L === void 0 ? v.xdr.ScVal.scvVoid() : this.nativeToScVal(L, X.valueType());
      }
      switch (u(L)) {
        case "object": {
          var J, B;
          if (L === null) switch (ue) {
            case v.xdr.ScSpecType.scSpecTypeVoid().value:
              return v.xdr.ScVal.scvVoid();
            default:
              throw new TypeError("Type ".concat(j, " was not void, but value was null"));
          }
          if (L instanceof v.xdr.ScVal) return L;
          if (L instanceof v.Address) {
            if (j.switch().value !== v.xdr.ScSpecType.scSpecTypeAddress().value) throw new TypeError("Type ".concat(j, " was not address, but value was Address"));
            return L.toScVal();
          }
          if (L instanceof v.Contract) {
            if (j.switch().value !== v.xdr.ScSpecType.scSpecTypeAddress().value) throw new TypeError("Type ".concat(j, " was not address, but value was Address"));
            return L.address().toScVal();
          }
          if (L instanceof Uint8Array || Buffer.isBuffer(L)) {
            var Q = Uint8Array.from(L);
            switch (ue) {
              case v.xdr.ScSpecType.scSpecTypeBytesN().value: {
                var ne = j.bytesN();
                if (Q.length !== ne.n()) throw new TypeError("expected ".concat(ne.n(), " bytes, but got ").concat(Q.length));
                return v.xdr.ScVal.scvBytes(Q);
              }
              case v.xdr.ScSpecType.scSpecTypeBytes().value:
                return v.xdr.ScVal.scvBytes(Q);
              default:
                throw new TypeError("invalid type (".concat(j, ") specified for Bytes and BytesN"));
            }
          }
          if (Array.isArray(L)) switch (ue) {
            case v.xdr.ScSpecType.scSpecTypeVec().value: {
              var K = j.vec(), ie = K.elementType();
              return v.xdr.ScVal.scvVec(L.map(function(O) {
                return z.nativeToScVal(O, ie);
              }));
            }
            case v.xdr.ScSpecType.scSpecTypeTuple().value: {
              var ce = j.tuple(), ye = ce.valueTypes();
              if (L.length !== ye.length) throw new TypeError("Tuple expects ".concat(ye.length, " values, but ").concat(L.length, " were provided"));
              return v.xdr.ScVal.scvVec(L.map(function(O, V) {
                return z.nativeToScVal(O, ye[V]);
              }));
            }
            case v.xdr.ScSpecType.scSpecTypeMap().value: {
              var oe = j.map(), se = oe.keyType(), re = oe.valueType();
              return v.xdr.ScVal.scvMap(L.map(function(O) {
                var V = z.nativeToScVal(O[0], se), D = z.nativeToScVal(O[1], re);
                return new v.xdr.ScMapEntry({ key: V, val: D });
              }));
            }
            default:
              throw new TypeError("Type ".concat(j, " was not vec, but value was Array"));
          }
          if (L.constructor === Map) {
            if (ue !== v.xdr.ScSpecType.scSpecTypeMap().value) throw new TypeError("Type ".concat(j, " was not map, but value was Map"));
            for (var ge = j.map(), Te = L, pe = [], Oe = Te.entries(), xe = Oe.next(); !xe.done; ) {
              var Ve = f(xe.value, 2), _e = Ve[0], Be = Ve[1], Qe = this.nativeToScVal(_e, ge.keyType()), ee = this.nativeToScVal(Be, ge.valueType());
              pe.push(new v.xdr.ScMapEntry({ key: Qe, val: ee })), xe = Oe.next();
            }
            return v.xdr.ScVal.scvMap(pe);
          }
          if (((J = (B = L.constructor) === null || B === void 0 ? void 0 : B.name) !== null && J !== void 0 ? J : "") !== "Object") {
            var P;
            throw new TypeError("cannot interpret ".concat((P = L.constructor) === null || P === void 0 ? void 0 : P.name, " value as ScVal (").concat(JSON.stringify(L), ")"));
          }
          throw new TypeError("Received object ".concat(L, "  did not match the provided type ").concat(j));
        }
        case "number":
        case "bigint":
          switch (ue) {
            case v.xdr.ScSpecType.scSpecTypeU32().value:
              return v.xdr.ScVal.scvU32(L);
            case v.xdr.ScSpecType.scSpecTypeI32().value:
              return v.xdr.ScVal.scvI32(L);
            case v.xdr.ScSpecType.scSpecTypeU64().value:
            case v.xdr.ScSpecType.scSpecTypeI64().value:
            case v.xdr.ScSpecType.scSpecTypeU128().value:
            case v.xdr.ScSpecType.scSpecTypeI128().value:
            case v.xdr.ScSpecType.scSpecTypeU256().value:
            case v.xdr.ScSpecType.scSpecTypeI256().value: {
              var T = Z.name.substring(10).toLowerCase();
              return new v.XdrLargeInt(T, L).toScVal();
            }
            default:
              throw new TypeError("invalid type (".concat(j, ") specified for integer"));
          }
        case "string":
          return R(L, Z);
        case "boolean": {
          if (ue !== v.xdr.ScSpecType.scSpecTypeBool().value) throw TypeError("Type ".concat(j, " was not bool, but value was bool"));
          return v.xdr.ScVal.scvBool(L);
        }
        case "undefined": {
          if (!j) return v.xdr.ScVal.scvVoid();
          switch (ue) {
            case v.xdr.ScSpecType.scSpecTypeVoid().value:
            case v.xdr.ScSpecType.scSpecTypeOption().value:
              return v.xdr.ScVal.scvVoid();
            default:
              throw new TypeError("Type ".concat(j, " was not void, but value was undefined"));
          }
        }
        case "function":
          return this.nativeToScVal(L(), j);
        default:
          throw new TypeError("failed to convert typeof ".concat(u(L), " (").concat(L, ")"));
      }
    } }, { key: "nativeToUdt", value: function(L, j) {
      var z = this.findEntry(j);
      switch (z.switch()) {
        case v.xdr.ScSpecEntryKind.scSpecEntryUdtEnumV0():
          if (typeof L != "number") throw new TypeError("expected number for enum ".concat(j, ", but got ").concat(u(L)));
          return this.nativeToEnum(L, z.udtEnumV0());
        case v.xdr.ScSpecEntryKind.scSpecEntryUdtStructV0():
          return this.nativeToStruct(L, z.udtStructV0());
        case v.xdr.ScSpecEntryKind.scSpecEntryUdtUnionV0():
          return this.nativeToUnion(L, z.udtUnionV0());
        default:
          throw new Error("failed to parse udt ".concat(j));
      }
    } }, { key: "nativeToUnion", value: function(L, j) {
      var z = this, Z = L.tag, ue = j.cases().find(function(B) {
        var Q = B.value().name().toString();
        return Q === Z;
      });
      if (!ue) throw new TypeError("no such enum entry: ".concat(Z, " in ").concat(j));
      var $ = v.xdr.ScVal.scvSymbol(Z);
      switch (ue.switch()) {
        case v.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseVoidV0():
          return v.xdr.ScVal.scvVec([$]);
        case v.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseTupleV0(): {
          var X = ue.tupleCase().type();
          if (Array.isArray(L.values)) {
            if (L.values.length !== X.length) throw new TypeError("union ".concat(j, " expects ").concat(X.length, " values, but got ").concat(L.values.length));
            var J = L.values.map(function(B, Q) {
              return z.nativeToScVal(B, X[Q]);
            });
            return J.unshift($), v.xdr.ScVal.scvVec(J);
          }
          throw new Error("failed to parse union case ".concat(ue, " with ").concat(L));
        }
        default:
          throw new Error("failed to parse union ".concat(j, " with ").concat(L));
      }
    } }, { key: "nativeToStruct", value: function(L, j) {
      var z = this, Z = j.fields();
      if (Z.some(b)) {
        if (!Z.every(b)) throw new Error("mixed numeric and non-numeric field names are not allowed");
        return v.xdr.ScVal.scvVec(Z.map(function(ue, $) {
          return z.nativeToScVal(L[$], Z[$].type());
        }));
      }
      return v.xdr.ScVal.scvMap(Z.map(function(ue) {
        var $ = ue.name().toString();
        return new v.xdr.ScMapEntry({ key: z.nativeToScVal($, v.xdr.ScSpecTypeDef.scSpecTypeSymbol()), val: z.nativeToScVal(L[$], ue.type()) });
      }));
    } }, { key: "nativeToEnum", value: function(L, j) {
      if (j.cases().some(function(z) {
        return z.value() === L;
      })) return v.xdr.ScVal.scvU32(L);
      throw new TypeError("no such enum entry: ".concat(L, " in ").concat(j));
    } }, { key: "scValStrToNative", value: function(L, j) {
      return this.scValToNative(v.xdr.ScVal.fromXDR(L, "base64"), j);
    } }, { key: "scValToNative", value: function(L, j) {
      var z = this, Z = j.switch(), ue = Z.value;
      if (ue === v.xdr.ScSpecType.scSpecTypeUdt().value) return this.scValUdtToNative(L, j.udt());
      switch (L.switch().value) {
        case v.xdr.ScValType.scvVoid().value:
          return;
        case v.xdr.ScValType.scvU64().value:
        case v.xdr.ScValType.scvI64().value:
        case v.xdr.ScValType.scvU128().value:
        case v.xdr.ScValType.scvI128().value:
        case v.xdr.ScValType.scvU256().value:
        case v.xdr.ScValType.scvI256().value:
          return (0, v.scValToBigInt)(L);
        case v.xdr.ScValType.scvVec().value: {
          if (ue === v.xdr.ScSpecType.scSpecTypeVec().value) {
            var $, X = j.vec();
            return (($ = L.vec()) !== null && $ !== void 0 ? $ : []).map(function(re) {
              return z.scValToNative(re, X.elementType());
            });
          }
          if (ue === v.xdr.ScSpecType.scSpecTypeTuple().value) {
            var J, B = j.tuple(), Q = B.valueTypes();
            return ((J = L.vec()) !== null && J !== void 0 ? J : []).map(function(re, ge) {
              return z.scValToNative(re, Q[ge]);
            });
          }
          throw new TypeError("Type ".concat(j, " was not vec, but ").concat(L, " is"));
        }
        case v.xdr.ScValType.scvAddress().value:
          return v.Address.fromScVal(L).toString();
        case v.xdr.ScValType.scvMap().value: {
          var ne, K = (ne = L.map()) !== null && ne !== void 0 ? ne : [];
          if (ue === v.xdr.ScSpecType.scSpecTypeMap().value) {
            var ie = j.map(), ce = ie.keyType(), ye = ie.valueType(), oe = K.map(function(re) {
              return [z.scValToNative(re.key(), ce), z.scValToNative(re.val(), ye)];
            });
            return oe;
          }
          throw new TypeError("ScSpecType ".concat(Z.name, " was not map, but ").concat(JSON.stringify(L, null, 2), " is"));
        }
        case v.xdr.ScValType.scvBool().value:
        case v.xdr.ScValType.scvU32().value:
        case v.xdr.ScValType.scvI32().value:
        case v.xdr.ScValType.scvBytes().value:
          return L.value();
        case v.xdr.ScValType.scvString().value:
        case v.xdr.ScValType.scvSymbol().value: {
          var se;
          if (ue !== v.xdr.ScSpecType.scSpecTypeString().value && ue !== v.xdr.ScSpecType.scSpecTypeSymbol().value) throw new Error("ScSpecType ".concat(Z.name, " was not string or symbol, but ").concat(JSON.stringify(L, null, 2), " is"));
          return (se = L.value()) === null || se === void 0 ? void 0 : se.toString();
        }
        case v.xdr.ScValType.scvTimepoint().value:
        case v.xdr.ScValType.scvDuration().value:
          return (0, v.scValToBigInt)(v.xdr.ScVal.scvU64(L.u64()));
        default:
          throw new TypeError("failed to convert ".concat(JSON.stringify(L, null, 2), " to native type from type ").concat(Z.name));
      }
    } }, { key: "scValUdtToNative", value: function(L, j) {
      var z = this.findEntry(j.name().toString());
      switch (z.switch()) {
        case v.xdr.ScSpecEntryKind.scSpecEntryUdtEnumV0():
          return this.enumToNative(L);
        case v.xdr.ScSpecEntryKind.scSpecEntryUdtStructV0():
          return this.structToNative(L, z.udtStructV0());
        case v.xdr.ScSpecEntryKind.scSpecEntryUdtUnionV0():
          return this.unionToNative(L, z.udtUnionV0());
        default:
          throw new Error("failed to parse udt ".concat(j.name().toString(), ": ").concat(z));
      }
    } }, { key: "unionToNative", value: function(L, j) {
      var z = this, Z = L.vec();
      if (!Z) throw new Error("".concat(JSON.stringify(L, null, 2), " is not a vec"));
      if (Z.length === 0 && j.cases.length !== 0) throw new Error("".concat(L, " has length 0, but the there are at least one case in the union"));
      var ue = Z[0].sym().toString();
      if (Z[0].switch().value !== v.xdr.ScValType.scvSymbol().value) throw new Error("{vec[0]} is not a symbol");
      var $ = j.cases().find(E(ue));
      if (!$) throw new Error("failed to find entry ".concat(ue, " in union {udt.name().toString()}"));
      var X = { tag: ue };
      if ($.switch().value === v.xdr.ScSpecUdtUnionCaseV0Kind.scSpecUdtUnionCaseTupleV0().value) {
        var J = $.tupleCase(), B = J.type(), Q = B.map(function(ne, K) {
          return z.scValToNative(Z[K + 1], ne);
        });
        X.values = Q;
      }
      return X;
    } }, { key: "structToNative", value: function(L, j) {
      var z = this, Z, ue = {}, $ = j.fields();
      if ($.some(b)) {
        var X, J = (X = L.vec()) === null || X === void 0 ? void 0 : X.map(function(B, Q) {
          return z.scValToNative(B, $[Q].type());
        });
        return J;
      }
      return (Z = L.map()) === null || Z === void 0 || Z.forEach(function(B, Q) {
        var ne = $[Q];
        ue[ne.name().toString()] = z.scValToNative(B.val(), ne.type());
      }), ue;
    } }, { key: "enumToNative", value: function(L) {
      if (L.switch().value !== v.xdr.ScValType.scvU32().value) throw new Error("Enum must have a u32 value");
      var j = L.u32();
      return j;
    } }, { key: "errorCases", value: function() {
      return this.entries.filter(function(L) {
        return L.switch().value === v.xdr.ScSpecEntryKind.scSpecEntryUdtErrorEnumV0().value;
      }).flatMap(function(L) {
        return L.value().cases();
      });
    } }, { key: "jsonSchema", value: function(L) {
      var j = {};
      this.entries.forEach(function(Z) {
        switch (Z.switch().value) {
          case v.xdr.ScSpecEntryKind.scSpecEntryUdtEnumV0().value: {
            var ue = Z.udtEnumV0();
            j[ue.name().toString()] = d(ue);
            break;
          }
          case v.xdr.ScSpecEntryKind.scSpecEntryUdtStructV0().value: {
            var $ = Z.udtStructV0();
            j[$.name().toString()] = q($);
            break;
          }
          case v.xdr.ScSpecEntryKind.scSpecEntryUdtUnionV0().value: {
            var X = Z.udtUnionV0();
            j[X.name().toString()] = H(X);
            break;
          }
          case v.xdr.ScSpecEntryKind.scSpecEntryFunctionV0().value: {
            var J = Z.functionV0(), B = J.name().toString(), Q = N(J), ne = Q.input;
            j[B] = ne;
            break;
          }
          case v.xdr.ScSpecEntryKind.scSpecEntryUdtErrorEnumV0().value:
        }
      });
      var z = { $schema: "http://json-schema.org/draft-07/schema#", definitions: i(i({}, k), j) };
      return L && (z.$ref = "#/definitions/".concat(L)), z;
    } }]);
  }(), Os;
}
var Bd;
function wE() {
  if (Bd) return ks;
  Bd = 1;
  function v(z) {
    "@babel/helpers - typeof";
    return v = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(Z) {
      return typeof Z;
    } : function(Z) {
      return Z && typeof Symbol == "function" && Z.constructor === Symbol && Z !== Symbol.prototype ? "symbol" : typeof Z;
    }, v(z);
  }
  Object.defineProperty(ks, "__esModule", { value: true }), ks.Client = void 0;
  var e = To(), n = Km(), i = Ec(), u = Wm(), y = mf(), t = ["method"], o = ["wasmHash", "salt", "format", "fee", "timeoutInSeconds", "simulate"];
  function s() {
    s = function() {
      return Z;
    };
    var z, Z = {}, ue = Object.prototype, $ = ue.hasOwnProperty, X = Object.defineProperty || function(p, A, U) {
      p[A] = U.value;
    }, J = typeof Symbol == "function" ? Symbol : {}, B = J.iterator || "@@iterator", Q = J.asyncIterator || "@@asyncIterator", ne = J.toStringTag || "@@toStringTag";
    function K(p, A, U) {
      return Object.defineProperty(p, A, { value: U, enumerable: true, configurable: true, writable: true }), p[A];
    }
    try {
      K({}, "");
    } catch {
      K = function(U, Y, ae) {
        return U[Y] = ae;
      };
    }
    function ie(p, A, U, Y) {
      var ae = A && A.prototype instanceof Te ? A : Te, W = Object.create(ae.prototype), de = new D(Y || []);
      return X(W, "_invoke", { value: P(p, U, de) }), W;
    }
    function ce(p, A, U) {
      try {
        return { type: "normal", arg: p.call(A, U) };
      } catch (Y) {
        return { type: "throw", arg: Y };
      }
    }
    Z.wrap = ie;
    var ye = "suspendedStart", oe = "suspendedYield", se = "executing", re = "completed", ge = {};
    function Te() {
    }
    function pe() {
    }
    function Oe() {
    }
    var xe = {};
    K(xe, B, function() {
      return this;
    });
    var Ve = Object.getPrototypeOf, _e = Ve && Ve(Ve(C([])));
    _e && _e !== ue && $.call(_e, B) && (xe = _e);
    var Be = Oe.prototype = Te.prototype = Object.create(xe);
    function Qe(p) {
      ["next", "throw", "return"].forEach(function(A) {
        K(p, A, function(U) {
          return this._invoke(A, U);
        });
      });
    }
    function ee(p, A) {
      function U(ae, W, de, tt) {
        var Ne = ce(p[ae], p, W);
        if (Ne.type !== "throw") {
          var ut = Ne.arg, Ze = ut.value;
          return Ze && v(Ze) == "object" && $.call(Ze, "__await") ? A.resolve(Ze.__await).then(function(Et) {
            U("next", Et, de, tt);
          }, function(Et) {
            U("throw", Et, de, tt);
          }) : A.resolve(Ze).then(function(Et) {
            ut.value = Et, de(ut);
          }, function(Et) {
            return U("throw", Et, de, tt);
          });
        }
        tt(Ne.arg);
      }
      var Y;
      X(this, "_invoke", { value: function(W, de) {
        function tt() {
          return new A(function(Ne, ut) {
            U(W, de, Ne, ut);
          });
        }
        return Y = Y ? Y.then(tt, tt) : tt();
      } });
    }
    function P(p, A, U) {
      var Y = ye;
      return function(ae, W) {
        if (Y === se) throw Error("Generator is already running");
        if (Y === re) {
          if (ae === "throw") throw W;
          return { value: z, done: true };
        }
        for (U.method = ae, U.arg = W; ; ) {
          var de = U.delegate;
          if (de) {
            var tt = T(de, U);
            if (tt) {
              if (tt === ge) continue;
              return tt;
            }
          }
          if (U.method === "next") U.sent = U._sent = U.arg;
          else if (U.method === "throw") {
            if (Y === ye) throw Y = re, U.arg;
            U.dispatchException(U.arg);
          } else U.method === "return" && U.abrupt("return", U.arg);
          Y = se;
          var Ne = ce(p, A, U);
          if (Ne.type === "normal") {
            if (Y = U.done ? re : oe, Ne.arg === ge) continue;
            return { value: Ne.arg, done: U.done };
          }
          Ne.type === "throw" && (Y = re, U.method = "throw", U.arg = Ne.arg);
        }
      };
    }
    function T(p, A) {
      var U = A.method, Y = p.iterator[U];
      if (Y === z) return A.delegate = null, U === "throw" && p.iterator.return && (A.method = "return", A.arg = z, T(p, A), A.method === "throw") || U !== "return" && (A.method = "throw", A.arg = new TypeError("The iterator does not provide a '" + U + "' method")), ge;
      var ae = ce(Y, p.iterator, A.arg);
      if (ae.type === "throw") return A.method = "throw", A.arg = ae.arg, A.delegate = null, ge;
      var W = ae.arg;
      return W ? W.done ? (A[p.resultName] = W.value, A.next = p.nextLoc, A.method !== "return" && (A.method = "next", A.arg = z), A.delegate = null, ge) : W : (A.method = "throw", A.arg = new TypeError("iterator result is not an object"), A.delegate = null, ge);
    }
    function O(p) {
      var A = { tryLoc: p[0] };
      1 in p && (A.catchLoc = p[1]), 2 in p && (A.finallyLoc = p[2], A.afterLoc = p[3]), this.tryEntries.push(A);
    }
    function V(p) {
      var A = p.completion || {};
      A.type = "normal", delete A.arg, p.completion = A;
    }
    function D(p) {
      this.tryEntries = [{ tryLoc: "root" }], p.forEach(O, this), this.reset(true);
    }
    function C(p) {
      if (p || p === "") {
        var A = p[B];
        if (A) return A.call(p);
        if (typeof p.next == "function") return p;
        if (!isNaN(p.length)) {
          var U = -1, Y = function ae() {
            for (; ++U < p.length; ) if ($.call(p, U)) return ae.value = p[U], ae.done = false, ae;
            return ae.value = z, ae.done = true, ae;
          };
          return Y.next = Y;
        }
      }
      throw new TypeError(v(p) + " is not iterable");
    }
    return pe.prototype = Oe, X(Be, "constructor", { value: Oe, configurable: true }), X(Oe, "constructor", { value: pe, configurable: true }), pe.displayName = K(Oe, ne, "GeneratorFunction"), Z.isGeneratorFunction = function(p) {
      var A = typeof p == "function" && p.constructor;
      return !!A && (A === pe || (A.displayName || A.name) === "GeneratorFunction");
    }, Z.mark = function(p) {
      return Object.setPrototypeOf ? Object.setPrototypeOf(p, Oe) : (p.__proto__ = Oe, K(p, ne, "GeneratorFunction")), p.prototype = Object.create(Be), p;
    }, Z.awrap = function(p) {
      return { __await: p };
    }, Qe(ee.prototype), K(ee.prototype, Q, function() {
      return this;
    }), Z.AsyncIterator = ee, Z.async = function(p, A, U, Y, ae) {
      ae === void 0 && (ae = Promise);
      var W = new ee(ie(p, A, U, Y), ae);
      return Z.isGeneratorFunction(A) ? W : W.next().then(function(de) {
        return de.done ? de.value : W.next();
      });
    }, Qe(Be), K(Be, ne, "Generator"), K(Be, B, function() {
      return this;
    }), K(Be, "toString", function() {
      return "[object Generator]";
    }), Z.keys = function(p) {
      var A = Object(p), U = [];
      for (var Y in A) U.push(Y);
      return U.reverse(), function ae() {
        for (; U.length; ) {
          var W = U.pop();
          if (W in A) return ae.value = W, ae.done = false, ae;
        }
        return ae.done = true, ae;
      };
    }, Z.values = C, D.prototype = { constructor: D, reset: function(A) {
      if (this.prev = 0, this.next = 0, this.sent = this._sent = z, this.done = false, this.delegate = null, this.method = "next", this.arg = z, this.tryEntries.forEach(V), !A) for (var U in this) U.charAt(0) === "t" && $.call(this, U) && !isNaN(+U.slice(1)) && (this[U] = z);
    }, stop: function() {
      this.done = true;
      var A = this.tryEntries[0].completion;
      if (A.type === "throw") throw A.arg;
      return this.rval;
    }, dispatchException: function(A) {
      if (this.done) throw A;
      var U = this;
      function Y(ut, Ze) {
        return de.type = "throw", de.arg = A, U.next = ut, Ze && (U.method = "next", U.arg = z), !!Ze;
      }
      for (var ae = this.tryEntries.length - 1; ae >= 0; --ae) {
        var W = this.tryEntries[ae], de = W.completion;
        if (W.tryLoc === "root") return Y("end");
        if (W.tryLoc <= this.prev) {
          var tt = $.call(W, "catchLoc"), Ne = $.call(W, "finallyLoc");
          if (tt && Ne) {
            if (this.prev < W.catchLoc) return Y(W.catchLoc, true);
            if (this.prev < W.finallyLoc) return Y(W.finallyLoc);
          } else if (tt) {
            if (this.prev < W.catchLoc) return Y(W.catchLoc, true);
          } else {
            if (!Ne) throw Error("try statement without catch or finally");
            if (this.prev < W.finallyLoc) return Y(W.finallyLoc);
          }
        }
      }
    }, abrupt: function(A, U) {
      for (var Y = this.tryEntries.length - 1; Y >= 0; --Y) {
        var ae = this.tryEntries[Y];
        if (ae.tryLoc <= this.prev && $.call(ae, "finallyLoc") && this.prev < ae.finallyLoc) {
          var W = ae;
          break;
        }
      }
      W && (A === "break" || A === "continue") && W.tryLoc <= U && U <= W.finallyLoc && (W = null);
      var de = W ? W.completion : {};
      return de.type = A, de.arg = U, W ? (this.method = "next", this.next = W.finallyLoc, ge) : this.complete(de);
    }, complete: function(A, U) {
      if (A.type === "throw") throw A.arg;
      return A.type === "break" || A.type === "continue" ? this.next = A.arg : A.type === "return" ? (this.rval = this.arg = A.arg, this.method = "return", this.next = "end") : A.type === "normal" && U && (this.next = U), ge;
    }, finish: function(A) {
      for (var U = this.tryEntries.length - 1; U >= 0; --U) {
        var Y = this.tryEntries[U];
        if (Y.finallyLoc === A) return this.complete(Y.completion, Y.afterLoc), V(Y), ge;
      }
    }, catch: function(A) {
      for (var U = this.tryEntries.length - 1; U >= 0; --U) {
        var Y = this.tryEntries[U];
        if (Y.tryLoc === A) {
          var ae = Y.completion;
          if (ae.type === "throw") {
            var W = ae.arg;
            V(Y);
          }
          return W;
        }
      }
      throw Error("illegal catch attempt");
    }, delegateYield: function(A, U, Y) {
      return this.delegate = { iterator: C(A), resultName: U, nextLoc: Y }, this.method === "next" && (this.arg = z), ge;
    } }, Z;
  }
  function c(z, Z) {
    var ue = Object.keys(z);
    if (Object.getOwnPropertySymbols) {
      var $ = Object.getOwnPropertySymbols(z);
      Z && ($ = $.filter(function(X) {
        return Object.getOwnPropertyDescriptor(z, X).enumerable;
      })), ue.push.apply(ue, $);
    }
    return ue;
  }
  function h(z) {
    for (var Z = 1; Z < arguments.length; Z++) {
      var ue = arguments[Z] != null ? arguments[Z] : {};
      Z % 2 ? c(Object(ue), true).forEach(function($) {
        l(z, $, ue[$]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(z, Object.getOwnPropertyDescriptors(ue)) : c(Object(ue)).forEach(function($) {
        Object.defineProperty(z, $, Object.getOwnPropertyDescriptor(ue, $));
      });
    }
    return z;
  }
  function f(z, Z) {
    if (z == null) return {};
    var ue, $, X = r(z, Z);
    if (Object.getOwnPropertySymbols) {
      var J = Object.getOwnPropertySymbols(z);
      for ($ = 0; $ < J.length; $++) ue = J[$], Z.indexOf(ue) === -1 && {}.propertyIsEnumerable.call(z, ue) && (X[ue] = z[ue]);
    }
    return X;
  }
  function r(z, Z) {
    if (z == null) return {};
    var ue = {};
    for (var $ in z) if ({}.hasOwnProperty.call(z, $)) {
      if (Z.indexOf($) !== -1) continue;
      ue[$] = z[$];
    }
    return ue;
  }
  function m(z, Z) {
    if (!(z instanceof Z)) throw new TypeError("Cannot call a class as a function");
  }
  function g(z, Z) {
    for (var ue = 0; ue < Z.length; ue++) {
      var $ = Z[ue];
      $.enumerable = $.enumerable || false, $.configurable = true, "value" in $ && ($.writable = true), Object.defineProperty(z, d($.key), $);
    }
  }
  function a(z, Z, ue) {
    return ue && g(z, ue), Object.defineProperty(z, "prototype", { writable: false }), z;
  }
  function l(z, Z, ue) {
    return (Z = d(Z)) in z ? Object.defineProperty(z, Z, { value: ue, enumerable: true, configurable: true, writable: true }) : z[Z] = ue, z;
  }
  function d(z) {
    var Z = b(z, "string");
    return v(Z) == "symbol" ? Z : Z + "";
  }
  function b(z, Z) {
    if (v(z) != "object" || !z) return z;
    var ue = z[Symbol.toPrimitive];
    if (ue !== void 0) {
      var $ = ue.call(z, Z);
      if (v($) != "object") return $;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (Z === "string" ? String : Number)(z);
  }
  function S(z) {
    return w(z) || k(z) || R(z) || E();
  }
  function E() {
    throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
  }
  function R(z, Z) {
    if (z) {
      if (typeof z == "string") return F(z, Z);
      var ue = {}.toString.call(z).slice(8, -1);
      return ue === "Object" && z.constructor && (ue = z.constructor.name), ue === "Map" || ue === "Set" ? Array.from(z) : ue === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(ue) ? F(z, Z) : void 0;
    }
  }
  function k(z) {
    if (typeof Symbol < "u" && z[Symbol.iterator] != null || z["@@iterator"] != null) return Array.from(z);
  }
  function w(z) {
    if (Array.isArray(z)) return F(z);
  }
  function F(z, Z) {
    (Z == null || Z > z.length) && (Z = z.length);
    for (var ue = 0, $ = Array(Z); ue < Z; ue++) $[ue] = z[ue];
    return $;
  }
  function I(z, Z, ue, $, X, J, B) {
    try {
      var Q = z[J](B), ne = Q.value;
    } catch (K) {
      return void ue(K);
    }
    Q.done ? Z(ne) : Promise.resolve(ne).then($, X);
  }
  function q(z) {
    return function() {
      var Z = this, ue = arguments;
      return new Promise(function($, X) {
        var J = z.apply(Z, ue);
        function B(ne) {
          I(J, $, X, B, Q, "next", ne);
        }
        function Q(ne) {
          I(J, $, X, B, Q, "throw", ne);
        }
        B(void 0);
      });
    };
  }
  var N = "__constructor";
  function H(z) {
    return _.apply(this, arguments);
  }
  function _() {
    return _ = q(s().mark(function z(Z) {
      var ue, $, X, J, B, Q;
      return s().wrap(function(K) {
        for (; ; ) switch (K.prev = K.next) {
          case 0:
            return K.prev = 0, K.next = 3, WebAssembly.compile(Z);
          case 3:
            $ = K.sent, ue = WebAssembly.Module.customSections($, "contractspecv0"), K.next = 11;
            break;
          case 7:
            K.prev = 7, K.t0 = K.catch(0), X = x(Z), ue = X.get("contractspecv0");
          case 11:
            if (!(!ue || ue.length === 0)) {
              K.next = 13;
              break;
            }
            throw new Error("Could not obtain contract spec from wasm");
          case 13:
            return J = Buffer.from(ue[0]), B = (0, y.processSpecEntryStream)(J), Q = new n.Spec(B), K.abrupt("return", Q);
          case 17:
          case "end":
            return K.stop();
        }
      }, z, null, [[0, 7]]);
    })), _.apply(this, arguments);
  }
  function x(z) {
    var Z = /* @__PURE__ */ new Map(), ue = z.buffer.slice(z.byteOffset, z.byteOffset + z.byteLength), $ = 0, X = function(se) {
      if ($ + se > z.byteLength) throw new Error("Buffer overflow");
      var re = new Uint8Array(ue, $, se);
      return $ += se, re;
    };
    if (S(X(4)).join() !== "0,97,115,109") throw new Error("Invalid WASM magic");
    if (S(X(4)).join() !== "1,0,0,0") throw new Error("Invalid WASM version");
    for (; $ < z.byteLength; ) {
      var J = X(1)[0], B = ye(), Q = $;
      if (J === 0) {
        var ne = ye();
        if (ne === 0 || $ + ne > Q + B) continue;
        var K = X(ne), ie = X(B - ($ - Q));
        try {
          var ce = new TextDecoder("utf-8", { fatal: true }).decode(K);
          ie.length > 0 && Z.set(ce, (Z.get(ce) || []).concat(ie));
        } catch {
        }
      } else $ += B;
    }
    function ye() {
      for (var oe = 0, se = 0; ; ) {
        var re = X(1)[0];
        if (oe |= (re & 127) << se, (re & 128) === 0) break;
        if ((se += 7) >= 32) throw new Error("Invalid WASM value");
      }
      return oe >>> 0;
    }
    return Z;
  }
  function L(z, Z) {
    return j.apply(this, arguments);
  }
  function j() {
    return j = q(s().mark(function z(Z, ue) {
      var $, X, J, B, Q, ne, K = arguments;
      return s().wrap(function(ce) {
        for (; ; ) switch (ce.prev = ce.next) {
          case 0:
            if ($ = K.length > 2 && K[2] !== void 0 ? K[2] : "hex", !(!ue || !ue.rpcUrl)) {
              ce.next = 3;
              break;
            }
            throw new TypeError("options must contain rpcUrl");
          case 3:
            return X = ue.rpcUrl, J = ue.allowHttp, B = { allowHttp: J }, Q = new i.Server(X, B), ce.next = 8, Q.getContractWasmByHash(Z, $);
          case 8:
            return ne = ce.sent, ce.abrupt("return", H(ne));
          case 10:
          case "end":
            return ce.stop();
        }
      }, z);
    })), j.apply(this, arguments);
  }
  return ks.Client = function() {
    function z(Z, ue) {
      var $ = this;
      m(this, z), l(this, "txFromJSON", function(X) {
        var J = JSON.parse(X), B = J.method, Q = f(J, t);
        return u.AssembledTransaction.fromJSON(h(h({}, $.options), {}, { method: B, parseResultXdr: function(K) {
          return $.spec.funcResToNative(B, K);
        } }), Q);
      }), l(this, "txFromXDR", function(X) {
        return u.AssembledTransaction.fromXDR($.options, X, $.spec);
      }), this.spec = Z, this.options = ue, this.spec.funcs().forEach(function(X) {
        var J = X.name().toString();
        if (J !== N) {
          var B = function(ne, K) {
            return u.AssembledTransaction.build(h(h(h({ method: J, args: ne && Z.funcArgsToScVals(J, ne) }, ue), K), {}, { errorTypes: Z.errorCases().reduce(function(ie, ce) {
              return h(h({}, ie), {}, l({}, ce.value(), { message: ce.doc().toString() }));
            }, {}), parseResultXdr: function(ce) {
              return Z.funcResToNative(J, ce);
            } }));
          };
          $[J] = Z.getFunc(J).inputs().length === 0 ? function(Q) {
            return B(void 0, Q);
          } : B;
        }
      });
    }
    return a(z, null, [{ key: "deploy", value: function() {
      var Z = q(s().mark(function $(X, J) {
        var B, Q, ne, K, ie, ce, ye, oe, se;
        return s().wrap(function(ge) {
          for (; ; ) switch (ge.prev = ge.next) {
            case 0:
              return B = J.wasmHash, Q = J.salt, ne = J.format, K = J.fee, ie = J.timeoutInSeconds, ce = J.simulate, ye = f(J, o), ge.next = 3, L(B, ye, ne);
            case 3:
              return oe = ge.sent, se = e.Operation.createCustomContract({ address: new e.Address(J.address || J.publicKey), wasmHash: typeof B == "string" ? Buffer.from(B, ne ?? "hex") : B, salt: Q, constructorArgs: X ? oe.funcArgsToScVals(N, X) : [] }), ge.abrupt("return", u.AssembledTransaction.buildWithOp(se, h(h({ fee: K, timeoutInSeconds: ie, simulate: ce }, ye), {}, { contractId: "ignored", method: N, parseResultXdr: function(pe) {
                return new z(oe, h(h({}, ye), {}, { contractId: e.Address.fromScVal(pe).toString() }));
              } })));
            case 6:
            case "end":
              return ge.stop();
          }
        }, $);
      }));
      function ue($, X) {
        return Z.apply(this, arguments);
      }
      return ue;
    }() }, { key: "fromWasmHash", value: function() {
      var Z = q(s().mark(function $(X, J) {
        var B, Q, ne, K, ie, ce, ye = arguments;
        return s().wrap(function(se) {
          for (; ; ) switch (se.prev = se.next) {
            case 0:
              if (B = ye.length > 2 && ye[2] !== void 0 ? ye[2] : "hex", !(!J || !J.rpcUrl)) {
                se.next = 3;
                break;
              }
              throw new TypeError("options must contain rpcUrl");
            case 3:
              return Q = J.rpcUrl, ne = J.allowHttp, K = { allowHttp: ne }, ie = new i.Server(Q, K), se.next = 8, ie.getContractWasmByHash(X, B);
            case 8:
              return ce = se.sent, se.abrupt("return", z.fromWasm(ce, J));
            case 10:
            case "end":
              return se.stop();
          }
        }, $);
      }));
      function ue($, X) {
        return Z.apply(this, arguments);
      }
      return ue;
    }() }, { key: "fromWasm", value: function() {
      var Z = q(s().mark(function $(X, J) {
        var B;
        return s().wrap(function(ne) {
          for (; ; ) switch (ne.prev = ne.next) {
            case 0:
              return ne.next = 2, H(X);
            case 2:
              return B = ne.sent, ne.abrupt("return", new z(B, J));
            case 4:
            case "end":
              return ne.stop();
          }
        }, $);
      }));
      function ue($, X) {
        return Z.apply(this, arguments);
      }
      return ue;
    }() }, { key: "from", value: function() {
      var Z = q(s().mark(function $(X) {
        var J, B, Q, ne, K, ie;
        return s().wrap(function(ye) {
          for (; ; ) switch (ye.prev = ye.next) {
            case 0:
              if (!(!X || !X.rpcUrl || !X.contractId)) {
                ye.next = 2;
                break;
              }
              throw new TypeError("options must contain rpcUrl and contractId");
            case 2:
              return J = X.rpcUrl, B = X.contractId, Q = X.allowHttp, ne = { allowHttp: Q }, K = new i.Server(J, ne), ye.next = 7, K.getContractWasmByContractId(B);
            case 7:
              return ie = ye.sent, ye.abrupt("return", z.fromWasm(ie, X));
            case 9:
            case "end":
              return ye.stop();
          }
        }, $);
      }));
      function ue($) {
        return Z.apply(this, arguments);
      }
      return ue;
    }() }]);
  }(), ks;
}
var Nd;
function SE() {
  return Nd || (Nd = 1, function(v) {
    Object.defineProperty(v, "__esModule", { value: true });
    var e = Wm();
    Object.keys(e).forEach(function(s) {
      s === "default" || s === "__esModule" || s in v && v[s] === e[s] || Object.defineProperty(v, s, { enumerable: true, get: function() {
        return e[s];
      } });
    });
    var n = bE();
    Object.keys(n).forEach(function(s) {
      s === "default" || s === "__esModule" || s in v && v[s] === n[s] || Object.defineProperty(v, s, { enumerable: true, get: function() {
        return n[s];
      } });
    });
    var i = wE();
    Object.keys(i).forEach(function(s) {
      s === "default" || s === "__esModule" || s in v && v[s] === i[s] || Object.defineProperty(v, s, { enumerable: true, get: function() {
        return i[s];
      } });
    });
    var u = df();
    Object.keys(u).forEach(function(s) {
      s === "default" || s === "__esModule" || s in v && v[s] === u[s] || Object.defineProperty(v, s, { enumerable: true, get: function() {
        return u[s];
      } });
    });
    var y = Gm();
    Object.keys(y).forEach(function(s) {
      s === "default" || s === "__esModule" || s in v && v[s] === y[s] || Object.defineProperty(v, s, { enumerable: true, get: function() {
        return y[s];
      } });
    });
    var t = Km();
    Object.keys(t).forEach(function(s) {
      s === "default" || s === "__esModule" || s in v && v[s] === t[s] || Object.defineProperty(v, s, { enumerable: true, get: function() {
        return t[s];
      } });
    });
    var o = Tc();
    Object.keys(o).forEach(function(s) {
      s === "default" || s === "__esModule" || s in v && v[s] === o[s] || Object.defineProperty(v, s, { enumerable: true, get: function() {
        return o[s];
      } });
    });
  }(Ll)), Ll;
}
var fc = SE();
typeof window < "u" && (window.Buffer = window.Buffer || Xl.Buffer);
class _E extends fc.Client {
  constructor(e) {
    super(new fc.Spec(["AAAAAgAAAAAAAAAAAAAACFVzZXJEYXRhAAAABwAAAAAAAAAAAAAABVRva2VuAAAAAAAAAQAAAAAAAAAHQmFsYW5jZQAAAAABAAAAEwAAAAEAAAAAAAAABVNjb3JlAAAAAAAAAQAAABMAAAABAAAAAAAAAAlUdXJuU2NvcmUAAAAAAAABAAAAEwAAAAEAAAAAAAAABERpY2UAAAABAAAAEwAAAAEAAAAAAAAABU1hdGNoAAAAAAAAAQAAABMAAAABAAAAAAAAAARUdXJuAAAAAQAAABM=", "AAAAAgAAAAAAAAAAAAAACUFkbWluRGF0YQAAAAAAAAIAAAAAAAAAAAAAAAVUb2tlbgAAAAAAAAAAAAAAAAAABUFkbWluAAAA", "AAAABAAAAAAAAAAAAAAABUVycm9yAAAAAAAABwAAAAAAAAANSW52YWxpZEFtb3VudAAAAAAAAAAAAAAAAAAADk5vdEluaXRpYWxpemVkAAAAAAABAAAAAAAAAA5BbHJlYWR5UGxheWluZwAAAAAAAgAAAAAAAAAHVG9vUG9vcgAAAAADAAAAAAAAAAtOb3RZb3VyVHVybgAAAAAEAAAAAAAAAApXcm9uZ01hdGNoAAAAAAAFAAAAAAAAAApCYWREaWVIb2xkAAAAAAAG", "AAAAAAAAAK0qIEluaXRpYWxpemVzIHRoZSBnYW1lLgogICAgICoKICAgICAqICMgQXJndW1lbnRzCiAgICAgKgogICAgICogLSBgYWRtaW5gIC0gVGhlIG93bmVyIG9mIHRoaXMgaW5zdGFuY2Ugb2YgdGhlIGdhbWUuCiAgICAgKiAtIGB0b2tlbmAgLSBUaGUgdG9rZW4gdXNlZCBmb3Igd2FnZXJzIGluIHRoZSBnYW1lLgAAAAAAAA1fX2NvbnN0cnVjdG9yAAAAAAAAAgAAAAAAAAAFYWRtaW4AAAAAAAATAAAAAAAAAAV0b2tlbgAAAAAAABMAAAAA", "AAAAAAAAAChSZXR1cm5zIHRoZSBjdXJyZW50IHZlcnNpb24gb2YgdGhlIGdhbWUuAAAAB3ZlcnNpb24AAAAAAAAAAAEAAAAE", "AAAAAAAAADJSZXR1cm5zIHRoZSBjdXJyZW50IHdhZ2VyIC8gY29zdCB0byBwbGF5IHRoZSBnYW1lLgAAAAAABXdhZ2VyAAAAAAAAAAAAAAEAAAAL", "AAAAAAAAADxBbGxvd3MgdGhlIGFkbWluIHRvIHVwZ3JhZGUgdGhlIGNvbnRyYWN0IHRvIGEgbmV3IFdhc20gYmxvYi4AAAAHdXBncmFkZQAAAAABAAAAAAAAAA1uZXdfd2FzbV9oYXNoAAAAAAAD7gAAACAAAAAA", "AAAAAAAAAQQqIE9mZmVycyBhIHBzZXVkby1zaHV0ZG93biBtZWNoYW5pc20gdGhhdCBkZS1pbml0aWFsaXplcyBldmVyeXRoaW5nLgogICAgICoKICAgICAqIFdlIHNheSAicHNldWRvIiBiZWNhdXNlIHRoZSBjb250cmFjdCBjb250aW51ZXMgdG8gZXhpc3QsIGJ1dCBub25lIG9mIHRoZQogICAgICogbWV0aG9kcyB3aWxsIHdvcmsgYmVzaWRlcyBgd2l0aGRyYXdgLCBhbGxvd2luZyBwbGF5ZXJzIHRvIHB1bGwgb3V0CiAgICAgKiB0aGVpciBjdXJyZW50IGhvbGRpbmdzLgAAAAhzaHV0ZG93bgAAAAAAAAABAAAACw==", "AAAAAAAAAERSZXR1cm5zIHRoZSBjdXJyZW50IGJhbGFuY2UgYSBwbGF5ZXIgaG9sZHMgaW4gdGhlIGdhbWUgZm9yIHdhZ2VyaW5nLgAAAAdiYWxhbmNlAAAAAAEAAAAAAAAABnBsYXllcgAAAAAAEwAAAAEAAAAL", "AAAAAAAAAT8qIERlcG9zaXRzIHRoZSB0b2tlbiBpbnRvIHRoZSBjb250cmFjdCBmb3Igd2FnZXJpbmcuCiAgICAgKgogICAgICogIyBBcmd1bWVudHMKICAgICAqCiAgICAgKiBgdG9gIC0gVGhlIGFkZHJlc3MgZnJvbSB3aGljaCB0byB0YWtlIGBhbW91bnRgIGFuZCB0cmFuc2ZlciB0byB0aGUgY29udHJhY3QuCiAgICAgKiBgYW1vdW50YCAtIFRoZSBxdWFudGl0eSBvZiB0aGUgdG9rZW4gdG8gdHJhbnNmZXIuCiAgICAgKgogICAgICogIyBSZXR1cm5zCiAgICAgKgogICAgICogVGhlIGN1cnJlbnQgYmFsYW5jZSBvZiB0aGUgYWNjb3VudCBhZnRlciB0aGlzIGRlcG9zaXQuAAAAAAdkZXBvc2l0AAAAAAIAAAAAAAAAAnRvAAAAAAATAAAAAAAAAAZhbW91bnQAAAAAAAsAAAABAAAACw==", "AAAAAAAAAM0qIFdpdGhkcmF3cyBmdW5kcyBmb3IgYW4gYWNjb3VudC4KICAgICAqCiAgICAgKiAjIEFyZ3VtZW50cwogICAgICoKICAgICAqIC0gYGZyb21gIC0gVGhlIGFjY291bnQgZm9yIHdoaWNoIHRvIHBlcmZvcm0gYSB3aXRoZHJhd2FsCiAgICAgKgogICAgICogIyBSZXR1cm5zCiAgICAgKgogICAgICogVGhlIGFtb3VudCB3aXRoZHJhd24sIGZvciByZWZlcmVuY2UuAAAAAAAACHdpdGhkcmF3AAAAAQAAAAAAAAAEZnJvbQAAABMAAAABAAAACw==", "AAAAAAAAAERSZXR1cm5zIHRoZSBjdXJyZW50IHNjb3JlIGZvciBhIHBsYXllciwgYXNzdW1pbmcgdGhleSdyZSBpbiBhIG1hdGNoLgAAAAVzY29yZQAAAAAAAAEAAAAAAAAABnBsYXllcgAAAAAAEwAAAAEAAAAE", "AAAAAAAABAAqIEJlZ2lucyBhIG1hdGNoIGJldHdlZW4gdHdvIHBsYXllcnMuCiAgICAgKgogICAgICogSWYgYm90aCBwbGF5ZXJzIGF1dGhvcml6ZSBiZWdpbm5pbmcgYSBtYXRjaCwgdGhpcyB3aWxsIHNldCB0aGUgZ2FtZSB1cAogICAgICogYnkgaG9sZGluZyB0aGUgd2FnZXIgYW1vdW50IGluIHRoZSBjb250cmFjdCBhcyBhbiBlc2Nyb3cgbWVjaGFuaXNtLiBJdAogICAgICogdGhlbiByYW5kb21seSBkZWNpZGVzIG9uIHdobyBzaG91bGQgZ28gZmlyc3QsIHJldHVybmluZyB0aGF0IGFkZHJlc3MuCiAgICAgKgogICAgICogSXQgd2lsbCBhbHNvIGVtaXQgYW4gZXZlbnQgY29ycmVzcG9uZGluZyB0byB0aGUgaW5pdGlhbGl6YXRpb24gb2YgdGhlCiAgICAgKiBtYXRjaCwgd2l0aCB0aGUgdG9waWNzIFsibWF0Y2giLCAiUGxheWVyIEEiLCAiUGxheWVyIEIiXSBhbmQgdGhlIGRhdGEKICAgICAqIGZpZWxkIGJlaW5nIHRoZSBhZGRyZXNzIHRoYXQgZ29lcyBmaXJzdC4gVGhpcyBzaG91bGQgYWxsb3cgcGxheWVycyB0bwogICAgICogb2JzZXJ2ZSB0aGUgYmVnaW5uaW5nIG9mIHRoZSBtYXRjaCB3aXRob3V0IG5lY2Vzc2FyaWx5IGJlaW5nIHRoZSBvbmVzCiAgICAgKiB0byBzdWJtaXQgdGhlIGludm9jYXRpb24uCiAgICAgKgogICAgICogIyBBcmd1bWVudHMKICAgICAqCiAgICAgKiBgYWAgLSBUaGUgcGxheWVyIG9uIG9uZSBzaWRlIG9mIHRoZSBtYXRjaAogICAgICogYGJgIC0gVGhlIHBsYXllciBvbiB0aGUgb3RoZXIgc2lkZSBvZiB0aGUgbWF0Y2gKICAgICAqCiAgICAgKiAjIFJldHVybnMKICAgICAqCiAgICAgKiBUaGUgYWRkcmVzcyBvZiB0aGUgcGxheWVyIHdobyBzaG91bGQgZ28gKGNhbGwgYHJvbGxgKSBmaXJzdC4KICAgICAqCiAgICAgKiAjIFBhbmljcwogICAgICoKICAgICAqIC0gSWYgZWl0aGVyIHBsYXllciBpcyBhbHJlYWR5IGluIGEgZ2FtZS4KICAgICAqIC0gSWYgYSBwbGF5ZXIgZG9lc24ndCBoYXZlIGEgc3VmZmljaWVudCBhbW91bnQgZGVwb3NpdGVkIHRvIHdhZ2VyIGEgZ2FtZQogICAgAAAABmVuZ2FnZQAAAAAAAgAAAAAAAAABYQAAAAAAABMAAAAAAAAAAWIAAAAAAAATAAAAAQAAABM=", "AAAAAAAABAAqIFBlcmZvcm1zIGEgc2luZ2xlIHJvbGwgaW4gdGhlIGdhbWUgb2YgRmFya2xlLgogICAgICoKICAgICAqIEluIEZhcmtsZSwgZ2FtZXMgYXJlIHBsYXllZCB3aXRoIHJvdW5kcy4gSW4gZWFjaCByb3VuZCwgeW91IHBlcmZvcm0gbXVsdGlwbGUKICAgICAqIHJvbGxzLCBlaXRoZXIgc2V0dGluZyBhc2lkZSBkaWNlIHRvIGFjY3VtdWxhdGUgdG8geW91ciB0dXJuJ3Mgc2NvcmUgYW5kCiAgICAgKiByb2xsaW5nIGFnYWluLCBvciBzZXR0aW5nIGFzaWRlICsgcGFzc2luZyB0byBsb2NrIGluIHlvdXIgdHVybidzIHNjb3JlIGFuZAogICAgICogYWRkIGl0IHRvIHlvdXIgYWNjdW11bGF0ZWQgdG90YWwgc2NvcmUuCiAgICAgKgogICAgICogRmlyc3QgdG8gMjAwMCB3aW5zIQogICAgICoKICAgICAqICMgQXJndW1lbnRzCiAgICAgKgogICAgICogYHBsYXllcmAgLSBUaGUgcGVyc29uIHdobyBpcyByb2xsaW5nIHRoZSBkaWNlLgogICAgICogYHNhdmVgIC0gQSBsaXN0IG9mIGluZGljZXMgaW50byB0aGUgZGljZSB0byBrZWVwIGZyb20gdGhlIHByZXZpb3VzIHJvbGwuCiAgICAgKgogICAgICogICAgICBJbiBvdGhlciB3b3JkcywgaWYgdGhlIHByZXZpb3VzIGByb2xsYCBjYWxsIHJldHVybmVkIGEgNC1kaWNlIHJvbGwKICAgICAqICAgICAgd2l0aCBgWzEsIDYsIDIsIDFdYCAoYmVjYXVzZSB5b3UndmUgYWxyZWFkeSBzZXQgdGhlIG90aGVyIHR3byBhc2lkZSksCiAgICAgKiAgICAgIGFuZCB5b3Ugd2FudGVkIHRvIGtlZXAgYm90aCAxcywgdGhlIGBzYXZlYCBsaXN0IHNob3VsZCBiZSBbMCwgM10KICAgICAqICAgICAgYmVjYXVzZSB5b3Ugd2FudCB0byBrZWVwIHRoZSAxc3QgYW5kIDR0aCBkaWNlICgwLWJhc2VkIGluZGV4aW5nKS4KICAgICAqIGBzdG9wYCAtIFdoZXRoZXIgb3Igbm90IHlvdSB3YW50IHRvIHN0b3AgYWZ0ZXIgdGhpcyBhY2N1bXVsYXRpb24gb2YgcG9pbnRzLgogICAgICoKICAgICAqICMgUmV0dXJucwogICAgICoKICAgICAqIEEgbGlzdCByZXByZXNlbnRpbmcgdGhlIGxhdGVzdCBkAAAABHJvbGwAAAADAAAAAAAAAAZwbGF5ZXIAAAAAABMAAAAAAAAABHNhdmUAAAPqAAAABAAAAAAAAAAEc3RvcAAAAAEAAAABAAAD6gAAAAQ=", "AAAAAAAAADBSZXR1cm5zIHRoZSB0b2tlbiBhZGRyZXNzIGJlaW5nIHVzZWQgZm9yIHdhZ2Vycy4AAAAFdG9rZW4AAAAAAAAAAAAAAQAAABM=", "AAAAAAAAAClQYW5pY3MgaWYgdGhlIGNvbnRyYWN0IGlzbid0IGluaXRpYWxpemVkLgAAAAAAAApjaGVja19pbml0AAAAAAAAAAAAAA==", "AAAAAAAAADdCdW1wcyB0aGUgdGltZS10by1saXZlIGZvciBhIG1hdGNoIGJldHdlZW4gdHdvIHBsYXllcnMuAAAAAA5idW1wX21hdGNoX3R0bAAAAAAAAgAAAAAAAAABYQAAAAAAABMAAAAAAAAAAWIAAAAAAAATAAAAAA==", "AAAAAAAAAAAAAAAJZW5kX21hdGNoAAAAAAAAAgAAAAAAAAAGcGxheWVyAAAAAAATAAAAAAAAAANvcHAAAAAAEwAAAAEAAAAB"]), e);
    __publicField(this, "fromJSON", { version: this.txFromJSON, wager: this.txFromJSON, upgrade: this.txFromJSON, shutdown: this.txFromJSON, balance: this.txFromJSON, deposit: this.txFromJSON, withdraw: this.txFromJSON, score: this.txFromJSON, engage: this.txFromJSON, roll: this.txFromJSON, token: this.txFromJSON, check_init: this.txFromJSON, bump_match_ttl: this.txFromJSON, end_match: this.txFromJSON });
    this.options = e;
  }
  static async deploy({ admin: e, token: n }, i) {
    return fc.Client.deploy({ admin: e, token: n }, i);
  }
}
const Ca = 10000000n, Ns = "https://soroban-testnet.stellar.org", yf = "CAFWLMYR5JHUOL2EICORMQ475FJGHOMJLI47JITOEK2UGUC7R5PIQJIK", Sc = Yn.Networks.TESTNET;
async function gf(v) {
  const { address: e } = await v.getAddress(), { networkPassphrase: n } = await v.getNetwork();
  return new _E({ contractId: yf, publicKey: e, rpcUrl: Ns, networkPassphrase: n, signTransaction: v.signTransaction, signAuthEntry: v.signAuthEntry });
}
function EE(v, e) {
  let n = v.map((u) => Yn.scValToNative(u)), i = Yn.scValToNative(e);
  switch (n[0]) {
    case "match":
      return { type: n[0], player: n[1], otherPlayer: n[2], first: i };
    case "roll":
      return { type: n[0], player: n[1], dice: i };
    case "reroll":
      return { type: n[0], player: n[1], dice: i[0], score: i[1], stop: i[2] };
    case "bust":
      return { type: n[0], player: n[1], dice: i };
    case "win":
      return { type: n[0], player: n[1], score: i };
    default:
      throw v;
  }
}
class AE {
  constructor() {
    __publicField(this, "listener");
    __publicField(this, "rpc", new Ao.Server(Ns));
    window.addEventListener("farkle", (e) => {
      const n = e.detail;
      console.debug("Farkle Event:", n), dispatchEvent(new CustomEvent(`farkle-${n.type}`, { bubbles: true, detail: n }));
    });
  }
  stop() {
    clearInterval(this.listener);
  }
  listen(e) {
    const n = { contractIds: [yf], type: "contract", topics: e.map((y) => ["*", Yn.nativeToScVal(y, { type: "address" }).toXDR("base64")]) };
    let i, u;
    this.listener = setInterval(async () => {
      let y = await this.rpc.getLatestLedger();
      i && i.sequence >= y.sequence || (i = y, u ? u = await this.rpc.getEvents({ filters: [n], cursor: u.cursor, limit: 100 }) : u = await this.rpc.getEvents({ filters: [n], startLedger: i.sequence - 10, limit: 100 }), u.events.forEach((t) => {
        const o = EE(t.topic, t.value);
        console.debug("Parsed RPC event:", o), dispatchEvent(new CustomEvent("farkle", { detail: o, bubbles: true }));
      }));
    }, 1500);
  }
  on(e, n) {
    window.addEventListener(`farkle-${e}`, n);
  }
}
async function xE(v) {
  const { address: e } = await v.getAddress(), n = Yn.Keypair.fromPublicKey(e);
  let y = (await new Ao.Server(Ns).getLedgerEntries(Yn.xdr.LedgerKey.account(new Yn.xdr.LedgerKeyAccount({ accountId: n.xdrAccountId() })))).entries[0].val.account().balance().toBigInt();
  y <= Number.MAX_SAFE_INTEGER ? y = Number(y) / Number(Ca) : y /= Ca, console.debug(`Loaded account info for ${n.publicKey().substring(0, 6)}: ${y} XLM.`);
  const t = Jr("#account-balance"), o = t.text(), s = y.toString();
  return t.text(Number(y).toFixed(2)), { element: t, oldBalance: o, newBalance: s };
}
async function TE(v) {
  const e = await gf(v), { address: n } = await v.getAddress(), i = await e.balance({ player: n });
  let u;
  i.result <= Number.MAX_SAFE_INTEGER ? u = Number(i.result) / Number(Ca) : u = i.result / Ca;
  const y = Jr("#in-game-balance"), t = y.text(), o = u.toString();
  return y.text(parseFloat(o).toFixed(2)), { element: y, oldBalance: t, newBalance: o };
}
function Dd(v = 3e3) {
  return new Promise((e) => setTimeout(e, v));
}
async function kE(v, e, n, i) {
  const u = Math.ceil(40180), { address: y } = await v.getAddress(), o = await (await gf(v)).roll({ player: y, save: n ?? [], stop: i ?? false }, { ...!i && { fee: parseInt(Yn.BASE_FEE) + u } });
  if (!i) {
    const c = [Zu("TurnScore", y), Zu("Dice", y), Zu("Turn", y), Zu("Turn", e)];
    if (Ao.Api.isSimulationSuccess(o.simulation)) {
      const h = o.simulation.transactionData.build(), f = h.resources().instructions(), r = h.resources().readBytes(), m = h.resources().writeBytes(), a = h.resourceFee().toBigInt() + BigInt(u), l = c.map((d) => d.toXDR("base64"));
      o.simulation.transactionData.setReadWrite(o.simulation.transactionData.getReadWrite().filter((d) => !l.includes(d.toXDR("base64"))).concat(c)).setReadOnly(o.simulation.transactionData.getReadOnly().filter((d) => !l.includes(d.toXDR("base64")))).setResources(f, Math.ceil(r + 1e3), Math.ceil(m + 1e3)).setResourceFee(a.toString());
    }
  }
  return Vl(o);
}
async function Vl(v) {
  var _a2, _b2, _c2, _d2, _e, _f2, _g2;
  let e = null;
  try {
    e = await v.signAndSend();
  } catch (n) {
    return console.debug("Transaction envelope:", v.built.toXDR()), console.error(n), console.log("Returning rejection..."), Promise.reject(n);
  } finally {
    console.debug("Transaction envelope:", (_a2 = v.signed) == null ? void 0 : _a2.toXDR()), (_c2 = (_b2 = e == null ? void 0 : e.sendTransactionResponse) == null ? void 0 : _b2.diagnosticEvents) == null ? void 0 : _c2.forEach((n) => {
      console.error(n.toXDR("base64"));
    });
  }
  switch (console.debug("Transaction status:", (_d2 = e.getTransactionResponse) == null ? void 0 : _d2.status), (_e = e.getTransactionResponse) == null ? void 0 : _e.status) {
    case Ao.Api.GetTransactionStatus.SUCCESS:
    case Ao.Api.GetTransactionStatus.FAILED:
      console.log(e.getTransactionResponse.resultMetaXdr.toXDR("base64"));
      break;
    default:
      console.log(e);
  }
  switch ((_f2 = e.getTransactionResponse) == null ? void 0 : _f2.status) {
    case Ao.Api.GetTransactionStatus.SUCCESS:
      return Yn.scValToNative(e.getTransactionResponse.returnValue);
    case Ao.Api.GetTransactionStatus.FAILED:
      (_g2 = e.getTransactionResponse.diagnosticEventsXdr) == null ? void 0 : _g2.forEach((n, i) => {
        console.error(`Event ${i + 1}:`, n), console.error(`Event ${i + 1}:`, n.toXDR("base64"));
      });
      break;
  }
}
function Zu(v, e) {
  return Yn.xdr.LedgerKey.contractData(new Yn.xdr.LedgerKeyContractData({ contract: new Yn.Address(yf).toScAddress(), key: Yn.xdr.ScVal.scvVec([Yn.nativeToScVal(v, { type: "symbol" }), Yn.nativeToScVal(e, { type: "address" })]), durability: Yn.xdr.ContractDataDurability.temporary() }));
}
function Ju(v) {
  if (v.length === 1) return `a ${v[0]}`;
  const e = v.length > 2 ? "," : "", n = Array.from(v).sort();
  return `${n.slice(0, -1).join(", ")}${e} and ${n.slice(-1)}`;
}
const ao = /* @__PURE__ */ Object.create(null);
ao.open = "0";
ao.close = "1";
ao.ping = "2";
ao.pong = "3";
ao.message = "4";
ao.upgrade = "5";
ao.noop = "6";
const pc = /* @__PURE__ */ Object.create(null);
Object.keys(ao).forEach((v) => {
  pc[ao[v]] = v;
});
const ql = { type: "error", data: "parser error" }, Xm = typeof Blob == "function" || typeof Blob < "u" && Object.prototype.toString.call(Blob) === "[object BlobConstructor]", $m = typeof ArrayBuffer == "function", Ym = (v) => typeof ArrayBuffer.isView == "function" ? ArrayBuffer.isView(v) : v && v.buffer instanceof ArrayBuffer, vf = ({ type: v, data: e }, n, i) => Xm && e instanceof Blob ? n ? i(e) : Fd(e, i) : $m && (e instanceof ArrayBuffer || Ym(e)) ? n ? i(e) : Fd(new Blob([e]), i) : i(ao[v] + (e || "")), Fd = (v, e) => {
  const n = new FileReader();
  return n.onload = function() {
    const i = n.result.split(",")[1];
    e("b" + (i || ""));
  }, n.readAsDataURL(v);
};
function Ud(v) {
  return v instanceof Uint8Array ? v : v instanceof ArrayBuffer ? new Uint8Array(v) : new Uint8Array(v.buffer, v.byteOffset, v.byteLength);
}
let Bl;
function OE(v, e) {
  if (Xm && v.data instanceof Blob) return v.data.arrayBuffer().then(Ud).then(e);
  if ($m && (v.data instanceof ArrayBuffer || Ym(v.data))) return e(Ud(v.data));
  vf(v, false, (n) => {
    Bl || (Bl = new TextEncoder()), e(Bl.encode(n));
  });
}
const jd = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", Ls = typeof Uint8Array > "u" ? [] : new Uint8Array(256);
for (let v = 0; v < jd.length; v++) Ls[jd.charCodeAt(v)] = v;
const PE = (v) => {
  let e = v.length * 0.75, n = v.length, i, u = 0, y, t, o, s;
  v[v.length - 1] === "=" && (e--, v[v.length - 2] === "=" && e--);
  const c = new ArrayBuffer(e), h = new Uint8Array(c);
  for (i = 0; i < n; i += 4) y = Ls[v.charCodeAt(i)], t = Ls[v.charCodeAt(i + 1)], o = Ls[v.charCodeAt(i + 2)], s = Ls[v.charCodeAt(i + 3)], h[u++] = y << 2 | t >> 4, h[u++] = (t & 15) << 4 | o >> 2, h[u++] = (o & 3) << 6 | s & 63;
  return c;
}, CE = typeof ArrayBuffer == "function", bf = (v, e) => {
  if (typeof v != "string") return { type: "message", data: Qm(v, e) };
  const n = v.charAt(0);
  return n === "b" ? { type: "message", data: RE(v.substring(1), e) } : pc[n] ? v.length > 1 ? { type: pc[n], data: v.substring(1) } : { type: pc[n] } : ql;
}, RE = (v, e) => {
  if (CE) {
    const n = PE(v);
    return Qm(n, e);
  } else return { base64: true, data: v };
}, Qm = (v, e) => {
  switch (e) {
    case "blob":
      return v instanceof Blob ? v : new Blob([v]);
    case "arraybuffer":
    default:
      return v instanceof ArrayBuffer ? v : v.buffer;
  }
}, Zm = "", ME = (v, e) => {
  const n = v.length, i = new Array(n);
  let u = 0;
  v.forEach((y, t) => {
    vf(y, false, (o) => {
      i[t] = o, ++u === n && e(i.join(Zm));
    });
  });
}, IE = (v, e) => {
  const n = v.split(Zm), i = [];
  for (let u = 0; u < n.length; u++) {
    const y = bf(n[u], e);
    if (i.push(y), y.type === "error") break;
  }
  return i;
};
function LE() {
  return new TransformStream({ transform(v, e) {
    OE(v, (n) => {
      const i = n.length;
      let u;
      if (i < 126) u = new Uint8Array(1), new DataView(u.buffer).setUint8(0, i);
      else if (i < 65536) {
        u = new Uint8Array(3);
        const y = new DataView(u.buffer);
        y.setUint8(0, 126), y.setUint16(1, i);
      } else {
        u = new Uint8Array(9);
        const y = new DataView(u.buffer);
        y.setUint8(0, 127), y.setBigUint64(1, BigInt(i));
      }
      v.data && typeof v.data != "string" && (u[0] |= 128), e.enqueue(u), e.enqueue(n);
    });
  } });
}
let Nl;
function ec(v) {
  return v.reduce((e, n) => e + n.length, 0);
}
function tc(v, e) {
  if (v[0].length === e) return v.shift();
  const n = new Uint8Array(e);
  let i = 0;
  for (let u = 0; u < e; u++) n[u] = v[0][i++], i === v[0].length && (v.shift(), i = 0);
  return v.length && i < v[0].length && (v[0] = v[0].slice(i)), n;
}
function BE(v, e) {
  Nl || (Nl = new TextDecoder());
  const n = [];
  let i = 0, u = -1, y = false;
  return new TransformStream({ transform(t, o) {
    for (n.push(t); ; ) {
      if (i === 0) {
        if (ec(n) < 1) break;
        const s = tc(n, 1);
        y = (s[0] & 128) === 128, u = s[0] & 127, u < 126 ? i = 3 : u === 126 ? i = 1 : i = 2;
      } else if (i === 1) {
        if (ec(n) < 2) break;
        const s = tc(n, 2);
        u = new DataView(s.buffer, s.byteOffset, s.length).getUint16(0), i = 3;
      } else if (i === 2) {
        if (ec(n) < 8) break;
        const s = tc(n, 8), c = new DataView(s.buffer, s.byteOffset, s.length), h = c.getUint32(0);
        if (h > Math.pow(2, 21) - 1) {
          o.enqueue(ql);
          break;
        }
        u = h * Math.pow(2, 32) + c.getUint32(4), i = 3;
      } else {
        if (ec(n) < u) break;
        const s = tc(n, u);
        o.enqueue(bf(y ? s : Nl.decode(s), e)), i = 0;
      }
      if (u === 0 || u > v) {
        o.enqueue(ql);
        break;
      }
    }
  } });
}
const Jm = 4;
function ri(v) {
  if (v) return NE(v);
}
function NE(v) {
  for (var e in ri.prototype) v[e] = ri.prototype[e];
  return v;
}
ri.prototype.on = ri.prototype.addEventListener = function(v, e) {
  return this._callbacks = this._callbacks || {}, (this._callbacks["$" + v] = this._callbacks["$" + v] || []).push(e), this;
};
ri.prototype.once = function(v, e) {
  function n() {
    this.off(v, n), e.apply(this, arguments);
  }
  return n.fn = e, this.on(v, n), this;
};
ri.prototype.off = ri.prototype.removeListener = ri.prototype.removeAllListeners = ri.prototype.removeEventListener = function(v, e) {
  if (this._callbacks = this._callbacks || {}, arguments.length == 0) return this._callbacks = {}, this;
  var n = this._callbacks["$" + v];
  if (!n) return this;
  if (arguments.length == 1) return delete this._callbacks["$" + v], this;
  for (var i, u = 0; u < n.length; u++) if (i = n[u], i === e || i.fn === e) {
    n.splice(u, 1);
    break;
  }
  return n.length === 0 && delete this._callbacks["$" + v], this;
};
ri.prototype.emit = function(v) {
  this._callbacks = this._callbacks || {};
  for (var e = new Array(arguments.length - 1), n = this._callbacks["$" + v], i = 1; i < arguments.length; i++) e[i - 1] = arguments[i];
  if (n) {
    n = n.slice(0);
    for (var i = 0, u = n.length; i < u; ++i) n[i].apply(this, e);
  }
  return this;
};
ri.prototype.emitReserved = ri.prototype.emit;
ri.prototype.listeners = function(v) {
  return this._callbacks = this._callbacks || {}, this._callbacks["$" + v] || [];
};
ri.prototype.hasListeners = function(v) {
  return !!this.listeners(v).length;
};
const kc = typeof Promise == "function" && typeof Promise.resolve == "function" ? (e) => Promise.resolve().then(e) : (e, n) => n(e, 0), ji = typeof self < "u" ? self : typeof window < "u" ? window : Function("return this")(), DE = "arraybuffer";
function ey(v, ...e) {
  return e.reduce((n, i) => (v.hasOwnProperty(i) && (n[i] = v[i]), n), {});
}
const FE = ji.setTimeout, UE = ji.clearTimeout;
function Oc(v, e) {
  e.useNativeTimers ? (v.setTimeoutFn = FE.bind(ji), v.clearTimeoutFn = UE.bind(ji)) : (v.setTimeoutFn = ji.setTimeout.bind(ji), v.clearTimeoutFn = ji.clearTimeout.bind(ji));
}
const jE = 1.33;
function VE(v) {
  return typeof v == "string" ? qE(v) : Math.ceil((v.byteLength || v.size) * jE);
}
function qE(v) {
  let e = 0, n = 0;
  for (let i = 0, u = v.length; i < u; i++) e = v.charCodeAt(i), e < 128 ? n += 1 : e < 2048 ? n += 2 : e < 55296 || e >= 57344 ? n += 3 : (i++, n += 4);
  return n;
}
function ty() {
  return Date.now().toString(36).substring(3) + Math.random().toString(36).substring(2, 5);
}
function zE(v) {
  let e = "";
  for (let n in v) v.hasOwnProperty(n) && (e.length && (e += "&"), e += encodeURIComponent(n) + "=" + encodeURIComponent(v[n]));
  return e;
}
function HE(v) {
  let e = {}, n = v.split("&");
  for (let i = 0, u = n.length; i < u; i++) {
    let y = n[i].split("=");
    e[decodeURIComponent(y[0])] = decodeURIComponent(y[1]);
  }
  return e;
}
class GE extends Error {
  constructor(e, n, i) {
    super(e), this.description = n, this.context = i, this.type = "TransportError";
  }
}
class wf extends ri {
  constructor(e) {
    super(), this.writable = false, Oc(this, e), this.opts = e, this.query = e.query, this.socket = e.socket, this.supportsBinary = !e.forceBase64;
  }
  onError(e, n, i) {
    return super.emitReserved("error", new GE(e, n, i)), this;
  }
  open() {
    return this.readyState = "opening", this.doOpen(), this;
  }
  close() {
    return (this.readyState === "opening" || this.readyState === "open") && (this.doClose(), this.onClose()), this;
  }
  send(e) {
    this.readyState === "open" && this.write(e);
  }
  onOpen() {
    this.readyState = "open", this.writable = true, super.emitReserved("open");
  }
  onData(e) {
    const n = bf(e, this.socket.binaryType);
    this.onPacket(n);
  }
  onPacket(e) {
    super.emitReserved("packet", e);
  }
  onClose(e) {
    this.readyState = "closed", super.emitReserved("close", e);
  }
  pause(e) {
  }
  createUri(e, n = {}) {
    return e + "://" + this._hostname() + this._port() + this.opts.path + this._query(n);
  }
  _hostname() {
    const e = this.opts.hostname;
    return e.indexOf(":") === -1 ? e : "[" + e + "]";
  }
  _port() {
    return this.opts.port && (this.opts.secure && +(this.opts.port !== 443) || !this.opts.secure && Number(this.opts.port) !== 80) ? ":" + this.opts.port : "";
  }
  _query(e) {
    const n = zE(e);
    return n.length ? "?" + n : "";
  }
}
class WE extends wf {
  constructor() {
    super(...arguments), this._polling = false;
  }
  get name() {
    return "polling";
  }
  doOpen() {
    this._poll();
  }
  pause(e) {
    this.readyState = "pausing";
    const n = () => {
      this.readyState = "paused", e();
    };
    if (this._polling || !this.writable) {
      let i = 0;
      this._polling && (i++, this.once("pollComplete", function() {
        --i || n();
      })), this.writable || (i++, this.once("drain", function() {
        --i || n();
      }));
    } else n();
  }
  _poll() {
    this._polling = true, this.doPoll(), this.emitReserved("poll");
  }
  onData(e) {
    const n = (i) => {
      if (this.readyState === "opening" && i.type === "open" && this.onOpen(), i.type === "close") return this.onClose({ description: "transport closed by the server" }), false;
      this.onPacket(i);
    };
    IE(e, this.socket.binaryType).forEach(n), this.readyState !== "closed" && (this._polling = false, this.emitReserved("pollComplete"), this.readyState === "open" && this._poll());
  }
  doClose() {
    const e = () => {
      this.write([{ type: "close" }]);
    };
    this.readyState === "open" ? e() : this.once("open", e);
  }
  write(e) {
    this.writable = false, ME(e, (n) => {
      this.doWrite(n, () => {
        this.writable = true, this.emitReserved("drain");
      });
    });
  }
  uri() {
    const e = this.opts.secure ? "https" : "http", n = this.query || {};
    return this.opts.timestampRequests !== false && (n[this.opts.timestampParam] = ty()), !this.supportsBinary && !n.sid && (n.b64 = 1), this.createUri(e, n);
  }
}
let ry = false;
try {
  ry = typeof XMLHttpRequest < "u" && "withCredentials" in new XMLHttpRequest();
} catch {
}
const KE = ry;
function XE() {
}
class $E extends WE {
  constructor(e) {
    if (super(e), typeof location < "u") {
      const n = location.protocol === "https:";
      let i = location.port;
      i || (i = n ? "443" : "80"), this.xd = typeof location < "u" && e.hostname !== location.hostname || i !== e.port;
    }
  }
  doWrite(e, n) {
    const i = this.request({ method: "POST", data: e });
    i.on("success", n), i.on("error", (u, y) => {
      this.onError("xhr post error", u, y);
    });
  }
  doPoll() {
    const e = this.request();
    e.on("data", this.onData.bind(this)), e.on("error", (n, i) => {
      this.onError("xhr poll error", n, i);
    }), this.pollXhr = e;
  }
}
let Oa = class hc extends ri {
  constructor(e, n, i) {
    super(), this.createRequest = e, Oc(this, i), this._opts = i, this._method = i.method || "GET", this._uri = n, this._data = i.data !== void 0 ? i.data : null, this._create();
  }
  _create() {
    var e;
    const n = ey(this._opts, "agent", "pfx", "key", "passphrase", "cert", "ca", "ciphers", "rejectUnauthorized", "autoUnref");
    n.xdomain = !!this._opts.xd;
    const i = this._xhr = this.createRequest(n);
    try {
      i.open(this._method, this._uri, true);
      try {
        if (this._opts.extraHeaders) {
          i.setDisableHeaderCheck && i.setDisableHeaderCheck(true);
          for (let u in this._opts.extraHeaders) this._opts.extraHeaders.hasOwnProperty(u) && i.setRequestHeader(u, this._opts.extraHeaders[u]);
        }
      } catch {
      }
      if (this._method === "POST") try {
        i.setRequestHeader("Content-type", "text/plain;charset=UTF-8");
      } catch {
      }
      try {
        i.setRequestHeader("Accept", "*/*");
      } catch {
      }
      (e = this._opts.cookieJar) === null || e === void 0 || e.addCookies(i), "withCredentials" in i && (i.withCredentials = this._opts.withCredentials), this._opts.requestTimeout && (i.timeout = this._opts.requestTimeout), i.onreadystatechange = () => {
        var u;
        i.readyState === 3 && ((u = this._opts.cookieJar) === null || u === void 0 || u.parseCookies(i.getResponseHeader("set-cookie"))), i.readyState === 4 && (i.status === 200 || i.status === 1223 ? this._onLoad() : this.setTimeoutFn(() => {
          this._onError(typeof i.status == "number" ? i.status : 0);
        }, 0));
      }, i.send(this._data);
    } catch (u) {
      this.setTimeoutFn(() => {
        this._onError(u);
      }, 0);
      return;
    }
    typeof document < "u" && (this._index = hc.requestsCount++, hc.requests[this._index] = this);
  }
  _onError(e) {
    this.emitReserved("error", e, this._xhr), this._cleanup(true);
  }
  _cleanup(e) {
    if (!(typeof this._xhr > "u" || this._xhr === null)) {
      if (this._xhr.onreadystatechange = XE, e) try {
        this._xhr.abort();
      } catch {
      }
      typeof document < "u" && delete hc.requests[this._index], this._xhr = null;
    }
  }
  _onLoad() {
    const e = this._xhr.responseText;
    e !== null && (this.emitReserved("data", e), this.emitReserved("success"), this._cleanup());
  }
  abort() {
    this._cleanup();
  }
};
Oa.requestsCount = 0;
Oa.requests = {};
if (typeof document < "u") {
  if (typeof attachEvent == "function") attachEvent("onunload", Vd);
  else if (typeof addEventListener == "function") {
    const v = "onpagehide" in ji ? "pagehide" : "unload";
    addEventListener(v, Vd, false);
  }
}
function Vd() {
  for (let v in Oa.requests) Oa.requests.hasOwnProperty(v) && Oa.requests[v].abort();
}
const YE = function() {
  const v = ny({ xdomain: false });
  return v && v.responseType !== null;
}();
class QE extends $E {
  constructor(e) {
    super(e);
    const n = e && e.forceBase64;
    this.supportsBinary = YE && !n;
  }
  request(e = {}) {
    return Object.assign(e, { xd: this.xd }, this.opts), new Oa(ny, this.uri(), e);
  }
}
function ny(v) {
  const e = v.xdomain;
  try {
    if (typeof XMLHttpRequest < "u" && (!e || KE)) return new XMLHttpRequest();
  } catch {
  }
  if (!e) try {
    return new ji[["Active"].concat("Object").join("X")]("Microsoft.XMLHTTP");
  } catch {
  }
}
const iy = typeof navigator < "u" && typeof navigator.product == "string" && navigator.product.toLowerCase() === "reactnative";
class ZE extends wf {
  get name() {
    return "websocket";
  }
  doOpen() {
    const e = this.uri(), n = this.opts.protocols, i = iy ? {} : ey(this.opts, "agent", "perMessageDeflate", "pfx", "key", "passphrase", "cert", "ca", "ciphers", "rejectUnauthorized", "localAddress", "protocolVersion", "origin", "maxPayload", "family", "checkServerIdentity");
    this.opts.extraHeaders && (i.headers = this.opts.extraHeaders);
    try {
      this.ws = this.createSocket(e, n, i);
    } catch (u) {
      return this.emitReserved("error", u);
    }
    this.ws.binaryType = this.socket.binaryType, this.addEventListeners();
  }
  addEventListeners() {
    this.ws.onopen = () => {
      this.opts.autoUnref && this.ws._socket.unref(), this.onOpen();
    }, this.ws.onclose = (e) => this.onClose({ description: "websocket connection closed", context: e }), this.ws.onmessage = (e) => this.onData(e.data), this.ws.onerror = (e) => this.onError("websocket error", e);
  }
  write(e) {
    this.writable = false;
    for (let n = 0; n < e.length; n++) {
      const i = e[n], u = n === e.length - 1;
      vf(i, this.supportsBinary, (y) => {
        try {
          this.doWrite(i, y);
        } catch {
        }
        u && kc(() => {
          this.writable = true, this.emitReserved("drain");
        }, this.setTimeoutFn);
      });
    }
  }
  doClose() {
    typeof this.ws < "u" && (this.ws.onerror = () => {
    }, this.ws.close(), this.ws = null);
  }
  uri() {
    const e = this.opts.secure ? "wss" : "ws", n = this.query || {};
    return this.opts.timestampRequests && (n[this.opts.timestampParam] = ty()), this.supportsBinary || (n.b64 = 1), this.createUri(e, n);
  }
}
const Dl = ji.WebSocket || ji.MozWebSocket;
class JE extends ZE {
  createSocket(e, n, i) {
    return iy ? new Dl(e, n, i) : n ? new Dl(e, n) : new Dl(e);
  }
  doWrite(e, n) {
    this.ws.send(n);
  }
}
class eA extends wf {
  get name() {
    return "webtransport";
  }
  doOpen() {
    try {
      this._transport = new WebTransport(this.createUri("https"), this.opts.transportOptions[this.name]);
    } catch (e) {
      return this.emitReserved("error", e);
    }
    this._transport.closed.then(() => {
      this.onClose();
    }).catch((e) => {
      this.onError("webtransport error", e);
    }), this._transport.ready.then(() => {
      this._transport.createBidirectionalStream().then((e) => {
        const n = BE(Number.MAX_SAFE_INTEGER, this.socket.binaryType), i = e.readable.pipeThrough(n).getReader(), u = LE();
        u.readable.pipeTo(e.writable), this._writer = u.writable.getWriter();
        const y = () => {
          i.read().then(({ done: o, value: s }) => {
            o || (this.onPacket(s), y());
          }).catch((o) => {
          });
        };
        y();
        const t = { type: "open" };
        this.query.sid && (t.data = `{"sid":"${this.query.sid}"}`), this._writer.write(t).then(() => this.onOpen());
      });
    });
  }
  write(e) {
    this.writable = false;
    for (let n = 0; n < e.length; n++) {
      const i = e[n], u = n === e.length - 1;
      this._writer.write(i).then(() => {
        u && kc(() => {
          this.writable = true, this.emitReserved("drain");
        }, this.setTimeoutFn);
      });
    }
  }
  doClose() {
    var e;
    (e = this._transport) === null || e === void 0 || e.close();
  }
}
const tA = { websocket: JE, webtransport: eA, polling: QE }, rA = /^(?:(?![^:@\/?#]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@\/?#]*)(?::([^:@\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/, nA = ["source", "protocol", "authority", "userInfo", "user", "password", "host", "port", "relative", "path", "directory", "file", "query", "anchor"];
function zl(v) {
  if (v.length > 8e3) throw "URI too long";
  const e = v, n = v.indexOf("["), i = v.indexOf("]");
  n != -1 && i != -1 && (v = v.substring(0, n) + v.substring(n, i).replace(/:/g, ";") + v.substring(i, v.length));
  let u = rA.exec(v || ""), y = {}, t = 14;
  for (; t--; ) y[nA[t]] = u[t] || "";
  return n != -1 && i != -1 && (y.source = e, y.host = y.host.substring(1, y.host.length - 1).replace(/;/g, ":"), y.authority = y.authority.replace("[", "").replace("]", "").replace(/;/g, ":"), y.ipv6uri = true), y.pathNames = iA(y, y.path), y.queryKey = oA(y, y.query), y;
}
function iA(v, e) {
  const n = /\/{2,9}/g, i = e.replace(n, "/").split("/");
  return (e.slice(0, 1) == "/" || e.length === 0) && i.splice(0, 1), e.slice(-1) == "/" && i.splice(i.length - 1, 1), i;
}
function oA(v, e) {
  const n = {};
  return e.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function(i, u, y) {
    u && (n[u] = y);
  }), n;
}
const Hl = typeof addEventListener == "function" && typeof removeEventListener == "function", dc = [];
Hl && addEventListener("offline", () => {
  dc.forEach((v) => v());
}, false);
class Do extends ri {
  constructor(e, n) {
    if (super(), this.binaryType = DE, this.writeBuffer = [], this._prevBufferLen = 0, this._pingInterval = -1, this._pingTimeout = -1, this._maxPayload = -1, this._pingTimeoutTime = 1 / 0, e && typeof e == "object" && (n = e, e = null), e) {
      const i = zl(e);
      n.hostname = i.host, n.secure = i.protocol === "https" || i.protocol === "wss", n.port = i.port, i.query && (n.query = i.query);
    } else n.host && (n.hostname = zl(n.host).host);
    Oc(this, n), this.secure = n.secure != null ? n.secure : typeof location < "u" && location.protocol === "https:", n.hostname && !n.port && (n.port = this.secure ? "443" : "80"), this.hostname = n.hostname || (typeof location < "u" ? location.hostname : "localhost"), this.port = n.port || (typeof location < "u" && location.port ? location.port : this.secure ? "443" : "80"), this.transports = [], this._transportsByName = {}, n.transports.forEach((i) => {
      const u = i.prototype.name;
      this.transports.push(u), this._transportsByName[u] = i;
    }), this.opts = Object.assign({ path: "/engine.io", agent: false, withCredentials: false, upgrade: true, timestampParam: "t", rememberUpgrade: false, addTrailingSlash: true, rejectUnauthorized: true, perMessageDeflate: { threshold: 1024 }, transportOptions: {}, closeOnBeforeunload: false }, n), this.opts.path = this.opts.path.replace(/\/$/, "") + (this.opts.addTrailingSlash ? "/" : ""), typeof this.opts.query == "string" && (this.opts.query = HE(this.opts.query)), Hl && (this.opts.closeOnBeforeunload && (this._beforeunloadEventListener = () => {
      this.transport && (this.transport.removeAllListeners(), this.transport.close());
    }, addEventListener("beforeunload", this._beforeunloadEventListener, false)), this.hostname !== "localhost" && (this._offlineEventListener = () => {
      this._onClose("transport close", { description: "network connection lost" });
    }, dc.push(this._offlineEventListener))), this.opts.withCredentials && (this._cookieJar = void 0), this._open();
  }
  createTransport(e) {
    const n = Object.assign({}, this.opts.query);
    n.EIO = Jm, n.transport = e, this.id && (n.sid = this.id);
    const i = Object.assign({}, this.opts, { query: n, socket: this, hostname: this.hostname, secure: this.secure, port: this.port }, this.opts.transportOptions[e]);
    return new this._transportsByName[e](i);
  }
  _open() {
    if (this.transports.length === 0) {
      this.setTimeoutFn(() => {
        this.emitReserved("error", "No transports available");
      }, 0);
      return;
    }
    const e = this.opts.rememberUpgrade && Do.priorWebsocketSuccess && this.transports.indexOf("websocket") !== -1 ? "websocket" : this.transports[0];
    this.readyState = "opening";
    const n = this.createTransport(e);
    n.open(), this.setTransport(n);
  }
  setTransport(e) {
    this.transport && this.transport.removeAllListeners(), this.transport = e, e.on("drain", this._onDrain.bind(this)).on("packet", this._onPacket.bind(this)).on("error", this._onError.bind(this)).on("close", (n) => this._onClose("transport close", n));
  }
  onOpen() {
    this.readyState = "open", Do.priorWebsocketSuccess = this.transport.name === "websocket", this.emitReserved("open"), this.flush();
  }
  _onPacket(e) {
    if (this.readyState === "opening" || this.readyState === "open" || this.readyState === "closing") switch (this.emitReserved("packet", e), this.emitReserved("heartbeat"), e.type) {
      case "open":
        this.onHandshake(JSON.parse(e.data));
        break;
      case "ping":
        this._sendPacket("pong"), this.emitReserved("ping"), this.emitReserved("pong"), this._resetPingTimeout();
        break;
      case "error":
        const n = new Error("server error");
        n.code = e.data, this._onError(n);
        break;
      case "message":
        this.emitReserved("data", e.data), this.emitReserved("message", e.data);
        break;
    }
  }
  onHandshake(e) {
    this.emitReserved("handshake", e), this.id = e.sid, this.transport.query.sid = e.sid, this._pingInterval = e.pingInterval, this._pingTimeout = e.pingTimeout, this._maxPayload = e.maxPayload, this.onOpen(), this.readyState !== "closed" && this._resetPingTimeout();
  }
  _resetPingTimeout() {
    this.clearTimeoutFn(this._pingTimeoutTimer);
    const e = this._pingInterval + this._pingTimeout;
    this._pingTimeoutTime = Date.now() + e, this._pingTimeoutTimer = this.setTimeoutFn(() => {
      this._onClose("ping timeout");
    }, e), this.opts.autoUnref && this._pingTimeoutTimer.unref();
  }
  _onDrain() {
    this.writeBuffer.splice(0, this._prevBufferLen), this._prevBufferLen = 0, this.writeBuffer.length === 0 ? this.emitReserved("drain") : this.flush();
  }
  flush() {
    if (this.readyState !== "closed" && this.transport.writable && !this.upgrading && this.writeBuffer.length) {
      const e = this._getWritablePackets();
      this.transport.send(e), this._prevBufferLen = e.length, this.emitReserved("flush");
    }
  }
  _getWritablePackets() {
    if (!(this._maxPayload && this.transport.name === "polling" && this.writeBuffer.length > 1)) return this.writeBuffer;
    let n = 1;
    for (let i = 0; i < this.writeBuffer.length; i++) {
      const u = this.writeBuffer[i].data;
      if (u && (n += VE(u)), i > 0 && n > this._maxPayload) return this.writeBuffer.slice(0, i);
      n += 2;
    }
    return this.writeBuffer;
  }
  _hasPingExpired() {
    if (!this._pingTimeoutTime) return true;
    const e = Date.now() > this._pingTimeoutTime;
    return e && (this._pingTimeoutTime = 0, kc(() => {
      this._onClose("ping timeout");
    }, this.setTimeoutFn)), e;
  }
  write(e, n, i) {
    return this._sendPacket("message", e, n, i), this;
  }
  send(e, n, i) {
    return this._sendPacket("message", e, n, i), this;
  }
  _sendPacket(e, n, i, u) {
    if (typeof n == "function" && (u = n, n = void 0), typeof i == "function" && (u = i, i = null), this.readyState === "closing" || this.readyState === "closed") return;
    i = i || {}, i.compress = i.compress !== false;
    const y = { type: e, data: n, options: i };
    this.emitReserved("packetCreate", y), this.writeBuffer.push(y), u && this.once("flush", u), this.flush();
  }
  close() {
    const e = () => {
      this._onClose("forced close"), this.transport.close();
    }, n = () => {
      this.off("upgrade", n), this.off("upgradeError", n), e();
    }, i = () => {
      this.once("upgrade", n), this.once("upgradeError", n);
    };
    return (this.readyState === "opening" || this.readyState === "open") && (this.readyState = "closing", this.writeBuffer.length ? this.once("drain", () => {
      this.upgrading ? i() : e();
    }) : this.upgrading ? i() : e()), this;
  }
  _onError(e) {
    if (Do.priorWebsocketSuccess = false, this.opts.tryAllTransports && this.transports.length > 1 && this.readyState === "opening") return this.transports.shift(), this._open();
    this.emitReserved("error", e), this._onClose("transport error", e);
  }
  _onClose(e, n) {
    if (this.readyState === "opening" || this.readyState === "open" || this.readyState === "closing") {
      if (this.clearTimeoutFn(this._pingTimeoutTimer), this.transport.removeAllListeners("close"), this.transport.close(), this.transport.removeAllListeners(), Hl && (this._beforeunloadEventListener && removeEventListener("beforeunload", this._beforeunloadEventListener, false), this._offlineEventListener)) {
        const i = dc.indexOf(this._offlineEventListener);
        i !== -1 && dc.splice(i, 1);
      }
      this.readyState = "closed", this.id = null, this.emitReserved("close", e, n), this.writeBuffer = [], this._prevBufferLen = 0;
    }
  }
}
Do.protocol = Jm;
class aA extends Do {
  constructor() {
    super(...arguments), this._upgrades = [];
  }
  onOpen() {
    if (super.onOpen(), this.readyState === "open" && this.opts.upgrade) for (let e = 0; e < this._upgrades.length; e++) this._probe(this._upgrades[e]);
  }
  _probe(e) {
    let n = this.createTransport(e), i = false;
    Do.priorWebsocketSuccess = false;
    const u = () => {
      i || (n.send([{ type: "ping", data: "probe" }]), n.once("packet", (f) => {
        if (!i) if (f.type === "pong" && f.data === "probe") {
          if (this.upgrading = true, this.emitReserved("upgrading", n), !n) return;
          Do.priorWebsocketSuccess = n.name === "websocket", this.transport.pause(() => {
            i || this.readyState !== "closed" && (h(), this.setTransport(n), n.send([{ type: "upgrade" }]), this.emitReserved("upgrade", n), n = null, this.upgrading = false, this.flush());
          });
        } else {
          const r = new Error("probe error");
          r.transport = n.name, this.emitReserved("upgradeError", r);
        }
      }));
    };
    function y() {
      i || (i = true, h(), n.close(), n = null);
    }
    const t = (f) => {
      const r = new Error("probe error: " + f);
      r.transport = n.name, y(), this.emitReserved("upgradeError", r);
    };
    function o() {
      t("transport closed");
    }
    function s() {
      t("socket closed");
    }
    function c(f) {
      n && f.name !== n.name && y();
    }
    const h = () => {
      n.removeListener("open", u), n.removeListener("error", t), n.removeListener("close", o), this.off("close", s), this.off("upgrading", c);
    };
    n.once("open", u), n.once("error", t), n.once("close", o), this.once("close", s), this.once("upgrading", c), this._upgrades.indexOf("webtransport") !== -1 && e !== "webtransport" ? this.setTimeoutFn(() => {
      i || n.open();
    }, 200) : n.open();
  }
  onHandshake(e) {
    this._upgrades = this._filterUpgrades(e.upgrades), super.onHandshake(e);
  }
  _filterUpgrades(e) {
    const n = [];
    for (let i = 0; i < e.length; i++) ~this.transports.indexOf(e[i]) && n.push(e[i]);
    return n;
  }
}
let sA = class extends aA {
  constructor(e, n = {}) {
    const i = typeof e == "object" ? e : n;
    (!i.transports || i.transports && typeof i.transports[0] == "string") && (i.transports = (i.transports || ["polling", "websocket", "webtransport"]).map((u) => tA[u]).filter((u) => !!u)), super(e, i);
  }
};
function uA(v, e = "", n) {
  let i = v;
  n = n || typeof location < "u" && location, v == null && (v = n.protocol + "//" + n.host), typeof v == "string" && (v.charAt(0) === "/" && (v.charAt(1) === "/" ? v = n.protocol + v : v = n.host + v), /^(https?|wss?):\/\//.test(v) || (typeof n < "u" ? v = n.protocol + "//" + v : v = "https://" + v), i = zl(v)), i.port || (/^(http|ws)$/.test(i.protocol) ? i.port = "80" : /^(http|ws)s$/.test(i.protocol) && (i.port = "443")), i.path = i.path || "/";
  const y = i.host.indexOf(":") !== -1 ? "[" + i.host + "]" : i.host;
  return i.id = i.protocol + "://" + y + ":" + i.port + e, i.href = i.protocol + "://" + y + (n && n.port === i.port ? "" : ":" + i.port), i;
}
const cA = typeof ArrayBuffer == "function", lA = (v) => typeof ArrayBuffer.isView == "function" ? ArrayBuffer.isView(v) : v.buffer instanceof ArrayBuffer, oy = Object.prototype.toString, fA = typeof Blob == "function" || typeof Blob < "u" && oy.call(Blob) === "[object BlobConstructor]", pA = typeof File == "function" || typeof File < "u" && oy.call(File) === "[object FileConstructor]";
function Sf(v) {
  return cA && (v instanceof ArrayBuffer || lA(v)) || fA && v instanceof Blob || pA && v instanceof File;
}
function mc(v, e) {
  if (!v || typeof v != "object") return false;
  if (Array.isArray(v)) {
    for (let n = 0, i = v.length; n < i; n++) if (mc(v[n])) return true;
    return false;
  }
  if (Sf(v)) return true;
  if (v.toJSON && typeof v.toJSON == "function" && arguments.length === 1) return mc(v.toJSON(), true);
  for (const n in v) if (Object.prototype.hasOwnProperty.call(v, n) && mc(v[n])) return true;
  return false;
}
function hA(v) {
  const e = [], n = v.data, i = v;
  return i.data = Gl(n, e), i.attachments = e.length, { packet: i, buffers: e };
}
function Gl(v, e) {
  if (!v) return v;
  if (Sf(v)) {
    const n = { _placeholder: true, num: e.length };
    return e.push(v), n;
  } else if (Array.isArray(v)) {
    const n = new Array(v.length);
    for (let i = 0; i < v.length; i++) n[i] = Gl(v[i], e);
    return n;
  } else if (typeof v == "object" && !(v instanceof Date)) {
    const n = {};
    for (const i in v) Object.prototype.hasOwnProperty.call(v, i) && (n[i] = Gl(v[i], e));
    return n;
  }
  return v;
}
function dA(v, e) {
  return v.data = Wl(v.data, e), delete v.attachments, v;
}
function Wl(v, e) {
  if (!v) return v;
  if (v && v._placeholder === true) {
    if (typeof v.num == "number" && v.num >= 0 && v.num < e.length) return e[v.num];
    throw new Error("illegal attachments");
  } else if (Array.isArray(v)) for (let n = 0; n < v.length; n++) v[n] = Wl(v[n], e);
  else if (typeof v == "object") for (const n in v) Object.prototype.hasOwnProperty.call(v, n) && (v[n] = Wl(v[n], e));
  return v;
}
const mA = ["connect", "connect_error", "disconnect", "disconnecting", "newListener", "removeListener"], yA = 5;
var Cn;
(function(v) {
  v[v.CONNECT = 0] = "CONNECT", v[v.DISCONNECT = 1] = "DISCONNECT", v[v.EVENT = 2] = "EVENT", v[v.ACK = 3] = "ACK", v[v.CONNECT_ERROR = 4] = "CONNECT_ERROR", v[v.BINARY_EVENT = 5] = "BINARY_EVENT", v[v.BINARY_ACK = 6] = "BINARY_ACK";
})(Cn || (Cn = {}));
class gA {
  constructor(e) {
    this.replacer = e;
  }
  encode(e) {
    return (e.type === Cn.EVENT || e.type === Cn.ACK) && mc(e) ? this.encodeAsBinary({ type: e.type === Cn.EVENT ? Cn.BINARY_EVENT : Cn.BINARY_ACK, nsp: e.nsp, data: e.data, id: e.id }) : [this.encodeAsString(e)];
  }
  encodeAsString(e) {
    let n = "" + e.type;
    return (e.type === Cn.BINARY_EVENT || e.type === Cn.BINARY_ACK) && (n += e.attachments + "-"), e.nsp && e.nsp !== "/" && (n += e.nsp + ","), e.id != null && (n += e.id), e.data != null && (n += JSON.stringify(e.data, this.replacer)), n;
  }
  encodeAsBinary(e) {
    const n = hA(e), i = this.encodeAsString(n.packet), u = n.buffers;
    return u.unshift(i), u;
  }
}
function qd(v) {
  return Object.prototype.toString.call(v) === "[object Object]";
}
class _f extends ri {
  constructor(e) {
    super(), this.reviver = e;
  }
  add(e) {
    let n;
    if (typeof e == "string") {
      if (this.reconstructor) throw new Error("got plaintext data when reconstructing a packet");
      n = this.decodeString(e);
      const i = n.type === Cn.BINARY_EVENT;
      i || n.type === Cn.BINARY_ACK ? (n.type = i ? Cn.EVENT : Cn.ACK, this.reconstructor = new vA(n), n.attachments === 0 && super.emitReserved("decoded", n)) : super.emitReserved("decoded", n);
    } else if (Sf(e) || e.base64) if (this.reconstructor) n = this.reconstructor.takeBinaryData(e), n && (this.reconstructor = null, super.emitReserved("decoded", n));
    else throw new Error("got binary data when not reconstructing a packet");
    else throw new Error("Unknown type: " + e);
  }
  decodeString(e) {
    let n = 0;
    const i = { type: Number(e.charAt(0)) };
    if (Cn[i.type] === void 0) throw new Error("unknown packet type " + i.type);
    if (i.type === Cn.BINARY_EVENT || i.type === Cn.BINARY_ACK) {
      const y = n + 1;
      for (; e.charAt(++n) !== "-" && n != e.length; ) ;
      const t = e.substring(y, n);
      if (t != Number(t) || e.charAt(n) !== "-") throw new Error("Illegal attachments");
      i.attachments = Number(t);
    }
    if (e.charAt(n + 1) === "/") {
      const y = n + 1;
      for (; ++n && !(e.charAt(n) === "," || n === e.length); ) ;
      i.nsp = e.substring(y, n);
    } else i.nsp = "/";
    const u = e.charAt(n + 1);
    if (u !== "" && Number(u) == u) {
      const y = n + 1;
      for (; ++n; ) {
        const t = e.charAt(n);
        if (t == null || Number(t) != t) {
          --n;
          break;
        }
        if (n === e.length) break;
      }
      i.id = Number(e.substring(y, n + 1));
    }
    if (e.charAt(++n)) {
      const y = this.tryParse(e.substr(n));
      if (_f.isPayloadValid(i.type, y)) i.data = y;
      else throw new Error("invalid payload");
    }
    return i;
  }
  tryParse(e) {
    try {
      return JSON.parse(e, this.reviver);
    } catch {
      return false;
    }
  }
  static isPayloadValid(e, n) {
    switch (e) {
      case Cn.CONNECT:
        return qd(n);
      case Cn.DISCONNECT:
        return n === void 0;
      case Cn.CONNECT_ERROR:
        return typeof n == "string" || qd(n);
      case Cn.EVENT:
      case Cn.BINARY_EVENT:
        return Array.isArray(n) && (typeof n[0] == "number" || typeof n[0] == "string" && mA.indexOf(n[0]) === -1);
      case Cn.ACK:
      case Cn.BINARY_ACK:
        return Array.isArray(n);
    }
  }
  destroy() {
    this.reconstructor && (this.reconstructor.finishedReconstruction(), this.reconstructor = null);
  }
}
class vA {
  constructor(e) {
    this.packet = e, this.buffers = [], this.reconPack = e;
  }
  takeBinaryData(e) {
    if (this.buffers.push(e), this.buffers.length === this.reconPack.attachments) {
      const n = dA(this.reconPack, this.buffers);
      return this.finishedReconstruction(), n;
    }
    return null;
  }
  finishedReconstruction() {
    this.reconPack = null, this.buffers = [];
  }
}
const bA = Object.freeze(Object.defineProperty({ __proto__: null, Decoder: _f, Encoder: gA, get PacketType() {
  return Cn;
}, protocol: yA }, Symbol.toStringTag, { value: "Module" }));
function Ki(v, e, n) {
  return v.on(e, n), function() {
    v.off(e, n);
  };
}
const wA = Object.freeze({ connect: 1, connect_error: 1, disconnect: 1, disconnecting: 1, newListener: 1, removeListener: 1 });
class ay extends ri {
  constructor(e, n, i) {
    super(), this.connected = false, this.recovered = false, this.receiveBuffer = [], this.sendBuffer = [], this._queue = [], this._queueSeq = 0, this.ids = 0, this.acks = {}, this.flags = {}, this.io = e, this.nsp = n, i && i.auth && (this.auth = i.auth), this._opts = Object.assign({}, i), this.io._autoConnect && this.open();
  }
  get disconnected() {
    return !this.connected;
  }
  subEvents() {
    if (this.subs) return;
    const e = this.io;
    this.subs = [Ki(e, "open", this.onopen.bind(this)), Ki(e, "packet", this.onpacket.bind(this)), Ki(e, "error", this.onerror.bind(this)), Ki(e, "close", this.onclose.bind(this))];
  }
  get active() {
    return !!this.subs;
  }
  connect() {
    return this.connected ? this : (this.subEvents(), this.io._reconnecting || this.io.open(), this.io._readyState === "open" && this.onopen(), this);
  }
  open() {
    return this.connect();
  }
  send(...e) {
    return e.unshift("message"), this.emit.apply(this, e), this;
  }
  emit(e, ...n) {
    var i, u, y;
    if (wA.hasOwnProperty(e)) throw new Error('"' + e.toString() + '" is a reserved event name');
    if (n.unshift(e), this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) return this._addToQueue(n), this;
    const t = { type: Cn.EVENT, data: n };
    if (t.options = {}, t.options.compress = this.flags.compress !== false, typeof n[n.length - 1] == "function") {
      const h = this.ids++, f = n.pop();
      this._registerAckCallback(h, f), t.id = h;
    }
    const o = (u = (i = this.io.engine) === null || i === void 0 ? void 0 : i.transport) === null || u === void 0 ? void 0 : u.writable, s = this.connected && !(!((y = this.io.engine) === null || y === void 0) && y._hasPingExpired());
    return this.flags.volatile && !o || (s ? (this.notifyOutgoingListeners(t), this.packet(t)) : this.sendBuffer.push(t)), this.flags = {}, this;
  }
  _registerAckCallback(e, n) {
    var i;
    const u = (i = this.flags.timeout) !== null && i !== void 0 ? i : this._opts.ackTimeout;
    if (u === void 0) {
      this.acks[e] = n;
      return;
    }
    const y = this.io.setTimeoutFn(() => {
      delete this.acks[e];
      for (let o = 0; o < this.sendBuffer.length; o++) this.sendBuffer[o].id === e && this.sendBuffer.splice(o, 1);
      n.call(this, new Error("operation has timed out"));
    }, u), t = (...o) => {
      this.io.clearTimeoutFn(y), n.apply(this, o);
    };
    t.withError = true, this.acks[e] = t;
  }
  emitWithAck(e, ...n) {
    return new Promise((i, u) => {
      const y = (t, o) => t ? u(t) : i(o);
      y.withError = true, n.push(y), this.emit(e, ...n);
    });
  }
  _addToQueue(e) {
    let n;
    typeof e[e.length - 1] == "function" && (n = e.pop());
    const i = { id: this._queueSeq++, tryCount: 0, pending: false, args: e, flags: Object.assign({ fromQueue: true }, this.flags) };
    e.push((u, ...y) => i !== this._queue[0] ? void 0 : (u !== null ? i.tryCount > this._opts.retries && (this._queue.shift(), n && n(u)) : (this._queue.shift(), n && n(null, ...y)), i.pending = false, this._drainQueue())), this._queue.push(i), this._drainQueue();
  }
  _drainQueue(e = false) {
    if (!this.connected || this._queue.length === 0) return;
    const n = this._queue[0];
    n.pending && !e || (n.pending = true, n.tryCount++, this.flags = n.flags, this.emit.apply(this, n.args));
  }
  packet(e) {
    e.nsp = this.nsp, this.io._packet(e);
  }
  onopen() {
    typeof this.auth == "function" ? this.auth((e) => {
      this._sendConnectPacket(e);
    }) : this._sendConnectPacket(this.auth);
  }
  _sendConnectPacket(e) {
    this.packet({ type: Cn.CONNECT, data: this._pid ? Object.assign({ pid: this._pid, offset: this._lastOffset }, e) : e });
  }
  onerror(e) {
    this.connected || this.emitReserved("connect_error", e);
  }
  onclose(e, n) {
    this.connected = false, delete this.id, this.emitReserved("disconnect", e, n), this._clearAcks();
  }
  _clearAcks() {
    Object.keys(this.acks).forEach((e) => {
      if (!this.sendBuffer.some((i) => String(i.id) === e)) {
        const i = this.acks[e];
        delete this.acks[e], i.withError && i.call(this, new Error("socket has been disconnected"));
      }
    });
  }
  onpacket(e) {
    if (e.nsp === this.nsp) switch (e.type) {
      case Cn.CONNECT:
        e.data && e.data.sid ? this.onconnect(e.data.sid, e.data.pid) : this.emitReserved("connect_error", new Error("It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)"));
        break;
      case Cn.EVENT:
      case Cn.BINARY_EVENT:
        this.onevent(e);
        break;
      case Cn.ACK:
      case Cn.BINARY_ACK:
        this.onack(e);
        break;
      case Cn.DISCONNECT:
        this.ondisconnect();
        break;
      case Cn.CONNECT_ERROR:
        this.destroy();
        const i = new Error(e.data.message);
        i.data = e.data.data, this.emitReserved("connect_error", i);
        break;
    }
  }
  onevent(e) {
    const n = e.data || [];
    e.id != null && n.push(this.ack(e.id)), this.connected ? this.emitEvent(n) : this.receiveBuffer.push(Object.freeze(n));
  }
  emitEvent(e) {
    if (this._anyListeners && this._anyListeners.length) {
      const n = this._anyListeners.slice();
      for (const i of n) i.apply(this, e);
    }
    super.emit.apply(this, e), this._pid && e.length && typeof e[e.length - 1] == "string" && (this._lastOffset = e[e.length - 1]);
  }
  ack(e) {
    const n = this;
    let i = false;
    return function(...u) {
      i || (i = true, n.packet({ type: Cn.ACK, id: e, data: u }));
    };
  }
  onack(e) {
    const n = this.acks[e.id];
    typeof n == "function" && (delete this.acks[e.id], n.withError && e.data.unshift(null), n.apply(this, e.data));
  }
  onconnect(e, n) {
    this.id = e, this.recovered = n && this._pid === n, this._pid = n, this.connected = true, this.emitBuffered(), this.emitReserved("connect"), this._drainQueue(true);
  }
  emitBuffered() {
    this.receiveBuffer.forEach((e) => this.emitEvent(e)), this.receiveBuffer = [], this.sendBuffer.forEach((e) => {
      this.notifyOutgoingListeners(e), this.packet(e);
    }), this.sendBuffer = [];
  }
  ondisconnect() {
    this.destroy(), this.onclose("io server disconnect");
  }
  destroy() {
    this.subs && (this.subs.forEach((e) => e()), this.subs = void 0), this.io._destroy(this);
  }
  disconnect() {
    return this.connected && this.packet({ type: Cn.DISCONNECT }), this.destroy(), this.connected && this.onclose("io client disconnect"), this;
  }
  close() {
    return this.disconnect();
  }
  compress(e) {
    return this.flags.compress = e, this;
  }
  get volatile() {
    return this.flags.volatile = true, this;
  }
  timeout(e) {
    return this.flags.timeout = e, this;
  }
  onAny(e) {
    return this._anyListeners = this._anyListeners || [], this._anyListeners.push(e), this;
  }
  prependAny(e) {
    return this._anyListeners = this._anyListeners || [], this._anyListeners.unshift(e), this;
  }
  offAny(e) {
    if (!this._anyListeners) return this;
    if (e) {
      const n = this._anyListeners;
      for (let i = 0; i < n.length; i++) if (e === n[i]) return n.splice(i, 1), this;
    } else this._anyListeners = [];
    return this;
  }
  listenersAny() {
    return this._anyListeners || [];
  }
  onAnyOutgoing(e) {
    return this._anyOutgoingListeners = this._anyOutgoingListeners || [], this._anyOutgoingListeners.push(e), this;
  }
  prependAnyOutgoing(e) {
    return this._anyOutgoingListeners = this._anyOutgoingListeners || [], this._anyOutgoingListeners.unshift(e), this;
  }
  offAnyOutgoing(e) {
    if (!this._anyOutgoingListeners) return this;
    if (e) {
      const n = this._anyOutgoingListeners;
      for (let i = 0; i < n.length; i++) if (e === n[i]) return n.splice(i, 1), this;
    } else this._anyOutgoingListeners = [];
    return this;
  }
  listenersAnyOutgoing() {
    return this._anyOutgoingListeners || [];
  }
  notifyOutgoingListeners(e) {
    if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {
      const n = this._anyOutgoingListeners.slice();
      for (const i of n) i.apply(this, e.data);
    }
  }
}
function Da(v) {
  v = v || {}, this.ms = v.min || 100, this.max = v.max || 1e4, this.factor = v.factor || 2, this.jitter = v.jitter > 0 && v.jitter <= 1 ? v.jitter : 0, this.attempts = 0;
}
Da.prototype.duration = function() {
  var v = this.ms * Math.pow(this.factor, this.attempts++);
  if (this.jitter) {
    var e = Math.random(), n = Math.floor(e * this.jitter * v);
    v = (Math.floor(e * 10) & 1) == 0 ? v - n : v + n;
  }
  return Math.min(v, this.max) | 0;
};
Da.prototype.reset = function() {
  this.attempts = 0;
};
Da.prototype.setMin = function(v) {
  this.ms = v;
};
Da.prototype.setMax = function(v) {
  this.max = v;
};
Da.prototype.setJitter = function(v) {
  this.jitter = v;
};
class Kl extends ri {
  constructor(e, n) {
    var i;
    super(), this.nsps = {}, this.subs = [], e && typeof e == "object" && (n = e, e = void 0), n = n || {}, n.path = n.path || "/socket.io", this.opts = n, Oc(this, n), this.reconnection(n.reconnection !== false), this.reconnectionAttempts(n.reconnectionAttempts || 1 / 0), this.reconnectionDelay(n.reconnectionDelay || 1e3), this.reconnectionDelayMax(n.reconnectionDelayMax || 5e3), this.randomizationFactor((i = n.randomizationFactor) !== null && i !== void 0 ? i : 0.5), this.backoff = new Da({ min: this.reconnectionDelay(), max: this.reconnectionDelayMax(), jitter: this.randomizationFactor() }), this.timeout(n.timeout == null ? 2e4 : n.timeout), this._readyState = "closed", this.uri = e;
    const u = n.parser || bA;
    this.encoder = new u.Encoder(), this.decoder = new u.Decoder(), this._autoConnect = n.autoConnect !== false, this._autoConnect && this.open();
  }
  reconnection(e) {
    return arguments.length ? (this._reconnection = !!e, e || (this.skipReconnect = true), this) : this._reconnection;
  }
  reconnectionAttempts(e) {
    return e === void 0 ? this._reconnectionAttempts : (this._reconnectionAttempts = e, this);
  }
  reconnectionDelay(e) {
    var n;
    return e === void 0 ? this._reconnectionDelay : (this._reconnectionDelay = e, (n = this.backoff) === null || n === void 0 || n.setMin(e), this);
  }
  randomizationFactor(e) {
    var n;
    return e === void 0 ? this._randomizationFactor : (this._randomizationFactor = e, (n = this.backoff) === null || n === void 0 || n.setJitter(e), this);
  }
  reconnectionDelayMax(e) {
    var n;
    return e === void 0 ? this._reconnectionDelayMax : (this._reconnectionDelayMax = e, (n = this.backoff) === null || n === void 0 || n.setMax(e), this);
  }
  timeout(e) {
    return arguments.length ? (this._timeout = e, this) : this._timeout;
  }
  maybeReconnectOnOpen() {
    !this._reconnecting && this._reconnection && this.backoff.attempts === 0 && this.reconnect();
  }
  open(e) {
    if (~this._readyState.indexOf("open")) return this;
    this.engine = new sA(this.uri, this.opts);
    const n = this.engine, i = this;
    this._readyState = "opening", this.skipReconnect = false;
    const u = Ki(n, "open", function() {
      i.onopen(), e && e();
    }), y = (o) => {
      this.cleanup(), this._readyState = "closed", this.emitReserved("error", o), e ? e(o) : this.maybeReconnectOnOpen();
    }, t = Ki(n, "error", y);
    if (this._timeout !== false) {
      const o = this._timeout, s = this.setTimeoutFn(() => {
        u(), y(new Error("timeout")), n.close();
      }, o);
      this.opts.autoUnref && s.unref(), this.subs.push(() => {
        this.clearTimeoutFn(s);
      });
    }
    return this.subs.push(u), this.subs.push(t), this;
  }
  connect(e) {
    return this.open(e);
  }
  onopen() {
    this.cleanup(), this._readyState = "open", this.emitReserved("open");
    const e = this.engine;
    this.subs.push(Ki(e, "ping", this.onping.bind(this)), Ki(e, "data", this.ondata.bind(this)), Ki(e, "error", this.onerror.bind(this)), Ki(e, "close", this.onclose.bind(this)), Ki(this.decoder, "decoded", this.ondecoded.bind(this)));
  }
  onping() {
    this.emitReserved("ping");
  }
  ondata(e) {
    try {
      this.decoder.add(e);
    } catch (n) {
      this.onclose("parse error", n);
    }
  }
  ondecoded(e) {
    kc(() => {
      this.emitReserved("packet", e);
    }, this.setTimeoutFn);
  }
  onerror(e) {
    this.emitReserved("error", e);
  }
  socket(e, n) {
    let i = this.nsps[e];
    return i ? this._autoConnect && !i.active && i.connect() : (i = new ay(this, e, n), this.nsps[e] = i), i;
  }
  _destroy(e) {
    const n = Object.keys(this.nsps);
    for (const i of n) if (this.nsps[i].active) return;
    this._close();
  }
  _packet(e) {
    const n = this.encoder.encode(e);
    for (let i = 0; i < n.length; i++) this.engine.write(n[i], e.options);
  }
  cleanup() {
    this.subs.forEach((e) => e()), this.subs.length = 0, this.decoder.destroy();
  }
  _close() {
    this.skipReconnect = true, this._reconnecting = false, this.onclose("forced close");
  }
  disconnect() {
    return this._close();
  }
  onclose(e, n) {
    var i;
    this.cleanup(), (i = this.engine) === null || i === void 0 || i.close(), this.backoff.reset(), this._readyState = "closed", this.emitReserved("close", e, n), this._reconnection && !this.skipReconnect && this.reconnect();
  }
  reconnect() {
    if (this._reconnecting || this.skipReconnect) return this;
    const e = this;
    if (this.backoff.attempts >= this._reconnectionAttempts) this.backoff.reset(), this.emitReserved("reconnect_failed"), this._reconnecting = false;
    else {
      const n = this.backoff.duration();
      this._reconnecting = true;
      const i = this.setTimeoutFn(() => {
        e.skipReconnect || (this.emitReserved("reconnect_attempt", e.backoff.attempts), !e.skipReconnect && e.open((u) => {
          u ? (e._reconnecting = false, e.reconnect(), this.emitReserved("reconnect_error", u)) : e.onreconnect();
        }));
      }, n);
      this.opts.autoUnref && i.unref(), this.subs.push(() => {
        this.clearTimeoutFn(i);
      });
    }
  }
  onreconnect() {
    const e = this.backoff.attempts;
    this._reconnecting = false, this.backoff.reset(), this.emitReserved("reconnect", e);
  }
}
const Ps = {};
function yc(v, e) {
  typeof v == "object" && (e = v, v = void 0), e = e || {};
  const n = uA(v, e.path || "/socket.io"), i = n.source, u = n.id, y = n.path, t = Ps[u] && y in Ps[u].nsps, o = e.forceNew || e["force new connection"] || e.multiplex === false || t;
  let s;
  return o ? s = new Kl(i, e) : (Ps[u] || (Ps[u] = new Kl(i, e)), s = Ps[u]), n.query && !e.query && (e.query = n.queryKey), s.socket(n.path, e);
}
Object.assign(yc, { Manager: Kl, Socket: ay, io: yc, connect: yc });
let xi = yc(window.location.toString(), { reconnection: true, reconnectionAttempts: 10, reconnectionDelay: 250, reconnectionDelayMax: 2e3, ackTimeout: 1e3 });
function Pc(v, e) {
  const n = Jr("#connectionStatus"), i = Jr("#innerConnectionStatus"), u = () => n.children(".status-icon").attr("id", "").removeClass().addClass("status-icon");
  switch (v) {
    case "connected":
      u().addClass(v), i.text("Connected to server.");
      break;
    case "disconnected":
      break;
    case "reconnecting":
      let y = "Reconnecting...";
      (e ?? 0) < 0 ? (y = "Reconnecting failed... click the icon to try again.", u().addClass("disconnected").attr("id", "reconnectBtn"), Jr("#reconnectBtn").on("click", () => {
        xi.connect();
      })) : (u().addClass("connecting"), (e ?? 0) > 1 && (y += ` (attempt ${e}).`)), i.text(y);
      break;
    default:
      console.error(`Unexpected server status: ${v}.`);
  }
}
xi.on("connect", () => {
  Pc("connected");
});
xi.on("disconnect", () => {
  Pc("disconnected");
});
xi.io.on("reconnect_attempt", (v) => {
  Pc("reconnecting", v);
});
xi.io.on("reconnect_failed", () => {
  Pc("reconnecting", -1);
});
function gc(v) {
  const e = Jr(".waiting-modal-content");
  zd(), e.append(Jr("<button>").addClass("close-button").on("click", () => {
    e.children(".error-icon").removeClass("error-icon").addClass("spinner"), zd(), Jr("#wait-status").text(""), Jr("#waitingModal").hide(), v && v();
  }).html("&times;"));
}
function zd() {
  Jr(".waiting-modal-content button").remove();
}
function Cs(v) {
  const e = Jr(".waiting-modal-content");
  Jr("#wait-status").text(v), e.children(".spinner").removeClass("spinner").addClass("error-icon"), gc();
}
function SA(v, e = "#eee", n = 3e3) {
  debugger;
  let i = Jr("#popup");
  i.length === 0 && (i = Jr('<div id="popup">').addClass("popup"), Jr(document.body).append(i)), i.html(v).css("color", e).removeClass("hide"), i.get(0).offsetWidth, i.addClass("show"), setTimeout(() => {
    i.removeClass("show"), i.addClass("hide");
  }, n);
}
function Hd(v) {
  const e = Jr("#topPopup").text(v);
  e.addClass("show"), e.on("animationend", () => {
    e.removeClass("show");
  });
}
function Gd(v) {
  const e = fc.basicNodeSigner(v, Sc);
  class n {
    constructor() {
      __publicField(this, "signTransaction", e.signTransaction);
      __publicField(this, "signAuthEntry", e.signAuthEntry);
    }
    getAddress() {
      return Promise.resolve({ address: v.publicKey() });
    }
    isConnected() {
      return Promise.resolve({ isConnected: true });
    }
    requestAccess() {
      return this.getAddress();
    }
    getNetwork() {
      return Promise.resolve({ network: "TESTNET", networkPassphrase: Sc });
    }
    kp() {
      return v;
    }
  }
  return new n();
}
globalThis.Buffer = window.Buffer = Xl.Buffer;
async function Wd() {
  let v, e, n, i;
  function u() {
    window.localStorage.clear(), window.location.href = "/";
  }
  async function y() {
    switch (window.localStorage.getItem("walletMethod")) {
      case "import":
        let [N, H] = ["username", "secretKey"].map((ue) => window.localStorage.getItem(ue));
        e = N, n = Yn.Keypair.fromSecret(H), v = Gd(n), console.debug(`Logged in ${e} as ${(await v.getAddress()).address}`);
        break;
      case "generate":
        Jr("#waitingModal").css("display", "flex"), Jr("#wait-status").text("Generating account w/ play money...");
        const _ = new Ao.Server(Ns);
        e = window.localStorage.getItem("username"), n = Yn.Keypair.random(), await _.requestAirdrop(n.publicKey()), Jr("#wait-status").text(`Account ${n.publicKey().substring(0, 6)}... funded!`), gc(), window.localStorage.setItem("secretKey", n.secret()), window.localStorage.setItem("walletMethod", "import"), v = Gd(n);
        break;
      case "freighter":
        const { isConnected: x } = await xu.isConnected();
        x || u();
        const { address: L, error: j } = await xu.requestAccess();
        L || (alert(`Failed to connect to Freighter: ${j}`), u());
        const { network: z, networkPassphrase: Z } = await xu.getNetwork();
        Z != Sc && (console.error(z, Z), alert("Account is on the wrong network! Use testnet pls."), u()), v = xu, e = window.localStorage.getItem("username"), n = Yn.Keypair.fromPublicKey(await F());
        break;
      default:
        alert("Invalid login! Redirecting to login page..."), u();
    }
  }
  window.localStorage.getItem("signedUp") || u(), await y();
  const t = new AE(), o = await gf(v), s = new vE(".game-area", { theme_surface: "taverntable", theme_texture: "wood", theme_material: "wood", sounds: true, sound_dieMaterial: "wood", strength: 2.5, light_intensity: 1, gravity_multiplier: 600, baseScale: 100 });
  async function c() {
    Jr("#username").text(e), Jr("#account-id").text(`${n.publicKey().substring(0, 8)}...`).attr("title", `${n.publicKey()} (click to copy)`).on("click", () => {
      navigator.clipboard.writeText(n.publicKey());
    }), s.initialize(), I(), o.wager().then((N) => {
      Jr("#wager").text((N.result / Ca).toString());
    }), Jr(".deposit").on("click", g), Jr(".withdraw").on("click", a), Jr(".refresh").on("click", () => I()), Jr("#play").on("click", m), Jr("#logout").on("click", () => {
      window.localStorage.clear(), window.location.href = "/";
    }), Jr("#holdReroll").on("click", () => d(false)), Jr("#holdPass").on("click", () => d(true)), xi.onAny((N, ...H) => console.debug(N, ...H)), xi.on("auth_request", h), xi.on("match_start", r), xi.on("match_error", f), t.on("roll", b), t.on("reroll", S), t.on("bust", E), t.on("win", R);
  }
  async function h(N) {
    Jr("#wait-status").text("Authorizing game...");
    let H = 0;
    const { network: _, networkPassphrase: x } = await v.getNetwork();
    switch (_) {
      case "TESTNET":
        H = (await new Ao.Server(Ns).getLatestLedger()).sequence + Math.floor(60 / 5);
        break;
      default:
        throw `Wrong network: ${_}.`;
    }
    const L = Yn.xdr.SorobanAuthorizationEntry.fromXDR(N.entry, "base64");
    return console.log(L.toXDR("base64")), Yn.authorizeEntry(L, async (j) => {
      console.log("Signing payload:", j.toXDR("base64"));
      let z;
      const { signedAuthEntry: Z, signerAddress: ue } = await v.signAuthEntry(j.toXDR("base64"), { address: n.publicKey(), networkPassphrase: Sc });
      if (console.log("Auth result:", Z, ue), !Z || z) throw z;
      let $;
      return typeof Z == "string" ? $ = Xl.Buffer.from(Z, "base64") : $ = Z, { signature: $, publicKey: n.publicKey() };
    }, H, x).then((j) => {
      xi.emit("auth_response", { match_id: N.match_id, player: n.publicKey(), entry: j.toXDR("base64") });
    }, (j) => {
      Jr("#wait-status").text(`Authorization failed: ${(j == null ? void 0 : j.message) ?? JSON.stringify(j)}`), setTimeout(() => Jr("#waitingModal").hide(), 2e3);
    });
  }
  async function f(N) {
    Jr("#play").attr("disabled"), Cs(N.error ?? JSON.stringify(N));
  }
  async function r(N) {
    I(), Jr("#wait-status").text("Joined!"), Jr("#waitingModal").hide(), Jr("#play").attr("disabled", "disabled"), Jr(".scoreboard").show(), Jr(".chat-panel").show();
    const [H, _] = N.match_id.split("|"), x = n.publicKey();
    i = H === x ? _ : H;
    const L = N.users.filter((j) => j !== e)[0];
    if (Jr("#name").text(e).attr("title", x), Jr("#opponent-name").text(L).attr("title", i), t.listen([H, _]), N.first_player === x) {
      let j = 0;
      for (; j++ < 5; ) try {
        const z = await l(v, i, "Building first roll transaction...");
        await s.roll(k(z));
        break;
      } catch (z) {
        console.error(z);
      }
    }
  }
  async function m() {
    xi.disconnected ? Cs("Not connected to server :( Try refreshing?") : xi.emit("join", { address: n.publicKey(), username: e }, (N) => {
      console.log("Ack:", N), Jr("#wait-status").text("Waiting for opponent..."), Jr("#waitingModal").css("display", "flex");
    }), gc(() => {
      xi.disconnect(), xi.connect();
    });
  }
  async function g() {
    return Jr("#wait-status").text("Depositing 20 XLM..."), Jr("#waitingModal").css("display", "flex"), console.debug("Depositing 20 XLM into the contract..."), Vl(await o.deposit({ to: n.publicKey(), amount: 20n * Ca }).then((N) => (Jr("#wait-status").text("Authorizing & sending deposit transaction..."), N))).then(() => {
      Jr("#waitingModal").hide(), I();
    }, (N) => {
      Cs(`Authorization failed! Reason: ${N.message}`);
    });
  }
  async function a() {
    return Jr("#wait-status").text("Withdrawing funds..."), Jr("#waitingModal").css("display", "flex"), console.debug("Withdrawing all XLM from the contract..."), Vl(await o.withdraw({ from: n.publicKey() }).then((N) => (Jr("#wait-status").text("Authorizing & sending withdrawal transaction..."), N))).then(() => {
      Jr("#waitingModal").hide(), I();
    }, (N) => {
      Cs(`Authorization failed! Reason: ${N.message}`);
    });
  }
  function l(N, H, _, x, L) {
    return Jr("#wait-status").text(_ ?? "Building roll transaction..."), Jr("#waitingModal").css("display", "flex"), console.debug(`Rolling against ${H}, saving ${x} and stop: ${L}`), kE(N, H, x, L).then((j) => (Jr("#waitingModal").hide(), j), (j) => (Cs(`Authorization failed! Reason: ${j.message}`), Promise.reject(j)));
  }
  async function d(N) {
    Jr("#dicePanel").hide();
    const H = Jr(".die.active").map(function() {
      return parseInt(Jr(this).text());
    }).toArray(), _ = Jr(".die.active").map(function() {
      return parseInt(Jr(this).data("index"));
    }).toArray();
    let x = "Building roll transaction to save ";
    if (N) x += `${Ju(H)} and pass...`;
    else {
      let L = Jr(".die").length - _.length;
      L <= 0 && (L = 6);
      const j = L === 1 ? "die" : "dice";
      x += `${Ju(H)} and re-roll ${L} ${j}...`;
    }
    try {
      const L = await l(v, i, x, _, N);
      L.length > 0 && s.roll(k(L));
    } catch (L) {
      console.error(`Caught error, letting player re-choose: ${L}`), w(Jr(".die").map(function() {
        return parseInt(Jr(this).text());
      }).toArray());
    }
  }
  async function b(N) {
    const H = N.detail;
    if (H.dice.length === 0) {
      const _ = H.player === n.publicKey() ? "their" : "your";
      if (SA(`It's ${_} turn!`), _ === "your") try {
        const x = await l(v, i);
        await s.roll(k(x));
      } catch {
        w(H.dice);
      }
      return;
    }
    H.player === n.publicKey() ? (await Dd(3e3), w(H.dice)) : await s.roll(k(H.dice));
  }
  async function S(N) {
    const H = N.detail;
    if (H.player !== n.publicKey() && H.dice.length > 0) {
      const j = Jr("#opponent-name").text(), z = Ju(H.dice), Z = H.stop ? " and passed to you" : "";
      Hd(`${j} kept ${z} for ${H.score} points${Z}.`);
    }
    let _ = H.player !== n.publicKey() ? "opponent-" : "", x = Jr(`#${_}turn-score`);
    const L = parseInt(x.text());
    if (x.text(L + H.score), H.stop) {
      const j = Jr(`#${_}total-score`);
      j.text(parseInt(j.text()) + L + H.score), x.text("0");
    }
  }
  async function E(N) {
    const H = N.detail;
    await s.roll(k(H.dice));
    const _ = H.player === n.publicKey();
    Hd(`${_ ? "You" : "Opponent"} busted with ${Ju(H.dice)}!`), Jr(`#${_ ? "" : "opponent-"}turn-score`).text("0"), _ || (await Dd(3e3), l(v, i, "Building a fresh roll transaction..."));
  }
  async function R(N) {
    const H = N.detail;
    s.clearDice(), H.player === n.publicKey() ? Jr("#wait-status").text(`You won with ${H.score} points! Winnings have been transferred to your account.`) : Jr("#wait-status").text(`You lost :( Your opponent finished with ${H.score} points.`), gc(() => {
      I(), Jr("#waitingModal").css("display", "flex"), Jr(".scoreboard").fadeOut(), Jr(".chat-panel").fadeOut(), Jr("#play").attr("disabled");
    });
  }
  function k(N) {
    const H = `${N.length}d6@${N.map((_) => _.toString()).join(",")}`;
    return console.info("Rolling", H), H;
  }
  function w(N) {
    const H = Jr(".dice-container").html("");
    N.forEach((_, x) => {
      const L = Jr("<div>");
      L.addClass("die").text(_).data("index", x).on("click", () => L.toggleClass("active")), H.append(L);
    }), Jr("#dicePanel").show();
  }
  async function F() {
    const { address: N } = await v.getAddress();
    return N;
  }
  async function I() {
    console.log(`Refreshing balances for ${n.publicKey().substring(0, 6)}...`);
    let { element: N, oldBalance: H, newBalance: _ } = await xE(v);
    q(N, H, _), { element: N, oldBalance: H, newBalance: _ } = await TE(v), q(N, H, _);
  }
  function q(N, H, _) {
    const x = parseFloat(_) - parseFloat(H);
    if (Math.round(x) === 0) return;
    const L = Jr("<span>").addClass("balance-change");
    L.addClass(x > 0 ? "win" : "loss").text(`${x > 0 ? "+" : ""}${x.toFixed(2)}`), N.parent().append(L), setTimeout(() => L.remove(), 2500);
  }
  c();
}
Jr(() => {
  if (localStorage.getItem("signedUp")) {
    Jr("#landingContainer").hide(), Jr(".container").show(), Wd();
    return;
  }
  Jr("#landingForm").on("change", () => {
    Jr("#methodImport").is(":checked") ? Jr("#importKeyField").show() : Jr("#importKeyField").hide();
  }), Jr("#landingForm").on("submit", (v) => {
    v.preventDefault();
    const e = Jr("#form-username").val().trim(), n = Jr("input[name='walletMethod']:checked").val(), i = Jr("#secretKey").val().trim();
    if (i && !Yn.StrKey.isValidEd25519SecretSeed(i)) {
      alert("Invalid secret key format!");
      return;
    }
    localStorage.setItem("signedUp", "true"), localStorage.setItem("username", e), localStorage.setItem("walletMethod", n), n === "import" ? localStorage.setItem("secretKey", i) : localStorage.removeItem("secretKey"), Jr("#landingContainer").hide(), Jr(".container").show(), Wd();
  });
});
